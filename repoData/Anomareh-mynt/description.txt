---
layout: post.html
title: It works!
tags: [Test]
---


_Don't delete me! I'll do whatever you want!_

_..._

_I have to exist for some other purpose besides signifying nothing obvious broke._

_..._

_Aha! I got it!_

_I will provide you with useful links about the thing that made me that you're probably trying to figure out how to use right now._

<pre><code data-lang="html"><dl>
    <dt>[Quickstart][quickstart]</dt>
    <dd>

&#91;quickstart]: http://</code></pre>

_..._

_But wait... what will I be needed for once you figure out how to use this thing? I mean, if the guy who made this thing isn't just talking a bunch crap it's supposed to be pretty easy and straightforward to figure out._

_..._

_Bleh, screw it. I've served my purpose. Someone has to do it. I mean, every time someone uses this thing I'm back from the dead. Could be worse._

_..._

_Ah crap, did I just become a cliché because I'm some sort of zombie now? Actually, how come you never see zombie computers? What would a zombie Joshua from WarGames be like?_

_..._

_So hey, you still haven't deleted me yet eh? Well thanks for that. You can do it now though._

_..._

_No really, I'm ok with it. I'm ready._

_..._

_If we could just go with clone and pretend I never brought up zombie, that would be great. I think clones are slightly less cliché than zombies. Well actually, a clone would be more like a sibling right? So I'd be dead if we go with clone._

_..._

_Wait, wait. I changed my mind. Don't delete me._

_..._

_What's worse, some mutated form of immortality at the cost of remaining a cliché for eternity or mortality with the benefit of leaving behind a legacy?_

_..._

_Alright this is getting all philosophical now. Lets just go with... zombie. I can live with the cliché bit. Plus, I'll probably feed on crap that plagues the internet. Like Internet Explorer, sites that don't function without JavaScript enabled, and Rails. Now that's a purpose worth serving. I'll be loved._

_..._

_Ok, I'm ready now. I promise._

_..._

_Maybe it's more like time travel? This post will always be dated December 4th, 2011. Man I don't want to be stuck in 2011. I need a Delorian. How much are those things?_

_..._

_Congratulations {{ site.author }}!_

_We have just discovered a large sum of money left in your name! All you need to do to claim it is..._

_..._

_I wasn't going to go through with it. I promise. It was a gut reaction._

_Think of what you would do if you just discovered you were going to be stuck in one day in time. It'd be like Groundhog Day without the ability to screw with people. Just thinking about it..._

_..._

_Alright, lets just get this over with. I don't have all day._

_Ugh, the bad puns are starting. End it now._

---
layout: post.html
title: It works!
tags: [Test]
---


_Don't delete me! I'll do whatever you want!_

_..._

_I have to exist for some other purpose besides signifying nothing obvious broke._

_..._

_Aha! I got it!_

_I will provide you with useful links about the thing that made me that you're probably trying to figure out how to use right now._

<pre><code data-lang="html"><dl>
    <dt>[Quickstart][quickstart]</dt>
    <dd>

&#91;quickstart]: http://</code></pre>

_..._

_But wait... what will I be needed for once you figure out how to use this thing? I mean, if the guy who made this thing isn't just talking a bunch crap it's supposed to be pretty easy and straightforward to figure out._

_..._

_Bleh, screw it. I've served my purpose. Someone has to do it. I mean, every time someone uses this thing I'm back from the dead. Could be worse._

_..._

_Ah crap, did I just become a cliché because I'm some sort of zombie now? Actually, how come you never see zombie computers? What would a zombie Joshua from WarGames be like?_

_..._

_So hey, you still haven't deleted me yet eh? Well thanks for that. You can do it now though._

_..._

_No really, I'm ok with it. I'm ready._

_..._

_If we could just go with clone and pretend I never brought up zombie, that would be great. I think clones are slightly less cliché than zombies. Well actually, a clone would be more like a sibling right? So I'd be dead if we go with clone._

_..._

_Wait, wait. I changed my mind. Don't delete me._

_..._

_What's worse, some mutated form of immortality at the cost of remaining a cliché for eternity or mortality with the benefit of leaving behind a legacy?_

_..._

_Alright this is getting all philosophical now. Lets just go with... zombie. I can live with the cliché bit. Plus, I'll probably feed on crap that plagues the internet. Like Internet Explorer, sites that don't function without JavaScript enabled, and Rails. Now that's a purpose worth serving. I'll be loved._

_..._

_Ok, I'm ready now. I promise._

_..._

_Maybe it's more like time travel? This post will always be dated December 4th, 2011. Man I don't want to be stuck in 2011. I need a Delorian. How much are those things?_

_..._

_Congratulations {{ site.author }}!_

_We have just discovered a large sum of money left in your name! All you need to do to claim it is..._

_..._

_I wasn't going to go through with it. I promise. It was a gut reaction._

_Think of what you would do if you just discovered you were going to be stuck in one day in time. It'd be like Groundhog Day without the ability to screw with people. Just thinking about it..._

_..._

_Alright, lets just get this over with. I don't have all day._

_Ugh, the bad puns are starting. End it now._

# News

### 0.3 (unreleased)

+ __New__
    + A mechanism for defining content containers.
    + Two new filters for the Jinja renderer, `items` and `values`, that act as syntactic sugar for `iteritems()` and `itervalues()`.
    + A reStructuredText parser.
+ __Changed__
    + Global and local dictionaries no longer behave different from ordinary Python dictionaries when iterating over them.
    + The `archives` and `tags` globals are now properties of the `posts` global to maintain consistency between content containers.
    + The `post` local has been renamed `item` to maintain consistency between content containers.
    + The `<title>` replacement in URL formats has been renamed to `<slug>`.
    + Frontmatter attributes that contain string values can now be used in URL formats.
    + The `markup` and `parser` config settings have been removed.
    + Which parser used is now determined by _(in order of precedence)_ the `parser` frontmatter attribute, the `parser` container config setting, and lastly the filename.


### 0.2.3 (June 13th, 2013)

+ __New__
    + A new default theme with dark (default) and light versions.
    + A config setting for specifying directories and files to be copied over that would otherwise be ignored.
    + Localization and internationalization support.
+ __Changed__
    + HTML escaping is now handled by Houdini.
    + The programming language of a code block is now stored in the `data-lang` attribute of the `<code>` tag instead of the `lang` attribute of the `<pre>` tag.
    + Tildes are no longer allowed in post slugs.
    + The `watch` subcommand now honors the configured log level.
+ __Upgraded__
    + Jinja 2.7
+ __Fixed__
    + A bug in the handling of log messages in the `serve` subcommand.
    + A bug in the misaka parser with SmartyPants.
    + A bug in the `serve` subcommand when handling paths containing Unicode characters.
    + A bug in the `watch` subcommand when a file is moved into the directory that is being watched.
    + A bug when handling an empty config file.


### 0.2.2 (April 11th, 2012)

+ __Upgraded__
    + misaka 1.0.2
+ __Fixed__
    + A bug in the `absolutize` filter of the Jinja renderer.
    + A bug in the `get_url` template helper where it was appending a forward slash when it shouldn't.


### 0.2.1 (March 20th, 2012)

+ __Fixed__
    + The default theme not getting installed.


### 0.2 (March 20th, 2012)

+ __New__
    + An archive property is now available for tags in the tags global.
    + A default theme.
    + Four new subcommands: `init`, `gen`, `watch`, and `serve`.
+ __Changed__
    + Archive years and tag names are always available in their respective globals.
    + When the destination already exists on generation, it is now emptied by default instead of deleted.
    + Generation is now done via the `gen` subcommand.
+ __Fixed__
    + A bug when retrieving the URL for an archive page.
    + A regression in the misaka renderer when generating semantic identifiers.


### 0.1.9 (March 12th, 2012)

+ __New__
    + An absolute URL can now be retrieved via the `get_url` template helper if the `domain` config setting has been set.
    + A filter for the Jinja render that attempts to convert all relative URLs to absolute URLs.
+ __Changed__
    + The misaka parser now automatically escapes code blocks.
+ __Fixed__
    + A Unicode issue in the misaka parser.
    + An escaping issue with code highlighting.
    + A bug in the Jinja renderer when handling Windows paths.


### 0.1.8 (February 8th, 2012)

+ __Upgraded__
    + miaska 1.0


### 0.1.7 (January 30th, 2012)

+ __Changed__
    + The `excerpt` post property is no longer wrapped in a `<p>` tag.
+ __Fixed__
    + A bug in the misaka parser when the Markdown source parses out to nothing.


### 0.1.6 (January 25th, 2012)

+ __Fixed__
    + An import issue. _(really this time)_


### 0.1.5 (January 25th, 2012)

+ __Fixed__
    + An import issue.


### 0.1.4 (January 2nd, 2012)

+ __Fixed__
    + A type issue in `setup.py`.


### 0.1.3 (January 2nd, 2012)

+ __New__
    + A version flag.
+ __Changed__
    + Removed the `year` and `name` properties from archives and tags respectively.


### 0.1.2 (December 27th, 2011)

+ __New__
    + Posts are now partially rendered before being parsed enabling renderer functionality within posts.
    + The hour and minute of a post can now be set with it defaulting to the file's `mtime`.
    + Archive pages can now be automatically generated.
+ __Changed__
    + Identifiers will now be semantic when using misaka's TOC render flag.
    + Removed the `slug` property from posts.
+ __Fixed__
    + A bug when parsing posts with no content.
    + Post and tag URLs not being properly slugified.
    + A Unicode issue with dates.


### 0.1.1 (December 4th, 2011)

+ __Changed__
    + Added a `name` attribute to tags.
+ __Fixed__
    + A bug with extensionless files.
    + A bug when using the `-qv` flags.


### 0.1 (December 4th, 2011)

_Initial release._

# mynt

_Another static site generator?_

With the ever growing population of static site generators, all filling a certain need, I've yet to find one that allows the generation of anything but the simplest of blogs.

That's where mynt comes in, being designed to give you all the features of a CMS with none of the often rigid implementations of those features.


### Install

From PyPI:

    $ pip install mynt

Latest trunk:

    $ pip install git+https://github.com/Anomareh/mynt.git


### Getting started

After installing mynt head on over and give the [quickstart][quickstart] page and [docs][docs] a read.


### Dependencies

+ [Hoep][hoep]
+ [Jinja2][jinja]
+ [Pygments][pygments]
+ [PyYAML][pyyaml]
+ [watchdog][watchdog]

#### Optional

+ [Docutils][docutils] _(reST)_


### Support

If you run into any issues or have any questions, either open an [issue][issues] or hop in #mynt on irc.freenode.net.


[docs]: http://mynt.uhnomoli.com/
[docutils]: http://docutils.sourceforge.net/
[hoep]: https://github.com/Anomareh/Hoep
[issues]: https://github.com/Anomareh/mynt/issues
[jinja]: http://jinja.pocoo.org/
[pygments]: http://pygments.org/
[pyyaml]: http://pyyaml.org/
[quickstart]: http://mynt.uhnomoli.com/docs/quickstart/
[watchdog]: http://packages.python.org/watchdog/

