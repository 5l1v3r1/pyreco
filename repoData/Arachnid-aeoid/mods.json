[
    "aeoid.beaker.session",
    "html_parse",
    "yadis.xri",
    "openid.yadis.discover",
    "fetchers",
    "beaker.exceptions",
    "openid.association",
    "manager",
    "session",
    "openid.cryptutil",
    "filters",
    "yadis.filters",
    "sqla",
    "consumer.html_parse",
    "aeoid.openid.extensions.sreg",
    "aeoid.beaker.crypto.pycrypto",
    "kvform",
    "aeoid.openid.kvform",
    "cryptutil",
    "openid.yadis",
    "main",
    "aeoid.beaker.cache",
    "aeoid.beaker.synchronization",
    "memstore",
    "dh",
    "ext.memcached",
    "yadis.constants",
    "openid.store",
    "aeoid.openid.message",
    "pape2",
    "pape5",
    "aeoid.openid.yadis.manager",
    "aeoid.openid.cryptutil",
    "jcecrypto",
    "draft.pape2",
    "aeoid.middleware",
    "draft.pape5",
    "association",
    "aeoid.openid.consumer.consumer",
    "aeoid.openid.yadis",
    "extensions.ax",
    "openid.store.nonce",
    "aeoid.openid.consumer.html_parse",
    "aeoid.openid.yadis.xrires",
    "aeoid.openid.extensions.draft.pape2",
    "crypto",
    "server",
    "openid.extensions.sreg",
    "openid.server.server",
    "openid.store.sqlstore",
    "aeoid.beaker.middleware",
    "aeoid.beaker.crypto",
    "aeoid",
    "middleware",
    "aeoid.openid.store.interface",
    "crypto.jcecrypto",
    "google",
    "demo.main",
    "openid.store.memstore",
    "aeoid.openid.consumer.discover",
    "discover",
    "aeoid.openid.yadis.xri",
    "aeoid.openid.oidutil",
    "beaker.synchronization",
    "openid.kvform",
    "urinorm",
    "aeoid.openid.yadis.accept",
    "users",
    "server.server",
    "container",
    "aeoid.openid.yadis.etxrd",
    "openid.fetchers",
    "openid.extensions.ax",
    "aeoid.beaker.exceptions",
    "openid.yadis.parsehtml",
    "beaker.converters",
    "openid.yadis.xrires",
    "ext.sqla",
    "aeoid.beaker.container",
    "memcached",
    "openid.yadis.accept",
    "openid.server",
    "openid.yadis.manager",
    "aeoid.beaker.ext.database",
    "yadis.etxrd",
    "ext.google",
    "yadis.manager",
    "openid.extensions.draft",
    "interface",
    "sreg",
    "aeoid.openid.consumer",
    "openid.consumer.consumer",
    "beaker",
    "aeoid.beaker.ext",
    "oidutil",
    "aeoid.openid.extensions",
    "extension",
    "handlers",
    "openid.yadis.xri",
    "aeoid.openid.dh",
    "cache",
    "extensions",
    "aeoid.openid.store.filestore",
    "aeoid.openid.store.nonce",
    "extensions.sreg",
    "openid.store.interface",
    "beaker.cache",
    "openid.sreg",
    "beaker.crypto",
    "beaker.crypto.jcecrypto",
    "aeoid.openid.yadis.filters",
    "beaker.crypto.pycrypto",
    "beaker.crypto.pbkdf2",
    "aeoid.openid.urinorm",
    "aeoid.openid.extensions.draft.pape5",
    "aeoid.openid",
    "message",
    "aeoid.openid.extensions.draft",
    "beaker.ext.google",
    "openid.dh",
    "openid.oidutil",
    "aeoid.beaker.converters",
    "xrires",
    "openid.consumer.html_parse",
    "yadis.xrires",
    "openid.consumer.discover",
    "beaker.ext.sqla",
    "draft",
    "openid.server.trustroot",
    "converters",
    "store",
    "yadis.parsehtml",
    "aeoid.openid.extensions.ax",
    "trustroot",
    "aeoid.beaker.util",
    "openid.extensions",
    "yadis.services",
    "aeoid.openid.yadis.parsehtml",
    "aeoid.beaker.crypto.jcecrypto",
    "openid.consumer",
    "yadis",
    "aeoid.openid.yadis.discover",
    "beaker.util",
    "beaker.container",
    "aeoid.beaker.crypto.pbkdf2",
    "consumer.discover",
    "openid.extension",
    "aeoid.openid.store",
    "aeoid.openid.sreg",
    "aeoid.openid.yadis.constants",
    "crypto.pbkdf2",
    "exceptions",
    "extensions.draft.pape5",
    "aeoid.openid.store.sqlstore",
    "store.sqlstore",
    "aeoid.openid.extension",
    "nonce",
    "demo",
    "beaker.ext.memcached",
    "aeoid.openid.server",
    "accept",
    "openid.store.filestore",
    "beaker.ext",
    "extensions.draft.pape2",
    "openid.yadis.constants",
    "aeoid.users",
    "openid.yadis.etxrd",
    "ax",
    "openid.extensions.draft.pape2",
    "store.nonce",
    "parsehtml",
    "crypto.pycrypto",
    "xri",
    "aeoid.beaker.ext.sqla",
    "store.interface",
    "aeoid.openid.fetchers",
    "openid.urinorm",
    "beaker.ext.database",
    "beaker.session",
    "store.memstore",
    "aeoid.openid.store.memstore",
    "aeoid.beaker",
    "aeoid.store",
    "etxrd",
    "openid.message",
    "aeoid.openid.server.server",
    "openid",
    "extensions.draft",
    "yadis.accept",
    "aeoid.openid.yadis.services",
    "openid.yadis.services",
    "aeoid.beaker.ext.google",
    "store.filestore",
    "filestore",
    "beaker.middleware",
    "synchronization",
    "services",
    "aeoid.openid.association",
    "ext.database",
    "yadis.discover",
    "openid.yadis.filters",
    "constants",
    "aeoid.beaker.ext.memcached",
    "pycrypto",
    "database",
    "util",
    "pbkdf2",
    "aeoid.openid.server.trustroot",
    "ext",
    "consumer.consumer",
    "openid.extensions.draft.pape5",
    "sqlstore",
    "server.trustroot",
    "consumer",
    "aeoid.handlers"
]