Big Brother Bot
===============

* [Official website] (http://www.bigbrotherbot.net)
* [Forums] (http://www.bigbrotherbot.net/forums)
* [Documentation] (http://wiki.bigbrotherbot.net/)

### Requirements

1. Python 2.6+ - http://www.python.org
2. MySQL-python (Tested with 0.9.2 and 1.0) - http://sourceforge.net/project/showfiles.php?group_id=22307&package_id=15775
3. MySQL (Tested with 3.23) - http://www.mysql.com/
4. setuptools - http://peak.telecommunity.com/dist/ez_setup.py (download and run)

### Assumptions

I assume you know how to use python and MySQL. If not you should consult the 
documentation for these if you have problems or questions on how to administer 
each.

### Installation

You have two choices of installation for b3. You can use the easy to install
Python Egg or the source distribution.

#### Installing Source Distribution

1. Download the latest source distribution from http://www.python.org/pypi/b3
2. Extract the package to a suitable location, example: /usr/local/games/b3

#### Installing Python Egg

1. Download and run the setup tools installer if you haven't already.
2. Run `easy_install -U b3`.

   *Note 1*: MySQL-python does not seem to download and install correctly as a
   easy_install package. You should instead install it directly by getting
   the latest install link of the Source Forge page and run easy_install on it.
   The same goes for the Elementtree library.

   *Note 2*: easy_install needs to write into Python's "site-packages"
   directory. You may need root/administrator privileges to do this. For
   advanced users, easy_install can use alternative destinations as well.

It should be that simple. B3 and all its dependancies should be installed. You
can skip the 'Installing Source Distribution' section, and proceed to
'Setting up MySQL'



### Setting up MySQL

1. Create a database in MySQL for B3 to use. Create a user that has full 
   permissions on this database for B3. 
   
   *Note*: You could also do this by running the script b3/sql/b3-db.sql on
   MySQL,but don't forget to edit the password in that file first.

2. Run the B3 database SQL script (b3/sql/b3.sql) on your B3 database.

### Setting up B3

### FTP B3
This is a new BETA feature of B3, and should be treated as such.
To connect to a server which you only have FTP access to (ie one hosted by gameservers.com or similar)
set game_log in the syntax ftp://username:password@ipaddress/path/to/games_mp.log
This only works in Python 2.6.

1. Create a directory to store your b3 log files and config files, example:
   /home/b3/conf
2. Copy the config files from /install/path/b3/conf to /home/b3/conf.
3. Modify b3.xml or run: b3_run.py --setup
   Edit database <scheme>://<username>:<password>@<host[:port]>/<database> 
   Example: <set name="database">mysql://b3:password@localhost/b3</set>

   Edit logfile 
   Example: <set name="logfile">/home/b3/b3.log</set> 

   Edit game log 
   Example: <set name="game_log">/usr/games/cod/uo/games_mp.log</set> 

   Edit rcon_password 
   Example: <set name="rcon_password">password</set>

   Leave log_level at 9 for debugging, If there is a bug found we will 
   need your b3.log.   

### Upgrading B3

Make sure to read the release note.

1. Make a backup of your database
2. Run b3_run with the --update option to migrate your database :
    `b3_run -c /home/b3/conf/b3.xml --update`


### Running B3

#### Running as a Python Egg

1. Run b3_run specifying your config file:
   `b3_run -c /home/b3/conf/b3.xml`
	
#### Running as a Source Install

1. Change to the install directory:
   `cd /usr/local/games/b3`
2. Run b3_run.py specifying your config file:
   `python ./b3_run.py -c /home/b3/conf/b3.xml`

*Note*: You can run `b3_run --help` for more options.

### Checking Status

1. Check b3.log
   `tail -n100 -f b3.log`
   
### Setup Users

1. Connect to the server and type !iamgod. This will register you as the server owner. 

This project is unfinished and currently not under active development.
Do not expect it to be polished or bug free.

BigBrotherBot (B3) packaging documentation
==========================================

B3 is distributed as different packages :

  - python sources package
  - python egg package

as well as packages for the MS Windows plateform built with py2exe :

  - win32 zip package
  - win32 setup package (setup built with InnoSetup Installer)


# Requirements

To build the packages you need a computer running the MS Windows operating system with the following software installed :

  - python 2.7
  - all B3 python modules requirements B3 tests requirements (see pip-requires.txt)
  - py2exe
  - InnoSetup Installer with InnoSetup PreProcessor


# Environment setup

  - make sure python is in your PATH environment variable
  - update the py2exe_builder/build.yaml config file with the path to your InnoSetup Compiler


# Building packages

## Run the tests

We want to make sure there are no regressions or un-maintained test left behind. To quickly run all the tests, run `python setup.py test`.
If all tests pass, you are good to continue

## Update the version number

Open up setup.py and change the version string for the `b3version` variable at the top of the script, then run `python setup.py release`.
This command will build into the *releases* directory the python source, python egg packages and put into the *py2exe_builder/dist_py2exe* directory the project files 'compiled' for the win32 packages.
Then run the `python build.py` from the *py2exe_builder* directory to build the Windows packages that you will also find into the *releases* directory.


# Distribute the packages

Uupload the packages on a public place for users to download them?

================================================================================
This is the readme file for the windows binary releases.
The License of this software is in license.txt
================================================================================
More information about this tool can be found on http://www.bigbrotherbot.net
================================================================================

Congratulations on the excellent decision you made by installing BigBrotherBot! 
The leading ingame (auto) administration tool for gameservers.

This program also depends on a MySQL database to store it's data. Make sure
you are able to connect to such a database before you start using B3.
More info about this here: http://wiki.bigbrotherbot.net/installation:start

NOTE for upgraders:
Are you using the win32 installer version? In that case we've made a backup of 
your BigBrotherBot/conf folder and your plugin config files(if they previously
existed) in BigBrotherBot/conf/backup. You should always make backups of your 
configs prior to installing a new version of B3 on top of your old version.  

================================================================================
IMPORTANT: The windows binary relies on these systemfiles to work:

   OLEAUT32.dll - C:\Windows\system32\OLEAUT32.dll
   USER32.dll - C:\Windows\system32\USER32.dll
   SHELL32.dll - C:\Windows\system32\SHELL32.dll
   KERNEL32.dll - C:\Windows\system32\KERNEL32.dll
   WSOCK32.dll - C:\Windows\system32\WSOCK32.dll
   ADVAPI32.dll - C:\Windows\system32\ADVAPI32.dll
   WS2_32.dll - C:\Windows\system32\WS2_32.dll
   ole32.dll - C:\Windows\system32\ole32.dll

If you have any errors indicating that you miss some of these files you'll have 
to collect them yourself. We are not allowed to distribute them.
================================================================================

This folder holds the tools and scripts to build a .exe release of B3
and an installer.
This script will take the B3 version found in the b3.egg-info folder, so you need to have run the
setup.py tool before.

REQUIREMENTS:
    Environment :
        * a Windows OS
        * with python2.6+
        * with mysqldb
    Tools:
        * py2exe2.6+
        * InnoSetup
        * InnoSetup preprocessor
        * ISTools (optional)
    
HOW TO BUILD THE .EXE RELEASE and distributions :
    * check the build.yaml config file
    * run python.exe build.py

    
BigBrotherBot (B3) at www.bigbrotherbot.net
===========================================

The BigBrotherBot (B3) project is a game administration project for advanced game administrators and developers. It provides automatic game administration features that can be configured to a high degree.

### Links to our online presence

* [Official website](http://www.bigbrotherbot.net)
* [Forums](http://forum.bigbrotherbot.net)
* [Documentation](http://wiki.bigbrotherbot.net/)

_For developers:_  

* [Code Reference](http://doc.bigbrotherbot.net/)

### Installation, configuration and usage

A quick and dirty rundown can be found in the b3/docs/README.txt but this is not the preferred documentation, it covers just global steps to take. Please refer to our documentation wiki as linked above for a full manual.

### Previous and Current Developers (Hall of Fame)

_ThorN, xlr8or, ttlogic, Courgette, Bakes, spacepig, Durzo, eire.32, grosbedo, Freelander, 82ndAB.Bravo17, Just a baka_  
and a big thanks to you, who has offered us snippets of code and improvements on an incidental basis. Without you B3 wouldn't be this intelligent!

	
_[www.bigbrotherbot.net](http://www.bigbrotherbot.net/) (2005-2011)_

# Dependencies

To run test, you need python modules installed :

 - mock: http://www.voidspace.org.uk/python/mock/
 - nose: http://pypi.python.org/pypi/nose
 - mockito: http://pypi.python.org/pypi/mockito

and all modules from the pip-requires.txt file


# Running the test suite

```
$ cd tests
$ python run.py
```


# Advanced use

`run.py` will run nosetests. Any command line argument passed to `run.py` will be passed over to the nosetests command.

Run `$ python run.py --help` to get the list of all nosetests supported options and plugins.

For instance if you want to generate the test coverage report, run `$ python run.py --with-xunit --cover-package=b3 --with-xcover`.
