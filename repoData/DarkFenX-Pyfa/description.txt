Pyfa is a cross-platform desktop fitting application for EVE online that can be used natively on any platform where python and wxwidgets are available.

It provides many advanced features such as graphs and full calculations of any possible combination of modules, fits, etc.

FAQ:
Q: What is pyfa?
A: Pyfa is the python fitting assistant, its a fitting tool for eve online that allows you to calculate the stats of any possible combination of ships and modules without having to buy them all ingame.

Q: How do I add fleet bonuses?
A: Right click on a fit and click on the position you want to assign it to.

Q: How do I project a whole fit?
A: Drag the fit from the fit browser into the projected effects window.

Q: How do I add implants on a character instead of a fit?
A: This is currently not possible.

Q: What are all those different export formats in pyfa?
A: EFT: the regular format we're all used to, very useful to paste on forums for example.
DNA: A one-liner format, useful to paste around on IRC or other places where you can't just paste a whole block of text.
XML: The format used by EVE, use this if you want to import your fit(s) into EVE.

Q: XYZ is calculated wrong! Another tool / EVE tells me so.
A: First of all, please check that your implants are setup identically between all your different applications. Afterwards, doublecheck your boosters and skills.
If its still wrong afterwards, you might not be using the exact same fit between both, doublecheck that as well.
If its still wrong, please hop onto IRC, log issue at github or just leave post at the forums and we can look into it.

Q: I want to run pyfa from source, what should i install?
A: Python 2 - http://www.python.org/
wxPython - http://www.wxpython.org/
SQLAlchemy - http://www.sqlalchemy.org/
dateutil - https://labix.org/python-dateutil
Matplotlib - http://matplotlib.sourceforge.net/
NumPy - http://numpy.scipy.org/
Last 2 are optional, they are required for graphs only.

A: I can't trust you!
Q: If you don't want to trust us, don't. The source code is freely available for anyone to see. So if you have a technical background, you can go check it yourself. If you still don't trust it, well, don't use it.


Development repository:
http://github.com/DarkFenX/Pyfa
IRC:
#evefit@irc.coldfront.net
EVE forum thread:
http://forums.eveonline.com/default.aspx?g=posts&t=247609
EVE Online website:
http://www.eveonline.com/

Generating a new sqlite dump HOWTO

You'll need pyfa itself (git://dev.evefit.org/pyfa.git)
as well as phobos (git://dev.evefit.org/phobos.git)

Phobos can dump the whole of the eve cache to json, after installing it (=python setup.py install) just do python dumpToJson.py -e /path/to/eve -c /path/to/eve/cache -s serverName -o /output/folder

Arguments explained: -e and -c should be pretty self explanitory, they're the path to the eve install and the eve cache respectivly

-s is the serverName, its used to figure out which subfolder in the machonet folder we're intrested in. (possible values: tranquility, singularity, duality).
This is passed directly to reverence which keeps a serverName to IP address mapping. You could probably add more servers with their IPs in the reverence sourcecode (cache.py file, around like 150 in the CacheMgr class) if you need another one.

-o is the output folder to dump all json files to, it should already exist or you'll get errors.



After thats done, you'll have all json files you need, and you can use a script within pyfa to generate a dump from that.

After you checked out pyfa, don't forget to update submodules (git submodule update --init).

and then browse to eos/utils/scripts/jsonToSql.py, which can generate the sqlite dump pyfa needs.

python jsonToSql.py -d eve.db -j /output/folder

Once thats done, you should have a nice little sqlite database, you can replace the one in the staticdata folder with yours and it should run right away.
