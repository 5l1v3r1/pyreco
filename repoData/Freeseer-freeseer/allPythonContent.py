__FILENAME__ = conf
# -*- coding: utf-8 -*-
#
# Freeseer documentation build configuration file, created by
# sphinx-quickstart on Sun Sep  4 18:21:52 2011.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import sys

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here.
sys.path.append('../src')  # Temporarily add freeseer/src to $PATH.

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.doctest', 'sphinx.ext.viewcode',
              'sphinx.ext.todo']

# If True, the todo and todolist directives will produce output.
# http://sphinx.pocoo.org/ext/todo.html#module-sphinx.ext.todo
todo_include_todos=True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Freeseer'
copyright = u'Â© 2011, 2013 Free and Open Source Software Learning Centre'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '3.0'
# The full version, including alpha/beta/rc tags.
release = '3.0.0'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['contribute/packaging.rst']

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
show_authors = True

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'nature'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = 'freeseer_logo.png'

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = 'favicon.ico'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'Freeseerdoc'


# -- Options for LaTeX output --------------------------------------------------

# The paper size ('letter' or 'a4').
#latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
#latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  ('index', 'Freeseer.tex', u'Freeseer Documentation',
   u'Free and Open Source Software Learning Centre', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Additional stuff for the LaTeX preamble.
#latex_preamble = ''

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'freeseer', u'Freeseer Documentation',
     [u'Free and Open Source Software Learning Centre'], 1)
]

########NEW FILE########
__FILENAME__ = area_selector
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import sys

from PyQt4.QtCore import Qt
from PyQt4.QtCore import QRectF

from PyQt4.QtGui import QApplication
from PyQt4.QtGui import QColor
from PyQt4.QtGui import QFont
from PyQt4.QtGui import QPainter
from PyQt4.QtGui import QPixmap
from PyQt4.QtGui import QTextOption
from PyQt4.QtGui import QToolTip
from PyQt4.QtGui import QWidget


class AreaSelector(QWidget):
    '''
    This class provides a simple app for allowing the user to select an area
    on the screen by pressing left click and dragging the mouse. The start
    points are recorded when the user presses the left mouse button and the
    end points are recorded when the user releases the mouse button. The
    result start and end points are then returned to the parent class as
    through the desktopAreaEvent() function.

    The parent class using this app must implement the deskopAreaEvent
    function.
    '''
    def __init__(self, parent=None):
        '''
        Create a translucent fullscreen widgit and initialize variables
        used in this app.
        '''
        QWidget.__init__(self, None, Qt.FramelessWindowHint)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.setAttribute(Qt.WA_DeleteOnClose)
        self.setWindowState(Qt.WindowFullScreen)
        self.setAutoFillBackground(False)

        self.parent = parent
        self.start_x = 0
        self.start_y = 0
        self.end_x = 0
        self.end_y = 0
        self.current_x = 0
        self.current_y = 0

    def showEvent(self, event):
        '''Update the screen BG when the selector is shown'''
        self.bg = QPixmap.grabWindow(QApplication.desktop().winId())
        self.screen_geometry = QApplication.desktop().screenGeometry(self)

    def mousePressEvent(self, event):
        '''Save the users starting x/y points'''
        self.start_x = event.globalX()
        self.start_y = event.globalY()

    def mouseReleaseEvent(self, event):
        '''Save the users end x/y points'''
        self.end_x = event.globalX()
        self.end_y = event.globalY()

    def mouseMoveEvent(self, event):
        '''Get the current mouse position and redraw the selection'''
        self.current_x = event.globalX()
        self.current_y = event.globalY()
        self.repaint()

        text = "Start: %sx%s \nEnd: %sx%s" % (self.start_x, self.start_y, self.current_x, self.current_y)
        QToolTip.showText(event.pos(), text)

    def keyPressEvent(self, event):
        if event.key() == Qt.Key_Return:
            self._acceptSelection()
        elif event.key() == Qt.Key_Escape:
            self.close()

    def _acceptSelection(self):
        '''Accept the selection and close the area selector app'''
        if self.parent is not None:
            self.parent.areaSelectEvent(self.start_x, self.start_y, self.end_x, self.end_y)
        self.close()

    def paintEvent(self, event):
        '''
        Paints area the user is currently selecting starting from point
        start_x and, start_y ending at the position of the user's mouse
        currently on screen.
        '''
        painter = QPainter()
        painter.begin(self)

        painter.fillRect(self.screen_geometry, QColor(10, 10, 10, 125))

        self._paint_selection(painter)
        self._paint_usage_text(painter)
        painter.end()

    ###
    ### Paint Objects
    ###
    def _paint_usage_text(self, painter):
        '''Draws the user notification on how to use the selector'''
        font = QFont("Helvetica [Cronyx]", 26, QFont.Bold)
        painter.setFont(font)
        painter.setPen(QColor(255, 255, 255, 255))

        # Figure out text x-coordinates
        screen_width = self.screen_geometry.width()
        text_width = 800
        text_start_x = screen_width / 2 - text_width / 2

        # Figure out text y-coordinates
        screen_height = self.screen_geometry.height()
        text_height = 200
        text_start_y = screen_height / 2 - text_height / 2

        textoption = QTextOption(Qt.AlignCenter)
        textbox = QRectF(text_start_x, text_start_y, text_width, text_height)
        painter.drawText(textbox,
            "Click & Drag to select an area\n"
            "ENTER to confirm or ESC to cancel",
            textoption)
        painter.drawRoundedRect(textbox, 20, 20)

    def _paint_selection(self, painter):
        '''Draws the current user selection'''
        rectangle = QRectF()

        # User drags right to left
        if self.start_x > self.current_x:
            rectangle.setLeft(self.current_x)
            rectangle.setRight(self.start_x)
        # User drags left to right
        else:
            rectangle.setLeft(self.start_x)
            rectangle.setRight(self.current_x)

        # User drags bottom to top
        if self.start_y > self.current_y:
            rectangle.setTop(self.current_y)
            rectangle.setBottom(self.start_y)

        # User drags top to bottom
        else:
            rectangle.setTop(self.start_y)
            rectangle.setBottom(self.current_y)

        painter.drawPixmap(rectangle, self.bg, rectangle)
        painter.drawRect(rectangle)


# Useful for independently testing the area selector
if __name__ == "__main__":
    app = QApplication(sys.argv)
    main = AreaSelector()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = core
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import abc
import collections
import functools

from freeseer.framework.config.exceptions import InvalidOptionValueError
from freeseer.framework.config.exceptions import OptionValueNotSetError
from freeseer.framework.config.exceptions import StorageNotSetError


class Option(object):
    """Represents a Config option."""

    __metaclass__ = abc.ABCMeta

    class NotSpecified(object):
        pass

    def __init__(self, default=NotSpecified):
        self.default = default

    def is_required(self):
        """Returns true iff this option is required."""
        return self.default == self.NotSpecified

    # Override these if you know what you're doing

    def pre_set(self, value):
        """Do something before value is stored for this option."""
        return value

    def presentation(self, value):
        """Returns a modified version of value that will not itself be persisted."""
        return value

    # Override these!

    @abc.abstractmethod
    def is_valid(self, value):
        """Checks if a value is valid for this option."""
        pass

    @abc.abstractmethod
    def encode(self, value):
        """Encodes value into a string.

        Should raise something if unable to encode.
        """
        pass

    @abc.abstractmethod
    def decode(self, value):
        """Decodes value into a proper Option value.

        Should raise something if unable to decode.
        """
        pass


class ConfigBase(abc.ABCMeta):
    """Metaclass for Config subclasses.

    It does some transformations on the options you specify to let them be used as properties.
    """

    def __new__(meta, name, bases, class_attributes):
        """Finds all Options delcared in the subclass and transform them into properties."""
        class_attributes, options = meta.find_options(class_attributes)
        class_attributes['options'] = options
        cls = super(ConfigBase, meta).__new__(meta, name, bases, class_attributes)
        for opt_name, option in options.iteritems():
            opt_get = functools.partial(cls.get_value, name=opt_name, option=option, presentation=True)
            opt_set = functools.partial(cls._set_value, name=opt_name, option=option)
            setattr(cls, opt_name, property(opt_get, opt_set))
        return cls

    @staticmethod
    def find_options(class_attributes):
        """Find all Option subclasses within the class body."""
        new_attributes = {}
        options = collections.OrderedDict()
        for name in sorted(class_attributes.keys()):
            attr = class_attributes[name]
            if name.startswith('_') or not isinstance(attr, Option):
                new_attributes[name] = attr
            else:
                options[name] = attr
        return new_attributes, options


class Config(object):
    """Base class for all custom configs.

    To be useful, its body must contain some number of Option instances.

    Example:
        class MyConfig(Config):
            test = StringOption('default_value')
    """

    __metaclass__ = ConfigBase

    def __init__(self, storage=None, storage_args=None):
        """
        Params:
            storage - an instance of a ConfigStorage
            storage_args - an iterable of arguments that will be passed to
                           storage.load(...)
        """
        self._storage = storage
        self._storage_args = storage_args if storage_args else []

        self.values = {}
        self.set_defaults()

    def _set_value(self, value, name, option):
        """This is just here to make the argument order more logical."""
        self.set_value(name, option, value)

    def set_defaults(self):
        """Sets the values of all options to their default value (if applicable)."""
        for name, option in self.options.iteritems():
            if not option.is_required():
                self.set_value(name, option, option.default)

    # You probably will not need to override these:

    def get_value(self, name, option, presentation=False):
        """Gets the value of an option.

        Params:
            name - the string name of the option instance
            option - the option instance itself
            presentation - boolean

        Returns: the value that the config has stored for this option
        """
        if name in self.values:
            value = self.values[name]
            if presentation:
                return option.presentation(value)
            else:
                return value
        else:
            raise OptionValueNotSetError(name, option)

    def set_value(self, name, option, value):
        """Sets the value of an option.

        Params:
            name - the string name of the option instance
            option - the option instance itself
            value - the value that will be set for the option

        Returns: nothing
        """
        if option.is_valid(value):
            mod_value = option.pre_set(value)
            self.values[name] = mod_value
        else:
            raise InvalidOptionValueError(name, option)

    def save(self):
        """Persist the Config instance.

        This only works if the storage stuff is passed to the Config's constructor.
        """
        if self._storage:
            self._storage.store(self, *self._storage_args)
        else:
            raise StorageNotSetError()


class ConfigStorage(object):
    """Defines an interface for loading and storing Config instances."""

    __metaclass__ = abc.ABCMeta

    def __init__(self, filepath):
        """
        Params:
            filepath - the path to file where the config will be persisted or loaded from
        """
        self._filepath = filepath

    # Override these!

    @abc.abstractmethod
    def load(self, config_instance):
        """Populates the Config instance from somewhere.

        It should iterate over all options in self.options and determine the value to store by using option.decode(..).
        """
        pass

    @abc.abstractmethod
    def store(self, config_instance):
        """Persists the Config to somewhere.

        It should iterate over all options in self.options and determine the value to persis by using option.encode(..).
        """
        pass

########NEW FILE########
__FILENAME__ = exceptions
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/


class StorageNotSetError(Exception):

    def __init__(self):
        super(StorageNotSetError, self).__init__('no ConfigStorage was given to this Config')


class OptionError(Exception):

    def __init__(self, name, option):
        super(OptionError, self).__init__(name)


class InvalidOptionValueError(OptionError):
    pass


class InvalidOptionDefaultValueError(OptionError):
    pass


class OptionValueNotSetError(OptionError):
    pass


class InvalidDecodeValueError(Exception):

    def __init__(self, value):
        message = 'Unable to decode value "{}"'.format(value)
        super(InvalidDecodeValueError, self).__init__(message)

########NEW FILE########
__FILENAME__ = options
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import os

from freeseer.framework.config.core import Option
from freeseer.framework.config.exceptions import InvalidDecodeValueError


class StringOption(Option):
    """Represents a string value."""

    def is_valid(self, value):
        return isinstance(value, str) or hasattr(value, '__str__')

    def encode(self, value):
        return str(value)

    def decode(self, value):
        return str(value)


class IntegerOption(Option):
    """Represents an integer number value."""

    def is_valid(self, value):
        return isinstance(value, int)

    def encode(self, value):
        return str(value)

    def decode(self, value):
        try:
            return int(value)
        except ValueError:
            raise InvalidDecodeValueError(value)


class FloatOption(Option):
    """Represents a floating point number value."""

    def is_valid(self, value):
        return isinstance(value, float)

    def encode(self, value):
        return str(value)

    def decode(self, value):
        try:
            return float(value)
        except ValueError:
            raise InvalidDecodeValueError(value)


class BooleanOption(Option):
    """Represents a boolean value."""

    def is_valid(self, value):
        return isinstance(value, bool)

    def encode(self, value):
        return value and 'true' or 'false'

    def decode(self, value):
        return value == 'true'


class FolderOption(Option):
    """Represents the path to a folder."""

    def __init__(self, default=Option.NotSpecified, auto_create=False):
        self.auto_create = auto_create
        super(FolderOption, self).__init__(default)

    def is_valid(self, value):
        return self.auto_create or os.path.isdir(value)

    def encode(self, value):
        return str(value)

    def decode(self, value):
        if self.is_valid(value):
            return value
        else:
            raise InvalidDecodeValueError(value)

    def presentation(self, value):
        """Returns the ~ expanded version of the path.

        When the value of this option is accessed by the user, special path characters like ~ will get expanded.
        """
        realpath = os.path.expanduser(value)
        if self.auto_create:
            if not os.path.exists(realpath):
                os.makedirs(realpath)
        return realpath


class ChoiceOption(StringOption):
    """Represents a selection from a pre-defined list of strings."""

    def __init__(self, choices, default=Option.NotSpecified):
        self.choices = choices
        super(ChoiceOption, self).__init__(default)

    def is_valid(self, value):
        return value in self.choices

    def decode(self, value):
        choice = super(ChoiceOption, self).decode(value)
        if choice in self.choices:
            return choice
        else:
            raise InvalidDecodeValueError(value)

########NEW FILE########
__FILENAME__ = configparser
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import ConfigParser

from freeseer.framework.config.core import ConfigStorage


class ConfigParserStorage(ConfigStorage):
    """Persists Configs to and from INI style config files."""

    def load(self, config_instance, section):
        parser = ConfigParser.ConfigParser()
        parser.read([self._filepath])

        for name, option in config_instance.options.iteritems():
            if parser.has_option(section, name):
                raw = parser.get(section, name)
                clean = option.decode(raw)
                config_instance.set_value(name, option, clean)

        return config_instance

    def store(self, config_instance, section):
        parser = ConfigParser.ConfigParser()
        parser.read([self._filepath])

        if not parser.has_section(section):
            parser.add_section(section)

        for name, option in config_instance.options.iteritems():
            raw = config_instance.get_value(name, option)
            clean = option.encode(raw)
            parser.set(section, name, clean)

        with open(self._filepath, 'w') as config_fd:
            parser.write(config_fd)

########NEW FILE########
__FILENAME__ = jsonstorage
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import json
import os

from freeseer.framework.config.core import ConfigStorage


class JSONConfigStorage(ConfigStorage):
    """Persists Configs to and from JSON formatted config files."""

    def parse_json(self):
        if os.path.isfile(self._filepath):
            return json.load(open(self._filepath))
        else:
            return {}

    def write_json(self, dict_):
        with open(self._filepath, 'wc') as config_fd:
            config_fd.write(json.dumps(dict_,
                                       sort_keys=True,
                                       indent=4,
                                       separators=(',', ': ')))

    def load(self, config_instance, section):
        dict_ = self.parse_json()
        if section not in dict_:
            return config_instance

        for name, option in config_instance.options.iteritems():
            if name in dict_[section]:
                raw = dict_[section][name]
                clean = option.decode(raw)
                config_instance.set_value(name, option, clean)
        return config_instance

    def store(self, config_instance, section):
        dict_ = self.parse_json()
        if section not in dict_:
            dict_[section] = {}

        for name, option in config_instance.options.iteritems():
            raw = config_instance.get_value(name, option)
            clean = option.encode(raw)
            dict_[section][name] = clean

        self.write_json(dict_)

########NEW FILE########
__FILENAME__ = profile
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import os

from freeseer.framework.config.persist import ConfigParserStorage
from freeseer.framework.config.persist import JSONConfigStorage
from freeseer.framework.database import QtDBConnector
from freeseer.framework.plugin import PluginManager


class ProfileManager(object):
    """Manages Profile instances for the current system user."""

    def __init__(self, base_folder):
        self._base_folder = base_folder
        self._cache = {}
        self._create_if_needed(base_folder)

    def _create_if_needed(self, path):
        try:
            os.makedirs(path)
        except OSError:
            # This is thrown if path already exists.
            pass

    def get(self, name='default'):
        """Retrieve Profile instances by name.

        Profiles are cached for future gets.
        """
        if name not in self._cache:
            full_path = os.path.join(self._base_folder, name)
            self._create_if_needed(full_path)
            self._cache[name] = Profile(full_path, name)
        return self._cache[name]


class Profile(object):
    """Represents a profile's config files, databases, and other stuff."""

    STORAGE_MAP = {
        '.conf': ConfigParserStorage,
        '.json': JSONConfigStorage,
    }

    def __init__(self, folder, name):
        self._folder = folder
        self._name = name
        self._storages = {}
        self._databases = {}

    @property
    def name(self):
        return self._name

    def get_filepath(self, name):
        """Returns the absolute path for a file called name.

        The filepath will be prefixed with the profile's base folder.
        """
        return os.path.join(self._folder, name)

    def get_storage(self, name):
        """
        Returns a ConfigStorage instance for a given config file name.

        The ConfigStorage instance is picked based on the file suffix.
        It will also be cached for future invocations of this method.
        """
        if name not in self._storages:
            for suffix, engine in self.STORAGE_MAP.iteritems():
                if name.endswith(suffix):
                    self._storages[name] = engine(self.get_filepath(name))
                    break

        if name in self._storages:
            return self._storages[name]
        else:
            raise KeyError('{} does not have a valid suffix'.format(name))

    def get_config(self, filename, config_class, storage_args=None, read_only=False):
        """Returns an instance of config_class that has be loaded from filename.

        Params:
            filename - name of the file, this will be passed to get_storage(..)
            config_class - Config subclass
            storage_args - an iterable of arguments that will be passed to
                           storage.load(config, ...)
            read_only - if True, the storage will be passed to the Config
                        instance
        """
        storage_args = storage_args if storage_args else []
        storage = self.get_storage(filename)

        if read_only:
            config = config_class()
        else:
            config = config_class(storage, storage_args)

        return storage.load(config, *storage_args)

    def get_database(self, name='presentations.db'):
        """Returns an instance of QtDBConnector for a specific database file.

        It is also cached for future gets.
        """
        if name not in self._databases:
            self._databases[name] = QtDBConnector(self.get_filepath(name), PluginManager(self))
        return self._databases[name]

########NEW FILE########
__FILENAME__ = database
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import csv
import logging

from PyQt4 import QtSql
from PyQt4.QtCore import QDate
from PyQt4.QtCore import QTime
from PyQt4.QtCore import QStringList

from freeseer import SCHEMA_VERSION
from freeseer.framework.presentation import Presentation
from freeseer.framework.failure import Failure, Report

log = logging.getLogger(__name__)


# Database Schema Versions
PRESENTATIONS_SCHEMA_300 = '''CREATE TABLE IF NOT EXISTS presentations
                                       (Id INTEGER PRIMARY KEY,
                                        Title varchar(255),
                                        Speaker varchar(100),
                                        Description text,
                                        Level varchar(25),
                                        Event varchar(100),
                                        Room varchar(25),
                                        Time timestamp,
                                        UNIQUE (Speaker, Title) ON CONFLICT IGNORE)'''

PRESENTATIONS_SCHEMA_310 = '''CREATE TABLE IF NOT EXISTS presentations
                                       (Id INTEGER PRIMARY KEY,
                                        Title varchar(255),
                                        Speaker varchar(100),
                                        Description text,
                                        Category varchar(25),
                                        Event varchar(100),
                                        Room varchar(25),
                                        Date timestamp,
                                        StartTime timestamp,
                                        EndTime timestamp,
                                        UNIQUE (Speaker, Title) ON CONFLICT IGNORE)'''

REPORTS_SCHEMA_300 = '''CREATE TABLE IF NOT EXISTS failures
                                        (Id INTERGER PRIMARY KEY,
                                        Comments TEXT,
                                        Indicator TEXT,
                                        Release INTEGER,
                                        UNIQUE (ID) ON CONFLICT REPLACE)'''


class QtDBConnector(object):
    def __init__(self, db_filepath, plugman):
        """
        Initialize the QtDBConnector
        """
        self.talkdb_file = db_filepath
        self.plugman = plugman

        self.presentationsModel = None
        self.failuresModel = None
        self.recentconnModel = None
        self.__open_table()

    def __open_table(self):
        """Opens a connection to the database. Uses by the init function."""
        self.talkdb = QtSql.QSqlDatabase.addDatabase("QSQLITE")
        self.talkdb.setDatabaseName(self.talkdb_file)

        if self.talkdb.open():

            # check if presentations table exists and if not create it.
            if not self.talkdb.tables().contains("presentations"):
                self.__create_presentations_table()
                self.__insert_default_talk()

                # If presentations table did not exist, it is safe to say that the reports table needs to be reset
                # or initialized.
                self.clear_report_db()
                self.__create_failures_table()

                # Set the database version (so the updater does not update)
                QtSql.QSqlQuery('PRAGMA user_version = %i' % SCHEMA_VERSION)

            # check if recentConnections table exists and if not create it.
            if not self.talkdb.tables().contains("recentconn"):
                self.__create_recentconn_table()

            # verify that correct version of database exists
            self.__update_version()
        else:
            log.error("Unable to create talkdb file.")

    def __close_table(self):
        """Closes the connection the the database."""
        self.talkdb.close()

    def __get_db_version_int(self):
        """Gets the database's current version. Default is 0 if unset (for 2x and older)"""
        query = QtSql.QSqlQuery('PRAGMA user_version')
        query.first()
        return query.value(0).toInt()[0]

    def __update_version(self):
        """Upgrade database to the latest SCHEMA_VERSION"""

        db_version = self.__get_db_version_int()
        if db_version == SCHEMA_VERSION:
            return

        #
        # Define functions for upgrading between schema versions
        #
        def update_2xto30():
            """Incremental update of database from Freeseer 2.x and older to 3.0

            SCHEMA_VERSION is 300
            """
            if db_version > 300:
                log.debug('Database newer than schema version 300.')
                return  # No update needed

            log.debug('Updating to schema 300.')
            QtSql.QSqlQuery('ALTER TABLE presentations RENAME TO presentations_old')  # temporary table
            self.__create_presentations_table(PRESENTATIONS_SCHEMA_300)
            QtSql.QSqlQuery("""INSERT INTO presentations
                            SELECT Id, Title, Speaker, Description, Level, Event, Room, Time FROM presentations_old""")
            QtSql.QSqlQuery('DROP TABLE presentations_old')

        def update_30to31():
            """Performs incremental update of database from 3.0 and older to 3.1."""
            QtSql.QSqlQuery('ALTER TABLE presentations RENAME TO presentations_old')
            self.__create_presentations_table(PRESENTATIONS_SCHEMA_310)
            QtSql.QSqlQuery("""INSERT INTO presentations
                            SELECT Id, Title, Speaker, Description, Level, Event, Room, Time, Time, Time
                            FROM presentations_old""")
            QtSql.QSqlQuery('DROP TABLE presentations_old')

        #
        # Perform the upgrade
        #
        updaters = [update_2xto30, update_30to31]
        for updater in updaters:
            updater()

        QtSql.QSqlQuery('PRAGMA user_version = %i' % SCHEMA_VERSION)
        log.info('Upgraded presentations database from version {} to {}'.format(db_version, SCHEMA_VERSION))

    def __create_presentations_table(self, schema=PRESENTATIONS_SCHEMA_310):
        """Creates the presentations table in the database. Should be used to initialize a new table."""
        log.info("table created")
        QtSql.QSqlQuery(schema)

    def __insert_default_talk(self):
        """Inserts the required placeholder talk into the database.At least one talk must exist"""
        self.insert_presentation(Presentation("", "", "", "", "", "", "", "", ""))

    def get_talks(self):
        """Gets all the talks from the database including all columns"""
        return QtSql.QSqlQuery('''SELECT * FROM presentations''')

    def get_events(self):
        """Gets all the talk events from the database"""
        return QtSql.QSqlQuery('''SELECT DISTINCT Event FROM presentations''')

    def get_talk_ids(self):
        """Gets all the talk events from the database"""
        return QtSql.QSqlQuery('''SELECT Id FROM presentations''')

    def get_talks_by_event(self, event):
        """Gets the talks signed in a specific event from the database"""
        return QtSql.QSqlQuery('''SELECT * FROM presentations WHERE Event=%s''' % event)

    def get_talks_by_room(self, room):
        """Gets the talks hosted in a specific room from the database"""
        return QtSql.QSqlQuery('''SELECT * FROM presentations WHERE Room=%s''' % room)

    def get_talks_by_room_and_time(self, room):
        """Returns the talks hosted in a specified room, starting from the current date and time"""
        current_date = QDate.currentDate().toString(1)  # yyyy-mm-dd
        current_time = QTime.currentTime().toString()  # hh:mm:ss
        return QtSql.QSqlQuery('''SELECT * FROM presentations
                                  WHERE Room='{}' AND Date='{}'
                                  AND StartTime >= '{}' ORDER BY StartTime ASC'''.format(room, current_date, current_time))

    def get_presentation(self, talk_id):
        """Returns a Presentation object associated to a talk_id"""
        result = QtSql.QSqlQuery('''SELECT * FROM presentations WHERE Id="%s"''' % talk_id)
        if result.next():
            return Presentation(title=unicode(result.value(1).toString()),
                             speaker=unicode(result.value(2).toString()),
                             description=unicode(result.value(3).toString()),
                             category=unicode(result.value(4).toString()),
                             event=unicode(result.value(5).toString()),
                             room=unicode(result.value(6).toString()),
                             date=unicode(result.value(7).toString()),
                             startTime=unicode(result.value(8).toString()),
                             endTime=unicode(result.value(9).toString()))
        else:
            return None

    def get_string_list(self, column):
        """Returns a column as a QStringList"""
        tempList = QStringList()
        result = QtSql.QSqlQuery('''SELECT DISTINCT %s FROM presentations''' % column)
        while result.next():
            tempList.append(result.value(0).toString())
        return tempList

    def presentation_exists(self, presentation):
        """Checks if there's a presentation with the same Speaker and Title already stored"""
        result = QtSql.QSqlQuery('''SELECT * FROM presentations''')
        while result.next():
            if (unicode(presentation.title) == unicode(result.value(1).toString())
            and unicode(presentation.speaker) == unicode(result.value(2).toString())):
                return True
        return False

    #
    # Presentation Create, Update, Delete
    #
    def insert_presentation(self, presentation):
        """Inserts a passed Presentation into the database."""
        # Duplicate time to date field for older RSS / CSV formats
        # If date is empty, and time has a full DateTime, split the DateTime to
        # both Date and Time

        if not presentation.date and presentation.startTime and len(presentation.startTime) == 16:
            presentation.date, presentation.startTime = presentation.startTime[:-6], presentation.startTime[11:]

        QtSql.QSqlQuery(
            '''INSERT INTO presentations VALUES (NULL, "%s", "%s", "%s", "%s", "%s", "%s", "%s", "%s", "%s")''' %
            (presentation.title,
             presentation.speaker,
             presentation.description,
             presentation.category,
             presentation.event,
             presentation.room,
             presentation.date,
             presentation.startTime,
             presentation.endTime))
        log.info("Talk added: %s - %s, Time: %s - %s" % (presentation.speaker, presentation.title, presentation.startTime, presentation.endTime))

    def update_presentation(self, talk_id, presentation):
        """Updates an existing Presentation in the database."""
        QtSql.QSqlQuery(
            '''UPDATE presentations SET Title="%s", Speaker="%s", Description="%s", Category="%s",
                Event="%s", Room="%s", Date="%s", StartTime="%s", EndTime="%s"
                WHERE Id="%s"''' %
            (presentation.title,
             presentation.speaker,
             presentation.description,
             presentation.category,
             presentation.event,
             presentation.room,
             presentation.date,
             presentation.startTime,
             presentation.endTime,
             talk_id))
        log.info("Talk %s updated: %s - %s" % (talk_id, presentation.speaker, presentation.title))

    def delete_presentation(self, talk_id):
        """Removes a Presentation from the database"""
        QtSql.QSqlQuery('''DELETE FROM presentations WHERE Id="%s"''' % talk_id)
        log.info("Talk %s deleted." % talk_id)

    def clear_database(self):
        """Clears the presentations table"""
        QtSql.QSqlQuery('''DELETE FROM presentations''')
        log.info("Database cleared.")

    #
    # Data Model Retrieval
    #
    def get_presentations_model(self):
        """Gets the Presentation Table Model. Useful for Qt GUI based Frontends to load the Model in Table Views"""
        if self.presentationsModel is None:
            self.presentationsModel = QtSql.QSqlTableModel()
            self.presentationsModel.setTable("presentations")
            self.presentationsModel.setEditStrategy(QtSql.QSqlTableModel.OnFieldChange)
            self.presentationsModel.select()
        return self.presentationsModel

    def get_events_model(self):
        """Gets the Events Model. Useful for Qt GUI based Frontends to load the Model into Views"""
        self.eventsModel = QtSql.QSqlQueryModel()
        self.eventsModel.setQuery("SELECT DISTINCT Event FROM presentations ORDER BY Event ASC")
        return self.eventsModel

    def get_dates_from_event_room_model(self, event, room):
        """Gets the Dates Model. Useful for Qt GUI based Frontends to load the Model into Views."""
        self.datesModel = QtSql.QSqlQueryModel()
        self.datesModel.setQuery(
            "SELECT DISTINCT date FROM presentations WHERE Event='%s' and Room='%s' ORDER BY Date ASC"
            % (event, room))
        return self.datesModel

    def get_rooms_model(self, event):
        """Gets the Rooms Model. Useful for Qt GUI based Frontends to load the Model into Views"""
        self.roomsModel = QtSql.QSqlQueryModel()
        self.roomsModel.setQuery("SELECT DISTINCT Room FROM presentations WHERE Event='%s' ORDER BY Room ASC" % event)
        return self.roomsModel

    def get_talks_model(self, event, room, date=None):
        """Gets the Talks Model. A talk is defined as "<presenter> - <talk_title>"
        Useful for Qt GUI based Frontends to load the Model into Views"""
        self.talksModel = QtSql.QSqlQueryModel()
        if date == "":
            self.talksModel.setQuery("SELECT (Speaker || ' - ' || Title), Id FROM presentations \
                                   WHERE Event='%s' and Room='%s' ORDER BY Date ASC" % (event, room))
        else:
            self.talksModel.setQuery("SELECT (Speaker || ' - ' || Title), Id FROM presentations \
                                   WHERE Event='%s' and Room='%s' and date(Date) LIKE '%s' ORDER BY Date ASC"
                                   % (event, room, date))
        return self.talksModel

    def get_talk_between_time(self, event, room, startTime, endTime):
        """Returns the talkID of the first talk found between a startTime, and endTime for a specified event/room.
        Else return None"""
        query = QtSql.QSqlQuery("SELECT Id, Date FROM presentations \
                                 WHERE Event='%s' AND Room='%s' \
                                 AND Date BETWEEN '%s' \
                                              AND '%s' ORDER BY Date ASC" % (event, room, startTime, endTime))
        query.next()
        if query.isValid():
            return query.value(0)
        else:
            return None

    #
    # Import / Export Functions
    #
    # Needs to be updated for category field, separate date and time fields
    def add_talks_from_rss(self, feed_url):
        """Adds talks from an rss feed."""
        plugin = self.plugman.get_plugin_by_name("Rss FeedParser", "Importer")
        feedparser = plugin.plugin_object
        presentations = feedparser.get_presentations(feed_url)

        if presentations:
            for presentation in presentations:
                talk = Presentation(presentation["Title"],
                                    presentation["Speaker"],
                                    presentation["Abstract"],  # Description
                                    presentation["Level"],
                                    presentation["Event"],
                                    presentation["Room"],
                                    presentation["Time"],
                                    presentation["Time"])
                self.insert_presentation(talk)

        else:
            log.info("RSS: No data found.")

    def add_talks_from_csv(self, fname):
        """Adds talks from a csv file.

        Title and speaker must be present.
        """
        plugin = self.plugman.get_plugin_by_name("CSV Importer", "Importer")
        importer = plugin.plugin_object
        presentations = importer.get_presentations(fname)

        if presentations:
            for presentation in presentations:
                talk = Presentation(presentation["Title"],
                                    presentation["Speaker"],
                                    presentation["Abstract"],  # Description
                                    presentation["Level"],
                                    presentation["Event"],
                                    presentation["Room"],
                                    presentation["Time"],
                                    presentation["Time"])
                self.insert_presentation(talk)

        else:
            log.info("CSV: No data found.")

    def export_talks_to_csv(self, fname):
        fieldNames = ('Title',
                      'Speaker',
                      'Abstract',
                      'Category',
                      'Event',
                      'Room',
                      'Date',
                      'StartTime',
                      'EndTime')

        try:
            file = open(fname, 'w')
            writer = csv.DictWriter(file, fieldnames=fieldNames)
            headers = dict((n, n) for n in fieldNames)
            writer.writerow(headers)

            result = self.get_talks()
            while result.next():
                log.debug(unicode(result.value(1).toString()))
                writer.writerow({'Title': unicode(result.value(1).toString()),
                                 'Speaker': unicode(result.value(2).toString()),
                                 'Abstract': unicode(result.value(3).toString()),
                                 'Category': unicode(result.value(4).toString()),
                                 'Event': unicode(result.value(5).toString()),
                                 'Room': unicode(result.value(6).toString()),
                                 'Date': unicode(result.value(7).toString()),
                                 'StartTime': unicode(result.value(8).toString()),
                                 'EndTime': unicode(result.value(9).toString())})
        finally:
            file.close()

    def export_reports_to_csv(self, fname):
        fieldNames = ('Title',
                      'Speaker',
                      'Abstract',
                      'Category',
                      'Event',
                      'Room',
                      'Date',
                      'StartTime',
                      'EndTime',
                      'Problem',
                      'Error')
        try:
            file = open(fname, 'w')
            writer = csv.DictWriter(file, fieldnames=fieldNames)
            headers = dict((n, n) for n in fieldNames)
            writer.writerow(headers)

            result = self.get_reports()
            for report in result:
                writer.writerow({'Title': report.presentation.title,
                                 'Speaker': report.presentation.speaker,
                                 'Abstract': report.presentation.description,
                                 'Category': report.presentation.category,
                                 'Event': report.presentation.event,
                                 'Room': report.presentation.room,
                                 'Date': report.presentation.date,
                                 'StartTime': report.presentation.startTime,
                                 'EndTime': report.presentation.endTime,
                                 'Problem': report.failure.indicator,
                                 'Error': report.failure.comment})
        finally:
            file.close()

    #
    # Reporting Feature
    #
    def __create_failures_table(self, schema=REPORTS_SCHEMA_300):
        """Creates the failures table in the database. Should be used to initialize a new table"""
        QtSql.QSqlQuery(schema)

    def clear_report_db(self):
        """Drops the failures (reports) table from the database"""
        QtSql.QSqlQuery('''DROP TABLE IF EXISTS failures''')

    def get_report(self, talkid):
        """Returns a failure from a given talkid. Returned value is a Failure object"""
        result = QtSql.QSqlQuery('''SELECT * FROM failures WHERE Id = "%s"''' % talkid)
        if result.next():
            failure = Failure(unicode(result.value(0).toString()),  # id
                              unicode(result.value(1).toString()),  # comment
                              unicode(result.value(2).toString()),  # indicator
                              result.value(3).toBool())             # release
        else:
            failure = None
        return failure

    def get_reports(self):
        """Returns a list of failures in Report format"""
        result = QtSql.QSqlQuery('''Select * FROM failures''')
        list = []
        while result.next():
            failure = Failure(unicode(result.value(0).toString()),    # id
                              unicode(result.value(1).toString()),    # comment
                              unicode(result.value(2).toString()),    # indicator
                              bool(result.value(3)))                  # release
            p = self.get_presentation(failure.talkId)
            r = Report(p, failure)
            list.append(r)
        return list

    def insert_failure(self, failure):
        """Inserts a failure into the database"""
        QtSql.QSqlQuery(
            '''INSERT INTO failures VALUES ("%d", "%s", "%s", %d)''' %
            (int(failure.talkId), failure.comment, failure.indicator, failure.release))
        log.info("Failure added: %s - %s" % (failure.talkId, failure.comment))

    def update_failure(self, talk_id, failure):
        """Updates an existing Failure in the database"""
        QtSql.QtSqlQuery('''UPDATE failures SET Comments="%s", Indicator="%s", Release="%d" WHERE Id="%s"''' %
            (failure.comment,
             failure.indicator,
             failure.release,
             failure.talkId))
        log.info("Failure updated: %s %s" % (failure.talkId, failure.comment))

    def delete_failure(self, talk_id):
        """Removes a Presentation from the database"""
        QtSql.QSqlQuery('''DELETE FROM failures WHERE Id="%s"''' % talk_id)
        log.info("Failure %s deleted." % talk_id)

    def get_failures_model(self):
        """Gets the Failure reports table Model. Useful for QT GUI based Frontends to load the Model in Table Views"""
        if self.failuresModel is None:
            self.failuresModel = QtSql.QSqlTableModel()
            self.failuresModel.setTable("failures")
            self.failuresModel.setEditStrategy(QtSql.QSqlTableModel.OnFieldChange)
            self.failuresModel.select()

        return self.failuresModel

    #
    # Controller Feature
    #
    def __create_recentconn_table(self):
        """Creates the recentconn table in the database. Should be used to initialize a new table"""
        QtSql.QSqlQuery('''CREATE TABLE IF NOT EXISTS recentconn
                                        (host varchar(255),
                                         port int,
                                         passphrase varchar(255),
                                         UNIQUE (host, port) ON CONFLICT REPLACE)''')

    def clear_recentconn_table(self):
        """Drops the recentconn (Controller) table from the database"""
        QtSql.QSqlQuery('''DROP TABLE IF EXISTS recentconn''')

    def insert_recentconn(self, chost, cport, cpass):
        """Insert a failure into the database"""
        QtSql.QSqlQuery('''INSERT INTO recentconn VALUES("%s", "%d", "%s")''' % (chost, cport, cpass))
        log.info("Recent connection added: %s:%d" % (chost, cport))

    def get_recentconn_model(self):
        """Gets the Recent Connections table Model
        Useful for QT GUI based Frontends to load the Model in Table Views"""
        self.recentconnModel = QtSql.QSqlTableModel()
        self.recentconnModel.setTable("recentconn")
        self.recentconnModel.setEditStrategy(QtSql.QSqlTableModel.OnFieldChange)
        self.recentconnModel.select()

        return self.recentconnModel

########NEW FILE########
__FILENAME__ = failure
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/


class Failure():
    '''
    This class is responsible for encapsulate data about failures
    and its database related operations
    '''

    def __init__(self, talkID, comment, indicator, release=False):

        '''
        Initialize a failure report instance
        '''
        self.talkId = talkID
        self.comment = comment
        self.indicator = indicator
        self.release = release


class Report():
    def __init__(self, presentation, failure):
        '''
        Initialize a report instance
        '''
        self.presentation = presentation
        self.failure = failure

########NEW FILE########
__FILENAME__ = multimedia
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import datetime
import logging
import os

import gobject
gobject.threads_init()
import pygst
pygst.require("0.10")
import gst

from freeseer.framework.presentation import Presentation
from freeseer.framework.plugin import IOutput
from freeseer.framework.util import get_record_name

log = logging.getLogger(__name__)


class Multimedia:
    NULL = 0
    RECORD = 1
    PAUSE = 2
    STOP = 3

    def __init__(self, config, plugman, window_id=None, audio_feedback=None, cli=False):
        self.config = config
        self.plugman = plugman
        self.window_id = window_id
        self.audio_feedback_event = audio_feedback
        self.cli = cli

        self.record_audio = False
        self.record_video = False

        self.current_state = Multimedia.NULL

        # Initialize Player
        self.player = gst.Pipeline('player')
        bus = self.player.get_bus()
        bus.add_signal_watch()
        bus.enable_sync_message_emission()
        bus.connect('message', self.on_message)
        bus.connect('sync-message::element', self.on_sync_message)

        # Initialize Entry Points
        self.audio_tee = gst.element_factory_make('tee', 'audio_tee')
        self.video_tee = gst.element_factory_make('tee', 'video_tee')
        self.player.add(self.audio_tee)
        self.player.add(self.video_tee)

        log.debug("Gstreamer initialized.")

    ##
    ## GST Player Functions
    ##
    def on_message(self, bus, message):
        t = message.type

        if t == gst.MESSAGE_EOS:
            self.stop()

        elif t == gst.MESSAGE_ERROR:
            err, debug = message.parse_error()
            log.error(str(err) + str(debug))

        elif message.structure is not None:
            s = message.structure.get_name()

            if s == 'level' and self.audio_feedback_event is not None:
                msg = message.structure.to_string()
                rms_dB = float(msg.split(',')[6].split('{')[1].rstrip('}'))

                # This is an inaccurate representation of decibels into percent
                # conversion, this code should be revisited.
                try:
                    percent = (int(round(rms_dB)) + 50) * 2
                except OverflowError:
                    percent = 0
                self.audio_feedback_event(percent)

    def on_sync_message(self, bus, message):
        if message.structure is None:
            return
        message_name = message.structure.get_name()
        if message_name == 'prepare-xwindow-id' and self.window_id is not None:
            imagesink = message.src
            imagesink.set_property('force-aspect-ratio', True)
            imagesink.set_xwindow_id(int(self.window_id))
            log.debug("Preview loaded into window.")

    def set_window_id(self, window_id):
        """Sets the Window ID which GStreamer should paint on"""
        self.window_id = window_id

    def set_audio_feedback_handler(self, audio_feedback):
        """Sets the handler for Audio Feedback levels"""
        self.audio_feedback_event = audio_feedback

    ##
    ## Recording functions
    ##
    def record(self):
        """
        Start recording.
        """
        self.player.set_state(gst.STATE_PLAYING)
        self.current_state = Multimedia.RECORD
        log.debug("Recording started.")

    def pause(self):
        """
        Pause recording.
        """
        self.player.set_state(gst.STATE_PAUSED)
        self.current_state = Multimedia.PAUSE
        log.debug("Gstreamer paused.")

    def stop(self):
        """
        Stop recording.
        """
        if self.current_state != Multimedia.NULL and self.current_state != Multimedia.STOP:
            self.player.set_state(gst.STATE_NULL)

            self.unload_audiomixer()
            self.unload_videomixer()
            self.unload_output_plugins()

            self.current_state = Multimedia.STOP
            log.debug("Gstreamer stopped.")

    def prepare_metadata(self, presentation):
        """Returns a dictionary of tags and tag values.

        To be used for populating the current recording's file metadata.
        """
        return {"title":     presentation.title,
                "artist":    presentation.speaker,
                "performer": presentation.speaker,
                "album":     presentation.event,
                "location":  presentation.room,
                "date":      str(datetime.date.today()),
                "comment":   presentation.description}

    ##
    ## Plugin Loading
    ##

    def load_backend(self, presentation=None, filename=None):
        log.debug("Loading Output plugins...")

        filename_for_frontend = None

        load_plugins = []

        if self.config.record_to_file:
            p = self.plugman.get_plugin_by_name(self.config.record_to_file_plugin, "Output")
            load_plugins.append(p)

        if self.config.record_to_stream:
            p = self.plugman.get_plugin_by_name(self.config.record_to_stream_plugin, "Output")
            load_plugins.append(p)

        if self.config.audio_feedback and not self.cli:
            p = self.plugman.get_plugin_by_name("Audio Feedback", "Output")
            load_plugins.append(p)

        if self.config.video_preview and not self.cli:
            p = self.plugman.get_plugin_by_name("Video Preview", "Output")
            load_plugins.append(p)

        plugins = []
        for plugin in load_plugins:
            log.debug("Loading Output: %s", plugin.plugin_object.get_name())

            extension = plugin.plugin_object.get_extension()

            # Create a filename to record to.
            if presentation is None and filename is not None:
                record_name = get_record_name(extension, filename=filename, path=self.config.videodir)
                presentation = Presentation(filename)
            elif presentation is not None:
                record_name = get_record_name(extension, presentation=presentation, path=self.config.videodir)
            else:
                # Invalid combination you must pass in a presentation or a filename
                logging.error("Failed to configure recording name. No presentation or filename provided.")
                return False

            # This is to ensure that we don't log a message when extension is None
            if extension is not None:
                log.info('Set record name to %s', record_name)
                filename_for_frontend = record_name

            # Prepare metadata.
            metadata = self.prepare_metadata(presentation)
            #self.populate_metadata(data)

            record_location = os.path.abspath(self.config.videodir + '/' + record_name)
            plugin.plugin_object.set_recording_location(record_location)

            plugin.plugin_object.load_config(self.plugman)
            plugins.append(plugin.plugin_object)

        if not self.load_output_plugins(plugins,
                                        self.config.enable_audio_recording,
                                        self.config.enable_video_recording,
                                        metadata):
            # Loading Output plugins failed, abort
            return False

        if self.config.enable_audio_recording:
            log.debug("Loading Audio Recording plugins...")
            audiomixer = self.plugman.get_plugin_by_name(self.config.audiomixer, "AudioMixer").plugin_object
            if audiomixer is not None:
                audiomixer.load_config(self.plugman)

                # Get audio mixer inputs bins.
                audiomixer_inputs = []

                audioinputs = audiomixer.get_inputs()
                for name, instance in audioinputs:
                    log.debug("Loading Audio Mixer Input: %s-%d", name, instance)
                    audio_input = self.plugman.get_plugin_by_name(name, "AudioInput").plugin_object
                    audio_input.set_instance(instance)
                    audio_input.load_config(self.plugman)
                    audiomixer_inputs.append(audio_input.get_audioinput_bin())

                if not self.load_audiomixer(audiomixer, audiomixer_inputs):
                    # Loading AudioMixer failed, abort
                    self.unload_output_plugins()
                    return False

        if self.config.enable_video_recording:
            log.debug("Loading Video Recording plugins...")
            videomixer = self.plugman.get_plugin_by_name(self.config.videomixer, "VideoMixer").plugin_object
            if videomixer is not None:
                videomixer.load_config(self.plugman)

                # Get video mixer inputs bins.
                videomixer_inputs = []

                videoinputs = videomixer.get_inputs()
                for name, instance in videoinputs:
                    log.debug("Loading Video Mixer Input: %s-%d", name, instance)
                    video_input = self.plugman.get_plugin_by_name(name, "VideoInput").plugin_object
                    video_input.set_instance(instance)
                    video_input.load_config(self.plugman)
                    videomixer_inputs.append(video_input.get_videoinput_bin())

                if not self.load_videomixer(videomixer, videomixer_inputs):
                    # Loading VideoMixer failed, abort
                    self.unload_output_plugins()
                    self.unload_audiomixer()
                    return False

        return True, filename_for_frontend

    def load_output_plugins(self, plugins, record_audio, record_video, metadata):
        self.output_plugins = []
        for plugin in plugins:
            type = plugin.get_type()
            bin = plugin.get_output_bin(record_audio, record_video, metadata)

            if not bin:
                log.error("Failed to load Output plugin: bin returned None")
                self.unload_output_plugins()
                return False

            if type == IOutput.AUDIO:
                if record_audio:
                    self.player.add(bin)
                    self.audio_tee.link(bin)
                    self.output_plugins.append(bin)
            elif type == IOutput.VIDEO:
                if record_video:
                    self.player.add(bin)
                    self.video_tee.link(bin)
                    self.output_plugins.append(bin)
            elif type == IOutput.BOTH:
                self.player.add(bin)
                if record_audio:
                    self.audio_tee.link_pads("src%d", bin, "audiosink")
                if record_video:
                    self.video_tee.link_pads("src%d", bin, "videosink")
                self.output_plugins.append(bin)

        return True

    def unload_output_plugins(self):
        for plugin in self.output_plugins:
            self.video_tee.unlink(plugin)
            self.audio_tee.unlink(plugin)
            self.player.remove(plugin)

    def load_audiomixer(self, mixer, inputs):
        self.record_audio = True
        self.audio_input_plugins = inputs

        self.audiomixer = mixer.get_audiomixer_bin()

        if not self.audiomixer:
            log.error("Failed to load AudioMixer plugin: bin returned None")
            return False

        self.player.add(self.audiomixer)
        self.audiomixer.link(self.audio_tee)

        mixer.load_inputs(self.player, self.audiomixer, inputs)

        return True

    def unload_audiomixer(self):
        if self.record_audio is True:
            for plugin in self.audio_input_plugins:
                self.audio_tee.unlink(plugin)
                self.player.remove(plugin)

            self.audiomixer.unlink(self.audio_tee)
            self.player.remove(self.audiomixer)

    def load_videomixer(self, mixer, inputs):
        self.record_video = True
        self.video_input_plugins = inputs

        self.videomixer = mixer.get_videomixer_bin()

        if not self.videomixer:
            log.error("Failed to load VideoMixer plugin: bin returned None")
            return False

        self.player.add(self.videomixer)
        self.videomixer.link(self.video_tee)

        mixer.load_inputs(self.player, self.videomixer, inputs)

        return True

    def unload_videomixer(self):
        if self.record_video is True:
            for plugin in self.video_input_plugins:
                self.video_tee.unlink(plugin)
                self.player.remove(plugin)

            self.videomixer.unlink(self.video_tee)
            self.player.remove(self.videomixer)

########NEW FILE########
__FILENAME__ = plugin
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import ConfigParser
import logging
import os
import sys
import xml.etree.ElementTree as ET

from PyQt4 import QtCore
from yapsy.PluginManager import PluginManagerSingleton
from yapsy.ConfigurablePluginManager import ConfigurablePluginManager
from yapsy.IPlugin import IPlugin

log = logging.getLogger(__name__)


class PluginManager(QtCore.QObject):
    '''
    Plugin Manager for Freeseer

    Provides the core functionality which enables plugin support in.
    '''

    def __init__(self, profile):
        QtCore.QObject.__init__(self)

        self.firstrun = False
        PluginManagerSingleton.setBehaviour([ConfigurablePluginManager])
        self.plugmanc = PluginManagerSingleton.get()
        locator = self.plugmanc.getPluginLocator()
        locator.setPluginInfoExtension("freeseer-plugin")

        self.profile = profile

        self.configfile = profile.get_filepath('plugin.conf')

        self.config = ConfigParser.ConfigParser()
        self.load()
        self.plugmanc.setConfigParser(self.config, self.save)

        # Get the path where the installed plugins are located on systems where
        # freeseer is installed.
        pluginpath = "%s/../plugins" % os.path.dirname(os.path.abspath(__file__))

        self.plugmanc.setPluginPlaces([pluginpath,
                                       os.path.expanduser("~/.freeseer/plugins"),
                                       "freeseer/plugins"])
        self.plugmanc.setCategoriesFilter({
            "AudioInput": IAudioInput,
            "AudioMixer": IAudioMixer,
            "VideoInput": IVideoInput,
            "VideoMixer": IVideoMixer,
            "Importer":   IImporter,
            "Output":     IOutput})
        self.plugmanc.collectPlugins()

        # If config was corrupt or did not exist, reset default plugins.
        if self.firstrun:
            self.set_default_plugins()

        for plugin in self.plugmanc.getAllPlugins():
            plugin.plugin_object.set_plugman(self)

        log.debug("Plugin manager initialized.")

    def __call__(self):
        pass

    def load(self):
        try:
            self.config.readfp(open(self.configfile))
        # Config file does not exist, create a default
        except IOError:
            log.debug("First run scenario detected. Creating new configuration files.")
            self.firstrun = True  # If config was corrupt or did not exist, reset defaults.
            self.save()
            return

    def save(self):
        with open(self.configfile, 'w') as configfile:
            self.config.write(configfile)

    def set_default_plugins(self):
        """
        Default the passthrough mixers and ogg output plugins.
        """
        self.set_plugin_option("AudioMixer", "Audio Passthrough-0", "Audio Input", "Audio Test Source")
        self.set_plugin_option("VideoMixer", "Video Passthrough-0", "Video Input", "Video Test Source")
        self.save()
        log.info("Default plugins enabled.")

    def get_plugin_option(self, category, name, option):
        """
        Returns the value stored in the config for a plugin option

        Parameters:
            category    - category to check
            name        - name of the plugin
            option      - plugin option to retrieve
        Returns:
            value of plugin option
        """
        return self.plugmanc.readOptionFromPlugin(category, name, option)

    def set_plugin_option(self, category, name, option, value):
        """
        Stores a value to the config for a plugin option

        Parameters:
            category    - category to check
            name        - name of the plugin
            option      - plugin option to retrieve
            value       - value to store
        Returns:
            none
        """
        self.plugmanc.registerOptionFromPlugin(category, name, option, value)

    ##
    ## Functions related to getting plugins supported by user's OS
    ##

    def _os_supported(self, plugin):
        """
        Determines if the user's OS as detected by sys.platform is supported by
        the plugin.

        Parameters: plugin - a plugin object
        Returns: true/false
        """
        return sys.platform in plugin.plugin_object.get_supported_os()

    def _get_supported_plugins(self, unfiltered_plugins):
        """
        Returns a list of plugins supported by the users OS as detected by
        python's sys.platform library.

        Parameters:
            unfiltered plugins - list of plugins to filter
        Returns:
            list of supported plugins
        """
        plugins = []

        for plugin in unfiltered_plugins:
            if self._os_supported(plugin):
                plugins.append(plugin)

        return plugins

    def get_plugin_by_name(self, name, category):
        """
        Takes a name & category and returns the plugin with that name.

        Parameters:
            name        - name of the plugin
            category    - category to search
        Returns:
            plugin
        """
        return self.plugmanc.getPluginByName(name, category)

    def get_all_plugins(self):
        """
        Returns a list of all plugins supported by the users OS as detected by
        python's sys.platform library.

        Parameters:
            none
        Returns:
            list of all supported plugins
        """
        unfiltered_plugins = self.plugmanc.getAllPlugins()
        return self._get_supported_plugins(unfiltered_plugins)

    def get_plugins_of_category(self, category):
        """
        Returns a list of all plugins in category supported by the users OS as
        detected by python's sys.platform library.

        Parameters:
            none
        Returns:
            list of all supported plugins
        """
        unfiltered_plugins = self.plugmanc.getPluginsOfCategory(category)
        return self._get_supported_plugins(unfiltered_plugins)

    def get_audioinput_plugins(self):
        """
        Returns a list of plugins that are supported by the users OS as
        detected by python's sys.platform library.

        Parameters:
            none
        Returns:
            list of supported AudioInput plugins
        """
        unfiltered_plugins = self.plugmanc.getPluginsOfCategory("AudioInput")
        return self._get_supported_plugins(unfiltered_plugins)

    def get_audiomixer_plugins(self):
        """
        Returns a list of plugins that are supported by the users OS as
        detected by python's sys.platform library.

        Parameters:
            none
        Returns:
            list of supported AudioMixer plugins
        """
        unfiltered_plugins = self.plugmanc.getPluginsOfCategory("AudioMixer")
        return self._get_supported_plugins(unfiltered_plugins)

    def get_videoinput_plugins(self):
        """
        Returns a list of plugins that are supported by the users OS as
        detected by python's sys.platform library.

        Parameters:
            none
        Returns:
            list of supported VideoInput plugins
        """
        unfiltered_plugins = self.plugmanc.getPluginsOfCategory("VideoInput")
        return self._get_supported_plugins(unfiltered_plugins)

    def get_videomixer_plugins(self):
        """
        Returns a list of plugins that are supported by the users OS as
        detected by python's sys.platform library.

        Parameters:
            none
        Returns:
            list of supported VideoMixer plugins
        """
        unfiltered_plugins = self.plugmanc.getPluginsOfCategory("VideoMixer")
        return self._get_supported_plugins(unfiltered_plugins)

    def get_importer_plugins(self):
        """Returns a list of plugins that are supported by the users OS as detected by python's sys.platform library

        Parameters:
            none
        Returns:
            list of supported Importer plugins
        """
        unfiltered_plugins = self.plugmanc.getPluginsOfCategory("Importer")
        return self._get_supported_plugins(unfiltered_plugins)

    def get_output_plugins(self):
        """
        Returns a list of plugins that are supported by the users OS as
        detected by python's sys.platform library.

        Parameters:
            none
        Returns:
            list of supported Output plugins
        """
        unfiltered_plugins = self.plugmanc.getPluginsOfCategory("Output")
        return self._get_supported_plugins(unfiltered_plugins)


class IBackendPlugin(IPlugin):
    instance = 0
    name = None
    widget = None
    CATEGORY = "Undefined"

    # list of supported OSes per:
    #    http://docs.python.org/2/library/sys.html#sys.platform
    os = []

    config_loaded = False

    def __init__(self):
        IPlugin.__init__(self)

    def get_name(self):
        return self.name

    def get_supported_os(self):
        """
        Returns a list of OSes supported by the plugin
        """
        return self.os

    def get_config_name(self):
        return "%s-%s" % (self.name, self.instance)

    def load_config(self, plugman):
        pass

    def set_plugman(self, plugman):
        self.plugman = plugman

    def set_instance(self, instance=0):
        self.instance = instance

    def set_gui(self, gui):
        self.gui = gui

    def get_dialog(self):
        widget = self.get_widget()
        self.retranslate()  # Translate the UI

        # Only load configuration the first time the user opens widget
        if not self.config_loaded:
            log.debug(self.name + " loading configuration into widget.")
            self.config_loaded = True
            self.widget_load_config(self.plugman)

        if widget is not None:
            self.gui.show_plugin_widget_dialog(widget)

    def get_widget(self):
        """
        Implement this method to return the settings widget (Qt based).
        Used by Freeseer configtool
        """
        return None

    def __enable_connections(self):
        """
        Implement this method to setup Qt SIGNALs/SLOTS.

        This should be enabled after loading the widget config.
        """
        pass

    def widget_load_config(self, plugman):
        """
        Implement this when using a plugin widget. This function should be used
        to load any required configurations for the plugin widget.
        """
        pass

    def retranslate(self):
        """Implement this function to allow translation of UI components in the widget"""
        pass


class IAudioInput(IBackendPlugin):
    CATEGORY = "AudioInput"

    def __init__(self):
        IBackendPlugin.__init__(self)

    def get_audioinput_bin(self):
        raise NotImplementedError


class IAudioMixer(IBackendPlugin):
    CATEGORY = "AudioMixer"

    def __init__(self):
        IBackendPlugin.__init__(self)

    def get_audiomixer_bin(self):
        raise NotImplementedError

    def get_inputs(self):
        """
        Returns a list of tuples containing the input name and instance number that the audio mixer needs
        in order to initialize it's pipelines.

        This should be used so that the code that calls it can
        gather the required inputs before calling load_inputs().
        """
        raise NotImplementedError

    def load_inputs(self, player, mixer, inputs):
        """
        This method is responsible for loading the inputs needed
        by the mixer.
        """
        raise NotImplementedError


class IVideoInput(IBackendPlugin):
    CATEGORY = "VideoInput"

    def __init__(self):
        IBackendPlugin.__init__(self)

    def get_videoinput_bin(self):
        """
        Returns the Gstreamer Bin for the video input plugin.
        MUST be overridded when creating a video input plugin.
        """
        raise NotImplementedError


class IVideoMixer(IBackendPlugin):
    CATEGORY = "VideoMixer"

    def __init__(self):
        IBackendPlugin.__init__(self)

    def get_videomixer_bin(self):
        """
        Returns the Gstreamer Bin for the video mixer plugin.
        MUST be overridded when creating a video mixer plugin.
        """
        raise NotImplementedError

    def get_inputs(self):
        """
        Returns a list of tuples containing the input name and instance number that the video mixer needs
        in order to initialize it's pipelines.

        This should be used so that the code that calls it can
        gather the required inputs before calling load_inputs().
        """
        raise NotImplementedError

    def load_inputs(self, player, mixer, inputs):
        """
        This method is responsible for loading the inputs needed
        by the mixer.
        """
        raise NotImplementedError


class IOutput(IBackendPlugin):
    #
    # static variables
    #
    CATEGORY = "Output"

    # recordto
    FILE = 0
    STREAM = 1
    OTHER = 2

    # type
    AUDIO = 0
    VIDEO = 1
    BOTH = 2

    #
    # variables
    #
    recordto = None  # recordto: FILE, STREAM, OTHER
    type = None  # Types: AUDIO, VIDEO, BOTH
    extension = None
    location = None

    metadata_order = [
        "title",
        "artist",
        "performer",
        "album",
        "location",
        "date",
        "comment"]

    def __init__(self):
        IBackendPlugin.__init__(self)

    def get_recordto(self):
        return self.recordto

    def get_type(self):
        return self.type

    def get_output_bin(self, audio=True, video=True, metadata=None):
        """
        Returns the Gstreamer Bin for the output plugin.
        MUST be overridded when creating an output plugin.
        """
        raise NotImplementedError

    def get_extension(self):
        return self.extension

    def set_recording_location(self, location):
        self.location = location

    def set_metadata(self, data):
        """
        Set the metadata if supported by Output plugin.
        """
        pass

    def generate_xml_metadata(self, metadata):
        root = ET.Element('metadata')

        for key in self.metadata_order:
            node = ET.SubElement(root, key)
            node.text = metadata[key]

        return ET.ElementTree(root)


class IImporter(IBackendPlugin):
    CATEGORY = "Importer"

    def get_presentations(self):
        """Builds a list with all presentations"""
        raise NotImplementedError


class PluginError(Exception):
    def __init__(self, message):
        self.message = message

########NEW FILE########
__FILENAME__ = presentation
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

from os import path


class Presentation(object):
    '''
    This class is responsible for encapsulate data about presentations
    and its database related operations
    '''
    def __init__(self, title, speaker="", description="", category="", event="Default", room="Default", date="", startTime="", endTime=""):
        '''
        Initialize a presentation instance
        '''
        self.title = title
        self.speaker = speaker
        self.description = description
        self.category = category
        self.event = event
        self.room = room
        self.date = date
        self.startTime = startTime
        self.endTime = endTime


class PresentationFile(Presentation):

    '''
    This class represents a presentation that has been already been written
    to a file and the metadata that has been loaded from it
    '''

    def __init__(self, title, speaker="", description="", category="", event="Default", room="Default", date="", startTime="", endTime=""):
        Presentation.__init__(
            self, title, speaker, description, category, event, room, date, startTime, endTime)

        self.filename = ""
        self.album = ""
        self.tracknumber = None
        self.filedate = None
        self.duration = None
        self.filesize = None

    artist = property(lambda self: self.speaker,
                      lambda self, value: self.__setattr__('speaker', value))

    filebase = property(lambda self: path.basename(self.filename))
    filepath = property(lambda self: path.dirname(self.filename))

########NEW FILE########
__FILENAME__ = qt_key_grabber
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import sys
from PyQt4 import QtCore, QtGui


class QtKeyGrabber(QtGui.QWidget):
    '''
    This class allows the user to press a combination of keys in order to
    set a shortkey.
    '''
    def __init__(self, parent=None):
        '''
        Create an active screen and initialize variables used in this
        class.
        '''
        QtGui.QWidget.__init__(self, None, QtCore.Qt.FramelessWindowHint)
        self.setAttribute(QtCore.Qt.WA_DeleteOnClose)
        self.setWindowState(QtCore.Qt.WindowActive)

        self.parent = parent
        self.flag = False
        self.modifiers = {}
        self.setWindowOpacity(0.3)

    def keyPressEvent(self, event):
        other = None
        if event.key() == QtCore.Qt.Key_Shift:
            self.modifiers[QtCore.Qt.Key_Shift] = u'Shift'
        elif event.key() == QtCore.Qt.Key_Control:
            self.modifiers[QtCore.Qt.Key_Control] = u'Ctrl'
        elif event.key() == QtCore.Qt.Key_Alt:
            self.modifiers[QtCore.Qt.Key_Alt] = u'Alt'
        elif event.key() == QtCore.Qt.Key_Meta:
            self.modifiers[QtCore.Qt.Key_Meta] = u'Meta'
        else:
            other = event.text()
        if other:
            if QtCore.Qt.Key_Control in self.modifiers:
                self.key_string = u'+'.join(self.modifiers.values() + [unicode(chr(event.key()))])
            else:
                self.key_string = u'+'.join(self.modifiers.values() + [unicode(other)])
        else:
            self.key_string = u'+'.join(self.modifiers.values())
        if (self.parent.core.config.key_rec == 'Ctrl+Shift+R'):
            self.flag = True

    def keyReleaseEvent(self, event):
        if event.key() == QtCore.Qt.Key_Shift:
            if QtCore.Qt.Key_Shift in self.modifiers:
                del self.modifiers[QtCore.Qt.Key_Shift]
        elif event.key() == QtCore.Qt.Key_Control:
            if QtCore.Qt.Key_Control in self.modifiers:
                del self.modifiers[QtCore.Qt.Key_Control]
        elif event.key() == QtCore.Qt.Key_Alt:
            if QtCore.Qt.Key_Alt in self.modifiers:
                del self.modifiers[QtCore.Qt.Key_Alt]
        elif event.key() == QtCore.Qt.Key_Meta:
            if QtCore.Qt.Key_Meta in self.modifiers:
                del self.modifiers[QtCore.Qt.Key_Meta]
        #print len(self.modifiers)
        if len(self.modifiers) == 0:
            if self.flag:
                self.parent.grab_rec_set(self.key_string)
            else:
                self.parent.grab_stop_set(self.key_string)
            self.close()

if __name__ == "__main__":
    app = QtGui.QApplication(sys.argv)
    main = QtKeyGrabber()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = util
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2013, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import ctypes
import os
import shutil
import sys
import unicodedata


def format_size(num):
    for x in ['bytes', 'KB', 'MB', 'GB', 'TB']:
        if num < 1024.0:
            return "%3.1f %s" % (num, x)
        num /= 1024.0


def get_free_space(directory):
        """ Return directory free space (in human readable form) """
        if sys.platform in ["win32", "cygwin"]:
            free_bytes = ctypes.c_ulonglong(0)
            ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(directory),
                                                       None, None, ctypes.pointer(free_bytes))
            space = free_bytes.value
        else:
            space = os.statvfs(directory).f_bfree * os.statvfs(directory).f_frsize

        return format_size(space)

###
### Filename related functions
###


def get_record_name(extension, presentation=None, filename=None, path="."):
    """Returns the filename to use when recording.

    If a record name with a .None extension is returned, the record name
    will just be ignored by the output plugin (e.g. Video Preview plugin).

    Function will return None if neither presentation nor filename is passed.
    """
    if presentation is not None:
        recordname = make_record_name(presentation)
    elif filename is not None:
        recordname = filename
    else:
        return None

    count = 0
    tempname = recordname

    # Add a number to the end of a duplicate record name so we don't
    # overwrite existing files
    while(os.path.exists(os.path.join(path, "%s.%s" % (tempname, extension)))):
        tempname = "{0}-{1}".format(recordname, count)
        count += 1

    recordname = "%s.%s" % (tempname, extension)

    return recordname


def make_record_name(presentation):
    """Create an 'EVENT-ROOM-SPEAKER-TITLE' record name using presentation metadata."""
    tags = [
        make_shortname(presentation.event),
        make_shortname(presentation.room),
        make_shortname(presentation.speaker),
        make_shortname(presentation.title),
    ]
    record_name = unicode('-'.join(tag for tag in tags if tag))

    # Convert unicode filenames to their equivalent ascii so that
    # we don't run into issues with gstreamer or filesystems.
    safe_record_name = unicodedata.normalize('NFKD', record_name).encode('ascii', 'ignore')

    return safe_record_name or 'default'


def make_shortname(string):
    """Returns the first 6 characters of a string in uppercase.

    Strip out non alpha-numeric characters, spaces, and most punctuation.
    """
    bad_chars = set("!@#$%^&*()+=|:;{}[]',? <>~`/\\")
    string = "".join(ch for ch in string if ch not in bad_chars)
    return string[0:6].upper()


###
### Handy functions for reseting Freeseer configuration
###


def reset(configdir):
    """Deletes the Freeseer configuration directory"""
    if validate_configdir(configdir):
        print('This will wipe out your freeseer configuration directory.')
        if confirm_yes() is True:
            shutil.rmtree(configdir)
    else:
        print("%s is not a invalid configuration directory." % configdir)


def reset_configuration(configdir, profile='default'):
    """Deletes the Freeseer configuration files freeseer.conf and plugin.conf"""
    if profile is None:
        profile = 'default'

    if validate_configdir(configdir):
        freeseer_conf = os.path.join(configdir, 'profiles', profile, 'freeseer.conf')
        plugin_conf = os.path.join(configdir, 'profiles', profile, 'plugin.conf')

        os.remove(freeseer_conf)
        os.remove(plugin_conf)
    else:
        print("%s is not a invalid configuration directory." % configdir)


def reset_database(configdir, profile='default'):
    """Deletes the Freeseer database file"""
    if profile is None:
        profile = 'default'

    if validate_configdir(configdir):
        dbfile = os.path.join(configdir, 'profiles', profile, 'presentations.db')
        os.remove(dbfile)
    else:
        print("%s is not a invalid configuration directory." % configdir)


def validate_configdir(configdir):
    """Validate that the configdir is not one of the blacklisted directories"""
    if (configdir and configdir != '/' and
                      configdir != '~' and
                      configdir != os.path.abspath(os.path.expanduser('~'))):
        return True

    return False


def confirm_yes():
    """Prompts the user to confirm by typing 'yes' in response"""
    confirm = raw_input("Enter 'yes' to confirm: ")
    if confirm == 'yes':
        return True
    return False

########NEW FILE########
__FILENAME__ = youtube
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/


import httplib
import httplib2
import logging
import os
import time

from apiclient import discovery
from apiclient.errors import HttpError
from apiclient.http import MediaFileUpload
from mutagen import oggvorbis
from oauth2client import file
from oauth2client import client
from oauth2client import tools

log = logging.getLogger(__name__)


class Response(object):
    """Class to serve as enum for responses"""

    SUCCESS = 0
    UNEXPECTED_FAILURE = 1
    UNRETRIABLE_ERROR = 2
    ACCESS_TOKEN_ERROR = 3
    MAX_RETRIES_REACHED = 4


class YoutubeService(object):
    """Class for interacting with YouTube Data API v3"""

    # Status codes and exceptions for retry logic
    MAX_RETRIES = 3
    RETRIABLE_EXCEPTIONS = (
        httplib2.HttpLib2Error,
        IOError,
        httplib.NotConnected,
        httplib.IncompleteRead,
        httplib.ImproperConnectionState,
        httplib.CannotSendRequest,
        httplib.CannotSendHeader,
        httplib.ResponseNotReady,
        httplib.BadStatusLine
    )
    RETRIABLE_STATUS_CODES = (500, 502, 503, 504)

    @staticmethod
    def acquire_token(client_secrets, oauth2_token, flags):
        """Handles the user consent process and saves the retrieved OAuth2 token

        Args:
            client_secrets              - path to client_secrets file
            oauth2_token                - path to save oauth2_token

            (YouTube Service Parameters)
            https://google-api-python-client.googlecode.com/hg/docs/epy/oauth2client.tools-module.html

            flags.auth_host_name         - Host name to use when running a local web server to handle redirects during
                                          OAuth authorization.
                                          (default: 'localhost')

            flags..auth_host_port         - Port to use when running a local web server to handle redirects during OAuth
                                          authorization.; repeat this option to specify a list of values
                                          (default: '[8080, 8090]')
                                          (an integer)

            flags.auth_local_webserver   - True/False Run a local web server to handle redirects during OAuth
                                          authorization.
                                          (default: True)
        """
        scope = ['https://www.googleapis.com/auth/youtube.upload']
        message = ("Please specify a valid client_secrets.json file.\n"
                    "For instructions to obtain one, please visit:\n"
                    "https://docs.google.com/document/d/1ro9I8jnOCgQlWRRVCPbrNnQ5-bMvQxDVg6o45zxud4c/edit")
        flow = client.flow_from_clientsecrets(client_secrets, scope=scope, message=message)
        storage = file.Storage(oauth2_token)
        tools.run_flow(flow, storage, flags)

    @staticmethod
    def valid_video_file(file):
        """Verify file is supported by Youtube

        Freeseer currently encodes to .ogg and .webm
        TODO: expand list to all types supported by Youtube

        Args:
            file: path to file to verify

        Returns:
            True if file is supported
        """
        return file.lower().endswith(('.ogg', '.webm'))

    @staticmethod
    def get_metadata(video_file):
        """Parses file metadata

        Parsing is delegated to appropriate library based on filetype
        If filetype is unsupported default metadata is used instead

        Args:
            video_file: path to file

        Returns:
            Metadata formatted to Youtube APIs status parameter
        """
        metadata = {
            "title": os.path.basename(video_file).split(".")[0],
            "description": "A video recorded with Freeseer",
            "tags": ['Freeseer', 'FOSSLC', 'Open Source'],
            "categoryId": 27    # temporary, see gh#415
        }
        if video_file.lower().endswith('.ogg'):
            tags = oggvorbis.Open(video_file)
            if "title" in tags:
                metadata['title'] = tags['title'][0]
            if "album" in tags and "artist" in tags and "date" in tags:
                metadata['description'] = "At {} by {} recorded on {}".format(tags['album'][0], tags['artist'][0], tags['date'][0])
        return metadata

    def __init__(self):
        """Initialize YoutubeService setting up http related values"""
        # Tell the underlying HTTP transport library not to retry, we want explicit control over the retry logic
        # and to only retry on errors/exceptions specified by Google
        httplib2.RETRIES = 1

    def authorize(self, oauth2_token):
        """Function that authorizes upcoming HTTP transactions

        If the token has expired, a new one is retrieved automatically via the refresh token (located inside the same file)
        """
        storage = file.Storage(oauth2_token)
        credentials = storage.get()
        http = credentials.authorize(httplib2.Http())
        self.service = discovery.build('youtube', 'v3', http=http)

    def upload_video(self, video_file):
        """Function to upload file to Youtube

        Function grabs metadata from video_file and passes it along in the upload, the files privacy and license are
        set to public and youtube respectively

        Args:
            video_file: path to video file for upload

        Returns:
            A tuple containing a response code and a dictionary with the appropriate information
        """
        part = "snippet,status"
        metadata = self.get_metadata(video_file)
        body = {
            "snippet": {
                "title": metadata['title'],
                "description": metadata['description'],
                "tags": metadata['categoryId'],
                "categoryId": metadata['categoryId']
            },
            "status": {
                "privacyStatus": "public",
                "license": "youtube",   # temporary, see gh#414
                "embeddable": True,
                "publicStatsViewable": True
            }
        }
        # This is to fix a bug, the API thinks our .ogg files are audio/ogg
        mimetype = "video/{}".format(video_file.split(".")[-1])
        media_body = MediaFileUpload(video_file, chunksize=-1, resumable=True, mimetype=mimetype)
        insert_request = self.service.videos().insert(part=part, body=body, media_body=media_body)
        response = None
        error = None
        retry = 0
        sleep_seconds = 5.0
        while response is None:
            try:
                log.info("Uploading %s" % video_file)
                (status, response) = insert_request.next_chunk()
                if 'id' in response:
                    return (Response.SUCCESS, response)
                else:
                    return (Response.UNEXPECTED_FAILURE, response)
            except HttpError as e:
                if e.resp.status in self.RETRIABLE_STATUS_CODES:
                    error = "A retriable HTTP error {} occurred:\n{}".format(e.resp.status, e.content)
                else:
                    return (Response.UNRETRIABLE_ERROR, {"status": e.resp.status, "content": e.content})
            except self.RETRIABLE_EXCEPTIONS as e:
                error = "A retriable error occurred: {}".format(e)
            except client.AccessTokenRefreshError:
                return (Response.ACCESS_TOKEN_ERROR, None)
            if error is not None:
                log.error(error)
                retry += 1
                if retry > self.MAX_RETRIES:
                    return (Response.MAX_RETRIES_REACHED, None)
                log.info("Sleeping %s seconds and then retrying..." % sleep_seconds)
                time.sleep(sleep_seconds)

########NEW FILE########
__FILENAME__ = cli
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2013, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/


import argparse
import signal
import sys
import textwrap

import pygst
import yapsy
from PyQt4 import QtCore
from tabulate import tabulate

from freeseer import __version__
from freeseer import settings
from freeseer.frontend.upload import youtube

signal.signal(signal.SIGINT, signal.SIG_DFL)


def setup_parser():
    """Initialize the Argument Parser"""
    parser = argparse.ArgumentParser(description='Freeseer Recording Utility',
                                     formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument("-v", "--version", action='version',
                                           version=textwrap.dedent('''\
                                           Freeseer {version} ({platform})
                                           Python {pymajor}.{pyminor}.{pymicro}
                                           PyGst {pygst_version}
                                           PyQt {pyqt_version}
                                           Qt {qt_version}
                                           Yapsy {yapsy_version}
                                           '''.format(version=__version__,
                                                      platform=sys.platform,
                                                      pymajor=sys.version_info.major,
                                                      pyminor=sys.version_info.minor,
                                                      pymicro=sys.version_info.micro,
                                                      pygst_version=pygst._pygst_version,
                                                      pyqt_version=QtCore.PYQT_VERSION_STR,
                                                      qt_version=QtCore.QT_VERSION_STR,
                                                      yapsy_version=yapsy.__version__)))

    # Configure Subparsers
    subparsers = parser.add_subparsers(dest='app', help='Command List')
    setup_parser_record(subparsers)
    setup_parser_config(subparsers)
    setup_parser_talk(subparsers)
    setup_parser_report(subparsers)
    setup_parser_upload(subparsers)
    return parser


def setup_parser_record(subparsers):
    """Setup the record command parser"""
    parser = subparsers.add_parser('record', help='Freeseer recording functions')
    parser.add_argument("-t", "--talk", type=int, help="Talk ID of the talk you would like to record")
    parser.add_argument("-f", "--filename", type=unicode, help="Record to filename")
    parser.add_argument("-p", "--profile", type=unicode, help="Use profile")
    parser.add_argument("-s", "--show-talks", help="Shows all talks", action="store_true")


###
### Config Parser and Subparsers
###

def setup_parser_config(subparsers):
    """Setup the config command parser"""
    parser = subparsers.add_parser('config', help='Freeseer configuration functions')
    subparsers = parser.add_subparsers(dest="config_service")
    setup_parser_config_reset(subparsers)
    setup_parser_config_youtube(subparsers)


def setup_parser_config_reset(subparsers):
    """Setup reset command parser"""
    parser = subparsers.add_parser("reset", help="Reset Freeseer configuration and database",
        formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument("reset",
        choices=['all', 'configuration', 'database'],
        help="""Reset's Freeseer (default: all)

        Options:
            all           - Reset's Freeseer (removes the Freeseer configuration directory)
            configuration - Reset's Freeseer configuration (removes freeseer.conf and plugins.conf)
            database      - Reset's Freeseer database (removes presentations.db)
        """)
    parser.add_argument("-p", "--profile", type=unicode, help="Profile to reset (Default: default)")


def setup_parser_config_youtube(subparsers):
    """Setup Youtube config parser"""
    from oauth2client import tools
    # Inherent Google API argparser
    parser = subparsers.add_parser("youtube", help="Obtain OAuth2 token for Youtube access", parents=[tools.argparser])
    defaults = youtube.get_defaults()
    parser.add_argument("-c", "--client-secrets", help="Path to client secrets file", default=defaults["client_secrets"])
    parser.add_argument("-t", "--token", help="Location to save token file", default=defaults["oauth2_token"])


def setup_parser_talk(subparsers):
    """Setup the talk command parser"""
    parser = subparsers.add_parser('talk', help='Freeseer talk database functions')
    parser.add_argument("action", choices=['add', 'remove', 'clear', 'list'], nargs='?')
    parser.add_argument("-t", "--title", type=unicode, help="Title")
    parser.add_argument("-s", "--speaker", type=unicode, help="Speaker")
    parser.add_argument("-r", "--room", type=unicode, help="Room")
    parser.add_argument("-e", "--event", type=unicode, help="Event")
    parser.add_argument("-i", "--talk-id", type=int, help="Talk ID")


def setup_parser_report(subparsers):
    """Setup the report command parser"""
    subparsers.add_parser('report', help='Freeseer reporting functions')


def setup_parser_upload(subparsers):
    """Setup upload tool command parser"""
    parser = subparsers.add_parser("upload", help="Upload file tool")
    subparsers = parser.add_subparsers(dest="upload_service", help="Service to upload with")
    setup_parser_upload_youtube(subparsers)


def setup_parser_upload_youtube(subparsers):
    """Setup youtube upload command parser"""
    defaults = youtube.get_defaults()
    parser = subparsers.add_parser("youtube", help="Youtube upload command line tool")
    parser.add_argument("files", help="Path to videos or video directories to upload", nargs="*", default=[defaults["video_directory"]])
    parser.add_argument("-t", "--token", help="Path to OAuth2 token", default=defaults["oauth2_token"])
    parser.add_argument("-y", "--yes", help="Automatic yes to prompts", action="store_true")


def parse_args(parser, parse_args=None):
    if len(sys.argv) == 1:  # No arguments passed
        launch_recordapp()

    args = parser.parse_args(parse_args)

    if args.app == 'record':
        if len(sys.argv) == 2:  # No 'record' arguments passed
            launch_recordapp()

        import gobject
        # Must declare after argparse otherwise GStreamer will take over the cli help
        from freeseer.frontend.record.RecordingController import RecordingController

        # TODO: Abstract the database stuff away from here as it's only
        #       used in conjunction with talks.
        if args.profile is None:  # Profile is an optional parameter
            args.profile = 'default'
        profile = settings.profile_manager.get(args.profile)
        config = profile.get_config('freeseer.conf', settings.FreeseerConfig,
                                    storage_args=['Global'], read_only=False)
        # XXX: There should only be 1 database per user. Workaround for this
        #      is to put it in the 'default' profile.
        db = settings.profile_manager.get().get_database()

        app = RecordingController(profile, db, config, cli=True)

        if args.talk:
            if app.record_talk_id(args.talk):
                sys.exit(gobject.MainLoop().run())
        elif args.filename:
            if app.record_filename(args.filename):
                sys.exit(gobject.MainLoop().run())
        elif args.show_talks:
            app.print_talks()

    elif args.app == 'config':
        if len(sys.argv) == 2:  # No 'config' arguments passed
            launch_configtool()

        from freeseer.settings import configdir
        from freeseer.framework.util import reset
        from freeseer.framework.util import reset_configuration
        from freeseer.framework.util import reset_database
        from freeseer.framework.youtube import YoutubeService

        if args.config_service == "reset":
            if args.reset == "all":
                reset(configdir)
            elif args.reset == "configuration":
                reset_configuration(configdir, args.profile)
            elif args.reset == "database":
                reset_database(configdir, args.profile)
            else:
                print("Invalid reset option.")

        elif args.config_service == "youtube":
            YoutubeService.acquire_token(args.client_secrets, args.token, args)

    elif args.app == 'talk':
        if len(sys.argv) == 2:  # No 'talk' arguments passed
            launch_talkeditor()

        from freeseer.framework.presentation import Presentation

        profile = settings.profile_manager.get()
        db = profile.get_database()

        if args.action == "add":
            presentation = Presentation(args.title,
                                        speaker=args.speaker,
                                        room=args.room,
                                        event=args.event)
            db.insert_presentation(presentation)

        elif args.action == "remove":
            db.delete_presentation(args.talk_id)

        elif args.action == "clear":
            db.clear_database()

        elif args.action == "list":
            talks_query = db.get_talks()
            talks_table = []
            while talks_query.next():
                record = talks_query.record()
                talks_table.append([
                    talks_query.value(record.indexOf('id')).toString(),
                    talks_query.value(record.indexOf('title')).toString(),
                    talks_query.value(record.indexOf('speaker')).toString(),
                    talks_query.value(record.indexOf('event')).toString(),
                ])
            if talks_table:
                print(tabulate(talks_table, headers=["ID", "Title", "Speaker", "Event"]))
            else:
                print("No talks present.")

        else:
            print("Invalid option.")

    elif args.app == 'report':
        if len(sys.argv) == 2:  # No 'report' arguments passed
            launch_reporteditor()

    elif args.app == 'upload':
        if args.upload_service == 'youtube':
            youtube.upload(args.files, args.token, args.yes)


def launch_recordapp():
    """Launch the Recording GUI if no arguments are passed"""
    from PyQt4.QtGui import QApplication
    from freeseer.frontend.record.record import RecordApp

    profile = settings.profile_manager.get()
    config = profile.get_config('freeseer.conf', settings.FreeseerConfig,
                                storage_args=['Global'], read_only=False)

    app = QApplication(sys.argv)
    main = RecordApp(profile, config)
    main.show()
    sys.exit(app.exec_())


def launch_configtool():
    """Launch Freeseer Configuration GUI if no arguments are passed"""
    from PyQt4 import QtGui
    from freeseer.frontend.configtool.configtool import ConfigToolApp

    profile = settings.profile_manager.get()
    config = profile.get_config('freeseer.conf', settings.FreeseerConfig,
                                storage_args=['Global'], read_only=False)

    app = QtGui.QApplication(sys.argv)
    main = ConfigToolApp(profile, config)
    main.show()
    sys.exit(app.exec_())


def launch_talkeditor():
    """Launch the Talk Editor GUI if no arguments are passed"""
    from PyQt4.QtGui import QApplication
    from freeseer.frontend.talkeditor.talkeditor import TalkEditorApp

    profile = settings.profile_manager.get()
    config = profile.get_config('freeseer.conf', settings.FreeseerConfig,
                                storage_args=['Global'], read_only=True)
    db = profile.get_database()

    app = QApplication(sys.argv)
    main = TalkEditorApp(config, db)
    main.show()
    sys.exit(app.exec_())


def launch_reporteditor():
    """Launch the Report Editor GUI"""
    import sys
    from PyQt4 import QtGui
    from freeseer.frontend.reporteditor.reporteditor import ReportEditorApp

    profile = settings.profile_manager.get()
    config = profile.get_config('freeseer.conf', settings.FreeseerConfig,
                                storage_args=['Global'], read_only=True)
    db = profile.get_database()

    app = QtGui.QApplication(sys.argv)
    main = ReportEditorApp(config, db)
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = AVWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2011  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4 import QtCore
from PyQt4 import QtGui


class AVWidget(QtGui.QWidget):
    '''
    classdocs
    '''

    def __init__(self, parent=None):
        '''
        Constructor
        '''
        QtGui.QWidget.__init__(self, parent)

        self.mainLayout = QtGui.QVBoxLayout()
        self.mainLayout.addStretch(0)
        self.setLayout(self.mainLayout)

        config_icon = QtGui.QIcon.fromTheme("preferences-system")

        #
        # Audio Input
        #

        self.audioLayout = QtGui.QGridLayout()
        self.audioGroupBox = QtGui.QGroupBox("Audio Input")
        self.audioGroupBox.setLayout(self.audioLayout)
        self.mainLayout.insertWidget(0, self.audioGroupBox)

        self.audioGroupBox.setCheckable(True)
        self.audioGroupBox.setSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)

        self.audioMixerLabel = QtGui.QLabel("Audio Mixer")
        self.audioMixerLabel.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.audioMixerComboBox = QtGui.QComboBox()
        self.audioMixerLabel.setBuddy(self.audioMixerComboBox)
        self.audioMixerSetupPushButton = QtGui.QToolButton()
        self.audioMixerSetupPushButton.setText("Setup")
        self.audioMixerSetupPushButton.setIcon(config_icon)
        self.audioMixerSetupPushButton.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.audioMixerSetupPushButton.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.audioLayout.addWidget(self.audioMixerLabel, 0, 0)
        self.audioLayout.addWidget(self.audioMixerComboBox, 0, 1)
        self.audioLayout.addWidget(self.audioMixerSetupPushButton, 0, 2)

        #
        # Video Input
        #

        self.videoLayout = QtGui.QGridLayout()
        self.videoGroupBox = QtGui.QGroupBox("Video Input")
        self.videoGroupBox.setLayout(self.videoLayout)
        self.mainLayout.insertWidget(0, self.videoGroupBox)

        self.videoGroupBox.setCheckable(True)
        self.videoGroupBox.setSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)

        self.videoMixerLabel = QtGui.QLabel("Video Mixer")
        self.videoMixerLabel.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.videoMixerComboBox = QtGui.QComboBox()
        self.videoMixerLabel.setBuddy(self.videoMixerComboBox)
        self.videoMixerSetupPushButton = QtGui.QToolButton()
        self.videoMixerSetupPushButton.setText("Setup")
        self.videoMixerSetupPushButton.setIcon(config_icon)
        self.videoMixerSetupPushButton.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.videoMixerSetupPushButton.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.videoLayout.addWidget(self.videoMixerLabel, 0, 0)
        self.videoLayout.addWidget(self.videoMixerComboBox, 0, 1)
        self.videoLayout.addWidget(self.videoMixerSetupPushButton, 0, 2)

        #
        # Record to File
        #

        self.fileLayout = QtGui.QGridLayout()
        self.fileGroupBox = QtGui.QGroupBox("Record to File")
        self.fileGroupBox.setLayout(self.fileLayout)
        self.mainLayout.insertWidget(0, self.fileGroupBox)

        self.fileGroupBox.setCheckable(True)
        self.fileGroupBox.setSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)

        self.fileLabel = QtGui.QLabel("File Format")
        self.fileLabel.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.fileComboBox = QtGui.QComboBox()
        self.fileLabel.setBuddy(self.fileComboBox)
        self.fileSetupPushButton = QtGui.QToolButton()
        self.fileSetupPushButton.setText("Setup")
        self.fileSetupPushButton.setIcon(config_icon)
        self.fileSetupPushButton.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.fileSetupPushButton.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.fileLayout.addWidget(self.fileLabel, 0, 0)
        self.fileLayout.addWidget(self.fileComboBox, 0, 1)
        self.fileLayout.addWidget(self.fileSetupPushButton, 0, 2)

        #
        # Record to Stream
        #

        self.streamLayout = QtGui.QGridLayout()
        self.streamGroupBox = QtGui.QGroupBox("Record to Stream")
        self.streamGroupBox.setLayout(self.streamLayout)
        self.mainLayout.insertWidget(0, self.streamGroupBox)

        self.streamGroupBox.setCheckable(True)
        self.streamGroupBox.setSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)

        self.streamLabel = QtGui.QLabel("Stream Format")
        self.streamLabel.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.streamComboBox = QtGui.QComboBox()
        self.streamLabel.setBuddy(self.streamComboBox)
        self.streamSetupPushButton = QtGui.QToolButton()
        self.streamSetupPushButton.setText("Setup")
        self.streamSetupPushButton.setIcon(config_icon)
        self.streamSetupPushButton.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
        self.streamSetupPushButton.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.streamLayout.addWidget(self.streamLabel, 0, 0)
        self.streamLayout.addWidget(self.streamComboBox, 0, 1)
        self.streamLayout.addWidget(self.streamSetupPushButton, 0, 2)

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    main = AVWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = configtool
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import logging
import os
import re

from PyQt4 import QtGui
from PyQt4 import QtCore
from PyQt4.QtGui import QInputDialog
from PyQt4.QtGui import QLineEdit
from PyQt4.QtGui import QMessageBox

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

from freeseer.framework.plugin import PluginManager, IOutput
from freeseer.frontend.qtcommon.FreeseerApp import FreeseerApp

from freeseer.frontend.qtcommon.AboutWidget import AboutWidget
from freeseer.frontend.configtool.AVWidget import AVWidget
from freeseer.frontend.configtool.ConfigToolWidget import ConfigToolWidget
from freeseer.frontend.configtool.GeneralWidget import GeneralWidget
from freeseer.frontend.configtool.PluginLoaderWidget import PluginLoaderWidget

log = logging.getLogger(__name__)


class ConfigToolApp(FreeseerApp):
    '''
    ConfigTool is used to tune settings used by the Freeseer Application
    '''

    def __init__(self, profile, config):
        FreeseerApp.__init__(self)

        # Load Config Stuff
        self.profile = profile
        self.config = config

        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/freeseer/logo.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.setWindowIcon(icon)

        # Initialize geometry, to be used for restoring window positioning.
        self.geometry = None

        self.mainWidget = ConfigToolWidget()
        self.setCentralWidget(self.mainWidget)

        self.currentWidget = None
        self.mainWidgetLayout = QtGui.QVBoxLayout()
        self.mainWidget.rightPanelWidget.setLayout(self.mainWidgetLayout)

        # Load all ConfigTool Widgets
        self.aboutWidget = AboutWidget()
        self.generalWidget = GeneralWidget()
        self.avWidget = AVWidget()
        self.pluginloaderWidget = PluginLoaderWidget()

        self.plugman = PluginManager(profile)

        # Custom Menu Items
        self.actionSaveProfile = QtGui.QAction(self)
        self.menuFile.insertAction(self.actionExit, self.actionSaveProfile)

        #
        # --- Language Related
        #
        # Fill in the langauges combobox and load the default language
        for language in self.languages:
            translator = QtCore.QTranslator()  # Create a translator to translate Language Display Text
            translator.load(":/languages/%s" % language)
            language_display_text = translator.translate("Translation", "Language Display Text")
            self.generalWidget.languageComboBox.addItem(language_display_text, language)

        # Load default language.
        actions = self.menuLanguage.actions()
        for action in actions:
            if action.data().toString() == self.config.default_language:
                action.setChecked(True)
                self.translate(action)
                break
        # --- End Language Related

        # connections
        self.connect(self.actionSaveProfile, QtCore.SIGNAL('triggered()'), self.show_save_profile_dialog)
        self.connect(self.mainWidget.closePushButton, QtCore.SIGNAL('clicked()'), self.close)
        self.connect(self.mainWidget.optionsTreeWidget, QtCore.SIGNAL('itemSelectionChanged()'), self.change_option)

        #
        # general tab connections
        #
        self.connect(self.generalWidget.languageComboBox, QtCore.SIGNAL('currentIndexChanged(int)'), self.set_default_language)
        self.connect(self.generalWidget.recordDirPushButton, QtCore.SIGNAL('clicked()'), self.browse_video_directory)
        self.connect(self.generalWidget.recordDirLineEdit, QtCore.SIGNAL('editingFinished()'), self.update_record_directory)
        self.connect(self.generalWidget.autoHideCheckBox, QtCore.SIGNAL('toggled(bool)'), self.toggle_autohide)

        #
        # AV tab connections
        #
        self.connect(self.avWidget.audioGroupBox, QtCore.SIGNAL('toggled(bool)'), self.toggle_audiomixer_state)
        self.connect(self.avWidget.audioMixerComboBox, QtCore.SIGNAL('activated(const QString&)'), self.change_audiomixer)
        self.connect(self.avWidget.audioMixerSetupPushButton, QtCore.SIGNAL('clicked()'), self.setup_audio_mixer)
        self.connect(self.avWidget.videoGroupBox, QtCore.SIGNAL('toggled(bool)'), self.toggle_videomixer_state)
        self.connect(self.avWidget.videoMixerComboBox, QtCore.SIGNAL('activated(const QString&)'), self.change_videomixer)
        self.connect(self.avWidget.videoMixerSetupPushButton, QtCore.SIGNAL('clicked()'), self.setup_video_mixer)
        self.connect(self.avWidget.fileGroupBox, QtCore.SIGNAL('toggled(bool)'), self.toggle_record_to_file)
        self.connect(self.avWidget.fileComboBox, QtCore.SIGNAL('activated(const QString&)'), self.change_file_format)
        self.connect(self.avWidget.fileSetupPushButton, QtCore.SIGNAL('clicked()'), self.setup_file_format)
        self.connect(self.avWidget.streamGroupBox, QtCore.SIGNAL('toggled(bool)'), self.toggle_record_to_stream)
        self.connect(self.avWidget.streamComboBox, QtCore.SIGNAL('activated(const QString&)'), self.change_stream_format)
        self.connect(self.avWidget.streamSetupPushButton, QtCore.SIGNAL('clicked()'), self.setup_stream_format)
        # GUI Disabling/Enabling Connections
        self.connect(self.avWidget.audioGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.audioMixerLabel.setEnabled)
        self.connect(self.avWidget.audioGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.audioMixerComboBox.setEnabled)
        self.connect(self.avWidget.audioGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.audioMixerSetupPushButton.setEnabled)
        self.connect(self.avWidget.videoGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.videoMixerLabel.setEnabled)
        self.connect(self.avWidget.videoGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.videoMixerComboBox.setEnabled)
        self.connect(self.avWidget.videoGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.videoMixerSetupPushButton.setEnabled)
        self.connect(self.avWidget.fileGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.fileLabel.setEnabled)
        self.connect(self.avWidget.fileGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.fileComboBox.setEnabled)
        self.connect(self.avWidget.fileGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.fileSetupPushButton.setEnabled)
        self.connect(self.avWidget.streamGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.streamLabel.setEnabled)
        self.connect(self.avWidget.streamGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.streamComboBox.setEnabled)
        self.connect(self.avWidget.streamGroupBox, QtCore.SIGNAL("toggled(bool)"), self.avWidget.streamSetupPushButton.setEnabled)

        self.retranslate()

        # load active plugin widgets
        self.load_plugin_widgets()

        # Start off with displaying the General Settings
        items = self.mainWidget.optionsTreeWidget.findItems(self.aboutString, QtCore.Qt.MatchExactly)
        if len(items) > 0:
            item = items[0]
            self.mainWidget.optionsTreeWidget.setCurrentItem(item)

    ###
    ### Translation
    ###

    def retranslate(self):
        self.setWindowTitle(self.app.translate("ConfigToolApp", "Freeseer ConfigTool"))

        #
        # Menu
        #
        self.saveProfileString = self.actionSaveProfile.setText(self.app.translate("ConfigToolApp", "Save Profile"))

        #
        # ConfigToolWidget
        #
        self.aboutString = self.app.translate("ConfigToolApp", "About")
        self.generalString = self.app.translate("ConfigToolApp", "General")
        self.avString = self.app.translate("ConfigToolApp", "Recording")
        self.pluginsString = self.app.translate("ConfigToolApp", "Plugins")
        self.audioInputString = self.app.translate("ConfigToolApp", "AudioInput")
        self.audioMixerString = self.app.translate("ConfigToolApp", "AudioMixer")
        self.videoInputString = self.app.translate("ConfigToolApp", "VideoInput")
        self.videoMixerString = self.app.translate("ConfigToolApp", "VideoMixer")
        self.outputString = self.app.translate("ConfigToolApp", "Output")

        self.mainWidget.optionsTreeWidget.topLevelItem(0).setText(0, self.aboutString)
        self.mainWidget.optionsTreeWidget.topLevelItem(1).setText(0, self.generalString)
        self.mainWidget.optionsTreeWidget.topLevelItem(2).setText(0, self.avString)
        self.mainWidget.optionsTreeWidget.topLevelItem(3).setText(0, self.pluginsString)
        self.mainWidget.optionsTreeWidget.topLevelItem(3).child(0).setText(0, self.audioInputString)
        self.mainWidget.optionsTreeWidget.topLevelItem(3).child(1).setText(0, self.audioMixerString)
        self.mainWidget.optionsTreeWidget.topLevelItem(3).child(2).setText(0, self.videoInputString)
        self.mainWidget.optionsTreeWidget.topLevelItem(3).child(3).setText(0, self.videoMixerString)
        self.mainWidget.optionsTreeWidget.topLevelItem(3).child(4).setText(0, self.outputString)

        self.mainWidget.closePushButton.setText(self.app.translate("ConfigToolApp", "Close"))
        # --- End ConfigToolWidget

        #
        # GeneralWidget
        #
        self.generalWidget.MiscGroupBox.setTitle(self.app.translate("ConfigToolApp", "Miscellaneous"))
        self.generalWidget.languageLabel.setText(self.app.translate("ConfigToolApp", "Default Language"))
        self.generalWidget.recordDirLabel.setText(self.app.translate("ConfigToolApp", "Record Directory"))
        self.generalWidget.autoHideCheckBox.setText(self.app.translate("ConfigToolApp", "Enable Auto-Hide"))
        # --- End GeneralWidget

        #
        # AV Widget
        #
        self.avWidget.audioGroupBox.setTitle(self.app.translate("ConfigToolApp", "Audio Input"))
        self.avWidget.audioMixerLabel.setText(self.app.translate("ConfigToolApp", "Audio Mixer"))
        self.avWidget.audioMixerSetupPushButton.setToolTip(self.app.translate("ConfigToolApp", "Setup"))

        self.avWidget.videoGroupBox.setTitle(self.app.translate("ConfigToolApp", "Video Input"))
        self.avWidget.videoMixerLabel.setText(self.app.translate("ConfigToolApp", "Video Mixer"))
        self.avWidget.videoMixerSetupPushButton.setToolTip(self.app.translate("ConfigToolApp", "Setup"))

        self.avWidget.fileGroupBox.setTitle(self.app.translate("ConfigToolApp", "Record to File"))
        self.avWidget.fileLabel.setText(self.app.translate("ConfigToolApp", "File Format"))
        self.avWidget.fileSetupPushButton.setToolTip(self.app.translate("ConfigToolApp", "Setup"))

        self.avWidget.streamGroupBox.setTitle(self.app.translate("ConfigToolApp", "Record to Stream"))
        self.avWidget.streamLabel.setText(self.app.translate("ConfigToolApp", "Stream Format"))
        self.avWidget.streamSetupPushButton.setToolTip(self.app.translate("ConfigToolApp", "Setup"))
        # --- End AV Widget

    ###
    ### Menu
    ###

    def show_save_profile_dialog(self):
        name, ok = QInputDialog().getText(self, "Save Profile", "Profile Name", QLineEdit.Normal)

        if ok:
            if re.match('^[\w-]+$', name):
                # TODO: This is a hack. Instead, there should be a option to
                # copy the current profile or something.
                pass
            else:
                QMessageBox.information(None, "Invalid name", "Invalid characters used. Only alphanumeric and dashes allowed.")

    ###
    ### General
    ###

    def change_option(self):
        option = self.mainWidget.optionsTreeWidget.currentItem().text(0)

        if self.currentWidget is not None:
            self.mainWidgetLayout.removeWidget(self.currentWidget)
            self.currentWidget.hide()

        if option == self.aboutString:
            self.load_about_widget()
        elif option == self.generalString:
            self.load_general_widget()
        elif option == self.avString:
            self.load_av_widget()
        elif option == self.pluginsString:
            pass
        elif option == self.audioInputString:
            self.load_option_audioinput_plugins()
        elif option == self.audioMixerString:
            self.load_option_audiomixer_plugins()
        elif option == self.videoInputString:
            self.load_option_videoinput_plugins()
        elif option == self.videoMixerString:
            self.load_option_videomixer_plugins()
        elif option == self.outputString:
            self.load_option_output_plugins()
        else:
            pass

    def load_about_widget(self):
        """Loads AboutWidget onto the configuration tool"""
        self.mainWidgetLayout.addWidget(self.aboutWidget)
        self.currentWidget = self.aboutWidget
        self.currentWidget.retranslate()
        self.currentWidget.show()

    def load_general_widget(self):
        self.mainWidgetLayout.addWidget(self.generalWidget)
        self.currentWidget = self.generalWidget
        self.currentWidget.show()

        # Load default language
        i = self.generalWidget.languageComboBox.findData(self.config.default_language)
        self.generalWidget.languageComboBox.setCurrentIndex(i)

        # Recording Directory Settings
        self.generalWidget.recordDirLineEdit.setText(self.config.videodir)

        # Load Auto Hide Settings
        if self.config.auto_hide:
            self.generalWidget.autoHideCheckBox.setChecked(True)
        else:
            self.generalWidget.autoHideCheckBox.setChecked(False)

    def set_default_language(self, language):
        language_file = str(self.generalWidget.languageComboBox.itemData(language).toString())
        self.config.default_language = language_file
        self.config.save()

    def browse_video_directory(self):
        directory = self.generalWidget.recordDirLineEdit.text()

        newDir = QtGui.QFileDialog.getExistingDirectory(self, "Select Video Directory", directory)
        if newDir == "":
            newDir = directory

        videodir = os.path.abspath(str(newDir))
        self.generalWidget.recordDirLineEdit.setText(videodir)
        self.generalWidget.recordDirLineEdit.emit(QtCore.SIGNAL("editingFinished()"))

    def update_record_directory(self):
        self.config.videodir = str(self.generalWidget.recordDirLineEdit.text())
        self.config.save()

    def toggle_autohide(self, state):
        self.config.auto_hide = state
        self.config.save()

        # Make recordapp to update it's config
        # TODO: Surely there is a better way to do this

    ###
    ### AV Related
    ###

    def load_av_widget(self):
        self.mainWidgetLayout.addWidget(self.avWidget)
        self.currentWidget = self.avWidget
        self.currentWidget.show()

        #
        # Set up Audio
        #
        if self.config.enable_audio_recording:
            self.avWidget.audioGroupBox.setChecked(True)
        else:
            self.avWidget.audioGroupBox.setChecked(False)
            self.avWidget.audioMixerComboBox.setEnabled(False)
            self.avWidget.audioMixerSetupPushButton.setEnabled(False)

        n = 0  # Counter for finding Audio Mixer to set as current.
        self.avWidget.audioMixerComboBox.clear()
        plugins = self.plugman.get_audiomixer_plugins()
        for plugin in plugins:
            self.avWidget.audioMixerComboBox.addItem(plugin.plugin_object.get_name())
            if plugin.plugin_object.get_name() == self.config.audiomixer:
                self.avWidget.audioMixerComboBox.setCurrentIndex(n)
            n += 1

        #
        # Set up Video
        #
        if self.config.enable_video_recording:
            self.avWidget.videoGroupBox.setChecked(True)
        else:
            self.avWidget.videoGroupBox.setChecked(False)
            self.avWidget.videoMixerComboBox.setEnabled(False)
            self.avWidget.videoMixerSetupPushButton.setEnabled(False)

        n = 0  # Counter for finding Video Mixer to set as current.
        self.avWidget.videoMixerComboBox.clear()
        plugins = self.plugman.get_videomixer_plugins()
        for plugin in plugins:
            self.avWidget.videoMixerComboBox.addItem(plugin.plugin_object.get_name())
            if plugin.plugin_object.get_name() == self.config.videomixer:
                self.avWidget.videoMixerComboBox.setCurrentIndex(n)
            n += 1

        #
        # Set up File Format
        #
        if self.config.record_to_file:
            self.avWidget.fileGroupBox.setChecked(True)
        else:
            self.avWidget.fileGroupBox.setChecked(False)
            self.avWidget.fileComboBox.setEnabled(False)
            self.avWidget.fileSetupPushButton.setEnabled(False)

        n = 0  # Counter for finding File Format to set as current
        self.avWidget.fileComboBox.clear()
        plugins = self.plugman.get_output_plugins()
        for plugin in plugins:
            if plugin.plugin_object.get_recordto() == IOutput.FILE:
                self.avWidget.fileComboBox.addItem(plugin.plugin_object.get_name())
                if plugin.plugin_object.get_name() == self.config.record_to_file_plugin:
                    self.avWidget.fileComboBox.setCurrentIndex(n)
                n += 1

        #
        # Set up Stream Format
        #
        if self.config.record_to_stream:
            self.avWidget.streamGroupBox.setChecked(True)
        else:
            self.avWidget.streamGroupBox.setChecked(False)
            self.avWidget.streamComboBox.setEnabled(False)
            self.avWidget.streamSetupPushButton.setEnabled(False)

        n = 0  # Counter for finding Stream Format to set as current
        self.avWidget.streamComboBox.clear()
        plugins = self.plugman.get_output_plugins()
        for plugin in plugins:
            if plugin.plugin_object.get_recordto() == IOutput.STREAM:
                self.avWidget.streamComboBox.addItem(plugin.plugin_object.get_name())
                if plugin.plugin_object.get_name() == self.config.record_to_stream_plugin:
                    self.avWidget.streamComboBox.setCurrentIndex(n)
                n += 1

    def toggle_audiomixer_state(self, state):
        self.config.enable_audio_recording = state
        self.config.save()

    def change_audiomixer(self, audiomixer):
        self.config.audiomixer = audiomixer
        self.config.save()

    def setup_audio_mixer(self):
        mixer = str(self.avWidget.audioMixerComboBox.currentText())
        plugin = self.plugman.get_plugin_by_name(mixer, "AudioMixer")
        plugin.plugin_object.get_dialog()

    def toggle_videomixer_state(self, state):
        self.config.enable_video_recording = state
        self.config.save()

    def change_videomixer(self, videomixer):
        self.config.videomixer = videomixer
        self.config.save()

    def setup_video_mixer(self):
        mixer = str(self.avWidget.videoMixerComboBox.currentText())
        plugin = self.plugman.get_plugin_by_name(mixer, "VideoMixer")
        plugin.plugin_object.get_dialog()

    def toggle_record_to_file(self, state):
        self.config.record_to_file = state
        self.config.save()

    def change_file_format(self, format):
        self.config.record_to_file_plugin = format
        self.config.save()

    def setup_file_format(self):
        output = str(self.avWidget.fileComboBox.currentText())
        plugin = self.plugman.get_plugin_by_name(output, "Output")
        plugin.plugin_object.get_dialog()

    def toggle_record_to_stream(self, state):
        self.config.record_to_stream = state
        self.config.save()

    def change_stream_format(self, format):
        self.config.record_to_stream_plugin = format
        self.config.save()

    def setup_stream_format(self):
        output = str(self.avWidget.streamComboBox.currentText())
        plugin = self.plugman.get_plugin_by_name(output, "Output")
        plugin.plugin_object.get_dialog()

    ###
    ### Plugin Loader Related
    ###

    def get_plugins(self, plugin_type):
        """
        Returns a list of plugins of type

        Parameters:
            plugin_type - type of plugins to get

        Returns:
            list of plugins of type specified
        """
        plugins = []

        if plugin_type == "AudioInput":
            plugins = self.plugman.get_audioinput_plugins()
        elif plugin_type == "AudioMixer":
            plugins = self.plugman.get_audiomixer_plugins()
        elif plugin_type == "VideoInput":
            plugins = self.plugman.get_videoinput_plugins()
        elif plugin_type == "VideoMixer":
            plugins = self.plugman.get_videomixer_plugins()
        elif plugin_type == "Output":
            plugins = self.plugman.get_output_plugins()

        return plugins

    def load_plugin_list(self, plugin_type):
        self.pluginloaderWidget.listWidget.clear()
        for plugin in self.get_plugins(plugin_type):
            item = QtGui.QListWidgetItem()

            size = QtCore.QSize(64, 64)
            item.setSizeHint(size)
            self.pluginloaderWidget.listWidget.addItem(item)

            # The list item will be a fancy widget.
            widget = self.pluginloaderWidget.getListWidgetPlugin(plugin,
                                                                 plugin_type,
                                                                 self.plugman)
            self.pluginloaderWidget.listWidget.setItemWidget(item, widget)

    def load_option_audioinput_plugins(self):
        self.mainWidgetLayout.addWidget(self.pluginloaderWidget)
        self.currentWidget = self.pluginloaderWidget
        self.currentWidget.show()

        self.load_plugin_list("AudioInput")

    def load_option_audiomixer_plugins(self):
        self.mainWidgetLayout.addWidget(self.pluginloaderWidget)
        self.currentWidget = self.pluginloaderWidget
        self.currentWidget.show()

        self.load_plugin_list("AudioMixer")

    def load_option_videoinput_plugins(self):
        self.mainWidgetLayout.addWidget(self.pluginloaderWidget)
        self.currentWidget = self.pluginloaderWidget
        self.currentWidget.show()

        self.load_plugin_list("VideoInput")

    def load_option_videomixer_plugins(self):
        self.mainWidgetLayout.addWidget(self.pluginloaderWidget)
        self.currentWidget = self.pluginloaderWidget
        self.currentWidget.show()

        self.load_plugin_list("VideoMixer")

    def load_option_output_plugins(self):
        self.mainWidgetLayout.addWidget(self.pluginloaderWidget)
        self.currentWidget = self.pluginloaderWidget
        self.currentWidget.show()

        self.load_plugin_list("Output")

    def load_plugin_widgets(self):
        for plugin in self.plugman.get_all_plugins():
            plugin.plugin_object.set_gui(self)

    def show_plugin_widget_dialog(self, widget):
        self.dialog = QtGui.QDialog(self)

        self.dialog_layout = QtGui.QVBoxLayout()
        self.dialog_layout.setSizeConstraint(QtGui.QLayout.SetFixedSize)
        self.dialog.setLayout(self.dialog_layout)
        self.dialog_layout.addWidget(widget)

        self.dialog.closeButton = QtGui.QPushButton("Close")
        self.dialog_layout.addWidget(self.dialog.closeButton)
        self.connect(self.dialog.closeButton, QtCore.SIGNAL('clicked()'), self.dialog.close)
        self.dialog.setModal(True)
        self.dialog.show()

    def get_plugin_settings_widget(self, plugin):
        widget = plugin.plugin_object.get_widget()
        return widget

    def closeEvent(self, event):
        log.info('Exiting configtool...')
        self.geometry = self.saveGeometry()
        event.accept()

########NEW FILE########
__FILENAME__ = ConfigToolWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2011  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

from freeseer.frontend.qtcommon import resource  # noqa


class ConfigToolWidget(QtGui.QWidget):
    '''
    classdocs
    '''

    def __init__(self, parent=None):
        '''
        Constructor
        '''
        QtGui.QWidget.__init__(self, parent)

        self.mainLayout = QtGui.QHBoxLayout()
        self.setLayout(self.mainLayout)

        #
        # Left panel
        #

        self.leftPanelLayout = QtGui.QVBoxLayout()
        self.mainLayout.addLayout(self.leftPanelLayout)

        # About
        self.optionsTreeWidget = QtGui.QTreeWidget()
        self.optionsTreeWidget.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Minimum)
        self.optionsTreeWidget.setHeaderHidden(True)
        self.optionsTreeWidget.headerItem().setText(0, "1")
        QtGui.QTreeWidgetItem(self.optionsTreeWidget)
        self.optionsTreeWidget.topLevelItem(0).setText(0, "About")

        # General
        QtGui.QTreeWidgetItem(self.optionsTreeWidget)
        self.optionsTreeWidget.topLevelItem(1).setText(0, "General")

        # AV
        QtGui.QTreeWidgetItem(self.optionsTreeWidget)
        self.optionsTreeWidget.topLevelItem(2).setText(0, "AV Config")

        # Plugins
        item_0 = QtGui.QTreeWidgetItem(self.optionsTreeWidget)
        self.optionsTreeWidget.topLevelItem(3).setText(0, "Plugins")
        QtGui.QTreeWidgetItem(item_0)
        self.optionsTreeWidget.topLevelItem(3).child(0).setText(0, "AudioInput")
        QtGui.QTreeWidgetItem(item_0)
        self.optionsTreeWidget.topLevelItem(3).child(1).setText(0, "AudioMixer")
        QtGui.QTreeWidgetItem(item_0)
        self.optionsTreeWidget.topLevelItem(3).child(2).setText(0, "VideoInput")
        QtGui.QTreeWidgetItem(item_0)
        self.optionsTreeWidget.topLevelItem(3).child(3).setText(0, "VideoMixer")
        QtGui.QTreeWidgetItem(item_0)
        self.optionsTreeWidget.topLevelItem(3).child(4).setText(0, "Output")

        closeIcon = QtGui.QIcon.fromTheme("application-exit")
        self.closePushButton = QtGui.QPushButton("Close")
        self.closePushButton.setIcon(closeIcon)
        self.leftPanelLayout.addWidget(self.optionsTreeWidget)
        self.leftPanelLayout.addWidget(self.closePushButton)

        self.optionsTreeWidget.expandAll()

        #
        # Right panel
        #
        self.rightPanelWidget = QtGui.QWidget()
        self.mainLayout.addWidget(self.rightPanelWidget)

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    main = ConfigToolWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = GeneralWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2011  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4 import QtCore, QtGui


class GeneralWidget(QtGui.QWidget):
    '''
    classdocs
    '''

    def __init__(self, parent=None):
        '''
        Constructor
        '''
        QtGui.QWidget.__init__(self, parent)

        self.mainLayout = QtGui.QVBoxLayout()
        self.mainLayout.addStretch(0)
        self.setLayout(self.mainLayout)

        #
        # General
        #

        self.MiscLayout = QtGui.QVBoxLayout()
        self.MiscGroupBox = QtGui.QGroupBox("General")
        self.MiscGroupBox.setLayout(self.MiscLayout)
        self.mainLayout.insertWidget(0, self.MiscGroupBox)

        self.languageLayout = QtGui.QHBoxLayout()
        self.MiscLayout.addLayout(self.languageLayout)
        self.languageLabel = QtGui.QLabel("Default Language")
        self.languageComboBox = QtGui.QComboBox()
        self.languageComboBox.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.languageLabel.setBuddy(self.languageComboBox)
        self.languageLayout.addWidget(self.languageLabel)
        self.languageLayout.addWidget(self.languageComboBox)

        self.recordDirLayout = QtGui.QHBoxLayout()
        self.MiscLayout.addLayout(self.recordDirLayout)

        self.recordDirLabel = QtGui.QLabel("Record Directory")
        self.recordDirLineEdit = QtGui.QLineEdit()
        self.recordDirLabel.setBuddy(self.recordDirLineEdit)
        self.recordDirPushButton = QtGui.QPushButton("...")
        self.recordDirLayout.addWidget(self.recordDirLabel)
        self.recordDirLayout.addWidget(self.recordDirLineEdit)
        self.recordDirLayout.addWidget(self.recordDirPushButton)

        self.autoHideCheckBox = QtGui.QCheckBox("Enable Auto-Hide")
        self.MiscLayout.addWidget(self.autoHideCheckBox)


if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    main = GeneralWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = PluginLoaderWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2011  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4 import QtCore
from PyQt4 import QtGui


class PluginLoaderWidget(QtGui.QWidget):
    '''
    classdocs
    '''

    def __init__(self, parent=None):
        '''
        Constructor
        '''
        QtGui.QWidget.__init__(self, parent)

        self.mainLayout = QtGui.QVBoxLayout()
        self.setLayout(self.mainLayout)

        self.listWidget = QtGui.QListWidget()
        self.listWidget.setAlternatingRowColors(True)
        self.mainLayout.addWidget(self.listWidget)

    def getListWidgetPlugin(self, plugin, plugin_category, plugman):
        plugin_name = plugin.plugin_object.get_name()

        widget = QtGui.QWidget()
        layout = QtGui.QHBoxLayout()
        widget.setLayout(layout)

        # Display Plugin's meta data in a tooltip
        pluginTooltip = """
        <table>
        <tr>
            <td>Name: </td>
            <td><b>%(name)s</b></td>
        </tr>
        <tr>
            <td>Version: </td>
            <td><b>%(version)s</b></td>
        <tr>
            <td>Author: </td>
            <td><b>%(author)s</b></td>
        </tr>
        <tr>
            <td>Website: </td>
            <td><b>%(website)s</b></td>
        </tr>
        <tr>
            <td>Description: </td>
            <td><b>%(description)s</b></td>
        </tr>
        </table>
        """ % {"name": plugin.name,
               "version": plugin.version,
               "author": plugin.author,
               "website": plugin.website,
               "description": plugin.description}
        widget.setToolTip(pluginTooltip)

        # Plugin Label / Description
        textLayout = QtGui.QVBoxLayout()
        layout.addLayout(textLayout)

        pluginLabel = QtGui.QLabel(plugin_name)
        pluginLabel.setSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Maximum)
        pluginLabelFont = QtGui.QFont()
        pluginLabelFont.setPointSize(11)
        pluginLabelFont.setBold(True)
        pluginLabel.setFont(pluginLabelFont)

        pluginDescLabel = QtGui.QLabel(plugin.description)
        pluginDescLabel.setSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Maximum)
        pluginDescLabelFont = QtGui.QFont()
        pluginDescLabelFont.setPointSize(10)
        pluginDescLabelFont.setItalic(True)
        pluginDescLabel.setFont(pluginDescLabelFont)

        textLayout.addWidget(pluginLabel)
        textLayout.addWidget(pluginDescLabel)
        # --- End Label / Description

        # If plugin supports configuration, show a configuration button.
        if plugin.plugin_object.get_widget() is not None:
            pluginConfigToolButton = QtGui.QToolButton()
            pluginConfigToolButton.setText("Settings")
            config_icon = QtGui.QIcon.fromTheme("preferences-system")
            pluginConfigToolButton.setIcon(config_icon)
            pluginConfigToolButton.setSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Maximum)
            pluginConfigToolButton.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)

            layout.addWidget(pluginConfigToolButton)
            self.connect(pluginConfigToolButton, QtCore.SIGNAL('clicked()'), plugin.plugin_object.get_dialog)

        return widget

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    main = PluginLoaderWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = AboutDialog
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

from PyQt4.QtCore import QString
from PyQt4.QtCore import SIGNAL
from PyQt4.QtGui import QDialog
from PyQt4.QtGui import QDialogButtonBox
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QPixmap
from PyQt4.QtGui import QWidget
from PyQt4.QtGui import QGridLayout

try:
    _fromUtf8 = QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

from freeseer.frontend.qtcommon import resource  # noqa
from freeseer.frontend.qtcommon.AboutWidget import AboutWidget

RECORD_BUTTON_ARTIST = u'Sekkyumu'
RECORD_BUTTON_LINK = u'http://sekkyumu.deviantart.com/'
HEADPHONES_ARTIST = u'Ben Fleming'
HEADPHONES_LINK = u'http://mediadesign.deviantart.com/'


class AboutDialog(QDialog):
    """
    Common About Dialog for the Freeseer Project. This should be used for the
    about dialog when including one in GUIs.


    Grid Layout:

    Logo  |  About Infos
    ------|-------------
          |  Close Button
    """
    def __init__(self, parent=None):
        QWidget.__init__(self, parent)
        self.aboutWidget = AboutWidget()

        icon = QIcon()
        icon.addPixmap(QPixmap(_fromUtf8(":/freeseer/logo.png")), QIcon.Normal, QIcon.Off)
        self.setWindowIcon(icon)

        self.layout = QGridLayout()
        self.setLayout(self.layout)

        self.layout.addWidget(self.aboutWidget)

        # Right Bottom corner of grid, Close Button
        self.buttonBox = QDialogButtonBox()
        self.closeButton = self.buttonBox.addButton("Close", QDialogButtonBox.AcceptRole)
        self.layout.addWidget(self.buttonBox, 1, 1)
        self.connect(self.closeButton, SIGNAL("clicked()"), self.close)

        self.setWindowTitle("About Freeseer")

########NEW FILE########
__FILENAME__ = AboutWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

'''
@author: Thanh Ha, Mia Kilborn
'''
from PyQt4.QtCore import QString
from PyQt4.QtCore import QTranslator
from PyQt4.QtCore import QUrl
from PyQt4.QtCore import SIGNAL
from PyQt4.QtGui import QDesktopServices
from PyQt4.QtGui import QGridLayout
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QPixmap
from PyQt4.QtGui import QPushButton
from PyQt4.QtGui import QWidget

try:
    _fromUtf8 = QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

from freeseer import NAME
from freeseer import URL
from freeseer import __version__
from freeseer.frontend.qtcommon import resource  # noqa

RECORD_BUTTON_ARTIST = u'Sekkyumu'
RECORD_BUTTON_LINK = u'http://sekkyumu.deviantart.com/'
HEADPHONES_ARTIST = u'Ben Fleming'
HEADPHONES_LINK = u'http://mediadesign.deviantart.com/'


class AboutWidget(QWidget):
    """ Common About Dialog for the Freeseer Project. This should be used for the
    about dialog when including one in GUIs.

    Layout:
    Logo  |  About Infos
          |  Buttons
    """

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        self.setMinimumSize(100, 400)

        self.current_language = "en_US"
        self.uiTranslator = QTranslator()
        self.uiTranslator.load(":/languages/tr_en_US.qm")

        icon = QIcon()
        icon.addPixmap(QPixmap(_fromUtf8(":/freeseer/logo.png")), QIcon.Normal, QIcon.Off)
        self.setWindowIcon(icon)

        self.mainlayout = QGridLayout()
        self.setLayout(self.mainlayout)

        # Left top side of grid, Logo
        self.logo = QLabel("Logo")
        self.logo.setPixmap(QPixmap(_fromUtf8(":/freeseer/logo.png")))
        self.mainlayout.addWidget(self.logo, 0, 0)

        # Right top side of grid, Infos
        self.aboutInfo = QLabel("About Info", openExternalLinks=True)
        self.aboutInfo.setWordWrap(True)
        self.mainlayout.addWidget(self.aboutInfo, 0, 1)

        # Right bottom side of grid, Buttons
        self.buttonsLayout = QHBoxLayout()
        self.issueButton = QPushButton("Report an issue")
        self.docsButton = QPushButton("Freeseer documentation")
        self.contactButton = QPushButton("Contact us")
        self.buttonsLayout.insertWidget(0, self.docsButton)
        self.buttonsLayout.insertWidget(1, self.issueButton)
        self.buttonsLayout.insertWidget(2, self.contactButton)

        self.mainlayout.addLayout(self.buttonsLayout, 2, 1)

        self.connect(self.docsButton, SIGNAL('clicked()'), self.openDocsUrl)
        self.connect(self.issueButton, SIGNAL('clicked()'), self.openNewIssueUrl)
        self.connect(self.contactButton, SIGNAL('clicked()'), self.openContactUrl)

        self.retranslate()

    def retranslate(self, language=None):
        if language is not None:
            self.current_language = language

        self.uiTranslator.load(":/languages/tr_%s.qm" % self.current_language)

        #
        # Main Text
        #
        self.descriptionString = self.uiTranslator.translate("AboutDialog",
                    "Freeseer is a video capture utility capable of capturing presentations. It captures "
                    "video sources such as usb, firewire, or local desktop along with audio and mixes them "
                    "together to produce a video.")
        self.copyrightString = self.uiTranslator.translate("AboutDialog", 'Copyright (C) 2014 The Free and '
                    'Open Source Software Learning Centre')
        self.licenseTextString = self.uiTranslator.translate("AboutDialog", "Freeseer is licensed under the GPL "
                    "version 3. This software is provided 'as-is',without any express or implied warranty. In "
                    "no event will the authors be held liable for any damages arising from the use of this software.")

        self.aboutInfoString = u'<h1>' + NAME + u'</h1>' + \
            u'<br><b>' + self.uiTranslator.translate("AboutDialog", "Version") + ": " + __version__ + u'</b>' + \
            u'<p>' + self.descriptionString + u'</p>' + \
            u'<p>' + self.copyrightString + u'</p>' + \
            u'<p><a href="' + URL + u'">' + URL + u'</a></p>' \
            u'<p>' + self.licenseTextString + u'</p>' \
            u'<p>' + self.uiTranslator.translate("AboutDialog", "Record button graphics by") + \
            u': <a href="' + RECORD_BUTTON_LINK + u'">' + RECORD_BUTTON_ARTIST + u'</a></p>' \
            u'<p>' + self.uiTranslator.translate("AboutDialog", "Headphones graphics by") + \
            u': <a href="' + HEADPHONES_LINK + u'">' + HEADPHONES_ARTIST + u'</a></p><br>'

        self.aboutInfo.setText(self.aboutInfoString)
        # --- End Main Text

    def openDocsUrl(self):
        """Opens a link to the Freeseer online documentation"""
        url = QUrl("http://freeseer.readthedocs.org")
        QDesktopServices.openUrl(url)

    def openNewIssueUrl(self):
        """Opens a link to the Freeseer new issue page"""
        url = QUrl("https://github.com/Freeseer/freeseer/issues/new")
        QDesktopServices.openUrl(url)

    def openContactUrl(self):
        """Opens a link to Freeseer's contact information"""
        url = QUrl("http://freeseer.readthedocs.org/en/latest/contact.html")
        QDesktopServices.openUrl(url)

if __name__ == "__main__":
    import sys
    from PyQt4.QtGui import QApplication
    app = QApplication(sys.argv)
    main = AboutWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = FreeseerApp
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import logging

from PyQt4.QtCore import QDir
from PyQt4.QtCore import QLocale
from PyQt4.QtCore import QRect
from PyQt4.QtCore import QString
from PyQt4.QtCore import QTextCodec
from PyQt4.QtCore import QTranslator
from PyQt4.QtCore import QUrl
from PyQt4.QtCore import SIGNAL
from PyQt4.QtGui import QAction
from PyQt4.QtGui import QActionGroup
from PyQt4.QtGui import QApplication
from PyQt4.QtGui import QDesktopServices
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QMainWindow
from PyQt4.QtGui import QMenu
from PyQt4.QtGui import QPixmap

from freeseer.frontend.qtcommon.AboutDialog import AboutDialog
from freeseer.frontend.qtcommon import resource  # noqa

try:
    _fromUtf8 = QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

log = logging.getLogger(__name__)


class FreeseerApp(QMainWindow):

    def __init__(self):
        super(FreeseerApp, self).__init__()
        self.icon = QIcon()
        self.icon.addPixmap(QPixmap(_fromUtf8(":/freeseer/logo.png")), QIcon.Normal, QIcon.Off)
        self.setWindowIcon(self.icon)

        self.aboutDialog = AboutDialog()
        self.aboutDialog.setModal(True)

        #
        # Translator
        #
        self.app = QApplication.instance()
        self.current_language = None
        self.uiTranslator = QTranslator()
        self.uiTranslator.load(":/languages/tr_en_US.qm")
        self.app.installTranslator(self.uiTranslator)
        self.langActionGroup = QActionGroup(self)
        self.langActionGroup.setExclusive(True)
        QTextCodec.setCodecForTr(QTextCodec.codecForName('utf-8'))
        self.connect(self.langActionGroup, SIGNAL('triggered(QAction *)'), self.translate)
        # --- Translator

        #
        # Setup Menubar
        #
        self.menubar = self.menuBar()

        self.menubar.setGeometry(QRect(0, 0, 500, 50))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuLanguage = QMenu(self.menubar)
        self.menuLanguage.setObjectName(_fromUtf8("menuLanguage"))
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))

        exitIcon = QIcon.fromTheme("application-exit")
        self.actionExit = QAction(self)
        self.actionExit.setShortcut("Ctrl+Q")
        self.actionExit.setObjectName(_fromUtf8("actionExit"))
        self.actionExit.setIcon(exitIcon)

        helpIcon = QIcon.fromTheme("help-contents")
        self.actionOnlineHelp = QAction(self)
        self.actionOnlineHelp.setObjectName(_fromUtf8("actionOnlineHelp"))
        self.actionOnlineHelp.setIcon(helpIcon)

        self.actionAbout = QAction(self)
        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
        self.actionAbout.setIcon(self.icon)

        # Actions
        self.menuFile.addAction(self.actionExit)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionOnlineHelp)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuLanguage.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.setupLanguageMenu()
        # --- End Menubar

        self.connect(self.actionExit, SIGNAL('triggered()'), self.close)
        self.connect(self.actionAbout, SIGNAL('triggered()'), self.aboutDialog.show)
        self.connect(self.actionOnlineHelp, SIGNAL('triggered()'), self.openOnlineHelp)

        self.retranslateFreeseerApp()
        self.aboutDialog.aboutWidget.retranslate("en_US")

    def openOnlineHelp(self):
        """Opens a link to the Freeseer Online Help"""
        url = QUrl("http://freeseer.readthedocs.org")
        QDesktopServices.openUrl(url)

    def translate(self, action):
        """Translates the GUI via menu action.

        When a language is selected from the language menu, this function is
        called and the language to be changed to is retrieved.
        """
        self.current_language = str(action.data().toString()).strip("tr_").rstrip(".qm")

        log.info("Switching language to: %s" % action.text())
        self.uiTranslator.load(":/languages/tr_%s.qm" % self.current_language)
        self.app.installTranslator(self.uiTranslator)

        self.retranslateFreeseerApp()
        self.aboutDialog.aboutWidget.retranslate(self.current_language)
        self.retranslate()

    def retranslate(self):
        """
        Reimplement this function to provide translations to your app.
        """
        pass

    def retranslateFreeseerApp(self):
        #
        # Menubar
        #
        self.menuFile.setTitle(self.app.translate("FreeseerApp", "&File"))
        self.menuLanguage.setTitle(self.app.translate("FreeseerApp", "&Language"))
        self.menuHelp.setTitle(self.app.translate("FreeseerApp", "&Help"))

        self.actionExit.setText(self.app.translate("FreeseerApp", "&Quit"))
        self.actionAbout.setText(self.app.translate("FreeseerApp", "&About"))
        self.actionOnlineHelp.setText(self.app.translate("FreeseerApp", "Online Documentation"))
        # --- Menubar

    def setupLanguageMenu(self):
        self.languages = QDir(":/languages").entryList()

        if self.current_language is None:
            self.current_language = QLocale.system().name()  # Retrieve Current Locale from the operating system.
            log.debug("Detected user's locale as %s" % self.current_language)

        for language in self.languages:
            translator = QTranslator()  # Create a translator to translate Language Display Text.
            translator.load(":/languages/%s" % language)
            language_display_text = translator.translate("Translation", "Language Display Text")

            languageAction = QAction(self)
            languageAction.setCheckable(True)
            languageAction.setText(language_display_text)
            languageAction.setData(language)
            self.menuLanguage.addAction(languageAction)
            self.langActionGroup.addAction(languageAction)

            if self.current_language == str(language).strip("tr_").rstrip(".qm"):
                languageAction.setChecked(True)

########NEW FILE########
__FILENAME__ = resource
# -*- coding: utf-8 -*-

# Resource object code
#
# Created: Wed Mar 26 00:10:28 2014
#      by: The Resource Compiler for PyQt (Qt v4.8.5)
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore

qt_resource_data = "\
\x00\x00\x0c\x29\
\x89\
\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\
\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\
\x01\x00\x9a\x9c\x18\x00\x00\x0a\x4f\x69\x43\x43\x50\x50\x68\x6f\
\x74\x6f\x73\x68\x6f\x70\x20\x49\x43\x43\x20\x70\x72\x6f\x66\x69\
\x6c\x65\x00\x00\x78\xda\x9d\x53\x67\x54\x53\xe9\x16\x3d\xf7\xde\
\xf4\x42\x4b\x88\x80\x94\x4b\x6f\x52\x15\x08\x20\x52\x42\x8b\x80\
\x14\x91\x26\x2a\x21\x09\x10\x4a\x88\x21\xa1\xd9\x15\x51\xc1\x11\
\x45\x45\x04\x1b\xc8\xa0\x88\x03\x8e\x8e\x80\x8c\x15\x51\x2c\x0c\
\x8a\x0a\xd8\x07\xe4\x21\xa2\x8e\x83\xa3\x88\x8a\xca\xfb\xe1\x7b\
\xa3\x6b\xd6\xbc\xf7\xe6\xcd\xfe\xb5\xd7\x3e\xe7\xac\xf3\x9d\xb3\
\xcf\x07\xc0\x08\x0c\x96\x48\x33\x51\x35\x80\x0c\xa9\x42\x1e\x11\
\xe0\x83\xc7\xc4\xc6\xe1\xe4\x2e\x40\x81\x0a\x24\x70\x00\x10\x08\
\xb3\x64\x21\x73\xfd\x23\x01\x00\xf8\x7e\x3c\x3c\x2b\x22\xc0\x07\
\xbe\x00\x01\x78\xd3\x0b\x08\x00\xc0\x4d\x9b\xc0\x30\x1c\x87\xff\
\x0f\xea\x42\x99\x5c\x01\x80\x84\x01\xc0\x74\x91\x38\x4b\x08\x80\
\x14\x00\x40\x7a\x8e\x42\xa6\x00\x40\x46\x01\x80\x9d\x98\x26\x53\
\x00\xa0\x04\x00\x60\xcb\x63\x62\xe3\x00\x50\x2d\x00\x60\x27\x7f\
\xe6\xd3\x00\x80\x9d\xf8\x99\x7b\x01\x00\x5b\x94\x21\x15\x01\xa0\
\x91\x00\x20\x13\x65\x88\x44\x00\x68\x3b\x00\xac\xcf\x56\x8a\x45\
\x00\x58\x30\x00\x14\x66\x4b\xc4\x39\x00\xd8\x2d\x00\x30\x49\x57\
\x66\x48\x00\xb0\xb7\x00\xc0\xce\x10\x0b\xb2\x00\x08\x0c\x00\x30\
\x51\x88\x85\x29\x00\x04\x7b\x00\x60\xc8\x23\x23\x78\x00\x84\x99\
\x00\x14\x46\xf2\x57\x3c\xf1\x2b\xae\x10\xe7\x2a\x00\x00\x78\x99\
\xb2\x3c\xb9\x24\x39\x45\x81\x5b\x08\x2d\x71\x07\x57\x57\x2e\x1e\
\x28\xce\x49\x17\x2b\x14\x36\x61\x02\x61\x9a\x40\x2e\xc2\x79\x99\
\x19\x32\x81\x34\x0f\xe0\xf3\xcc\x00\x00\xa0\x91\x15\x11\xe0\x83\
\xf3\xfd\x78\xce\x0e\xae\xce\xce\x36\x8e\xb6\x0e\x5f\x2d\xea\xbf\
\x06\xff\x22\x62\x62\xe3\xfe\xe5\xcf\xab\x70\x40\x00\x00\xe1\x74\
\x7e\xd1\xfe\x2c\x2f\xb3\x1a\x80\x3b\x06\x80\x6d\xfe\xa2\x25\xee\
\x04\x68\x5e\x0b\xa0\x75\xf7\x8b\x66\xb2\x0f\x40\xb5\x00\xa0\xe9\
\xda\x57\xf3\x70\xf8\x7e\x3c\x3c\x45\xa1\x90\xb9\xd9\xd9\xe5\xe4\
\xe4\xd8\x4a\xc4\x42\x5b\x61\xca\x57\x7d\xfe\x67\xc2\x5f\xc0\x57\
\xfd\x6c\xf9\x7e\x3c\xfc\xf7\xf5\xe0\xbe\xe2\x24\x81\x32\x5d\x81\
\x47\x04\xf8\xe0\xc2\xcc\xf4\x4c\xa5\x1c\xcf\x92\x09\x84\x62\xdc\
\xe6\x8f\x47\xfc\xb7\x0b\xff\xfc\x1d\xd3\x22\xc4\x49\x62\xb9\x58\
\x2a\x14\xe3\x51\x12\x71\x8e\x44\x9a\x8c\xf3\x32\xa5\x22\x89\x42\
\x92\x29\xc5\x25\xd2\xff\x64\xe2\xdf\x2c\xfb\x03\x3e\xdf\x35\x00\
\xb0\x6a\x3e\x01\x7b\x91\x2d\xa8\x5d\x63\x03\xf6\x4b\x27\x10\x58\
\x74\xc0\xe2\xf7\x00\x00\xf2\xbb\x6f\xc1\xd4\x28\x08\x03\x80\x68\
\x83\xe1\xcf\x77\xff\xef\x3f\xfd\x47\xa0\x25\x00\x80\x66\x49\x92\
\x71\x00\x00\x5e\x44\x24\x2e\x54\xca\xb3\x3f\xc7\x08\x00\x00\x44\
\xa0\x81\x2a\xb0\x41\x1b\xf4\xc1\x18\x2c\xc0\x06\x1c\xc1\x05\xdc\
\xc1\x0b\xfc\x60\x36\x84\x42\x24\xc4\xc2\x42\x10\x42\x0a\x64\x80\
\x1c\x72\x60\x29\xac\x82\x42\x28\x86\xcd\xb0\x1d\x2a\x60\x2f\xd4\
\x40\x1d\x34\xc0\x51\x68\x86\x93\x70\x0e\x2e\xc2\x55\xb8\x0e\x3d\
\x70\x0f\xfa\x61\x08\x9e\xc1\x28\xbc\x81\x09\x04\x41\xc8\x08\x13\
\x61\x21\xda\x88\x01\x62\x8a\x58\x23\x8e\x08\x17\x99\x85\xf8\x21\
\xc1\x48\x04\x12\x8b\x24\x20\xc9\x88\x14\x51\x22\x4b\x91\x35\x48\
\x31\x52\x8a\x54\x20\x55\x48\x1d\xf2\x3d\x72\x02\x39\x87\x5c\x46\
\xba\x91\x3b\xc8\x00\x32\x82\xfc\x86\xbc\x47\x31\x94\x81\xb2\x51\
\x3d\xd4\x0c\xb5\x43\xb9\xa8\x37\x1a\x84\x46\xa2\x0b\xd0\x64\x74\
\x31\x9a\x8f\x16\xa0\x9b\xd0\x72\xb4\x1a\x3d\x8c\x36\xa1\xe7\xd0\
\xab\x68\x0f\xda\x8f\x3e\x43\xc7\x30\xc0\xe8\x18\x07\x33\xc4\x6c\
\x30\x2e\xc6\xc3\x42\xb1\x38\x2c\x09\x93\x63\xcb\xb1\x22\xac\x0c\
\xab\xc6\x1a\xb0\x56\xac\x03\xbb\x89\xf5\x63\xcf\xb1\x77\x04\x12\
\x81\x45\xc0\x09\x36\x04\x77\x42\x20\x61\x1e\x41\x48\x58\x4c\x58\
\x4e\xd8\x48\xa8\x20\x1c\x24\x34\x11\xda\x09\x37\x09\x03\x84\x51\
\xc2\x27\x22\x93\xa8\x4b\xb4\x26\xba\x11\xf9\xc4\x18\x62\x32\x31\
\x87\x58\x48\x2c\x23\xd6\x12\x8f\x13\x2f\x10\x7b\x88\x43\xc4\x37\
\x24\x12\x89\x43\x32\x27\xb9\x90\x02\x49\xb1\xa4\x54\xd2\x12\xd2\
\x46\xd2\x6e\x52\x23\xe9\x2c\xa9\x9b\x34\x48\x1a\x23\x93\xc9\xda\
\x64\x6b\xb2\x07\x39\x94\x2c\x20\x2b\xc8\x85\xe4\x9d\xe4\xc3\xe4\
\x33\xe4\x1b\xe4\x21\xf2\x5b\x0a\x9d\x62\x40\x71\xa4\xf8\x53\xe2\
\x28\x52\xca\x6a\x4a\x19\xe5\x10\xe5\x34\xe5\x06\x65\x98\x32\x41\
\x55\xa3\x9a\x52\xdd\xa8\xa1\x54\x11\x35\x8f\x5a\x42\xad\xa1\xb6\
\x52\xaf\x51\x87\xa8\x13\x34\x75\x9a\x39\xcd\x83\x16\x49\x4b\xa5\
\xad\xa2\x95\xd3\x1a\x68\x17\x68\xf7\x69\xaf\xe8\x74\xba\x11\xdd\
\x95\x1e\x4e\x97\xd0\x57\xd2\xcb\xe9\x47\xe8\x97\xe8\x03\xf4\x77\
\x0c\x0d\x86\x15\x83\xc7\x88\x67\x28\x19\x9b\x18\x07\x18\x67\x19\
\x77\x18\xaf\x98\x4c\xa6\x19\xd3\x8b\x19\xc7\x54\x30\x37\x31\xeb\
\x98\xe7\x99\x0f\x99\x6f\x55\x58\x2a\xb6\x2a\x7c\x15\x91\xca\x0a\
\x95\x4a\x95\x26\x95\x1b\x2a\x2f\x54\xa9\xaa\xa6\xaa\xde\xaa\x0b\
\x55\xf3\x55\xcb\x54\x8f\xa9\x5e\x53\x7d\xae\x46\x55\x33\x53\xe3\
\xa9\x09\xd4\x96\xab\x55\xaa\x9d\x50\xeb\x53\x1b\x53\x67\xa9\x3b\
\xa8\x87\xaa\x67\xa8\x6f\x54\x3f\xa4\x7e\x59\xfd\x89\x06\x59\xc3\
\x4c\xc3\x4f\x43\xa4\x51\xa0\xb1\x5f\xe3\xbc\xc6\x20\x0b\x63\x19\
\xb3\x78\x2c\x21\x6b\x0d\xab\x86\x75\x81\x35\xc4\x26\xb1\xcd\xd9\
\x7c\x76\x2a\xbb\x98\xfd\x1d\xbb\x8b\x3d\xaa\xa9\xa1\x39\x43\x33\
\x4a\x33\x57\xb3\x52\xf3\x94\x66\x3f\x07\xe3\x98\x71\xf8\x9c\x74\
\x4e\x09\xe7\x28\xa7\x97\xf3\x7e\x8a\xde\x14\xef\x29\xe2\x29\x1b\
\xa6\x34\x4c\xb9\x31\x65\x5c\x6b\xaa\x96\x97\x96\x58\xab\x48\xab\
\x51\xab\x47\xeb\xbd\x36\xae\xed\xa7\x9d\xa6\xbd\x45\xbb\x59\xfb\
\x81\x0e\x41\xc7\x4a\x27\x5c\x27\x47\x67\x8f\xce\x05\x9d\xe7\x53\
\xd9\x53\xdd\xa7\x0a\xa7\x16\x4d\x3d\x3a\xf5\xae\x2e\xaa\x6b\xa5\
\x1b\xa1\xbb\x44\x77\xbf\x6e\xa7\xee\x98\x9e\xbe\x5e\x80\x9e\x4c\
\x6f\xa7\xde\x79\xbd\xe7\xfa\x1c\x7d\x2f\xfd\x54\xfd\x6d\xfa\xa7\
\xf5\x47\x0c\x58\x06\xb3\x0c\x24\x06\xdb\x0c\xce\x18\x3c\xc5\x35\
\x71\x6f\x3c\x1d\x2f\xc7\xdb\xf1\x51\x43\x5d\xc3\x40\x43\xa5\x61\
\x95\x61\x97\xe1\x84\x91\xb9\xd1\x3c\xa3\xd5\x46\x8d\x46\x0f\x8c\
\x69\xc6\x5c\xe3\x24\xe3\x6d\xc6\x6d\xc6\xa3\x26\x06\x26\x21\x26\
\x4b\x4d\xea\x4d\xee\x9a\x52\x4d\xb9\xa6\x29\xa6\x3b\x4c\x3b\x4c\
\xc7\xcd\xcc\xcd\xa2\xcd\xd6\x99\x35\x9b\x3d\x31\xd7\x32\xe7\x9b\
\xe7\x9b\xd7\x9b\xdf\xb7\x60\x5a\x78\x5a\x2c\xb6\xa8\xb6\xb8\x65\
\x49\xb2\xe4\x5a\xa6\x59\xee\xb6\xbc\x6e\x85\x5a\x39\x59\xa5\x58\
\x55\x5a\x5d\xb3\x46\xad\x9d\xad\x25\xd6\xbb\xad\xbb\xa7\x11\xa7\
\xb9\x4e\x93\x4e\xab\x9e\xd6\x67\xc3\xb0\xf1\xb6\xc9\xb6\xa9\xb7\
\x19\xb0\xe5\xd8\x06\xdb\xae\xb6\x6d\xb6\x7d\x61\x67\x62\x17\x67\
\xb7\xc5\xae\xc3\xee\x93\xbd\x93\x7d\xba\x7d\x8d\xfd\x3d\x07\x0d\
\x87\xd9\x0e\xab\x1d\x5a\x1d\x7e\x73\xb4\x72\x14\x3a\x56\x3a\xde\
\x9a\xce\x9c\xee\x3f\x7d\xc5\xf4\x96\xe9\x2f\x67\x58\xcf\x10\xcf\
\xd8\x33\xe3\xb6\x13\xcb\x29\xc4\x69\x9d\x53\x9b\xd3\x47\x67\x17\
\x67\xb9\x73\x83\xf3\x88\x8b\x89\x4b\x82\xcb\x2e\x97\x3e\x2e\x9b\
\x1b\xc6\xdd\xc8\xbd\xe4\x4a\x74\xf5\x71\x5d\xe1\x7a\xd2\xf5\x9d\
\x9b\xb3\x9b\xc2\xed\xa8\xdb\xaf\xee\x36\xee\x69\xee\x87\xdc\x9f\
\xcc\x34\x9f\x29\x9e\x59\x33\x73\xd0\xc3\xc8\x43\xe0\x51\xe5\xd1\
\x3f\x0b\x9f\x95\x30\x6b\xdf\xac\x7e\x4f\x43\x4f\x81\x67\xb5\xe7\
\x23\x2f\x63\x2f\x91\x57\xad\xd7\xb0\xb7\xa5\x77\xaa\xf7\x61\xef\
\x17\x3e\xf6\x3e\x72\x9f\xe3\x3e\xe3\x3c\x37\xde\x32\xde\x59\x5f\
\xcc\x37\xc0\xb7\xc8\xb7\xcb\x4f\xc3\x6f\x9e\x5f\x85\xdf\x43\x7f\
\x23\xff\x64\xff\x7a\xff\xd1\x00\xa7\x80\x25\x01\x67\x03\x89\x81\
\x41\x81\x5b\x02\xfb\xf8\x7a\x7c\x21\xbf\x8e\x3f\x3a\xdb\x65\xf6\
\xb2\xd9\xed\x41\x8c\xa0\xb9\x41\x15\x41\x8f\x82\xad\x82\xe5\xc1\
\xad\x21\x68\xc8\xec\x90\xad\x21\xf7\xe7\x98\xce\x91\xce\x69\x0e\
\x85\x50\x7e\xe8\xd6\xd0\x07\x61\xe6\x61\x8b\xc3\x7e\x0c\x27\x85\
\x87\x85\x57\x86\x3f\x8e\x70\x88\x58\x1a\xd1\x31\x97\x35\x77\xd1\
\xdc\x43\x73\xdf\x44\xfa\x44\x96\x44\xde\x9b\x67\x31\x4f\x39\xaf\
\x2d\x4a\x35\x2a\x3e\xaa\x2e\x6a\x3c\xda\x37\xba\x34\xba\x3f\xc6\
\x2e\x66\x59\xcc\xd5\x58\x9d\x58\x49\x6c\x4b\x1c\x39\x2e\x2a\xae\
\x36\x6e\x6c\xbe\xdf\xfc\xed\xf3\x87\xe2\x9d\xe2\x0b\xe3\x7b\x17\
\x98\x2f\xc8\x5d\x70\x79\xa1\xce\xc2\xf4\x85\xa7\x16\xa9\x2e\x12\
\x2c\x3a\x96\x40\x4c\x88\x4e\x38\x94\xf0\x41\x10\x2a\xa8\x16\x8c\
\x25\xf2\x13\x77\x25\x8e\x0a\x79\xc2\x1d\xc2\x67\x22\x2f\xd1\x36\
\xd1\x88\xd8\x43\x5c\x2a\x1e\x4e\xf2\x48\x2a\x4d\x7a\x92\xec\x91\
\xbc\x35\x79\x24\xc5\x33\xa5\x2c\xe5\xb9\x84\x27\xa9\x90\xbc\x4c\
\x0d\x4c\xdd\x9b\x3a\x9e\x16\x9a\x76\x20\x6d\x32\x3d\x3a\xbd\x31\
\x83\x92\x91\x90\x71\x42\xaa\x21\x4d\x93\xb6\x67\xea\x67\xe6\x66\
\x76\xcb\xac\x65\x85\xb2\xfe\xc5\x6e\x8b\xb7\x2f\x1e\x95\x07\xc9\
\x6b\xb3\x90\xac\x05\x59\x2d\x0a\xb6\x42\xa6\xe8\x54\x5a\x28\xd7\
\x2a\x07\xb2\x67\x65\x57\x66\xbf\xcd\x89\xca\x39\x96\xab\x9e\x2b\
\xcd\xed\xcc\xb3\xca\xdb\x90\x37\x9c\xef\x9f\xff\xed\x12\xc2\x12\
\xe1\x92\xb6\xa5\x86\x4b\x57\x2d\x1d\x58\xe6\xbd\xac\x6a\x39\xb2\
\x3c\x71\x79\xdb\x0a\xe3\x15\x05\x2b\x86\x56\x06\xac\x3c\xb8\x8a\
\xb6\x2a\x6d\xd5\x4f\xab\xed\x57\x97\xae\x7e\xbd\x26\x7a\x4d\x6b\
\x81\x5e\xc1\xca\x82\xc1\xb5\x01\x6b\xeb\x0b\x55\x0a\xe5\x85\x7d\
\xeb\xdc\xd7\xed\x5d\x4f\x58\x2f\x59\xdf\xb5\x61\xfa\x86\x9d\x1b\
\x3e\x15\x89\x8a\xae\x14\xdb\x17\x97\x15\x7f\xd8\x28\xdc\x78\xe5\
\x1b\x87\x6f\xca\xbf\x99\xdc\x94\xb4\xa9\xab\xc4\xb9\x64\xcf\x66\
\xd2\x66\xe9\xe6\xde\x2d\x9e\x5b\x0e\x96\xaa\x97\xe6\x97\x0e\x6e\
\x0d\xd9\xda\xb4\x0d\xdf\x56\xb4\xed\xf5\xf6\x45\xdb\x2f\x97\xcd\
\x28\xdb\xbb\x83\xb6\x43\xb9\xa3\xbf\x3c\xb8\xbc\x65\xa7\xc9\xce\
\xcd\x3b\x3f\x54\xa4\x54\xf4\x54\xfa\x54\x36\xee\xd2\xdd\xb5\x61\
\xd7\xf8\x6e\xd1\xee\x1b\x7b\xbc\xf6\x34\xec\xd5\xdb\x5b\xbc\xf7\
\xfd\x3e\xc9\xbe\xdb\x55\x01\x55\x4d\xd5\x66\xd5\x65\xfb\x49\xfb\
\xb3\xf7\x3f\xae\x89\xaa\xe9\xf8\x96\xfb\x6d\x5d\xad\x4e\x6d\x71\
\xed\xc7\x03\xd2\x03\xfd\x07\x23\x0e\xb6\xd7\xb9\xd4\xd5\x1d\xd2\
\x3d\x54\x52\x8f\xd6\x2b\xeb\x47\x0e\xc7\x1f\xbe\xfe\x9d\xef\x77\
\x2d\x0d\x36\x0d\x55\x8d\x9c\xc6\xe2\x23\x70\x44\x79\xe4\xe9\xf7\
\x09\xdf\xf7\x1e\x0d\x3a\xda\x76\x8c\x7b\xac\xe1\x07\xd3\x1f\x76\
\x1d\x67\x1d\x2f\x6a\x42\x9a\xf2\x9a\x46\x9b\x53\x9a\xfb\x5b\x62\
\x5b\xba\x4f\xcc\x3e\xd1\xd6\xea\xde\x7a\xfc\x47\xdb\x1f\x0f\x9c\
\x34\x3c\x59\x79\x4a\xf3\x54\xc9\x69\xda\xe9\x82\xd3\x93\x67\xf2\
\xcf\x8c\x9d\x95\x9d\x7d\x7e\x2e\xf9\xdc\x60\xdb\xa2\xb6\x7b\xe7\
\x63\xce\xdf\x6a\x0f\x6f\xef\xba\x10\x74\xe1\xd2\x45\xff\x8b\xe7\
\x3b\xbc\x3b\xce\x5c\xf2\xb8\x74\xf2\xb2\xdb\xe5\x13\x57\xb8\x57\
\x9a\xaf\x3a\x5f\x6d\xea\x74\xea\x3c\xfe\x93\xd3\x4f\xc7\xbb\x9c\
\xbb\x9a\xae\xb9\x5c\x6b\xb9\xee\x7a\xbd\xb5\x7b\x66\xf7\xe9\x1b\
\x9e\x37\xce\xdd\xf4\xbd\x79\xf1\x16\xff\xd6\xd5\x9e\x39\x3d\xdd\
\xbd\xf3\x7a\x6f\xf7\xc5\xf7\xf5\xdf\x16\xdd\x7e\x72\x27\xfd\xce\
\xcb\xbb\xd9\x77\x27\xee\xad\xbc\x4f\xbc\x5f\xf4\x40\xed\x41\xd9\
\x43\xdd\x87\xd5\x3f\x5b\xfe\xdc\xd8\xef\xdc\x7f\x6a\xc0\x77\xa0\
\xf3\xd1\xdc\x47\xf7\x06\x85\x83\xcf\xfe\x91\xf5\x8f\x0f\x43\x05\
\x8f\x99\x8f\xcb\x86\x0d\x86\xeb\x9e\x38\x3e\x39\x39\xe2\x3f\x72\
\xfd\xe9\xfc\xa7\x43\xcf\x64\xcf\x26\x9e\x17\xfe\xa2\xfe\xcb\xae\
\x17\x16\x2f\x7e\xf8\xd5\xeb\xd7\xce\xd1\x98\xd1\xa1\x97\xf2\x97\
\x93\xbf\x6d\x7c\xa5\xfd\xea\xc0\xeb\x19\xaf\xdb\xc6\xc2\xc6\x1e\
\xbe\xc9\x78\x33\x31\x5e\xf4\x56\xfb\xed\xc1\x77\xdc\x77\x1d\xef\
\xa3\xdf\x0f\x4f\xe4\x7c\x20\x7f\x28\xff\x68\xf9\xb1\xf5\x53\xd0\
\xa7\xfb\x93\x19\x93\x93\xff\x04\x03\x98\xf3\xfc\x63\x33\x2d\xdb\
\x00\x00\x00\x20\x63\x48\x52\x4d\x00\x00\x7a\x25\x00\x00\x80\x83\
\x00\x00\xf9\xff\x00\x00\x80\xe9\x00\x00\x75\x30\x00\x00\xea\x60\
\x00\x00\x3a\x98\x00\x00\x17\x6f\x92\x5f\xc5\x46\x00\x00\x01\x54\
\x49\x44\x41\x54\x78\xda\xec\x97\x3d\x4a\x03\x51\x14\x85\xbf\x89\
\xf9\x93\x20\x29\x22\x16\x82\x12\x70\x09\x59\x44\xd6\x91\xc6\x3d\
\x88\xb5\xb8\x07\x11\x5c\x47\x16\x20\xd8\x04\x2c\xac\x2c\x42\x10\
\x34\x88\x04\x49\x11\x71\x12\xdf\x3d\x16\x93\xd8\x85\x30\xf7\x05\
\x52\x38\x0f\xa6\x1a\xe6\xce\x37\xe7\x9e\x7b\x39\x93\x48\x62\x97\
\xa7\xc4\x8e\x4f\x01\x50\x00\x94\xd7\xdd\xe8\x74\x3a\x55\xa0\x05\
\x34\x81\x8a\xb3\xfe\x02\x98\x02\x93\xc1\x60\x30\xcf\x05\x00\xb4\
\xae\x1a\xa3\xbb\xd3\x52\xda\x8d\xf9\xc2\x17\xab\xf5\x2f\x67\xed\
\x1e\x30\xce\x0b\xd0\x3c\x29\xa5\xdd\xa3\xf3\x6b\xaa\xc7\x6d\xd7\
\xcb\xe7\x6f\x23\x74\x73\xd1\x5d\xaa\x98\x1b\xa0\x62\x82\xef\xa7\
\x07\xbe\x1e\xef\x7d\x06\x2b\xef\x61\xd9\x9e\xab\xe4\xf6\x00\x80\
\x09\x64\x42\xe6\x93\x5f\xa6\x15\x00\x3e\x00\x84\x64\x80\x8f\x40\
\xca\x6a\xb8\x01\x82\x80\x60\x10\x82\xdb\x84\x21\x4a\x01\x81\x14\
\x90\x99\x7b\xcb\x44\xb5\x20\xe8\xcf\x08\x3e\x00\x4b\xe2\x14\x08\
\x12\x84\x80\x9c\x2d\x48\x56\x35\xdc\x00\x40\xfa\x3a\xc4\x7e\x82\
\x7b\x0c\x37\x3d\xb9\xd1\x03\x84\xe0\x37\x61\x12\xed\x01\xa1\x88\
\x16\x28\x89\x6d\x81\x00\xb3\xec\xda\x85\x09\xb3\x01\x08\xc8\x9c\
\x0a\xd8\x56\xc6\x70\x97\x0a\xa0\x78\x05\x22\x56\xf1\xc2\x04\xfb\
\x87\x07\x54\x1a\x35\x5f\x1a\x99\xa5\xd8\xe7\xc7\x2a\x98\xe4\x06\
\x98\x8e\x55\xef\xdb\xf3\x30\x2a\x90\xbc\x53\xef\x2f\x53\x51\x6e\
\x80\xc9\x2d\x67\xbd\x6d\x45\xb2\xb5\xab\xa2\xf8\x33\x2a\x00\xfe\
\x3d\xc0\xef\x00\x69\x19\xc2\x42\x65\x36\x5e\x46\x00\x00\x00\x00\
\x49\x45\x4e\x44\xae\x42\x60\x82\
\x00\x00\x14\x05\
\x89\
\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\
\x00\x00\x0a\x3d\x69\x43\x43\x50\x69\x63\x63\x00\x00\x78\xda\x9d\
\x53\x67\x54\x53\xe9\x16\x3d\xf7\xde\xf4\x42\x4b\x88\x80\x94\x4b\
\x6f\x52\x15\x08\x20\x52\x42\x8b\x80\x54\x69\xa2\x12\x92\x00\xa1\
\x84\x18\x12\x40\xec\x88\xa8\xc0\x88\xa2\x22\x82\x15\x19\x14\x71\
\xc0\xd1\x11\x90\xb1\x22\x8a\x85\x41\xb1\xf7\x01\x79\x08\x28\xe3\
\xe0\x28\x36\x54\xde\x0f\xde\x1a\x7d\xb3\xe6\xbd\x37\x6f\xf6\xaf\
\xbd\xf6\x39\x67\x9d\xef\x9c\x7d\x3e\x00\x46\x60\xb0\x44\x9a\x85\
\xaa\x01\x64\x4a\x15\xf2\x88\x00\x1f\x3c\x36\x2e\x1e\x27\x77\x03\
\x0a\x54\x20\x81\x03\x80\x40\x98\x2d\x0b\x89\xf4\x8f\x02\x00\xe0\
\xfb\xf1\xf0\xec\x88\x00\x1f\xf8\x02\x04\xe0\xcd\x6d\x40\x00\x00\
\x6e\xd8\x04\x86\xe1\x38\xfc\x7f\x50\x17\xca\xe4\x0a\x00\x24\x0c\
\x00\xa6\x8b\xc4\xd9\x42\x00\xa4\x10\x00\x32\x72\x15\x32\x05\x00\
\x32\x0a\x00\xec\xa4\x74\x99\x02\x00\x25\x00\x00\x5b\x1e\x1b\x17\
\x0f\x80\x6a\x01\x00\x3b\x65\x92\x4f\x03\x00\x76\xd2\x24\xf7\x02\
\x00\xb6\x28\x53\x2a\x02\x40\xa3\x00\x40\x26\xca\x14\x89\x00\xd0\
\x0e\x00\x58\x97\xa3\x14\x8b\x00\xb0\x60\x00\x28\xca\x91\x88\x73\
\x01\xb0\x9b\x00\x60\x92\xa1\xcc\x94\x00\x60\xef\x00\x80\x9d\x29\
\x16\x64\x03\x10\x18\x00\x60\xa2\x10\x0b\x53\x01\x08\xf6\x00\xc0\
\x90\x47\x45\xf0\x00\x08\x33\x01\x28\x8c\x94\xaf\x78\xd2\x57\x5c\
\x21\xce\x53\x00\x00\xf0\xb2\x64\x8b\xe5\x92\x94\x54\x05\x6e\x21\
\xb4\xc4\x1d\x5c\x5d\xb9\x78\xa0\x38\x37\x43\xac\x50\xd8\x84\x09\
\x84\xe9\x02\xb9\x08\xe7\x65\x65\xca\x04\xd2\xc5\x00\x93\x33\x03\
\x00\x80\x46\x76\x44\x80\x0f\xce\xf7\xe3\x39\x3b\xb8\x3a\x3b\xdb\
\x38\xda\x3a\x7c\xb5\xa8\xff\x1a\xfc\x8b\x88\x8d\x8b\xff\x97\x3f\
\xaf\xc2\x01\x01\x00\x84\xd3\xf5\x45\xfb\xb3\xbc\xac\x1a\x00\xee\
\x18\x00\xb6\xf1\x8b\x96\xb4\x1d\xa0\x65\x0d\x80\xd6\xfd\x2f\x9a\
\xc9\x1e\x00\xd5\x42\x80\xe6\xab\x5f\xcd\xc3\xe1\xfb\xf1\xf0\x54\
\x85\x42\xe6\x66\x67\x97\x9b\x9b\x6b\x2b\x11\x0b\x6d\x85\xa9\x5f\
\xf5\xf9\x9f\x09\x7f\x01\x5f\xf5\xb3\xe5\xfb\xf1\xf0\xdf\xd7\x83\
\xfb\x8a\x93\x05\xca\x0c\x05\x1e\x11\xe0\x83\x0b\xb3\x32\xb2\x94\
\x72\x3c\x5b\x26\x10\x8a\x71\x9b\x3f\x1e\xf1\xdf\x2e\xfc\xf3\x77\
\x4c\x8b\x10\x27\x8b\xe5\x62\xa9\x50\x8c\x47\x4b\xc4\xb9\x12\x69\
\x0a\xce\xcb\x92\x8a\x24\x0a\x49\x96\x14\x97\x48\xff\x93\x89\x7f\
\xb3\xec\x0f\x98\xbc\x6b\x00\x60\xd5\x7e\x06\xf6\x42\x5b\x50\xbb\
\xca\x06\xec\x97\x2e\x20\xb0\xe8\x80\x25\xec\x02\x00\xe4\x77\xdf\
\x82\xa9\xd1\x10\x06\x00\x31\x06\x83\x93\x77\x0f\x00\x30\xf9\x9b\
\xff\x1d\x68\x19\x00\xa0\xd9\x92\x14\x1c\x00\x80\x17\x11\x85\x0b\
\x95\xf2\x9c\xc9\x18\x01\x00\x80\x08\x34\x50\x05\x36\x68\x83\x3e\
\x18\x83\x05\xd8\x80\x23\xb8\x80\x3b\x78\x81\x1f\xcc\x86\x50\x88\
\x82\x38\x58\x00\x42\x48\x85\x4c\x90\x43\x2e\x2c\x85\x55\x50\x04\
\x25\xb0\x11\xb6\x42\x15\xec\x86\x5a\xa8\x87\x46\x38\x02\x2d\x70\
\x02\xce\xc2\x05\xb8\x02\xd7\xe0\x16\x3c\x80\x5e\x18\x80\xe7\x30\
\x0a\x6f\x60\x1c\x41\x10\x32\xc2\x44\x58\x88\x36\x62\x80\x98\x22\
\xd6\x88\x23\xc2\x45\x66\x21\x7e\x48\x30\x12\x81\xc4\x21\x89\x48\
\x0a\x22\x45\x94\xc8\x52\x64\x35\x52\x82\x94\x23\x55\xc8\x5e\xa4\
\x1e\xf9\x1e\x39\x8e\x9c\x45\x2e\x21\x3d\xc8\x3d\xa4\x0f\x19\x46\
\x7e\x43\x3e\xa0\x18\xca\x40\xd9\xa8\x1e\x6a\x86\xda\xa1\x5c\xd4\
\x1b\x0d\x42\xa3\xd0\xf9\x68\x0a\xba\x08\xcd\x47\x0b\xd1\x0d\x68\
\x25\x5a\x83\x1e\x42\x9b\xd1\xb3\xe8\x15\xf4\x16\xda\x8b\x3e\x47\
\xc7\x30\xc0\xe8\x18\x07\x33\xc4\x6c\x30\x2e\xc6\xc3\x42\xb1\x78\
\x2c\x19\x93\x63\xcb\xb1\x62\xac\x02\xab\xc1\x1a\xb1\x36\xac\x13\
\xbb\x81\xf5\x62\x23\xd8\x7b\x02\x89\xc0\x22\xe0\x04\x1b\x82\x3b\
\x21\x90\x30\x97\x20\x24\x2c\x22\x2c\x27\x94\x12\xaa\x08\x07\x08\
\xcd\x84\x0e\xc2\x0d\x42\x1f\x61\x94\xf0\x99\xc8\x24\xea\x12\xad\
\x89\x6e\x44\x3e\x31\x96\x98\x42\xcc\x25\x16\x11\x2b\x88\x75\xc4\
\x63\xc4\xf3\xc4\x5b\xc4\x01\xe2\x1b\x12\x89\xc4\x21\x99\x93\x5c\
\x48\x81\xa4\x38\x52\x1a\x69\x09\xa9\x94\xb4\x93\xd4\x44\x3a\x43\
\xea\x21\xf5\x93\xc6\xc8\x64\xb2\x36\xd9\x9a\xec\x41\x0e\x25\x0b\
\xc8\x0a\x72\x11\x79\x3b\xf9\x10\xf9\x34\xf9\x3a\x79\x80\xfc\x8e\
\x42\xa7\x18\x50\x1c\x29\xfe\x94\x78\x8a\x94\x52\x40\xa9\xa0\x1c\
\xa4\x9c\xa2\x5c\xa7\x0c\x52\xc6\xa9\x6a\x54\x53\xaa\x1b\x35\x94\
\x2a\xa2\x2e\xa6\x96\x51\x6b\xa9\x6d\xd4\xab\xd4\x01\xea\x38\x4d\
\x9d\x66\x4e\xf3\xa0\x45\xd1\xd2\x68\xab\x68\x95\xb4\x46\xda\x79\
\xda\x43\xda\x2b\x3a\x9d\x6e\x44\x77\xa5\x87\xd3\x25\xf4\x95\xf4\
\x4a\xfa\x61\xfa\x45\x7a\x1f\xfd\x3d\x43\x83\x61\xc5\xe0\x31\x12\
\x18\x4a\xc6\x06\xc6\x7e\xc6\x19\xc6\x3d\xc6\x2b\x26\x93\x69\xc6\
\xf4\x62\xc6\x33\x15\xcc\x0d\xcc\x7a\xe6\x39\xe6\x63\xe6\x3b\x15\
\x96\x8a\xad\x0a\x5f\x45\xa4\xb2\x42\xa5\x5a\xa5\x59\xe5\xba\xca\
\x0b\x55\xaa\xaa\xa9\xaa\xb7\xea\x02\xd5\x7c\xd5\x0a\xd5\xa3\xaa\
\x57\x55\x47\xd4\xa8\x6a\x66\x6a\x3c\x35\x81\xda\x72\xb5\x6a\xb5\
\xe3\x6a\x77\xd4\xc6\xd4\x59\xea\x0e\xea\xa1\xea\x99\xea\xa5\xea\
\x07\xd5\x2f\xa9\x0f\x69\x90\x35\xcc\x34\xfc\x34\x44\x1a\x85\x1a\
\xfb\x34\xce\x69\xf4\xb3\x30\x96\x31\x8b\xc7\x12\xb2\x56\xb3\x6a\
\x59\xe7\x59\x03\x6c\x12\xdb\x9c\xcd\x67\xa7\xb1\x4b\xd8\xdf\xb1\
\xbb\xd9\xa3\x9a\x1a\x9a\x33\x34\xa3\x35\xf3\x34\xab\x35\x4f\x6a\
\xf6\x72\x30\x8e\x19\x87\xcf\xc9\xe0\x94\x71\x8e\x70\x6e\x73\x3e\
\x4c\xd1\x9b\xe2\x3d\x45\x3c\x65\xfd\x94\xc6\x29\xd7\xa7\xbc\xd5\
\x9a\xaa\xe5\xa5\x25\xd6\x2a\xd6\x6a\xd2\xba\xa5\xf5\x41\x1b\xd7\
\xf6\xd3\x4e\xd7\xde\xa4\xdd\xa2\xfd\x48\x87\xa0\x63\xa5\x13\xae\
\x93\xab\xb3\x4b\xe7\xbc\xce\xc8\x54\xf6\x54\xf7\xa9\xc2\xa9\xc5\
\x53\x8f\x4c\xbd\xaf\x8b\xea\x5a\xe9\x46\xe8\x2e\xd1\xdd\xa7\xdb\
\xa5\x3b\xa6\xa7\xaf\x17\xa0\x27\xd3\xdb\xae\x77\x4e\x6f\x44\x9f\
\xa3\xef\xa5\x9f\xa6\xbf\x45\xff\x94\xfe\xb0\x01\xcb\x60\x96\x81\
\xc4\x60\x8b\xc1\x69\x83\x67\xb8\x26\xee\x8d\x67\xe0\x95\x78\x07\
\x3e\x6a\xa8\x6b\x18\x68\xa8\x34\xdc\x6b\xd8\x6d\x38\x6e\x64\x6e\
\x34\xd7\xa8\xc0\xa8\xc9\xe8\x91\x31\xcd\x98\x6b\x9c\x6c\xbc\xc5\
\xb8\xdd\x78\xd4\xc4\xc0\x24\xc4\x64\xa9\x49\x83\xc9\x7d\x53\xaa\
\x29\xd7\x34\xd5\x74\x9b\x69\xa7\xe9\x5b\x33\x73\xb3\x18\xb3\xb5\
\x66\x2d\x66\x43\xe6\x5a\xe6\x7c\xf3\x7c\xf3\x06\xf3\x87\x16\x4c\
\x0b\x4f\x8b\x45\x16\x35\x16\x37\x2d\x49\x96\x5c\xcb\x74\xcb\x9d\
\x96\xd7\xac\x50\x2b\x27\xab\x54\xab\x6a\xab\xab\xd6\xa8\xb5\xb3\
\xb5\xc4\x7a\xa7\x75\xcf\x34\xe2\x34\xd7\x69\xd2\x69\x35\xd3\xee\
\xd8\x30\x6c\xbc\x6d\x72\x6c\x1a\x6c\xfa\x6c\x39\xb6\xc1\xb6\x05\
\xb6\x2d\xb6\x2f\xec\x4c\xec\xe2\xed\x36\xd9\x75\xda\x7d\xb6\x77\
\xb2\xcf\xb0\xaf\xb5\x7f\xe0\xa0\xe1\x30\xdb\xa1\xc0\xa1\xcd\xe1\
\x37\x47\x2b\x47\xa1\x63\xb5\xe3\xcd\xe9\xcc\xe9\xfe\xd3\x57\x4c\
\x6f\x9d\xfe\x72\x86\xf5\x0c\xf1\x8c\x5d\x33\xee\x3a\xb1\x9c\x42\
\x9c\xd6\x3a\xb5\x3b\x7d\x72\x76\x71\x96\x3b\x37\x3a\x0f\xbb\x98\
\xb8\x24\xba\xec\x70\xb9\xc3\x65\x73\xc3\xb8\xa5\xdc\x8b\xae\x44\
\x57\x1f\xd7\x15\xae\x27\x5c\xdf\xbb\x39\xbb\x29\xdc\x8e\xb8\xfd\
\xea\x6e\xe3\x9e\xee\x7e\xd0\x7d\x68\xa6\xf9\x4c\xf1\xcc\xda\x99\
\xfd\x1e\x46\x1e\x02\x8f\xbd\x1e\xbd\xb3\xf0\x59\x89\xb3\xf6\xcc\
\xea\xf5\x34\xf4\x14\x78\xd6\x78\x3e\xf1\x32\xf6\x12\x79\xd5\x79\
\x0d\x7a\x5b\x7a\xa7\x79\x1f\xf2\x7e\xe1\x63\xef\x23\xf7\x39\xe6\
\xf3\x96\xe7\xc6\x5b\xc6\x3b\xe3\x8b\xf9\x06\xf8\x16\xfb\x76\xfb\
\x69\xf8\xcd\xf5\xab\xf2\x7b\xec\x6f\xe4\x9f\xe2\xdf\xe0\x3f\x1a\
\xe0\x14\xb0\x24\xe0\x4c\x20\x31\x30\x28\x70\x53\xe0\x1d\xbe\x1e\
\x5f\xc8\xaf\xe7\x8f\xce\x76\x99\xbd\x6c\x76\x47\x10\x23\x28\x32\
\xa8\x2a\xe8\x49\xb0\x55\xb0\x3c\xb8\x2d\x04\x0d\x99\x1d\xb2\x39\
\xe4\xe1\x1c\xd3\x39\xd2\x39\x2d\xa1\x10\xca\x0f\xdd\x1c\xfa\x28\
\xcc\x3c\x6c\x51\xd8\x8f\xe1\xa4\xf0\xb0\xf0\xea\xf0\xa7\x11\x0e\
\x11\x4b\x23\x3a\x23\x59\x91\x0b\x23\x0f\x46\xbe\x89\xf2\x89\x2a\
\x8b\x7a\x30\xd7\x62\xae\x72\x6e\x7b\xb4\x6a\x74\x42\x74\x7d\xf4\
\xdb\x18\xdf\x98\xf2\x98\xde\x58\xbb\xd8\x65\xb1\x57\xe2\x74\xe2\
\x24\x71\xad\xf1\xe4\xf8\xe8\xf8\xba\xf8\xb1\x79\x7e\xf3\xb6\xce\
\x1b\x48\x70\x4a\x28\x4a\xb8\x3d\xdf\x7c\x7e\xde\xfc\x4b\x0b\x74\
\x16\x64\x2c\x38\xb9\x50\x75\xa1\x60\xe1\xd1\x44\x62\x62\x4c\xe2\
\xc1\xc4\x8f\x82\x50\x41\x8d\x60\x2c\x89\x9f\xb4\x23\x69\x54\xc8\
\x13\x6e\x13\x3e\x17\x79\x89\xb6\x88\x86\xc5\x1e\xe2\x72\xf1\x60\
\xb2\x47\x72\x79\xf2\x50\x8a\x47\xca\xe6\x94\xe1\x54\xcf\xd4\x8a\
\xd4\x11\x09\x4f\x52\x25\x79\x99\x16\x98\xb6\x3b\xed\x6d\x7a\x68\
\xfa\xfe\xf4\x89\x8c\x98\x8c\xa6\x4c\x4a\x66\x62\xe6\x71\xa9\x86\
\x34\x5d\xda\x91\xa5\x9f\x95\x97\xd5\x23\xb3\x96\x15\xc9\x7a\x17\
\xb9\x2d\xda\xba\x68\x54\x1e\x24\xaf\xcb\x46\xb2\xe7\x67\xb7\x2a\
\xd8\x0a\x99\xa2\x4b\x69\xa1\x5c\xa3\xec\xcb\x99\x95\x53\x9d\xf3\
\x2e\x37\x3a\xf7\x68\x9e\x7a\x9e\x34\xaf\x6b\xb1\xd5\xe2\xf5\x8b\
\x07\xf3\xfd\xf3\xbf\x5d\x42\x58\x22\x5c\xd2\xbe\xd4\x70\xe9\xaa\
\xa5\x7d\xcb\xbc\x97\xed\x5d\x8e\x2c\x4f\x5a\xde\xbe\xc2\x78\x45\
\xe1\x8a\x81\x95\x01\x2b\x0f\xac\xa2\xad\x4a\x5f\xf5\x53\x81\x7d\
\x41\x79\xc1\xeb\xd5\x31\xab\xdb\x0a\xf5\x0a\x57\x16\xf6\xaf\x09\
\x58\xd3\x50\xa4\x52\x24\x2f\xba\xb3\xd6\x7d\xed\xee\x75\x84\x75\
\x92\x75\xdd\xeb\xa7\xaf\xdf\xbe\xfe\x73\xb1\xa8\xf8\x72\x89\x7d\
\x49\x45\xc9\xc7\x52\x61\xe9\xe5\x6f\x1c\xbe\xa9\xfc\x66\x62\x43\
\xf2\x86\xee\x32\xe7\xb2\x5d\x1b\x49\x1b\xa5\x1b\x6f\x6f\xf2\xdc\
\x74\xa0\x5c\xbd\x3c\xbf\xbc\x7f\x73\xc8\xe6\xe6\x2d\xf8\x96\xe2\
\x2d\xaf\xb7\x2e\xdc\x7a\xa9\x62\x46\xc5\xee\x6d\xb4\x6d\xca\x6d\
\xbd\x95\xc1\x95\xad\xdb\x4d\xb6\x6f\xdc\xfe\xb1\x2a\xb5\xea\x56\
\xb5\x4f\x75\xd3\x0e\xdd\x1d\xeb\x77\xbc\xdd\x29\xda\x79\x7d\x97\
\xd7\xae\xc6\xdd\x7a\xbb\x4b\x76\x7f\xd8\x23\xd9\x73\x77\x6f\xc0\
\xde\xe6\x1a\xb3\x9a\x8a\x7d\xa4\x7d\x39\xfb\x9e\xd6\x46\xd7\x76\
\x7e\xcb\xfd\xb6\xbe\x4e\xa7\xae\xa4\xee\xd3\x7e\xe9\xfe\xde\x03\
\x11\x07\x3a\xea\x5d\xea\xeb\x0f\xea\x1e\x2c\x6b\x40\x1b\x94\x0d\
\xc3\x87\x12\x0e\x5d\xfb\xce\xf7\xbb\xd6\x46\x9b\xc6\xbd\x4d\x9c\
\xa6\x92\xc3\x70\x58\x79\xf8\xd9\xf7\x89\xdf\xdf\x3e\x12\x74\xa4\
\xfd\x28\xf7\x68\xe3\x0f\xa6\x3f\xec\x38\xc6\x3a\x56\xdc\x8c\x34\
\x2f\x6e\x1e\x6d\x49\x6d\xe9\x6d\x8d\x6b\xed\x39\x3e\xfb\x78\x7b\
\x9b\x7b\xdb\xb1\x1f\x6d\x7f\xdc\x7f\xc2\xf0\x44\xf5\x49\xcd\x93\
\x65\xa7\x68\xa7\x0a\x4f\x4d\x9c\xce\x3f\x3d\x76\x46\x76\x66\xe4\
\x6c\xca\xd9\xfe\xf6\x85\xed\x0f\xce\xc5\x9e\xbb\xd9\x11\xde\xd1\
\x7d\x3e\xe8\xfc\xc5\x0b\xfe\x17\xce\x75\x7a\x77\x9e\xbe\xe8\x71\
\xf1\xc4\x25\xb7\x4b\xc7\x2f\x73\x2f\xb7\x5c\x71\xbe\xd2\xdc\xe5\
\xd4\x75\xec\x27\xa7\x9f\x8e\x75\x3b\x77\x37\x5f\x75\xb9\xda\x7a\
\xcd\xf5\x5a\x5b\xcf\xcc\x9e\x53\xd7\x3d\xaf\x9f\xbd\xe1\x7b\xe3\
\xc2\x4d\xfe\xcd\x2b\xb7\xe6\xdc\xea\xb9\x3d\xf7\xf6\xdd\x3b\x09\
\x77\x7a\xef\x8a\xee\x0e\xdd\xcb\xb8\xf7\xf2\x7e\xce\xfd\xf1\x07\
\x2b\x1f\x12\x1f\x16\x3f\x52\x7b\x54\xf1\x58\xf7\x71\xcd\xcf\x96\
\x3f\x37\xf5\x3a\xf7\x9e\xec\xf3\xed\xeb\x7a\x12\xf9\xe4\x41\xbf\
\xb0\xff\xf9\x3f\xb2\xff\xf1\x71\xa0\xf0\x29\xf3\x69\xc5\xa0\xc1\
\x60\xfd\x90\xe3\xd0\x89\x61\xff\xe1\x6b\xcf\xe6\x3d\x1b\x78\x2e\
\x7b\x3e\x3e\x52\xf4\x8b\xfa\x2f\x3b\x5e\x58\xbc\xf8\xe1\x57\xaf\
\x5f\xbb\x46\x63\x47\x07\x5e\xca\x5f\x4e\xfc\x56\xfa\x4a\xfb\xd5\
\xfe\xd7\x33\x5e\xb7\x8f\x85\x8d\x3d\x7e\x93\xf9\x66\xfc\x6d\xf1\
\x3b\xed\x77\x07\xde\x73\xdf\x77\x7e\x88\xf9\x30\x38\x9e\xfb\x91\
\xfc\xb1\xf2\x93\xe5\xa7\xb6\xcf\x41\x9f\x1f\x4e\x64\x4e\x4c\xfc\
\x13\x03\x98\xf3\xfc\x25\x63\x33\xa2\x00\x00\x00\x20\x63\x48\x52\
\x4d\x00\x00\x7a\x25\x00\x00\x80\x83\x00\x00\xf9\xff\x00\x00\x80\
\xe9\x00\x00\x75\x30\x00\x00\xea\x60\x00\x00\x3a\x98\x00\x00\x17\
\x6f\x92\x5f\xc5\x46\x00\x00\x00\x06\x62\x4b\x47\x44\x00\xfe\x00\
\xfe\x00\xfe\xeb\x18\xd4\x82\x00\x00\x00\x09\x70\x48\x59\x73\x00\
\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x09\
\x76\x70\x41\x67\x00\x00\x00\x20\x00\x00\x00\x20\x00\x87\xfa\x9c\
\x9d\x00\x00\x08\xa7\x49\x44\x41\x54\x58\xc3\xad\x97\x6b\x8c\x55\
\xd5\x15\xc7\xff\x7b\xef\xf3\xba\xe7\xde\x73\xef\x9d\x3b\x33\xf7\
\x35\x33\x30\x2f\x84\x41\xa1\xa5\x08\xc5\x44\x10\xad\x8a\xa9\x35\
\xf4\xf1\x41\x48\x49\x53\x1b\xad\x0d\x56\x2d\x36\xb5\x69\xda\xd8\
\x87\xf4\x4b\xdb\x98\xa6\x1a\x13\xb5\xad\x52\x21\xc4\x4a\x7d\xc4\
\xa6\xd8\x82\x2f\xc2\xa0\xbc\x05\xc4\x81\x81\x41\x81\x19\xb8\xf3\
\xbe\xf7\x9e\x73\xee\x79\xef\xdd\x0f\x68\x75\x3a\xbc\xc6\x76\x7d\
\xdc\x67\xaf\xb5\x7e\xf9\xaf\xb5\xd7\x3e\x9b\xe0\x32\xad\x73\xf6\
\x5c\x10\x4a\x59\x18\xf8\xcd\x61\x10\x74\xf2\x28\xca\x4a\xb2\x9c\
\x60\xb2\xa4\x42\xc0\xe6\x9c\xf7\x88\x28\x3a\x24\x84\xb0\xb5\x44\
\x12\xbd\x07\xf7\x5e\x56\x5c\x72\xa9\x0d\x2d\x1d\x33\xe0\x7a\x2e\
\x31\x12\xc9\x39\x82\x8b\x3b\xa3\x30\xbc\x25\x0c\x83\x2c\x0f\xc3\
\x71\xc2\x98\xc4\x18\xcb\x53\x4a\x69\x14\x45\x63\x3c\x8a\xba\x65\
\x49\x7e\xcc\x48\x18\x6f\x7a\xbe\x1f\x1e\xef\x3d\x7c\x49\x00\x76\
\xb1\x8f\xd3\x3a\x67\x82\x87\xa1\x94\x48\xa6\xbe\x45\x08\x7d\x02\
\x9c\xdf\xcc\x39\x3f\x2d\x38\xff\x0d\xa5\x74\x2d\x65\x6c\xbd\x10\
\xfc\x7d\x10\x34\x11\x90\x76\x02\x32\x4b\x8b\xc5\x6e\x93\x14\x15\
\x46\x5d\xdd\xbe\x5c\xb1\x25\x28\xf5\x9f\xfa\x6c\x00\xb9\xa6\x16\
\x9c\x39\x79\x82\x64\x8b\xcd\x77\xca\xb2\xf2\x08\xa3\xac\x81\x10\
\xfa\xb4\x10\xfc\xee\x44\x2a\xf5\xba\x67\xd7\x46\x1c\xd7\x19\xd1\
\x62\xfa\x1e\xdf\xf3\x37\x4b\xb2\x94\x92\x15\x65\xae\xa6\x27\xe2\
\xba\x91\x5c\x4c\x18\x65\x8e\xef\x6f\xcf\xb5\x4c\x8f\x86\x06\x4e\
\x4d\x0d\x40\x51\x35\xd4\xe7\x0a\x88\x1b\xc9\x1b\x18\x93\x1e\x23\
\x84\xd4\x0b\x21\x9e\x91\x15\xf9\x01\xc6\xa4\xe1\x9e\x03\x7b\x61\
\x56\xcb\x70\x6c\x0b\x95\xf1\x51\xc4\xe2\xf1\xaa\x63\xdb\x6f\x48\
\x8a\x52\xa7\xa8\xca\xbc\x8e\xce\x0e\x39\x57\xc8\xb5\xb6\x77\xb4\
\xbf\xaa\x6b\xea\xf0\xad\x2b\x56\x62\xc7\xeb\x5b\x2f\x1f\x20\xdd\
\xd0\x88\x9a\x6d\xd6\x69\xb1\xd8\xa3\x8a\xaa\xcd\x21\xc0\xce\x28\
\x0c\x57\x47\x3c\x1a\xee\x7d\xef\xdd\x49\xfb\x6b\x96\x89\x44\x32\
\xe5\x0f\xf6\x9f\xea\x5e\xfe\xf5\x6f\x58\x4b\x6f\xb8\x7e\x49\x26\
\x9b\x4d\xeb\x86\x31\xb7\xa5\xb5\xed\x9d\x98\xa6\x8d\x5c\x7d\xfd\
\x75\xe8\xde\xb2\x65\x92\xaf\x34\x69\x85\x10\xe8\x86\x01\xdb\x34\
\x97\x4b\x92\x7c\x9d\xac\x28\x8e\xe0\xfc\x77\xb2\xa2\xf4\x07\x41\
\x70\x41\x29\x47\x07\xcf\x62\xd3\x3f\x5e\xad\xc8\xb2\xfc\xdc\xa9\
\xd3\xfd\xab\x28\x21\xb3\x99\x10\x5f\x34\x62\xda\x8f\x17\x2d\x5c\
\x70\x77\xff\xc0\x80\x77\x3e\x3f\xfa\xdf\x0b\x2d\xd3\xa6\x21\x30\
\x2b\x52\x2a\x95\xbc\xd5\x48\x1a\x92\x24\x49\x2f\x71\x21\x36\x83\
\x10\xf4\x1e\xda\x7f\xd1\x86\x5a\x38\x77\x2e\x76\xed\xdf\x7f\xa2\
\xa5\xa9\xf0\x87\x6c\x7d\x26\x4a\x1b\x89\x23\x6e\xcd\x5e\x1c\x05\
\xfe\xd2\xfa\x74\x1a\xdd\x7b\xf7\x5d\x5a\x81\x1f\x3d\xf4\x0b\xc8\
\x92\x34\x2b\xf0\xfd\x79\x65\xd3\x74\xaa\xa6\xf5\xa7\x78\x22\x61\
\xff\xf1\xf1\x47\x71\x29\x9b\xd6\x5c\xc4\xfb\xbd\xc7\x20\xcb\xf2\
\x0b\x47\xfb\xfa\xee\x6c\x2e\xe4\x9b\xde\x3f\x72\xf4\x0c\x25\x64\
\xd5\xb5\x0b\xe6\xbf\xd6\x5f\x2a\x85\x17\x55\x60\xf7\xbe\x03\x70\
\xa3\x08\x94\xb1\xaf\x45\x84\x76\x48\xaa\x76\xcc\x48\xd7\x1d\xa6\
\x92\x84\x81\xbe\xbe\x4b\x02\x00\x40\x67\x5b\x2b\x36\xbf\xf9\xd6\
\x70\xb6\xa1\xe1\x6f\x71\x5d\xcf\xb6\xb7\xb5\x55\x7d\x3f\x58\x08\
\xa0\xbd\x2e\x95\xba\x78\x09\x4a\xc3\x83\xe8\xc8\xe7\xf5\x4c\x3a\
\xbd\xc8\x36\xab\xa7\x64\x4a\xba\x1f\xba\x6f\x75\x29\x65\x18\x97\
\x95\x1c\x00\x14\x59\xc6\x6d\x37\x7e\x09\x0d\x99\xcc\x6b\x94\x52\
\xab\xad\xa5\xd9\xa8\x5a\x96\x5c\xae\x54\x17\x0a\xce\x2f\x0e\x20\
\x00\xc4\xe2\x7a\x2e\x65\x18\xc5\x44\x22\x61\x17\xf3\xf9\xfd\x1b\
\x5f\x7e\x05\x2d\x85\xdc\x65\x03\x00\x80\xaa\xc8\x48\x25\x8d\xe3\
\x12\x63\x7d\x7a\x2c\xd6\x58\x35\x2d\x73\x60\xb0\xf4\x85\xed\xbb\
\xf7\xa2\xbf\x54\xba\x70\x0f\xe8\xba\x0e\x89\xb1\xa2\x24\xcb\xb1\
\x62\xa1\x20\x3a\xa7\x4f\x3f\x49\x19\xc5\xe7\x67\x77\x4d\x09\xc0\
\x71\x3d\x14\xb2\xd9\xca\xe0\xf0\xc8\x51\xab\x56\xfb\x32\x93\xd8\
\x00\x40\x3a\x6e\x59\xba\x44\x1e\x1e\x1d\x0d\x2e\x08\x90\x4c\x24\
\x20\x84\xa8\x57\x55\x95\x34\x66\x32\xd1\x8c\xf6\xd6\xb1\x28\x8a\
\xa6\x94\x1c\x00\xca\xa6\x89\xa1\x91\x51\x2e\x4b\xd2\x07\x7e\x10\
\xc4\x28\x10\x98\x96\xd5\x18\x71\x1e\xf3\xfc\x89\x67\x79\x42\x09\
\x12\xf1\x38\x54\x55\x8d\x6b\xaa\x0a\xc6\x28\xd7\x14\xc5\x93\x98\
\x34\xb5\xec\x00\xe6\x5f\x75\x25\x22\x1e\x21\x08\xc3\x21\xcf\xf7\
\x99\xe7\xba\xa2\x5c\x2e\xeb\xa6\x6d\x6b\x8e\xeb\x5e\xb8\x04\x8e\
\xe7\x21\x08\x02\x02\x08\x51\xb3\x6d\xf8\x41\x40\x82\x30\x98\x52\
\xf2\x8f\xad\x6a\xd9\xb0\xec\x9a\x15\x84\x01\x6c\xdb\x92\x08\x01\
\x75\x3d\x9f\xba\xde\xc4\x79\x34\x41\x81\xb1\x72\x05\xe5\xaa\xe9\
\xdb\x76\x4d\x71\x6a\x35\xbd\x5c\x35\x53\x61\x18\xe2\xc5\xcd\xff\
\x9c\x32\x80\x65\xdb\xb0\x6c\x5b\xd4\x1c\x97\xa6\x53\xa9\xb6\xb8\
\x1e\x8f\x9d\x3c\xdd\x9f\xa9\x9a\x16\xde\xd9\xfb\xc9\x40\x9b\xa0\
\x40\xd5\xb2\xc0\x39\xb7\xea\x52\xc9\x7c\x47\x7b\x7b\xac\x34\x34\
\x7c\x97\x69\xdb\xbb\x9a\x0a\x79\x6f\xaa\x00\x35\xc7\x41\xd5\xb6\
\xe3\x10\x82\xe4\xf2\xf9\x26\x4a\x28\x84\x10\x3f\xcc\xe7\x1a\xbe\
\x6b\xdb\x4e\x34\x09\xe0\xe4\xc0\x00\x34\x55\xab\x3f\x7d\xe6\xcc\
\x52\x3f\x08\x6a\xa3\x95\xca\x68\x10\x86\xdb\xef\x58\xb9\x22\x3e\
\xd0\xdf\xaf\x03\x28\xe3\xdc\x49\xbd\xa4\x75\xef\xd9\x07\x00\x0d\
\x69\xc3\x58\x16\x04\x01\xa2\x88\xa3\x6c\x9b\xe3\x42\x88\x6d\xd7\
\xcc\x9f\x17\xbd\xf1\xf6\x3b\xff\xd9\x4b\x00\xa0\xe7\x78\x1f\xd6\
\xbf\xf8\x22\x96\x5d\xb7\x64\x75\x10\x84\x67\xfb\x3e\xf8\x70\x68\
\xe7\xdb\x6f\x3f\xb8\x73\x47\x77\xea\x58\x4f\x8f\x46\x08\x91\x38\
\xe7\xaf\x73\xce\x1f\x21\x04\xa5\xc0\xf7\xcf\x9b\x38\xae\xa9\x50\
\x65\x19\x63\xa6\xa5\x6d\x78\x7e\x53\xd7\xac\xae\xae\x75\x83\xc3\
\x23\x99\x33\xa5\xc1\x26\xc6\xd8\x70\x7d\x5d\xfa\x26\xce\xf9\x81\
\xaf\x2e\xbb\x69\x62\x09\xfc\x20\x80\xaa\x28\x18\xaf\x54\xd9\xce\
\xdd\xbb\xe3\xcf\x3c\xf9\xd4\x77\xac\x4a\xf9\x26\x1e\x45\x31\x26\
\x49\x20\x20\x60\x12\xe6\x73\xce\xe3\x81\xef\xad\x51\x54\xcd\xf7\
\xbd\x73\xdd\xfc\xd3\x35\xf7\xe2\xf7\x4f\xfd\x19\x9a\xa2\xc4\x1c\
\xcf\xbf\x2d\x92\xe4\x6b\x53\x99\xcc\x9c\x35\xf7\xdd\x5f\xbb\xa2\
\x6b\xd6\xab\x2b\xbf\xb9\x6a\x74\xce\x55\x57\xfd\x52\x62\x4c\x19\
\x2d\x97\x8b\xcb\x6f\xbe\xf1\xc0\x23\x4f\x3d\x8d\x07\xee\xba\xe3\
\x13\x05\x00\xe0\xc9\xf5\x1b\xa0\xaa\xea\xfc\x4d\xcf\x6f\xda\xb0\
\x6b\x47\xf7\x15\xbe\xe3\x90\x20\x08\x20\x49\x12\x38\xe7\xe0\x9c\
\x83\x32\x76\x36\xf4\xfd\x1b\x40\x70\xa4\x66\x59\x00\xce\x0d\xaf\
\x88\xf3\x4e\x55\x8b\x3d\x1c\x8b\x27\x96\xd7\xe7\x0b\x31\x4a\x29\
\x46\x87\x4a\x28\x16\x0a\xe1\x3d\xf7\xde\x3b\xce\x09\xd5\x05\x70\
\x50\x92\xe5\xa4\xeb\x7a\xab\x09\x21\xdb\xbe\xb7\x6a\xe5\xc4\x1e\
\x58\xf7\xec\x06\x10\x42\xc6\x46\x07\x07\x63\x04\x84\x10\xca\xa0\
\xc5\x24\x18\xe9\x34\x3c\xc7\x81\x65\x9a\x90\x65\xd9\x10\x42\xd4\
\x7f\x4c\x6d\x18\x06\xa2\x28\x6c\xd0\xf4\xf8\xda\x54\x7d\xc3\xed\
\xb9\x62\x33\x64\x55\xc5\xc0\xc9\x0f\xd0\x98\xc9\x60\xc5\x8a\x95\
\xd2\x5b\xdb\xbb\x1b\x7b\x7a\x7b\xa3\x4c\x2a\x75\xe0\x27\x0f\x3e\
\x78\xcd\xe9\xb3\x67\x17\x03\xd8\x36\xe9\x18\x5a\xd5\x2a\x2a\xe3\
\xe3\xb5\xc0\x73\xcb\xb2\x2c\x43\x51\x14\x44\x51\x04\xcf\x75\x11\
\x06\x01\x24\x49\x86\x24\xc9\x43\x94\xd2\x7e\x4a\x19\x28\x25\x58\
\xb4\xec\x2b\xe0\x20\x3f\x48\xd6\x65\x6e\xcf\x34\x64\x01\x00\x66\
\xa5\x8c\xb6\x19\x33\xb0\xf2\xdb\x77\xe0\xec\xd0\x10\x44\x18\xa0\
\xb3\x75\x3a\xab\x59\xd6\x72\xb3\x5a\xad\xab\x4b\xa5\x06\xd3\x9f\
\xba\xdc\x3e\x01\x28\x8f\xa3\x74\xe2\xf8\xa0\x55\xad\x3c\xc1\x79\
\xe4\x27\x92\x49\x68\x5a\x0c\x8e\x6d\x83\x10\x8a\xb8\x61\x44\x94\
\xd2\x8d\xd5\xf1\xb1\x7e\x01\x01\x10\x8a\x2d\x9b\x36\xea\x8a\x16\
\xbb\x46\x8b\xe9\xe7\x92\x57\xcb\x50\x35\x0d\x0b\xae\x5e\x88\xb8\
\xa6\x61\xc1\xbc\xcf\xc1\xb1\x6d\x54\xc7\xc6\xd0\x35\x6b\x66\x61\
\x68\x68\x90\xe7\x72\xd9\x6d\x71\x5d\x9f\x3c\x07\xfa\x7a\x0e\x23\
\x95\xc9\x40\x58\xc1\x3a\x59\x51\xf2\x94\xb1\x7b\xd2\xf5\xf5\x49\
\x00\x94\x73\x5e\x76\x1d\xe7\x85\x30\x0c\x7f\x9b\x2b\x36\x47\xa5\
\x81\xd3\x20\x84\x00\x40\x8e\x10\xd2\x21\x84\x80\xe7\x3a\x88\xa2\
\x08\xd3\x5b\x5a\x50\xc8\x65\x91\x6b\x6c\xc0\x96\xad\x5b\xb1\x6b\
\xcf\x5e\xf8\x9e\x87\x62\xb1\x08\xdb\x34\x37\xce\x9f\xdd\x75\x6c\
\xf7\xc1\x43\xe7\x1f\x44\x95\xb1\x31\x68\xba\x6e\x7b\xae\xbb\xd6\
\x73\xdd\x97\x84\x10\xd3\xb5\x58\x2c\x1e\x06\xe1\x7b\xae\x6d\xf7\
\xaa\x9a\x56\xeb\xff\xf0\xc4\xa7\x5d\xfc\x28\x0c\x7d\xcf\x71\x00\
\x21\x40\x25\x09\xd3\x9a\x9b\x61\x59\x16\x4a\x8c\xe0\x54\x69\x18\
\x6d\x33\xbb\x30\x3e\x32\x8c\xba\x74\xba\x36\x54\x3a\xfb\xaf\x9f\
\x3d\xf4\x73\xf1\xeb\x87\x7f\x75\x7e\x00\x00\x70\x6b\x35\x00\xf0\
\x3d\xd7\xd9\x67\x55\x2b\x93\x7f\xe2\x3e\x32\x21\x04\x00\xb0\x30\
\x08\xa8\xe7\x3a\x60\x8c\x81\x44\x11\x5e\xdb\xba\x15\x8d\xd9\x2c\
\x16\x2d\xbe\x16\x94\x31\x30\x21\x30\xad\xb5\x15\x89\x54\xea\xe8\
\xe1\x43\x87\x7a\x2c\xcb\x9e\x10\x67\xea\x57\xdd\x44\xeb\x0f\x83\
\xe0\xef\x6e\xad\x76\xbf\x2c\xc9\x90\x14\x05\xc3\xa5\x12\x6c\xd3\
\xc4\x8c\x2b\x67\x23\x9b\xcb\xc1\x71\x1c\x34\x15\xf2\xce\xc8\x78\
\xf9\xf1\x8d\x7f\x59\x37\x98\xc9\x17\x27\x04\x60\x9f\x31\x31\x00\
\x80\x10\x22\x04\xe7\x16\xe7\x7c\x89\x10\x22\xa3\xea\x31\x40\x9c\
\x53\xd1\x32\x4d\xd4\x65\x32\x90\x24\xc9\xaa\x56\x2a\x6b\xf7\xed\
\xd9\xfb\xc4\xb3\xcf\xfd\x35\xea\x3d\xf8\xee\xc4\x18\xff\xa3\x02\
\x1f\x83\xcc\xa3\x8c\x3d\xa9\xc7\x13\xb3\x13\xa9\xb4\x46\x09\x0d\
\x00\x51\xd3\xf4\xf8\x11\x55\xd7\x1f\xad\x9a\xd5\x4d\x12\x63\xc1\
\x87\x3d\x93\x1f\xab\xff\x17\x80\x8f\x6c\x26\x80\x4e\x59\x55\xaf\
\xcc\x36\x35\x9f\xae\xcf\xe6\x4e\x32\x59\x3e\xb6\x74\xcd\xf7\x87\
\x77\x3e\xbd\x1e\x3b\x5e\x79\xf9\xbc\x4e\xff\x06\x99\x1c\x04\x73\
\xad\xe2\x03\xb9\x00\x00\x00\x2e\x7a\x54\x58\x74\x63\x72\x65\x61\
\x74\x65\x2d\x64\x61\x74\x65\x00\x00\x78\xda\x33\x32\x30\xb0\xd0\
\x35\xb0\xd0\x35\x32\x09\x31\x30\xb0\x32\x32\xb3\x32\xb4\xd4\x35\
\x30\xb5\x32\x30\x00\x00\x42\x17\x05\x19\x4c\x0d\x07\x76\x00\x00\
\x00\x2e\x7a\x54\x58\x74\x6d\x6f\x64\x69\x66\x79\x2d\x64\x61\x74\
\x65\x00\x00\x78\xda\x33\x32\x30\xb0\xd0\x35\xb0\xd0\x35\x32\x08\
\x31\x34\xb3\x32\x35\xb1\x32\x30\xd1\x35\x30\xb5\x32\x30\x00\x00\
\x42\x15\x05\x17\xfb\x32\x2b\x8b\x00\x00\x00\x00\x49\x45\x4e\x44\
\xae\x42\x60\x82\
\x00\x00\x07\x56\
\x89\
\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\
\x00\x00\x07\x1d\x49\x44\x41\x54\x58\x85\xe5\x97\x6b\x88\x1d\x67\
\x19\xc7\x7f\xef\x3b\x33\xbb\xe7\x9c\xcd\x5e\xb2\x97\x64\x37\x57\
\xcd\xa5\x6e\x76\x6d\x23\xad\x89\xb1\x8d\xb5\x24\x21\x44\xb1\x50\
\x05\x5b\x0b\x4a\x2c\x22\x96\x8a\xa5\x0a\x62\x05\x83\xa8\x1f\xec\
\x07\x15\xac\x55\xdb\x4a\xf1\x56\xa4\x28\x62\xc5\x4b\x89\x29\x8d\
\xd8\xa4\x94\x34\xad\x9a\xa4\x6c\x48\x6a\x2e\x9b\xdb\x66\x77\xb3\
\x97\xb3\x97\x73\x99\x79\x9f\xc7\x0f\x33\x73\x66\x4e\x92\xef\x7e\
\x70\x60\xce\xcc\x39\x33\xf3\xfc\xff\xcf\xff\xff\xbc\xcf\x3c\x07\
\xfe\xc7\x9b\x49\x4f\x8e\x3d\x8c\xf5\xfd\x60\x85\x6f\x64\xb7\x35\
\x6e\xb3\x35\xf8\xc6\xc4\x77\x58\xc0\x7a\xb9\x87\x4c\xf3\x51\xb5\
\xf9\x08\x20\x0e\x04\x40\xe3\xdf\x45\xcc\x64\x84\xff\x92\x33\xc1\
\xd1\xe1\x27\x17\xa3\x1b\x08\x9c\xfa\x72\xdb\x9d\x2d\x4b\x57\xfe\
\xb0\x75\x60\x70\xc8\x6f\x5f\x5e\x32\xd6\xc6\x17\xcd\x8d\x80\xd7\
\x3f\xac\xcd\x3f\x37\x13\xd2\xf8\xba\xd4\x16\xa3\xfa\xd5\x93\xe3\
\xd5\x2b\x27\x7f\x1a\xd5\xab\x4f\x0e\xfe\x28\x2c\x37\x62\x8c\x7c\
\xa9\xa5\xbf\xd0\xd5\xff\xc7\xa0\x73\xd9\x56\x99\x1b\x43\xca\x97\
\x30\x46\x31\x09\xb8\xb5\x19\x01\x63\xc8\x88\xe5\x09\x24\x40\xaa\
\x19\x01\x91\xdc\xf7\xa0\x0d\x6f\xe9\x3a\x24\xaa\x57\x6b\x33\x63\
\x0f\x6d\xfc\xde\xec\x0b\x10\xab\x8b\xc5\xed\x40\xc2\xa1\xfa\xa5\
\x7f\x13\xcd\x5c\xc4\xa0\xd8\x04\xd8\xda\x18\xd4\xb3\xc9\xee\xc5\
\x76\xa4\xc7\xfc\xb9\xe7\x65\xf7\x99\xdc\xf3\xd6\x00\xf5\x05\xc2\
\xb1\x13\xc8\xfc\x78\xc1\x4a\xf5\xa1\xb7\x1f\x6d\xb5\x00\x7e\x42\
\x60\x93\xcc\x5d\x29\xa4\x40\xd6\xcb\x05\x48\xb3\xb6\x99\x02\x37\
\xb3\xa3\x21\xbb\x89\xcf\x4d\x92\xbd\x68\x5c\x0b\xd6\x00\x4e\x71\
\x95\x69\xc0\x0c\x1a\x5a\x0b\xc0\x62\x4c\xc0\x1a\x6b\x50\xeb\xe5\
\x32\xb6\x16\xc6\xe7\x21\x52\x08\x3c\x28\xb6\x40\x21\x80\x62\x00\
\xbe\x6d\xae\x8d\x46\xf1\x25\x80\xaa\x09\x11\x21\x41\x8f\xed\x48\
\xad\x74\xaa\xd6\xa0\x19\x81\xd4\xd7\x34\xd3\x34\xf3\x15\xf7\x3f\
\x45\xb0\x6a\x0b\xd1\xc2\x14\xf3\x97\x47\x28\x5f\x3c\xc6\xf4\xd8\
\x3f\x29\x54\x2f\xb0\xc4\xcc\x52\x0a\x1c\x5e\x4e\x09\x55\x30\x1a\
\x83\x49\x02\x6c\xc9\x91\x20\xbe\x6e\x34\x23\xdf\x20\x60\x73\x32\
\xa7\xfe\x97\xfa\xd6\xd3\xb6\x6e\x2b\x00\xbd\xb7\xee\x41\xc5\x51\
\xb9\x76\x81\xd9\xb3\x6f\x30\x77\x72\x3f\xe5\xb3\xfb\xe9\x70\x57\
\xe8\x28\x48\x6c\x8b\x6a\x4c\x22\x89\x29\xd2\xc0\x06\x89\x55\x31\
\x16\xbc\x84\x48\x46\x80\x4c\x76\x93\xf3\x9c\x99\xb3\x44\x17\x8e\
\x60\x97\x2c\xc7\x94\x7a\xc0\x6f\xa5\xd8\xbb\x96\x62\xef\x1a\x7a\
\x87\x77\x51\x3e\xff\x20\x93\x87\x9f\xa5\x36\xfa\x17\x7a\x8a\x55\
\xac\x51\x4c\x92\xa2\x95\x9c\x3d\x36\xcb\xda\xda\xd8\xa6\x26\x02\
\x29\xb0\x6a\x52\x2c\xc9\xf7\xfa\xc1\xaf\x11\x05\xad\xd8\x96\x12\
\x5e\xd7\xbb\xb0\xbd\xc3\x04\x83\xf7\x61\x97\x6f\x26\x68\x5b\x46\
\xcf\xd0\x4e\xba\x36\xde\xc5\xd8\xeb\xbf\x61\xec\xf0\xf7\xe9\x71\
\xef\x50\xf0\x5c\x62\xb8\x62\x15\xd4\x66\x76\x18\x89\xc1\x31\x59\
\x63\xf3\xf3\x95\x7c\x7d\xb5\xdb\x68\x0e\x2b\x73\x98\xd0\xa0\x95\
\x4b\xc8\xf8\x1b\xd4\xcf\xfe\x19\x6f\xf5\xdd\x78\x43\xf7\x63\x37\
\xdc\x8b\x17\x14\x18\xf8\xe0\xa7\x99\xee\x59\xc3\xb5\xfd\xdf\xa0\
\x77\xe1\x4d\x5a\x7d\x9b\x91\x48\x6b\x23\x8d\xad\xcd\x1d\xd3\x36\
\x81\xe7\x1a\x8d\x01\xa6\xea\x25\x26\x6b\x6d\xcc\xd6\x02\x6a\x91\
\x45\xc4\x41\x75\x02\x3d\xf3\x22\xd1\x81\x47\x70\x07\xbf\x8a\x4e\
\x9d\xc6\x78\x3e\xdd\x83\x3b\x58\xf9\xc0\xcf\x99\xea\xd8\x46\xcd\
\xf9\x34\x3a\x55\x2e\x5e\x1e\xa3\x99\x40\xba\xb6\x9b\xe4\x00\xef\
\x8e\x47\xb0\x1f\x7e\x82\xca\xad\x8f\x31\xde\xbd\x9b\x8b\xb5\x7e\
\x66\x16\x41\x44\x30\xe1\x2c\xf2\xf6\x73\x44\x07\xbf\x02\x53\xa7\
\x30\xd6\x52\x1a\x78\x0f\x7d\x1f\x7d\x82\x99\xd2\x30\x18\x83\x31\
\xa6\xd1\x35\x73\x61\x49\xdf\x31\x37\x58\x90\x57\x02\xa0\x6f\xd3\
\x3d\x14\x6e\xd9\x83\x44\x75\xc2\xca\x2c\x95\x89\x33\x5c\x3b\xfa\
\x02\x73\xa7\xff\x40\x7f\x71\x96\x62\x8b\x83\xcb\x87\x70\x87\xf6\
\xe1\x6d\xff\x36\x74\x0f\xd2\xfe\xee\x0f\x50\xbf\x67\x1f\xb3\x7f\
\xda\x4b\xa7\x37\x97\x25\x67\x32\xe0\x1b\x2d\x30\xa0\x2e\x57\xb5\
\x29\xcb\xea\x34\x3a\xf5\x1f\xac\xab\x50\xe8\xec\x67\xe9\x86\x3b\
\x59\xf7\xc9\x1f\xd0\xf7\xa9\xdf\x72\xb5\x73\x17\xe5\xaa\x05\x04\
\x1d\x3d\x40\xf8\xf7\xaf\xa3\xe5\x51\xac\xe7\xd3\xbb\xf9\x5e\x74\
\xe8\xb3\x54\x22\x0f\x72\x6b\x5e\x1b\x1f\x99\x28\x1e\xc0\x17\xb7\
\xb0\x53\x1d\xdb\x55\xe3\xd5\x21\xc9\x5b\xcc\x4d\x8c\x10\x9d\x79\
\x19\xb9\x74\x04\xc2\x45\x6c\xc7\x1a\x6c\x4b\x89\x62\xcf\x6a\x8a\
\x6b\xb6\x32\x75\xf9\x3c\x4c\x9d\x22\xc0\xa1\x33\xa3\x88\xb7\x04\
\x7f\xed\xdd\x18\x63\xf1\xda\x57\x30\x7b\xea\x1f\x78\x95\x71\x9c\
\x83\xd0\x81\x0b\x21\x0a\xc1\x39\xca\x75\xe1\xe9\xa7\x5e\xd7\x4a\
\x13\x01\x34\x73\x4b\x01\x2a\x93\xe8\xdc\x45\x64\xf2\x04\xee\xec\
\x01\x64\xf4\x55\x6c\xe7\x5a\x4c\xfb\x0a\x82\xb6\x1e\x0a\x6b\xb6\
\x31\x75\x79\x94\x60\xf6\x24\x9e\x46\x44\xe3\x23\xd8\x95\xdb\xb1\
\x9d\x2b\xf1\x97\xf4\x50\x2d\xcf\x10\x9e\x3f\x8c\x3a\x87\x38\x70\
\x51\x4c\xc2\x29\xe5\x48\xf5\xe9\x9f\x1c\xa1\xd2\x58\x05\x48\x6c\
\x83\x4a\xd2\xc3\xd3\x41\x42\x05\x15\x41\x6a\xf3\x44\xa3\xaf\x52\
\xdb\xff\x18\xee\x9d\x97\x40\x42\x8a\x3d\xab\xe9\xdd\xbd\x8f\x19\
\xb3\x12\xe7\x04\x2a\x13\xd4\xde\x7c\x0e\xad\xcd\x63\xbd\x80\xf6\
\xa1\x8f\x10\x15\xfa\xe3\x58\x69\x7c\x97\xd9\xd0\xa8\x01\x4d\xfa\
\xb7\x0a\xe0\xb2\x1b\x45\xa0\x16\x19\xca\x35\x8f\x6a\x68\x10\x27\
\xb8\xc9\x11\x6a\x07\xf7\x21\x57\x8f\x01\xd0\x36\x30\x48\x71\xdb\
\xa3\x2c\x86\x3e\x2a\x8e\xf0\xdc\x2b\x84\x63\xc7\x51\x55\x4a\xab\
\x6e\x43\xbb\x07\xe3\xd8\x0e\x34\x4a\x8e\xb9\x5e\x60\x53\xbd\xd3\
\xcc\x25\x05\x8f\x60\xc1\x15\x99\xe9\xdf\x43\x7d\xcb\xe3\x4c\xad\
\xfa\x38\xd3\xb2\x14\x17\x39\xdc\xc4\x08\xd5\x57\xbe\x85\xba\x3a\
\xc6\x18\x3a\xdf\xfb\x31\xc2\xee\xdb\x70\x4e\x71\xb3\xa3\x84\x17\
\x8e\x82\x2a\xd6\x0f\x28\x6d\xd8\x49\x18\xe6\xc0\x13\x05\x34\xaf\
\x40\x4a\x22\x65\xda\x60\xbc\x76\x07\xeb\x3f\xf3\x0c\x1b\xef\xfb\
\x26\xeb\x1f\xfc\x31\xde\xf0\x03\x84\xea\x21\xa2\x84\x17\x5e\x23\
\x3c\xff\x1a\x00\x41\xe7\x00\xc1\xda\x0f\x11\x89\x05\x89\xa8\x9c\
\x7e\x19\x24\x04\xa0\x7d\xd3\x2e\x22\x09\xe2\x19\x31\x8d\x7d\xbd\
\x05\xe2\xb2\xf9\xcd\x69\xcc\x56\x1c\xf4\xdd\xf1\x09\x8a\xdd\xab\
\x31\xd6\xa3\xb5\xa3\x8f\xae\x0d\x77\x21\x26\x40\x44\xd1\x5a\x99\
\xca\xf1\xdf\xa3\x12\x61\xfc\x56\x82\x65\xc3\x44\xb6\x88\x88\x50\
\xbb\x7c\x1c\x75\x31\x81\xa0\x63\x00\x0d\xba\x62\xf0\xdc\xac\x28\
\x2e\x5f\x03\xc9\x2e\x89\x15\x92\xa8\x51\x3f\xf6\x22\x32\x37\x16\
\xd7\x68\x65\x16\x39\x77\x08\xea\x35\x5c\x24\x38\xe7\x08\xa7\xce\
\x21\x8b\xd3\x18\x63\xf0\x3b\x56\x20\xb6\x84\x8b\x20\x5a\x28\xa3\
\xb5\x4a\x82\xe0\x63\x8a\xdd\xb1\xc5\xf9\x81\x25\x51\xc0\x4f\x19\
\x69\xd2\x14\x94\xe4\xed\xa5\xb0\x78\xe2\x00\x93\xbf\xda\x4b\xf1\
\x96\x1d\x84\x97\xde\xa2\x76\x6a\x3f\x84\x11\x6a\xc1\x58\x45\x27\
\x4e\x51\x79\xeb\xd7\xd8\xd6\x76\xdc\xb5\x51\xb4\x1e\x22\x75\x50\
\x16\x98\x3f\xf2\x3c\xb6\xd0\x81\xab\x2e\x60\xea\x55\x84\x78\x1e\
\x48\x3b\x61\xa3\xe1\x01\x1c\xff\x3c\xdf\xc1\xf1\xb8\x55\xfc\xb4\
\x4d\xe7\x87\x52\x6b\xc1\xe4\xe6\x44\x63\x69\xbc\xb2\xd3\xc1\x83\
\xb4\x88\xd3\x49\x38\x39\x4f\xa5\xd7\x84\x80\xc4\x99\x8e\xd6\x0c\
\x9b\x6f\x7f\x86\x19\x9f\x58\xfa\x6b\x06\x22\x21\x21\x90\x7a\x92\
\xf3\xcc\x92\xcd\x0c\x46\xb8\x71\x26\xd4\x0c\x38\xf5\x38\x5d\xde\
\x69\xf6\x0a\x88\x01\x94\x19\x60\x3e\x2b\x42\xf8\x9b\xc2\x45\x25\
\xb9\x59\xb3\x3a\x70\x51\xf3\x2e\x49\x37\x4b\x8f\xf9\x73\x89\x6e\
\x72\xbf\xe4\x6a\x2b\xd6\x3c\x12\xf8\xe5\xed\xcf\x12\x35\x2c\x00\
\xf8\xd7\xe7\x78\xd8\xc2\x77\x81\x2e\x4b\x22\xbd\x07\x36\x00\xaf\
\x25\xde\xad\x9f\xc8\x9f\xff\x83\x92\x8a\x95\xaa\x20\x31\x11\xa9\
\x43\x54\x8b\x57\x63\x83\x04\x44\x6a\xf8\xab\xc0\x17\xde\xf7\x33\
\xc6\x1a\x45\x48\x2c\xd1\x2f\x04\x46\x0d\xec\x55\x78\xbf\x1a\xac\
\x24\x72\xbb\x7a\xd2\x40\xae\xfb\x6f\x70\xfd\xd6\x28\xae\xd4\xfb\
\xbc\xfc\xca\xb8\x83\xdf\x01\xcf\x0b\x8c\xdf\x3c\xc2\xff\xe3\xf6\
\x5f\xc9\xdb\xfa\x22\x2b\x3b\x0c\xa7\x00\x00\x00\x00\x49\x45\x4e\
\x44\xae\x42\x60\x82\
\x00\x00\x11\x7b\
\x89\
\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
\x00\x00\x20\x00\x00\x00\x20\x08\x06\x00\x00\x00\x73\x7a\x7a\xf4\
\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\
\x01\x00\x9a\x9c\x18\x00\x00\x0a\x4f\x69\x43\x43\x50\x50\x68\x6f\
\x74\x6f\x73\x68\x6f\x70\x20\x49\x43\x43\x20\x70\x72\x6f\x66\x69\
\x6c\x65\x00\x00\x78\xda\x9d\x53\x67\x54\x53\xe9\x16\x3d\xf7\xde\
\xf4\x42\x4b\x88\x80\x94\x4b\x6f\x52\x15\x08\x20\x52\x42\x8b\x80\
\x14\x91\x26\x2a\x21\x09\x10\x4a\x88\x21\xa1\xd9\x15\x51\xc1\x11\
\x45\x45\x04\x1b\xc8\xa0\x88\x03\x8e\x8e\x80\x8c\x15\x51\x2c\x0c\
\x8a\x0a\xd8\x07\xe4\x21\xa2\x8e\x83\xa3\x88\x8a\xca\xfb\xe1\x7b\
\xa3\x6b\xd6\xbc\xf7\xe6\xcd\xfe\xb5\xd7\x3e\xe7\xac\xf3\x9d\xb3\
\xcf\x07\xc0\x08\x0c\x96\x48\x33\x51\x35\x80\x0c\xa9\x42\x1e\x11\
\xe0\x83\xc7\xc4\xc6\xe1\xe4\x2e\x40\x81\x0a\x24\x70\x00\x10\x08\
\xb3\x64\x21\x73\xfd\x23\x01\x00\xf8\x7e\x3c\x3c\x2b\x22\xc0\x07\
\xbe\x00\x01\x78\xd3\x0b\x08\x00\xc0\x4d\x9b\xc0\x30\x1c\x87\xff\
\x0f\xea\x42\x99\x5c\x01\x80\x84\x01\xc0\x74\x91\x38\x4b\x08\x80\
\x14\x00\x40\x7a\x8e\x42\xa6\x00\x40\x46\x01\x80\x9d\x98\x26\x53\
\x00\xa0\x04\x00\x60\xcb\x63\x62\xe3\x00\x50\x2d\x00\x60\x27\x7f\
\xe6\xd3\x00\x80\x9d\xf8\x99\x7b\x01\x00\x5b\x94\x21\x15\x01\xa0\
\x91\x00\x20\x13\x65\x88\x44\x00\x68\x3b\x00\xac\xcf\x56\x8a\x45\
\x00\x58\x30\x00\x14\x66\x4b\xc4\x39\x00\xd8\x2d\x00\x30\x49\x57\
\x66\x48\x00\xb0\xb7\x00\xc0\xce\x10\x0b\xb2\x00\x08\x0c\x00\x30\
\x51\x88\x85\x29\x00\x04\x7b\x00\x60\xc8\x23\x23\x78\x00\x84\x99\
\x00\x14\x46\xf2\x57\x3c\xf1\x2b\xae\x10\xe7\x2a\x00\x00\x78\x99\
\xb2\x3c\xb9\x24\x39\x45\x81\x5b\x08\x2d\x71\x07\x57\x57\x2e\x1e\
\x28\xce\x49\x17\x2b\x14\x36\x61\x02\x61\x9a\x40\x2e\xc2\x79\x99\
\x19\x32\x81\x34\x0f\xe0\xf3\xcc\x00\x00\xa0\x91\x15\x11\xe0\x83\
\xf3\xfd\x78\xce\x0e\xae\xce\xce\x36\x8e\xb6\x0e\x5f\x2d\xea\xbf\
\x06\xff\x22\x62\x62\xe3\xfe\xe5\xcf\xab\x70\x40\x00\x00\xe1\x74\
\x7e\xd1\xfe\x2c\x2f\xb3\x1a\x80\x3b\x06\x80\x6d\xfe\xa2\x25\xee\
\x04\x68\x5e\x0b\xa0\x75\xf7\x8b\x66\xb2\x0f\x40\xb5\x00\xa0\xe9\
\xda\x57\xf3\x70\xf8\x7e\x3c\x3c\x45\xa1\x90\xb9\xd9\xd9\xe5\xe4\
\xe4\xd8\x4a\xc4\x42\x5b\x61\xca\x57\x7d\xfe\x67\xc2\x5f\xc0\x57\
\xfd\x6c\xf9\x7e\x3c\xfc\xf7\xf5\xe0\xbe\xe2\x24\x81\x32\x5d\x81\
\x47\x04\xf8\xe0\xc2\xcc\xf4\x4c\xa5\x1c\xcf\x92\x09\x84\x62\xdc\
\xe6\x8f\x47\xfc\xb7\x0b\xff\xfc\x1d\xd3\x22\xc4\x49\x62\xb9\x58\
\x2a\x14\xe3\x51\x12\x71\x8e\x44\x9a\x8c\xf3\x32\xa5\x22\x89\x42\
\x92\x29\xc5\x25\xd2\xff\x64\xe2\xdf\x2c\xfb\x03\x3e\xdf\x35\x00\
\xb0\x6a\x3e\x01\x7b\x91\x2d\xa8\x5d\x63\x03\xf6\x4b\x27\x10\x58\
\x74\xc0\xe2\xf7\x00\x00\xf2\xbb\x6f\xc1\xd4\x28\x08\x03\x80\x68\
\x83\xe1\xcf\x77\xff\xef\x3f\xfd\x47\xa0\x25\x00\x80\x66\x49\x92\
\x71\x00\x00\x5e\x44\x24\x2e\x54\xca\xb3\x3f\xc7\x08\x00\x00\x44\
\xa0\x81\x2a\xb0\x41\x1b\xf4\xc1\x18\x2c\xc0\x06\x1c\xc1\x05\xdc\
\xc1\x0b\xfc\x60\x36\x84\x42\x24\xc4\xc2\x42\x10\x42\x0a\x64\x80\
\x1c\x72\x60\x29\xac\x82\x42\x28\x86\xcd\xb0\x1d\x2a\x60\x2f\xd4\
\x40\x1d\x34\xc0\x51\x68\x86\x93\x70\x0e\x2e\xc2\x55\xb8\x0e\x3d\
\x70\x0f\xfa\x61\x08\x9e\xc1\x28\xbc\x81\x09\x04\x41\xc8\x08\x13\
\x61\x21\xda\x88\x01\x62\x8a\x58\x23\x8e\x08\x17\x99\x85\xf8\x21\
\xc1\x48\x04\x12\x8b\x24\x20\xc9\x88\x14\x51\x22\x4b\x91\x35\x48\
\x31\x52\x8a\x54\x20\x55\x48\x1d\xf2\x3d\x72\x02\x39\x87\x5c\x46\
\xba\x91\x3b\xc8\x00\x32\x82\xfc\x86\xbc\x47\x31\x94\x81\xb2\x51\
\x3d\xd4\x0c\xb5\x43\xb9\xa8\x37\x1a\x84\x46\xa2\x0b\xd0\x64\x74\
\x31\x9a\x8f\x16\xa0\x9b\xd0\x72\xb4\x1a\x3d\x8c\x36\xa1\xe7\xd0\
\xab\x68\x0f\xda\x8f\x3e\x43\xc7\x30\xc0\xe8\x18\x07\x33\xc4\x6c\
\x30\x2e\xc6\xc3\x42\xb1\x38\x2c\x09\x93\x63\xcb\xb1\x22\xac\x0c\
\xab\xc6\x1a\xb0\x56\xac\x03\xbb\x89\xf5\x63\xcf\xb1\x77\x04\x12\
\x81\x45\xc0\x09\x36\x04\x77\x42\x20\x61\x1e\x41\x48\x58\x4c\x58\
\x4e\xd8\x48\xa8\x20\x1c\x24\x34\x11\xda\x09\x37\x09\x03\x84\x51\
\xc2\x27\x22\x93\xa8\x4b\xb4\x26\xba\x11\xf9\xc4\x18\x62\x32\x31\
\x87\x58\x48\x2c\x23\xd6\x12\x8f\x13\x2f\x10\x7b\x88\x43\xc4\x37\
\x24\x12\x89\x43\x32\x27\xb9\x90\x02\x49\xb1\xa4\x54\xd2\x12\xd2\
\x46\xd2\x6e\x52\x23\xe9\x2c\xa9\x9b\x34\x48\x1a\x23\x93\xc9\xda\
\x64\x6b\xb2\x07\x39\x94\x2c\x20\x2b\xc8\x85\xe4\x9d\xe4\xc3\xe4\
\x33\xe4\x1b\xe4\x21\xf2\x5b\x0a\x9d\x62\x40\x71\xa4\xf8\x53\xe2\
\x28\x52\xca\x6a\x4a\x19\xe5\x10\xe5\x34\xe5\x06\x65\x98\x32\x41\
\x55\xa3\x9a\x52\xdd\xa8\xa1\x54\x11\x35\x8f\x5a\x42\xad\xa1\xb6\
\x52\xaf\x51\x87\xa8\x13\x34\x75\x9a\x39\xcd\x83\x16\x49\x4b\xa5\
\xad\xa2\x95\xd3\x1a\x68\x17\x68\xf7\x69\xaf\xe8\x74\xba\x11\xdd\
\x95\x1e\x4e\x97\xd0\x57\xd2\xcb\xe9\x47\xe8\x97\xe8\x03\xf4\x77\
\x0c\x0d\x86\x15\x83\xc7\x88\x67\x28\x19\x9b\x18\x07\x18\x67\x19\
\x77\x18\xaf\x98\x4c\xa6\x19\xd3\x8b\x19\xc7\x54\x30\x37\x31\xeb\
\x98\xe7\x99\x0f\x99\x6f\x55\x58\x2a\xb6\x2a\x7c\x15\x91\xca\x0a\
\x95\x4a\x95\x26\x95\x1b\x2a\x2f\x54\xa9\xaa\xa6\xaa\xde\xaa\x0b\
\x55\xf3\x55\xcb\x54\x8f\xa9\x5e\x53\x7d\xae\x46\x55\x33\x53\xe3\
\xa9\x09\xd4\x96\xab\x55\xaa\x9d\x50\xeb\x53\x1b\x53\x67\xa9\x3b\
\xa8\x87\xaa\x67\xa8\x6f\x54\x3f\xa4\x7e\x59\xfd\x89\x06\x59\xc3\
\x4c\xc3\x4f\x43\xa4\x51\xa0\xb1\x5f\xe3\xbc\xc6\x20\x0b\x63\x19\
\xb3\x78\x2c\x21\x6b\x0d\xab\x86\x75\x81\x35\xc4\x26\xb1\xcd\xd9\
\x7c\x76\x2a\xbb\x98\xfd\x1d\xbb\x8b\x3d\xaa\xa9\xa1\x39\x43\x33\
\x4a\x33\x57\xb3\x52\xf3\x94\x66\x3f\x07\xe3\x98\x71\xf8\x9c\x74\
\x4e\x09\xe7\x28\xa7\x97\xf3\x7e\x8a\xde\x14\xef\x29\xe2\x29\x1b\
\xa6\x34\x4c\xb9\x31\x65\x5c\x6b\xaa\x96\x97\x96\x58\xab\x48\xab\
\x51\xab\x47\xeb\xbd\x36\xae\xed\xa7\x9d\xa6\xbd\x45\xbb\x59\xfb\
\x81\x0e\x41\xc7\x4a\x27\x5c\x27\x47\x67\x8f\xce\x05\x9d\xe7\x53\
\xd9\x53\xdd\xa7\x0a\xa7\x16\x4d\x3d\x3a\xf5\xae\x2e\xaa\x6b\xa5\
\x1b\xa1\xbb\x44\x77\xbf\x6e\xa7\xee\x98\x9e\xbe\x5e\x80\x9e\x4c\
\x6f\xa7\xde\x79\xbd\xe7\xfa\x1c\x7d\x2f\xfd\x54\xfd\x6d\xfa\xa7\
\xf5\x47\x0c\x58\x06\xb3\x0c\x24\x06\xdb\x0c\xce\x18\x3c\xc5\x35\
\x71\x6f\x3c\x1d\x2f\xc7\xdb\xf1\x51\x43\x5d\xc3\x40\x43\xa5\x61\
\x95\x61\x97\xe1\x84\x91\xb9\xd1\x3c\xa3\xd5\x46\x8d\x46\x0f\x8c\
\x69\xc6\x5c\xe3\x24\xe3\x6d\xc6\x6d\xc6\xa3\x26\x06\x26\x21\x26\
\x4b\x4d\xea\x4d\xee\x9a\x52\x4d\xb9\xa6\x29\xa6\x3b\x4c\x3b\x4c\
\xc7\xcd\xcc\xcd\xa2\xcd\xd6\x99\x35\x9b\x3d\x31\xd7\x32\xe7\x9b\
\xe7\x9b\xd7\x9b\xdf\xb7\x60\x5a\x78\x5a\x2c\xb6\xa8\xb6\xb8\x65\
\x49\xb2\xe4\x5a\xa6\x59\xee\xb6\xbc\x6e\x85\x5a\x39\x59\xa5\x58\
\x55\x5a\x5d\xb3\x46\xad\x9d\xad\x25\xd6\xbb\xad\xbb\xa7\x11\xa7\
\xb9\x4e\x93\x4e\xab\x9e\xd6\x67\xc3\xb0\xf1\xb6\xc9\xb6\xa9\xb7\
\x19\xb0\xe5\xd8\x06\xdb\xae\xb6\x6d\xb6\x7d\x61\x67\x62\x17\x67\
\xb7\xc5\xae\xc3\xee\x93\xbd\x93\x7d\xba\x7d\x8d\xfd\x3d\x07\x0d\
\x87\xd9\x0e\xab\x1d\x5a\x1d\x7e\x73\xb4\x72\x14\x3a\x56\x3a\xde\
\x9a\xce\x9c\xee\x3f\x7d\xc5\xf4\x96\xe9\x2f\x67\x58\xcf\x10\xcf\
\xd8\x33\xe3\xb6\x13\xcb\x29\xc4\x69\x9d\x53\x9b\xd3\x47\x67\x17\
\x67\xb9\x73\x83\xf3\x88\x8b\x89\x4b\x82\xcb\x2e\x97\x3e\x2e\x9b\
\x1b\xc6\xdd\xc8\xbd\xe4\x4a\x74\xf5\x71\x5d\xe1\x7a\xd2\xf5\x9d\
\x9b\xb3\x9b\xc2\xed\xa8\xdb\xaf\xee\x36\xee\x69\xee\x87\xdc\x9f\
\xcc\x34\x9f\x29\x9e\x59\x33\x73\xd0\xc3\xc8\x43\xe0\x51\xe5\xd1\
\x3f\x0b\x9f\x95\x30\x6b\xdf\xac\x7e\x4f\x43\x4f\x81\x67\xb5\xe7\
\x23\x2f\x63\x2f\x91\x57\xad\xd7\xb0\xb7\xa5\x77\xaa\xf7\x61\xef\
\x17\x3e\xf6\x3e\x72\x9f\xe3\x3e\xe3\x3c\x37\xde\x32\xde\x59\x5f\
\xcc\x37\xc0\xb7\xc8\xb7\xcb\x4f\xc3\x6f\x9e\x5f\x85\xdf\x43\x7f\
\x23\xff\x64\xff\x7a\xff\xd1\x00\xa7\x80\x25\x01\x67\x03\x89\x81\
\x41\x81\x5b\x02\xfb\xf8\x7a\x7c\x21\xbf\x8e\x3f\x3a\xdb\x65\xf6\
\xb2\xd9\xed\x41\x8c\xa0\xb9\x41\x15\x41\x8f\x82\xad\x82\xe5\xc1\
\xad\x21\x68\xc8\xec\x90\xad\x21\xf7\xe7\x98\xce\x91\xce\x69\x0e\
\x85\x50\x7e\xe8\xd6\xd0\x07\x61\xe6\x61\x8b\xc3\x7e\x0c\x27\x85\
\x87\x85\x57\x86\x3f\x8e\x70\x88\x58\x1a\xd1\x31\x97\x35\x77\xd1\
\xdc\x43\x73\xdf\x44\xfa\x44\x96\x44\xde\x9b\x67\x31\x4f\x39\xaf\
\x2d\x4a\x35\x2a\x3e\xaa\x2e\x6a\x3c\xda\x37\xba\x34\xba\x3f\xc6\
\x2e\x66\x59\xcc\xd5\x58\x9d\x58\x49\x6c\x4b\x1c\x39\x2e\x2a\xae\
\x36\x6e\x6c\xbe\xdf\xfc\xed\xf3\x87\xe2\x9d\xe2\x0b\xe3\x7b\x17\
\x98\x2f\xc8\x5d\x70\x79\xa1\xce\xc2\xf4\x85\xa7\x16\xa9\x2e\x12\
\x2c\x3a\x96\x40\x4c\x88\x4e\x38\x94\xf0\x41\x10\x2a\xa8\x16\x8c\
\x25\xf2\x13\x77\x25\x8e\x0a\x79\xc2\x1d\xc2\x67\x22\x2f\xd1\x36\
\xd1\x88\xd8\x43\x5c\x2a\x1e\x4e\xf2\x48\x2a\x4d\x7a\x92\xec\x91\
\xbc\x35\x79\x24\xc5\x33\xa5\x2c\xe5\xb9\x84\x27\xa9\x90\xbc\x4c\
\x0d\x4c\xdd\x9b\x3a\x9e\x16\x9a\x76\x20\x6d\x32\x3d\x3a\xbd\x31\
\x83\x92\x91\x90\x71\x42\xaa\x21\x4d\x93\xb6\x67\xea\x67\xe6\x66\
\x76\xcb\xac\x65\x85\xb2\xfe\xc5\x6e\x8b\xb7\x2f\x1e\x95\x07\xc9\
\x6b\xb3\x90\xac\x05\x59\x2d\x0a\xb6\x42\xa6\xe8\x54\x5a\x28\xd7\
\x2a\x07\xb2\x67\x65\x57\x66\xbf\xcd\x89\xca\x39\x96\xab\x9e\x2b\
\xcd\xed\xcc\xb3\xca\xdb\x90\x37\x9c\xef\x9f\xff\xed\x12\xc2\x12\
\xe1\x92\xb6\xa5\x86\x4b\x57\x2d\x1d\x58\xe6\xbd\xac\x6a\x39\xb2\
\x3c\x71\x79\xdb\x0a\xe3\x15\x05\x2b\x86\x56\x06\xac\x3c\xb8\x8a\
\xb6\x2a\x6d\xd5\x4f\xab\xed\x57\x97\xae\x7e\xbd\x26\x7a\x4d\x6b\
\x81\x5e\xc1\xca\x82\xc1\xb5\x01\x6b\xeb\x0b\x55\x0a\xe5\x85\x7d\
\xeb\xdc\xd7\xed\x5d\x4f\x58\x2f\x59\xdf\xb5\x61\xfa\x86\x9d\x1b\
\x3e\x15\x89\x8a\xae\x14\xdb\x17\x97\x15\x7f\xd8\x28\xdc\x78\xe5\
\x1b\x87\x6f\xca\xbf\x99\xdc\x94\xb4\xa9\xab\xc4\xb9\x64\xcf\x66\
\xd2\x66\xe9\xe6\xde\x2d\x9e\x5b\x0e\x96\xaa\x97\xe6\x97\x0e\x6e\
\x0d\xd9\xda\xb4\x0d\xdf\x56\xb4\xed\xf5\xf6\x45\xdb\x2f\x97\xcd\
\x28\xdb\xbb\x83\xb6\x43\xb9\xa3\xbf\x3c\xb8\xbc\x65\xa7\xc9\xce\
\xcd\x3b\x3f\x54\xa4\x54\xf4\x54\xfa\x54\x36\xee\xd2\xdd\xb5\x61\
\xd7\xf8\x6e\xd1\xee\x1b\x7b\xbc\xf6\x34\xec\xd5\xdb\x5b\xbc\xf7\
\xfd\x3e\xc9\xbe\xdb\x55\x01\x55\x4d\xd5\x66\xd5\x65\xfb\x49\xfb\
\xb3\xf7\x3f\xae\x89\xaa\xe9\xf8\x96\xfb\x6d\x5d\xad\x4e\x6d\x71\
\xed\xc7\x03\xd2\x03\xfd\x07\x23\x0e\xb6\xd7\xb9\xd4\xd5\x1d\xd2\
\x3d\x54\x52\x8f\xd6\x2b\xeb\x47\x0e\xc7\x1f\xbe\xfe\x9d\xef\x77\
\x2d\x0d\x36\x0d\x55\x8d\x9c\xc6\xe2\x23\x70\x44\x79\xe4\xe9\xf7\
\x09\xdf\xf7\x1e\x0d\x3a\xda\x76\x8c\x7b\xac\xe1\x07\xd3\x1f\x76\
\x1d\x67\x1d\x2f\x6a\x42\x9a\xf2\x9a\x46\x9b\x53\x9a\xfb\x5b\x62\
\x5b\xba\x4f\xcc\x3e\xd1\xd6\xea\xde\x7a\xfc\x47\xdb\x1f\x0f\x9c\
\x34\x3c\x59\x79\x4a\xf3\x54\xc9\x69\xda\xe9\x82\xd3\x93\x67\xf2\
\xcf\x8c\x9d\x95\x9d\x7d\x7e\x2e\xf9\xdc\x60\xdb\xa2\xb6\x7b\xe7\
\x63\xce\xdf\x6a\x0f\x6f\xef\xba\x10\x74\xe1\xd2\x45\xff\x8b\xe7\
\x3b\xbc\x3b\xce\x5c\xf2\xb8\x74\xf2\xb2\xdb\xe5\x13\x57\xb8\x57\
\x9a\xaf\x3a\x5f\x6d\xea\x74\xea\x3c\xfe\x93\xd3\x4f\xc7\xbb\x9c\
\xbb\x9a\xae\xb9\x5c\x6b\xb9\xee\x7a\xbd\xb5\x7b\x66\xf7\xe9\x1b\
\x9e\x37\xce\xdd\xf4\xbd\x79\xf1\x16\xff\xd6\xd5\x9e\x39\x3d\xdd\
\xbd\xf3\x7a\x6f\xf7\xc5\xf7\xf5\xdf\x16\xdd\x7e\x72\x27\xfd\xce\
\xcb\xbb\xd9\x77\x27\xee\xad\xbc\x4f\xbc\x5f\xf4\x40\xed\x41\xd9\
\x43\xdd\x87\xd5\x3f\x5b\xfe\xdc\xd8\xef\xdc\x7f\x6a\xc0\x77\xa0\
\xf3\xd1\xdc\x47\xf7\x06\x85\x83\xcf\xfe\x91\xf5\x8f\x0f\x43\x05\
\x8f\x99\x8f\xcb\x86\x0d\x86\xeb\x9e\x38\x3e\x39\x39\xe2\x3f\x72\
\xfd\xe9\xfc\xa7\x43\xcf\x64\xcf\x26\x9e\x17\xfe\xa2\xfe\xcb\xae\
\x17\x16\x2f\x7e\xf8\xd5\xeb\xd7\xce\xd1\x98\xd1\xa1\x97\xf2\x97\
\x93\xbf\x6d\x7c\xa5\xfd\xea\xc0\xeb\x19\xaf\xdb\xc6\xc2\xc6\x1e\
\xbe\xc9\x78\x33\x31\x5e\xf4\x56\xfb\xed\xc1\x77\xdc\x77\x1d\xef\
\xa3\xdf\x0f\x4f\xe4\x7c\x20\x7f\x28\xff\x68\xf9\xb1\xf5\x53\xd0\
\xa7\xfb\x93\x19\x93\x93\xff\x04\x03\x98\xf3\xfc\x63\x33\x2d\xdb\
\x00\x00\x00\x20\x63\x48\x52\x4d\x00\x00\x7a\x25\x00\x00\x80\x83\
\x00\x00\xf9\xff\x00\x00\x80\xe9\x00\x00\x75\x30\x00\x00\xea\x60\
\x00\x00\x3a\x98\x00\x00\x17\x6f\x92\x5f\xc5\x46\x00\x00\x06\xa6\
\x49\x44\x41\x54\x78\xda\xec\x97\x4d\x6c\x54\xd7\x15\xc7\x7f\xf7\
\xbd\xfb\xde\x7c\x7a\xec\x01\xdb\x01\x8c\x9d\x02\xc2\x7c\x98\x42\
\x08\x88\x05\x0b\x88\x68\x68\x52\x25\x34\x8d\x4a\x95\x65\xa3\x66\
\x53\x67\x55\x55\x05\x09\xa9\x0b\xab\x9b\xd2\x74\x13\xa9\x89\x48\
\x16\x91\x22\xa5\xab\x92\x86\x15\xb4\x52\x1b\x0a\x1b\x2a\x45\x75\
\x4a\x20\x43\x9a\x84\xef\xc1\x9e\xc1\xe3\x61\xec\xe7\xe7\x99\x79\
\x1f\xf7\xde\x2e\x06\x28\xfe\x1a\x93\x55\x36\xbd\xd2\x5f\x9a\xb9\
\xf3\xce\xb9\xe7\xfd\xef\x39\xe7\x7f\x46\x18\x63\xf8\x36\x97\xc5\
\xb7\xbc\xfe\x1f\x80\x7c\xf4\xcb\x95\x67\xb2\xcb\x3d\xdf\x07\xbc\
\x0c\xbc\x00\xf4\x00\x4f\xdd\xdf\xbf\x08\x54\x80\xd3\xc0\x29\x60\
\xac\x9d\x93\xad\xe7\xfc\xc5\x03\x68\x93\x8e\xbb\x80\x61\x3b\x9b\
\x7b\x2d\x39\xf8\x14\xc9\x0d\xdb\xb0\x53\x59\x9c\x27\xd6\x02\x10\
\xdd\xbd\xb3\x4b\x35\x7c\x9a\xd7\x3e\x7f\xbe\xf9\xd5\xc5\x3f\x28\
\xdf\x7b\x0f\x38\x01\x8c\x2e\xf7\x46\xe2\xd1\x2a\xf8\x7c\x7f\x8b\
\x81\x6d\xe7\xfd\x47\xf7\xde\xb0\x33\x1d\x47\x72\x7b\x7f\x40\x6a\
\xe3\x76\x54\xdd\x43\x7b\x35\x94\x57\xc5\xc4\x51\xcb\x89\x74\xb0\
\x73\x2b\xb1\x72\x79\xec\x74\x8e\xc6\xd7\x97\xf0\x2e\xfc\x05\x35\
\x3b\xf3\xfb\x6d\xe7\xfd\xa3\xed\xfc\x2f\xc9\xc0\xe5\xfd\x59\x17\
\x78\x33\x31\xb0\x71\x38\x7f\xe0\x65\xd4\xac\x47\xe3\xab\x51\xd4\
\xac\x07\x8b\x94\x6e\xec\x4f\x41\x49\x60\x67\x72\xd8\xf9\x27\xe8\
\xfe\xc9\x30\xb5\xb3\xa7\x8e\x5c\xde\x9f\xcd\x02\xbf\xf8\xee\x79\
\x3f\x34\xcb\xe5\x80\x9e\xfb\xf9\xcd\xf4\xc6\xed\xc3\xb9\x5d\xfb\
\x89\x2a\xe3\xc4\xd5\x12\x18\xdd\x9e\x4f\x63\x50\x33\x53\x28\xdf\
\x43\xae\x5c\x4d\xe7\xde\xe7\xf1\x12\xa9\xe1\xfa\xd7\x97\x00\x5e\
\xd7\xcb\x05\xf0\xe0\x3a\x2e\xee\xcb\xbc\x91\xe8\xed\x1b\xee\x18\
\xda\x8d\xba\x37\x41\x5c\xbb\xfb\x0d\x73\x5b\x11\x4f\xdc\x81\x28\
\xa2\x63\x68\x37\xf1\xd4\xe4\xf0\xc5\x7d\x19\x1f\x38\xda\xb6\x0c\
\xb5\x01\x6d\xd8\x83\x9b\x3c\x92\xdd\xba\x13\x1d\x34\x88\x6b\xe5\
\xfb\x97\xf3\xcd\x11\xd7\xca\xe8\xa0\x41\x76\xeb\x4e\x70\x93\x47\
\xb4\x61\x8f\x36\xed\x02\x68\x61\x38\xbd\xba\x1f\x3b\x91\x26\x9e\
\x1c\x6f\xd1\x3e\x1f\x80\x10\x02\x61\x59\x2d\x08\xd1\x3a\x74\x91\
\x67\xe3\xc9\x71\xec\x44\x9a\xf4\xea\x7e\x34\x0c\xeb\xb6\x39\x60\
\x58\x67\xbb\x89\x57\x13\xf9\x6e\x74\xb3\x81\x51\x6a\x5e\xcd\x58\
\x08\xdb\xe6\xec\xdd\x80\xbf\x8f\xf9\x5c\xf3\x42\xa4\x25\xd8\x90\
\x73\x79\x71\xa0\x83\x3d\x2b\x1c\x4c\x1c\xcf\x4b\x67\x85\x6e\x36\
\x48\xe4\xbb\x11\x63\xb7\x5f\x55\x61\xf0\x1b\xe0\xc6\xa2\x0c\x18\
\x78\xc5\x49\xa7\x10\x8e\x8b\x9a\xb9\x07\x5a\xcf\x81\x90\x92\x77\
\xaf\xfa\xbc\xfd\x45\x8d\x2f\xbd\x88\x18\x41\x53\x43\x61\x2a\xe4\
\x77\x97\xaa\x9c\x1a\x6b\x22\xa4\xb3\xc0\x4e\xcd\xdc\x43\x38\x2e\
\x4e\x3a\x85\x81\x57\xda\x31\x70\x50\x5a\x36\x58\x36\x44\xd1\xdc\
\x97\x77\x13\x5c\x98\x82\xb3\xe5\x26\x52\x4a\x9e\x59\x93\xe5\x7b\
\x7d\x1d\xc4\xda\x70\xfa\xb6\xc7\xbf\x2a\x75\xfe\x74\xd3\x67\x47\
\x4f\x8e\xf5\x52\x61\xa2\x70\x6e\x7d\x3b\x36\xd2\xb2\xd1\x86\x83\
\xc0\xf1\x25\x92\xd0\x6c\xb2\xa5\x85\x51\x0a\x63\xf4\x1c\x58\xe9\
\x2c\x1f\x97\x1a\x48\x29\xd9\xdf\xdf\xc5\xeb\x9b\xbb\xd8\x28\x9b\
\x6c\x49\x84\x1c\xdd\xbd\x96\xcd\x2b\x33\x58\xb6\xe4\xa3\xa2\x8f\
\x95\xce\x2e\xb0\x37\x4a\x61\x4b\x0b\x6d\xcc\xa6\x76\x49\xd8\x23\
\x04\x98\x28\x58\x40\xa3\x95\xcc\x72\xbb\xae\x90\x52\xf2\xdc\xba\
\x6e\x74\xc3\xc7\x04\x0d\x4c\xb3\x8e\xf1\xa7\x38\x3c\xd8\x8b\x94\
\x92\x62\x5d\x21\x12\x99\x05\xf6\x26\x0a\x10\xa2\x75\xc6\x92\x57\
\xa0\x0c\x08\x01\xe1\x9d\xab\x0b\xba\x9d\x95\xc9\x91\x74\x1d\x8c\
\x32\xd4\xbd\x69\xe2\xfa\x5d\xd4\xf4\x64\xcb\x49\xbe\x97\x86\xb3\
\x06\xc7\x71\x48\x48\x81\xaa\x4d\x10\x8e\x5d\x9b\x97\xc0\x02\x61\
\x0b\xd4\x32\x65\x58\x31\xb1\x41\x18\x03\x4a\xcf\x81\x09\x9a\x6c\
\xc9\x27\x71\x1c\x87\x33\x55\x70\xfa\x37\x61\xa5\x3a\xb0\x33\x9d\
\x58\x7d\x1b\xf9\x6b\xd5\xe0\x38\x0e\x5b\xf2\x29\x74\xd0\x58\x60\
\x2f\x8c\xc1\xc4\x06\xdd\x52\xcd\x25\x1b\xd1\x95\x30\x0e\x41\x18\
\x8c\x51\x73\x10\x57\x4b\x1c\x1a\xe8\xc0\x75\x24\x77\x02\xc1\xfb\
\x63\x31\xe3\x03\x3b\x29\xf6\xed\xe0\xbd\x62\x44\x25\xb6\x48\x3a\
\x92\x17\xfa\x3b\x88\xab\xa5\x05\xf6\x08\x43\x18\x87\x68\xc3\x95\
\x36\x55\x60\xce\xd6\x83\xe8\x60\xd2\x75\x30\xf3\x5a\x56\x74\x6f\
\x82\xbe\x15\x13\xbc\x38\xb0\x8a\x33\x63\xb3\x7c\xe6\x69\x3e\xf3\
\x1a\xff\x73\x24\x25\x3f\xea\xcf\xd0\xed\x97\x68\x4e\xdf\x5b\x28\
\xbb\x42\x50\x0f\x22\xb4\x31\x67\x97\x64\xc0\xc0\x07\x33\xb3\x0d\
\x84\x2d\xb0\xa4\xb5\xa0\xab\x05\xb7\xbe\xe0\x59\x39\xc9\x6b\x5b\
\xba\x19\xcc\xa7\x49\x38\x0e\x09\xc7\x61\xf3\x8a\x34\x3f\x1f\xea\
\x61\x9f\x35\x49\x70\xbd\xb0\xc0\xce\x92\x16\xc2\x16\xcc\xcc\x36\
\x30\xf0\x41\xbb\x3e\x30\x16\xc6\xfa\xc4\xb4\xdf\x18\xce\xa5\x5d\
\x54\xa8\xe7\x34\x35\xd3\x6c\x50\x2f\x7c\xc2\xa6\xbe\x49\xb6\x3f\
\xb9\x19\xd9\xd5\xd7\x92\xe2\xda\x04\xc1\xad\x51\xea\xe3\x37\x16\
\x99\x38\xc0\x72\x2c\xa6\xfd\x06\x61\xac\x4f\xcc\x9f\x96\x16\x93\
\xe3\x13\x95\xa9\xd9\xe1\xce\x4c\x02\xe9\x4a\xe2\x46\xb8\xc0\x67\
\x58\xbc\x4a\x58\xbc\xfa\x78\x33\x5f\xca\x45\x08\x41\x65\x6a\x16\
\xdd\x9a\x92\x96\x55\xc3\xcb\x61\xac\x8f\x17\x2b\x1e\x32\xed\x62\
\xbb\xf6\xe2\x82\xf4\x18\xb0\x5d\x1b\x99\x76\x29\x56\x3c\xc2\x58\
\x1f\xd7\x86\xcb\x6d\xd5\xd0\x18\xf3\x00\xc7\xbc\xd9\xe0\xad\xf1\
\x8a\x8f\xdb\x91\x46\x26\xdd\xfb\x6a\xf7\x98\xc0\x20\x93\x2e\x6e\
\x47\x9a\xf1\x8a\x8f\x37\x1b\xbc\x65\x8c\x39\xf6\xc0\x7f\x5b\x39\
\x7e\x69\x34\x10\xff\x3e\x74\xcc\x3a\xbd\xeb\xa7\xbf\x2c\x7b\xcd\
\x77\x6e\x94\xa7\x70\x3b\xd3\x24\x72\x19\x2c\xdb\x7e\x48\xd3\x52\
\xb0\x6c\x9b\x44\x2e\x83\xdb\x99\xe6\x46\x79\x8a\xb2\xd7\x7c\xf7\
\x9d\xde\x03\xbf\xfa\xe3\xfa\x1f\xda\x2f\x8d\x06\x42\xb7\x1b\x4a\
\x4f\xed\x4e\x72\xe9\xd0\x31\xab\x5a\xad\x3a\xe5\x72\x39\x03\x74\
\x1e\x2a\x7e\xfc\xeb\x2e\xdd\xf8\xd9\xda\xd5\x9d\x74\xe7\x52\xa8\
\x20\x22\x6e\x84\xa8\x30\xc2\xa8\xfb\xb3\x81\x6d\x61\xbb\x0e\x32\
\xe5\x62\x27\x1c\x26\xbd\x06\x77\x4a\xd3\xd4\xec\xf4\xfb\x67\x06\
\x9e\xfd\xad\xd6\xda\x4b\x26\x93\x33\xc5\x62\x31\x38\x77\xee\x9c\
\x32\x8f\x1c\x3a\x6f\x24\x83\x42\xa1\x20\x92\xc9\xa4\xb4\x6d\x3b\
\x63\x8c\xe9\x3e\xf3\x9d\xef\x7f\xb4\xce\xbb\xfd\xe5\x86\xca\xf5\
\xe7\x7a\x4b\xe5\x03\xf9\xce\x34\x2b\xba\x92\x38\xd9\x24\xc9\x44\
\xcb\xbc\x19\xc4\x84\xb1\xa2\x5c\x6b\x50\x9b\xae\x72\x57\x76\xfe\
\xe3\x5a\xf7\xce\xbf\xdd\xcc\x0d\xfc\xc7\x68\xbd\xca\xb2\x2c\x9a\
\xcd\x66\xd8\xd3\xd3\x13\x01\x6a\xe9\x99\x10\x18\x1a\x1a\x32\xd5\
\x6a\x35\x2e\x97\xcb\xb3\xc0\xa4\x65\x59\xe1\xf5\x8e\xfe\xea\xcd\
\xce\x27\x2f\xac\xf2\x4b\x6f\xaf\x9f\xba\xbe\xaf\xeb\x96\xb7\xd7\
\x36\x6a\x85\xd4\xf1\x6a\x80\xd8\x92\x25\x25\xec\x5a\x2d\xd1\xf9\
\xcf\x9b\xab\x76\x9c\x1f\x4f\xf7\x4e\x08\x21\x62\x4b\x88\xd0\x18\
\x33\x73\x9f\x81\xa0\x58\x2c\xea\xb6\xff\x0b\xfe\xbc\x2b\xc9\xe1\
\x4f\x03\x31\x32\x32\x22\xc6\xc7\xc7\xed\x52\xa9\xe4\xe4\x72\x39\
\x69\x8c\xb1\xa3\x28\x12\x52\x4a\x2b\x8e\x63\xa9\x94\x92\xae\xeb\
\x0a\xa5\x94\x78\x60\x6b\xdb\xb6\x01\x94\x52\x2a\x8a\xe3\x58\xa7\
\x52\x29\x1d\x45\x91\x06\x94\xef\xfb\x51\x36\x9b\x8d\x4f\x9e\x3c\
\xa9\x3f\x7c\x3a\x61\x7e\x3c\xda\x5c\x3a\x80\x07\xeb\xf0\xa7\x81\
\x00\x18\x19\x19\x79\x78\x48\xa1\x50\x10\x95\x4a\x45\x0c\x0e\x0e\
\x0a\x80\x5a\xad\xf6\xf0\xb7\x7c\x3e\x6f\xd6\xac\x59\x63\x0a\x85\
\x82\x19\x1a\x1a\x7a\xe8\x74\x64\x64\xc4\x00\x7c\xf8\x74\xe2\xe1\
\xde\xa3\x01\xfc\x77\x00\x86\x94\x03\x01\x15\xb2\x8a\xf3\x00\x00\
\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\
\x00\x00\x29\x4b\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x04\x18\x00\x00\x04\xe0\x00\x00\x1a\x2c\x00\x04\xa8\xa5\
\x00\x00\x0c\xfa\x00\x04\xa8\xa5\x00\x00\x16\xf2\x00\x05\x76\x94\
\x00\x00\x1a\xba\x00\x05\x96\x5d\x00\x00\x11\x2e\x00\x05\x96\x5d\
\x00\x00\x18\x0a\x00\x05\xa8\x2b\x00\x00\x12\x4a\x00\x05\xab\x60\
\x00\x00\x12\x24\x00\x05\xb0\x35\x00\x00\x18\x36\x00\x0d\x31\xa9\
\x00\x00\x1c\x2f\x00\x18\xf5\x14\x00\x00\x10\x5c\x00\x2a\xd0\x25\
\x00\x00\x0a\xd0\x00\x2a\xec\x30\x00\x00\x0b\x05\x00\x2b\x8c\x04\
\x00\x00\x0b\x6d\x00\x3c\xdc\x74\x00\x00\x06\x8d\x00\x48\x85\x72\
\x00\x00\x06\xc7\x00\x4a\x2b\x82\x00\x00\x13\x75\x00\x4a\x36\x95\
\x00\x00\x00\x00\x00\x4a\x36\x95\x00\x00\x07\x07\x00\x4a\x36\x95\
\x00\x00\x0c\xa4\x00\x4a\x36\x95\x00\x00\x13\xf0\x00\x4c\xcc\x54\
\x00\x00\x0d\x20\x00\x4c\xcc\x54\x00\x00\x17\x1c\x00\x4f\xb2\x7e\
\x00\x00\x0e\x55\x00\x54\x6c\x54\x00\x00\x1a\x55\x00\x56\x8c\x95\
\x00\x00\x0f\x5d\x00\x59\x66\x0a\x00\x00\x11\x56\x00\x59\x66\x0a\
\x00\x00\x15\x47\x00\x59\xcb\xc0\x00\x00\x09\x85\x00\x5b\x03\x8a\
\x00\x00\x12\x72\x00\x5b\x03\x8a\x00\x00\x15\xe7\x00\x5b\x0b\x25\
\x00\x00\x18\x60\x00\x89\x67\x25\x00\x00\x07\x34\x00\xb2\x0d\x89\
\x00\x00\x05\x8d\x00\xcd\x51\x76\x00\x00\x24\xaf\x00\xe1\x80\xe2\
\x00\x00\x14\x89\x00\xff\x11\x49\x00\x00\x05\x3d\x01\x04\x45\x0f\
\x00\x00\x0e\xb6\x01\x05\x6e\xe5\x00\x00\x1f\x1e\x01\x08\xec\xc4\
\x00\x00\x06\x11\x01\x14\xad\x04\x00\x00\x09\xb4\x01\x14\xad\x04\
\x00\x00\x1e\xdc\x01\x1c\xb5\xc2\x00\x00\x06\x4c\x01\x30\xf4\x02\
\x00\x00\x09\xeb\x01\x48\xbf\xaf\x00\x00\x0e\x82\x01\x5c\xff\xef\
\x00\x00\x0f\x2d\x01\x63\x63\x85\x00\x00\x19\xf2\x01\x63\x63\x85\
\x00\x00\x1e\x17\x01\x70\xaa\xa0\x00\x00\x19\x40\x02\x2d\x09\x75\
\x00\x00\x09\x45\x02\x43\x01\x41\x00\x00\x1c\xe1\x02\x89\xdc\xc7\
\x00\x00\x0e\x0f\x02\xa7\x96\xc4\x00\x00\x0a\x9a\x02\xab\x4c\x79\
\x00\x00\x20\xbf\x02\xf0\x16\xfe\x00\x00\x03\x5c\x03\x08\xa7\x7e\
\x00\x00\x01\x6e\x04\x18\xa4\x4f\x00\x00\x13\x0f\x04\x18\xa4\x4f\
\x00\x00\x16\x8e\x04\x3b\xa8\x09\x00\x00\x0b\xe6\x04\x42\x63\x15\
\x00\x00\x07\x76\x04\x85\xec\xc9\x00\x00\x21\x67\x04\xa2\xfc\x54\
\x00\x00\x1a\xe7\x04\xcc\xc5\x7a\x00\x00\x0d\x4b\x04\xcc\xc5\x7a\
\x00\x00\x14\x55\x04\xd6\x80\x8a\x00\x00\x14\x1f\x05\x0a\xfe\xd3\
\x00\x00\x0e\xfe\x05\x2c\xcb\xfa\x00\x00\x14\xe3\x05\x2f\x69\xf5\
\x00\x00\x1b\x1e\x05\x6c\xb7\xc4\x00\x00\x08\x69\x05\x8b\x7b\xbe\
\x00\x00\x0f\x86\x05\x8b\xa6\x84\x00\x00\x0f\xb2\x05\x8c\x46\xc5\
\x00\x00\x15\x15\x05\x8c\x46\xc5\x00\x00\x17\xda\x05\x8c\x76\x94\
\x00\x00\x10\xa4\x05\x8c\xac\x35\x00\x00\x11\x02\x05\x9a\x8b\xbe\
\x00\x00\x19\xbf\x05\x9c\x42\xee\x00\x00\x0d\x79\x05\x9c\x9c\xc2\
\x00\x00\x1b\x90\x05\xa3\x86\xb5\x00\x00\x1d\xb0\x05\xa6\xc8\x95\
\x00\x00\x18\xca\x05\xa6\xc8\x95\x00\x00\x1d\xe7\x05\xb0\xb2\x8a\
\x00\x00\x12\x9b\x05\xb0\xb2\x8a\x00\x00\x16\x16\x05\xc3\xaf\xce\
\x00\x00\x0b\x9e\x05\xd5\x48\x95\x00\x00\x1d\x78\x05\xd5\xc4\xe5\
\x00\x00\x20\x45\x06\x1e\x6d\xa9\x00\x00\x1d\x34\x06\x6d\x6f\xb1\
\x00\x00\x22\x77\x06\x7b\x08\xe3\x00\x00\x0c\x3b\x06\x8b\xac\xde\
\x00\x00\x20\x8b\x06\x8d\x3a\x43\x00\x00\x08\x34\x06\x8f\x63\x05\
\x00\x00\x00\x2b\x06\xb8\x19\xfa\x00\x00\x11\xc9\x06\xb8\x19\xfa\
\x00\x00\x15\xb5\x06\xc8\x92\x91\x00\x00\x1b\xc3\x06\xc8\x92\x92\
\x00\x00\x1b\xf9\x07\x3b\xe0\x03\x00\x00\x08\x95\x07\x8c\xcf\x97\
\x00\x00\x1f\xad\x08\x3c\xc5\x25\x00\x00\x1e\x98\x08\x4e\x9c\xf5\
\x00\x00\x0b\x38\x08\x5d\xf8\xa2\x00\x00\x17\x4b\x08\xaa\xe3\xe4\
\x00\x00\x1a\x85\x08\xd1\xeb\x84\x00\x00\x1c\x70\x08\xe3\x4b\xdc\
\x00\x00\x10\xcc\x08\xee\x26\x24\x00\x00\x18\x8f\x09\x5c\xef\xe5\
\x00\x00\x1f\xe6\x0a\x1f\xc8\x95\x00\x00\x13\xa8\x0a\x3d\x0e\x95\
\x00\x00\x15\x78\x0a\x64\x3c\x14\x00\x00\x0c\xcd\x0a\x65\x4b\xe4\
\x00\x00\x1b\x5c\x0a\x68\xf8\xf7\x00\x00\x09\x0c\x0a\x68\xf8\xf7\
\x00\x00\x0f\xde\x0a\xa8\x4a\xc9\x00\x00\x11\xf5\x0b\x0a\x04\x95\
\x00\x00\x1f\x64\x0b\x66\x23\x46\x00\x00\x12\xc9\x0b\x66\x23\x46\
\x00\x00\x16\x4a\x0b\x8c\x76\xb4\x00\x00\x0c\x73\x0b\xba\x83\x5b\
\x00\x00\x19\x01\x0c\x3b\x98\x64\x00\x00\x0a\x28\x0c\x47\xc1\x62\
\x00\x00\x0a\x5e\x0c\x89\x28\x2e\x00\x00\x23\xef\x0c\x8a\xac\x07\
\x00\x00\x11\x81\x0c\x9c\x0d\x42\x00\x00\x17\xa3\x0c\xc9\xa0\x0e\
\x00\x00\x05\xe0\x0c\xfb\x29\xd4\x00\x00\x01\x26\x0d\x31\xb8\x6e\
\x00\x00\x19\x83\x0d\x33\xd9\xec\x00\x00\x07\xb4\x0d\xc4\xc8\x3c\
\x00\x00\x08\x07\x0e\x39\x74\x39\x00\x00\x08\xc8\x0e\x74\x68\x5e\
\x00\x00\x10\x13\x0e\xb5\xff\x84\x00\x00\x1e\x4c\x69\x00\x00\x25\
\x19\x03\x00\x00\x00\x06\x95\x89\x30\x58\x30\x8b\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0b\
\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\
\x92\x00\x43\x00\x6f\x00\x70\x00\x79\x00\x72\x00\x69\x00\x67\x00\
\x68\x00\x74\x00\x20\x00\x28\x00\x43\x00\x29\x00\x20\x00\x32\x00\
\x30\x00\x31\x00\x31\x00\x2d\x00\x32\x00\x30\x00\x31\x00\x33\x00\
\x20\x00\x54\x00\x68\x00\x65\x00\x20\x00\x46\x00\x72\x00\x65\x00\
\x65\x00\x20\x00\x61\x00\x6e\x00\x64\x00\x20\x00\x4f\x00\x70\x00\
\x65\x00\x6e\x00\x20\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\
\x65\x00\x20\x00\x53\x00\x6f\x00\x66\x00\x74\x00\x77\x00\x61\x00\
\x72\x00\x65\x00\x20\x00\x4c\x00\x65\x00\x61\x00\x72\x00\x6e\x00\
\x69\x00\x6e\x00\x67\x00\x20\x00\x43\x00\x65\x00\x6e\x00\x74\x00\
\x72\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x49\x43\x6f\x70\
\x79\x72\x69\x67\x68\x74\x20\x28\x43\x29\x20\x32\x30\x31\x31\x2d\
\x32\x30\x31\x33\x20\x54\x68\x65\x20\x46\x72\x65\x65\x20\x61\x6e\
\x64\x20\x4f\x70\x65\x6e\x20\x53\x6f\x75\x72\x63\x65\x20\x53\x6f\
\x66\x74\x77\x61\x72\x65\x20\x4c\x65\x61\x72\x6e\x69\x6e\x67\x20\
\x43\x65\x6e\x74\x72\x65\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\
\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x1a\x00\x46\x00\x72\
\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x30\xa2\
\x30\xd0\x30\xa6\x30\xc8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\
\x46\x72\x65\x65\x73\x65\x65\x72\x20\x41\x62\x6f\x75\x74\x07\x00\
\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\
\x00\x00\x01\x08\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\
\x00\x65\x00\x72\x30\x6f\x30\x01\x30\xd7\x30\xec\x30\xbc\x30\xf3\
\x30\xc6\x30\xfc\x30\xb7\x30\xe7\x30\xf3\x30\x92\x30\xad\x30\xe3\
\x30\xd7\x30\xc1\x30\xe3\x30\x59\x30\x8b\x30\x53\x30\x68\x30\x4c\
\x53\xef\x80\xfd\x30\x6a\x30\xd3\x30\xc7\x30\xaa\x30\xad\x30\xe3\
\x30\xd7\x30\xc1\x30\xe3\x30\xbd\x30\xd5\x30\xc8\x30\xa6\x30\xa7\
\x30\xa2\x30\x67\x30\x59\x30\x02\x00\x46\x00\x72\x00\x65\x00\x65\
\x00\x73\x00\x65\x00\x65\x00\x72\x30\x92\x4f\x7f\x75\x28\x30\x57\
\x30\x66\x30\x01\x00\x55\x00\x53\x00\x42\x30\x01\x00\x46\x00\x69\
\x00\x72\x00\x65\x00\x57\x00\x69\x00\x72\x00\x65\x30\x01\x30\xed\
\x30\xfc\x30\xab\x30\xeb\x30\xc7\x30\xb9\x30\xaf\x30\xc8\x30\xc3\
\x30\xd7\x30\x6a\x30\x69\x30\x6e\x30\xd3\x30\xc7\x30\xaa\x30\xbd\
\x30\xfc\x30\xb9\x30\x4b\x30\x89\x63\x49\x30\x48\x30\x5f\x66\x20\
\x50\xcf\x30\x68\x30\xde\x30\xa4\x30\xaf\x30\x4b\x30\x89\x30\x6e\
\x97\xf3\x58\xf0\x30\x92\x54\x0c\x66\x42\x30\x6b\x30\xad\x30\xe3\
\x30\xd7\x30\xc1\x30\xe3\x30\x57\x30\x66\x66\x20\x50\xcf\x30\x92\
\x52\x36\x4f\x5c\x30\x57\x30\x7e\x30\x59\x30\x02\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\xc6\x46\x72\x65\x65\x73\x65\x65\x72\x20\x69\
\x73\x20\x61\x20\x76\x69\x64\x65\x6f\x20\x63\x61\x70\x74\x75\x72\
\x65\x20\x75\x74\x69\x6c\x69\x74\x79\x20\x63\x61\x70\x61\x62\x6c\
\x65\x20\x6f\x66\x20\x63\x61\x70\x74\x75\x72\x69\x6e\x67\x20\x70\
\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x73\x2e\x20\x49\x74\
\x20\x63\x61\x70\x74\x75\x72\x65\x73\x20\x76\x69\x64\x65\x6f\x20\
\x73\x6f\x75\x72\x63\x65\x73\x20\x73\x75\x63\x68\x20\x61\x73\x20\
\x75\x73\x62\x2c\x20\x66\x69\x72\x65\x77\x69\x72\x65\x2c\x20\x6f\
\x72\x20\x6c\x6f\x63\x61\x6c\x20\x64\x65\x73\x6b\x74\x6f\x70\x20\
\x61\x6c\x6f\x6e\x67\x20\x77\x69\x74\x68\x20\x61\x75\x64\x69\x6f\
\x20\x61\x6e\x64\x20\x6d\x69\x78\x65\x73\x20\x74\x68\x65\x6d\x20\
\x74\x6f\x67\x65\x74\x68\x65\x72\x20\x74\x6f\x20\x70\x72\x6f\x64\
\x75\x63\x65\x20\x61\x20\x76\x69\x64\x65\x6f\x2e\x07\x00\x00\x00\
\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\
\x00\xe6\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\
\x00\x72\x30\x6f\x30\x01\x00\x47\x00\x50\x00\x4c\x30\xd0\x30\xfc\
\x30\xb8\x30\xe7\x30\xf3\x00\x33\x30\x6e\x4e\x0b\x30\x67\x30\xe9\
\x30\xa4\x30\xbb\x30\xf3\x30\xb9\x30\x55\x30\x8c\x30\x66\x30\x44\
\x30\x7e\x30\x59\x30\x02\x30\x53\x30\x6e\x30\xbd\x30\xd5\x30\xc8\
\x30\xa6\x30\xa7\x30\xa2\x30\x6f\x66\x0e\x79\x3a\x30\x7e\x30\x5f\
\x30\x6f\x9e\xd9\x79\x3a\x30\x6e\x4f\xdd\x8a\x3c\x30\x6a\x30\x57\
\x30\x6b\x30\x0c\x73\xfe\x72\xb6\x30\x6e\x30\x7e\x30\x7e\x30\x0d\
\x63\xd0\x4f\x9b\x30\x55\x30\x8c\x30\x7e\x30\x59\x30\x02\x67\x2c\
\x30\xbd\x30\xd5\x30\xc8\x30\xa6\x30\xa7\x30\xa2\x30\x6e\x4f\x7f\
\x75\x28\x30\x6b\x30\x88\x30\x63\x30\x66\x75\x1f\x30\x58\x30\x5f\
\x30\x44\x30\x4b\x30\x6a\x30\x8b\x64\x0d\x5b\xb3\x30\x6b\x30\x64\
\x30\x44\x30\x66\x30\x82\x30\x01\x84\x57\x4f\x5c\x80\x05\x30\x6f\
\x4e\x00\x52\x07\x30\x6e\x8c\xac\x4e\xfb\x30\x92\x8c\xa0\x30\x44\
\x30\x7e\x30\x5b\x30\x93\x30\x02\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\xdb\x46\x72\x65\x65\x73\x65\x65\x72\x20\x69\x73\x20\x6c\x69\
\x63\x65\x6e\x73\x65\x64\x20\x75\x6e\x64\x65\x72\x20\x74\x68\x65\
\x20\x47\x50\x4c\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x33\x2e\x20\
\x54\x68\x69\x73\x20\x73\x6f\x66\x74\x77\x61\x72\x65\x20\x69\x73\
\x20\x70\x72\x6f\x76\x69\x64\x65\x64\x20\x27\x61\x73\x2d\x69\x73\
\x27\x2c\x77\x69\x74\x68\x6f\x75\x74\x20\x61\x6e\x79\x20\x65\x78\
\x70\x72\x65\x73\x73\x20\x6f\x72\x20\x69\x6d\x70\x6c\x69\x65\x64\
\x20\x77\x61\x72\x72\x61\x6e\x74\x79\x2e\x20\x49\x6e\x20\x6e\x6f\
\x20\x65\x76\x65\x6e\x74\x20\x77\x69\x6c\x6c\x20\x74\x68\x65\x20\
\x61\x75\x74\x68\x6f\x72\x73\x20\x62\x65\x20\x68\x65\x6c\x64\x20\
\x6c\x69\x61\x62\x6c\x65\x20\x66\x6f\x72\x20\x61\x6e\x79\x20\x64\
\x61\x6d\x61\x67\x65\x73\x20\x61\x72\x69\x73\x69\x6e\x67\x20\x66\
\x72\x6f\x6d\x20\x74\x68\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x74\
\x68\x69\x73\x20\x73\x6f\x66\x74\x77\x61\x72\x65\x2e\x07\x00\x00\
\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\
\x00\x00\x1a\x30\xd8\x30\xc3\x30\xc9\x30\xd5\x30\xa9\x30\xf3\x00\
\x20\x30\xb0\x30\xe9\x30\xd5\x30\xa3\x30\xc3\x30\xaf\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x16\x48\x65\x61\x64\x70\x68\x6f\x6e\x65\
\x73\x20\x67\x72\x61\x70\x68\x69\x63\x73\x20\x62\x79\x07\x00\x00\
\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\
\x00\x00\x1a\x93\x32\x75\x3b\x00\x20\x30\xdc\x30\xbf\x30\xf3\x00\
\x20\x30\xb0\x30\xe9\x30\xd5\x30\xa3\x30\xc3\x30\xaf\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x19\x52\x65\x63\x6f\x72\x64\x20\x62\x75\
\x74\x74\x6f\x6e\x20\x67\x72\x61\x70\x68\x69\x63\x73\x20\x62\x79\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x00\x0a\x30\xd0\x30\xfc\x30\xb8\x30\xe7\x30\xf3\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x56\x65\x72\x73\x69\x6f\
\x6e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\
\x67\x01\x03\x00\x00\x00\x0e\x30\xaa\x30\xfc\x30\xc7\x30\xa3\x30\
\xaa\x51\x65\x52\x9b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x41\
\x75\x64\x69\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x14\x30\xaa\x30\xfc\x30\xc7\x30\xa3\x30\xaa\x00\x20\x30\xdf\
\x30\xad\x30\xb5\x30\xfc\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\
\x41\x75\x64\x69\x6f\x20\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x0e\x30\xaa\x30\xfc\x30\xc7\x30\xa3\x30\xaa\x51\x65\x52\
\x9b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\
\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x14\x30\xaa\x30\
\xfc\x30\xc7\x30\xa3\x30\xaa\x00\x20\x30\xdf\x30\xad\x30\xb5\x30\
\xfc\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\
\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x06\x95\x89\x30\
\x58\x30\x8b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\
\x73\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x10\x30\xc7\x30\xd5\x30\xa9\
\x30\xeb\x30\xc8\x30\x6e\x8a\x00\x8a\x9e\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x10\x44\x65\x66\x61\x75\x6c\x74\x20\x4c\x61\x6e\x67\
\x75\x61\x67\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x81\xea\x52\xd5\
\x76\x84\x30\x6b\x96\xa0\x30\x59\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x10\x45\x6e\x61\x62\x6c\x65\x20\x41\x75\x74\x6f\x2d\x48\x69\
\x64\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1e\x00\x46\x00\x72\x00\x65\
\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x8a\x2d\x5b\x9a\
\x00\x20\x30\xc4\x30\xfc\x30\xeb\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x13\x46\x72\x65\x65\x73\x65\x65\x72\x20\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x04\x4e\x00\x82\
\x2c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x47\x65\x6e\x65\x72\
\x61\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x06\x30\x5d\x30\x6e\x4e\xd6\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x4d\x69\x73\x63\x65\x6c\
\x6c\x61\x6e\x65\x6f\x75\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\
\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x04\x51\
\xfa\x52\x9b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x4f\x75\x74\
\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x30\xd7\x30\xe9\x30\
\xb0\x30\xa4\x30\xf3\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x50\
\x6c\x75\x67\x69\x6e\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x12\x8a\x18\
\x93\x32\x00\x20\x30\xc7\x30\xa3\x30\xec\x30\xaf\x30\xc8\x30\xea\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x52\x65\x63\x6f\x72\x64\
\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x0e\x30\xec\x30\xb3\x30\xfc\x30\xc7\x30\xa3\x30\xf3\x30\xb0\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x69\x6e\x67\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x12\x30\xd7\x30\xed\x30\
\xd5\x30\xa1\x30\xa4\x30\xeb\x30\x92\x4f\xdd\x5b\x58\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0c\x53\x61\x76\x65\x20\x50\x72\x6f\x66\
\x69\x6c\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x8a\x2d\x5b\x9a\x30\
\x59\x30\x8b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x53\x65\x74\
\x75\x70\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x30\xd3\x30\xc7\x30\xaa\
\x51\x65\x52\x9b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x56\x69\
\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x10\x30\xd3\x30\xc7\x30\xaa\x00\x20\x30\xdf\x30\xad\x30\xb5\x30\
\xfc\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\
\x20\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x30\xd3\
\x30\xc7\x30\xaa\x51\x65\x52\x9b\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0a\x56\x69\x64\x65\x6f\x49\x6e\x70\x75\x74\x07\x00\x00\x00\
\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\
\x00\x00\x00\x10\x30\xd3\x30\xc7\x30\xaa\x00\x20\x30\xdf\x30\xad\
\x30\xb5\x30\xfc\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\
\x64\x65\x6f\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x10\
\x30\xa2\x30\xd0\x30\xa6\x30\xc8\x00\x28\x00\x26\x00\x41\x00\x29\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x26\x41\x62\x6f\x75\x74\
\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x10\x30\xd5\x30\xa1\x30\xa4\x30\xeb\x00\x28\
\x00\x26\x00\x46\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x26\x46\x69\x6c\x65\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\
\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x30\xd8\x30\xeb\x30\
\xd7\x00\x28\x00\x26\x00\x48\x00\x29\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x05\x26\x48\x65\x6c\x70\x07\x00\x00\x00\x0b\x46\x72\x65\
\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x8a\x00\
\x8a\x9e\x00\x28\x00\x26\x00\x4c\x00\x29\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x09\x26\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\x00\x00\
\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x0c\x7d\x42\x4e\x86\x00\x28\x00\x26\x00\x51\x00\x29\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x51\x75\x69\x74\x07\x00\
\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x14\x30\xaa\x30\xf3\x30\xe9\x30\xa4\x30\xf3\x30\xde\
\x30\xcb\x30\xe5\x30\xa2\x30\xeb\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x14\x4f\x6e\x6c\x69\x6e\x65\x20\x44\x6f\x63\x75\x6d\x65\x6e\
\x74\x61\x74\x69\x6f\x6e\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\
\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x22\x30\xd3\x30\xc7\
\x30\xaa\x00\x20\x30\xc7\x30\xa3\x30\xec\x30\xaf\x30\xc8\x30\xea\
\x30\x92\x95\x8b\x30\x4f\x00\x28\x00\x26\x00\x4f\x00\x29\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x15\x26\x4f\x70\x65\x6e\x20\x56\x69\
\x64\x65\x6f\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x12\x30\xaa\x30\xd7\x30\xb7\x30\xe7\x30\xf3\x00\x28\x00\x26\x00\
\x4f\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x26\x4f\x70\
\x74\x69\x6f\x6e\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x58\x31\x54\x4a\x00\x28\x00\
\x26\x00\x52\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x26\
\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x95\x89\x30\x58\x30\x8b\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x08\x30\xb3\x30\xe1\x30\xf3\x30\xc8\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x07\x43\x6f\x6d\x6d\x65\x6e\x74\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\
\x65\xe5\x4e\xd8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x44\x61\
\x74\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x08\x30\xa4\x30\xd9\x30\xf3\x30\xc8\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x30\xa4\x30\xd9\x30\xf3\x30\xc8\x00\x3a\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x46\x00\
\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\
\x20\x00\x2d\x00\x20\x30\xdd\x30\xfc\x30\xbf\x30\xd6\x30\xeb\x00\
\x20\x30\xd7\x30\xec\x30\xbc\x30\xf3\x30\xc6\x30\xfc\x30\xb7\x30\
\xe7\x30\xf3\x30\x6e\x8a\x18\x93\x32\x30\xb9\x30\xc6\x30\xfc\x30\
\xb7\x30\xe7\x30\xf3\x08\x00\x00\x00\x00\x06\x00\x00\x00\x32\x46\
\x72\x65\x65\x73\x65\x65\x72\x20\x2d\x20\x70\x6f\x72\x74\x61\x62\
\x6c\x65\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\
\x72\x65\x63\x6f\x72\x64\x69\x6e\x67\x20\x73\x74\x61\x74\x69\x6f\
\x6e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x18\x30\xe1\x30\xa4\x30\xf3\x30\xa6\x30\xa3\x30\
\xf3\x30\xc9\x30\xa6\x30\x92\x97\x5e\x88\x68\x79\x3a\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x10\x48\x69\x64\x65\x20\x4d\x61\x69\x6e\
\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x30\xa2\x30\xa4\x30\
\xc9\x30\xeb\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x49\
\x64\x6c\x65\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x0e\x30\xaa\x30\xfc\x30\xc7\x30\xa3\
\x30\xaa\x30\x6a\x30\x44\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\
\x4e\x6f\x20\x41\x75\x64\x69\x6f\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x30\xaa\x30\xfc\
\x30\xc7\x30\xa3\x30\xaa\x00\x20\x00\x2f\x00\x20\x30\xd3\x30\xc7\
\x30\xaa\x00\x20\x30\x6a\x30\x44\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0e\x4e\x6f\x20\x41\x75\x64\x69\x6f\x2f\x56\x69\x64\x65\x6f\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x08\x55\x4f\x98\x4c\x30\x6a\x30\x44\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x09\x4e\x6f\x20\x49\x73\x73\x75\x65\x73\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x0a\x30\xd3\x30\xc7\x30\xaa\x30\x6a\x30\x44\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x08\x4e\x6f\x20\x56\x69\x64\x65\x6f\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x06\x30\xdd\x30\xfc\x30\xba\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x05\x50\x61\x75\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x30\xec\x30\xc7\
\x30\xa3\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\
\x61\x64\x79\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x08\x8a\x18\x93\x32\x30\x59\x30\x8b\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x63\x6f\x72\x64\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x0e\x30\xec\x30\xb3\x30\xfc\x30\xc7\x30\xa3\x30\xf3\
\x30\xb0\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x69\x6e\x67\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x30\xec\x30\xb3\x30\xfc\x30\
\xc7\x30\xa3\x30\xf3\x30\xb0\x30\x6f\x4e\x00\x66\x42\x50\x5c\x6b\
\x62\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x11\x52\x65\x63\
\x6f\x72\x64\x69\x6e\x67\x20\x50\x61\x75\x73\x65\x64\x2e\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x1a\x30\xea\x30\xea\x30\xfc\x30\xb9\x00\x20\x30\xd5\x30\xa9\
\x30\xfc\x30\xe0\x30\x92\x53\xd7\x30\x51\x30\x5f\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x10\x52\x65\x6c\x65\x61\x73\x65\x20\x52\x65\
\x63\x65\x69\x76\x65\x64\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x58\x31\x54\x4a\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x70\x6f\x72\x74\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x0a\x58\x31\x54\x4a\x30\xc4\x30\xfc\x30\xeb\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0e\x52\x65\x70\x6f\x72\x74\x69\x6e\x67\x20\
\x54\x6f\x6f\x6c\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x08\x51\x8d\x95\x8b\x30\x59\x30\x8b\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x73\x75\x6d\x65\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x06\x4f\x1a\x8b\x70\x5b\xa4\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x4f\x1a\x8b\x70\
\x5b\xa4\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x52\x6f\
\x6f\x6d\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x1a\x30\xe1\x30\xa4\x30\xf3\x30\xa6\x30\
\xa3\x30\xf3\x30\xc9\x30\xa6\x30\x92\x88\x68\x79\x3a\x30\x59\x30\
\x8b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x53\x68\x6f\x77\x20\
\x4d\x61\x69\x6e\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x6f\
\x14\x80\x05\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\
\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x30\xb9\x30\xbf\x30\
\xf3\x30\xd0\x30\xa4\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x53\
\x74\x61\x6e\x64\x62\x79\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x50\x5c\x6b\x62\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x04\x53\x74\x6f\x70\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\
\x30\xc8\x30\xfc\x30\xaf\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\
\x54\x61\x6c\x6b\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x06\x66\x42\x52\x3b\x00\x3a\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x30\xbf\x30\xa4\x30\xc8\x30\xeb\x00\x3a\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x06\x54\x69\x74\x6c\x65\x3a\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x14\x00\
\x43\x00\x53\x00\x56\x30\x67\x51\xfa\x52\x9b\x00\x28\x00\x26\x00\
\x45\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\x45\x78\
\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\x00\x0f\
\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x1c\x30\xc7\x30\xfc\x30\xbf\x30\xd9\x30\xfc\x30\
\xb9\x30\x92\x52\x4a\x96\x64\x30\x57\x30\x7e\x30\x59\x30\x4b\x00\
\x3f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\
\x6f\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\
\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\
\x3f\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x51\x68\x52\x4a\x96\
\x64\x30\x59\x30\x8b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\
\x6c\x65\x61\x72\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x16\x30\xc7\
\x30\xfc\x30\xbf\x30\xd9\x30\xfc\x30\xb9\x30\x92\x52\x4a\x96\x64\
\x30\x59\x30\x8b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x43\x6c\
\x65\x61\x72\x20\x44\x61\x74\x61\x62\x61\x73\x65\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x06\x95\x89\x30\x58\x30\x8b\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0f\
\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x06\x8a\xac\x66\x0e\x00\x3a\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0c\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\
\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x30\xa4\x30\xd9\x30\
\xf3\x30\xc8\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x45\
\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x20\x00\
\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\
\x20\x58\x31\x54\x4a\x00\x20\x30\xa8\x30\xc7\x30\xa3\x30\xbf\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x16\x46\x72\x65\x65\x73\x65\x65\
\x72\x20\x52\x65\x70\x6f\x72\x74\x20\x45\x64\x69\x74\x6f\x72\x07\
\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x08\x30\xec\x30\xd9\x30\xeb\x00\
\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x4c\x65\x76\x65\x6c\
\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x52\x4a\x96\x64\x30\
\x59\x30\x8b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\
\x6f\x76\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x4f\x1a\x8b\
\x70\x5b\xa4\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x52\
\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x30\xd5\
\x30\xa1\x30\xa4\x30\xeb\x30\x92\x90\x78\x62\x9e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0b\x53\x65\x6c\x65\x63\x74\x20\x46\x69\x6c\
\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\x6f\x14\x80\x05\x00\
\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x70\x65\x61\x6b\
\x65\x72\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\x66\x42\x52\
\x3b\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x6d\
\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x30\xbf\x30\xa4\
\x30\xc8\x30\xeb\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\
\x54\x69\x74\x6c\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x14\
\x00\x43\x00\x53\x00\x56\x30\x67\x51\xfa\x52\x9b\x00\x28\x00\x26\
\x00\x45\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\x45\
\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\x00\
\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x1c\x30\xc7\x30\xfc\x30\xbf\x30\xd9\x30\xfc\x30\xb9\
\x30\x92\x52\x4a\x96\x64\x30\x57\x30\x7e\x30\x59\x30\x4b\x00\x3f\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\x6f\
\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\x20\
\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\x3f\
\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x04\x65\xe5\x4e\xd8\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\x0d\x54\
\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x08\x30\xa4\x30\xd9\x30\xf3\x30\xc8\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\x00\x00\x0d\x54\x61\
\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x22\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\
\x72\x00\x20\x30\xc8\x30\xfc\x30\xaf\x00\x20\x30\xa8\x30\xc7\x30\
\xa3\x30\xbf\x08\x00\x00\x00\x00\x06\x00\x00\x00\x14\x46\x72\x65\
\x65\x73\x65\x65\x72\x20\x54\x61\x6c\x6b\x20\x45\x64\x69\x74\x6f\
\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x30\xd7\x30\xec\x30\xbc\x30\
\xf3\x30\xbf\x30\xfc\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x50\
\x72\x65\x73\x65\x6e\x74\x65\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\
\x52\x4a\x96\x64\x30\x59\x30\x8b\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x06\x52\x65\x6d\x6f\x76\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\
\x4f\x1a\x8b\x70\x5b\xa4\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\
\x52\x6f\x6f\x6d\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\x66\x42\x52\x3b\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x54\x69\x6d\x65\x07\x00\
\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x08\x30\xbf\x30\xa4\x30\xc8\x30\xeb\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x74\x6c\x65\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x06\x65\xe5\x67\x2c\x8a\x9e\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x15\x4c\x61\x6e\x67\x75\x61\x67\x65\x20\x44\x69\
\x73\x70\x6c\x61\x79\x20\x54\x65\x78\x74\x07\x00\x00\x00\x0b\x54\
\x72\x61\x6e\x73\x6c\x61\x74\x69\x6f\x6e\x01\x03\x00\x00\x00\x04\
\x97\xf3\x6e\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x53\x6f\
\x75\x72\x63\x65\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\
\x61\x75\x64\x69\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\
\x68\x01\x03\x00\x00\x00\x0e\x30\xd5\x30\xa3\x30\xfc\x30\xc9\x30\
\xd0\x30\xc3\x30\xaf\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x46\
\x65\x65\x64\x62\x61\x63\x6b\x07\x00\x00\x00\x14\x70\x6c\x75\x67\
\x69\x6e\x2d\x61\x75\x64\x69\x6f\x66\x65\x65\x64\x62\x61\x63\x6b\
\x01\x03\x00\x00\x00\x12\x30\xc7\x30\xb9\x30\xaf\x30\xc8\x30\xc3\
\x30\xd7\x30\x92\x8a\x18\x93\x32\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0e\x52\x65\x63\x6f\x72\x64\x20\x44\x65\x73\x6b\x74\x6f\x70\
\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\
\x74\x6f\x70\x01\x03\x00\x00\x00\x0c\x30\xd1\x30\xfc\x30\xc8\x30\
\x92\x8a\x18\x93\x32\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x52\
\x65\x63\x6f\x72\x64\x20\x52\x65\x67\x69\x6f\x6e\x07\x00\x00\x00\
\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\x74\x6f\x70\x01\
\x03\x00\x00\x00\x0a\x75\x3b\x97\x62\x30\x92\x8a\x18\x93\x32\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x06\x53\x63\x72\x65\x65\x6e\x07\
\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\x74\
\x6f\x70\x01\x03\x00\x00\x00\x0a\x30\xd3\x30\xc7\x30\xaa\x88\xc5\
\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\x56\x69\x64\x65\
\x6f\x20\x44\x65\x76\x69\x63\x65\x07\x00\x00\x00\x0f\x70\x6c\x75\
\x67\x69\x6e\x2d\x66\x69\x72\x65\x77\x69\x72\x65\x01\x03\x00\x00\
\x00\x04\x00\x49\x00\x50\x08\x00\x00\x00\x00\x06\x00\x00\x00\x02\
\x49\x50\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\x63\
\x65\x63\x61\x73\x74\x01\x03\x00\x00\x00\x08\x30\xde\x30\xa6\x30\
\xf3\x30\xc8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x4d\x6f\x75\
\x6e\x74\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\x63\
\x65\x63\x61\x73\x74\x01\x03\x00\x00\x00\x0a\x30\xd1\x30\xb9\x30\
\xef\x30\xfc\x30\xc9\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x50\
\x61\x73\x73\x77\x6f\x72\x64\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\
\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\x00\x06\
\x30\xdd\x30\xfc\x30\xc8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\
\x50\x6f\x72\x74\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\
\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\x00\x0c\x30\xaf\x30\
\xe9\x30\xa4\x30\xa2\x30\xf3\x30\xc8\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x43\x6c\x69\x65\x6e\x74\x07\x00\x00\x00\x10\x70\x6c\
\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\
\x00\x00\x00\x0e\x30\xaf\x30\xe9\x30\xa4\x30\xa2\x30\xf3\x30\xc8\
\x54\x0d\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x43\x6c\x69\x65\
\x6e\x74\x20\x4e\x61\x6d\x65\x07\x00\x00\x00\x10\x70\x6c\x75\x67\
\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\x00\x00\
\x00\x08\x30\xb3\x30\xcd\x30\xaf\x30\xc8\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x07\x43\x6f\x6e\x6e\x65\x63\x74\x07\x00\x00\x00\x10\
\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\x69\x6f\
\x01\x03\x00\x00\x00\x08\x30\xb5\x30\xfc\x30\xd0\x30\xfc\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x53\x65\x72\x76\x65\x72\x07\x00\
\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\
\x64\x69\x6f\x01\x03\x00\x00\x00\x08\x97\xf3\x6e\x90\x00\x20\x00\
\x31\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x6f\x75\x72\x63\
\x65\x20\x31\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6d\
\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x08\x97\
\xf3\x6e\x90\x00\x20\x00\x32\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x08\x53\x6f\x75\x72\x63\x65\x20\x32\x07\x00\x00\x00\x11\x70\x6c\
\x75\x67\x69\x6e\x2d\x6d\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\
\x03\x00\x00\x00\x0e\x30\xaa\x30\xfc\x30\xc7\x30\xa3\x30\xaa\x97\
\xf3\x8c\xea\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x41\x75\x64\
\x69\x6f\x20\x51\x75\x61\x6c\x69\x74\x79\x07\x00\x00\x00\x11\x70\
\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\x74\x70\x75\x74\
\x01\x03\x00\x00\x00\x20\x00\x58\x00\x4d\x00\x4c\x5f\x62\x5f\x0f\
\x30\x6e\x30\xe1\x30\xbf\x30\xc7\x30\xfc\x30\xbf\x30\x92\x75\x1f\
\x62\x10\x30\x59\x30\x8b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x2b\
\x47\x65\x6e\x65\x72\x61\x74\x65\x73\x20\x4d\x61\x74\x74\x65\x72\
\x68\x6f\x72\x6e\x20\x4d\x65\x74\x61\x64\x61\x74\x61\x20\x69\x6e\
\x20\x58\x4d\x4c\x20\x66\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\x11\
\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\x74\x70\x75\
\x74\x01\x03\x00\x00\x00\x1a\x30\xde\x30\xc3\x30\xbf\x30\xfc\x30\
\xdb\x30\xeb\x30\xf3\x00\x20\x30\xe1\x30\xbf\x30\xc7\x30\xfc\x30\
\xbf\x08\x00\x00\x00\x00\x06\x00\x00\x00\x13\x4d\x61\x74\x74\x65\
\x72\x68\x6f\x72\x6e\x20\x4d\x65\x74\x61\x64\x61\x74\x61\x07\x00\
\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\
\x74\x70\x75\x74\x01\x03\x00\x00\x00\x0a\x30\xd3\x30\xc7\x30\xaa\
\x75\x3b\x8c\xea\x08\x00\x00\x00\x00\x06\x00\x00\x00\x14\x56\x69\
\x64\x65\x6f\x20\x51\x75\x61\x6c\x69\x74\x79\x20\x28\x6b\x62\x2f\
\x73\x29\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\
\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x0e\x30\xe1\
\x30\xa4\x30\xf3\x30\x6e\x30\xbd\x30\xfc\x30\xb9\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0b\x4d\x61\x69\x6e\x20\x53\x6f\x75\x72\x63\
\x65\x07\x00\x00\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x70\x69\x70\
\x01\x03\x00\x00\x00\x0e\x00\x50\x00\x49\x00\x50\x00\x20\x30\xbd\
\x30\xfc\x30\xb9\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x50\x49\
\x50\x20\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x0a\x70\x6c\x75\
\x67\x69\x6e\x2d\x70\x69\x70\x01\x03\x00\x00\x00\x04\x97\xf3\x6e\
\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x53\x6f\x75\x72\x63\
\x65\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x70\x75\x6c\
\x73\x65\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x0a\x30\xd3\x30\
\xc7\x30\xaa\x88\xc5\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x0c\x56\x69\x64\x65\x6f\x20\x44\x65\x76\x69\x63\x65\x07\x00\x00\
\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x75\x73\x62\x01\x03\x00\x00\
\x00\x12\x30\xab\x30\xe9\x30\xfc\x30\xd5\x30\xa9\x30\xfc\x30\xde\
\x30\xc3\x30\xc8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x43\x6f\
\x6c\x6f\x75\x72\x20\x46\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\x18\
\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x2d\x70\x61\x73\
\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\x00\x00\x00\x0e\x30\xd5\
\x30\xec\x30\xfc\x30\xe0\x30\xec\x30\xfc\x30\xc8\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x09\x46\x72\x61\x6d\x65\x72\x61\x74\x65\x07\
\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\
\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\x00\x00\
\x00\x0a\x30\xd3\x30\xc7\x30\xaa\x51\x65\x52\x9b\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\
\x74\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\
\x00\x00\x00\x0e\x30\xd3\x30\xc7\x30\xaa\x30\xb9\x30\xb1\x30\xfc\
\x30\xeb\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\
\x6f\x20\x53\x63\x61\x6c\x65\x07\x00\x00\x00\x18\x70\x6c\x75\x67\
\x69\x6e\x2d\x76\x69\x64\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\
\x6f\x75\x67\x68\x01\x03\x00\x00\x00\x16\x00\x4c\x00\x65\x00\x61\
\x00\x6b\x00\x79\x00\x20\x00\x51\x00\x75\x00\x65\x00\x75\x00\x65\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x4c\x65\x61\x6b\x79\x20\
\x51\x75\x65\x75\x65\x07\x00\x00\x00\x13\x70\x6c\x75\x67\x69\x6e\
\x2d\x76\x69\x64\x65\x6f\x70\x72\x65\x76\x69\x65\x77\x01\x03\x00\
\x00\x00\x0a\x30\xd7\x30\xec\x30\xd3\x30\xe5\x30\xfc\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x07\x50\x72\x65\x76\x69\x65\x77\x07\x00\
\x00\x00\x13\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x70\
\x72\x65\x76\x69\x65\x77\x01\x03\x00\x00\x00\x20\x30\xe9\x30\xa4\
\x30\xd6\x00\x20\x30\xd3\x30\xc7\x30\xaa\x00\x20\x30\xbd\x30\xfc\
\x30\xb9\x30\x68\x30\x57\x30\x66\x50\xcd\x30\x4f\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x1a\x41\x63\x74\x20\x61\x73\x20\x61\x20\x6c\
\x69\x76\x65\x20\x76\x69\x64\x65\x6f\x20\x73\x6f\x75\x72\x63\x65\
\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\
\x6f\x74\x65\x73\x74\x01\x03\x00\x00\x00\x16\x30\xe9\x30\xa4\x30\
\xd6\x00\x20\x30\xd3\x30\xc7\x30\xaa\x00\x20\x30\xbd\x30\xfc\x30\
\xb9\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x4c\x69\x76\x65\x20\
\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\
\x6e\x2d\x76\x69\x64\x65\x6f\x74\x65\x73\x74\x01\x03\x00\x00\x00\
\x08\x30\xd1\x30\xbf\x30\xfc\x30\xf3\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x07\x50\x61\x74\x74\x65\x72\x6e\x07\x00\x00\x00\x10\x70\
\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x74\x65\x73\x74\x01\
\x03\x00\x00\x00\x54\x00\x52\x00\x54\x00\x4d\x00\x50\x30\xb9\x30\
\xc8\x30\xea\x30\xfc\x30\xdf\x30\xf3\x30\xb0\x30\x6e\x58\x34\x54\
\x08\x30\x01\x4e\xd6\x30\x6e\x30\x59\x30\x79\x30\x66\x30\x6e\x51\
\xfa\x52\x9b\x30\x6f\x30\x01\x00\x6c\x00\x65\x00\x61\x00\x6b\x00\
\x79\x00\x20\x8a\x2d\x5b\x9a\x30\x59\x30\x8b\x5f\xc5\x89\x81\x30\
\x4c\x30\x42\x30\x8a\x30\x7e\x30\x59\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x3b\x2a\x46\x6f\x72\x20\x52\x54\x4d\x50\x20\x73\x74\x72\
\x65\x61\x6d\x69\x6e\x67\x2c\x20\x61\x6c\x6c\x20\x6f\x74\x68\x65\
\x72\x20\x6f\x75\x74\x70\x75\x74\x73\x20\x6d\x75\x73\x74\x20\x62\
\x65\x20\x73\x65\x74\x20\x74\x6f\x20\x6c\x65\x61\x6b\x79\x07\x00\
\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\x00\x00\x96\x53\xc2\x71\
\x67\x00\x3a\x00\x20\x00\x68\x00\x74\x00\x74\x00\x70\x00\x3a\x00\
\x2f\x00\x2f\x00\x77\x00\x77\x00\x77\x00\x2e\x00\x6a\x00\x75\x00\
\x73\x00\x74\x00\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x00\x2f\x00\
\x62\x00\x72\x00\x6f\x00\x61\x00\x64\x00\x63\x00\x61\x00\x73\x00\
\x74\x00\x2f\x00\x61\x00\x64\x00\x76\x00\x5f\x00\x6f\x00\x74\x00\
\x68\x00\x65\x00\x72\x00\x0a\x30\xb9\x30\xc8\x30\xea\x30\xfc\x30\
\xdf\x30\xf3\x30\xb0\x30\xad\x30\xfc\x30\x92\x51\x65\x62\x4b\x30\
\x59\x30\x8b\x30\x6b\x30\x6f\x30\x01\x30\xed\x30\xb0\x30\xa4\x30\
\xf3\x30\x59\x30\x8b\x5f\xc5\x89\x81\x30\x4c\x30\x42\x30\x8a\x30\
\x7e\x30\x59\x08\x00\x00\x00\x00\x06\x00\x00\x00\x61\x2a\x53\x65\
\x65\x3a\x20\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x6a\x75\
\x73\x74\x69\x6e\x2e\x74\x76\x2f\x62\x72\x6f\x61\x64\x63\x61\x73\
\x74\x2f\x61\x64\x76\x5f\x6f\x74\x68\x65\x72\x0a\x59\x6f\x75\x20\
\x6d\x75\x73\x74\x20\x62\x65\x20\x6c\x6f\x67\x67\x65\x64\x20\x69\
\x6e\x20\x74\x6f\x20\x6f\x62\x74\x61\x69\x6e\x20\x79\x6f\x75\x72\
\x20\x53\x74\x72\x65\x61\x6d\x69\x6e\x67\x20\x4b\x65\x79\x07\x00\
\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\x00\x00\xce\x8a\x8d\x53\
\xef\x00\x55\x00\x52\x00\x4c\x30\x6f\x30\x01\x30\x42\x30\x6a\x30\
\x5f\x30\x6e\x30\xd6\x30\xe9\x30\xa6\x30\xb6\x30\xfc\x30\x67\x95\
\x8b\x30\x4b\x30\x8c\x30\x6a\x30\x51\x30\x8c\x30\x70\x30\x6a\x30\
\x8a\x30\x7e\x30\x5b\x30\x93\x30\x67\x30\x57\x30\x5f\x00\x2e\x00\
\x0a\x54\x26\x5b\x9a\x30\x6e\x58\x34\x54\x08\x30\x01\x30\x42\x30\
\x6a\x30\x5f\x30\x6e\x00\x20\x00\x6a\x00\x75\x00\x73\x00\x74\x00\
\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x00\x20\x30\xc1\x30\xe3\x30\
\xf3\x30\xcd\x30\xeb\x30\x92\x90\x4b\x55\xb6\x30\x59\x30\x8b\x30\
\x5f\x30\x81\x30\x6b\x00\x66\x00\x72\x00\x65\x00\x65\x00\x73\x00\
\x65\x00\x65\x00\x72\x30\x92\x8a\x31\x30\x59\x30\x5f\x30\x81\x30\
\x6b\x4e\xe5\x4e\x0b\x30\x6e\x00\x55\x00\x52\x00\x4c\x30\x92\x95\
\x8b\x30\x4d\x30\x6b\x88\x4c\x30\x63\x30\x66\x30\x4f\x30\x60\x30\
\x55\x30\x44\x00\x2e\x00\x0a\x00\x25\x00\x31\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x91\x41\x6e\x20\x61\x75\x74\x68\x6f\x72\x69\x7a\
\x61\x74\x69\x6f\x6e\x20\x55\x52\x4c\x20\x73\x68\x6f\x75\x6c\x64\
\x20\x68\x61\x76\x65\x20\x6f\x70\x65\x6e\x65\x64\x20\x69\x6e\x20\
\x79\x6f\x75\x72\x20\x62\x72\x6f\x77\x73\x65\x72\x2e\x0a\x49\x66\
\x20\x6e\x6f\x74\x2c\x20\x67\x6f\x20\x6f\x70\x65\x6e\x20\x74\x68\
\x65\x20\x66\x6f\x6c\x6c\x6f\x77\x69\x6e\x67\x20\x55\x52\x4c\x20\
\x74\x6f\x20\x61\x6c\x6c\x6f\x77\x20\x66\x72\x65\x65\x73\x65\x65\
\x72\x20\x74\x6f\x20\x6d\x61\x6e\x61\x67\x65\x20\x79\x6f\x75\x72\
\x20\x6a\x75\x73\x74\x69\x6e\x2e\x74\x76\x20\x63\x68\x61\x6e\x6e\
\x65\x6c\x2e\x0a\x25\x31\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\
\x03\x00\x00\x00\x5c\x8a\x8d\x8a\x3c\x30\x6f\x59\x31\x65\x57\x30\
\x57\x30\x7e\x30\x57\x30\x5f\x30\x02\x00\x4a\x00\x75\x00\x73\x00\
\x74\x00\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x30\x6e\x30\x5f\x30\
\x81\x30\x6e\x4f\x9b\x7d\x66\x30\x55\x30\x8c\x30\x5f\x8a\x3c\x66\
\x0e\x66\xf8\x30\x6f\x30\x01\x8a\xa4\x30\x63\x30\x66\x30\x44\x30\
\x8b\x58\x34\x54\x08\x30\x4c\x30\x42\x30\x8a\x30\x7e\x30\x59\x30\
\x02\x08\x00\x00\x00\x00\x06\x00\x00\x00\x4b\x41\x75\x74\x68\x65\
\x6e\x74\x69\x63\x61\x74\x69\x6f\x6e\x20\x66\x61\x69\x6c\x65\x64\
\x2e\x20\x53\x75\x70\x70\x6c\x69\x65\x64\x20\x63\x72\x65\x64\x65\
\x6e\x74\x69\x61\x6c\x73\x20\x66\x6f\x72\x20\x4a\x75\x73\x74\x69\
\x6e\x2e\x74\x76\x20\x6d\x61\x79\x20\x62\x65\x20\x69\x6e\x63\x6f\
\x72\x72\x65\x63\x74\x2e\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\
\x03\x00\x00\x00\x2a\x00\x6a\x00\x75\x00\x73\x00\x74\x00\x69\x00\
\x6e\x00\x2e\x00\x74\x00\x76\x00\x20\x30\x6e\x30\xab\x30\xb9\x30\
\xbf\x30\xe0\x8a\x2d\x5b\x9a\x30\x92\x4e\x0a\x66\xf8\x30\x4d\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x27\x4f\x76\x65\x72\x77\x72\x69\
\x74\x65\x20\x63\x75\x73\x74\x6f\x6d\x20\x73\x65\x74\x74\x69\x6e\
\x67\x73\x20\x66\x6f\x72\x20\x6a\x75\x73\x74\x69\x6e\x2e\x74\x76\
\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\
\x00\x00\x18\xbe\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x01\xf8\x00\x04\xa8\xa5\x00\x00\x0d\x9e\x00\x04\xa8\xa5\
\x00\x00\x14\x77\x00\x05\x96\x5d\x00\x00\x10\x60\x00\x05\x96\x5d\
\x00\x00\x15\xcf\x00\x05\xa8\x2b\x00\x00\x11\x49\x00\x05\xab\x60\
\x00\x00\x11\x19\x00\x05\xb0\x35\x00\x00\x15\xfd\x00\x2a\xd0\x25\
\x00\x00\x0c\x18\x00\x2a\xec\x30\x00\x00\x0c\x4d\x00\x2b\x8c\x04\
\x00\x00\x0c\xaf\x00\x3c\xdc\x74\x00\x00\x07\xcd\x00\x48\x85\x72\
\x00\x00\x08\x11\x00\x4a\x2b\x82\x00\x00\x12\x77\x00\x4a\x36\x95\
\x00\x00\x00\x00\x00\x4a\x36\x95\x00\x00\x08\x53\x00\x4a\x36\x95\
\x00\x00\x0d\x6d\x00\x4a\x36\x95\x00\x00\x13\x06\x00\x4c\xcc\x54\
\x00\x00\x0d\xca\x00\x4c\xcc\x54\x00\x00\x14\xa7\x00\x4f\xb2\x7e\
\x00\x00\x0f\x07\x00\x56\x8c\x95\x00\x00\x0f\x40\x00\x59\xcb\xc0\
\x00\x00\x0a\xd2\x00\x5b\x0b\x25\x00\x00\x16\x2b\x00\x89\x67\x25\
\x00\x00\x08\x88\x00\xb2\x0d\x89\x00\x00\x06\xfa\x00\xff\x11\x49\
\x00\x00\x06\x9e\x01\x1c\xb5\xc2\x00\x00\x07\x8a\x01\x30\xf4\x02\
\x00\x00\x0b\x0d\x02\x89\xdc\xc7\x00\x00\x0e\xad\x02\xa7\x96\xc4\
\x00\x00\x0b\xd6\x02\xf0\x16\xfe\x00\x00\x03\x15\x03\x08\xa7\x7e\
\x00\x00\x00\x7b\x04\x18\xa4\x4f\x00\x00\x11\xd1\x04\x18\xa4\x4f\
\x00\x00\x13\xd3\x04\x3b\xa8\x09\x00\x00\x0c\xe4\x04\x42\x63\x15\
\x00\x00\x08\xd4\x05\x6c\xb7\xc4\x00\x00\x0a\x15\x05\x8b\x7b\xbe\
\x00\x00\x0f\x73\x05\x8b\xa6\x84\x00\x00\x0f\xa5\x05\x8c\x46\xc5\
\x00\x00\x13\x3d\x05\x8c\x46\xc5\x00\x00\x15\x91\x05\x8c\xac\x35\
\x00\x00\x10\x2a\x05\x9c\x42\xee\x00\x00\x0d\xff\x06\x7b\x08\xe3\
\x00\x00\x0d\x39\x06\x8d\x3a\x43\x00\x00\x09\xd0\x07\x3b\xe0\x03\
\x00\x00\x0a\x4b\x08\x4e\x9c\xf5\x00\x00\x0c\x7c\x08\x5d\xf8\xa2\
\x00\x00\x14\xe0\x08\xee\x26\x24\x00\x00\x16\x5c\x0a\x1f\xc8\x95\
\x00\x00\x12\xb0\x0a\xa8\x4a\xc9\x00\x00\x10\xe4\x0b\x66\x23\x46\
\x00\x00\x11\x79\x0b\x66\x23\x46\x00\x00\x13\x7d\x0c\x3b\x98\x64\
\x00\x00\x0b\x50\x0c\x47\xc1\x62\x00\x00\x0b\x94\x0c\x8a\xac\x07\
\x00\x00\x10\x8a\x0c\x9c\x0d\x42\x00\x00\x15\x50\x0c\xc9\xa0\x0e\
\x00\x00\x07\x57\x0c\xfb\x29\xd4\x00\x00\x00\x33\x0d\x33\xd9\xec\
\x00\x00\x09\x30\x0d\xc4\xc8\x3c\x00\x00\x09\x97\x0e\x39\x74\x39\
\x00\x00\x0a\x82\x0e\x74\x68\x5e\x00\x00\x0f\xd7\x69\x00\x00\x16\
\xa5\x03\x00\x00\x00\x0e\x00\x53\x00\x6c\x00\x75\x00\x69\x00\x74\
\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\
\x6f\x73\x65\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\
\x6c\x6f\x67\x01\x03\x00\x00\x00\x1a\x00\x4f\x00\x76\x00\x65\x00\
\x72\x00\x20\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\
\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x46\x72\x65\
\x65\x73\x65\x65\x72\x20\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\
\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x01\
\xb4\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\
\x72\x00\x20\x00\x69\x00\x73\x00\x20\x00\x65\x00\x65\x00\x6e\x00\
\x20\x00\x76\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x2d\x00\x63\x00\
\x61\x00\x70\x00\x74\x00\x75\x00\x72\x00\x65\x00\x20\x00\x63\x00\
\x6f\x00\x6d\x00\x70\x00\x75\x00\x74\x00\x65\x00\x72\x00\x70\x00\
\x72\x00\x6f\x00\x67\x00\x72\x00\x61\x00\x6d\x00\x6d\x00\x61\x00\
\x20\x00\x76\x00\x6f\x00\x6f\x00\x72\x00\x20\x00\x68\x00\x65\x00\
\x74\x00\x20\x00\x64\x00\x69\x00\x67\x00\x69\x00\x74\x00\x61\x00\
\x6c\x00\x65\x00\x20\x00\x6f\x00\x70\x00\x6e\x00\x61\x00\x6d\x00\
\x65\x00\x20\x00\x76\x00\x61\x00\x6e\x00\x20\x00\x70\x00\x72\x00\
\x65\x00\x73\x00\x65\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x69\x00\
\x65\x00\x73\x00\x2e\x00\x20\x00\x48\x00\x65\x00\x74\x00\x20\x00\
\x76\x00\x61\x00\x6e\x00\x67\x00\x74\x00\x20\x00\x76\x00\x69\x00\
\x64\x00\x65\x00\x6f\x00\x2d\x00\x62\x00\x72\x00\x6f\x00\x6e\x00\
\x6e\x00\x65\x00\x6e\x00\x20\x00\x7a\x00\x6f\x00\x61\x00\x6c\x00\
\x73\x00\x20\x00\x75\x00\x73\x00\x62\x00\x2c\x00\x20\x00\x66\x00\
\x69\x00\x72\x00\x65\x00\x77\x00\x69\x00\x72\x00\x65\x00\x2c\x00\
\x20\x00\x6f\x00\x66\x00\x20\x00\x6c\x00\x6f\x00\x6b\x00\x61\x00\
\x6c\x00\x65\x00\x20\x00\x62\x00\x75\x00\x72\x00\x65\x00\x61\x00\
\x75\x00\x62\x00\x6c\x00\x61\x00\x64\x00\x20\x00\x73\x00\x61\x00\
\x6d\x00\x65\x00\x6e\x00\x20\x00\x6d\x00\x65\x00\x74\x00\x20\x00\
\x61\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x2d\x00\x65\x00\x6e\x00\
\x20\x00\x6d\x00\x65\x00\x6e\x00\x67\x00\x74\x00\x20\x00\x7a\x00\
\x65\x00\x20\x00\x73\x00\x61\x00\x6d\x00\x65\x00\x6e\x00\x20\x00\
\x6f\x00\x6d\x00\x20\x00\x65\x00\x65\x00\x6e\x00\x20\x00\x76\x00\
\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\x74\x00\x65\x00\x20\x00\
\x70\x00\x72\x00\x6f\x00\x64\x00\x75\x00\x63\x00\x65\x00\x72\x00\
\x65\x00\x6e\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\xc6\x46\
\x72\x65\x65\x73\x65\x65\x72\x20\x69\x73\x20\x61\x20\x76\x69\x64\
\x65\x6f\x20\x63\x61\x70\x74\x75\x72\x65\x20\x75\x74\x69\x6c\x69\
\x74\x79\x20\x63\x61\x70\x61\x62\x6c\x65\x20\x6f\x66\x20\x63\x61\
\x70\x74\x75\x72\x69\x6e\x67\x20\x70\x72\x65\x73\x65\x6e\x74\x61\
\x74\x69\x6f\x6e\x73\x2e\x20\x49\x74\x20\x63\x61\x70\x74\x75\x72\
\x65\x73\x20\x76\x69\x64\x65\x6f\x20\x73\x6f\x75\x72\x63\x65\x73\
\x20\x73\x75\x63\x68\x20\x61\x73\x20\x75\x73\x62\x2c\x20\x66\x69\
\x72\x65\x77\x69\x72\x65\x2c\x20\x6f\x72\x20\x6c\x6f\x63\x61\x6c\
\x20\x64\x65\x73\x6b\x74\x6f\x70\x20\x61\x6c\x6f\x6e\x67\x20\x77\
\x69\x74\x68\x20\x61\x75\x64\x69\x6f\x20\x61\x6e\x64\x20\x6d\x69\
\x78\x65\x73\x20\x74\x68\x65\x6d\x20\x74\x6f\x67\x65\x74\x68\x65\
\x72\x20\x74\x6f\x20\x70\x72\x6f\x64\x75\x63\x65\x20\x61\x20\x76\
\x69\x64\x65\x6f\x2e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\
\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x02\x8e\x00\x46\x00\x72\x00\
\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x69\x00\
\x73\x00\x20\x00\x75\x00\x69\x00\x74\x00\x67\x00\x65\x00\x62\x00\
\x72\x00\x61\x00\x63\x00\x68\x00\x74\x00\x20\x00\x6f\x00\x6e\x00\
\x64\x00\x65\x00\x72\x00\x20\x00\x64\x00\x65\x00\x20\x00\x47\x00\
\x4e\x00\x55\x00\x20\x00\x47\x00\x65\x00\x6e\x00\x65\x00\x72\x00\
\x61\x00\x6c\x00\x20\x00\x50\x00\x75\x00\x62\x00\x6c\x00\x69\x00\
\x63\x00\x20\x00\x4c\x00\x69\x00\x63\x00\x65\x00\x6e\x00\x73\x00\
\x65\x00\x20\x00\x28\x00\x47\x00\x50\x00\x4c\x00\x29\x00\x20\x00\
\x76\x00\x65\x00\x72\x00\x73\x00\x69\x00\x65\x00\x20\x00\x33\x00\
\x2e\x00\x20\x00\x44\x00\x65\x00\x7a\x00\x65\x00\x20\x00\x53\x00\
\x6f\x00\x66\x00\x74\x00\x77\x00\x61\x00\x72\x00\x65\x00\x20\x00\
\x77\x00\x6f\x00\x72\x00\x64\x00\x74\x00\x20\x00\x67\x00\x65\x00\
\x6c\x00\x65\x00\x76\x00\x65\x00\x72\x00\x64\x00\x20\x00\x27\x00\
\x7a\x00\x6f\x00\x61\x00\x6c\x00\x73\x00\x20\x00\x64\x00\x65\x00\
\x7a\x00\x65\x00\x20\x00\x69\x00\x73\x00\x27\x00\x20\x00\x7a\x00\
\x6f\x00\x6e\x00\x64\x00\x65\x00\x72\x00\x20\x00\x65\x00\x6e\x00\
\x69\x00\x67\x00\x65\x00\x20\x00\x75\x00\x69\x00\x74\x00\x64\x00\
\x72\x00\x75\x00\x6b\x00\x6b\x00\x65\x00\x6c\x00\x69\x00\x6a\x00\
\x6b\x00\x20\x00\x76\x00\x65\x00\x72\x00\x6d\x00\x65\x00\x6c\x00\
\x64\x00\x65\x00\x20\x00\x6f\x00\x66\x00\x20\x00\x67\x00\x65\x00\
\xef\x00\x6d\x00\x70\x00\x6c\x00\x69\x00\x63\x00\x65\x00\x65\x00\
\x72\x00\x64\x00\x65\x00\x20\x00\x67\x00\x61\x00\x72\x00\x61\x00\
\x6e\x00\x74\x00\x69\x00\x65\x00\x2e\x00\x20\x00\x4f\x00\x6e\x00\
\x64\x00\x65\x00\x72\x00\x20\x00\x67\x00\x65\x00\x65\x00\x6e\x00\
\x20\x00\x76\x00\x6f\x00\x6f\x00\x72\x00\x77\x00\x61\x00\x61\x00\
\x72\x00\x64\x00\x65\x00\x20\x00\x7a\x00\x75\x00\x6c\x00\x6c\x00\
\x65\x00\x6e\x00\x20\x00\x64\x00\x65\x00\x20\x00\x61\x00\x75\x00\
\x74\x00\x65\x00\x75\x00\x72\x00\x73\x00\x20\x00\x76\x00\x65\x00\
\x72\x00\x61\x00\x6e\x00\x74\x00\x77\x00\x6f\x00\x6f\x00\x72\x00\
\x64\x00\x65\x00\x6c\x00\x69\x00\x6a\x00\x6b\x00\x20\x00\x77\x00\
\x6f\x00\x72\x00\x64\x00\x65\x00\x6e\x00\x20\x00\x67\x00\x65\x00\
\x68\x00\x6f\x00\x75\x00\x64\x00\x65\x00\x6e\x00\x20\x00\x76\x00\
\x6f\x00\x6f\x00\x72\x00\x20\x00\x65\x00\x6e\x00\x69\x00\x67\x00\
\x65\x00\x20\x00\x73\x00\x63\x00\x68\x00\x61\x00\x64\x00\x65\x00\
\x20\x00\x77\x00\x65\x00\x6c\x00\x6b\x00\x65\x00\x20\x00\x76\x00\
\x6f\x00\x6f\x00\x72\x00\x74\x00\x76\x00\x6c\x00\x6f\x00\x65\x00\
\x69\x00\x74\x00\x20\x00\x75\x00\x69\x00\x74\x00\x20\x00\x68\x00\
\x65\x00\x74\x00\x20\x00\x67\x00\x65\x00\x62\x00\x72\x00\x75\x00\
\x69\x00\x6b\x00\x20\x00\x76\x00\x61\x00\x6e\x00\x20\x00\x64\x00\
\x65\x00\x7a\x00\x65\x00\x20\x00\x53\x00\x6f\x00\x66\x00\x74\x00\
\x77\x00\x61\x00\x72\x00\x65\x00\x2e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\xdb\x46\x72\x65\x65\x73\x65\x65\x72\x20\x69\x73\x20\x6c\
\x69\x63\x65\x6e\x73\x65\x64\x20\x75\x6e\x64\x65\x72\x20\x74\x68\
\x65\x20\x47\x50\x4c\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x33\x2e\
\x20\x54\x68\x69\x73\x20\x73\x6f\x66\x74\x77\x61\x72\x65\x20\x69\
\x73\x20\x70\x72\x6f\x76\x69\x64\x65\x64\x20\x27\x61\x73\x2d\x69\
\x73\x27\x2c\x77\x69\x74\x68\x6f\x75\x74\x20\x61\x6e\x79\x20\x65\
\x78\x70\x72\x65\x73\x73\x20\x6f\x72\x20\x69\x6d\x70\x6c\x69\x65\
\x64\x20\x77\x61\x72\x72\x61\x6e\x74\x79\x2e\x20\x49\x6e\x20\x6e\
\x6f\x20\x65\x76\x65\x6e\x74\x20\x77\x69\x6c\x6c\x20\x74\x68\x65\
\x20\x61\x75\x74\x68\x6f\x72\x73\x20\x62\x65\x20\x68\x65\x6c\x64\
\x20\x6c\x69\x61\x62\x6c\x65\x20\x66\x6f\x72\x20\x61\x6e\x79\x20\
\x64\x61\x6d\x61\x67\x65\x73\x20\x61\x72\x69\x73\x69\x6e\x67\x20\
\x66\x72\x6f\x6d\x20\x74\x68\x65\x20\x75\x73\x65\x20\x6f\x66\x20\
\x74\x68\x69\x73\x20\x73\x6f\x66\x74\x77\x61\x72\x65\x2e\x07\x00\
\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\
\x00\x00\x00\x26\x00\x4b\x00\x6f\x00\x70\x00\x74\x00\x65\x00\x6c\
\x00\x65\x00\x66\x00\x6f\x00\x6f\x00\x6e\x00\x20\x00\x67\x00\x72\
\x00\x61\x00\x66\x00\x69\x00\x65\x00\x6b\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x16\x48\x65\x61\x64\x70\x68\x6f\x6e\x65\x73\x20\x67\
\x72\x61\x70\x68\x69\x63\x73\x20\x62\x79\x07\x00\x00\x00\x0b\x41\
\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x24\
\x00\x4f\x00\x70\x00\x6e\x00\x61\x00\x6d\x00\x65\x00\x6b\x00\x6e\
\x00\x6f\x00\x70\x00\x20\x00\x67\x00\x72\x00\x61\x00\x66\x00\x69\
\x00\x65\x00\x6b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x19\x52\x65\
\x63\x6f\x72\x64\x20\x62\x75\x74\x74\x6f\x6e\x20\x67\x72\x61\x70\
\x68\x69\x63\x73\x20\x62\x79\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\
\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x0c\x00\x56\x00\
\x65\x00\x72\x00\x73\x00\x69\x00\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x07\x56\x65\x72\x73\x69\x6f\x6e\x07\x00\x00\x00\x0b\x41\
\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x16\
\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x20\x00\x6d\x00\x69\
\x00\x78\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\
\x41\x75\x64\x69\x6f\x20\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x18\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x2d\x00\
\x69\x00\x6e\x00\x76\x00\x6f\x00\x65\x00\x72\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\x49\x6e\x70\x75\x74\x07\
\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\
\x70\x01\x03\x00\x00\x00\x16\x00\x41\x00\x75\x00\x64\x00\x69\x00\
\x6f\x00\x20\x00\x6d\x00\x69\x00\x78\x00\x65\x00\x72\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\x4d\x69\x78\x65\
\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\
\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x53\x00\x6c\x00\x75\x00\
\x69\x00\x74\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x00\x53\
\x00\x74\x00\x61\x00\x6e\x00\x64\x00\x61\x00\x61\x00\x72\x00\x64\
\x00\x74\x00\x61\x00\x61\x00\x6c\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x10\x44\x65\x66\x61\x75\x6c\x74\x20\x4c\x61\x6e\x67\x75\x61\
\x67\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x2a\x00\x41\x00\x75\x00\x74\
\x00\x6f\x00\x6d\x00\x61\x00\x74\x00\x69\x00\x73\x00\x63\x00\x68\
\x00\x20\x00\x76\x00\x65\x00\x72\x00\x62\x00\x65\x00\x72\x00\x67\
\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x45\x6e\
\x61\x62\x6c\x65\x20\x41\x75\x74\x6f\x2d\x48\x69\x64\x65\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x32\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\
\x00\x65\x00\x65\x00\x72\x00\x20\x00\x69\x00\x6e\x00\x73\x00\x74\
\x00\x72\x00\x75\x00\x6d\x00\x65\x00\x6e\x00\x74\x00\x65\x00\x6e\
\x00\x62\x00\x6f\x00\x72\x00\x64\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x13\x46\x72\x65\x65\x73\x65\x65\x72\x20\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x41\x00\
\x6c\x00\x67\x00\x65\x00\x6d\x00\x65\x00\x65\x00\x6e\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x07\x47\x65\x6e\x65\x72\x61\x6c\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x16\x00\x56\x00\x65\x00\x65\x00\x6c\x00\x73\
\x00\x6f\x00\x6f\x00\x72\x00\x74\x00\x69\x00\x67\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0d\x4d\x69\x73\x63\x65\x6c\x6c\x61\x6e\x65\
\x6f\x75\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x55\x00\x69\x00\
\x74\x00\x76\x00\x6f\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x4f\x75\x74\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x0e\x00\x50\x00\x6c\x00\x75\x00\x67\x00\x69\x00\x6e\x00\x73\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x07\x50\x6c\x75\x67\x69\x6e\x73\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x1e\x00\x4f\x00\x70\x00\x73\x00\x6c\
\x00\x61\x00\x61\x00\x6e\x00\x20\x00\x6c\x00\x6f\x00\x63\x00\x61\
\x00\x74\x00\x69\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\
\x52\x65\x63\x6f\x72\x64\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x14\x00\x56\x00\x6f\x00\x6f\x00\x72\
\x00\x6b\x00\x65\x00\x75\x00\x72\x00\x65\x00\x6e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x05\x53\x65\x74\x75\x70\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x16\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\
\x6d\x00\x69\x00\x78\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x4d\x69\x78\x65\x72\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x18\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\
\x00\x2d\x00\x69\x00\x6e\x00\x76\x00\x6f\x00\x65\x00\x72\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\x64\x65\x6f\x49\x6e\x70\
\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x56\x00\x69\x00\x64\
\x00\x65\x00\x6f\x00\x20\x00\x6d\x00\x69\x00\x78\x00\x65\x00\x72\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\x64\x65\x6f\x4d\
\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x00\x26\x00\x4f\
\x00\x76\x00\x65\x00\x72\x00\x20\x00\x46\x00\x72\x00\x65\x00\x65\
\x00\x73\x00\x65\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x06\x26\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\x46\x72\x65\
\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x26\
\x00\x42\x00\x65\x00\x73\x00\x74\x00\x61\x00\x6e\x00\x64\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x26\x46\x69\x6c\x65\x07\x00\x00\
\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x0a\x00\x26\x00\x48\x00\x65\x00\x6c\x00\x70\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x05\x26\x48\x65\x6c\x70\x07\x00\x00\x00\
\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x0a\x00\x26\x00\x54\x00\x61\x00\x61\x00\x6c\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x09\x26\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\
\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x10\x00\x26\x00\x53\x00\x6c\x00\x75\x00\x69\x00\
\x74\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\
\x51\x75\x69\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x22\x00\x26\x00\x56\x00\x69\
\x00\x64\x00\x65\x00\x6f\x00\x20\x00\x6d\x00\x61\x00\x70\x00\x20\
\x00\x6f\x00\x70\x00\x65\x00\x6e\x00\x65\x00\x6e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x15\x26\x4f\x70\x65\x6e\x20\x56\x69\x64\x65\
\x6f\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\
\x26\x00\x4f\x00\x70\x00\x74\x00\x69\x00\x65\x00\x73\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x08\x26\x4f\x70\x74\x69\x6f\x6e\x73\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x0e\x00\x53\x00\x6c\x00\x75\x00\x69\x00\x74\x00\x65\x00\
\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x0a\x00\x44\x00\x61\x00\x74\x00\x75\x00\x6d\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x12\
\x00\x50\x00\x72\x00\x6f\x00\x67\x00\x72\x00\x61\x00\x6d\x00\x6d\
\x00\x61\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\
\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x5e\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\
\x65\x00\x65\x00\x72\x00\x20\x00\x2d\x00\x20\x00\x64\x00\x72\x00\
\x61\x00\x61\x00\x67\x00\x62\x00\x61\x00\x72\x00\x65\x00\x20\x00\
\x70\x00\x72\x00\x65\x00\x73\x00\x65\x00\x6e\x00\x74\x00\x61\x00\
\x74\x00\x69\x00\x65\x00\x2d\x00\x6f\x00\x70\x00\x6e\x00\x61\x00\
\x6d\x00\x65\x00\x20\x00\x73\x00\x74\x00\x61\x00\x74\x00\x69\x00\
\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x32\x46\x72\x65\
\x65\x73\x65\x65\x72\x20\x2d\x20\x70\x6f\x72\x74\x61\x62\x6c\x65\
\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x72\x65\
\x63\x6f\x72\x64\x69\x6e\x67\x20\x73\x74\x61\x74\x69\x6f\x6e\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x2c\x00\x48\x00\x6f\x00\x6f\x00\x66\x00\x64\x00\x76\x00\
\x65\x00\x6e\x00\x73\x00\x74\x00\x65\x00\x72\x00\x20\x00\x76\x00\
\x65\x00\x72\x00\x62\x00\x65\x00\x72\x00\x67\x00\x65\x00\x6e\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x10\x48\x69\x64\x65\x20\x4d\x61\
\x69\x6e\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x4e\x00\
\x69\x00\x65\x00\x74\x00\x73\x00\x64\x00\x6f\x00\x65\x00\x6e\x00\
\x64\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x49\x64\x6c\
\x65\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x10\x00\x50\x00\x61\x00\x75\x00\x7a\x00\x65\
\x00\x72\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x50\x61\x75\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x47\x00\x65\x00\x72\x00\
\x65\x00\x65\x00\x64\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x06\x52\x65\x61\x64\x79\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x4f\x00\x70\x00\
\x6e\x00\x65\x00\x6d\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x52\x65\x63\x6f\x72\x64\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x24\x00\x4f\x00\
\x70\x00\x6e\x00\x61\x00\x6d\x00\x65\x00\x20\x00\x67\x00\x65\x00\
\x70\x00\x61\x00\x75\x00\x7a\x00\x65\x00\x65\x00\x72\x00\x64\x00\
\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x11\x52\x65\x63\x6f\x72\
\x64\x69\x6e\x67\x20\x50\x61\x75\x73\x65\x64\x2e\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x12\
\x00\x48\x00\x65\x00\x72\x00\x76\x00\x61\x00\x74\x00\x74\x00\x65\
\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x73\x75\
\x6d\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x08\x00\x5a\x00\x61\x00\x61\x00\x6c\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x2c\
\x00\x48\x00\x6f\x00\x6f\x00\x66\x00\x64\x00\x76\x00\x65\x00\x6e\
\x00\x73\x00\x74\x00\x65\x00\x72\x00\x20\x00\x77\x00\x65\x00\x65\
\x00\x72\x00\x67\x00\x65\x00\x76\x00\x65\x00\x6e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x10\x53\x68\x6f\x77\x20\x4d\x61\x69\x6e\x20\
\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x53\x00\x74\x00\x61\
\x00\x6e\x00\x64\x00\x2d\x00\x62\x00\x79\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x07\x53\x74\x61\x6e\x64\x62\x79\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\
\x53\x00\x74\x00\x6f\x00\x70\x00\x70\x00\x65\x00\x6e\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x04\x53\x74\x6f\x70\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\
\x47\x00\x65\x00\x73\x00\x70\x00\x72\x00\x65\x00\x6b\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x04\x54\x61\x6c\x6b\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x26\x00\
\x26\x00\x45\x00\x78\x00\x70\x00\x6f\x00\x72\x00\x74\x00\x65\x00\
\x65\x00\x72\x00\x20\x00\x6e\x00\x61\x00\x61\x00\x72\x00\x20\x00\
\x43\x00\x53\x00\x56\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\
\x45\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\
\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x5c\x00\x57\x00\x65\x00\x65\x00\x74\x00\
\x20\x00\x75\x00\x20\x00\x7a\x00\x65\x00\x6b\x00\x65\x00\x72\x00\
\x20\x00\x64\x00\x61\x00\x74\x00\x20\x00\x75\x00\x20\x00\x64\x00\
\x65\x00\x20\x00\x64\x00\x61\x00\x74\x00\x61\x00\x62\x00\x61\x00\
\x73\x00\x65\x00\x20\x00\x77\x00\x69\x00\x6c\x00\x74\x00\x20\x00\
\x76\x00\x72\x00\x69\x00\x6a\x00\x6d\x00\x61\x00\x6b\x00\x65\x00\
\x6e\x00\x3f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\
\x20\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\
\x6e\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\
\x44\x42\x3f\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x4f\x00\
\x70\x00\x72\x00\x75\x00\x69\x00\x6d\x00\x65\x00\x6e\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x65\x61\x72\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x24\x00\x44\x00\x61\x00\x74\x00\x61\x00\x62\
\x00\x61\x00\x73\x00\x65\x00\x20\x00\x76\x00\x72\x00\x69\x00\x6a\
\x00\x6d\x00\x61\x00\x6b\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0e\x43\x6c\x65\x61\x72\x20\x44\x61\x74\x61\x62\x61\
\x73\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x53\x00\x6c\
\x00\x75\x00\x69\x00\x74\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x16\x00\x56\x00\x65\x00\x72\x00\x77\x00\x69\x00\x6a\x00\
\x64\x00\x65\x00\x72\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x52\x65\x6d\x6f\x76\x65\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x26\x00\x26\x00\x45\x00\x78\x00\x70\x00\x6f\x00\x72\x00\
\x74\x00\x65\x00\x65\x00\x72\x00\x20\x00\x6e\x00\x61\x00\x61\x00\
\x72\x00\x20\x00\x43\x00\x53\x00\x56\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0e\x26\x45\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\
\x56\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x5c\x00\x57\x00\x65\x00\x65\x00\
\x74\x00\x20\x00\x75\x00\x20\x00\x7a\x00\x65\x00\x6b\x00\x65\x00\
\x72\x00\x20\x00\x64\x00\x61\x00\x74\x00\x20\x00\x75\x00\x20\x00\
\x64\x00\x65\x00\x20\x00\x64\x00\x61\x00\x74\x00\x61\x00\x62\x00\
\x61\x00\x73\x00\x65\x00\x20\x00\x77\x00\x69\x00\x6c\x00\x74\x00\
\x20\x00\x76\x00\x72\x00\x69\x00\x6a\x00\x6d\x00\x61\x00\x6b\x00\
\x65\x00\x6e\x00\x3f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\
\x72\x65\x20\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\
\x77\x61\x6e\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\
\x65\x20\x44\x42\x3f\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x44\x00\
\x61\x00\x74\x00\x75\x00\x6d\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x04\x44\x61\x74\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x50\x00\
\x72\x00\x6f\x00\x67\x00\x72\x00\x61\x00\x6d\x00\x6d\x00\x61\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\
\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x3a\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\
\x00\x65\x00\x65\x00\x72\x00\x20\x00\x47\x00\x65\x00\x73\x00\x70\
\x00\x72\x00\x65\x00\x6b\x00\x73\x00\x6c\x00\x69\x00\x6a\x00\x73\
\x00\x74\x00\x20\x00\x45\x00\x64\x00\x69\x00\x74\x00\x6f\x00\x72\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x14\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x54\x61\x6c\x6b\x20\x45\x64\x69\x74\x6f\x72\x07\x00\
\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x16\x00\x50\x00\x72\x00\x65\x00\x73\x00\x65\
\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x6f\x00\x72\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x09\x50\x72\x65\x73\x65\x6e\x74\x65\x72\x07\
\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x16\x00\x56\x00\x65\x00\x72\x00\x77\x00\
\x69\x00\x6a\x00\x64\x00\x65\x00\x72\x00\x65\x00\x6e\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\x76\x65\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x00\x5a\x00\x61\x00\x61\x00\x6c\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x0d\
\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x08\x00\x54\x00\x69\x00\x6a\x00\x64\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x04\x54\x69\x6d\x65\x07\x00\x00\x00\x0d\x54\x61\
\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x00\x54\x00\x69\x00\x74\x00\x65\x00\x6c\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x54\x69\x74\x6c\x65\x07\x00\x00\x00\x0d\x54\
\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x14\x00\x4e\x00\x65\x00\x64\x00\x65\x00\x72\x00\x6c\x00\x61\
\x00\x6e\x00\x64\x00\x73\x08\x00\x00\x00\x00\x06\x00\x00\x00\x15\
\x4c\x61\x6e\x67\x75\x61\x67\x65\x20\x44\x69\x73\x70\x6c\x61\x79\
\x20\x54\x65\x78\x74\x07\x00\x00\x00\x0b\x54\x72\x61\x6e\x73\x6c\
\x61\x74\x69\x6f\x6e\x01\x88\x00\x00\x00\x02\x01\x01\
\x00\x00\x15\x9c\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x02\x08\x00\x04\xa8\xa5\x00\x00\x08\x33\x00\x04\xa8\xa5\
\x00\x00\x11\x64\x00\x05\x96\x5d\x00\x00\x0b\xb7\x00\x05\x96\x5d\
\x00\x00\x12\x78\x00\x05\xa8\x2b\x00\x00\x0d\x2f\x00\x05\xab\x60\
\x00\x00\x0c\xf7\x00\x05\xb0\x35\x00\x00\x12\xac\x00\x2a\xd0\x25\
\x00\x00\x06\x55\x00\x2a\xec\x30\x00\x00\x06\x82\x00\x2b\x8c\x04\
\x00\x00\x06\xea\x00\x4a\x36\x95\x00\x00\x00\x00\x00\x4a\x36\x95\
\x00\x00\x04\xad\x00\x4a\x36\x95\x00\x00\x07\xd7\x00\x4a\x36\x95\
\x00\x00\x0e\xcc\x00\x4c\xcc\x54\x00\x00\x08\x65\x00\x4c\xcc\x54\
\x00\x00\x11\x9a\x00\x56\x8c\x95\x00\x00\x09\xb2\x00\x59\x66\x0a\
\x00\x00\x0b\xe7\x00\x59\x66\x0a\x00\x00\x0f\x91\x00\x59\xcb\xc0\
\x00\x00\x05\xaf\x00\x5b\x03\x8a\x00\x00\x0d\x6f\x00\x5b\x03\x8a\
\x00\x00\x10\x57\x00\x5b\x0b\x25\x00\x00\x12\xdc\x00\xb2\x0d\x89\
\x00\x00\x03\xc2\x00\xe1\x80\xe2\x00\x00\x0f\x31\x00\xff\x11\x49\
\x00\x00\x03\x58\x01\x1c\xb5\xc2\x00\x00\x04\x66\x01\x30\xf4\x02\
\x00\x00\x05\xe0\x02\x89\xdc\xc7\x00\x00\x09\x56\x02\xa7\x96\xc4\
\x00\x00\x06\x29\x02\xf0\x16\xfe\x00\x00\x01\xdf\x03\x08\xa7\x7e\
\x00\x00\x00\x77\x04\x18\xa4\x4f\x00\x00\x0d\xe2\x04\x18\xa4\x4f\
\x00\x00\x10\xd4\x04\x3b\xa8\x09\x00\x00\x07\x19\x04\xcc\xc5\x7a\
\x00\x00\x08\x92\x04\xcc\xc5\x7a\x00\x00\x0e\xfd\x05\x8b\x7b\xbe\
\x00\x00\x09\xfd\x05\x8b\xa6\x84\x00\x00\x0a\x3b\x05\x8c\x76\x94\
\x00\x00\x0a\xf7\x05\x8c\xac\x35\x00\x00\x0b\x79\x05\x9c\x42\xee\
\x00\x00\x08\xc2\x05\xb0\xb2\x8a\x00\x00\x0d\x9e\x05\xb0\xb2\x8a\
\x00\x00\x10\x8a\x06\x7b\x08\xe3\x00\x00\x07\x6e\x06\x8d\x3a\x43\
\x00\x00\x05\x31\x06\xb8\x19\xfa\x00\x00\x0c\x74\x06\xb8\x19\xfa\
\x00\x00\x10\x0d\x08\x4e\x9c\xf5\x00\x00\x06\xb7\x08\x5d\xf8\xa2\
\x00\x00\x11\xcb\x08\xe3\x4b\xdc\x00\x00\x0b\x27\x08\xee\x26\x24\
\x00\x00\x13\x21\x0a\x1f\xc8\x95\x00\x00\x0e\x74\x0a\x3d\x0e\x95\
\x00\x00\x0f\xca\x0a\x64\x3c\x14\x00\x00\x08\x04\x0a\x68\xf8\xf7\
\x00\x00\x05\x76\x0a\x68\xf8\xf7\x00\x00\x0a\x75\x0a\xa8\x4a\xc9\
\x00\x00\x0c\xb8\x0b\x8c\x76\xb4\x00\x00\x07\xa4\x0c\x8a\xac\x07\
\x00\x00\x0c\x1a\x0c\x9c\x0d\x42\x00\x00\x12\x31\x0c\xc9\xa0\x0e\
\x00\x00\x04\x37\x0c\xfb\x29\xd4\x00\x00\x00\x2f\x0d\x33\xd9\xec\
\x00\x00\x04\xdc\x0e\x74\x68\x5e\x00\x00\x0a\xaa\x69\x00\x00\x13\
\x66\x03\x00\x00\x00\x0a\x06\x25\x06\x3a\x06\x44\x06\x27\x06\x42\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\
\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\
\x03\x00\x00\x00\x1a\x06\x39\x06\x46\x00\x20\x06\x41\x06\x31\x06\
\x4a\x00\x20\x06\x33\x06\x4a\x00\x20\x06\x22\x06\x31\x00\x20\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x46\x72\x65\x65\x73\x65\x65\
\x72\x20\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\
\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x82\x06\x41\x06\
\x31\x06\x4a\x00\x20\x06\x33\x06\x4a\x00\x20\x06\x22\x06\x31\x00\
\x20\x06\x28\x06\x31\x06\x46\x06\x27\x06\x45\x06\x2c\x00\x20\x06\
\x4a\x06\x2e\x06\x2a\x06\x35\x00\x20\x06\x28\x06\x2a\x06\x33\x06\
\x2c\x06\x4a\x06\x44\x00\x20\x06\x27\x06\x44\x06\x45\x06\x2d\x06\
\x27\x06\x36\x06\x31\x06\x27\x06\x2a\x00\x2e\x00\x20\x06\x41\x06\
\x4a\x06\x47\x00\x20\x06\x42\x06\x27\x06\x28\x06\x44\x06\x4a\x06\
\x29\x00\x20\x06\x2a\x06\x33\x06\x2c\x06\x4a\x06\x44\x00\x20\x06\
\x27\x06\x44\x06\x41\x06\x4a\x06\x2f\x06\x4a\x06\x48\x00\x2e\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\xc6\x46\x72\x65\x65\x73\x65\x65\
\x72\x20\x69\x73\x20\x61\x20\x76\x69\x64\x65\x6f\x20\x63\x61\x70\
\x74\x75\x72\x65\x20\x75\x74\x69\x6c\x69\x74\x79\x20\x63\x61\x70\
\x61\x62\x6c\x65\x20\x6f\x66\x20\x63\x61\x70\x74\x75\x72\x69\x6e\
\x67\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x73\x2e\
\x20\x49\x74\x20\x63\x61\x70\x74\x75\x72\x65\x73\x20\x76\x69\x64\
\x65\x6f\x20\x73\x6f\x75\x72\x63\x65\x73\x20\x73\x75\x63\x68\x20\
\x61\x73\x20\x75\x73\x62\x2c\x20\x66\x69\x72\x65\x77\x69\x72\x65\
\x2c\x20\x6f\x72\x20\x6c\x6f\x63\x61\x6c\x20\x64\x65\x73\x6b\x74\
\x6f\x70\x20\x61\x6c\x6f\x6e\x67\x20\x77\x69\x74\x68\x20\x61\x75\
\x64\x69\x6f\x20\x61\x6e\x64\x20\x6d\x69\x78\x65\x73\x20\x74\x68\
\x65\x6d\x20\x74\x6f\x67\x65\x74\x68\x65\x72\x20\x74\x6f\x20\x70\
\x72\x6f\x64\x75\x63\x65\x20\x61\x20\x76\x69\x64\x65\x6f\x2e\x07\
\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\
\x03\x00\x00\x00\x7e\x06\x47\x06\x30\x06\x27\x00\x20\x06\x27\x06\
\x44\x06\x28\x06\x31\x06\x46\x06\x27\x06\x45\x06\x2c\x00\x20\x06\
\x45\x06\x31\x06\x2e\x06\x35\x00\x20\x06\x2a\x06\x2d\x06\x2a\x00\
\x20\x00\x47\x00\x50\x00\x4c\x00\x20\x06\x27\x06\x44\x06\x2c\x06\
\x32\x06\x21\x00\x20\x06\x27\x06\x44\x06\x2b\x06\x27\x06\x44\x06\
\x2b\x00\x2e\x00\x20\x06\x27\x06\x44\x06\x28\x06\x31\x06\x46\x06\
\x27\x06\x45\x06\x2c\x00\x20\x06\x4a\x06\x48\x06\x32\x06\x39\x00\
\x20\x00\x22\x06\x43\x06\x45\x06\x27\x00\x20\x06\x47\x06\x48\x00\
\x22\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\xdb\x46\x72\x65\
\x65\x73\x65\x65\x72\x20\x69\x73\x20\x6c\x69\x63\x65\x6e\x73\x65\
\x64\x20\x75\x6e\x64\x65\x72\x20\x74\x68\x65\x20\x47\x50\x4c\x20\
\x76\x65\x72\x73\x69\x6f\x6e\x20\x33\x2e\x20\x54\x68\x69\x73\x20\
\x73\x6f\x66\x74\x77\x61\x72\x65\x20\x69\x73\x20\x70\x72\x6f\x76\
\x69\x64\x65\x64\x20\x27\x61\x73\x2d\x69\x73\x27\x2c\x77\x69\x74\
\x68\x6f\x75\x74\x20\x61\x6e\x79\x20\x65\x78\x70\x72\x65\x73\x73\
\x20\x6f\x72\x20\x69\x6d\x70\x6c\x69\x65\x64\x20\x77\x61\x72\x72\
\x61\x6e\x74\x79\x2e\x20\x49\x6e\x20\x6e\x6f\x20\x65\x76\x65\x6e\
\x74\x20\x77\x69\x6c\x6c\x20\x74\x68\x65\x20\x61\x75\x74\x68\x6f\
\x72\x73\x20\x62\x65\x20\x68\x65\x6c\x64\x20\x6c\x69\x61\x62\x6c\
\x65\x20\x66\x6f\x72\x20\x61\x6e\x79\x20\x64\x61\x6d\x61\x67\x65\
\x73\x20\x61\x72\x69\x73\x69\x6e\x67\x20\x66\x72\x6f\x6d\x20\x74\
\x68\x65\x20\x75\x73\x65\x20\x6f\x66\x20\x74\x68\x69\x73\x20\x73\
\x6f\x66\x74\x77\x61\x72\x65\x2e\x07\x00\x00\x00\x0b\x41\x62\x6f\
\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x34\x06\x2c\
\x06\x31\x06\x27\x06\x41\x06\x4a\x06\x43\x00\x20\x06\x27\x06\x44\
\x06\x33\x06\x45\x06\x39\x06\x29\x00\x20\x06\x42\x06\x27\x06\x45\
\x00\x20\x06\x28\x06\x2a\x06\x46\x06\x41\x06\x4a\x06\x30\x06\x47\
\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x16\x48\x65\x61\x64\
\x70\x68\x6f\x6e\x65\x73\x20\x67\x72\x61\x70\x68\x69\x63\x73\x20\
\x62\x79\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\
\x6f\x67\x01\x03\x00\x00\x00\x3c\x06\x2c\x06\x31\x06\x27\x06\x41\
\x06\x4a\x06\x43\x00\x20\x06\x32\x06\x31\x00\x20\x06\x27\x06\x44\
\x06\x2a\x06\x33\x06\x2c\x06\x4a\x06\x44\x00\x20\x06\x42\x06\x27\
\x06\x45\x00\x20\x06\x28\x06\x2a\x06\x46\x06\x41\x06\x4a\x06\x30\
\x06\x47\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x19\x52\x65\
\x63\x6f\x72\x64\x20\x62\x75\x74\x74\x6f\x6e\x20\x67\x72\x61\x70\
\x68\x69\x63\x73\x20\x62\x79\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\
\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x08\x06\x46\x06\
\x33\x06\x2e\x06\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x56\
\x65\x72\x73\x69\x6f\x6e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\
\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x1a\x06\x45\x06\x4a\
\x06\x43\x06\x33\x06\x31\x00\x20\x06\x27\x06\x44\x06\x23\x06\x35\
\x06\x48\x06\x27\x06\x2a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\
\x41\x75\x64\x69\x6f\x20\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x08\x06\x2e\x06\x31\x06\x48\x06\x2c\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x20\x06\x25\x06\x39\x06\x2f\x06\x27\x06\x2f\x06\x27\x06\x2a\
\x00\x20\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\
\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x13\x46\x72\x65\x65\
\x73\x65\x65\x72\x20\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x07\
\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\
\x70\x01\x03\x00\x00\x00\x16\x06\x2e\x06\x35\x06\x27\x06\x26\x06\
\x35\x00\x20\x06\x23\x06\x2e\x06\x31\x06\x49\x00\x20\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0d\x4d\x69\x73\x63\x65\x6c\x6c\x61\x6e\
\x65\x6f\x75\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x06\x27\x06\x44\
\x06\x2a\x06\x33\x06\x2c\x06\x4a\x06\x44\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x0a\x06\x25\x06\x39\x06\x2f\x06\x27\x06\x2f\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x05\x53\x65\x74\x75\x70\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x1c\x06\x45\x06\x4a\x06\x43\x06\x33\x06\x31\
\x00\x20\x06\x27\x06\x44\x06\x41\x06\x4a\x06\x2f\x06\x4a\x06\x48\
\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\
\x6f\x20\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\
\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x06\x00\
\x26\x06\x39\x06\x46\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x26\
\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\
\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\x26\x06\x45\x06\
\x44\x06\x41\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x46\x69\
\x6c\x65\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x10\x06\x45\x00\x26\x06\x33\x06\x27\
\x06\x39\x06\x2f\x06\x29\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x05\x26\x48\x65\x6c\x70\x07\x00\x00\x00\x0b\x46\x72\x65\x65\
\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x26\x06\
\x44\x06\x3a\x06\x29\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x09\x26\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\x00\x00\x00\x0b\x46\
\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\
\x00\x26\x06\x2e\x06\x31\x06\x48\x06\x2c\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x26\x51\x75\x69\x74\x07\x00\x00\x00\x0b\x46\x72\
\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x22\x06\
\x41\x06\x2a\x06\x2d\x00\x20\x00\x26\x06\x45\x06\x44\x06\x41\x00\
\x20\x06\x27\x06\x44\x06\x41\x06\x4a\x06\x2f\x06\x4a\x06\x48\x00\
\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x15\x26\x4f\x70\x65\x6e\
\x20\x56\x69\x64\x65\x6f\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x10\x00\x26\x06\x25\x06\x39\x06\x2f\x06\x27\x06\x2f\
\x06\x27\x06\x2a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x26\x4f\
\x70\x74\x69\x6f\x6e\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x06\x2a\x00\x26\x06\x42\
\x06\x31\x06\x4a\x06\x31\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x07\x26\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x06\x25\x06\
\x3a\x06\x44\x06\x27\x06\x42\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x06\x2a\x06\x39\x06\x44\
\x06\x4a\x06\x42\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x43\x6f\
\x6d\x6d\x65\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x10\x06\x27\x06\x44\x06\x2a\x06\
\x27\x06\x31\x06\x4a\x06\x2e\x00\x20\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x06\x27\x06\x44\x06\
\x2d\x06\x2f\x06\x2b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x45\
\x76\x65\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x0c\x06\x27\x06\x44\x06\x2d\x06\x2f\
\x06\x2b\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x45\x76\
\x65\x6e\x74\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x44\x06\x41\x06\x31\x06\x4a\x00\x20\
\x06\x33\x06\x4a\x00\x20\x06\x22\x06\x31\x00\x20\x00\x2d\x00\x20\
\x06\x28\x06\x31\x06\x46\x06\x27\x06\x45\x06\x2c\x00\x20\x06\x2a\
\x06\x33\x06\x2c\x06\x4a\x06\x44\x00\x20\x06\x27\x06\x44\x06\x45\
\x06\x2d\x06\x27\x06\x36\x06\x31\x06\x27\x06\x2a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x32\x46\x72\x65\x65\x73\x65\x65\x72\x20\x2d\
\x20\x70\x6f\x72\x74\x61\x62\x6c\x65\x20\x70\x72\x65\x73\x65\x6e\
\x74\x61\x74\x69\x6f\x6e\x20\x72\x65\x63\x6f\x72\x64\x69\x6e\x67\
\x20\x73\x74\x61\x74\x69\x6f\x6e\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x2e\x06\x25\x06\x2e\
\x06\x41\x06\x27\x06\x21\x00\x20\x06\x27\x06\x44\x06\x46\x06\x27\
\x06\x41\x06\x30\x06\x29\x00\x20\x06\x27\x06\x44\x06\x31\x06\x26\
\x06\x4a\x06\x33\x06\x4a\x06\x29\x00\x20\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x10\x48\x69\x64\x65\x20\x4d\x61\x69\x6e\x20\x57\x69\
\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x28\x06\x25\x06\x4a\x06\x42\x06\x27\
\x06\x41\x00\x20\x06\x27\x06\x44\x06\x2a\x06\x33\x06\x2c\x06\x4a\
\x06\x44\x00\x20\x06\x45\x06\x24\x06\x42\x06\x2a\x06\x27\x00\x20\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x50\x61\x75\x73\x65\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x1a\x06\x2c\x06\x27\x06\x47\x06\x32\x00\x20\x06\x44\x06\
\x44\x06\x2a\x06\x33\x06\x2c\x06\x4a\x06\x44\x00\x20\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x52\x65\x61\x64\x79\x2e\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x16\x06\x25\x06\x28\x06\x2f\x06\x23\x00\x20\x06\x2a\x06\x33\x06\
\x2c\x06\x4a\x06\x44\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x06\x52\x65\x63\x6f\x72\x64\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x06\x27\x06\x44\x06\
\x2a\x06\x33\x06\x2c\x06\x4a\x06\x44\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1e\
\x06\x27\x06\x44\x06\x2a\x06\x33\x06\x2c\x06\x4a\x06\x44\x00\x20\
\x06\x45\x06\x2a\x06\x48\x06\x42\x06\x41\x00\x2e\x00\x20\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x11\x52\x65\x63\x6f\x72\x64\x69\x6e\
\x67\x20\x50\x61\x75\x73\x65\x64\x2e\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x06\x2a\x06\
\x42\x06\x31\x06\x4a\x06\x31\x00\x20\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x26\x06\x23\x06\
\x2f\x06\x27\x06\x29\x00\x20\x06\x25\x06\x42\x06\x31\x06\x27\x06\
\x31\x00\x20\x06\x27\x06\x44\x06\x45\x06\x34\x06\x27\x06\x43\x06\
\x44\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x52\x65\x70\
\x6f\x72\x74\x69\x6e\x67\x20\x54\x6f\x6f\x6c\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x06\
\x27\x06\x43\x06\x45\x06\x27\x06\x44\x00\x20\x06\x27\x06\x44\x06\
\x2a\x06\x33\x06\x2c\x06\x4a\x06\x44\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x52\x65\x73\x75\x6d\x65\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x06\x27\x06\
\x44\x06\x3a\x06\x31\x06\x41\x06\x29\x00\x20\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x10\x06\x27\x06\
\x44\x06\x3a\x06\x31\x06\x41\x06\x29\x00\x3a\x00\x20\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x05\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x2c\
\x06\x27\x06\x38\x06\x47\x06\x27\x06\x31\x00\x20\x06\x27\x06\x44\
\x06\x46\x06\x27\x06\x41\x06\x30\x06\x29\x00\x20\x06\x27\x06\x44\
\x06\x31\x06\x26\x06\x4a\x06\x33\x06\x4a\x06\x29\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x10\x53\x68\x6f\x77\x20\x4d\x61\x69\x6e\x20\
\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1e\x06\x45\x06\x44\x06\x42\
\x06\x4a\x00\x20\x06\x27\x06\x44\x06\x45\x06\x2d\x06\x27\x06\x36\
\x06\x31\x06\x29\x00\x3a\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x08\x53\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x06\x2c\
\x06\x27\x06\x47\x06\x32\x00\x20\x06\x44\x06\x44\x06\x2a\x06\x33\
\x06\x2c\x06\x4a\x06\x44\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x07\x53\x74\x61\x6e\x64\x62\x79\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x16\x06\x27\x06\
\x48\x06\x42\x06\x41\x00\x20\x06\x2a\x06\x33\x06\x2c\x06\x4a\x06\
\x44\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x53\x74\x6f\
\x70\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x1e\x06\x39\x06\x46\x06\x48\x06\x27\x06\x46\x00\
\x20\x06\x27\x06\x44\x06\x45\x06\x2d\x06\x27\x06\x36\x06\x31\x06\
\x29\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x54\x61\x6c\
\x6b\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x0c\x06\x27\x06\x44\x06\x48\x06\x42\x06\x2a\x00\
\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x6d\x65\x3a\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x20\x06\x39\x06\x46\x06\x48\x06\x27\x06\x46\x00\x20\
\x06\x27\x06\x44\x06\x45\x06\x2d\x06\x27\x06\x36\x06\x31\x06\x29\
\x00\x3a\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\
\x74\x6c\x65\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x48\x06\x47\x06\x44\x00\x20\x06\x23\
\x06\x46\x06\x2a\x00\x20\x06\x45\x06\x2a\x06\x23\x06\x43\x06\x2f\
\x00\x20\x06\x45\x06\x46\x00\x20\x06\x2d\x06\x30\x06\x41\x00\x20\
\x06\x42\x06\x27\x06\x39\x06\x2f\x06\x29\x00\x20\x06\x27\x06\x44\
\x06\x28\x06\x4a\x06\x27\x06\x46\x06\x27\x06\x2a\x06\x1f\x00\x20\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\x6f\
\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\x20\
\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\x3f\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x26\x06\x2d\x06\x30\x06\x41\
\x00\x20\x06\x42\x06\x27\x06\x39\x06\x2f\x06\x29\x00\x20\x06\x27\
\x06\x44\x06\x28\x06\x4a\x06\x27\x06\x46\x06\x27\x06\x2a\x00\x20\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x43\x6c\x65\x61\x72\x20\
\x44\x61\x74\x61\x62\x61\x73\x65\x07\x00\x00\x00\x0f\x52\x65\x70\
\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x08\x06\x2e\x06\x31\x06\x48\x06\x2c\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x0a\x06\x27\x06\x44\x06\x2d\x06\x2f\x06\x2b\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\
\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x26\x06\x23\x06\x2f\x06\x27\x06\x29\x00\
\x20\x06\x25\x06\x42\x06\x31\x06\x27\x06\x31\x00\x20\x06\x27\x06\
\x44\x06\x45\x06\x34\x06\x27\x06\x43\x06\x44\x00\x20\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x16\x46\x72\x65\x65\x73\x65\x65\x72\x20\
\x52\x65\x70\x6f\x72\x74\x20\x45\x64\x69\x74\x6f\x72\x07\x00\x00\
\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x10\x06\x27\x06\x44\x06\x3a\x06\x31\x06\
\x41\x06\x29\x00\x3a\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x14\
\x06\x25\x06\x2e\x06\x2a\x06\x31\x00\x20\x06\x27\x06\x44\x06\x45\
\x06\x44\x06\x41\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x53\x65\
\x6c\x65\x63\x74\x20\x46\x69\x6c\x65\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x1e\x06\x45\x06\x44\x06\x42\x06\x4a\x00\x20\x06\x27\x06\
\x44\x06\x45\x06\x2d\x06\x27\x06\x36\x06\x31\x06\x29\x00\x3a\x00\
\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x70\x65\x61\x6b\
\x65\x72\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x06\x27\x06\
\x44\x06\x48\x06\x42\x06\x2a\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x20\
\x06\x39\x06\x46\x06\x48\x06\x27\x06\x46\x00\x20\x06\x27\x06\x44\
\x06\x45\x06\x2d\x06\x27\x06\x36\x06\x31\x06\x29\x00\x3a\x00\x20\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\x74\x6c\x65\x3a\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x48\x06\x47\x06\x44\x00\x20\
\x06\x23\x06\x46\x06\x2a\x00\x20\x06\x45\x06\x2a\x06\x23\x06\x43\
\x06\x2f\x00\x20\x06\x45\x06\x46\x00\x20\x06\x2d\x06\x30\x06\x41\
\x00\x20\x06\x42\x06\x27\x06\x39\x06\x2f\x06\x29\x00\x20\x06\x27\
\x06\x44\x06\x28\x06\x4a\x06\x27\x06\x46\x06\x27\x06\x2a\x06\x1f\
\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\
\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\
\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\
\x42\x3f\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x10\x06\x27\x06\x44\x06\x2a\
\x06\x27\x06\x31\x06\x4a\x06\x2e\x00\x20\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\
\x06\x27\x06\x44\x06\x2d\x06\x2f\x06\x2b\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\x00\x00\x0d\x54\x61\
\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x30\x06\x2a\x06\x39\x06\x2f\x06\x4a\x06\x44\x00\x20\x06\x45\x06\
\x2d\x06\x27\x06\x36\x06\x31\x06\x27\x06\x2a\x00\x20\x06\x41\x06\
\x31\x06\x4a\x00\x20\x06\x33\x06\x4a\x00\x20\x06\x22\x06\x31\x00\
\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x14\x46\x72\x65\x65\x73\
\x65\x65\x72\x20\x54\x61\x6c\x6b\x20\x45\x64\x69\x74\x6f\x72\x07\
\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x1c\x06\x45\x06\x44\x06\x42\x06\x4a\x00\
\x20\x06\x27\x06\x44\x06\x45\x06\x2d\x06\x27\x06\x36\x06\x31\x06\
\x29\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x50\x72\x65\
\x73\x65\x6e\x74\x65\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x06\x27\
\x06\x44\x06\x3a\x06\x31\x06\x41\x06\x29\x00\x20\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x0d\x54\
\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x0a\x06\x27\x06\x44\x06\x48\x06\x42\x06\x2a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x04\x54\x69\x6d\x65\x07\x00\x00\x00\x0d\x54\
\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x1e\x06\x39\x06\x46\x06\x48\x06\x27\x06\x46\x00\x20\x06\x27\
\x06\x44\x06\x45\x06\x2d\x06\x27\x06\x36\x06\x31\x06\x29\x00\x20\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x74\x6c\x65\x07\
\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x10\x06\x27\x06\x44\x06\x39\x06\x31\x06\
\x28\x06\x4a\x06\x29\x00\x20\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x15\x4c\x61\x6e\x67\x75\x61\x67\x65\x20\x44\x69\x73\x70\x6c\x61\
\x79\x20\x54\x65\x78\x74\x07\x00\x00\x00\x0b\x54\x72\x61\x6e\x73\
\x6c\x61\x74\x69\x6f\x6e\x01\x88\x00\x00\x00\x0f\x01\x00\xff\x01\
\x01\xff\x01\x02\xff\x24\x03\x0a\xff\x2a\x0b\
\x00\x00\x25\xa1\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x04\x18\x00\x00\x04\xe0\x00\x00\x17\xb8\x00\x04\xa8\xa5\
\x00\x00\x0b\x80\x00\x04\xa8\xa5\x00\x00\x14\xaa\x00\x05\x76\x94\
\x00\x00\x18\x3c\x00\x05\x96\x5d\x00\x00\x0f\x30\x00\x05\x96\x5d\
\x00\x00\x15\xb4\x00\x05\xa8\x2b\x00\x00\x10\x38\x00\x05\xab\x60\
\x00\x00\x10\x12\x00\x05\xb0\x35\x00\x00\x15\xe0\x00\x0d\x31\xa9\
\x00\x00\x19\x9f\x00\x18\xf5\x14\x00\x00\x0e\x72\x00\x2a\xd0\x25\
\x00\x00\x09\x7e\x00\x2a\xec\x30\x00\x00\x09\xaf\x00\x2b\x8c\x04\
\x00\x00\x0a\x15\x00\x3c\xdc\x74\x00\x00\x05\x97\x00\x48\x85\x72\
\x00\x00\x05\xcb\x00\x4a\x2b\x82\x00\x00\x11\x55\x00\x4a\x36\x95\
\x00\x00\x00\x00\x00\x4a\x36\x95\x00\x00\x06\x01\x00\x4a\x36\x95\
\x00\x00\x0b\x30\x00\x4a\x36\x95\x00\x00\x11\xc2\x00\x4c\xcc\x54\
\x00\x00\x0b\xa6\x00\x4c\xcc\x54\x00\x00\x14\xd4\x00\x4f\xb2\x7e\
\x00\x00\x0c\xa5\x00\x54\x6c\x54\x00\x00\x17\xe1\x00\x56\x8c\x95\
\x00\x00\x0d\x91\x00\x59\x66\x0a\x00\x00\x0f\x58\x00\x59\x66\x0a\
\x00\x00\x13\x0f\x00\x59\xcb\xc0\x00\x00\x08\x4b\x00\x5b\x03\x8a\
\x00\x00\x10\x5e\x00\x5b\x03\x8a\x00\x00\x13\xab\x00\x5b\x0b\x25\
\x00\x00\x16\x0a\x00\x89\x67\x25\x00\x00\x06\x2c\x00\xb2\x0d\x89\
\x00\x00\x04\xb7\x00\xcd\x51\x76\x00\x00\x21\x0d\x00\xe1\x80\xe2\
\x00\x00\x12\x55\x00\xff\x11\x49\x00\x00\x04\x75\x01\x04\x45\x0f\
\x00\x00\x0c\xfc\x01\x05\x6e\xe5\x00\x00\x1c\x4e\x01\x08\xec\xc4\
\x00\x00\x05\x2b\x01\x14\xad\x04\x00\x00\x08\x76\x01\x14\xad\x04\
\x00\x00\x1c\x0e\x01\x1c\xb5\xc2\x00\x00\x05\x60\x01\x30\xf4\x02\
\x00\x00\x08\xab\x01\x48\xbf\xaf\x00\x00\x0c\xce\x01\x5c\xff\xef\
\x00\x00\x0d\x63\x01\x63\x63\x85\x00\x00\x17\x80\x01\x63\x63\x85\
\x00\x00\x1b\x5d\x01\x70\xaa\xa0\x00\x00\x16\xde\x02\x2d\x09\x75\
\x00\x00\x08\x15\x02\x43\x01\x41\x00\x00\x1a\x43\x02\x89\xdc\xc7\
\x00\x00\x0c\x6d\x02\xa7\x96\xc4\x00\x00\x09\x4c\x02\xab\x4c\x79\
\x00\x00\x1d\xc1\x02\xf0\x16\xfe\x00\x00\x02\xe0\x03\x08\xa7\x7e\
\x00\x00\x01\x68\x04\x18\xa4\x4f\x00\x00\x10\xf7\x04\x18\xa4\x4f\
\x00\x00\x14\x4e\x04\x3b\xa8\x09\x00\x00\x0a\x82\x04\x42\x63\x15\
\x00\x00\x06\x66\x04\x85\xec\xc9\x00\x00\x1e\x51\x04\xa2\xfc\x54\
\x00\x00\x18\x67\x04\xcc\xc5\x7a\x00\x00\x0b\xcd\x04\xcc\xc5\x7a\
\x00\x00\x12\x25\x04\xd6\x80\x8a\x00\x00\x11\xef\x05\x0a\xfe\xd3\
\x00\x00\x0d\x36\x05\x2c\xcb\xfa\x00\x00\x12\xad\x05\x2f\x69\xf5\
\x00\x00\x18\x98\x05\x6c\xb7\xc4\x00\x00\x07\x53\x05\x8b\x7b\xbe\
\x00\x00\x0d\xb8\x05\x8b\xa6\x84\x00\x00\x0d\xe6\x05\x8c\x46\xc5\
\x00\x00\x12\xe1\x05\x8c\x46\xc5\x00\x00\x15\x88\x05\x8c\x76\x94\
\x00\x00\x0e\xa8\x05\x8c\xac\x35\x00\x00\x0f\x08\x05\x9a\x8b\xbe\
\x00\x00\x17\x4f\x05\x9c\x42\xee\x00\x00\x0b\xf7\x05\x9c\x9c\xc2\
\x00\x00\x19\x02\x05\xa3\x86\xb5\x00\x00\x1a\xfa\x05\xa6\xc8\x95\
\x00\x00\x16\x72\x05\xa6\xc8\x95\x00\x00\x1b\x2d\x05\xb0\xb2\x8a\
\x00\x00\x10\x87\x05\xb0\xb2\x8a\x00\x00\x13\xda\x05\xc3\xaf\xce\
\x00\x00\x0a\x46\x05\xd5\x48\x95\x00\x00\x1a\xc8\x05\xd5\xc4\xe5\
\x00\x00\x1d\x57\x06\x1e\x6d\xa9\x00\x00\x1a\x86\x06\x6d\x6f\xb1\
\x00\x00\x1f\x3f\x06\x7b\x08\xe3\x00\x00\x0a\xc9\x06\x8b\xac\xde\
\x00\x00\x1d\x91\x06\x8d\x3a\x43\x00\x00\x07\x20\x06\x8f\x63\x05\
\x00\x00\x00\x29\x06\xb8\x19\xfa\x00\x00\x0f\xbb\x06\xb8\x19\xfa\
\x00\x00\x13\x77\x06\xc8\x92\x91\x00\x00\x19\x33\x06\xc8\x92\x92\
\x00\x00\x19\x69\x07\x3b\xe0\x03\x00\x00\x07\x7f\x07\x8c\xcf\x97\
\x00\x00\x1c\xd7\x08\x3c\xc5\x25\x00\x00\x1b\xd2\x08\x4e\x9c\xf5\
\x00\x00\x09\xe0\x08\x5d\xf8\xa2\x00\x00\x14\xff\x08\xaa\xe3\xe4\
\x00\x00\x18\x0d\x08\xd1\xeb\x84\x00\x00\x19\xda\x08\xe3\x4b\xdc\
\x00\x00\x0e\xd4\x08\xee\x26\x24\x00\x00\x16\x35\x09\x5c\xef\xe5\
\x00\x00\x1d\x0a\x0a\x1f\xc8\x95\x00\x00\x11\x86\x0a\x3d\x0e\x95\
\x00\x00\x13\x40\x0a\x64\x3c\x14\x00\x00\x0b\x57\x0a\x65\x4b\xe4\
\x00\x00\x18\xd2\x0a\x68\xf8\xf7\x00\x00\x07\xe6\x0a\x68\xf8\xf7\
\x00\x00\x0e\x0e\x0a\xa8\x4a\xc9\x00\x00\x0f\xe9\x0b\x0a\x04\x95\
\x00\x00\x1c\x8e\x0b\x66\x23\x46\x00\x00\x10\xb1\x0b\x66\x23\x46\
\x00\x00\x14\x0a\x0b\x8c\x76\xb4\x00\x00\x0a\xfb\x0b\xba\x83\x5b\
\x00\x00\x16\xa9\x0c\x3b\x98\x64\x00\x00\x08\xe2\x0c\x47\xc1\x62\
\x00\x00\x09\x16\x0c\x89\x28\x2e\x00\x00\x20\x6d\x0c\x8a\xac\x07\
\x00\x00\x0f\x83\x0c\x9c\x0d\x42\x00\x00\x15\x57\x0c\xc9\xa0\x0e\
\x00\x00\x05\x00\x0c\xfb\x29\xd4\x00\x00\x01\x24\x0d\x31\xb8\x6e\
\x00\x00\x17\x17\x0d\x33\xd9\xec\x00\x00\x06\xa4\x0d\xc4\xc8\x3c\
\x00\x00\x06\xf3\x0e\x39\x74\x39\x00\x00\x07\xac\x0e\x74\x68\x5e\
\x00\x00\x0e\x39\x0e\xb5\xff\x84\x00\x00\x1b\x90\x69\x00\x00\x21\
\x6f\x03\x00\x00\x00\x04\x51\x73\x95\xed\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0b\x41\x62\
\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x92\x00\
\x43\x00\x6f\x00\x70\x00\x79\x00\x72\x00\x69\x00\x67\x00\x68\x00\
\x74\x00\x20\x00\x28\x00\x43\x00\x29\x00\x20\x00\x32\x00\x30\x00\
\x31\x00\x31\x00\x2d\x00\x32\x00\x30\x00\x31\x00\x33\x00\x20\x00\
\x54\x00\x68\x00\x65\x00\x20\x00\x46\x00\x72\x00\x65\x00\x65\x00\
\x20\x00\x61\x00\x6e\x00\x64\x00\x20\x00\x4f\x00\x70\x00\x65\x00\
\x6e\x00\x20\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x00\
\x20\x00\x53\x00\x6f\x00\x66\x00\x74\x00\x77\x00\x61\x00\x72\x00\
\x65\x00\x20\x00\x4c\x00\x65\x00\x61\x00\x72\x00\x6e\x00\x69\x00\
\x6e\x00\x67\x00\x20\x00\x43\x00\x65\x00\x6e\x00\x74\x00\x72\x00\
\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x49\x43\x6f\x70\x79\x72\
\x69\x67\x68\x74\x20\x28\x43\x29\x20\x32\x30\x31\x31\x2d\x32\x30\
\x31\x33\x20\x54\x68\x65\x20\x46\x72\x65\x65\x20\x61\x6e\x64\x20\
\x4f\x70\x65\x6e\x20\x53\x6f\x75\x72\x63\x65\x20\x53\x6f\x66\x74\
\x77\x61\x72\x65\x20\x4c\x65\x61\x72\x6e\x69\x6e\x67\x20\x43\x65\
\x6e\x74\x72\x65\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\
\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x16\x51\x73\x4e\x8e\x00\x20\
\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\x41\x62\x6f\
\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x92\x00\x46\
\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x66\x2f\
\x4e\x00\x6b\x3e\x89\xc6\x98\x91\x5f\x55\x52\x36\x5d\xe5\x51\x77\
\xff\x0c\x80\xfd\x59\x1f\x63\x55\x63\x49\x5e\x76\x8b\xb0\x5f\x55\
\x6f\x14\x79\x3a\x30\x02\x5b\x83\x80\xfd\x59\x1f\x63\x55\x63\x49\
\x67\x65\x81\xea\x00\x55\x00\x53\x00\x42\xff\x0c\x00\x46\x00\x69\
\x00\x72\x00\x65\x00\x57\x00\x69\x00\x72\x00\x65\xff\x0c\x67\x2c\
\x57\x30\x68\x4c\x97\x62\x76\x84\x89\xc6\x98\x91\x6e\x90\xff\x0c\
\x5e\x76\x4e\x0e\x97\xf3\x98\x91\x8f\x93\x51\x65\x6d\xf7\x54\x08\
\xff\x0c\x75\x1f\x62\x10\x89\xc6\x98\x91\x8b\xb0\x5f\x55\x30\x02\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\xc6\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x69\x73\x20\x61\x20\x76\x69\x64\x65\x6f\x20\x63\x61\
\x70\x74\x75\x72\x65\x20\x75\x74\x69\x6c\x69\x74\x79\x20\x63\x61\
\x70\x61\x62\x6c\x65\x20\x6f\x66\x20\x63\x61\x70\x74\x75\x72\x69\
\x6e\x67\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x73\
\x2e\x20\x49\x74\x20\x63\x61\x70\x74\x75\x72\x65\x73\x20\x76\x69\
\x64\x65\x6f\x20\x73\x6f\x75\x72\x63\x65\x73\x20\x73\x75\x63\x68\
\x20\x61\x73\x20\x75\x73\x62\x2c\x20\x66\x69\x72\x65\x77\x69\x72\
\x65\x2c\x20\x6f\x72\x20\x6c\x6f\x63\x61\x6c\x20\x64\x65\x73\x6b\
\x74\x6f\x70\x20\x61\x6c\x6f\x6e\x67\x20\x77\x69\x74\x68\x20\x61\
\x75\x64\x69\x6f\x20\x61\x6e\x64\x20\x6d\x69\x78\x65\x73\x20\x74\
\x68\x65\x6d\x20\x74\x6f\x67\x65\x74\x68\x65\x72\x20\x74\x6f\x20\
\x70\x72\x6f\x64\x75\x63\x65\x20\x61\x20\x76\x69\x64\x65\x6f\x2e\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x00\x9a\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\
\x00\x65\x00\x65\x00\x72\x63\x88\x67\x43\x4e\x8e\x90\x1a\x75\x28\
\x51\x6c\x51\x71\x8b\xb8\x53\xef\x00\x47\x00\x50\x00\x4c\x00\x20\
\x00\x76\x00\x33\x30\x02\x6b\x64\x8f\x6f\x4e\xf6\x4e\x0d\x63\xd0\
\x4f\x9b\x4e\xfb\x4f\x55\x66\x0e\x78\x6e\x76\x84\x62\x16\x96\x90\
\x54\x2b\x76\x84\x62\xc5\x4f\xdd\x62\x16\x4f\xdd\x8b\xc1\x30\x02\
\x4f\x5c\x80\x05\x57\x28\x4e\xfb\x4f\x55\x60\xc5\x51\xb5\x4e\x0b\
\x57\x47\x4e\x0d\x5c\x31\x56\xe0\x75\x28\x62\x37\x4f\x7f\x75\x28\
\x67\x2c\x8f\x6f\x4e\xf6\x80\x0c\x53\xd1\x75\x1f\x76\x84\x4e\xfb\
\x4f\x55\x63\x5f\x59\x31\x62\x7f\x62\xc5\x8d\x23\x4e\xfb\x30\x02\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\xdb\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x69\x73\x20\x6c\x69\x63\x65\x6e\x73\x65\x64\x20\x75\
\x6e\x64\x65\x72\x20\x74\x68\x65\x20\x47\x50\x4c\x20\x76\x65\x72\
\x73\x69\x6f\x6e\x20\x33\x2e\x20\x54\x68\x69\x73\x20\x73\x6f\x66\
\x74\x77\x61\x72\x65\x20\x69\x73\x20\x70\x72\x6f\x76\x69\x64\x65\
\x64\x20\x27\x61\x73\x2d\x69\x73\x27\x2c\x77\x69\x74\x68\x6f\x75\
\x74\x20\x61\x6e\x79\x20\x65\x78\x70\x72\x65\x73\x73\x20\x6f\x72\
\x20\x69\x6d\x70\x6c\x69\x65\x64\x20\x77\x61\x72\x72\x61\x6e\x74\
\x79\x2e\x20\x49\x6e\x20\x6e\x6f\x20\x65\x76\x65\x6e\x74\x20\x77\
\x69\x6c\x6c\x20\x74\x68\x65\x20\x61\x75\x74\x68\x6f\x72\x73\x20\
\x62\x65\x20\x68\x65\x6c\x64\x20\x6c\x69\x61\x62\x6c\x65\x20\x66\
\x6f\x72\x20\x61\x6e\x79\x20\x64\x61\x6d\x61\x67\x65\x73\x20\x61\
\x72\x69\x73\x69\x6e\x67\x20\x66\x72\x6f\x6d\x20\x74\x68\x65\x20\
\x75\x73\x65\x20\x6f\x66\x20\x74\x68\x69\x73\x20\x73\x6f\x66\x74\
\x77\x61\x72\x65\x2e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\
\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x0c\x80\x33\x67\x3a\x56\
\xfe\x5f\x62\x8b\xbe\x8b\xa1\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x16\x48\x65\x61\x64\x70\x68\x6f\x6e\x65\x73\x20\x67\x72\x61\x70\
\x68\x69\x63\x73\x20\x62\x79\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\
\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x10\x5f\x55\x52\
\x36\x63\x09\x94\xae\x56\xfe\x5f\x62\x8b\xbe\x8b\xa1\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x19\x52\x65\x63\x6f\x72\x64\x20\x62\x75\
\x74\x74\x6f\x6e\x20\x67\x72\x61\x70\x68\x69\x63\x73\x20\x62\x79\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x00\x04\x72\x48\x67\x2c\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x07\x56\x65\x72\x73\x69\x6f\x6e\x07\x00\x00\x00\x0b\
\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\
\x08\x97\xf3\x98\x91\x8f\x93\x51\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0b\x41\x75\x64\x69\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x0a\x97\xf3\x98\x91\x6d\xf7\x98\x91\x56\x68\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x41\x75\x64\x69\x6f\x20\
\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x97\xf3\x98\
\x91\x8f\x93\x51\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x41\
\x75\x64\x69\x6f\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x97\xf3\x98\x91\x6d\xf7\x98\x91\x56\x68\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\x4d\x69\x78\x65\x72\x07\
\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\
\x70\x01\x03\x00\x00\x00\x04\x51\x73\x95\xed\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x08\x9e\xd8\x8b\xa4\x8b\xed\x8a\x00\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x10\x44\x65\x66\x61\x75\x6c\x74\x20\x4c\x61\x6e\x67\
\x75\x61\x67\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x54\x2f\x75\x28\
\x81\xea\x52\xa8\x96\x90\x85\xcf\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x10\x45\x6e\x61\x62\x6c\x65\x20\x41\x75\x74\x6f\x2d\x48\x69\
\x64\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x00\x46\x00\x72\x00\x65\
\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x91\x4d\x7f\x6e\
\x5d\xe5\x51\x77\x08\x00\x00\x00\x00\x06\x00\x00\x00\x13\x46\x72\
\x65\x65\x73\x65\x65\x72\x20\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\
\x41\x70\x70\x01\x03\x00\x00\x00\x04\x90\x1a\x75\x28\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x07\x47\x65\x6e\x65\x72\x61\x6c\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x04\x51\x76\x4e\xd6\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0d\x4d\x69\x73\x63\x65\x6c\x6c\x61\x6e\x65\x6f\x75\
\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\
\x41\x70\x70\x01\x03\x00\x00\x00\x04\x8f\x93\x51\xfa\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x4f\x75\x74\x70\x75\x74\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x04\x63\xd2\x4e\xf6\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x07\x50\x6c\x75\x67\x69\x6e\x73\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x08\x4f\xdd\x5b\x58\x76\xee\x5f\x55\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x10\x52\x65\x63\x6f\x72\x64\x20\x44\x69\x72\x65\x63\
\x74\x6f\x72\x79\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x04\x8b\xb0\x5f\x55\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x69\x6e\x67\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x4f\xdd\x5b\x58\x91\
\x4d\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\x53\x61\x76\
\x65\x20\x50\x72\x6f\x66\x69\x6c\x65\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x04\x8b\xbe\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x53\
\x65\x74\x75\x70\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x89\xc6\x98\x91\
\x8f\x93\x51\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x56\x69\
\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x89\xc6\x98\x91\x6d\xf7\x98\x91\x56\x68\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x4d\x69\x78\x65\x72\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x08\x89\xc6\x98\x91\x8f\x93\x51\x65\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\x64\x65\x6f\x49\
\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x89\xc6\x98\x91\
\x6d\xf7\x98\x91\x56\x68\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\
\x56\x69\x64\x65\x6f\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x0c\x51\x73\x4e\x8e\x00\x28\x00\x26\x00\x41\x00\x29\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x26\x41\x62\x6f\x75\x74\x07\x00\
\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x0c\x65\x87\x4e\xf6\x00\x28\x00\x26\x00\x46\x00\x29\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x46\x69\x6c\x65\x07\
\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x0c\x5e\x2e\x52\xa9\x00\x28\x00\x26\x00\x48\x00\
\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x48\x65\x6c\x70\
\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x0c\x8b\xed\x8a\x00\x00\x28\x00\x26\x00\x4c\
\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x26\x4c\x61\x6e\
\x67\x75\x61\x67\x65\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\
\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x90\x00\x51\xfa\x00\
\x28\x00\x26\x00\x51\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x26\x51\x75\x69\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\
\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x57\x28\x7e\xbf\
\x65\x87\x68\x63\x08\x00\x00\x00\x00\x06\x00\x00\x00\x14\x4f\x6e\
\x6c\x69\x6e\x65\x20\x44\x6f\x63\x75\x6d\x65\x6e\x74\x61\x74\x69\
\x6f\x6e\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x14\x62\x53\x5f\x00\x89\xc6\x98\x91\
\x76\xee\x5f\x55\x00\x28\x00\x26\x00\x4f\x00\x29\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x15\x26\x4f\x70\x65\x6e\x20\x56\x69\x64\x65\
\x6f\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x90\
\x09\x98\x79\x00\x28\x00\x26\x00\x4f\x00\x29\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x08\x26\x4f\x70\x74\x69\x6f\x6e\x73\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x10\x65\x45\x96\x9c\x62\xa5\x54\x4a\x00\x28\x00\x26\x00\x52\x00\
\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x26\x52\x65\x70\x6f\
\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x04\x51\x73\x95\xed\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x59\x07\x6c\
\xe8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x43\x6f\x6d\x6d\x65\
\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x04\x65\xe5\x67\x1f\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x4f\x1a\x8b\xae\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x06\x4f\x1a\x8b\xae\x00\x3a\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x26\x00\x46\x00\
\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\
\x2d\x00\x20\x4f\xbf\x64\x3a\x5f\x0f\x6f\x14\x79\x3a\x5f\x55\x52\
\x36\x7a\xd9\x08\x00\x00\x00\x00\x06\x00\x00\x00\x32\x46\x72\x65\
\x65\x73\x65\x65\x72\x20\x2d\x20\x70\x6f\x72\x74\x61\x62\x6c\x65\
\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x72\x65\
\x63\x6f\x72\x64\x69\x6e\x67\x20\x73\x74\x61\x74\x69\x6f\x6e\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x0a\x96\x90\x85\xcf\x4e\x3b\x7a\x97\x53\xe3\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x10\x48\x69\x64\x65\x20\x4d\x61\x69\x6e\
\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x95\xf2\x7f\x6e\x00\
\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x49\x64\x6c\x65\x2e\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x08\x6c\xa1\x67\x09\x97\xf3\x98\x91\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x08\x4e\x6f\x20\x41\x75\x64\x69\x6f\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x0e\x6c\xa1\x67\x09\x97\xf3\x98\x91\x00\x2f\x89\xc6\x98\x91\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x4e\x6f\x20\x41\x75\x64\
\x69\x6f\x2f\x56\x69\x64\x65\x6f\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x65\xe0\x65\x45\
\x96\x9c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x4e\x6f\x20\x49\
\x73\x73\x75\x65\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x08\x6c\xa1\x67\x09\x89\xc6\x98\
\x91\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x4e\x6f\x20\x56\x69\
\x64\x65\x6f\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x04\x66\x82\x50\x5c\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x50\x61\x75\x73\x65\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x51\xc6\
\x59\x07\x5c\x31\x7e\xea\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x06\x52\x65\x61\x64\x79\x2e\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x8b\xb0\x5f\x55\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x63\x6f\x72\x64\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x04\x8b\xb0\x5f\x55\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x8b\
\xb0\x5f\x55\x66\x82\x50\x5c\x00\x2e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x11\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x20\x50\x61\x75\
\x73\x65\x64\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x08\x65\x36\x52\x30\x63\x88\x67\x43\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x52\x65\x6c\x65\x61\x73\
\x65\x20\x52\x65\x63\x65\x69\x76\x65\x64\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x65\x45\
\x96\x9c\x62\xa5\x54\x4a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\
\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x62\xa5\x54\x4a\x5d\xe5\
\x51\x77\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x52\x65\x70\x6f\
\x72\x74\x69\x6e\x67\x20\x54\x6f\x6f\x6c\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x7e\xe7\
\x7e\xed\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x73\x75\
\x6d\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x06\x4f\x1a\x8b\xae\x5b\xa4\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x4f\x1a\
\x8b\xae\x5b\xa4\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x66\x3e\x79\x3a\x4e\x3b\x7a\
\x97\x53\xe3\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x53\x68\x6f\
\x77\x20\x4d\x61\x69\x6e\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x08\x6f\x14\x8b\xb2\x80\x05\x00\x3a\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x08\x53\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x5f\
\x85\x67\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x53\x74\x61\
\x6e\x64\x62\x79\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x04\x50\x5c\x6b\x62\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x04\x53\x74\x6f\x70\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x6f\x14\
\x8b\xb2\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x54\x61\x6c\x6b\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x06\x65\xf6\x95\xf4\x00\x3a\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x68\x07\x98\
\x98\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\x74\
\x6c\x65\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x14\x8f\x93\x51\xfa\x52\x30\x00\x43\x00\
\x53\x00\x56\x00\x28\x00\x26\x00\x45\x00\x29\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0e\x26\x45\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\
\x43\x53\x56\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x14\x78\x6e\x5b\
\x9e\x89\x81\x6e\x05\x96\x64\x65\x70\x63\x6e\x5e\x93\x4e\x48\x00\
\x3f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\
\x6f\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\
\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\
\x3f\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x6e\x05\x96\x64\x51\
\x68\x90\xe8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x65\
\x61\x72\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x6e\x05\x96\x64\
\x65\x70\x63\x6e\x5e\x93\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\
\x43\x6c\x65\x61\x72\x20\x44\x61\x74\x61\x62\x61\x73\x65\x07\x00\
\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x04\x51\x73\x95\xed\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0f\
\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x06\x63\xcf\x8f\xf0\x00\x3a\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0c\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\
\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\x4f\x1a\x8b\xae\x00\
\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\
\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x1e\x00\x46\x00\x72\x00\
\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x65\x45\x96\x9c\x62\
\xa5\x54\x4a\x7f\x16\x8f\x91\x56\x68\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x16\x46\x72\x65\x65\x73\x65\x65\x72\x20\x52\x65\x70\x6f\
\x72\x74\x20\x45\x64\x69\x74\x6f\x72\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x0a\x6f\x14\x8b\xb2\x7e\xa7\x52\x2b\x00\x3a\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x4c\x65\x76\x65\x6c\x3a\x07\x00\x00\
\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x04\x52\x20\x96\x64\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\x76\x65\x07\x00\x00\x00\x0f\
\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x4f\x1a\x8b\xae\x5b\xa4\x00\x3a\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x05\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x08\x90\x09\x62\xe9\x65\x87\x4e\xf6\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0b\x53\x65\x6c\x65\x63\x74\x20\x46\
\x69\x6c\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x6f\x14\x8b\
\xb2\x80\x05\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\
\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\
\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x06\x65\xf6\x95\xf4\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\
\x68\x07\x98\x98\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\
\x54\x69\x74\x6c\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x14\
\x8f\x93\x51\xfa\x52\x30\x00\x43\x00\x53\x00\x56\x00\x28\x00\x26\
\x00\x45\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\x45\
\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\x00\
\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x14\x78\x6e\x5b\x9e\x89\x81\x6e\x05\x96\x64\x65\x70\
\x63\x6e\x5e\x93\x4e\x48\x00\x3f\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x26\x41\x72\x65\x20\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\
\x6f\x75\x20\x77\x61\x6e\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\
\x20\x74\x68\x65\x20\x44\x42\x3f\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\
\x65\xe5\x67\x1f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x44\x61\
\x74\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\x4f\x1a\x8b\xae\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x22\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\
\x65\x00\x65\x00\x72\x00\x20\x4f\x1a\x8b\xae\x6f\x14\x8b\xb2\x52\
\x17\x88\x68\x7f\x16\x8f\x91\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x14\x46\x72\x65\x65\x73\x65\x65\x72\x20\x54\x61\x6c\x6b\x20\x45\
\x64\x69\x74\x6f\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\x6f\x14\x8b\
\xb2\x80\x05\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x50\x72\x65\
\x73\x65\x6e\x74\x65\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\x52\x20\
\x96\x64\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\
\x76\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\x4f\x1a\x8b\xae\x5b\xa4\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\
\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x04\x65\xf6\x95\xf4\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x04\x54\x69\x6d\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\
\x68\x07\x98\x98\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\
\x74\x6c\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x7b\x80\x4f\x53\x4e\
\x2d\x65\x87\x08\x00\x00\x00\x00\x06\x00\x00\x00\x15\x4c\x61\x6e\
\x67\x75\x61\x67\x65\x20\x44\x69\x73\x70\x6c\x61\x79\x20\x54\x65\
\x78\x74\x07\x00\x00\x00\x0b\x54\x72\x61\x6e\x73\x6c\x61\x74\x69\
\x6f\x6e\x01\x03\x00\x00\x00\x04\x97\xf3\x6e\x90\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x06\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\
\x18\x70\x6c\x75\x67\x69\x6e\x2d\x61\x75\x64\x69\x6f\x2d\x70\x61\
\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\x00\x00\x00\x04\x53\
\xcd\x99\x88\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x46\x65\x65\
\x64\x62\x61\x63\x6b\x07\x00\x00\x00\x14\x70\x6c\x75\x67\x69\x6e\
\x2d\x61\x75\x64\x69\x6f\x66\x65\x65\x64\x62\x61\x63\x6b\x01\x03\
\x00\x00\x00\x08\x8b\xb0\x5f\x55\x68\x4c\x97\x62\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0e\x52\x65\x63\x6f\x72\x64\x20\x44\x65\x73\
\x6b\x74\x6f\x70\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\
\x64\x65\x73\x6b\x74\x6f\x70\x01\x03\x00\x00\x00\x08\x8b\xb0\x5f\
\x55\x5c\x40\x90\xe8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x52\
\x65\x63\x6f\x72\x64\x20\x52\x65\x67\x69\x6f\x6e\x07\x00\x00\x00\
\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\x74\x6f\x70\x01\
\x03\x00\x00\x00\x08\x8b\xb0\x5f\x55\x5c\x4f\x5e\x55\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x53\x63\x72\x65\x65\x6e\x07\x00\x00\
\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\x74\x6f\x70\
\x01\x03\x00\x00\x00\x08\x89\xc6\x98\x91\x8b\xbe\x59\x07\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0c\x56\x69\x64\x65\x6f\x20\x44\x65\
\x76\x69\x63\x65\x07\x00\x00\x00\x0f\x70\x6c\x75\x67\x69\x6e\x2d\
\x66\x69\x72\x65\x77\x69\x72\x65\x01\x03\x00\x00\x00\x04\x00\x49\
\x00\x50\x08\x00\x00\x00\x00\x06\x00\x00\x00\x02\x49\x50\x07\x00\
\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\
\x74\x01\x03\x00\x00\x00\x04\x63\x02\x8f\x7d\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x4d\x6f\x75\x6e\x74\x07\x00\x00\x00\x0e\x70\
\x6c\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\
\x00\x00\x04\x5b\xc6\x78\x01\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x08\x50\x61\x73\x73\x77\x6f\x72\x64\x07\x00\x00\x00\x0e\x70\x6c\
\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\
\x00\x04\x7a\xef\x53\xe3\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\
\x50\x6f\x72\x74\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\
\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\x00\x06\x5b\xa2\x62\
\x37\x7a\xef\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x43\x6c\x69\
\x65\x6e\x74\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\
\x61\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x0a\x5b\xa2\
\x62\x37\x7a\xef\x54\x0d\x79\xf0\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0b\x43\x6c\x69\x65\x6e\x74\x20\x4e\x61\x6d\x65\x07\x00\x00\
\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\
\x69\x6f\x01\x03\x00\x00\x00\x04\x8f\xde\x63\xa5\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x07\x43\x6f\x6e\x6e\x65\x63\x74\x07\x00\x00\
\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\
\x69\x6f\x01\x03\x00\x00\x00\x06\x67\x0d\x52\xa1\x56\x68\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x53\x65\x72\x76\x65\x72\x07\x00\
\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\
\x64\x69\x6f\x01\x03\x00\x00\x00\x08\x97\xf3\x6e\x90\x00\x20\x00\
\x31\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x6f\x75\x72\x63\
\x65\x20\x31\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6d\
\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x08\x97\
\xf3\x6e\x90\x00\x20\x00\x32\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x08\x53\x6f\x75\x72\x63\x65\x20\x32\x07\x00\x00\x00\x11\x70\x6c\
\x75\x67\x69\x6e\x2d\x6d\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\
\x03\x00\x00\x00\x08\x97\xf3\x98\x91\x8d\x28\x91\xcf\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0d\x41\x75\x64\x69\x6f\x20\x51\x75\x61\
\x6c\x69\x74\x79\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\
\x6f\x67\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x18\
\x75\x1f\x62\x10\x00\x58\x00\x4d\x00\x4c\x68\x3c\x5f\x0f\x9a\x6c\
\x72\x79\x51\x43\x65\x70\x63\x6e\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x2b\x47\x65\x6e\x65\x72\x61\x74\x65\x73\x20\x4d\x61\x74\x74\
\x65\x72\x68\x6f\x72\x6e\x20\x4d\x65\x74\x61\x64\x61\x74\x61\x20\
\x69\x6e\x20\x58\x4d\x4c\x20\x66\x6f\x72\x6d\x61\x74\x07\x00\x00\
\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\x74\
\x70\x75\x74\x01\x03\x00\x00\x00\x0a\x9a\x6c\x72\x79\x51\x43\x65\
\x70\x63\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x13\x4d\x61\x74\
\x74\x65\x72\x68\x6f\x72\x6e\x20\x4d\x65\x74\x61\x64\x61\x74\x61\
\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\
\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x08\x89\xc6\x98\x91\
\x8d\x28\x91\xcf\x08\x00\x00\x00\x00\x06\x00\x00\x00\x14\x56\x69\
\x64\x65\x6f\x20\x51\x75\x61\x6c\x69\x74\x79\x20\x28\x6b\x62\x2f\
\x73\x29\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\
\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x08\x4e\x3b\
\x89\x81\x67\x65\x6e\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\
\x4d\x61\x69\x6e\x20\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x0a\
\x70\x6c\x75\x67\x69\x6e\x2d\x70\x69\x70\x01\x03\x00\x00\x00\x0a\
\x00\x50\x00\x49\x00\x50\x67\x65\x6e\x90\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0a\x50\x49\x50\x20\x53\x6f\x75\x72\x63\x65\x07\x00\
\x00\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x70\x69\x70\x01\x03\x00\
\x00\x00\x04\x97\xf3\x6e\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x06\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x11\x70\x6c\x75\x67\
\x69\x6e\x2d\x70\x75\x6c\x73\x65\x61\x75\x64\x69\x6f\x01\x03\x00\
\x00\x00\x08\x89\xc6\x98\x91\x8b\xbe\x59\x07\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0c\x56\x69\x64\x65\x6f\x20\x44\x65\x76\x69\x63\
\x65\x07\x00\x00\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x75\x73\x62\
\x01\x03\x00\x00\x00\x08\x82\x72\x5f\x69\x68\x3c\x5f\x0f\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0d\x43\x6f\x6c\x6f\x75\x72\x20\x46\
\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\
\x2d\x76\x69\x64\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\
\x67\x68\x01\x03\x00\x00\x00\x06\x5e\x27\x90\x1f\x73\x87\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x09\x46\x72\x61\x6d\x65\x72\x61\x74\
\x65\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\
\x00\x00\x00\x08\x89\xc6\x98\x91\x8f\x93\x51\x65\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\
\x74\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\
\x00\x00\x00\x08\x89\xc6\x98\x91\x5c\x3a\x5b\xf8\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x53\x63\x61\x6c\
\x65\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\
\x00\x00\x00\x16\x00\x4c\x00\x65\x00\x61\x00\x6b\x00\x79\x00\x20\
\x00\x51\x00\x75\x00\x65\x00\x75\x00\x65\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0b\x4c\x65\x61\x6b\x79\x20\x51\x75\x65\x75\x65\x07\
\x00\x00\x00\x13\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\
\x70\x72\x65\x76\x69\x65\x77\x01\x03\x00\x00\x00\x04\x98\x84\x89\
\xc8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x50\x72\x65\x76\x69\
\x65\x77\x07\x00\x00\x00\x13\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\
\x64\x65\x6f\x70\x72\x65\x76\x69\x65\x77\x01\x03\x00\x00\x00\x0e\
\x4f\x5c\x4e\x3a\x73\xb0\x57\x3a\x89\xc6\x98\x91\x6e\x90\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x1a\x41\x63\x74\x20\x61\x73\x20\x61\
\x20\x6c\x69\x76\x65\x20\x76\x69\x64\x65\x6f\x20\x73\x6f\x75\x72\
\x63\x65\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\
\x64\x65\x6f\x74\x65\x73\x74\x01\x03\x00\x00\x00\x0a\x73\xb0\x57\
\x3a\x89\xc6\x98\x91\x6e\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x0b\x4c\x69\x76\x65\x20\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\
\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x74\x65\x73\
\x74\x01\x03\x00\x00\x00\x04\x6a\x21\x5f\x0f\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x07\x50\x61\x74\x74\x65\x72\x6e\x07\x00\x00\x00\
\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x74\x65\x73\
\x74\x01\x03\x00\x00\x00\x3c\x5f\x53\x4f\x7f\x75\x28\x00\x52\x00\
\x54\x00\x4d\x00\x50\x6d\x41\x5a\x92\x4f\x53\x53\x4f\x8b\xae\x65\
\xf6\xff\x0c\x62\x40\x67\x09\x51\x76\x4e\xd6\x8f\x93\x51\xfa\x5f\
\xc5\x98\x7b\x8b\xbe\x7f\x6e\x4e\x3a\x00\x6c\x00\x65\x00\x61\x00\
\x6b\x00\x79\x08\x00\x00\x00\x00\x06\x00\x00\x00\x3b\x2a\x46\x6f\
\x72\x20\x52\x54\x4d\x50\x20\x73\x74\x72\x65\x61\x6d\x69\x6e\x67\
\x2c\x20\x61\x6c\x6c\x20\x6f\x74\x68\x65\x72\x20\x6f\x75\x74\x70\
\x75\x74\x73\x20\x6d\x75\x73\x74\x20\x62\x65\x20\x73\x65\x74\x20\
\x74\x6f\x20\x6c\x65\x61\x6b\x79\x07\x00\x00\x00\x04\x72\x74\x6d\
\x70\x01\x03\x00\x00\x00\x74\x8b\xe6\x89\xc1\x00\x3a\x00\x20\x00\
\x68\x00\x74\x00\x74\x00\x70\x00\x3a\x00\x2f\x00\x2f\x00\x77\x00\
\x77\x00\x77\x00\x2e\x00\x6a\x00\x75\x00\x73\x00\x74\x00\x69\x00\
\x6e\x00\x2e\x00\x74\x00\x76\x00\x2f\x00\x62\x00\x72\x00\x6f\x00\
\x61\x00\x64\x00\x63\x00\x61\x00\x73\x00\x74\x00\x2f\x00\x61\x00\
\x64\x00\x76\x00\x5f\x00\x6f\x00\x74\x00\x68\x00\x65\x00\x72\x00\
\x0a\x60\xa8\x5f\xc5\x98\x7b\x76\x7b\x5f\x55\x4e\xe5\x83\xb7\x53\
\xd6\x6d\x41\x5a\x92\x4f\x53\x5b\xc6\x94\xa5\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x61\x2a\x53\x65\x65\x3a\x20\x68\x74\x74\x70\x3a\
\x2f\x2f\x77\x77\x77\x2e\x6a\x75\x73\x74\x69\x6e\x2e\x74\x76\x2f\
\x62\x72\x6f\x61\x64\x63\x61\x73\x74\x2f\x61\x64\x76\x5f\x6f\x74\
\x68\x65\x72\x0a\x59\x6f\x75\x20\x6d\x75\x73\x74\x20\x62\x65\x20\
\x6c\x6f\x67\x67\x65\x64\x20\x69\x6e\x20\x74\x6f\x20\x6f\x62\x74\
\x61\x69\x6e\x20\x79\x6f\x75\x72\x20\x53\x74\x72\x65\x61\x6d\x69\
\x6e\x67\x20\x4b\x65\x79\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\
\x03\x00\x00\x00\x84\x8b\xa4\x8b\xc1\x00\x55\x00\x52\x00\x4c\x5e\
\x94\x8b\xe5\x5d\xf2\x7e\xcf\x57\x28\x60\xa8\x76\x84\x6d\x4f\x89\
\xc8\x56\x68\x7a\x97\x53\xe3\x62\x53\x5f\x00\x00\x2e\x00\x0a\x59\
\x82\x67\x9c\x6c\xa1\x67\x09\x76\x84\x8b\xdd\x00\x2c\x8b\xf7\x70\
\xb9\x51\xfb\x4e\xe5\x4e\x0b\x00\x55\x00\x52\x00\x4c\x4e\xe5\x51\
\x41\x8b\xb8\x00\x66\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\
\x65\x00\x72\x7b\xa1\x74\x06\x60\xa8\x76\x84\x00\x6a\x00\x75\x00\
\x73\x00\x74\x00\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x98\x91\x90\
\x53\x00\x2e\x00\x0a\x00\x25\x00\x31\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x91\x41\x6e\x20\x61\x75\x74\x68\x6f\x72\x69\x7a\x61\x74\
\x69\x6f\x6e\x20\x55\x52\x4c\x20\x73\x68\x6f\x75\x6c\x64\x20\x68\
\x61\x76\x65\x20\x6f\x70\x65\x6e\x65\x64\x20\x69\x6e\x20\x79\x6f\
\x75\x72\x20\x62\x72\x6f\x77\x73\x65\x72\x2e\x0a\x49\x66\x20\x6e\
\x6f\x74\x2c\x20\x67\x6f\x20\x6f\x70\x65\x6e\x20\x74\x68\x65\x20\
\x66\x6f\x6c\x6c\x6f\x77\x69\x6e\x67\x20\x55\x52\x4c\x20\x74\x6f\
\x20\x61\x6c\x6c\x6f\x77\x20\x66\x72\x65\x65\x73\x65\x65\x72\x20\
\x74\x6f\x20\x6d\x61\x6e\x61\x67\x65\x20\x79\x6f\x75\x72\x20\x6a\
\x75\x73\x74\x69\x6e\x2e\x74\x76\x20\x63\x68\x61\x6e\x6e\x65\x6c\
\x2e\x0a\x25\x31\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\
\x00\x00\x3c\x8b\xa4\x8b\xc1\x59\x31\x8d\x25\x30\x02\x60\xa8\x62\
\x40\x63\xd0\x4f\x9b\x76\x84\x00\x4a\x00\x75\x00\x73\x00\x74\x00\
\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x76\x84\x8b\xa4\x8b\xc1\x4f\
\xe1\x60\x6f\x53\xef\x80\xfd\x4e\x0d\x6b\x63\x78\x6e\x30\x02\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x4b\x41\x75\x74\x68\x65\x6e\x74\
\x69\x63\x61\x74\x69\x6f\x6e\x20\x66\x61\x69\x6c\x65\x64\x2e\x20\
\x53\x75\x70\x70\x6c\x69\x65\x64\x20\x63\x72\x65\x64\x65\x6e\x74\
\x69\x61\x6c\x73\x20\x66\x6f\x72\x20\x4a\x75\x73\x74\x69\x6e\x2e\
\x74\x76\x20\x6d\x61\x79\x20\x62\x65\x20\x69\x6e\x63\x6f\x72\x72\
\x65\x63\x74\x2e\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\
\x00\x00\x22\x89\x86\x76\xd6\x00\x6a\x00\x75\x00\x73\x00\x74\x00\
\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x76\x84\x81\xea\x5b\x9a\x4e\
\x49\x8b\xbe\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x27\x4f\
\x76\x65\x72\x77\x72\x69\x74\x65\x20\x63\x75\x73\x74\x6f\x6d\x20\
\x73\x65\x74\x74\x69\x6e\x67\x73\x20\x66\x6f\x72\x20\x6a\x75\x73\
\x74\x69\x6e\x2e\x74\x76\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\
\
\x00\x00\x21\x23\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x02\xe8\x00\x04\xa8\xa5\x00\x00\x0e\x3f\x00\x04\xa8\xa5\
\x00\x00\x1b\x2f\x00\x05\x76\x94\x00\x00\x1d\x5d\x00\x05\x96\x5d\
\x00\x00\x13\x97\x00\x05\x96\x5d\x00\x00\x1c\x87\x00\x05\xa8\x2b\
\x00\x00\x15\x05\x00\x05\xab\x60\x00\x00\x14\xd5\x00\x05\xb0\x35\
\x00\x00\x1c\xb7\x00\x18\xf5\x14\x00\x00\x12\x8b\x00\x2a\xd0\x25\
\x00\x00\x0c\x21\x00\x2a\xec\x30\x00\x00\x0c\x56\x00\x2b\x8c\x04\
\x00\x00\x0c\xbc\x00\x3c\xdc\x74\x00\x00\x07\x32\x00\x48\x85\x72\
\x00\x00\x07\x74\x00\x4a\x2b\x82\x00\x00\x16\xaa\x00\x4a\x36\x95\
\x00\x00\x00\x00\x00\x4a\x36\x95\x00\x00\x07\xb6\x00\x4a\x36\x95\
\x00\x00\x0d\xd5\x00\x4a\x36\x95\x00\x00\x17\x43\x00\x4c\xcc\x54\
\x00\x00\x0e\x69\x00\x4c\xcc\x54\x00\x00\x1b\x5d\x00\x4f\xb2\x7e\
\x00\x00\x10\x14\x00\x56\x8c\x95\x00\x00\x11\x54\x00\x59\x66\x0a\
\x00\x00\x13\xc3\x00\x59\x66\x0a\x00\x00\x18\xe4\x00\x59\xcb\xc0\
\x00\x00\x0a\x9c\x00\x5b\x03\x8a\x00\x00\x15\x3f\x00\x5b\x03\x8a\
\x00\x00\x19\xbc\x00\x5b\x0b\x25\x00\x00\x1c\xe7\x00\x89\x67\x25\
\x00\x00\x07\xe9\x00\xb2\x0d\x89\x00\x00\x05\xe0\x00\xe1\x80\xe2\
\x00\x00\x18\x00\x00\xff\x11\x49\x00\x00\x05\x6e\x01\x04\x45\x0f\
\x00\x00\x10\x85\x01\x08\xec\xc4\x00\x00\x06\xa8\x01\x14\xad\x04\
\x00\x00\x0a\xdb\x01\x14\xad\x04\x00\x00\x1d\xca\x01\x1c\xb5\xc2\
\x00\x00\x06\xed\x01\x30\xf4\x02\x00\x00\x0b\x20\x01\x48\xbf\xaf\
\x00\x00\x10\x49\x01\x5c\xff\xef\x00\x00\x11\x16\x02\x89\xdc\xc7\
\x00\x00\x0f\xa8\x02\xa7\x96\xc4\x00\x00\x0b\xe9\x02\xf0\x16\xfe\
\x00\x00\x03\x25\x03\x08\xa7\x7e\x00\x00\x00\x81\x04\x18\xa4\x4f\
\x00\x00\x15\xf4\x04\x18\xa4\x4f\x00\x00\x1a\x7b\x04\x3b\xa8\x09\
\x00\x00\x0c\xf1\x04\x42\x63\x15\x00\x00\x08\x3d\x04\xcc\xc5\x7a\
\x00\x00\x0e\xa0\x04\xcc\xc5\x7a\x00\x00\x17\xc0\x04\xd6\x80\x8a\
\x00\x00\x17\x78\x05\x0a\xfe\xd3\x00\x00\x10\xd3\x05\x2c\xcb\xfa\
\x00\x00\x18\x74\x05\x6c\xb7\xc4\x00\x00\x09\x86\x05\x8b\x7b\xbe\
\x00\x00\x11\x81\x05\x8b\xa6\x84\x00\x00\x11\xaf\x05\x8c\x46\xc5\
\x00\x00\x18\xac\x05\x8c\x46\xc5\x00\x00\x1c\x51\x05\x8c\x76\x94\
\x00\x00\x12\xe3\x05\x8c\xac\x35\x00\x00\x13\x61\x05\x9c\x42\xee\
\x00\x00\x0e\xda\x05\xb0\xb2\x8a\x00\x00\x15\x6e\x05\xb0\xb2\x8a\
\x00\x00\x19\xf1\x06\x7b\x08\xe3\x00\x00\x0d\x6a\x06\x8d\x3a\x43\
\x00\x00\x09\x4f\x06\xb8\x19\xfa\x00\x00\x14\x5c\x06\xb8\x19\xfa\
\x00\x00\x19\x76\x07\x3b\xe0\x03\x00\x00\x09\xba\x08\x4e\x9c\xf5\
\x00\x00\x0c\x85\x08\x5d\xf8\xa2\x00\x00\x1b\x98\x08\xe3\x4b\xdc\
\x00\x00\x13\x15\x08\xee\x26\x24\x00\x00\x1d\x18\x0a\x1f\xc8\x95\
\x00\x00\x16\xe1\x0a\x3d\x0e\x95\x00\x00\x19\x19\x0a\x64\x3c\x14\
\x00\x00\x0e\x04\x0a\x65\x4b\xe4\x00\x00\x1d\x8c\x0a\x68\xf8\xf7\
\x00\x00\x0a\x55\x0a\x68\xf8\xf7\x00\x00\x11\xe9\x0a\xa8\x4a\xc9\
\x00\x00\x14\x9c\x0b\x66\x23\x46\x00\x00\x15\x9e\x0b\x66\x23\x46\
\x00\x00\x1a\x27\x0b\x8c\x76\xb4\x00\x00\x0d\xa0\x0c\x3b\x98\x64\
\x00\x00\x0b\x65\x0c\x47\xc1\x62\x00\x00\x0b\xa7\x0c\x8a\xac\x07\
\x00\x00\x13\xf2\x0c\x9c\x0d\x42\x00\x00\x1c\x0e\x0c\xc9\xa0\x0e\
\x00\x00\x06\x73\x0c\xfb\x29\xd4\x00\x00\x00\x31\x0d\x33\xd9\xec\
\x00\x00\x08\xa5\x0d\xc4\xc8\x3c\x00\x00\x09\x18\x0e\x39\x74\x39\
\x00\x00\x09\xf3\x0e\x74\x68\x5e\x00\x00\x12\x2c\x69\x00\x00\x1e\
\x1a\x03\x00\x00\x00\x0c\x00\x46\x00\x65\x00\x72\x00\x6d\x00\x65\
\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\
\x65\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\
\x67\x01\x03\x00\x00\x00\x22\x00\x46\x00\x72\x00\x65\x00\x65\x00\
\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\xc0\x00\x20\x00\x70\x00\
\x72\x00\x6f\x00\x70\x00\x6f\x00\x73\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0e\x46\x72\x65\x65\x73\x65\x65\x72\x20\x41\x62\x6f\x75\
\x74\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\
\x67\x01\x03\x00\x00\x01\xbe\x00\x46\x00\x72\x00\x65\x00\x65\x00\
\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x65\x00\x73\x00\x74\x00\
\x20\x00\x75\x00\x6e\x00\x20\x00\x75\x00\x74\x00\x69\x00\x6c\x00\
\x69\x00\x74\x00\x61\x00\x69\x00\x72\x00\x65\x00\x20\x00\x64\x00\
\x65\x00\x20\x00\x63\x00\x61\x00\x70\x00\x74\x00\x75\x00\x72\x00\
\x65\x00\x20\x00\x76\x00\x69\x00\x64\x00\xe9\x00\x6f\x00\x20\x00\
\x70\x00\x65\x00\x72\x00\x6d\x00\x65\x00\x74\x00\x74\x00\x61\x00\
\x6e\x00\x74\x00\x20\x00\x64\x00\x27\x00\x65\x00\x6e\x00\x72\x00\
\x65\x00\x67\x00\x69\x00\x73\x00\x74\x00\x72\x00\x65\x00\x72\x00\
\x20\x00\x64\x00\x65\x00\x73\x00\x20\x00\x70\x00\x72\x00\xe9\x00\
\x73\x00\x65\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x69\x00\x6f\x00\
\x6e\x00\x73\x00\x2e\x00\x20\x00\x49\x00\x6c\x00\x20\x00\x63\x00\
\x61\x00\x70\x00\x74\x00\x75\x00\x72\x00\x65\x00\x20\x00\x6c\x00\
\x65\x00\x73\x00\x20\x00\x73\x00\x6f\x00\x75\x00\x72\x00\x63\x00\
\x65\x00\x73\x00\x20\x00\x76\x00\x69\x00\x64\x00\xe9\x00\x6f\x00\
\x73\x00\x20\x00\x64\x00\x65\x00\x70\x00\x75\x00\x69\x00\x73\x00\
\x20\x00\x75\x00\x73\x00\x62\x00\x2c\x00\x20\x00\x66\x00\x69\x00\
\x72\x00\x65\x00\x77\x00\x69\x00\x72\x00\x65\x00\x2c\x00\x20\x00\
\x6f\x00\x75\x00\x20\x00\x6c\x00\x65\x00\x20\x00\x62\x00\x75\x00\
\x72\x00\x65\x00\x61\x00\x75\x00\x20\x00\x6c\x00\x6f\x00\x63\x00\
\x61\x00\x6c\x00\x2e\x00\x20\x00\x4c\x00\x65\x00\x20\x00\x76\x00\
\x69\x00\x64\x00\xe9\x00\x6f\x00\x20\x00\x65\x00\x74\x00\x20\x00\
\x6c\x00\x27\x00\x61\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x20\x00\
\x73\x00\x6f\x00\x6e\x00\x74\x00\x20\x00\x6d\x00\x69\x00\x78\x00\
\xe9\x00\x73\x00\x20\x00\x65\x00\x6e\x00\x73\x00\x65\x00\x6d\x00\
\x62\x00\x6c\x00\x65\x00\x20\x00\x70\x00\x6f\x00\x75\x00\x72\x00\
\x20\x00\x70\x00\x72\x00\x6f\x00\x64\x00\x75\x00\x69\x00\x72\x00\
\x65\x00\x20\x00\x75\x00\x6e\x00\x20\x00\x76\x00\x69\x00\x64\x00\
\xe9\x00\x6f\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\xc6\x46\
\x72\x65\x65\x73\x65\x65\x72\x20\x69\x73\x20\x61\x20\x76\x69\x64\
\x65\x6f\x20\x63\x61\x70\x74\x75\x72\x65\x20\x75\x74\x69\x6c\x69\
\x74\x79\x20\x63\x61\x70\x61\x62\x6c\x65\x20\x6f\x66\x20\x63\x61\
\x70\x74\x75\x72\x69\x6e\x67\x20\x70\x72\x65\x73\x65\x6e\x74\x61\
\x74\x69\x6f\x6e\x73\x2e\x20\x49\x74\x20\x63\x61\x70\x74\x75\x72\
\x65\x73\x20\x76\x69\x64\x65\x6f\x20\x73\x6f\x75\x72\x63\x65\x73\
\x20\x73\x75\x63\x68\x20\x61\x73\x20\x75\x73\x62\x2c\x20\x66\x69\
\x72\x65\x77\x69\x72\x65\x2c\x20\x6f\x72\x20\x6c\x6f\x63\x61\x6c\
\x20\x64\x65\x73\x6b\x74\x6f\x70\x20\x61\x6c\x6f\x6e\x67\x20\x77\
\x69\x74\x68\x20\x61\x75\x64\x69\x6f\x20\x61\x6e\x64\x20\x6d\x69\
\x78\x65\x73\x20\x74\x68\x65\x6d\x20\x74\x6f\x67\x65\x74\x68\x65\
\x72\x20\x74\x6f\x20\x70\x72\x6f\x64\x75\x63\x65\x20\x61\x20\x76\
\x69\x64\x65\x6f\x2e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\
\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x01\x4e\x00\x53\x00\x6f\x00\
\x75\x00\x73\x00\x20\x00\x6c\x00\x61\x00\x20\x00\x6c\x00\x69\x00\
\x63\x00\x65\x00\x6e\x00\x63\x00\x65\x00\x20\x00\x47\x00\x50\x00\
\x4c\x00\x20\x00\x76\x00\x65\x00\x72\x00\x73\x00\x69\x00\x6f\x00\
\x6e\x00\x20\x00\x33\x00\x2e\x00\x20\x00\x43\x00\x65\x00\x20\x00\
\x6c\x00\x6f\x00\x67\x00\x69\x00\x63\x00\x69\x00\x65\x00\x6c\x00\
\x20\x00\x65\x00\x73\x00\x74\x00\x20\x00\x64\x00\x69\x00\x73\x00\
\x70\x00\x6f\x00\x6e\x00\x69\x00\x62\x00\x6c\x00\x65\x00\x20\x00\
\x74\x00\x65\x00\x6c\x00\x20\x00\x71\x00\x75\x00\x65\x00\x6c\x00\
\x2c\x00\x20\x00\x73\x00\x61\x00\x6e\x00\x73\x00\x20\x00\x61\x00\
\x75\x00\x63\x00\x75\x00\x6e\x00\x65\x00\x20\x00\x61\x00\x73\x00\
\x73\x00\x75\x00\x72\x00\x61\x00\x6e\x00\x63\x00\x65\x00\x2e\x00\
\x20\x00\x4c\x00\x65\x00\x73\x00\x20\x00\x61\x00\x75\x00\x74\x00\
\x65\x00\x75\x00\x72\x00\x73\x00\x20\x00\x6e\x00\x65\x00\x20\x00\
\x73\x00\x6f\x00\x6e\x00\x74\x00\x20\x00\x70\x00\x61\x00\x73\x00\
\x20\x00\x72\x00\x65\x00\x73\x00\x70\x00\x6f\x00\x6e\x00\x73\x00\
\x61\x00\x62\x00\x6c\x00\x65\x00\x73\x00\x20\x00\x64\x00\x65\x00\
\x20\x00\x74\x00\x6f\x00\x75\x00\x74\x00\x20\x00\x64\x00\x6f\x00\
\x6d\x00\x6d\x00\x61\x00\x67\x00\x65\x00\x73\x00\x20\x00\x63\x00\
\x61\x00\x75\x00\x73\x00\xe9\x00\x20\x00\x70\x00\x61\x00\x72\x00\
\x20\x00\x63\x00\x65\x00\x20\x00\x6c\x00\x6f\x00\x67\x00\x69\x00\
\x63\x00\x69\x00\x65\x00\x6c\x00\x2e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\xdb\x46\x72\x65\x65\x73\x65\x65\x72\x20\x69\x73\x20\x6c\
\x69\x63\x65\x6e\x73\x65\x64\x20\x75\x6e\x64\x65\x72\x20\x74\x68\
\x65\x20\x47\x50\x4c\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x33\x2e\
\x20\x54\x68\x69\x73\x20\x73\x6f\x66\x74\x77\x61\x72\x65\x20\x69\
\x73\x20\x70\x72\x6f\x76\x69\x64\x65\x64\x20\x27\x61\x73\x2d\x69\
\x73\x27\x2c\x77\x69\x74\x68\x6f\x75\x74\x20\x61\x6e\x79\x20\x65\
\x78\x70\x72\x65\x73\x73\x20\x6f\x72\x20\x69\x6d\x70\x6c\x69\x65\
\x64\x20\x77\x61\x72\x72\x61\x6e\x74\x79\x2e\x20\x49\x6e\x20\x6e\
\x6f\x20\x65\x76\x65\x6e\x74\x20\x77\x69\x6c\x6c\x20\x74\x68\x65\
\x20\x61\x75\x74\x68\x6f\x72\x73\x20\x62\x65\x20\x68\x65\x6c\x64\
\x20\x6c\x69\x61\x62\x6c\x65\x20\x66\x6f\x72\x20\x61\x6e\x79\x20\
\x64\x61\x6d\x61\x67\x65\x73\x20\x61\x72\x69\x73\x69\x6e\x67\x20\
\x66\x72\x6f\x6d\x20\x74\x68\x65\x20\x75\x73\x65\x20\x6f\x66\x20\
\x74\x68\x69\x73\x20\x73\x6f\x66\x74\x77\x61\x72\x65\x2e\x07\x00\
\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\
\x00\x00\x00\x3c\x00\x44\x00\x65\x00\x73\x00\x69\x00\x67\x00\x6e\
\x00\x20\x00\x67\x00\x72\x00\x61\x00\x70\x00\x68\x00\x69\x00\x71\
\x00\x75\x00\x65\x00\x20\x00\xe9\x00\x63\x00\x6f\x00\x75\x00\x74\
\x00\x65\x00\x75\x00\x72\x00\x73\x00\x20\x00\x70\x00\x61\x00\x72\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x16\x48\x65\x61\x64\x70\x68\
\x6f\x6e\x65\x73\x20\x67\x72\x61\x70\x68\x69\x63\x73\x20\x62\x79\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x00\x5a\x00\x44\x00\x65\x00\x73\x00\x69\x00\x67\
\x00\x6e\x00\x20\x00\x67\x00\x72\x00\x61\x00\x70\x00\x68\x00\x69\
\x00\x71\x00\x75\x00\x65\x00\x20\x00\x64\x00\x75\x00\x20\x00\x62\
\x00\x6f\x00\x75\x00\x74\x00\x6f\x00\x6e\x00\x20\x00\x65\x00\x6e\
\x00\x72\x00\x65\x00\x67\x00\x69\x00\x73\x00\x74\x00\x72\x00\x65\
\x00\x6d\x00\x65\x00\x6e\x00\x74\x00\x20\x00\x70\x00\x61\x00\x72\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x19\x52\x65\x63\x6f\x72\x64\
\x20\x62\x75\x74\x74\x6f\x6e\x20\x67\x72\x61\x70\x68\x69\x63\x73\
\x20\x62\x79\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\
\x6c\x6f\x67\x01\x03\x00\x00\x00\x0e\x00\x56\x00\x65\x00\x72\x00\
\x73\x00\x69\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x07\x56\x65\x72\x73\x69\x6f\x6e\x07\x00\x00\x00\x0b\x41\x62\x6f\
\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x18\x00\x45\
\x00\x6e\x00\x74\x00\x72\x00\xe9\x00\x65\x00\x20\x00\x41\x00\x75\
\x00\x64\x00\x69\x00\x6f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\
\x41\x75\x64\x69\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x18\x00\x4d\x00\x69\x00\x78\x00\x65\x00\x75\x00\x72\x00\
\x20\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0b\x41\x75\x64\x69\x6f\x20\x4d\x69\x78\x65\x72\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x16\x00\x45\x00\x6e\x00\x74\x00\x72\
\x00\xe9\x00\x65\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\x49\x6e\x70\
\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x4d\x00\x69\x00\x78\
\x00\x65\x00\x75\x00\x72\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\x4d\
\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x46\x00\x65\
\x00\x72\x00\x6d\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\
\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x22\x00\
\x4c\x00\x61\x00\x6e\x00\x67\x00\x75\x00\x65\x00\x20\x00\x70\x00\
\x61\x00\x72\x00\x20\x00\x64\x00\xe9\x00\x66\x00\x61\x00\x75\x00\
\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x44\x65\x66\x61\x75\
\x6c\x74\x20\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x36\x00\x41\x00\x63\x00\x74\x00\x69\x00\x76\x00\x65\x00\
\x72\x00\x20\x00\x6c\x00\x27\x00\x61\x00\x75\x00\x74\x00\x6f\x00\
\x20\x00\x6d\x00\x69\x00\x6e\x00\x69\x00\x6d\x00\x69\x00\x73\x00\
\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x10\x45\x6e\x61\x62\x6c\x65\x20\x41\x75\x74\x6f\x2d\x48\
\x69\x64\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x3e\x00\x46\x00\x72\x00\
\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x4f\x00\
\x75\x00\x74\x00\x69\x00\x6c\x00\x20\x00\x64\x00\x65\x00\x20\x00\
\x63\x00\x6f\x00\x6e\x00\x66\x00\x69\x00\x67\x00\x75\x00\x72\x00\
\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x13\x46\x72\x65\x65\x73\x65\x65\x72\x20\x43\x6f\x6e\x66\
\x69\x67\x54\x6f\x6f\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x47\
\x00\xe9\x00\x6e\x00\xe9\x00\x72\x00\x61\x00\x6c\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x07\x47\x65\x6e\x65\x72\x61\x6c\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x00\x4d\x00\x69\x00\x73\x00\x63\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0d\x4d\x69\x73\x63\x65\x6c\x6c\x61\x6e\
\x65\x6f\x75\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x53\x00\x6f\
\x00\x72\x00\x74\x00\x69\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x06\x4f\x75\x74\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x10\
\x00\x47\x00\x72\x00\x65\x00\x66\x00\x66\x00\x6f\x00\x6e\x00\x73\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x50\x6c\x75\x67\x69\x6e\
\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\
\x41\x70\x70\x01\x03\x00\x00\x00\x30\x00\x44\x00\x6f\x00\x73\x00\
\x73\x00\x69\x00\x65\x00\x72\x00\x20\x00\x64\x00\x27\x00\x65\x00\
\x6e\x00\x72\x00\x65\x00\x67\x00\x69\x00\x73\x00\x74\x00\x72\x00\
\x65\x00\x6d\x00\x65\x00\x6e\x00\x74\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x10\x52\x65\x63\x6f\x72\x64\x20\x44\x69\x72\x65\x63\x74\
\x6f\x72\x79\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x00\x45\x00\x6e\x00\
\x72\x00\x65\x00\x67\x00\x69\x00\x73\x00\x74\x00\x72\x00\x65\x00\
\x6d\x00\x65\x00\x6e\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x18\x00\x49\x00\x6e\x00\x73\x00\x74\x00\x61\x00\x6c\x00\x6c\
\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x53\x65\x74\x75\x70\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x18\x00\x45\x00\x6e\x00\x74\x00\x72\x00\xe9\x00\x65\x00\x20\x00\
\x56\x00\x69\x00\x64\x00\xe9\x00\x6f\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x18\x00\x4d\x00\x69\x00\x78\x00\x65\x00\x75\
\x00\x72\x00\x20\x00\x56\x00\x69\x00\x64\x00\xe9\x00\x6f\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x4d\x69\
\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\
\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x45\x00\x6e\x00\
\x74\x00\x72\x00\xe9\x00\x65\x00\x56\x00\x69\x00\x64\x00\xe9\x00\
\x6f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\x64\x65\x6f\
\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x4d\x00\
\x69\x00\x78\x00\x65\x00\x75\x00\x72\x00\x56\x00\x69\x00\x64\x00\
\xe9\x00\x6f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\x64\
\x65\x6f\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\
\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\
\xc0\x00\x20\x00\x26\x00\x70\x00\x72\x00\x6f\x00\x70\x00\x6f\x00\
\x73\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x26\x41\x62\x6f\x75\
\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x10\x00\x26\x00\x46\x00\x69\x00\x63\x00\
\x68\x00\x69\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x26\x46\x69\x6c\x65\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\
\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x26\x00\x41\
\x00\x69\x00\x64\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x26\x48\x65\x6c\x70\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\
\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x26\x00\x4c\x00\
\x61\x00\x6e\x00\x67\x00\x75\x00\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x09\x26\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\x00\x00\x00\
\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x10\x00\x26\x00\x51\x00\x75\x00\x69\x00\x74\x00\x74\x00\x65\
\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x51\x75\x69\
\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x46\x00\x26\x00\x4f\x00\x75\x00\x76\x00\
\x72\x00\x69\x00\x72\x00\x20\x00\x6c\x00\x65\x00\x20\x00\x44\x00\
\x6f\x00\x73\x00\x73\x00\x69\x00\x65\x00\x72\x00\x20\x00\x64\x00\
\x27\x00\x45\x00\x6e\x00\x72\x00\x65\x00\x67\x00\x69\x00\x73\x00\
\x74\x00\x72\x00\x65\x00\x6d\x00\x65\x00\x6e\x00\x74\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x15\x26\x4f\x70\x65\x6e\x20\x56\x69\x64\
\x65\x6f\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x10\
\x00\x26\x00\x4f\x00\x70\x00\x74\x00\x69\x00\x6f\x00\x6e\x00\x73\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x26\x4f\x70\x74\x69\x6f\
\x6e\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x10\x00\x26\x00\x52\x00\x61\x00\x70\x00\x70\
\x00\x6f\x00\x72\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\
\x26\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x46\x00\x65\x00\
\x72\x00\x6d\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x43\x00\x6f\x00\x6d\
\x00\x6d\x00\x65\x00\x6e\x00\x74\x00\x61\x00\x69\x00\x72\x00\x65\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x43\x6f\x6d\x6d\x65\x6e\
\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x00\x44\x00\x61\x00\x74\x00\x65\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x14\x00\
\x43\x00\x6f\x00\x6e\x00\x66\x00\xe9\x00\x72\x00\x65\x00\x6e\x00\
\x63\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\
\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x16\x00\x43\x00\x6f\x00\x6e\x00\x66\x00\xe9\
\x00\x72\x00\x65\x00\x6e\x00\x63\x00\x65\x00\x3a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x7e\
\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\
\x00\x20\x00\x2d\x00\x20\x00\x6c\x00\x61\x00\x20\x00\x73\x00\x74\
\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x00\x20\x00\x70\x00\x6f\
\x00\x72\x00\x74\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x20\x00\x64\
\x00\x27\x00\x65\x00\x6e\x00\x72\x00\x65\x00\x67\x00\x69\x00\x73\
\x00\x74\x00\x72\x00\x65\x00\x6d\x00\x65\x00\x6e\x00\x74\x00\x20\
\x00\x64\x00\x65\x00\x20\x00\x70\x00\x72\x00\xe9\x00\x73\x00\x65\
\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x32\x46\x72\x65\x65\x73\x65\x65\x72\
\x20\x2d\x20\x70\x6f\x72\x74\x61\x62\x6c\x65\x20\x70\x72\x65\x73\
\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x72\x65\x63\x6f\x72\x64\x69\
\x6e\x67\x20\x73\x74\x61\x74\x69\x6f\x6e\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x3e\x00\x4d\
\x00\x69\x00\x6e\x00\x69\x00\x6d\x00\x69\x00\x73\x00\x65\x00\x72\
\x00\x20\x00\x6c\x00\x61\x00\x20\x00\x46\x00\x65\x00\x6e\x00\xea\
\x00\x74\x00\x72\x00\x65\x00\x20\x00\x50\x00\x72\x00\x69\x00\x6e\
\x00\x63\x00\x69\x00\x70\x00\x61\x00\x6c\x00\x65\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x10\x48\x69\x64\x65\x20\x4d\x61\x69\x6e\x20\
\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x41\x00\x75\x00\x20\
\x00\x72\x00\x65\x00\x70\x00\x6f\x00\x73\x00\x2e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x05\x49\x64\x6c\x65\x2e\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\
\x50\x00\x61\x00\x73\x00\x20\x00\x64\x00\x27\x00\x41\x00\x75\x00\
\x64\x00\x69\x00\x6f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x4e\
\x6f\x20\x41\x75\x64\x69\x6f\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x22\x00\x50\x00\x61\x00\
\x73\x00\x20\x00\x64\x00\x27\x00\x41\x00\x75\x00\x64\x00\x69\x00\
\x6f\x00\x2f\x00\x56\x00\x69\x00\x64\x00\xe9\x00\x6f\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0e\x4e\x6f\x20\x41\x75\x64\x69\x6f\x2f\
\x56\x69\x64\x65\x6f\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x00\x41\x00\x75\x00\x63\x00\
\x75\x00\x6e\x00\x20\x00\x70\x00\x72\x00\x6f\x00\x62\x00\x6c\x00\
\xe8\x00\x6d\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x4e\
\x6f\x20\x49\x73\x73\x75\x65\x73\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x18\x00\x50\x00\x61\
\x00\x73\x00\x20\x00\x64\x00\x65\x00\x20\x00\x56\x00\x69\x00\x64\
\x00\xe9\x00\x6f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x4e\x6f\
\x20\x56\x69\x64\x65\x6f\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x50\x00\x61\x00\x75\
\x00\x73\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x50\x61\
\x75\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x0a\x00\x50\x00\x72\x00\xea\x00\x74\x00\
\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x61\x64\x79\
\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x16\x00\x45\x00\x6e\x00\x72\x00\x65\x00\x67\x00\
\x69\x00\x73\x00\x74\x00\x72\x00\x65\x00\x72\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x06\x52\x65\x63\x6f\x72\x64\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x00\
\x45\x00\x6e\x00\x72\x00\x65\x00\x67\x00\x69\x00\x73\x00\x74\x00\
\x72\x00\x65\x00\x6d\x00\x65\x00\x6e\x00\x74\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x30\x00\x45\x00\x6e\x00\x72\x00\x65\x00\x67\x00\x69\x00\x73\
\x00\x74\x00\x72\x00\x65\x00\x6d\x00\x65\x00\x6e\x00\x74\x00\x20\
\x00\x65\x00\x6e\x00\x20\x00\x50\x00\x61\x00\x75\x00\x73\x00\x65\
\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x11\x52\x65\x63\x6f\
\x72\x64\x69\x6e\x67\x20\x50\x61\x75\x73\x65\x64\x2e\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x2a\x00\x44\x00\xe9\x00\x63\x00\x68\x00\x61\x00\x72\x00\x67\x00\
\x65\x00\x20\x00\x6c\x00\xe9\x00\x67\x00\x61\x00\x6c\x00\x65\x00\
\x20\x00\x72\x00\x65\x00\xe7\x00\x75\x00\x65\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x10\x52\x65\x6c\x65\x61\x73\x65\x20\x52\x65\x63\
\x65\x69\x76\x65\x64\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x52\x00\x61\x00\x70\x00\
\x70\x00\x6f\x00\x72\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x06\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x20\x00\x4f\x00\x75\x00\
\x74\x00\x69\x00\x6c\x00\x20\x00\x64\x00\x65\x00\x20\x00\x52\x00\
\x61\x00\x70\x00\x70\x00\x6f\x00\x72\x00\x74\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0e\x52\x65\x70\x6f\x72\x74\x69\x6e\x67\x20\x54\
\x6f\x6f\x6c\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x12\x00\x52\x00\x65\x00\x70\x00\x72\x00\
\x65\x00\x6e\x00\x64\x00\x72\x00\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x52\x65\x73\x75\x6d\x65\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x53\x00\
\x61\x00\x6c\x00\x6c\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x53\x00\x61\x00\x6c\x00\
\x6c\x00\x65\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x52\
\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x3c\x00\x41\x00\x66\x00\x66\x00\x69\
\x00\x63\x00\x68\x00\x65\x00\x72\x00\x20\x00\x6c\x00\x61\x00\x20\
\x00\x46\x00\x65\x00\x6e\x00\xea\x00\x74\x00\x72\x00\x65\x00\x20\
\x00\x50\x00\x72\x00\x69\x00\x6e\x00\x63\x00\x69\x00\x70\x00\x61\
\x00\x6c\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x53\x68\
\x6f\x77\x20\x4d\x61\x69\x6e\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x1a\x00\x43\x00\x6f\x00\x6e\x00\x66\x00\xe9\x00\x72\x00\x65\
\x00\x6e\x00\x63\x00\x69\x00\x65\x00\x72\x00\x3a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x08\x53\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x14\x00\x45\x00\x6e\x00\x20\x00\x61\x00\x74\x00\x74\x00\x65\
\x00\x6e\x00\x74\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\
\x53\x74\x61\x6e\x64\x62\x79\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x41\x00\x72\x00\
\x72\x00\xea\x00\x74\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x04\x53\x74\x6f\x70\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x18\x00\x50\x00\x72\x00\
\xe9\x00\x73\x00\x65\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x69\x00\
\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x54\x61\x6c\
\x6b\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x0c\x00\x48\x00\x65\x00\x75\x00\x72\x00\x65\x00\
\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x6d\x65\x3a\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x0c\x00\x54\x00\x69\x00\x74\x00\x72\x00\x65\x00\x3a\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\x74\x6c\x65\x3a\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x24\x00\x26\x00\x45\x00\x78\x00\x70\x00\x6f\x00\x72\
\x00\x74\x00\x65\x00\x72\x00\x20\x00\x76\x00\x65\x00\x72\x00\x73\
\x00\x20\x00\x43\x00\x53\x00\x56\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0e\x26\x45\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x6c\x00\xca\x00\x74\x00\x65\
\x00\x73\x00\x2d\x00\x76\x00\x6f\x00\x75\x00\x73\x00\x20\x00\x63\
\x00\x65\x00\x72\x00\x74\x00\x61\x00\x69\x00\x6e\x00\x20\x00\x64\
\x00\x65\x00\x20\x00\x76\x00\x6f\x00\x75\x00\x6c\x00\x6f\x00\x69\
\x00\x72\x00\x20\x00\x76\x00\x69\x00\x64\x00\x65\x00\x72\x00\x20\
\x00\x6c\x00\x61\x00\x20\x00\x62\x00\x61\x00\x73\x00\x65\x00\x20\
\x00\x64\x00\x65\x00\x20\x00\x64\x00\x6f\x00\x6e\x00\x6e\x00\xe9\
\x00\x65\x00\x73\x00\x3f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\
\x41\x72\x65\x20\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\
\x20\x77\x61\x6e\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\
\x68\x65\x20\x44\x42\x3f\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\
\x00\x45\x00\x66\x00\x66\x00\x61\x00\x63\x00\x65\x00\x72\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x65\x61\x72\x07\x00\x00\
\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x30\x00\x56\x00\x69\x00\x64\x00\x65\x00\
\x72\x00\x20\x00\x6c\x00\x61\x00\x20\x00\x42\x00\x61\x00\x73\x00\
\x65\x00\x20\x00\x64\x00\x65\x00\x20\x00\x44\x00\x6f\x00\x6e\x00\
\x6e\x00\xe9\x00\x65\x00\x73\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x0e\x43\x6c\x65\x61\x72\x20\x44\x61\x74\x61\x62\x61\x73\x65\x07\
\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x46\x00\x65\x00\x72\x00\
\x6d\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\
\x6c\x6f\x73\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x18\x00\x44\
\x00\x65\x00\x73\x00\x63\x00\x72\x00\x69\x00\x70\x00\x74\x00\x69\
\x00\x6f\x00\x6e\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\
\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\x3a\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x16\x00\x43\x00\x6f\x00\x6e\x00\x66\x00\xe9\
\x00\x72\x00\x65\x00\x6e\x00\x63\x00\x65\x00\x3a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x3a\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\
\x00\x65\x00\x65\x00\x72\x00\x20\x00\x2d\x00\x20\x00\xc9\x00\x64\
\x00\x69\x00\x74\x00\x65\x00\x75\x00\x72\x00\x20\x00\x64\x00\x65\
\x00\x20\x00\x52\x00\x61\x00\x70\x00\x70\x00\x6f\x00\x72\x00\x74\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x16\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x52\x65\x70\x6f\x72\x74\x20\x45\x64\x69\x74\x6f\x72\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x4e\x00\x69\x00\x76\
\x00\x65\x00\x61\x00\x75\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x06\x4c\x65\x76\x65\x6c\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\
\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x0e\x00\x52\x00\x65\x00\x74\x00\x69\x00\x72\x00\x65\x00\x72\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\x76\x65\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x53\x00\x61\x00\x6c\
\x00\x6c\x00\x65\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x2e\x00\
\x53\x00\xe9\x00\x6c\x00\x65\x00\x63\x00\x74\x00\x69\x00\x6f\x00\
\x6e\x00\x6e\x00\x65\x00\x7a\x00\x20\x00\x75\x00\x6e\x00\x20\x00\
\x46\x00\x69\x00\x63\x00\x68\x00\x69\x00\x65\x00\x72\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0b\x53\x65\x6c\x65\x63\x74\x20\x46\x69\
\x6c\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x00\x43\x00\x6f\
\x00\x6e\x00\x66\x00\xe9\x00\x72\x00\x65\x00\x6e\x00\x63\x00\x69\
\x00\x65\x00\x72\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\
\x53\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\
\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x0c\x00\x48\x00\x65\x00\x75\x00\x72\x00\x65\x00\x3a\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\
\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x0c\x00\x54\x00\x69\x00\x74\x00\x72\x00\
\x65\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\x74\
\x6c\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x24\x00\x26\x00\
\x45\x00\x78\x00\x70\x00\x6f\x00\x72\x00\x74\x00\x65\x00\x72\x00\
\x20\x00\x76\x00\x65\x00\x72\x00\x73\x00\x20\x00\x43\x00\x53\x00\
\x56\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\x45\x78\x70\x6f\
\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\x00\x0d\x54\x61\
\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x6c\x00\xca\x00\x74\x00\x65\x00\x73\x00\x2d\x00\x76\x00\x6f\x00\
\x75\x00\x73\x00\x20\x00\x63\x00\x65\x00\x72\x00\x74\x00\x61\x00\
\x69\x00\x6e\x00\x20\x00\x64\x00\x65\x00\x20\x00\x76\x00\x6f\x00\
\x75\x00\x6c\x00\x6f\x00\x69\x00\x72\x00\x20\x00\x76\x00\x69\x00\
\x64\x00\x65\x00\x72\x00\x20\x00\x6c\x00\x61\x00\x20\x00\x62\x00\
\x61\x00\x73\x00\x65\x00\x20\x00\x64\x00\x65\x00\x20\x00\x64\x00\
\x6f\x00\x6e\x00\x6e\x00\xe9\x00\x65\x00\x73\x00\x3f\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\x6f\x75\x20\x73\
\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\x20\x74\x6f\x20\
\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\x3f\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x00\x44\x00\x61\x00\x74\x00\x65\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\x0d\
\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x14\x00\x43\x00\x6f\x00\x6e\x00\x66\x00\xe9\x00\x72\x00\
\x65\x00\x6e\x00\x63\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x45\x76\x65\x6e\x74\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x40\x00\x46\
\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\
\x00\x2d\x00\x20\x00\xc9\x00\x64\x00\x69\x00\x74\x00\x65\x00\x75\
\x00\x72\x00\x20\x00\x64\x00\x65\x00\x20\x00\x43\x00\x6f\x00\x6e\
\x00\x66\x00\xe9\x00\x72\x00\x65\x00\x6e\x00\x63\x00\x65\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x14\x46\x72\x65\x65\x73\x65\x65\x72\
\x20\x54\x61\x6c\x6b\x20\x45\x64\x69\x74\x6f\x72\x07\x00\x00\x00\
\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x18\x00\x43\x00\x6f\x00\x6e\x00\x66\x00\xe9\x00\x72\
\x00\x65\x00\x6e\x00\x63\x00\x69\x00\x65\x00\x72\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x09\x50\x72\x65\x73\x65\x6e\x74\x65\x72\x07\
\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x0e\x00\x52\x00\x65\x00\x74\x00\x69\x00\
\x72\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\
\x65\x6d\x6f\x76\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x53\x00\
\x61\x00\x6c\x00\x6c\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x48\x00\
\x65\x00\x75\x00\x72\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x04\x54\x69\x6d\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x54\x00\
\x69\x00\x74\x00\x72\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x54\x69\x74\x6c\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x46\
\x00\x72\x00\x61\x00\x6e\x00\xe7\x00\x61\x00\x69\x00\x73\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x15\x4c\x61\x6e\x67\x75\x61\x67\x65\
\x20\x44\x69\x73\x70\x6c\x61\x79\x20\x54\x65\x78\x74\x07\x00\x00\
\x00\x0b\x54\x72\x61\x6e\x73\x6c\x61\x74\x69\x6f\x6e\x01\x03\x00\
\x00\x00\x08\x00\x50\x00\x6f\x00\x72\x00\x74\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x04\x50\x6f\x72\x74\x07\x00\x00\x00\x0e\x70\x6c\
\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\
\x00\x12\x00\x43\x00\x6f\x00\x6e\x00\x6e\x00\x65\x00\x63\x00\x74\
\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x43\x6f\
\x6e\x6e\x65\x63\x74\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\
\x2d\x6a\x61\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x18\
\x00\x45\x00\x6e\x00\x74\x00\x72\x00\xe9\x00\x65\x00\x20\x00\x56\
\x00\x69\x00\x64\x00\xe9\x00\x6f\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\
\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x2d\x70\
\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x88\x00\x00\x00\x02\
\x03\x01\
\x00\x00\x36\x39\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x04\xc0\x00\x00\x04\xe0\x00\x00\x24\x73\x00\x04\xa8\xa5\
\x00\x00\x11\x0f\x00\x04\xa8\xa5\x00\x00\x1e\x66\x00\x05\x76\x94\
\x00\x00\x25\x09\x00\x05\x96\x5d\x00\x00\x16\x87\x00\x05\x96\x5d\
\x00\x00\x20\xef\x00\x05\xa8\x2b\x00\x00\x17\xd3\x00\x05\xab\x60\
\x00\x00\x17\xa9\x00\x05\xb0\x35\x00\x00\x21\x51\x00\x0d\x31\xa9\
\x00\x00\x26\xa2\x00\x18\xf5\x14\x00\x00\x15\x91\x00\x2a\xd0\x25\
\x00\x00\x0e\x3e\x00\x2a\xec\x30\x00\x00\x0e\x6d\x00\x2b\x8c\x04\
\x00\x00\x0e\xd7\x00\x3c\xdc\x74\x00\x00\x08\x23\x00\x48\x85\x72\
\x00\x00\x08\x65\x00\x4a\x2b\x82\x00\x00\x19\x4a\x00\x4a\x36\x95\
\x00\x00\x00\x00\x00\x4a\x36\x95\x00\x00\x08\xa7\x00\x4a\x36\x95\
\x00\x00\x10\xaf\x00\x4a\x36\x95\x00\x00\x19\xcb\x00\x4c\xcc\x54\
\x00\x00\x11\x7e\x00\x4c\xcc\x54\x00\x00\x1e\x94\x00\x4f\xb2\x7e\
\x00\x00\x13\x24\x00\x54\x6c\x54\x00\x00\x24\x9c\x00\x56\x8c\x95\
\x00\x00\x14\x3e\x00\x59\x66\x0a\x00\x00\x16\xb1\x00\x59\x66\x0a\
\x00\x00\x1b\x4e\x00\x59\xcb\xc0\x00\x00\x0c\x88\x00\x5b\x03\x8a\
\x00\x00\x17\xfd\x00\x5b\x03\x8a\x00\x00\x1c\x02\x00\x5b\x0b\x25\
\x00\x00\x21\x7f\x00\x89\x67\x25\x00\x00\x08\xd8\x00\xb2\x0d\x89\
\x00\x00\x06\xfd\x00\xcd\x51\x76\x00\x00\x30\xca\x00\xe1\x80\xe2\
\x00\x00\x1a\x7c\x00\xff\x11\x49\x00\x00\x06\x9b\x01\x04\x45\x0f\
\x00\x00\x13\x87\x01\x05\x6e\xe5\x00\x00\x2a\x37\x01\x08\xec\xc4\
\x00\x00\x07\x9d\x01\x14\xad\x04\x00\x00\x0d\x02\x01\x14\xad\x04\
\x00\x00\x29\xe9\x01\x1c\xb5\xc2\x00\x00\x07\xe0\x01\x30\xf4\x02\
\x00\x00\x0d\x45\x01\x48\xbf\xaf\x00\x00\x13\x51\x01\x5c\xff\xef\
\x00\x00\x14\x08\x01\x63\x63\x85\x00\x00\x24\x2b\x01\x63\x63\x85\
\x00\x00\x29\x0c\x01\x70\xaa\xa0\x00\x00\x23\x5f\x02\x2d\x09\x75\
\x00\x00\x0c\x42\x02\x43\x01\x41\x00\x00\x27\x96\x02\x89\xdc\xc7\
\x00\x00\x12\xd6\x02\xa7\x96\xc4\x00\x00\x0e\x0c\x02\xab\x4c\x79\
\x00\x00\x2b\xfe\x02\xb2\x4d\xd5\x00\x00\x0b\x67\x02\xf0\x16\xfe\
\x00\x00\x03\xe8\x03\x08\xa7\x7e\x00\x00\x01\x74\x03\x28\x79\xcd\
\x00\x00\x0b\xb3\x04\x18\xa4\x4f\x00\x00\x18\xa8\x04\x18\xa4\x4f\
\x00\x00\x1d\x52\x04\x3b\xa8\x09\x00\x00\x0f\xe9\x04\x42\x63\x15\
\x00\x00\x09\x2a\x04\x85\xec\xc9\x00\x00\x2c\xc8\x04\x90\x33\xbf\
\x00\x00\x21\xf6\x04\x9b\x91\xf4\x00\x00\x09\x7c\x04\xa2\xfc\x54\
\x00\x00\x25\x38\x04\xcc\xc5\x7a\x00\x00\x11\xab\x04\xcc\xc5\x7a\
\x00\x00\x1a\x46\x04\xcf\x76\x94\x00\x00\x1e\xc5\x04\xd6\x80\x8a\
\x00\x00\x19\xfe\x05\x04\x76\x94\x00\x00\x1f\x57\x05\x0a\xfe\xd3\
\x00\x00\x13\xcf\x05\x2c\xcb\xfa\x00\x00\x1a\xe2\x05\x2f\x69\xf5\
\x00\x00\x25\x6f\x05\x6c\xb7\xc4\x00\x00\x0a\xaa\x05\x8b\x7b\xbe\
\x00\x00\x14\xa7\x05\x8b\xa6\x84\x00\x00\x14\xd7\x05\x8c\x46\xc5\
\x00\x00\x1b\x18\x05\x8c\x46\xc5\x00\x00\x1f\xff\x05\x8c\x76\x94\
\x00\x00\x15\xdf\x05\x8c\xac\x35\x00\x00\x16\x57\x05\x9a\x8b\xbe\
\x00\x00\x23\xf6\x05\x9b\x88\x98\x00\x00\x21\x1d\x05\x9c\x42\xee\
\x00\x00\x12\x1a\x05\x9c\x9c\xc2\x00\x00\x25\xef\x05\xa3\x86\xb5\
\x00\x00\x28\x97\x05\xa6\xc8\x95\x00\x00\x22\xdf\x05\xa6\xc8\x95\
\x00\x00\x28\xd4\x05\xb0\xb2\x8a\x00\x00\x18\x2a\x05\xb0\xb2\x8a\
\x00\x00\x1c\x35\x05\xc3\xaf\xce\x00\x00\x0f\x06\x05\xd5\x48\x95\
\x00\x00\x28\x57\x05\xd5\xc4\xe5\x00\x00\x2b\x7e\x05\xeb\xf2\xfa\
\x00\x00\x11\xdb\x06\x1e\x6d\xa9\x00\x00\x27\xf5\x06\x6d\x6f\xb1\
\x00\x00\x2e\x04\x06\x70\xda\x23\x00\x00\x0f\xaa\x06\x7b\x08\xe3\
\x00\x00\x10\x46\x06\x8b\xac\xde\x00\x00\x2b\xc4\x06\x8d\x3a\x43\
\x00\x00\x0a\x61\x06\x8f\x63\x05\x00\x00\x00\x2f\x06\xb8\x19\xfa\
\x00\x00\x17\x2c\x06\xb8\x19\xfa\x00\x00\x1b\xc6\x06\xc2\xcc\x6c\
\x00\x00\x20\x33\x06\xc8\x92\x91\x00\x00\x26\x26\x06\xc8\x92\x92\
\x00\x00\x26\x64\x06\xec\x63\x1e\x00\x00\x0f\x62\x07\x3b\xe0\x03\
\x00\x00\x0a\xde\x07\x85\x5a\x3c\x00\x00\x1f\xc8\x07\x8c\xcf\x97\
\x00\x00\x2a\xce\x08\x3c\xc5\x25\x00\x00\x29\xa1\x08\x4e\x9c\xf5\
\x00\x00\x0e\x9c\x08\x5d\xf8\xa2\x00\x00\x1e\xf9\x08\x84\xcc\xa5\
\x00\x00\x1d\xf2\x08\xaa\xe3\xe4\x00\x00\x24\xce\x08\xab\xe2\x09\
\x00\x00\x1e\x2c\x08\xb6\xcf\x43\x00\x00\x1c\xb7\x08\xd1\xeb\x84\
\x00\x00\x26\xef\x08\xe3\x4b\xdc\x00\x00\x16\x0f\x08\xee\x26\x24\
\x00\x00\x22\x9c\x08\xef\xc3\x6b\x00\x00\x1d\x0c\x09\x5c\xef\xe5\
\x00\x00\x2b\x0b\x0a\x1f\xc8\x95\x00\x00\x19\x7d\x0a\x3d\x0e\x95\
\x00\x00\x1b\x81\x0a\x64\x3c\x14\x00\x00\x10\xdc\x0a\x65\x4b\xe4\
\x00\x00\x25\xb5\x0a\x68\xf8\xf7\x00\x00\x0c\x05\x0a\x68\xf8\xf7\
\x00\x00\x15\x07\x0a\x72\x9a\x7a\x00\x00\x11\x39\x0a\xa8\x4a\xc9\
\x00\x00\x17\x62\x0b\x0a\x04\x95\x00\x00\x2a\x85\x0b\x59\x88\x3f\
\x00\x00\x14\x6b\x0b\x66\x23\x46\x00\x00\x18\x5a\x0b\x66\x23\x46\
\x00\x00\x1c\x6b\x0b\x8c\x76\xb4\x00\x00\x10\x7c\x0b\xba\x83\x5b\
\x00\x00\x23\x1e\x0c\x3b\x98\x64\x00\x00\x0d\x88\x0c\x47\xc1\x62\
\x00\x00\x0d\xca\x0c\x89\x28\x2e\x00\x00\x2f\xd0\x0c\x8a\xac\x07\
\x00\x00\x16\xde\x0c\x9c\x0d\x42\x00\x00\x1f\x8b\x0c\xc9\xa0\x0e\
\x00\x00\x07\x68\x0c\xfb\x29\xd4\x00\x00\x01\x2a\x0d\x31\xb8\x6e\
\x00\x00\x23\xac\x0d\x33\xd9\xec\x00\x00\x09\xbf\x0d\xc4\xc8\x3c\
\x00\x00\x0a\x2a\x0d\xfd\x31\xc5\x00\x00\x20\x73\x0e\x39\x74\x39\
\x00\x00\x0b\x15\x0e\x74\x68\x5e\x00\x00\x15\x40\x0e\x8e\x44\x24\
\x00\x00\x0c\xb9\x0e\xa1\x30\x61\x00\x00\x21\xb0\x0e\xb5\xff\x84\
\x00\x00\x29\x4f\x69\x00\x00\x31\x58\x03\x00\x00\x00\x0a\x00\x43\
\x00\x6c\x00\x6f\x00\x73\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\
\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x92\x00\x43\x00\
\x6f\x00\x70\x00\x79\x00\x72\x00\x69\x00\x67\x00\x68\x00\x74\x00\
\x20\x00\x28\x00\x43\x00\x29\x00\x20\x00\x32\x00\x30\x00\x31\x00\
\x31\x00\x2d\x00\x32\x00\x30\x00\x31\x00\x33\x00\x20\x00\x54\x00\
\x68\x00\x65\x00\x20\x00\x46\x00\x72\x00\x65\x00\x65\x00\x20\x00\
\x61\x00\x6e\x00\x64\x00\x20\x00\x4f\x00\x70\x00\x65\x00\x6e\x00\
\x20\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x00\x20\x00\
\x53\x00\x6f\x00\x66\x00\x74\x00\x77\x00\x61\x00\x72\x00\x65\x00\
\x20\x00\x4c\x00\x65\x00\x61\x00\x72\x00\x6e\x00\x69\x00\x6e\x00\
\x67\x00\x20\x00\x43\x00\x65\x00\x6e\x00\x74\x00\x72\x00\x65\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x49\x43\x6f\x70\x79\x72\x69\x67\
\x68\x74\x20\x28\x43\x29\x20\x32\x30\x31\x31\x2d\x32\x30\x31\x33\
\x20\x54\x68\x65\x20\x46\x72\x65\x65\x20\x61\x6e\x64\x20\x4f\x70\
\x65\x6e\x20\x53\x6f\x75\x72\x63\x65\x20\x53\x6f\x66\x74\x77\x61\
\x72\x65\x20\x4c\x65\x61\x72\x6e\x69\x6e\x67\x20\x43\x65\x6e\x74\
\x72\x65\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\
\x6f\x67\x01\x03\x00\x00\x00\x1c\x00\x46\x00\x72\x00\x65\x00\x65\
\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x41\x00\x62\x00\x6f\
\x00\x75\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x46\x72\
\x65\x65\x73\x65\x65\x72\x20\x41\x62\x6f\x75\x74\x07\x00\x00\x00\
\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\
\x01\x8e\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\
\x00\x72\x00\x20\x00\x69\x00\x73\x00\x20\x00\x61\x00\x20\x00\x76\
\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\x63\x00\x61\x00\x70\
\x00\x74\x00\x75\x00\x72\x00\x65\x00\x20\x00\x75\x00\x74\x00\x69\
\x00\x6c\x00\x69\x00\x74\x00\x79\x00\x20\x00\x63\x00\x61\x00\x70\
\x00\x61\x00\x62\x00\x6c\x00\x65\x00\x20\x00\x6f\x00\x66\x00\x20\
\x00\x63\x00\x61\x00\x70\x00\x74\x00\x75\x00\x72\x00\x65\x00\x69\
\x00\x6e\x00\x67\x00\x20\x00\x70\x00\x72\x00\x65\x00\x73\x00\x65\
\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x00\x73\
\x00\x2e\x00\x20\x00\x49\x00\x74\x00\x20\x00\x63\x00\x61\x00\x70\
\x00\x74\x00\x75\x00\x72\x00\x65\x00\x73\x00\x20\x00\x76\x00\x69\
\x00\x64\x00\x65\x00\x6f\x00\x20\x00\x73\x00\x6f\x00\x75\x00\x72\
\x00\x63\x00\x65\x00\x73\x00\x20\x00\x73\x00\x75\x00\x63\x00\x68\
\x00\x20\x00\x61\x00\x73\x00\x20\x00\x75\x00\x73\x00\x62\x00\x2c\
\x00\x20\x00\x66\x00\x69\x00\x72\x00\x65\x00\x77\x00\x69\x00\x72\
\x00\x65\x00\x2c\x00\x20\x00\x6f\x00\x72\x00\x20\x00\x6c\x00\x6f\
\x00\x63\x00\x61\x00\x6c\x00\x20\x00\x64\x00\x65\x00\x73\x00\x6b\
\x00\x74\x00\x6f\x00\x70\x00\x20\x00\x61\x00\x6c\x00\x6f\x00\x6e\
\x00\x67\x00\x20\x00\x77\x00\x69\x00\x74\x00\x68\x00\x20\x00\x61\
\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x20\x00\x61\x00\x6e\x00\x64\
\x00\x20\x00\x6d\x00\x69\x00\x78\x00\x65\x00\x73\x00\x20\x00\x74\
\x00\x68\x00\x65\x00\x6d\x00\x20\x00\x74\x00\x6f\x00\x67\x00\x65\
\x00\x74\x00\x68\x00\x65\x00\x72\x00\x20\x00\x74\x00\x6f\x00\x20\
\x00\x70\x00\x72\x00\x6f\x00\x64\x00\x75\x00\x63\x00\x65\x00\x20\
\x00\x61\x00\x20\x00\x76\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x2e\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\xc6\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x69\x73\x20\x61\x20\x76\x69\x64\x65\x6f\x20\x63\x61\
\x70\x74\x75\x72\x65\x20\x75\x74\x69\x6c\x69\x74\x79\x20\x63\x61\
\x70\x61\x62\x6c\x65\x20\x6f\x66\x20\x63\x61\x70\x74\x75\x72\x69\
\x6e\x67\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x73\
\x2e\x20\x49\x74\x20\x63\x61\x70\x74\x75\x72\x65\x73\x20\x76\x69\
\x64\x65\x6f\x20\x73\x6f\x75\x72\x63\x65\x73\x20\x73\x75\x63\x68\
\x20\x61\x73\x20\x75\x73\x62\x2c\x20\x66\x69\x72\x65\x77\x69\x72\
\x65\x2c\x20\x6f\x72\x20\x6c\x6f\x63\x61\x6c\x20\x64\x65\x73\x6b\
\x74\x6f\x70\x20\x61\x6c\x6f\x6e\x67\x20\x77\x69\x74\x68\x20\x61\
\x75\x64\x69\x6f\x20\x61\x6e\x64\x20\x6d\x69\x78\x65\x73\x20\x74\
\x68\x65\x6d\x20\x74\x6f\x67\x65\x74\x68\x65\x72\x20\x74\x6f\x20\
\x70\x72\x6f\x64\x75\x63\x65\x20\x61\x20\x76\x69\x64\x65\x6f\x2e\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x01\xb8\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\
\x00\x65\x00\x65\x00\x72\x00\x20\x00\x69\x00\x73\x00\x20\x00\x6c\
\x00\x69\x00\x63\x00\x65\x00\x6e\x00\x73\x00\x65\x00\x64\x00\x20\
\x00\x75\x00\x6e\x00\x64\x00\x65\x00\x72\x00\x20\x00\x74\x00\x68\
\x00\x65\x00\x20\x00\x47\x00\x50\x00\x4c\x00\x20\x00\x76\x00\x65\
\x00\x72\x00\x73\x00\x69\x00\x6f\x00\x6e\x00\x20\x00\x33\x00\x2e\
\x00\x20\x00\x54\x00\x68\x00\x69\x00\x73\x00\x20\x00\x73\x00\x6f\
\x00\x66\x00\x74\x00\x77\x00\x61\x00\x72\x00\x65\x00\x20\x00\x69\
\x00\x73\x00\x20\x00\x70\x00\x72\x00\x6f\x00\x76\x00\x69\x00\x64\
\x00\x65\x00\x64\x00\x20\x00\x27\x00\x61\x00\x73\x00\x2d\x00\x69\
\x00\x73\x00\x27\x00\x2c\x00\x20\x00\x77\x00\x69\x00\x74\x00\x68\
\x00\x6f\x00\x75\x00\x74\x00\x20\x00\x61\x00\x6e\x00\x79\x00\x20\
\x00\x65\x00\x78\x00\x70\x00\x72\x00\x65\x00\x73\x00\x73\x00\x20\
\x00\x6f\x00\x72\x00\x20\x00\x69\x00\x6d\x00\x70\x00\x6c\x00\x69\
\x00\x65\x00\x64\x00\x20\x00\x77\x00\x61\x00\x72\x00\x72\x00\x61\
\x00\x6e\x00\x74\x00\x79\x00\x2e\x00\x20\x00\x49\x00\x6e\x00\x20\
\x00\x6e\x00\x6f\x00\x20\x00\x65\x00\x76\x00\x65\x00\x6e\x00\x74\
\x00\x20\x00\x77\x00\x69\x00\x6c\x00\x6c\x00\x20\x00\x74\x00\x68\
\x00\x65\x00\x20\x00\x61\x00\x75\x00\x74\x00\x68\x00\x6f\x00\x72\
\x00\x73\x00\x20\x00\x62\x00\x65\x00\x20\x00\x68\x00\x65\x00\x6c\
\x00\x64\x00\x20\x00\x6c\x00\x69\x00\x61\x00\x62\x00\x6c\x00\x65\
\x00\x20\x00\x66\x00\x6f\x00\x72\x00\x20\x00\x61\x00\x6e\x00\x79\
\x00\x20\x00\x64\x00\x61\x00\x6d\x00\x61\x00\x67\x00\x65\x00\x73\
\x00\x20\x00\x61\x00\x72\x00\x69\x00\x73\x00\x69\x00\x6e\x00\x67\
\x00\x20\x00\x66\x00\x72\x00\x6f\x00\x6d\x00\x20\x00\x74\x00\x68\
\x00\x65\x00\x20\x00\x75\x00\x73\x00\x65\x00\x20\x00\x6f\x00\x66\
\x00\x20\x00\x74\x00\x68\x00\x69\x00\x73\x00\x20\x00\x73\x00\x6f\
\x00\x66\x00\x74\x00\x77\x00\x61\x00\x72\x00\x65\x00\x2e\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\xdb\x46\x72\x65\x65\x73\x65\x65\x72\
\x20\x69\x73\x20\x6c\x69\x63\x65\x6e\x73\x65\x64\x20\x75\x6e\x64\
\x65\x72\x20\x74\x68\x65\x20\x47\x50\x4c\x20\x76\x65\x72\x73\x69\
\x6f\x6e\x20\x33\x2e\x20\x54\x68\x69\x73\x20\x73\x6f\x66\x74\x77\
\x61\x72\x65\x20\x69\x73\x20\x70\x72\x6f\x76\x69\x64\x65\x64\x20\
\x27\x61\x73\x2d\x69\x73\x27\x2c\x77\x69\x74\x68\x6f\x75\x74\x20\
\x61\x6e\x79\x20\x65\x78\x70\x72\x65\x73\x73\x20\x6f\x72\x20\x69\
\x6d\x70\x6c\x69\x65\x64\x20\x77\x61\x72\x72\x61\x6e\x74\x79\x2e\
\x20\x49\x6e\x20\x6e\x6f\x20\x65\x76\x65\x6e\x74\x20\x77\x69\x6c\
\x6c\x20\x74\x68\x65\x20\x61\x75\x74\x68\x6f\x72\x73\x20\x62\x65\
\x20\x68\x65\x6c\x64\x20\x6c\x69\x61\x62\x6c\x65\x20\x66\x6f\x72\
\x20\x61\x6e\x79\x20\x64\x61\x6d\x61\x67\x65\x73\x20\x61\x72\x69\
\x73\x69\x6e\x67\x20\x66\x72\x6f\x6d\x20\x74\x68\x65\x20\x75\x73\
\x65\x20\x6f\x66\x20\x74\x68\x69\x73\x20\x73\x6f\x66\x74\x77\x61\
\x72\x65\x2e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\
\x6c\x6f\x67\x01\x03\x00\x00\x00\x2c\x00\x48\x00\x65\x00\x61\x00\
\x64\x00\x70\x00\x68\x00\x6f\x00\x6e\x00\x65\x00\x73\x00\x20\x00\
\x67\x00\x72\x00\x61\x00\x70\x00\x68\x00\x69\x00\x63\x00\x73\x00\
\x20\x00\x62\x00\x79\x08\x00\x00\x00\x00\x06\x00\x00\x00\x16\x48\
\x65\x61\x64\x70\x68\x6f\x6e\x65\x73\x20\x67\x72\x61\x70\x68\x69\
\x63\x73\x20\x62\x79\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\
\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x32\x00\x52\x00\x65\x00\
\x63\x00\x6f\x00\x72\x00\x64\x00\x20\x00\x62\x00\x75\x00\x74\x00\
\x74\x00\x6f\x00\x6e\x00\x20\x00\x67\x00\x72\x00\x61\x00\x70\x00\
\x68\x00\x69\x00\x63\x00\x73\x00\x20\x00\x62\x00\x79\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x19\x52\x65\x63\x6f\x72\x64\x20\x62\x75\
\x74\x74\x6f\x6e\x20\x67\x72\x61\x70\x68\x69\x63\x73\x20\x62\x79\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x00\x0e\x00\x56\x00\x65\x00\x72\x00\x73\x00\x69\
\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x56\x65\
\x72\x73\x69\x6f\x6e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\
\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x16\x00\x41\x00\x75\x00\
\x64\x00\x69\x00\x6f\x00\x20\x00\x49\x00\x6e\x00\x70\x00\x75\x00\
\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x41\x75\x64\x69\x6f\
\x20\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x41\
\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x20\x00\x4d\x00\x69\x00\x78\
\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x41\x75\
\x64\x69\x6f\x20\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x16\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x20\x00\x49\x00\
\x6e\x00\x70\x00\x75\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x0a\x41\x75\x64\x69\x6f\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x16\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x20\x00\
\x4d\x00\x69\x00\x78\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0a\x41\x75\x64\x69\x6f\x4d\x69\x78\x65\x72\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x0a\x00\x43\x00\x6c\x00\x6f\x00\x73\x00\x65\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x20\x00\x44\x00\x65\x00\x66\x00\x61\x00\x75\
\x00\x6c\x00\x74\x00\x20\x00\x4c\x00\x61\x00\x6e\x00\x67\x00\x75\
\x00\x61\x00\x67\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\
\x44\x65\x66\x61\x75\x6c\x74\x20\x4c\x61\x6e\x67\x75\x61\x67\x65\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x20\x00\x45\x00\x6e\x00\x61\x00\x62\
\x00\x6c\x00\x65\x00\x20\x00\x41\x00\x75\x00\x74\x00\x6f\x00\x20\
\x00\x48\x00\x69\x00\x64\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x10\x45\x6e\x61\x62\x6c\x65\x20\x41\x75\x74\x6f\x2d\x48\x69\
\x64\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x46\x00\x69\x00\x6c\
\x00\x65\x00\x20\x00\x46\x00\x6f\x00\x72\x00\x6d\x00\x61\x00\x74\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x46\x69\x6c\x65\x20\x46\
\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x36\x00\x46\x00\
\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\
\x43\x00\x6f\x00\x6e\x00\x66\x00\x69\x00\x67\x00\x75\x00\x72\x00\
\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x00\x20\x00\x54\x00\x6f\x00\
\x6f\x00\x6c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x13\x46\x72\x65\
\x65\x73\x65\x65\x72\x20\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x47\x00\x65\x00\x6e\x00\x65\
\x00\x72\x00\x61\x00\x6c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\
\x47\x65\x6e\x65\x72\x61\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\
\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x00\
\x4d\x00\x69\x00\x73\x00\x63\x00\x65\x00\x6c\x00\x6c\x00\x61\x00\
\x6e\x00\x65\x00\x6f\x00\x75\x00\x73\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0d\x4d\x69\x73\x63\x65\x6c\x6c\x61\x6e\x65\x6f\x75\x73\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x4f\x00\x75\x00\x74\x00\x70\
\x00\x75\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x4f\x75\
\x74\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x50\x00\x6c\
\x00\x75\x00\x67\x00\x69\x00\x6e\x00\x73\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x07\x50\x6c\x75\x67\x69\x6e\x73\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x20\x00\x52\x00\x65\x00\x63\x00\x6f\x00\x72\x00\x64\x00\
\x20\x00\x44\x00\x69\x00\x72\x00\x65\x00\x63\x00\x74\x00\x6f\x00\
\x72\x00\x79\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x52\x65\x63\
\x6f\x72\x64\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x1c\x00\x52\x00\x65\x00\x63\x00\x6f\x00\x72\x00\
\x64\x00\x20\x00\x74\x00\x6f\x00\x20\x00\x46\x00\x69\x00\x6c\x00\
\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x52\x65\x63\x6f\x72\
\x64\x20\x74\x6f\x20\x46\x69\x6c\x65\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x20\x00\x52\x00\x65\x00\x63\x00\x6f\x00\x72\x00\x64\x00\x20\x00\
\x74\x00\x6f\x00\x20\x00\x53\x00\x74\x00\x72\x00\x65\x00\x61\x00\
\x6d\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x52\x65\x63\x6f\x72\
\x64\x20\x74\x6f\x20\x53\x74\x72\x65\x61\x6d\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x12\x00\x52\x00\x65\x00\x63\x00\x6f\x00\x72\x00\x64\x00\
\x69\x00\x6e\x00\x67\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x18\
\x00\x53\x00\x61\x00\x76\x00\x65\x00\x20\x00\x50\x00\x72\x00\x6f\
\x00\x66\x00\x69\x00\x6c\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0c\x53\x61\x76\x65\x20\x50\x72\x6f\x66\x69\x6c\x65\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x0a\x00\x53\x00\x65\x00\x74\x00\x75\x00\x70\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x53\x65\x74\x75\x70\x07\
\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\
\x70\x01\x03\x00\x00\x00\x1a\x00\x53\x00\x74\x00\x72\x00\x65\x00\
\x61\x00\x6d\x00\x20\x00\x46\x00\x6f\x00\x72\x00\x6d\x00\x61\x00\
\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x53\x74\x72\x65\x61\
\x6d\x20\x46\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\
\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\x49\x00\x6e\
\x00\x70\x00\x75\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\
\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\
\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\
\x00\x00\x16\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\
\x4d\x00\x69\x00\x78\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x4d\x69\x78\x65\x72\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x16\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\
\x00\x20\x00\x49\x00\x6e\x00\x70\x00\x75\x00\x74\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0a\x56\x69\x64\x65\x6f\x49\x6e\x70\x75\x74\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x16\x00\x56\x00\x69\x00\x64\x00\x65\
\x00\x6f\x00\x20\x00\x4d\x00\x69\x00\x78\x00\x65\x00\x72\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\x64\x65\x6f\x4d\x69\x78\
\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x26\x00\x41\x00\x62\
\x00\x6f\x00\x75\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\
\x26\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\
\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x26\x00\x46\
\x00\x69\x00\x6c\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x26\x46\x69\x6c\x65\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\
\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x26\x00\x48\x00\
\x65\x00\x6c\x00\x70\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\
\x48\x65\x6c\x70\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x26\x00\x4c\x00\x61\
\x00\x6e\x00\x67\x00\x75\x00\x61\x00\x67\x00\x65\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x09\x26\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\
\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x0a\x00\x26\x00\x51\x00\x75\x00\x69\x00\x74\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x51\x75\x69\x74\x07\x00\
\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x28\x00\x4f\x00\x6e\x00\x6c\x00\x69\x00\x6e\x00\x65\
\x00\x20\x00\x44\x00\x6f\x00\x63\x00\x75\x00\x6d\x00\x65\x00\x6e\
\x00\x74\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x14\x4f\x6e\x6c\x69\x6e\x65\x20\x44\x6f\x63\
\x75\x6d\x65\x6e\x74\x61\x74\x69\x6f\x6e\x07\x00\x00\x00\x0b\x46\
\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x1c\
\x00\x26\x00\x43\x00\x6f\x00\x6e\x00\x66\x00\x69\x00\x67\x00\x75\
\x00\x72\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0e\x26\x43\x6f\x6e\x66\x69\x67\x75\x72\x61\
\x74\x69\x6f\x6e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x16\x00\x26\x00\x45\x00\x64\x00\x69\
\x00\x74\x00\x20\x00\x54\x00\x61\x00\x6c\x00\x6b\x00\x73\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0b\x26\x45\x64\x69\x74\x20\x54\x61\
\x6c\x6b\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x2a\x00\x26\x00\x4f\x00\x70\x00\x65\x00\
\x6e\x00\x20\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\
\x44\x00\x69\x00\x72\x00\x65\x00\x63\x00\x74\x00\x6f\x00\x72\x00\
\x79\x08\x00\x00\x00\x00\x06\x00\x00\x00\x15\x26\x4f\x70\x65\x6e\
\x20\x56\x69\x64\x65\x6f\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x10\x00\x26\x00\x4f\x00\x70\x00\x74\x00\x69\x00\x6f\
\x00\x6e\x00\x73\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x26\x4f\
\x70\x74\x69\x6f\x6e\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x26\x00\x52\x00\x65\
\x00\x70\x00\x6f\x00\x72\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x07\x26\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x43\x00\
\x6c\x00\x6f\x00\x73\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x43\x00\x6f\x00\x6d\
\x00\x6d\x00\x65\x00\x6e\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x07\x43\x6f\x6d\x6d\x65\x6e\x74\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\x44\x00\
\x61\x00\x74\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x44\
\x61\x74\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x1a\x00\x45\x00\x6c\x00\x61\x00\x70\x00\
\x73\x00\x65\x00\x64\x00\x20\x00\x54\x00\x69\x00\x6d\x00\x65\x00\
\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x45\x6c\x61\x70\x73\
\x65\x64\x20\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x45\x00\x76\
\x00\x65\x00\x6e\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x45\x76\x65\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x45\x00\x76\x00\x65\x00\
\x6e\x00\x74\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x45\
\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x46\x00\x72\x00\x65\x00\
\x65\x00\x20\x00\x53\x00\x70\x00\x61\x00\x63\x00\x65\x00\x3a\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x46\x72\x65\x65\x20\x53\x70\
\x61\x63\x65\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x6c\x00\x46\x00\x72\x00\x65\x00\x65\
\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x2d\x00\x20\x00\x54\
\x00\x68\x00\x65\x00\x20\x00\x70\x00\x6f\x00\x72\x00\x74\x00\x61\
\x00\x62\x00\x6c\x00\x65\x00\x20\x00\x70\x00\x72\x00\x65\x00\x73\
\x00\x65\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\
\x00\x20\x00\x72\x00\x65\x00\x63\x00\x6f\x00\x72\x00\x64\x00\x69\
\x00\x6e\x00\x67\x00\x20\x00\x73\x00\x74\x00\x61\x00\x74\x00\x69\
\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x32\x46\x72\
\x65\x65\x73\x65\x65\x72\x20\x2d\x20\x70\x6f\x72\x74\x61\x62\x6c\
\x65\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x20\x72\
\x65\x63\x6f\x72\x64\x69\x6e\x67\x20\x73\x74\x61\x74\x69\x6f\x6e\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x20\x00\x48\x00\x69\x00\x64\x00\x65\x00\x20\x00\x4d\
\x00\x61\x00\x69\x00\x6e\x00\x20\x00\x57\x00\x69\x00\x6e\x00\x64\
\x00\x6f\x00\x77\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x48\x69\
\x64\x65\x20\x4d\x61\x69\x6e\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x0a\x00\x49\x00\x64\x00\x6c\x00\x65\x00\x2e\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x05\x49\x64\x6c\x65\x2e\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\
\x4e\x00\x6f\x00\x20\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x08\x4e\x6f\x20\x41\x75\x64\x69\
\x6f\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x1c\x00\x4e\x00\x6f\x00\x20\x00\x41\x00\x75\x00\
\x64\x00\x69\x00\x6f\x00\x2f\x00\x56\x00\x69\x00\x64\x00\x65\x00\
\x6f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x4e\x6f\x20\x41\x75\
\x64\x69\x6f\x2f\x56\x69\x64\x65\x6f\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x4e\x00\
\x6f\x00\x20\x00\x49\x00\x73\x00\x73\x00\x75\x00\x65\x00\x73\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x09\x4e\x6f\x20\x49\x73\x73\x75\
\x65\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x10\x00\x4e\x00\x6f\x00\x20\x00\x56\x00\x69\
\x00\x64\x00\x65\x00\x6f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\
\x4e\x6f\x20\x56\x69\x64\x65\x6f\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x50\x00\x61\
\x00\x75\x00\x73\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x50\x61\x75\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x14\x00\x50\x00\x6c\x00\x61\x00\
\x79\x00\x20\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0a\x50\x6c\x61\x79\x20\x56\x69\x64\x65\
\x6f\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x0c\x00\x52\x00\x65\x00\x61\x00\x64\x00\x79\x00\
\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x61\x64\x79\
\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x0c\x00\x52\x00\x65\x00\x63\x00\x6f\x00\x72\x00\
\x64\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x63\x6f\x72\
\x64\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x12\x00\x52\x00\x65\x00\x63\x00\x6f\x00\x72\x00\
\x64\x00\x69\x00\x6e\x00\x67\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x22\x00\x52\
\x00\x65\x00\x63\x00\x6f\x00\x72\x00\x64\x00\x69\x00\x6e\x00\x67\
\x00\x20\x00\x50\x00\x61\x00\x75\x00\x73\x00\x65\x00\x64\x00\x2e\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x11\x52\x65\x63\x6f\x72\x64\
\x69\x6e\x67\x20\x50\x61\x75\x73\x65\x64\x2e\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x20\x00\
\x52\x00\x65\x00\x6c\x00\x65\x00\x61\x00\x73\x00\x65\x00\x20\x00\
\x52\x00\x65\x00\x63\x00\x65\x00\x69\x00\x76\x00\x65\x00\x64\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x10\x52\x65\x6c\x65\x61\x73\x65\
\x20\x52\x65\x63\x65\x69\x76\x65\x64\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x52\x00\
\x65\x00\x70\x00\x6f\x00\x72\x00\x74\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x00\x52\x00\
\x65\x00\x70\x00\x6f\x00\x72\x00\x74\x00\x69\x00\x6e\x00\x67\x00\
\x20\x00\x54\x00\x6f\x00\x6f\x00\x6c\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0e\x52\x65\x70\x6f\x72\x74\x69\x6e\x67\x20\x54\x6f\x6f\
\x6c\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x0c\x00\x52\x00\x65\x00\x73\x00\x75\x00\x6d\x00\
\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x73\x75\x6d\
\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x00\x52\x00\x6f\x00\x6f\x00\x6d\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\
\x52\x00\x6f\x00\x6f\x00\x6d\x00\x3a\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x05\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x20\x00\x53\x00\x68\
\x00\x6f\x00\x77\x00\x20\x00\x4d\x00\x61\x00\x69\x00\x6e\x00\x20\
\x00\x57\x00\x69\x00\x6e\x00\x64\x00\x6f\x00\x77\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x10\x53\x68\x6f\x77\x20\x4d\x61\x69\x6e\x20\
\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x53\x00\x70\x00\x65\
\x00\x61\x00\x6b\x00\x65\x00\x72\x00\x3a\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x08\x53\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x22\
\x00\x50\x00\x72\x00\x65\x00\x70\x00\x61\x00\x72\x00\x65\x00\x20\
\x00\x74\x00\x6f\x00\x20\x00\x52\x00\x65\x00\x63\x00\x6f\x00\x72\
\x00\x64\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x53\x74\x61\x6e\
\x64\x62\x79\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x08\x00\x53\x00\x74\x00\x6f\x00\x70\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x04\x53\x74\x6f\x70\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x08\x00\x54\x00\x61\x00\x6c\x00\x6b\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x04\x54\x61\x6c\x6b\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x54\x00\x69\x00\
\x6d\x00\x65\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\
\x69\x6d\x65\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x54\x00\x69\x00\x74\x00\x6c\
\x00\x65\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\
\x74\x6c\x65\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x1c\x00\x26\x00\x45\x00\x78\x00\x70\
\x00\x6f\x00\x72\x00\x74\x00\x20\x00\x74\x00\x6f\x00\x20\x00\x43\
\x00\x53\x00\x56\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\x45\
\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x58\x00\x41\x00\x72\x00\x65\x00\x20\x00\x79\
\x00\x6f\x00\x75\x00\x20\x00\x73\x00\x75\x00\x72\x00\x65\x00\x20\
\x00\x79\x00\x6f\x00\x75\x00\x20\x00\x77\x00\x61\x00\x6e\x00\x74\
\x00\x20\x00\x74\x00\x6f\x00\x20\x00\x63\x00\x6c\x00\x65\x00\x61\
\x00\x72\x00\x20\x00\x74\x00\x68\x00\x65\x00\x20\x00\x44\x00\x61\
\x00\x74\x00\x61\x00\x62\x00\x61\x00\x73\x00\x65\x00\x3f\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\x6f\x75\x20\
\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\x20\x74\x6f\
\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\x3f\x07\x00\
\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x43\x00\x6c\x00\x65\x00\x61\
\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x65\x61\
\x72\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x00\x43\x00\x6c\x00\
\x65\x00\x61\x00\x72\x00\x20\x00\x44\x00\x61\x00\x74\x00\x61\x00\
\x62\x00\x61\x00\x73\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x0e\x43\x6c\x65\x61\x72\x20\x44\x61\x74\x61\x62\x61\x73\x65\x07\
\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x43\x00\x6c\x00\x6f\x00\
\x73\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\
\x73\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x18\x00\x44\x00\x65\
\x00\x73\x00\x63\x00\x72\x00\x69\x00\x70\x00\x74\x00\x69\x00\x6f\
\x00\x6e\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\x44\x65\
\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\x3a\x07\x00\x00\x00\x0f\x52\
\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x0c\x00\x45\x00\x76\x00\x65\x00\x6e\x00\x74\x00\x3a\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x2c\x00\x46\x00\x72\x00\x65\
\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x52\x00\x65\
\x00\x70\x00\x6f\x00\x72\x00\x74\x00\x20\x00\x45\x00\x64\x00\x69\
\x00\x74\x00\x6f\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x16\
\x46\x72\x65\x65\x73\x65\x65\x72\x20\x52\x65\x70\x6f\x72\x74\x20\
\x45\x64\x69\x74\x6f\x72\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\
\x00\x4c\x00\x65\x00\x76\x00\x65\x00\x6c\x00\x3a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x06\x4c\x65\x76\x65\x6c\x3a\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x0c\x00\x52\x00\x65\x00\x6d\x00\x6f\x00\x76\
\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\
\x76\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x52\x00\x6f\
\x00\x6f\x00\x6d\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\
\x53\x00\x65\x00\x6c\x00\x65\x00\x63\x00\x74\x00\x20\x00\x46\x00\
\x69\x00\x6c\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x53\
\x65\x6c\x65\x63\x74\x20\x46\x69\x6c\x65\x07\x00\x00\x00\x0f\x52\
\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x10\x00\x53\x00\x70\x00\x65\x00\x61\x00\x6b\x00\x65\
\x00\x72\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x70\
\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\
\x00\x54\x00\x69\x00\x6d\x00\x65\x00\x3a\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x0c\x00\x54\x00\x69\x00\x74\x00\x6c\x00\x65\x00\x3a\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\x74\x6c\x65\x3a\x07\
\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x1c\x00\x26\x00\x45\x00\x78\x00\
\x70\x00\x6f\x00\x72\x00\x74\x00\x20\x00\x74\x00\x6f\x00\x20\x00\
\x43\x00\x53\x00\x56\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\
\x45\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x22\x00\x26\x00\x52\x00\x65\x00\x6d\x00\x6f\x00\
\x76\x00\x65\x00\x20\x00\x41\x00\x6c\x00\x6c\x00\x20\x00\x54\x00\
\x61\x00\x6c\x00\x6b\x00\x73\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x11\x26\x52\x65\x6d\x6f\x76\x65\x20\x41\x6c\x6c\x20\x54\x61\x6c\
\x6b\x73\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x18\x00\x41\x00\x64\x00\x64\
\x00\x20\x00\x4e\x00\x65\x00\x77\x00\x20\x00\x54\x00\x61\x00\x6c\
\x00\x6b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\x41\x64\x64\x20\
\x4e\x65\x77\x20\x54\x61\x6c\x6b\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x58\
\x00\x41\x00\x72\x00\x65\x00\x20\x00\x79\x00\x6f\x00\x75\x00\x20\
\x00\x73\x00\x75\x00\x72\x00\x65\x00\x20\x00\x79\x00\x6f\x00\x75\
\x00\x20\x00\x77\x00\x61\x00\x6e\x00\x74\x00\x20\x00\x74\x00\x6f\
\x00\x20\x00\x63\x00\x6c\x00\x65\x00\x61\x00\x72\x00\x20\x00\x74\
\x00\x68\x00\x65\x00\x20\x00\x44\x00\x61\x00\x74\x00\x61\x00\x62\
\x00\x61\x00\x73\x00\x65\x00\x3f\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x26\x41\x72\x65\x20\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\
\x6f\x75\x20\x77\x61\x6e\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\
\x20\x74\x68\x65\x20\x44\x42\x3f\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x10\
\x00\x43\x00\x53\x00\x56\x00\x20\x00\x46\x00\x69\x00\x6c\x00\x65\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x43\x53\x56\x20\x46\x69\
\x6c\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x43\x00\x61\x00\x74\
\x00\x65\x00\x67\x00\x6f\x00\x72\x00\x79\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x08\x43\x61\x74\x65\x67\x6f\x72\x79\x07\x00\x00\x00\
\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x08\x00\x44\x00\x61\x00\x74\x00\x65\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\x0d\x54\
\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\
\x00\x0a\x00\x45\x00\x76\x00\x65\x00\x6e\x00\x74\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\x00\x00\x0d\
\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x0c\x00\x45\x00\x78\x00\x70\x00\x6f\x00\x72\x00\x74\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x06\x45\x78\x70\x6f\x72\x74\x07\
\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x28\x00\x46\x00\x72\x00\x65\x00\x65\x00\
\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x54\x00\x61\x00\x6c\x00\
\x6b\x00\x20\x00\x45\x00\x64\x00\x69\x00\x74\x00\x6f\x00\x72\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x14\x46\x72\x65\x65\x73\x65\x65\
\x72\x20\x54\x61\x6c\x6b\x20\x45\x64\x69\x74\x6f\x72\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x0c\x00\x49\x00\x6d\x00\x70\x00\x6f\x00\x72\x00\
\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x49\x6d\x70\x6f\x72\
\x74\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x50\x00\x72\x00\x65\x00\
\x73\x00\x65\x00\x6e\x00\x74\x00\x65\x00\x72\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x09\x50\x72\x65\x73\x65\x6e\x74\x65\x72\x07\x00\
\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x0e\x00\x52\x00\x53\x00\x53\x00\x20\x00\x55\
\x00\x52\x00\x4c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x52\x53\
\x53\x20\x55\x52\x4c\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x52\x00\
\x65\x00\x6d\x00\x6f\x00\x76\x00\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x52\x65\x6d\x6f\x76\x65\x07\x00\x00\x00\x0d\x54\x61\
\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x14\x00\x52\x00\x65\x00\x6d\x00\x6f\x00\x76\x00\x65\x00\x20\x00\
\x41\x00\x6c\x00\x6c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x52\
\x65\x6d\x6f\x76\x65\x20\x41\x6c\x6c\x07\x00\x00\x00\x0d\x54\x61\
\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x3c\x00\x52\x00\x65\x00\x6d\x00\x6f\x00\x76\x00\x65\x00\x20\x00\
\x41\x00\x6c\x00\x6c\x00\x20\x00\x54\x00\x61\x00\x6c\x00\x6b\x00\
\x73\x00\x20\x00\x66\x00\x72\x00\x6f\x00\x6d\x00\x20\x00\x44\x00\
\x61\x00\x74\x00\x61\x00\x62\x00\x61\x00\x73\x00\x65\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x1e\x52\x65\x6d\x6f\x76\x65\x20\x41\x6c\
\x6c\x20\x54\x61\x6c\x6b\x73\x20\x66\x72\x6f\x6d\x20\x44\x61\x74\
\x61\x62\x61\x73\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\x52\x00\
\x6f\x00\x6f\x00\x6d\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x52\
\x6f\x6f\x6d\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x53\x00\x65\x00\
\x61\x00\x72\x00\x63\x00\x68\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x06\x53\x65\x61\x72\x63\x68\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\
\x54\x00\x69\x00\x6d\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x04\x54\x69\x6d\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x54\x00\
\x69\x00\x74\x00\x6c\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x54\x69\x74\x6c\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x18\x00\x55\
\x00\x6e\x00\x73\x00\x61\x00\x76\x00\x65\x00\x64\x00\x20\x00\x44\
\x00\x61\x00\x74\x00\x61\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\
\x55\x6e\x73\x61\x76\x65\x64\x20\x44\x61\x74\x61\x07\x00\x00\x00\
\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x58\x00\x55\x00\x6e\x00\x73\x00\x61\x00\x76\x00\x65\
\x00\x64\x00\x20\x00\x74\x00\x61\x00\x6c\x00\x6b\x00\x20\x00\x64\
\x00\x65\x00\x74\x00\x61\x00\x69\x00\x6c\x00\x73\x00\x20\x00\x77\
\x00\x69\x00\x6c\x00\x6c\x00\x20\x00\x62\x00\x65\x00\x20\x00\x6c\
\x00\x6f\x00\x73\x00\x74\x00\x2e\x00\x20\x00\x43\x00\x6f\x00\x6e\
\x00\x74\x00\x69\x00\x6e\x00\x75\x00\x65\x00\x3f\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x2c\x55\x6e\x73\x61\x76\x65\x64\x20\x74\x61\
\x6c\x6b\x20\x64\x65\x74\x61\x69\x6c\x73\x20\x77\x69\x6c\x6c\x20\
\x62\x65\x20\x6c\x6f\x73\x74\x2e\x20\x43\x6f\x6e\x74\x69\x6e\x75\
\x65\x3f\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x45\x00\x6e\x00\x67\
\x00\x6c\x00\x69\x00\x73\x00\x68\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x15\x4c\x61\x6e\x67\x75\x61\x67\x65\x20\x44\x69\x73\x70\x6c\
\x61\x79\x20\x54\x65\x78\x74\x07\x00\x00\x00\x0b\x54\x72\x61\x6e\
\x73\x6c\x61\x74\x69\x6f\x6e\x01\x03\x00\x00\x00\x0c\x00\x53\x00\
\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x18\x70\x6c\
\x75\x67\x69\x6e\x2d\x61\x75\x64\x69\x6f\x2d\x70\x61\x73\x73\x74\
\x68\x72\x6f\x75\x67\x68\x01\x03\x00\x00\x00\x10\x00\x46\x00\x65\
\x00\x65\x00\x64\x00\x62\x00\x61\x00\x63\x00\x6b\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x08\x46\x65\x65\x64\x62\x61\x63\x6b\x07\x00\
\x00\x00\x14\x70\x6c\x75\x67\x69\x6e\x2d\x61\x75\x64\x69\x6f\x66\
\x65\x65\x64\x62\x61\x63\x6b\x01\x03\x00\x00\x00\x1c\x00\x52\x00\
\x65\x00\x63\x00\x6f\x00\x72\x00\x64\x00\x20\x00\x44\x00\x65\x00\
\x73\x00\x6b\x00\x74\x00\x6f\x00\x70\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0e\x52\x65\x63\x6f\x72\x64\x20\x44\x65\x73\x6b\x74\x6f\
\x70\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\
\x6b\x74\x6f\x70\x01\x03\x00\x00\x00\x1a\x00\x52\x00\x65\x00\x63\
\x00\x6f\x00\x72\x00\x64\x00\x20\x00\x52\x00\x65\x00\x67\x00\x69\
\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x52\x65\
\x63\x6f\x72\x64\x20\x52\x65\x67\x69\x6f\x6e\x07\x00\x00\x00\x0e\
\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\x74\x6f\x70\x01\x03\
\x00\x00\x00\x0c\x00\x53\x00\x63\x00\x72\x00\x65\x00\x65\x00\x6e\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x53\x63\x72\x65\x65\x6e\
\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\
\x74\x6f\x70\x01\x03\x00\x00\x00\x18\x00\x56\x00\x69\x00\x64\x00\
\x65\x00\x6f\x00\x20\x00\x44\x00\x65\x00\x76\x00\x69\x00\x63\x00\
\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\x56\x69\x64\x65\x6f\
\x20\x44\x65\x76\x69\x63\x65\x07\x00\x00\x00\x0f\x70\x6c\x75\x67\
\x69\x6e\x2d\x66\x69\x72\x65\x77\x69\x72\x65\x01\x03\x00\x00\x00\
\x04\x00\x49\x00\x50\x08\x00\x00\x00\x00\x06\x00\x00\x00\x02\x49\
\x50\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\x63\x65\
\x63\x61\x73\x74\x01\x03\x00\x00\x00\x0a\x00\x4d\x00\x6f\x00\x75\
\x00\x6e\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x4d\x6f\
\x75\x6e\x74\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\
\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\x00\x10\x00\x50\x00\x61\
\x00\x73\x00\x73\x00\x77\x00\x6f\x00\x72\x00\x64\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x08\x50\x61\x73\x73\x77\x6f\x72\x64\x07\x00\
\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\
\x74\x01\x03\x00\x00\x00\x08\x00\x50\x00\x6f\x00\x72\x00\x74\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x04\x50\x6f\x72\x74\x07\x00\x00\
\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\x74\
\x01\x03\x00\x00\x00\x0c\x00\x43\x00\x6c\x00\x69\x00\x65\x00\x6e\
\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x43\x6c\x69\x65\
\x6e\x74\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\
\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x16\x00\x43\x00\
\x6c\x00\x69\x00\x65\x00\x6e\x00\x74\x00\x20\x00\x4e\x00\x61\x00\
\x6d\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x43\x6c\x69\
\x65\x6e\x74\x20\x4e\x61\x6d\x65\x07\x00\x00\x00\x10\x70\x6c\x75\
\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\x00\
\x00\x00\x0e\x00\x43\x00\x6f\x00\x6e\x00\x6e\x00\x65\x00\x63\x00\
\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x43\x6f\x6e\x6e\x65\
\x63\x74\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\
\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x0c\x00\x53\x00\
\x65\x00\x72\x00\x76\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x06\x53\x65\x72\x76\x65\x72\x07\x00\x00\x00\x10\x70\x6c\
\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\
\x00\x00\x00\x10\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\
\x00\x20\x00\x31\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x6f\
\x75\x72\x63\x65\x20\x31\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\
\x6e\x2d\x6d\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\x03\x00\x00\
\x00\x10\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x00\x20\
\x00\x32\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x6f\x75\x72\
\x63\x65\x20\x32\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\
\x6d\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x1a\
\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x20\x00\x51\x00\x75\
\x00\x61\x00\x6c\x00\x69\x00\x74\x00\x79\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0d\x41\x75\x64\x69\x6f\x20\x51\x75\x61\x6c\x69\x74\
\x79\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\
\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x56\x00\x47\x00\
\x65\x00\x6e\x00\x65\x00\x72\x00\x61\x00\x74\x00\x65\x00\x73\x00\
\x20\x00\x4d\x00\x61\x00\x74\x00\x74\x00\x65\x00\x72\x00\x68\x00\
\x6f\x00\x72\x00\x6e\x00\x20\x00\x4d\x00\x65\x00\x74\x00\x61\x00\
\x64\x00\x61\x00\x74\x00\x61\x00\x20\x00\x69\x00\x6e\x00\x20\x00\
\x58\x00\x4d\x00\x4c\x00\x20\x00\x66\x00\x6f\x00\x72\x00\x6d\x00\
\x61\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x2b\x47\x65\x6e\
\x65\x72\x61\x74\x65\x73\x20\x4d\x61\x74\x74\x65\x72\x68\x6f\x72\
\x6e\x20\x4d\x65\x74\x61\x64\x61\x74\x61\x20\x69\x6e\x20\x58\x4d\
\x4c\x20\x66\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\x11\x70\x6c\x75\
\x67\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\
\x00\x00\x00\x26\x00\x4d\x00\x61\x00\x74\x00\x74\x00\x65\x00\x72\
\x00\x68\x00\x6f\x00\x72\x00\x6e\x00\x20\x00\x4d\x00\x65\x00\x74\
\x00\x61\x00\x64\x00\x61\x00\x74\x00\x61\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x13\x4d\x61\x74\x74\x65\x72\x68\x6f\x72\x6e\x20\x4d\
\x65\x74\x61\x64\x61\x74\x61\x07\x00\x00\x00\x11\x70\x6c\x75\x67\
\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\x00\
\x00\x00\x28\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\
\x51\x00\x75\x00\x61\x00\x6c\x00\x69\x00\x74\x00\x79\x00\x20\x00\
\x28\x00\x6b\x00\x62\x00\x2f\x00\x73\x00\x29\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x14\x56\x69\x64\x65\x6f\x20\x51\x75\x61\x6c\x69\
\x74\x79\x20\x28\x6b\x62\x2f\x73\x29\x07\x00\x00\x00\x11\x70\x6c\
\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\
\x03\x00\x00\x00\x16\x00\x4d\x00\x61\x00\x69\x00\x6e\x00\x20\x00\
\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0b\x4d\x61\x69\x6e\x20\x53\x6f\x75\x72\x63\x65\
\x07\x00\x00\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x70\x69\x70\x01\
\x03\x00\x00\x00\x14\x00\x50\x00\x49\x00\x50\x00\x20\x00\x53\x00\
\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0a\x50\x49\x50\x20\x53\x6f\x75\x72\x63\x65\x07\x00\x00\
\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x70\x69\x70\x01\x03\x00\x00\
\x00\x0c\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x53\x6f\x75\x72\x63\x65\x07\x00\
\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x70\x75\x6c\x73\x65\x61\
\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x18\x00\x56\x00\x69\x00\x64\
\x00\x65\x00\x6f\x00\x20\x00\x44\x00\x65\x00\x76\x00\x69\x00\x63\
\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0c\x56\x69\x64\x65\
\x6f\x20\x44\x65\x76\x69\x63\x65\x07\x00\x00\x00\x0a\x70\x6c\x75\
\x67\x69\x6e\x2d\x75\x73\x62\x01\x03\x00\x00\x00\x18\x00\x43\x00\
\x6f\x00\x6c\x00\x6f\x00\x72\x00\x20\x00\x46\x00\x6f\x00\x72\x00\
\x6d\x00\x61\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x43\
\x6f\x6c\x6f\x75\x72\x20\x46\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\
\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x2d\x70\x61\
\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\x00\x00\x00\x12\x00\
\x46\x00\x72\x00\x61\x00\x6d\x00\x65\x00\x72\x00\x61\x00\x74\x00\
\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x46\x72\x61\x6d\x65\
\x72\x61\x74\x65\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\
\x76\x69\x64\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\
\x68\x01\x03\x00\x00\x00\x16\x00\x56\x00\x69\x00\x64\x00\x65\x00\
\x6f\x00\x20\x00\x49\x00\x6e\x00\x70\x00\x75\x00\x74\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\
\x75\x74\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\
\x64\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\
\x03\x00\x00\x00\x16\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x00\
\x20\x00\x53\x00\x63\x00\x61\x00\x6c\x00\x65\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x53\x63\x61\x6c\x65\
\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\
\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\x00\
\x00\x00\x16\x00\x4c\x00\x65\x00\x61\x00\x6b\x00\x79\x00\x20\x00\
\x51\x00\x75\x00\x65\x00\x75\x00\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0b\x4c\x65\x61\x6b\x79\x20\x51\x75\x65\x75\x65\x07\x00\
\x00\x00\x13\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x70\
\x72\x65\x76\x69\x65\x77\x01\x03\x00\x00\x00\x0e\x00\x50\x00\x72\
\x00\x65\x00\x76\x00\x69\x00\x65\x00\x77\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x07\x50\x72\x65\x76\x69\x65\x77\x07\x00\x00\x00\x13\
\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x70\x72\x65\x76\
\x69\x65\x77\x01\x03\x00\x00\x00\x34\x00\x41\x00\x63\x00\x74\x00\
\x20\x00\x61\x00\x73\x00\x20\x00\x61\x00\x20\x00\x6c\x00\x69\x00\
\x76\x00\x65\x00\x20\x00\x76\x00\x69\x00\x64\x00\x65\x00\x6f\x00\
\x20\x00\x73\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x1a\x41\x63\x74\x20\x61\x73\x20\x61\x20\
\x6c\x69\x76\x65\x20\x76\x69\x64\x65\x6f\x20\x73\x6f\x75\x72\x63\
\x65\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x74\x65\x73\x74\x01\x03\x00\x00\x00\x16\x00\x4c\x00\x69\
\x00\x76\x00\x65\x00\x20\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\
\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x4c\x69\x76\x65\
\x20\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x10\x70\x6c\x75\x67\
\x69\x6e\x2d\x76\x69\x64\x65\x6f\x74\x65\x73\x74\x01\x03\x00\x00\
\x00\x0e\x00\x50\x00\x61\x00\x74\x00\x74\x00\x65\x00\x72\x00\x6e\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x50\x61\x74\x74\x65\x72\
\x6e\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x74\x65\x73\x74\x01\x03\x00\x00\x00\x76\x00\x2a\x00\x46\
\x00\x6f\x00\x72\x00\x20\x00\x52\x00\x54\x00\x4d\x00\x50\x00\x20\
\x00\x73\x00\x74\x00\x72\x00\x65\x00\x61\x00\x6d\x00\x69\x00\x6e\
\x00\x67\x00\x2c\x00\x20\x00\x61\x00\x6c\x00\x6c\x00\x20\x00\x6f\
\x00\x74\x00\x68\x00\x65\x00\x72\x00\x20\x00\x6f\x00\x75\x00\x74\
\x00\x70\x00\x75\x00\x74\x00\x73\x00\x20\x00\x6d\x00\x75\x00\x73\
\x00\x74\x00\x20\x00\x62\x00\x65\x00\x20\x00\x73\x00\x65\x00\x74\
\x00\x20\x00\x74\x00\x6f\x00\x20\x00\x6c\x00\x65\x00\x61\x00\x6b\
\x00\x79\x08\x00\x00\x00\x00\x06\x00\x00\x00\x3b\x2a\x46\x6f\x72\
\x20\x52\x54\x4d\x50\x20\x73\x74\x72\x65\x61\x6d\x69\x6e\x67\x2c\
\x20\x61\x6c\x6c\x20\x6f\x74\x68\x65\x72\x20\x6f\x75\x74\x70\x75\
\x74\x73\x20\x6d\x75\x73\x74\x20\x62\x65\x20\x73\x65\x74\x20\x74\
\x6f\x20\x6c\x65\x61\x6b\x79\x07\x00\x00\x00\x04\x72\x74\x6d\x70\
\x01\x03\x00\x00\x00\xc2\x00\x2a\x00\x53\x00\x65\x00\x65\x00\x3a\
\x00\x20\x00\x68\x00\x74\x00\x74\x00\x70\x00\x3a\x00\x2f\x00\x2f\
\x00\x77\x00\x77\x00\x77\x00\x2e\x00\x6a\x00\x75\x00\x73\x00\x74\
\x00\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x00\x2f\x00\x62\x00\x72\
\x00\x6f\x00\x61\x00\x64\x00\x63\x00\x61\x00\x73\x00\x74\x00\x2f\
\x00\x61\x00\x64\x00\x76\x00\x5f\x00\x6f\x00\x74\x00\x68\x00\x65\
\x00\x72\x00\x0a\x00\x59\x00\x6f\x00\x75\x00\x20\x00\x6d\x00\x75\
\x00\x73\x00\x74\x00\x20\x00\x62\x00\x65\x00\x20\x00\x6c\x00\x6f\
\x00\x67\x00\x67\x00\x65\x00\x64\x00\x20\x00\x69\x00\x6e\x00\x20\
\x00\x74\x00\x6f\x00\x20\x00\x6f\x00\x62\x00\x74\x00\x61\x00\x69\
\x00\x6e\x00\x20\x00\x79\x00\x6f\x00\x75\x00\x72\x00\x20\x00\x53\
\x00\x74\x00\x72\x00\x65\x00\x61\x00\x6d\x00\x69\x00\x6e\x00\x67\
\x00\x20\x00\x4b\x00\x65\x00\x79\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x61\x2a\x53\x65\x65\x3a\x20\x68\x74\x74\x70\x3a\x2f\x2f\x77\
\x77\x77\x2e\x6a\x75\x73\x74\x69\x6e\x2e\x74\x76\x2f\x62\x72\x6f\
\x61\x64\x63\x61\x73\x74\x2f\x61\x64\x76\x5f\x6f\x74\x68\x65\x72\
\x0a\x59\x6f\x75\x20\x6d\x75\x73\x74\x20\x62\x65\x20\x6c\x6f\x67\
\x67\x65\x64\x20\x69\x6e\x20\x74\x6f\x20\x6f\x62\x74\x61\x69\x6e\
\x20\x79\x6f\x75\x72\x20\x53\x74\x72\x65\x61\x6d\x69\x6e\x67\x20\
\x4b\x65\x79\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\x00\
\x01\x22\x00\x41\x00\x6e\x00\x20\x00\x61\x00\x75\x00\x74\x00\x68\
\x00\x6f\x00\x72\x00\x69\x00\x7a\x00\x61\x00\x74\x00\x69\x00\x6f\
\x00\x6e\x00\x20\x00\x55\x00\x52\x00\x4c\x00\x20\x00\x73\x00\x68\
\x00\x6f\x00\x75\x00\x6c\x00\x64\x00\x20\x00\x68\x00\x61\x00\x76\
\x00\x65\x00\x20\x00\x6f\x00\x70\x00\x65\x00\x6e\x00\x65\x00\x64\
\x00\x20\x00\x69\x00\x6e\x00\x20\x00\x79\x00\x6f\x00\x75\x00\x72\
\x00\x20\x00\x62\x00\x72\x00\x6f\x00\x77\x00\x73\x00\x65\x00\x72\
\x00\x2e\x00\x0a\x00\x49\x00\x66\x00\x20\x00\x6e\x00\x6f\x00\x74\
\x00\x2c\x00\x20\x00\x67\x00\x6f\x00\x20\x00\x6f\x00\x70\x00\x65\
\x00\x6e\x00\x20\x00\x74\x00\x68\x00\x65\x00\x20\x00\x66\x00\x6f\
\x00\x6c\x00\x6c\x00\x6f\x00\x77\x00\x69\x00\x6e\x00\x67\x00\x20\
\x00\x55\x00\x52\x00\x4c\x00\x20\x00\x74\x00\x6f\x00\x20\x00\x61\
\x00\x6c\x00\x6c\x00\x6f\x00\x77\x00\x20\x00\x66\x00\x72\x00\x65\
\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x00\x74\x00\x6f\
\x00\x20\x00\x6d\x00\x61\x00\x6e\x00\x61\x00\x67\x00\x65\x00\x20\
\x00\x79\x00\x6f\x00\x75\x00\x72\x00\x20\x00\x6a\x00\x75\x00\x73\
\x00\x74\x00\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x00\x20\x00\x63\
\x00\x68\x00\x61\x00\x6e\x00\x6e\x00\x65\x00\x6c\x00\x2e\x00\x0a\
\x00\x25\x00\x31\x08\x00\x00\x00\x00\x06\x00\x00\x00\x91\x41\x6e\
\x20\x61\x75\x74\x68\x6f\x72\x69\x7a\x61\x74\x69\x6f\x6e\x20\x55\
\x52\x4c\x20\x73\x68\x6f\x75\x6c\x64\x20\x68\x61\x76\x65\x20\x6f\
\x70\x65\x6e\x65\x64\x20\x69\x6e\x20\x79\x6f\x75\x72\x20\x62\x72\
\x6f\x77\x73\x65\x72\x2e\x0a\x49\x66\x20\x6e\x6f\x74\x2c\x20\x67\
\x6f\x20\x6f\x70\x65\x6e\x20\x74\x68\x65\x20\x66\x6f\x6c\x6c\x6f\
\x77\x69\x6e\x67\x20\x55\x52\x4c\x20\x74\x6f\x20\x61\x6c\x6c\x6f\
\x77\x20\x66\x72\x65\x65\x73\x65\x65\x72\x20\x74\x6f\x20\x6d\x61\
\x6e\x61\x67\x65\x20\x79\x6f\x75\x72\x20\x6a\x75\x73\x74\x69\x6e\
\x2e\x74\x76\x20\x63\x68\x61\x6e\x6e\x65\x6c\x2e\x0a\x25\x31\x07\
\x00\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\x00\x00\x96\x00\x41\
\x00\x75\x00\x74\x00\x68\x00\x65\x00\x6e\x00\x74\x00\x69\x00\x63\
\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x00\x20\x00\x66\x00\x61\
\x00\x69\x00\x6c\x00\x65\x00\x64\x00\x2e\x00\x20\x00\x53\x00\x75\
\x00\x70\x00\x70\x00\x6c\x00\x69\x00\x65\x00\x64\x00\x20\x00\x63\
\x00\x72\x00\x65\x00\x64\x00\x65\x00\x6e\x00\x74\x00\x69\x00\x61\
\x00\x6c\x00\x73\x00\x20\x00\x66\x00\x6f\x00\x72\x00\x20\x00\x4a\
\x00\x75\x00\x73\x00\x74\x00\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\
\x00\x20\x00\x6d\x00\x61\x00\x79\x00\x20\x00\x62\x00\x65\x00\x20\
\x00\x69\x00\x6e\x00\x63\x00\x6f\x00\x72\x00\x72\x00\x65\x00\x63\
\x00\x74\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x4b\x41\x75\
\x74\x68\x65\x6e\x74\x69\x63\x61\x74\x69\x6f\x6e\x20\x66\x61\x69\
\x6c\x65\x64\x2e\x20\x53\x75\x70\x70\x6c\x69\x65\x64\x20\x63\x72\
\x65\x64\x65\x6e\x74\x69\x61\x6c\x73\x20\x66\x6f\x72\x20\x4a\x75\
\x73\x74\x69\x6e\x2e\x74\x76\x20\x6d\x61\x79\x20\x62\x65\x20\x69\
\x6e\x63\x6f\x72\x72\x65\x63\x74\x2e\x07\x00\x00\x00\x04\x72\x74\
\x6d\x70\x01\x03\x00\x00\x00\x4e\x00\x4f\x00\x76\x00\x65\x00\x72\
\x00\x77\x00\x72\x00\x69\x00\x74\x00\x65\x00\x20\x00\x63\x00\x75\
\x00\x73\x00\x74\x00\x6f\x00\x6d\x00\x20\x00\x73\x00\x65\x00\x74\
\x00\x74\x00\x69\x00\x6e\x00\x67\x00\x73\x00\x20\x00\x66\x00\x6f\
\x00\x72\x00\x20\x00\x6a\x00\x75\x00\x73\x00\x74\x00\x69\x00\x6e\
\x00\x2e\x00\x74\x00\x76\x08\x00\x00\x00\x00\x06\x00\x00\x00\x27\
\x4f\x76\x65\x72\x77\x72\x69\x74\x65\x20\x63\x75\x73\x74\x6f\x6d\
\x20\x73\x65\x74\x74\x69\x6e\x67\x73\x20\x66\x6f\x72\x20\x6a\x75\
\x73\x74\x69\x6e\x2e\x74\x76\x07\x00\x00\x00\x04\x72\x74\x6d\x70\
\x01\x88\x00\x00\x00\x02\x01\x01\
\x00\x00\x12\x60\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x02\x28\x00\x04\xa8\xa5\x00\x00\x05\xf1\x00\x04\xa8\xa5\
\x00\x00\x0e\x17\x00\x05\x96\x5d\x00\x00\x07\xd9\x00\x05\x96\x5d\
\x00\x00\x0e\xf3\x00\x05\xa8\x2b\x00\x00\x09\x31\x00\x05\xab\x60\
\x00\x00\x09\x07\x00\x05\xb0\x35\x00\x00\x0f\x25\x00\x2a\xd0\x25\
\x00\x00\x04\x50\x00\x2a\xec\x30\x00\x00\x04\x81\x00\x2b\x8c\x04\
\x00\x00\x04\xeb\x00\x3c\xdc\x74\x00\x00\x01\x32\x00\x48\x85\x72\
\x00\x00\x01\x76\x00\x4a\x2b\x82\x00\x00\x0a\x84\x00\x4a\x36\x95\
\x00\x00\x00\x00\x00\x4a\x36\x95\x00\x00\x01\xb8\x00\x4a\x36\x95\
\x00\x00\x05\x8f\x00\x4a\x36\x95\x00\x00\x0b\x09\x00\x4c\xcc\x54\
\x00\x00\x06\x1d\x00\x4c\xcc\x54\x00\x00\x0e\x47\x00\x56\x8c\x95\
\x00\x00\x06\xe2\x00\x59\x66\x0a\x00\x00\x08\x07\x00\x59\x66\x0a\
\x00\x00\x0c\x32\x00\x59\xcb\xc0\x00\x00\x02\xdb\x00\x5b\x03\x8a\
\x00\x00\x09\x6b\x00\x5b\x03\x8a\x00\x00\x0c\xf6\x00\x5b\x0b\x25\
\x00\x00\x0f\x53\x00\x89\x67\x25\x00\x00\x01\xe7\x01\x08\xec\xc4\
\x00\x00\x00\xaa\x01\x14\xad\x04\x00\x00\x03\x0c\x01\x14\xad\x04\
\x00\x00\x0f\xc7\x01\x1c\xb5\xc2\x00\x00\x00\xef\x01\x30\xf4\x02\
\x00\x00\x03\x51\x02\x89\xdc\xc7\x00\x00\x06\x86\x02\xa7\x96\xc4\
\x00\x00\x04\x1a\x04\x18\xa4\x4f\x00\x00\x0a\x1a\x04\x18\xa4\x4f\
\x00\x00\x0d\xaf\x04\xcc\xc5\x7a\x00\x00\x06\x50\x04\xcc\xc5\x7a\
\x00\x00\x0b\x84\x04\xd6\x80\x8a\x00\x00\x0b\x3a\x05\x2c\xcb\xfa\
\x00\x00\x0b\xc0\x05\x6c\xb7\xc4\x00\x00\x02\x6e\x05\x8b\x7b\xbe\
\x00\x00\x07\x0f\x05\x8b\xa6\x84\x00\x00\x07\x41\x05\x8c\x46\xc5\
\x00\x00\x0b\xf6\x05\x8c\x46\xc5\x00\x00\x0e\xb9\x05\x8c\x76\x94\
\x00\x00\x07\x71\x05\x8c\xac\x35\x00\x00\x07\xa3\x05\xb0\xb2\x8a\
\x00\x00\x09\x98\x05\xb0\xb2\x8a\x00\x00\x0d\x29\x06\x7b\x08\xe3\
\x00\x00\x05\x22\x06\xb8\x19\xfa\x00\x00\x08\x90\x06\xb8\x19\xfa\
\x00\x00\x0c\xb8\x07\x3b\xe0\x03\x00\x00\x02\xa4\x08\x4e\x9c\xf5\
\x00\x00\x04\xb2\x08\xee\x26\x24\x00\x00\x0f\x84\x0a\x1f\xc8\x95\
\x00\x00\x0a\xb9\x0a\x3d\x0e\x95\x00\x00\x0c\x69\x0a\x64\x3c\x14\
\x00\x00\x05\xba\x0a\xa8\x4a\xc9\x00\x00\x08\xc8\x0b\x66\x23\x46\
\x00\x00\x09\xc8\x0b\x66\x23\x46\x00\x00\x0d\x5f\x0b\x8c\x76\xb4\
\x00\x00\x05\x5a\x0c\x3b\x98\x64\x00\x00\x03\x94\x0c\x47\xc1\x62\
\x00\x00\x03\xd8\x0c\x8a\xac\x07\x00\x00\x08\x38\x0c\x9c\x0d\x42\
\x00\x00\x0e\x7e\x0c\xc9\xa0\x0e\x00\x00\x00\x75\x0c\xfb\x29\xd4\
\x00\x00\x00\x2d\x0d\xc4\xc8\x3c\x00\x00\x02\x37\x69\x00\x00\x10\
\x17\x03\x00\x00\x00\x08\x00\x45\x00\x6e\x00\x64\x00\x65\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\
\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\
\x00\x00\x1a\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\
\x65\x00\x72\x00\x20\x00\xfc\x00\x62\x00\x65\x00\x72\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0e\x46\x72\x65\x65\x73\x65\x65\x72\x20\
\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\
\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x0e\x00\x56\x00\x65\x00\
\x72\x00\x73\x00\x69\x00\x6f\x00\x6e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x07\x56\x65\x72\x73\x69\x6f\x6e\x07\x00\x00\x00\x0b\x41\
\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x18\
\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x00\x65\x00\x69\x00\x6e\
\x00\x67\x00\x61\x00\x6e\x00\x67\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0b\x41\x75\x64\x69\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x16\x00\x41\x00\x75\x00\x64\x00\x69\x00\x6f\x00\
\x20\x00\x4d\x00\x69\x00\x78\x00\x65\x00\x72\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0b\x41\x75\x64\x69\x6f\x20\x4d\x69\x78\x65\x72\
\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\
\x70\x70\x01\x03\x00\x00\x00\x18\x00\x41\x00\x75\x00\x64\x00\x69\
\x00\x6f\x00\x65\x00\x69\x00\x6e\x00\x67\x00\x61\x00\x6e\x00\x67\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\x49\
\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x41\x00\x75\
\x00\x64\x00\x69\x00\x6f\x00\x20\x00\x4d\x00\x69\x00\x78\x00\x65\
\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x41\x75\x64\x69\
\x6f\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\x45\
\x00\x6e\x00\x64\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1e\x00\x53\x00\
\x74\x00\x61\x00\x6e\x00\x64\x00\x61\x00\x72\x00\x64\x00\x73\x00\
\x70\x00\x72\x00\x61\x00\x63\x00\x68\x00\x65\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x10\x44\x65\x66\x61\x75\x6c\x74\x20\x4c\x61\x6e\
\x67\x75\x61\x67\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x47\x00\
\x65\x00\x6e\x00\x65\x00\x72\x00\x61\x00\x6c\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x07\x47\x65\x6e\x65\x72\x61\x6c\x07\x00\x00\x00\
\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\
\x00\x00\x00\x0e\x00\x41\x00\x75\x00\x73\x00\x67\x00\x61\x00\x62\
\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x4f\x75\x74\x70\
\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x50\x00\x6c\x00\x75\
\x00\x67\x00\x69\x00\x6e\x00\x73\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x07\x50\x6c\x75\x67\x69\x6e\x73\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x00\x53\x00\x65\x00\x74\x00\x75\x00\x70\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x53\x65\x74\x75\x70\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x18\x00\x56\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x65\x00\x69\
\x00\x6e\x00\x67\x00\x61\x00\x6e\x00\x67\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\
\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\
\x70\x01\x03\x00\x00\x00\x16\x00\x56\x00\x69\x00\x64\x00\x65\x00\
\x6f\x00\x20\x00\x4d\x00\x69\x00\x78\x00\x65\x00\x72\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x4d\x69\x78\
\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x18\x00\x56\x00\x69\x00\x64\
\x00\x65\x00\x6f\x00\x65\x00\x69\x00\x6e\x00\x67\x00\x61\x00\x6e\
\x00\x67\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\x64\x65\
\x6f\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\
\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x16\x00\x56\
\x00\x69\x00\x64\x00\x65\x00\x6f\x00\x20\x00\x4d\x00\x69\x00\x78\
\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\
\x64\x65\x6f\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x10\
\x00\x26\x00\x44\x00\x61\x00\x72\x00\xfc\x00\x62\x00\x65\x00\x72\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x26\x41\x62\x6f\x75\x74\
\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x0c\x00\x26\x00\x46\x00\x65\x00\x69\x00\x6c\
\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x46\x69\x6c\
\x65\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x0c\x00\x26\x00\x48\x00\x69\x00\x6c\x00\
\x66\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x48\x65\
\x6c\x70\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x10\x00\x26\x00\x53\x00\x70\x00\x72\
\x00\x61\x00\x63\x00\x68\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x09\x26\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\x00\x00\x00\x0b\
\x46\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x12\x00\x26\x00\x56\x00\x65\x00\x72\x00\x6c\x00\x61\x00\x73\x00\
\x73\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x51\x75\
\x69\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x12\x00\x26\x00\x4f\x00\x70\x00\x74\
\x00\x69\x00\x6f\x00\x6e\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x08\x26\x4f\x70\x74\x69\x6f\x6e\x73\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x10\
\x00\x26\x00\x42\x00\x65\x00\x72\x00\x69\x00\x63\x00\x68\x00\x74\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x26\x52\x65\x70\x6f\x72\
\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x00\x45\x00\x6e\x00\x64\x00\x65\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x12\
\x00\x4b\x00\x6f\x00\x6d\x00\x6d\x00\x65\x00\x6e\x00\x74\x00\x61\
\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x43\x6f\x6d\x6d\
\x65\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x0a\x00\x44\x00\x61\x00\x74\x00\x75\x00\
\x6d\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x44\x61\x74\x65\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x10\x00\x45\x00\x72\x00\x65\x00\x69\x00\x67\x00\x6e\x00\
\x69\x00\x73\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\
\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x12\x00\x45\x00\x72\x00\x65\x00\x69\x00\x67\
\x00\x6e\x00\x69\x00\x73\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x2e\x00\x48\x00\x61\
\x00\x75\x00\x70\x00\x74\x00\x66\x00\x65\x00\x6e\x00\x73\x00\x74\
\x00\x65\x00\x72\x00\x20\x00\x61\x00\x75\x00\x73\x00\x62\x00\x6c\
\x00\x65\x00\x6e\x00\x64\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x10\x48\x69\x64\x65\x20\x4d\x61\x69\x6e\x20\x57\x69\
\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x50\x00\x61\x00\x75\x00\x73\
\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x50\x61\x75\x73\
\x65\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x0e\x00\x42\x00\x65\x00\x72\x00\x65\x00\x69\x00\
\x74\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x61\
\x64\x79\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x0c\x00\x52\x00\x65\x00\x6b\x00\x6f\x00\
\x72\x00\x64\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x63\
\x6f\x72\x64\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x0e\x00\x42\x00\x65\x00\x72\x00\x69\x00\
\x63\x00\x68\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\
\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x46\x00\x6f\x00\x72\x00\
\x74\x00\x73\x00\x65\x00\x74\x00\x7a\x00\x65\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x06\x52\x65\x73\x75\x6d\x65\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\
\x5a\x00\x69\x00\x6d\x00\x6d\x00\x65\x00\x72\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x5a\x00\
\x69\x00\x6d\x00\x6d\x00\x65\x00\x72\x00\x3a\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x2a\x00\x48\
\x00\x61\x00\x75\x00\x70\x00\x74\x00\x66\x00\x65\x00\x6e\x00\x73\
\x00\x74\x00\x65\x00\x72\x00\x20\x00\x61\x00\x6e\x00\x7a\x00\x65\
\x00\x69\x00\x67\x00\x65\x00\x6e\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x10\x53\x68\x6f\x77\x20\x4d\x61\x69\x6e\x20\x57\x69\x6e\x64\
\x6f\x77\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x12\x00\x53\x00\x70\x00\x72\x00\x65\x00\x63\
\x00\x68\x00\x65\x00\x72\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x08\x53\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x00\x53\
\x00\x74\x00\x61\x00\x6e\x00\x64\x00\x62\x00\x79\x00\x2d\x00\x4d\
\x00\x6f\x00\x64\x00\x75\x00\x73\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x07\x53\x74\x61\x6e\x64\x62\x79\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\x48\x00\
\x61\x00\x6c\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x53\
\x74\x6f\x70\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x18\x00\x50\x00\x72\x00\xe4\x00\x73\x00\
\x65\x00\x6e\x00\x74\x00\x61\x00\x74\x00\x69\x00\x6f\x00\x6e\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x04\x54\x61\x6c\x6b\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x00\x5a\x00\x65\x00\x69\x00\x74\x00\x3a\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x54\
\x00\x69\x00\x74\x00\x65\x00\x6c\x00\x3a\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x06\x54\x69\x74\x6c\x65\x3a\x07\x00\x00\x00\x09\x52\
\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x20\x00\x26\
\x00\x45\x00\x78\x00\x70\x00\x6f\x00\x72\x00\x74\x00\x20\x00\x6e\
\x00\x61\x00\x63\x00\x68\x00\x20\x00\x43\x00\x53\x00\x56\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0e\x26\x45\x78\x70\x6f\x72\x74\x20\
\x74\x6f\x20\x43\x53\x56\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x20\
\x00\x4b\x00\x6c\x00\x61\x00\x72\x00\x65\x00\x20\x00\x44\x00\x61\
\x00\x74\x00\x65\x00\x6e\x00\x62\x00\x61\x00\x6e\x00\x6b\x00\x3f\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\x6f\
\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\x20\
\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\x3f\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x4c\x00\xf6\x00\x73\
\x00\x63\x00\x68\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x43\x6c\x65\x61\x72\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x1e\x00\
\x4b\x00\x6c\x00\x61\x00\x72\x00\x65\x00\x20\x00\x44\x00\x61\x00\
\x74\x00\x65\x00\x6e\x00\x62\x00\x61\x00\x6e\x00\x6b\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0e\x43\x6c\x65\x61\x72\x20\x44\x61\x74\
\x61\x62\x61\x73\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\
\x45\x00\x6e\x00\x64\x00\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x1a\
\x00\x42\x00\x65\x00\x73\x00\x63\x00\x68\x00\x72\x00\x65\x00\x69\
\x00\x62\x00\x75\x00\x6e\x00\x67\x00\x3a\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0c\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\x3a\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x45\x00\x72\x00\x65\
\x00\x69\x00\x67\x00\x6e\x00\x69\x00\x73\x00\x3a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x0c\x00\x45\x00\x62\x00\x65\x00\x6e\x00\x65\
\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x4c\x65\x76\x65\
\x6c\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x45\x00\x6e\
\x00\x74\x00\x66\x00\x65\x00\x72\x00\x6e\x00\x65\x00\x6e\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\x76\x65\x07\x00\
\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x5a\x00\x69\x00\x6d\x00\x6d\
\x00\x65\x00\x72\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x20\x00\
\x57\x00\xe4\x00\x68\x00\x6c\x00\x65\x00\x6e\x00\x20\x00\x53\x00\
\x69\x00\x65\x00\x20\x00\x44\x00\x61\x00\x74\x00\x65\x00\x69\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x53\x65\x6c\x65\x63\x74\x20\
\x46\x69\x6c\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\x53\
\x00\x70\x00\x72\x00\x65\x00\x63\x00\x68\x00\x65\x00\x72\x00\x3a\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x70\x65\x61\x6b\x65\
\x72\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\
\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x5a\x00\x65\
\x00\x69\x00\x74\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\
\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\
\x54\x00\x69\x00\x74\x00\x65\x00\x6c\x00\x3a\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x06\x54\x69\x74\x6c\x65\x3a\x07\x00\x00\x00\x0f\
\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x20\x00\x26\x00\x45\x00\x78\x00\x70\x00\x6f\x00\
\x72\x00\x74\x00\x20\x00\x6e\x00\x61\x00\x63\x00\x68\x00\x20\x00\
\x43\x00\x53\x00\x56\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\
\x45\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x20\x00\x4b\x00\x6c\x00\x61\x00\x72\x00\x65\x00\
\x20\x00\x44\x00\x61\x00\x74\x00\x65\x00\x6e\x00\x62\x00\x61\x00\
\x6e\x00\x6b\x00\x3f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\
\x72\x65\x20\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\
\x77\x61\x6e\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\
\x65\x20\x44\x42\x3f\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x44\x00\
\x61\x00\x74\x00\x75\x00\x6d\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x04\x44\x61\x74\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x10\x00\x45\x00\
\x72\x00\x65\x00\x69\x00\x67\x00\x6e\x00\x69\x00\x73\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\x00\x00\
\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x10\x00\x53\x00\x70\x00\x72\x00\x65\x00\x63\x00\x68\
\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x50\x72\
\x65\x73\x65\x6e\x74\x65\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\
\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x12\x00\
\x45\x00\x6e\x00\x74\x00\x66\x00\x65\x00\x72\x00\x6e\x00\x65\x00\
\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\x76\
\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x00\x5a\x00\x69\x00\x6d\x00\
\x6d\x00\x65\x00\x72\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x52\
\x6f\x6f\x6d\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x00\x5a\x00\x65\x00\
\x69\x00\x74\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x54\x69\x6d\
\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x00\x54\x00\x69\x00\x74\x00\
\x65\x00\x6c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\x74\
\x6c\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0e\x00\x44\x00\x65\x00\x75\
\x00\x74\x00\x73\x00\x63\x00\x68\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x15\x4c\x61\x6e\x67\x75\x61\x67\x65\x20\x44\x69\x73\x70\x6c\
\x61\x79\x20\x54\x65\x78\x74\x07\x00\x00\x00\x0b\x54\x72\x61\x6e\
\x73\x6c\x61\x74\x69\x6f\x6e\x01\x03\x00\x00\x00\x18\x00\x56\x00\
\x69\x00\x64\x00\x65\x00\x6f\x00\x65\x00\x69\x00\x6e\x00\x67\x00\
\x61\x00\x6e\x00\x67\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x56\
\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x18\x70\
\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x2d\x70\x61\x73\x73\
\x74\x68\x72\x6f\x75\x67\x68\x01\x88\x00\x00\x00\x02\x01\x01\
\x00\x00\x25\xa1\
\x3c\
\xb8\x64\x18\xca\xef\x9c\x95\xcd\x21\x1c\xbf\x60\xa1\xbd\xdd\x42\
\x00\x00\x04\x18\x00\x00\x04\xe0\x00\x00\x17\xb8\x00\x04\xa8\xa5\
\x00\x00\x0b\x84\x00\x04\xa8\xa5\x00\x00\x14\xaa\x00\x05\x76\x94\
\x00\x00\x18\x3c\x00\x05\x96\x5d\x00\x00\x0f\x2e\x00\x05\x96\x5d\
\x00\x00\x15\xb4\x00\x05\xa8\x2b\x00\x00\x10\x36\x00\x05\xab\x60\
\x00\x00\x10\x10\x00\x05\xb0\x35\x00\x00\x15\xe0\x00\x0d\x31\xa9\
\x00\x00\x19\x9f\x00\x18\xf5\x14\x00\x00\x0e\x70\x00\x2a\xd0\x25\
\x00\x00\x09\x82\x00\x2a\xec\x30\x00\x00\x09\xb3\x00\x2b\x8c\x04\
\x00\x00\x0a\x19\x00\x3c\xdc\x74\x00\x00\x05\x97\x00\x48\x85\x72\
\x00\x00\x05\xcb\x00\x4a\x2b\x82\x00\x00\x11\x53\x00\x4a\x36\x95\
\x00\x00\x00\x00\x00\x4a\x36\x95\x00\x00\x06\x01\x00\x4a\x36\x95\
\x00\x00\x0b\x34\x00\x4a\x36\x95\x00\x00\x11\xc0\x00\x4c\xcc\x54\
\x00\x00\x0b\xaa\x00\x4c\xcc\x54\x00\x00\x14\xd4\x00\x4f\xb2\x7e\
\x00\x00\x0c\xa9\x00\x54\x6c\x54\x00\x00\x17\xe1\x00\x56\x8c\x95\
\x00\x00\x0d\x8f\x00\x59\x66\x0a\x00\x00\x0f\x56\x00\x59\x66\x0a\
\x00\x00\x13\x0f\x00\x59\xcb\xc0\x00\x00\x08\x4f\x00\x5b\x03\x8a\
\x00\x00\x10\x5c\x00\x5b\x03\x8a\x00\x00\x13\xab\x00\x5b\x0b\x25\
\x00\x00\x16\x0a\x00\x89\x67\x25\x00\x00\x06\x2c\x00\xb2\x0d\x89\
\x00\x00\x04\xb7\x00\xcd\x51\x76\x00\x00\x21\x0d\x00\xe1\x80\xe2\
\x00\x00\x12\x53\x00\xff\x11\x49\x00\x00\x04\x75\x01\x04\x45\x0f\
\x00\x00\x0c\xfe\x01\x05\x6e\xe5\x00\x00\x1c\x4e\x01\x08\xec\xc4\
\x00\x00\x05\x2b\x01\x14\xad\x04\x00\x00\x08\x7a\x01\x14\xad\x04\
\x00\x00\x1c\x0e\x01\x1c\xb5\xc2\x00\x00\x05\x60\x01\x30\xf4\x02\
\x00\x00\x08\xaf\x01\x48\xbf\xaf\x00\x00\x0c\xd2\x01\x5c\xff\xef\
\x00\x00\x0d\x63\x01\x63\x63\x85\x00\x00\x17\x80\x01\x63\x63\x85\
\x00\x00\x1b\x5d\x01\x70\xaa\xa0\x00\x00\x16\xde\x02\x2d\x09\x75\
\x00\x00\x08\x19\x02\x43\x01\x41\x00\x00\x1a\x43\x02\x89\xdc\xc7\
\x00\x00\x0c\x71\x02\xa7\x96\xc4\x00\x00\x09\x50\x02\xab\x4c\x79\
\x00\x00\x1d\xc1\x02\xf0\x16\xfe\x00\x00\x02\xe0\x03\x08\xa7\x7e\
\x00\x00\x01\x68\x04\x18\xa4\x4f\x00\x00\x10\xf5\x04\x18\xa4\x4f\
\x00\x00\x14\x4e\x04\x3b\xa8\x09\x00\x00\x0a\x86\x04\x42\x63\x15\
\x00\x00\x06\x66\x04\x85\xec\xc9\x00\x00\x1e\x51\x04\xa2\xfc\x54\
\x00\x00\x18\x67\x04\xcc\xc5\x7a\x00\x00\x0b\xd1\x04\xcc\xc5\x7a\
\x00\x00\x12\x23\x04\xd6\x80\x8a\x00\x00\x11\xed\x05\x0a\xfe\xd3\
\x00\x00\x0d\x36\x05\x2c\xcb\xfa\x00\x00\x12\xad\x05\x2f\x69\xf5\
\x00\x00\x18\x98\x05\x6c\xb7\xc4\x00\x00\x07\x57\x05\x8b\x7b\xbe\
\x00\x00\x0d\xb6\x05\x8b\xa6\x84\x00\x00\x0d\xe4\x05\x8c\x46\xc5\
\x00\x00\x12\xe1\x05\x8c\x46\xc5\x00\x00\x15\x88\x05\x8c\x76\x94\
\x00\x00\x0e\xa6\x05\x8c\xac\x35\x00\x00\x0f\x06\x05\x9a\x8b\xbe\
\x00\x00\x17\x4f\x05\x9c\x42\xee\x00\x00\x0b\xfb\x05\x9c\x9c\xc2\
\x00\x00\x19\x02\x05\xa3\x86\xb5\x00\x00\x1a\xfa\x05\xa6\xc8\x95\
\x00\x00\x16\x72\x05\xa6\xc8\x95\x00\x00\x1b\x2d\x05\xb0\xb2\x8a\
\x00\x00\x10\x85\x05\xb0\xb2\x8a\x00\x00\x13\xda\x05\xc3\xaf\xce\
\x00\x00\x0a\x4a\x05\xd5\x48\x95\x00\x00\x1a\xc8\x05\xd5\xc4\xe5\
\x00\x00\x1d\x57\x06\x1e\x6d\xa9\x00\x00\x1a\x86\x06\x6d\x6f\xb1\
\x00\x00\x1f\x3f\x06\x7b\x08\xe3\x00\x00\x0a\xcd\x06\x8b\xac\xde\
\x00\x00\x1d\x91\x06\x8d\x3a\x43\x00\x00\x07\x24\x06\x8f\x63\x05\
\x00\x00\x00\x29\x06\xb8\x19\xfa\x00\x00\x0f\xb9\x06\xb8\x19\xfa\
\x00\x00\x13\x77\x06\xc8\x92\x91\x00\x00\x19\x33\x06\xc8\x92\x92\
\x00\x00\x19\x69\x07\x3b\xe0\x03\x00\x00\x07\x83\x07\x8c\xcf\x97\
\x00\x00\x1c\xd7\x08\x3c\xc5\x25\x00\x00\x1b\xd2\x08\x4e\x9c\xf5\
\x00\x00\x09\xe4\x08\x5d\xf8\xa2\x00\x00\x14\xff\x08\xaa\xe3\xe4\
\x00\x00\x18\x0d\x08\xd1\xeb\x84\x00\x00\x19\xda\x08\xe3\x4b\xdc\
\x00\x00\x0e\xd2\x08\xee\x26\x24\x00\x00\x16\x35\x09\x5c\xef\xe5\
\x00\x00\x1d\x0a\x0a\x1f\xc8\x95\x00\x00\x11\x84\x0a\x3d\x0e\x95\
\x00\x00\x13\x40\x0a\x64\x3c\x14\x00\x00\x0b\x5b\x0a\x65\x4b\xe4\
\x00\x00\x18\xd2\x0a\x68\xf8\xf7\x00\x00\x07\xea\x0a\x68\xf8\xf7\
\x00\x00\x0e\x0c\x0a\xa8\x4a\xc9\x00\x00\x0f\xe7\x0b\x0a\x04\x95\
\x00\x00\x1c\x8e\x0b\x66\x23\x46\x00\x00\x10\xaf\x0b\x66\x23\x46\
\x00\x00\x14\x0a\x0b\x8c\x76\xb4\x00\x00\x0a\xff\x0b\xba\x83\x5b\
\x00\x00\x16\xa9\x0c\x3b\x98\x64\x00\x00\x08\xe6\x0c\x47\xc1\x62\
\x00\x00\x09\x1a\x0c\x89\x28\x2e\x00\x00\x20\x6d\x0c\x8a\xac\x07\
\x00\x00\x0f\x81\x0c\x9c\x0d\x42\x00\x00\x15\x57\x0c\xc9\xa0\x0e\
\x00\x00\x05\x00\x0c\xfb\x29\xd4\x00\x00\x01\x24\x0d\x31\xb8\x6e\
\x00\x00\x17\x17\x0d\x33\xd9\xec\x00\x00\x06\xa4\x0d\xc4\xc8\x3c\
\x00\x00\x06\xf3\x0e\x39\x74\x39\x00\x00\x07\xb0\x0e\x74\x68\x5e\
\x00\x00\x0e\x37\x0e\xb5\xff\x84\x00\x00\x1b\x90\x69\x00\x00\x21\
\x6f\x03\x00\x00\x00\x04\x95\xdc\x95\x89\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0b\x41\x62\
\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x92\x00\
\x43\x00\x6f\x00\x70\x00\x79\x00\x72\x00\x69\x00\x67\x00\x68\x00\
\x74\x00\x20\x00\x28\x00\x43\x00\x29\x00\x20\x00\x32\x00\x30\x00\
\x31\x00\x31\x00\x2d\x00\x32\x00\x30\x00\x31\x00\x33\x00\x20\x00\
\x54\x00\x68\x00\x65\x00\x20\x00\x46\x00\x72\x00\x65\x00\x65\x00\
\x20\x00\x61\x00\x6e\x00\x64\x00\x20\x00\x4f\x00\x70\x00\x65\x00\
\x6e\x00\x20\x00\x53\x00\x6f\x00\x75\x00\x72\x00\x63\x00\x65\x00\
\x20\x00\x53\x00\x6f\x00\x66\x00\x74\x00\x77\x00\x61\x00\x72\x00\
\x65\x00\x20\x00\x4c\x00\x65\x00\x61\x00\x72\x00\x6e\x00\x69\x00\
\x6e\x00\x67\x00\x20\x00\x43\x00\x65\x00\x6e\x00\x74\x00\x72\x00\
\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x49\x43\x6f\x70\x79\x72\
\x69\x67\x68\x74\x20\x28\x43\x29\x20\x32\x30\x31\x31\x2d\x32\x30\
\x31\x33\x20\x54\x68\x65\x20\x46\x72\x65\x65\x20\x61\x6e\x64\x20\
\x4f\x70\x65\x6e\x20\x53\x6f\x75\x72\x63\x65\x20\x53\x6f\x66\x74\
\x77\x61\x72\x65\x20\x4c\x65\x61\x72\x6e\x69\x6e\x67\x20\x43\x65\
\x6e\x74\x72\x65\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\
\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x16\x00\x46\x00\x72\x00\x65\
\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x95\xdc\x65\xbc\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x41\x62\x6f\x75\x74\x07\x00\x00\x00\x0b\x41\x62\x6f\
\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x92\x00\x46\
\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x66\x2f\
\x4e\x00\x6b\x3e\x89\x96\x98\x3b\x93\x04\x88\xfd\x5d\xe5\x51\x77\
\xff\x0c\x80\xfd\x59\x20\x63\x55\x63\x49\x4e\x26\x8a\x18\x93\x04\
\x6f\x14\x79\x3a\x30\x02\x5b\x83\x80\xfd\x59\x20\x63\x55\x63\x49\
\x4f\x86\x81\xea\x00\x55\x00\x53\x00\x42\xff\x0c\x00\x46\x00\x69\
\x00\x72\x00\x65\x00\x57\x00\x69\x00\x72\x00\x65\xff\x0c\x67\x2c\
\x57\x30\x68\x4c\x97\x62\x76\x84\x89\x96\x98\x3b\x6e\x90\xff\x0c\
\x4e\x26\x82\x07\x97\xf3\x98\x3b\x8f\x38\x51\x65\x6d\xf7\x54\x08\
\xff\x0c\x75\x1f\x62\x10\x89\x96\x98\x3b\x8a\x18\x93\x04\x30\x02\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\xc6\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x69\x73\x20\x61\x20\x76\x69\x64\x65\x6f\x20\x63\x61\
\x70\x74\x75\x72\x65\x20\x75\x74\x69\x6c\x69\x74\x79\x20\x63\x61\
\x70\x61\x62\x6c\x65\x20\x6f\x66\x20\x63\x61\x70\x74\x75\x72\x69\
\x6e\x67\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\x6e\x73\
\x2e\x20\x49\x74\x20\x63\x61\x70\x74\x75\x72\x65\x73\x20\x76\x69\
\x64\x65\x6f\x20\x73\x6f\x75\x72\x63\x65\x73\x20\x73\x75\x63\x68\
\x20\x61\x73\x20\x75\x73\x62\x2c\x20\x66\x69\x72\x65\x77\x69\x72\
\x65\x2c\x20\x6f\x72\x20\x6c\x6f\x63\x61\x6c\x20\x64\x65\x73\x6b\
\x74\x6f\x70\x20\x61\x6c\x6f\x6e\x67\x20\x77\x69\x74\x68\x20\x61\
\x75\x64\x69\x6f\x20\x61\x6e\x64\x20\x6d\x69\x78\x65\x73\x20\x74\
\x68\x65\x6d\x20\x74\x6f\x67\x65\x74\x68\x65\x72\x20\x74\x6f\x20\
\x70\x72\x6f\x64\x75\x63\x65\x20\x61\x20\x76\x69\x64\x65\x6f\x2e\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x00\x9a\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\
\x00\x65\x00\x65\x00\x72\x63\x88\x6b\x0a\x65\xbc\x90\x1a\x75\x28\
\x51\x6c\x51\x71\x63\x88\x6b\x0a\x00\x47\x00\x50\x00\x4c\x00\x20\
\x00\x76\x00\x33\x30\x02\x6b\x64\x8e\xdf\x4e\xf6\x4e\x0d\x63\xd0\
\x4f\x9b\x4e\xfb\x4f\x55\x66\x0e\x78\xba\x76\x84\x62\x16\x96\xb1\
\x54\x2b\x76\x84\x64\xd4\x4f\xdd\x62\x16\x4f\xdd\x8b\x49\x30\x02\
\x4f\x5c\x80\x05\x57\x28\x4e\xfb\x4f\x55\x60\xc5\x6c\xc1\x4e\x0b\
\x57\x47\x4e\x0d\x5c\x31\x56\xe0\x75\x28\x62\x36\x4f\x7f\x75\x28\
\x67\x2c\x8e\xdf\x4e\xf6\x80\x0c\x76\x7c\x75\x1f\x76\x84\x4e\xfb\
\x4f\x55\x64\x0d\x59\x31\x62\x7f\x64\xd4\x8c\xac\x4e\xfb\x30\x02\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\xdb\x46\x72\x65\x65\x73\x65\
\x65\x72\x20\x69\x73\x20\x6c\x69\x63\x65\x6e\x73\x65\x64\x20\x75\
\x6e\x64\x65\x72\x20\x74\x68\x65\x20\x47\x50\x4c\x20\x76\x65\x72\
\x73\x69\x6f\x6e\x20\x33\x2e\x20\x54\x68\x69\x73\x20\x73\x6f\x66\
\x74\x77\x61\x72\x65\x20\x69\x73\x20\x70\x72\x6f\x76\x69\x64\x65\
\x64\x20\x27\x61\x73\x2d\x69\x73\x27\x2c\x77\x69\x74\x68\x6f\x75\
\x74\x20\x61\x6e\x79\x20\x65\x78\x70\x72\x65\x73\x73\x20\x6f\x72\
\x20\x69\x6d\x70\x6c\x69\x65\x64\x20\x77\x61\x72\x72\x61\x6e\x74\
\x79\x2e\x20\x49\x6e\x20\x6e\x6f\x20\x65\x76\x65\x6e\x74\x20\x77\
\x69\x6c\x6c\x20\x74\x68\x65\x20\x61\x75\x74\x68\x6f\x72\x73\x20\
\x62\x65\x20\x68\x65\x6c\x64\x20\x6c\x69\x61\x62\x6c\x65\x20\x66\
\x6f\x72\x20\x61\x6e\x79\x20\x64\x61\x6d\x61\x67\x65\x73\x20\x61\
\x72\x69\x73\x69\x6e\x67\x20\x66\x72\x6f\x6d\x20\x74\x68\x65\x20\
\x75\x73\x65\x20\x6f\x66\x20\x74\x68\x69\x73\x20\x73\x6f\x66\x74\
\x77\x61\x72\x65\x2e\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\
\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x0c\x80\x33\x6a\x5f\x57\
\x16\x5f\x62\x8a\x2d\x8a\x08\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x16\x48\x65\x61\x64\x70\x68\x6f\x6e\x65\x73\x20\x67\x72\x61\x70\
\x68\x69\x63\x73\x20\x62\x79\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\
\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\x10\x93\x04\x88\
\xfd\x63\x09\x92\x15\x57\x16\x5f\x62\x8a\x2d\x8a\x08\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x19\x52\x65\x63\x6f\x72\x64\x20\x62\x75\
\x74\x74\x6f\x6e\x20\x67\x72\x61\x70\x68\x69\x63\x73\x20\x62\x79\
\x07\x00\x00\x00\x0b\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\
\x01\x03\x00\x00\x00\x04\x72\x48\x67\x2c\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x07\x56\x65\x72\x73\x69\x6f\x6e\x07\x00\x00\x00\x0b\
\x41\x62\x6f\x75\x74\x44\x69\x61\x6c\x6f\x67\x01\x03\x00\x00\x00\
\x08\x97\xf3\x98\x3b\x8f\x38\x51\x65\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0b\x41\x75\x64\x69\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x0a\x97\xf3\x98\x3b\x6d\xf7\x98\x3b\x56\x68\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x41\x75\x64\x69\x6f\x20\
\x4d\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x97\xf3\x98\
\x3b\x8f\x38\x51\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x41\
\x75\x64\x69\x6f\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\
\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\
\x0a\x97\xf3\x98\x3b\x6d\xf7\x98\x3b\x56\x68\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0a\x41\x75\x64\x69\x6f\x4d\x69\x78\x65\x72\x07\
\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\
\x70\x01\x03\x00\x00\x00\x04\x95\xdc\x95\x89\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0d\x43\
\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\
\x00\x08\x9e\xd8\x8a\x8d\x8a\x9e\x8a\x00\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x10\x44\x65\x66\x61\x75\x6c\x74\x20\x4c\x61\x6e\x67\
\x75\x61\x67\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x55\x5f\x75\x28\
\x81\xea\x52\xd5\x96\xb1\x85\xcf\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x10\x45\x6e\x61\x62\x6c\x65\x20\x41\x75\x74\x6f\x2d\x48\x69\
\x64\x65\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x1a\x00\x46\x00\x72\x00\x65\
\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x91\x4d\x7f\x6e\
\x5d\xe5\x51\x77\x08\x00\x00\x00\x00\x06\x00\x00\x00\x13\x46\x72\
\x65\x65\x73\x65\x65\x72\x20\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\
\x41\x70\x70\x01\x03\x00\x00\x00\x08\x4e\x00\x82\x2c\x8a\x2d\x5b\
\x9a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x47\x65\x6e\x65\x72\
\x61\x6c\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\
\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x04\x51\x76\x4e\xd6\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0d\x4d\x69\x73\x63\x65\x6c\x6c\x61\
\x6e\x65\x6f\x75\x73\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\
\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x04\x8f\x38\x51\
\xfa\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x4f\x75\x74\x70\x75\
\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\
\x41\x70\x70\x01\x03\x00\x00\x00\x04\x63\xd2\x4e\xf6\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x07\x50\x6c\x75\x67\x69\x6e\x73\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x08\x4f\xdd\x5b\x58\x76\xee\x93\x04\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x10\x52\x65\x63\x6f\x72\x64\x20\x44\
\x69\x72\x65\x63\x74\x6f\x72\x79\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x04\
\x8a\x18\x93\x04\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\
\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x4f\
\xdd\x5b\x58\x91\x4d\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x0c\x53\x61\x76\x65\x20\x50\x72\x6f\x66\x69\x6c\x65\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x04\x8a\x2d\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x05\x53\x65\x74\x75\x70\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\
\x89\x96\x98\x3b\x8f\x38\x51\x65\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\x74\x07\x00\x00\
\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\
\x03\x00\x00\x00\x0a\x89\x96\x98\x3b\x6d\xf7\x98\x3b\x56\x68\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x4d\
\x69\x78\x65\x72\x07\x00\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\
\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x08\x89\x96\x98\x3b\
\x8f\x38\x51\x65\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0a\x56\x69\
\x64\x65\x6f\x49\x6e\x70\x75\x74\x07\x00\x00\x00\x0d\x43\x6f\x6e\
\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\x01\x03\x00\x00\x00\x0a\
\x89\x96\x98\x3b\x6d\xf7\x98\x3b\x56\x68\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0a\x56\x69\x64\x65\x6f\x4d\x69\x78\x65\x72\x07\x00\
\x00\x00\x0d\x43\x6f\x6e\x66\x69\x67\x54\x6f\x6f\x6c\x41\x70\x70\
\x01\x03\x00\x00\x00\x0c\x95\xdc\x65\xbc\x00\x28\x00\x26\x00\x41\
\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x26\x41\x62\x6f\
\x75\x74\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\x41\
\x70\x70\x01\x03\x00\x00\x00\x0c\x65\x87\x4e\xf6\x00\x28\x00\x26\
\x00\x46\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\x46\
\x69\x6c\x65\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x5e\x6b\x52\xa9\x00\x28\x00\
\x26\x00\x48\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x26\
\x48\x65\x6c\x70\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\x65\x65\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x8a\x9e\x8a\x00\x00\x28\
\x00\x26\x00\x4c\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\
\x26\x4c\x61\x6e\x67\x75\x61\x67\x65\x07\x00\x00\x00\x0b\x46\x72\
\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0c\x90\
\x00\x51\xfa\x00\x28\x00\x26\x00\x51\x00\x29\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x26\x51\x75\x69\x74\x07\x00\x00\x00\x0b\x46\
\x72\x65\x65\x73\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\
\x57\x28\x7d\xda\x65\x87\x6a\x94\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x14\x4f\x6e\x6c\x69\x6e\x65\x20\x44\x6f\x63\x75\x6d\x65\x6e\
\x74\x61\x74\x69\x6f\x6e\x07\x00\x00\x00\x0b\x46\x72\x65\x65\x73\
\x65\x65\x72\x41\x70\x70\x01\x03\x00\x00\x00\x14\x62\x53\x95\x8b\
\x89\x96\x98\x3b\x76\xee\x93\x04\x00\x28\x00\x26\x00\x4f\x00\x29\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x15\x26\x4f\x70\x65\x6e\x20\
\x56\x69\x64\x65\x6f\x20\x44\x69\x72\x65\x63\x74\x6f\x72\x79\x07\
\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\
\x00\x00\x0c\x90\x78\x98\x05\x00\x28\x00\x26\x00\x4f\x00\x29\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x08\x26\x4f\x70\x74\x69\x6f\x6e\
\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x10\x65\x45\x96\x9c\x58\x31\x54\x4a\x00\x28\x00\
\x26\x00\x52\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x26\
\x52\x65\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x95\xdc\x95\x89\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x04\x50\x99\x8a\x3b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x43\
\x6f\x6d\x6d\x65\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x65\xe5\x67\x1f\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x04\x44\x61\x74\x65\x07\x00\x00\x00\
\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\
\x67\x03\x8b\x70\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\
\x65\x6e\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x06\x67\x03\x8b\x70\x00\x3a\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\x00\x00\
\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\
\x26\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\
\x72\x00\x20\x00\x2d\x00\x20\x4f\xbf\x65\x1c\x5f\x0f\x6f\x14\x79\
\x3a\x93\x04\x88\xfd\x7a\xd9\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x32\x46\x72\x65\x65\x73\x65\x65\x72\x20\x2d\x20\x70\x6f\x72\x74\
\x61\x62\x6c\x65\x20\x70\x72\x65\x73\x65\x6e\x74\x61\x74\x69\x6f\
\x6e\x20\x72\x65\x63\x6f\x72\x64\x69\x6e\x67\x20\x73\x74\x61\x74\
\x69\x6f\x6e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x0a\x96\xb1\x85\xcf\x4e\x3b\x7a\x97\x53\
\xe3\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x48\x69\x64\x65\x20\
\x4d\x61\x69\x6e\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x95\
\x92\x7f\x6e\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x49\
\x64\x6c\x65\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x06\x71\x21\x97\xf3\x98\x3b\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x08\x4e\x6f\x20\x41\x75\x64\x69\x6f\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x0c\x71\x21\x97\xf3\x98\x3b\x00\x2f\x89\x96\x98\x3b\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x4e\x6f\x20\x41\x75\x64\
\x69\x6f\x2f\x56\x69\x64\x65\x6f\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x71\x21\x65\x45\
\x96\x9c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x4e\x6f\x20\x49\
\x73\x73\x75\x65\x73\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\
\x41\x70\x70\x01\x03\x00\x00\x00\x06\x71\x21\x89\x96\x98\x3b\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x08\x4e\x6f\x20\x56\x69\x64\x65\
\x6f\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x04\x66\xab\x50\x5c\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x05\x50\x61\x75\x73\x65\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x6e\x96\x50\x99\
\x5c\x31\x7d\xd2\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\
\x52\x65\x61\x64\x79\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\
\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x8a\x18\x93\x04\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x63\x6f\x72\x64\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x04\x8a\x18\x93\x04\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x8a\x18\x93\
\x04\x66\xab\x50\x5c\x00\x2e\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x11\x52\x65\x63\x6f\x72\x64\x69\x6e\x67\x20\x50\x61\x75\x73\x65\
\x64\x2e\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x08\x65\x36\x52\x30\x63\x88\x6b\x0a\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x10\x52\x65\x6c\x65\x61\x73\x65\x20\
\x52\x65\x63\x65\x69\x76\x65\x64\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x65\x45\x96\x9c\
\x58\x31\x54\x4a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\
\x70\x6f\x72\x74\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\
\x70\x70\x01\x03\x00\x00\x00\x08\x58\x31\x54\x4a\x5d\xe5\x51\x77\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x52\x65\x70\x6f\x72\x74\
\x69\x6e\x67\x20\x54\x6f\x6f\x6c\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x7e\x7c\x7e\x8c\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x73\x75\x6d\x65\
\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\
\x00\x00\x00\x06\x67\x03\x8b\x70\x5b\xa4\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x67\x03\x8b\x70\
\x5b\xa4\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x52\x6f\
\x6f\x6d\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\
\x70\x01\x03\x00\x00\x00\x0a\x98\x6f\x79\x3a\x4e\x3b\x7a\x97\x53\
\xe3\x08\x00\x00\x00\x00\x06\x00\x00\x00\x10\x53\x68\x6f\x77\x20\
\x4d\x61\x69\x6e\x20\x57\x69\x6e\x64\x6f\x77\x07\x00\x00\x00\x09\
\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x08\x6f\
\x14\x8b\x1b\x80\x05\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x08\x53\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x09\x52\x65\
\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x5f\x85\x6a\
\x5f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x53\x74\x61\x6e\x64\
\x62\x79\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\
\x01\x03\x00\x00\x00\x04\x50\x5c\x6b\x62\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x04\x53\x74\x6f\x70\x07\x00\x00\x00\x09\x52\x65\x63\
\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x04\x6f\x14\x8b\x1b\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x54\x61\x6c\x6b\x07\x00\
\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\x03\x00\x00\
\x00\x06\x66\x42\x95\x93\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\
\x72\x64\x41\x70\x70\x01\x03\x00\x00\x00\x06\x6a\x19\x98\x4c\x00\
\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x54\x69\x74\x6c\x65\
\x3a\x07\x00\x00\x00\x09\x52\x65\x63\x6f\x72\x64\x41\x70\x70\x01\
\x03\x00\x00\x00\x14\x8f\x38\x51\xfa\x52\x30\x00\x43\x00\x53\x00\
\x56\x00\x28\x00\x26\x00\x45\x00\x29\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0e\x26\x45\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\
\x56\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x14\x78\xba\x5b\xe6\x89\
\x81\x6e\x05\x96\x64\x65\x78\x64\xda\x5e\xab\x9e\xbc\x00\x3f\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x26\x41\x72\x65\x20\x79\x6f\x75\
\x20\x73\x75\x72\x65\x20\x79\x6f\x75\x20\x77\x61\x6e\x74\x20\x74\
\x6f\x20\x63\x6c\x65\x61\x72\x20\x74\x68\x65\x20\x44\x42\x3f\x07\
\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x08\x6e\x05\x96\x64\x51\x68\x90\
\xe8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x43\x6c\x65\x61\x72\
\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x0a\x6e\x05\x96\x64\x65\x78\
\x64\xda\x5e\xab\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x43\x6c\
\x65\x61\x72\x20\x44\x61\x74\x61\x62\x61\x73\x65\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x04\x95\xdc\x95\x89\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x05\x43\x6c\x6f\x73\x65\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x06\x63\xcf\x8f\xf0\x00\x3a\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x0c\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\x3a\x07\
\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x06\x67\x03\x8b\x70\x00\x3a\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x06\x45\x76\x65\x6e\x74\x3a\x07\
\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\
\x41\x70\x70\x01\x03\x00\x00\x00\x20\x00\x46\x00\x72\x00\x65\x00\
\x65\x00\x73\x00\x65\x00\x65\x00\x72\x00\x20\x65\x45\x96\x9c\x58\
\x31\x54\x4a\x7d\xe8\x8f\x2f\x56\x68\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x16\x46\x72\x65\x65\x73\x65\x65\x72\x20\x52\x65\x70\x6f\
\x72\x74\x20\x45\x64\x69\x74\x6f\x72\x07\x00\x00\x00\x0f\x52\x65\
\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\
\x00\x00\x0a\x6f\x14\x8b\x1b\x7d\x1a\x52\x25\x00\x3a\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x4c\x65\x76\x65\x6c\x3a\x07\x00\x00\
\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\
\x70\x01\x03\x00\x00\x00\x04\x79\xfb\x96\x64\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\x76\x65\x07\x00\x00\x00\x0f\
\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x08\x67\x03\x8b\x70\x5b\xa4\x00\x3a\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x05\x52\x6f\x6f\x6d\x3a\x07\x00\x00\x00\
\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x08\x90\x78\x64\xc7\x65\x87\x4e\xf6\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0b\x53\x65\x6c\x65\x63\x74\x20\x46\
\x69\x6c\x65\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\x74\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x6f\x14\x8b\
\x1b\x80\x05\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\
\x70\x65\x61\x6b\x65\x72\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\
\x72\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\
\x06\x66\x42\x95\x93\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x05\x54\x69\x6d\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\
\x6a\x19\x98\x4c\x00\x3a\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\
\x54\x69\x74\x6c\x65\x3a\x07\x00\x00\x00\x0f\x52\x65\x70\x6f\x72\
\x74\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x14\
\x8f\x38\x51\xfa\x52\x30\x00\x43\x00\x53\x00\x56\x00\x28\x00\x26\
\x00\x45\x00\x29\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0e\x26\x45\
\x78\x70\x6f\x72\x74\x20\x74\x6f\x20\x43\x53\x56\x07\x00\x00\x00\
\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\
\x00\x00\x00\x14\x78\xba\x5b\xe6\x89\x81\x6e\x05\x96\x64\x65\x78\
\x64\xda\x5e\xab\x9e\xbc\x00\x3f\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x26\x41\x72\x65\x20\x79\x6f\x75\x20\x73\x75\x72\x65\x20\x79\
\x6f\x75\x20\x77\x61\x6e\x74\x20\x74\x6f\x20\x63\x6c\x65\x61\x72\
\x20\x74\x68\x65\x20\x44\x42\x3f\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\
\x65\xe5\x67\x1f\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x44\x61\
\x74\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\x67\x03\x8b\x70\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x05\x45\x76\x65\x6e\x74\x07\x00\x00\
\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\
\x03\x00\x00\x00\x22\x00\x46\x00\x72\x00\x65\x00\x65\x00\x73\x00\
\x65\x00\x65\x00\x72\x00\x20\x67\x03\x8b\x70\x6f\x14\x8b\x1b\x52\
\x17\x88\x68\x7d\xe8\x8f\x2f\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x14\x46\x72\x65\x65\x73\x65\x65\x72\x20\x54\x61\x6c\x6b\x20\x45\
\x64\x69\x74\x6f\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\
\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\x6f\x14\x8b\
\x1b\x80\x05\x08\x00\x00\x00\x00\x06\x00\x00\x00\x09\x50\x72\x65\
\x73\x65\x6e\x74\x65\x72\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\
\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\x52\x2a\
\x96\x64\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x52\x65\x6d\x6f\
\x76\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\
\x72\x41\x70\x70\x01\x03\x00\x00\x00\x06\x67\x03\x8b\x70\x5b\xa4\
\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\x52\x6f\x6f\x6d\x07\x00\
\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\
\x01\x03\x00\x00\x00\x04\x66\x42\x95\x93\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x04\x54\x69\x6d\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\
\x6b\x45\x64\x69\x74\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x04\
\x6a\x19\x98\x4c\x08\x00\x00\x00\x00\x06\x00\x00\x00\x05\x54\x69\
\x74\x6c\x65\x07\x00\x00\x00\x0d\x54\x61\x6c\x6b\x45\x64\x69\x74\
\x6f\x72\x41\x70\x70\x01\x03\x00\x00\x00\x08\x7e\x41\x9a\xd4\x4e\
\x2d\x65\x87\x08\x00\x00\x00\x00\x06\x00\x00\x00\x15\x4c\x61\x6e\
\x67\x75\x61\x67\x65\x20\x44\x69\x73\x70\x6c\x61\x79\x20\x54\x65\
\x78\x74\x07\x00\x00\x00\x0b\x54\x72\x61\x6e\x73\x6c\x61\x74\x69\
\x6f\x6e\x01\x03\x00\x00\x00\x04\x97\xf3\x6e\x90\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x06\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\
\x18\x70\x6c\x75\x67\x69\x6e\x2d\x61\x75\x64\x69\x6f\x2d\x70\x61\
\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\x00\x00\x00\x04\x53\
\xcd\x99\x4b\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x46\x65\x65\
\x64\x62\x61\x63\x6b\x07\x00\x00\x00\x14\x70\x6c\x75\x67\x69\x6e\
\x2d\x61\x75\x64\x69\x6f\x66\x65\x65\x64\x62\x61\x63\x6b\x01\x03\
\x00\x00\x00\x08\x8a\x18\x93\x04\x68\x4c\x97\x62\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0e\x52\x65\x63\x6f\x72\x64\x20\x44\x65\x73\
\x6b\x74\x6f\x70\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\
\x64\x65\x73\x6b\x74\x6f\x70\x01\x03\x00\x00\x00\x08\x8a\x18\x93\
\x04\x5c\x40\x90\xe8\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0d\x52\
\x65\x63\x6f\x72\x64\x20\x52\x65\x67\x69\x6f\x6e\x07\x00\x00\x00\
\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\x74\x6f\x70\x01\
\x03\x00\x00\x00\x08\x8a\x18\x93\x04\x5c\x4f\x5e\x55\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x06\x53\x63\x72\x65\x65\x6e\x07\x00\x00\
\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x64\x65\x73\x6b\x74\x6f\x70\
\x01\x03\x00\x00\x00\x08\x89\x96\x98\x3b\x8a\x2d\x50\x99\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0c\x56\x69\x64\x65\x6f\x20\x44\x65\
\x76\x69\x63\x65\x07\x00\x00\x00\x0f\x70\x6c\x75\x67\x69\x6e\x2d\
\x66\x69\x72\x65\x77\x69\x72\x65\x01\x03\x00\x00\x00\x04\x00\x49\
\x00\x50\x08\x00\x00\x00\x00\x06\x00\x00\x00\x02\x49\x50\x07\x00\
\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\
\x74\x01\x03\x00\x00\x00\x04\x63\x9b\x8f\x09\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x05\x4d\x6f\x75\x6e\x74\x07\x00\x00\x00\x0e\x70\
\x6c\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\
\x00\x00\x04\x5b\xc6\x78\xbc\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x08\x50\x61\x73\x73\x77\x6f\x72\x64\x07\x00\x00\x00\x0e\x70\x6c\
\x75\x67\x69\x6e\x2d\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\
\x00\x04\x7a\xef\x53\xe3\x08\x00\x00\x00\x00\x06\x00\x00\x00\x04\
\x50\x6f\x72\x74\x07\x00\x00\x00\x0e\x70\x6c\x75\x67\x69\x6e\x2d\
\x69\x63\x65\x63\x61\x73\x74\x01\x03\x00\x00\x00\x06\x5b\xa2\x62\
\x36\x7a\xef\x08\x00\x00\x00\x00\x06\x00\x00\x00\x06\x43\x6c\x69\
\x65\x6e\x74\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\
\x61\x63\x6b\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x0a\x5b\xa2\
\x62\x36\x7a\xef\x54\x0d\x7a\x31\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x0b\x43\x6c\x69\x65\x6e\x74\x20\x4e\x61\x6d\x65\x07\x00\x00\
\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\
\x69\x6f\x01\x03\x00\x00\x00\x04\x63\xa5\x90\x1a\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x07\x43\x6f\x6e\x6e\x65\x63\x74\x07\x00\x00\
\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\x64\
\x69\x6f\x01\x03\x00\x00\x00\x06\x67\x0d\x52\xd9\x56\x68\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x06\x53\x65\x72\x76\x65\x72\x07\x00\
\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x6a\x61\x63\x6b\x61\x75\
\x64\x69\x6f\x01\x03\x00\x00\x00\x08\x97\xf3\x6e\x90\x00\x20\x00\
\x31\x08\x00\x00\x00\x00\x06\x00\x00\x00\x08\x53\x6f\x75\x72\x63\
\x65\x20\x31\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6d\
\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\x03\x00\x00\x00\x08\x97\
\xf3\x6e\x90\x00\x20\x00\x32\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x08\x53\x6f\x75\x72\x63\x65\x20\x32\x07\x00\x00\x00\x11\x70\x6c\
\x75\x67\x69\x6e\x2d\x6d\x75\x6c\x74\x69\x61\x75\x64\x69\x6f\x01\
\x03\x00\x00\x00\x08\x97\xf3\x98\x3b\x8c\xea\x91\xcf\x08\x00\x00\
\x00\x00\x06\x00\x00\x00\x0d\x41\x75\x64\x69\x6f\x20\x51\x75\x61\
\x6c\x69\x74\x79\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\
\x6f\x67\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x18\
\x75\x1f\x62\x10\x00\x58\x00\x4d\x00\x4c\x68\x3c\x5f\x0f\x99\xac\
\x72\x79\x51\x43\x65\x78\x64\xda\x08\x00\x00\x00\x00\x06\x00\x00\
\x00\x2b\x47\x65\x6e\x65\x72\x61\x74\x65\x73\x20\x4d\x61\x74\x74\
\x65\x72\x68\x6f\x72\x6e\x20\x4d\x65\x74\x61\x64\x61\x74\x61\x20\
\x69\x6e\x20\x58\x4d\x4c\x20\x66\x6f\x72\x6d\x61\x74\x07\x00\x00\
\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\x6f\x75\x74\
\x70\x75\x74\x01\x03\x00\x00\x00\x0a\x99\xac\x72\x79\x51\x43\x65\
\x78\x64\xda\x08\x00\x00\x00\x00\x06\x00\x00\x00\x13\x4d\x61\x74\
\x74\x65\x72\x68\x6f\x72\x6e\x20\x4d\x65\x74\x61\x64\x61\x74\x61\
\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\x67\x2d\
\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x08\x89\x96\x98\x3b\
\x8c\xea\x91\xcf\x08\x00\x00\x00\x00\x06\x00\x00\x00\x14\x56\x69\
\x64\x65\x6f\x20\x51\x75\x61\x6c\x69\x74\x79\x20\x28\x6b\x62\x2f\
\x73\x29\x07\x00\x00\x00\x11\x70\x6c\x75\x67\x69\x6e\x2d\x6f\x67\
\x67\x2d\x6f\x75\x74\x70\x75\x74\x01\x03\x00\x00\x00\x08\x4e\x3b\
\x89\x81\x4f\x86\x6e\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\x0b\
\x4d\x61\x69\x6e\x20\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x0a\
\x70\x6c\x75\x67\x69\x6e\x2d\x70\x69\x70\x01\x03\x00\x00\x00\x0a\
\x00\x50\x00\x49\x00\x50\x4f\x86\x6e\x90\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0a\x50\x49\x50\x20\x53\x6f\x75\x72\x63\x65\x07\x00\
\x00\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x70\x69\x70\x01\x03\x00\
\x00\x00\x04\x97\xf3\x6e\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x06\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\x11\x70\x6c\x75\x67\
\x69\x6e\x2d\x70\x75\x6c\x73\x65\x61\x75\x64\x69\x6f\x01\x03\x00\
\x00\x00\x08\x89\x96\x98\x3b\x8a\x2d\x50\x99\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x0c\x56\x69\x64\x65\x6f\x20\x44\x65\x76\x69\x63\
\x65\x07\x00\x00\x00\x0a\x70\x6c\x75\x67\x69\x6e\x2d\x75\x73\x62\
\x01\x03\x00\x00\x00\x08\x82\x72\x5f\x69\x68\x3c\x5f\x0f\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x0d\x43\x6f\x6c\x6f\x75\x72\x20\x46\
\x6f\x72\x6d\x61\x74\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\
\x2d\x76\x69\x64\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\
\x67\x68\x01\x03\x00\x00\x00\x06\x5e\x40\x90\x1f\x73\x87\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x09\x46\x72\x61\x6d\x65\x72\x61\x74\
\x65\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\
\x00\x00\x00\x08\x89\x96\x98\x3b\x8f\x38\x51\x65\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x49\x6e\x70\x75\
\x74\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\
\x00\x00\x00\x08\x89\x96\x98\x3b\x5c\x3a\x5b\xf8\x08\x00\x00\x00\
\x00\x06\x00\x00\x00\x0b\x56\x69\x64\x65\x6f\x20\x53\x63\x61\x6c\
\x65\x07\x00\x00\x00\x18\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\
\x65\x6f\x2d\x70\x61\x73\x73\x74\x68\x72\x6f\x75\x67\x68\x01\x03\
\x00\x00\x00\x16\x00\x4c\x00\x65\x00\x61\x00\x6b\x00\x79\x00\x20\
\x00\x51\x00\x75\x00\x65\x00\x75\x00\x65\x08\x00\x00\x00\x00\x06\
\x00\x00\x00\x0b\x4c\x65\x61\x6b\x79\x20\x51\x75\x65\x75\x65\x07\
\x00\x00\x00\x13\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\
\x70\x72\x65\x76\x69\x65\x77\x01\x03\x00\x00\x00\x04\x98\x10\x89\
\xbd\x08\x00\x00\x00\x00\x06\x00\x00\x00\x07\x50\x72\x65\x76\x69\
\x65\x77\x07\x00\x00\x00\x13\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\
\x64\x65\x6f\x70\x72\x65\x76\x69\x65\x77\x01\x03\x00\x00\x00\x0e\
\x4f\x5c\x70\xba\x73\xfe\x58\x34\x89\x96\x98\x3b\x6e\x90\x08\x00\
\x00\x00\x00\x06\x00\x00\x00\x1a\x41\x63\x74\x20\x61\x73\x20\x61\
\x20\x6c\x69\x76\x65\x20\x76\x69\x64\x65\x6f\x20\x73\x6f\x75\x72\
\x63\x65\x07\x00\x00\x00\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\
\x64\x65\x6f\x74\x65\x73\x74\x01\x03\x00\x00\x00\x0a\x73\xfe\x58\
\x34\x89\x96\x98\x3b\x6e\x90\x08\x00\x00\x00\x00\x06\x00\x00\x00\
\x0b\x4c\x69\x76\x65\x20\x53\x6f\x75\x72\x63\x65\x07\x00\x00\x00\
\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x74\x65\x73\
\x74\x01\x03\x00\x00\x00\x04\x6a\x21\x5f\x0f\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x07\x50\x61\x74\x74\x65\x72\x6e\x07\x00\x00\x00\
\x10\x70\x6c\x75\x67\x69\x6e\x2d\x76\x69\x64\x65\x6f\x74\x65\x73\
\x74\x01\x03\x00\x00\x00\x3c\x75\x76\x4f\x7f\x75\x28\x00\x52\x00\
\x54\x00\x4d\x00\x50\x6d\x41\x5a\x92\x9a\xd4\x53\x54\x8b\x70\x66\
\x42\xff\x0c\x62\x40\x67\x09\x51\x76\x4e\xd6\x8f\x38\x51\xfa\x6b\
\xd4\x7c\x97\x8a\x2d\x7f\x6e\x70\xba\x00\x6c\x00\x65\x00\x61\x00\
\x6b\x00\x79\x08\x00\x00\x00\x00\x06\x00\x00\x00\x3b\x2a\x46\x6f\
\x72\x20\x52\x54\x4d\x50\x20\x73\x74\x72\x65\x61\x6d\x69\x6e\x67\
\x2c\x20\x61\x6c\x6c\x20\x6f\x74\x68\x65\x72\x20\x6f\x75\x74\x70\
\x75\x74\x73\x20\x6d\x75\x73\x74\x20\x62\x65\x20\x73\x65\x74\x20\
\x74\x6f\x20\x6c\x65\x61\x6b\x79\x07\x00\x00\x00\x04\x72\x74\x6d\
\x70\x01\x03\x00\x00\x00\x74\x8b\xe6\x89\xc1\x00\x3a\x00\x20\x00\
\x68\x00\x74\x00\x74\x00\x70\x00\x3a\x00\x2f\x00\x2f\x00\x77\x00\
\x77\x00\x77\x00\x2e\x00\x6a\x00\x75\x00\x73\x00\x74\x00\x69\x00\
\x6e\x00\x2e\x00\x74\x00\x76\x00\x2f\x00\x62\x00\x72\x00\x6f\x00\
\x61\x00\x64\x00\x63\x00\x61\x00\x73\x00\x74\x00\x2f\x00\x61\x00\
\x64\x00\x76\x00\x5f\x00\x6f\x00\x74\x00\x68\x00\x65\x00\x72\x00\
\x0a\x60\xa8\x5f\xc5\x98\x08\x76\x7b\x93\x04\x4e\xe5\x73\x72\x53\
\xd6\x6d\x41\x5a\x92\x9a\xd4\x5b\xc6\x94\x70\x08\x00\x00\x00\x00\
\x06\x00\x00\x00\x61\x2a\x53\x65\x65\x3a\x20\x68\x74\x74\x70\x3a\
\x2f\x2f\x77\x77\x77\x2e\x6a\x75\x73\x74\x69\x6e\x2e\x74\x76\x2f\
\x62\x72\x6f\x61\x64\x63\x61\x73\x74\x2f\x61\x64\x76\x5f\x6f\x74\
\x68\x65\x72\x0a\x59\x6f\x75\x20\x6d\x75\x73\x74\x20\x62\x65\x20\
\x6c\x6f\x67\x67\x65\x64\x20\x69\x6e\x20\x74\x6f\x20\x6f\x62\x74\
\x61\x69\x6e\x20\x79\x6f\x75\x72\x20\x53\x74\x72\x65\x61\x6d\x69\
\x6e\x67\x20\x4b\x65\x79\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\
\x03\x00\x00\x00\x84\x8a\x8d\x8b\x49\x00\x55\x00\x52\x00\x4c\x61\
\xc9\x8a\x72\x5d\xf2\x7d\x93\x57\x28\x60\xa8\x76\x84\x70\x0f\x89\
\xbd\x56\x68\x7a\x97\x53\xe3\x62\x53\x95\x8b\x00\x2e\x00\x0a\x59\
\x82\x67\x9c\x6c\x92\x67\x09\x76\x84\x8a\x71\x00\x2c\x8a\xcb\x9e\
\xde\x64\xca\x4e\xe5\x4e\x0b\x00\x55\x00\x52\x00\x4c\x4e\xe5\x51\
\x41\x8a\x31\x00\x66\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\
\x65\x00\x72\x7b\xa1\x74\x06\x60\xa8\x76\x84\x00\x6a\x00\x75\x00\
\x73\x00\x74\x00\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x98\x3b\x90\
\x53\x00\x2e\x00\x0a\x00\x25\x00\x31\x08\x00\x00\x00\x00\x06\x00\
\x00\x00\x91\x41\x6e\x20\x61\x75\x74\x68\x6f\x72\x69\x7a\x61\x74\
\x69\x6f\x6e\x20\x55\x52\x4c\x20\x73\x68\x6f\x75\x6c\x64\x20\x68\
\x61\x76\x65\x20\x6f\x70\x65\x6e\x65\x64\x20\x69\x6e\x20\x79\x6f\
\x75\x72\x20\x62\x72\x6f\x77\x73\x65\x72\x2e\x0a\x49\x66\x20\x6e\
\x6f\x74\x2c\x20\x67\x6f\x20\x6f\x70\x65\x6e\x20\x74\x68\x65\x20\
\x66\x6f\x6c\x6c\x6f\x77\x69\x6e\x67\x20\x55\x52\x4c\x20\x74\x6f\
\x20\x61\x6c\x6c\x6f\x77\x20\x66\x72\x65\x65\x73\x65\x65\x72\x20\
\x74\x6f\x20\x6d\x61\x6e\x61\x67\x65\x20\x79\x6f\x75\x72\x20\x6a\
\x75\x73\x74\x69\x6e\x2e\x74\x76\x20\x63\x68\x61\x6e\x6e\x65\x6c\
\x2e\x0a\x25\x31\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\
\x00\x00\x3c\x8a\x8d\x8b\x49\x59\x31\x65\x57\x30\x02\x60\xa8\x62\
\x40\x63\xd0\x4f\x9b\x76\x84\x00\x4a\x00\x75\x00\x73\x00\x74\x00\
\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x76\x84\x8a\x8d\x8b\x49\x4f\
\xe1\x60\x6f\x53\xef\x80\xfd\x4e\x0d\x6b\x63\x78\xba\x30\x02\x08\
\x00\x00\x00\x00\x06\x00\x00\x00\x4b\x41\x75\x74\x68\x65\x6e\x74\
\x69\x63\x61\x74\x69\x6f\x6e\x20\x66\x61\x69\x6c\x65\x64\x2e\x20\
\x53\x75\x70\x70\x6c\x69\x65\x64\x20\x63\x72\x65\x64\x65\x6e\x74\
\x69\x61\x6c\x73\x20\x66\x6f\x72\x20\x4a\x75\x73\x74\x69\x6e\x2e\
\x74\x76\x20\x6d\x61\x79\x20\x62\x65\x20\x69\x6e\x63\x6f\x72\x72\
\x65\x63\x74\x2e\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\x03\x00\
\x00\x00\x22\x89\x86\x84\xcb\x00\x6a\x00\x75\x00\x73\x00\x74\x00\
\x69\x00\x6e\x00\x2e\x00\x74\x00\x76\x76\x84\x81\xea\x5b\x9a\x7f\
\xa9\x8a\x2d\x7f\x6e\x08\x00\x00\x00\x00\x06\x00\x00\x00\x27\x4f\
\x76\x65\x72\x77\x72\x69\x74\x65\x20\x63\x75\x73\x74\x6f\x6d\x20\
\x73\x65\x74\x74\x69\x6e\x67\x73\x20\x66\x6f\x72\x20\x6a\x75\x73\
\x74\x69\x6e\x2e\x74\x76\x07\x00\x00\x00\x04\x72\x74\x6d\x70\x01\
\
\x00\x00\x22\xaf\
\x89\
\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
\x00\x00\x56\x00\x00\x00\x79\x08\x06\x00\x00\x00\xa3\xac\xd6\x14\
\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\
\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\
\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\
\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xda\x04\x02\
\x03\x2d\x0b\x95\x46\xc6\x9c\x00\x00\x20\x00\x49\x44\x41\x54\x78\
\xda\xed\x9d\x7b\x94\x9d\x65\x7d\xef\x3f\xdf\xf7\xdd\x7b\x6e\x99\
\x6b\x66\x72\x25\xf7\x1b\x01\x12\x50\x10\xc1\x2a\x17\x45\xac\xa2\
\x08\x8a\xd4\x5a\xad\xf5\xa8\xad\xd5\xb6\xab\xa7\x55\xcc\x04\x8e\
\xb5\x82\x24\x13\x6f\xa7\xed\xb2\x5d\xc7\x53\x6d\xbd\x9c\x5e\xd4\
\x5a\x5a\xd4\xaa\x88\x8a\x54\x14\xb9\xc9\x25\x24\x10\x02\x49\xc8\
\x3d\x99\xc9\x24\x33\x93\xb9\xed\xfd\x3e\xdf\xf3\xc7\xb3\xf7\xcc\
\x9e\xc9\x04\x02\x24\xa8\x61\x7e\x6b\x65\x4d\xd6\x9e\xd9\x7b\xbf\
\xfb\xfb\xfe\x9e\xef\xef\xfb\xbb\x3c\xcf\x86\x49\x9b\xb4\x49\x9b\
\xb4\x49\x9b\xb4\x49\x7b\x81\xd9\xc7\x3d\xfa\xff\x1b\xc2\x24\x1e\
\xcf\xd9\x3a\x7c\xf4\xdf\xad\xcd\x8e\xf1\x0f\x3f\xe1\x49\x20\xc7\
\x80\x9a\x55\xe2\x96\xd2\xe1\x16\x3a\x5c\x33\x8a\x57\x86\x46\xfe\
\xb0\x3d\x8d\x0f\xae\xc9\x52\x52\x1a\x70\x52\xa4\x5d\x7d\x63\x80\
\x6f\xd7\x24\xa8\x1d\x01\xda\x93\x32\x26\x4b\xc0\x6f\x01\xce\x00\
\x0e\x03\x9f\x01\x6f\xa2\x3d\x45\x63\x00\xeb\x70\x13\xf0\x1e\xf0\
\x45\x40\x37\xe2\x16\xac\xff\xa2\x5d\x07\x01\x58\x17\x60\x55\xf2\
\xc2\x05\x75\x6d\x80\xd5\x49\xd9\x2b\x5f\x81\xf5\xe7\xd8\xaf\x47\
\xaa\x8a\x0f\xfa\xef\x40\x1f\x64\x55\x32\xa8\x0a\xf7\x4e\x11\xaf\
\x06\xfd\x07\x50\x83\x01\xb3\x9b\x84\x9b\xb0\xff\x9a\xf6\x74\xd3\
\x11\xde\xfd\x42\xb2\x35\x01\xae\x2d\x81\xba\x2e\xbb\x08\x74\x23\
\x81\x97\xcf\x68\x30\x0d\x55\xf2\x93\x3d\x68\x38\xf3\x0e\xac\x15\
\xb4\x27\x87\x2a\xdc\x4f\xd5\x58\x2f\x03\x6a\xe6\x36\x2a\x5c\x3c\
\x0f\x57\xe5\x99\x45\xe0\x0f\x90\x3e\xc5\x27\xb2\xb3\x81\x08\x6a\
\x25\xc7\xbc\x10\xec\x86\xac\x02\x54\x9f\x0d\xba\x9e\x8c\x97\xcf\
\x6c\x30\xed\xe7\xc9\x97\xce\x87\xaa\x14\xb0\xea\x30\x09\x40\xe5\
\xba\x16\x30\x05\xc3\xe2\x66\xeb\x7f\xbd\x0c\xfe\xe0\x4c\xdc\x58\
\xab\x1c\x19\x97\x63\x7d\x82\x4f\x64\x2f\x1e\x01\x77\xed\x0b\x28\
\xa0\xd5\x94\xa9\x32\x9b\x0b\x6e\x27\xd3\x85\xd3\x1a\xe0\x8f\xcf\
\x96\x2f\x5f\x0c\x01\xa9\x18\x04\xa8\x13\x91\x8d\x03\xd6\x45\x60\
\x37\xc0\x60\x11\x6a\xf2\xd2\xef\xad\x14\x1f\x78\x31\x9e\x5a\x0f\
\x64\xbe\x84\xc0\x1a\x3a\xc2\x32\x00\x56\x2b\x2e\x8f\x93\x9e\x57\
\x33\xb8\x26\x81\x75\x59\x03\xd2\x07\xc8\xb8\xa2\xa1\xc6\xbc\x77\
\xa5\x7c\xe9\x02\x21\x49\x5b\x0f\xd9\x43\x99\x41\x3c\x8a\x28\x8e\
\x05\xd6\x2e\x00\x8f\x02\xec\x1f\x80\xc7\x0e\x40\x63\x95\xf5\xa6\
\xa5\xd1\x73\x9b\xea\x04\xd6\x6b\x11\x1f\xa3\xc3\x33\x81\xb8\x3c\
\xae\x3f\x89\x69\x61\x5d\x80\xd5\x29\xdc\x98\xe5\x30\x57\x12\xf8\
\xfd\x5c\x8e\xaa\xab\x96\xdb\x97\x2d\x36\xb5\x39\xb4\xbb\x0f\x76\
\xf7\x81\x83\x00\xff\xbc\xe4\xa0\x24\xac\x2d\x79\xdd\xea\x5c\x00\
\xb6\x00\xdd\xfb\x0e\xa3\x8d\x5d\x90\x4a\xce\x27\xe8\x4d\xcb\xd0\
\x3b\xcf\x90\xeb\xab\x80\xc0\x5b\x10\xd7\xb0\xd6\xb5\x00\x34\x9e\
\xc4\x12\xac\xac\x80\x72\x5a\x09\xba\x06\xdc\x7a\xc1\x5c\xfc\x96\
\x65\x62\x4a\x1e\xe5\x13\x58\xdf\x69\xba\xca\x1a\xc0\xfc\x84\xa0\
\x42\x04\x76\xf5\x18\xf9\xd4\x09\x7c\xbf\x77\x18\x36\x1e\xc0\x87\
\x86\x2c\xc9\xae\x4e\xc5\x5b\x97\xc3\xe5\x4b\x15\xaa\x13\x72\x84\
\xf0\x07\x24\x7e\x37\x1d\x59\xca\xff\x4c\x4e\x5e\x6f\x8d\x12\x74\
\x2a\xe8\x43\x58\x2b\x17\xb6\x88\xb7\x9d\x06\x73\x1a\x24\x5b\xe4\
\x53\xfb\x17\xfb\xa0\x6b\x00\x01\x7b\x81\xc7\x59\x9d\x78\x7c\xf0\
\x02\xd4\x0d\xfa\x1e\x86\x47\x0f\x58\xeb\xf7\xe3\xea\x44\x2a\x04\
\xbb\xbe\x0a\xbd\x6b\x85\xf5\xf2\xf9\x76\x2a\xd5\x03\xed\x48\xaf\
\xa6\x23\xc4\xdb\x75\xe3\x09\x0c\x66\x1f\x9b\x80\x6e\xae\xf7\x89\
\xf7\xd6\x8e\xac\x0a\xf9\xad\xd8\x57\x36\x55\x05\xae\x3a\x15\x9f\
\x33\x53\x0a\xb6\x13\xd9\x5d\x03\xd2\xc6\x2e\x79\xb0\x60\x20\x7c\
\x0b\xd1\x53\x7e\x7a\x32\xa2\xd1\x00\xda\x55\x00\xee\x05\xb6\x6e\
\x3d\x64\xee\xd9\x0b\xa1\x24\x17\xb2\x60\xcf\x9a\x22\xbd\xf7\xcc\
\x84\xa5\xad\x32\x81\x39\x98\x8f\x62\x96\x00\x30\x6b\xe8\x38\x79\
\xca\x04\x80\x7d\x74\x02\xdd\xfc\x17\x9a\x38\x2b\x3a\x6e\xc5\x95\
\x00\xe8\x34\xe0\x4f\x12\x54\x77\xde\x5c\xf9\xf5\x8b\x44\x2a\x93\
\x59\xaa\xc9\x49\xf7\xef\xc3\xdb\x7a\x5c\xba\x10\x7d\x9b\xcc\x7d\
\xe5\x12\x40\x6e\x24\x08\x8d\x46\xb1\xad\xa0\xaf\x0d\x17\xf9\xf0\
\xdd\x7b\xe0\xd2\x83\xb0\xb0\x49\x1a\x2c\x42\xd1\xf8\x8c\x56\xeb\
\x3d\x2b\xe5\x35\x77\xe1\xee\x7e\xbf\x8c\x84\x76\xd6\x86\x3f\xe6\
\xdd\xc9\xc0\x71\x49\x1e\x56\x95\xa5\x4d\x10\x09\x39\x20\xc1\x4e\
\x30\x39\x50\x15\x60\x50\x01\xb9\x08\x36\x22\x23\x28\xa3\x3d\x09\
\x23\xa9\xe6\xda\x2c\x06\x9d\x67\x63\x37\x66\x70\x5d\x0a\x79\xea\
\x81\x3f\x23\x70\xda\xdc\x66\xf3\xb6\xe5\x30\xb5\x06\x15\x83\x2c\
\x90\x80\x7b\xf7\x98\xdd\x7d\x06\xb4\x15\xf4\x10\xd7\x26\xf1\xce\
\x7e\x58\x25\x60\x2b\x2f\xa6\x3d\x39\x44\x47\xf8\x21\xe8\x7d\xeb\
\x3b\x69\xba\x67\x8f\xbd\xa8\x19\x25\x89\x9c\x05\x94\xa4\xf8\xe2\
\x79\xe8\x89\x1e\xc2\x17\xef\x97\x06\x02\x57\x93\x70\x3f\x1d\xd9\
\x67\x69\x4f\x3d\x26\x43\x39\xa6\x0f\x12\xe0\xba\xa4\xd2\x63\xab\
\xc1\x53\x80\xf9\x98\x95\x98\x45\x98\x99\x40\x13\x50\x13\xd7\x0f\
\x83\x98\x1e\xa4\x7d\xc0\x56\xc4\x23\xac\x0b\x8f\x00\x03\x64\x61\
\x80\xd5\xa9\x8f\xc8\xeb\x8f\xd5\xae\x4b\x61\x4d\x26\xf0\x15\x98\
\x2b\xea\x73\xe2\xca\xa5\xf2\x99\xd3\x50\xb0\x1d\x2c\x55\xe7\xec\
\x6d\x3d\xd2\x43\xfb\xc5\x70\x51\x80\xbf\x8a\xc3\xbe\xca\x97\x19\
\x05\x76\xec\x1d\x7e\x00\xfc\xef\x7d\x43\xfa\x1f\xb7\xef\x10\x2f\
\x9b\x6d\x9f\xd2\x60\x0d\x05\x51\x0c\x52\x75\x0e\xae\x5a\x86\x1e\
\x3b\x80\x7f\xb0\x85\x06\x8b\x3f\x8a\xcf\xe1\xf6\x67\x04\x6a\x65\
\xee\xdd\xe1\x7a\x60\x1a\xf8\x52\xcc\x85\x98\xe5\xc0\x3c\xc9\xd3\
\xf2\x89\x48\x05\x89\x62\xe8\x0d\x86\x0c\x28\x1a\x42\xe0\x00\xb0\
\x13\xfc\x38\x4a\xee\x26\x49\x6e\x63\x5d\xf6\x08\x4e\x7a\x68\x57\
\xf1\x88\xf7\x79\x3a\x1a\x5a\x25\x48\x34\x17\xfb\x03\x82\xe6\x95\
\xb3\xf0\x65\x8b\x20\x97\x98\x42\x90\x00\xaa\x13\xe9\xde\xbd\xf6\
\xa6\x6e\x04\xca\x80\x1f\xd0\xd5\xd9\x53\x79\x33\x75\x44\x39\xac\
\xbc\x94\x3b\xc2\x5b\xb0\xfe\xbe\xbe\x86\xe6\x6b\x5e\x8a\xaf\x5c\
\x8a\xb2\x10\xef\x18\xd8\x55\x69\xe4\x98\x8f\xde\x11\xd8\xd2\x85\
\x48\x75\x13\x81\x0f\xb0\x3a\xd9\xf3\xb4\x9e\xb2\xd6\x31\xc1\x88\
\xff\xaf\x45\x61\x2e\xd2\x55\x04\x5e\x8b\x7d\x46\x9a\xaa\xb5\x21\
\x2f\x1a\xab\xcd\x8c\x06\x38\xa5\x1e\xb7\xd4\x48\x35\xb9\xe8\x88\
\x83\x45\x38\x34\x84\x77\x1d\x46\xbb\x7b\xa0\x6f\x08\xfa\x0a\x30\
\x94\x31\x88\xd9\x44\xc2\x7d\x24\xba\x99\x10\x7e\x4a\x96\x74\x72\
\x9d\xb2\x52\xe5\x0e\xae\x4d\x9f\xae\xce\x9a\x43\xfe\x18\x81\x6b\
\xa6\xd5\x92\xff\x5f\x17\xe0\x8b\xe6\x48\xc1\x38\x33\xca\x27\xf6\
\x40\x41\xfa\xe4\xdd\xf6\xbf\x6f\x42\x98\x6f\x81\x3e\x40\xbb\xb6\
\x4f\xec\xb1\xe5\x54\x75\x44\x20\xe8\x0e\xf0\xb7\xfa\x86\x78\xc7\
\x2d\x5b\xe1\x25\x33\xf1\xdc\x06\x69\x38\x03\x23\x65\xc1\x5e\xd1\
\x26\xfd\xee\xe9\x0a\x9f\xb9\x0b\xf5\x0d\xfb\x35\x24\xbc\x87\xb5\
\xee\xa0\x5d\xd9\x18\xf0\x8e\x28\xbb\x8d\xa4\x88\xb3\x90\xdf\x88\
\xf5\x76\x8a\x3e\xbb\x2a\xaf\x29\xb3\xa6\x88\x65\x6d\xf2\x4b\x66\
\x9a\x65\x2d\xa2\xb5\x16\x4d\xc9\xa3\xea\xd4\xe4\xa2\xcb\x52\x0c\
\x30\x14\x50\x7f\x01\x0e\x0e\xe2\xad\x3d\xf0\xc0\x3e\x78\x70\x5f\
\xa8\xe9\xec\xd3\x99\x07\x86\x38\x93\xa2\x2f\x26\xe1\x4e\x72\xfe\
\x1a\x1d\xfe\x09\xed\xda\xcf\xb5\x29\x7c\x2a\x83\x21\x8d\xa5\x9f\
\x4a\x6f\xc5\x2f\x03\xae\x16\xca\xbf\x7a\x91\xfd\x92\x19\x91\x7c\
\x82\x23\xaf\x56\xa5\xd2\xdd\xbb\xed\xfb\xf6\x22\x6c\x40\x37\x93\
\xb1\x67\xfc\xc7\xcc\x4d\xa8\xdf\x56\x25\xb0\x4a\xbb\xe9\x08\x37\
\x63\x2e\xb9\x77\x0f\xb3\x7e\xb2\x03\x5f\x7d\x2a\x24\xc2\xc1\x28\
\xb3\x94\x4f\xcd\xab\xe6\x49\x0f\x77\xe1\x6f\x6c\x60\x0a\xf0\x4e\
\xe4\xbb\x81\x5b\x26\x04\xb5\x7c\xf1\x6b\x9d\x47\x9c\x8d\xfc\x47\
\x14\xfd\x1a\x52\xcd\x58\xd8\x2c\x5e\x72\x0a\x7e\xd5\x02\x58\xd2\
\x04\xcd\x35\x52\x5d\x2e\xa6\x84\x99\xa3\x6e\x74\x45\x51\xa3\x11\
\x48\xeb\xb0\x9a\xad\x15\xd3\xc4\x2b\x4e\x81\x7d\xfd\xf2\xbd\x7b\
\xa5\xdb\x77\x04\x36\x77\xb2\xa0\xb3\x5f\x0b\x30\xe7\x91\xe3\xfb\
\x74\x84\x7f\x01\xdf\xc5\x87\xd2\xfe\x23\x02\xdc\xf5\xa5\xeb\xea\
\x70\x3d\xf2\xef\x93\xb1\x74\x61\x2b\xbe\x62\x09\x34\x54\x49\xc3\
\x99\x0d\x52\x2a\xbb\xbf\x20\xdd\xbd\x07\x9e\xec\x35\xa0\x7b\x81\
\xbb\xb8\x2e\x26\x05\x95\x2b\x22\x77\xd4\x6c\x23\x7a\xed\x0f\x81\
\x6f\x0f\x0e\xf3\xde\x6f\x3d\x8e\xce\x9d\x69\x2f\x6e\x46\xa1\xa4\
\x30\x0a\x19\x9e\x5a\x83\xae\x5a\x86\x37\x74\xc9\x1b\x77\xb3\x94\
\xbc\xdf\xc7\x5a\x3f\xcc\x6a\xed\x1c\xf5\x82\x12\xcd\x44\x50\x1b\
\x48\x7d\x15\x81\x3f\xa4\xc0\xb9\x53\xa7\x28\x39\x77\x36\x7e\xe3\
\x52\x71\x46\x9b\x69\xa9\x96\x12\x99\x42\x90\x07\x8a\x94\x03\xf0\
\xc4\x16\x10\x88\x44\xd0\x5a\x63\xb7\xd5\x4a\x0b\x9a\xec\x57\x9c\
\x22\xee\xde\x03\xb7\x6e\x45\x0f\xef\x63\x61\xcf\x00\xef\x21\xe5\
\xa5\x24\x7c\x8d\x8e\xec\x6b\xb4\xa7\x8f\xb3\x3a\x85\x4f\x19\x0e\
\x07\xa8\x1b\x91\x69\x97\x03\xbf\x99\x4f\xcd\x9b\x97\xe1\x25\x2d\
\x4a\x8a\xc1\x36\x1a\xf1\xd6\xf5\x9d\xf6\x1d\x3b\x51\xc8\x04\xf0\
\x4d\xa4\xc7\x46\xae\xa7\x82\x66\xf4\xb4\x55\xf2\x75\xbe\x94\xe0\
\xcf\xa6\x29\xcb\x7e\x6f\x85\xfc\xbe\x17\xa1\xaa\xc4\xce\x90\x70\
\xf4\x60\x63\x7d\x73\xb3\xc2\x67\xee\x22\xe9\x19\xf0\x41\xf2\xea\
\xa0\xc8\xa7\xb9\x56\x45\x6e\x0c\x50\x2d\xf8\x90\x60\x6d\x36\x8d\
\x34\xf9\x00\x99\xdf\x45\x60\xc1\xa9\x6d\xe6\xca\x53\xe5\x57\xce\
\x13\x33\xea\x50\x92\x40\x31\x8b\x1f\x24\xde\x57\xb0\xc1\x40\x2a\
\x48\x93\x28\xbc\x5d\xa2\x83\x30\x81\xe4\x2d\xff\xdd\x60\xd1\xde\
\xd5\x0b\x3f\xde\x01\xb7\x6c\x91\x36\x76\x9a\x50\xa4\x87\x1c\x3f\
\x44\x7c\x91\xa2\xbe\xc3\x75\x1a\xae\x88\x2f\xb3\x50\xf2\x05\x0a\
\xe1\x75\xe7\x2f\xc0\x1f\x39\x5f\xcc\x69\x8c\xd4\x27\xca\x9f\x13\
\xfd\xcb\x06\xfb\x6f\xee\x43\xc3\x45\x1e\x01\xfe\x90\xf6\xe4\xc7\
\x13\x35\x01\x26\x8e\x30\xed\xc9\x68\x0f\xcc\xdc\x81\x7c\x53\x96\
\x31\xf8\xdd\x2d\xd6\xfd\x7b\xed\x44\x92\x6c\x4b\x91\x7b\x12\xc9\
\x17\xcd\xb5\x2e\x59\x68\x23\x37\x13\xfc\x76\x12\xbf\x3c\xca\x97\
\xa4\x04\xaa\xe7\x90\xea\x23\x14\xfc\x27\x88\x05\x17\x2e\x84\x0f\
\x9e\x27\x5f\xb9\x14\x66\x4e\xb1\x82\x71\xa1\xc4\xdf\x65\x1f\xb5\
\x21\x9f\x40\x73\x75\xac\x77\x1e\x1a\x84\x3d\x87\xa1\x7b\x20\x3e\
\xde\x54\x7a\xbc\xd2\x4d\x32\xc3\x70\x66\xe7\x12\x69\x41\xb3\xf4\
\x5b\xcb\xc5\x87\xcf\xb3\xdf\x7a\x1a\x6e\x6d\xa0\x91\x22\x57\x10\
\x58\x47\xce\xab\xe8\x08\x73\x2a\x90\x78\x0b\xc1\xbf\x51\x5f\x2b\
\xae\x58\x2c\x9f\xd2\x20\x15\x83\xcb\xea\x9f\x7c\x6a\xed\xe8\xc5\
\x3f\x78\x52\x0c\x47\xad\x71\x0b\xf2\xfd\x13\xae\xf4\x09\xa9\xa0\
\x62\x9d\x95\xb2\xb1\x7e\xd6\x85\xff\x07\xba\x68\x57\xaf\xcf\xff\
\xea\x23\xb0\xbc\xd5\x6e\xac\x92\xb2\x12\xf6\x59\x40\x2d\x35\xf0\
\xa6\xa5\x78\x43\xa7\x78\x74\x0f\xcb\xa9\xf2\xbb\xe9\x08\x1b\x69\
\x4f\xf6\xb1\xd6\x0b\x49\xfd\x11\x0a\x5c\x5d\x9d\xa7\xfe\xf2\x65\
\xf8\xb7\x4f\x83\x85\x8d\x22\x49\x50\x31\x8c\xae\x9e\xb2\x97\x0a\
\xa8\xcd\x43\xe7\x00\x7c\x67\x0b\x3c\xd2\x15\xab\x6e\x43\x59\x04\
\xb3\xad\x06\x96\x4e\x85\x97\xcd\x86\xb9\x0d\xd0\x3b\x5c\x4a\x1d\
\x04\xb6\x14\x0c\xc1\x76\x4d\x2a\x9d\x39\x0d\xcf\x69\x80\x15\xd3\
\xf0\x37\x36\xa1\xfb\x76\xf9\x54\x32\x3e\x48\x8e\xb3\x58\x97\x7d\
\x12\x27\x87\x71\xb8\x9a\x8c\xc6\x8b\xe7\xcb\xe7\xcd\x42\x60\xa2\
\xeb\x40\x22\x7b\x38\x93\xee\xda\x6d\x36\x76\x21\xcc\xe3\x24\xbe\
\x85\x55\xe9\xa1\xa3\x75\x55\x8e\x0e\x6c\x7b\x3a\x1a\x6c\x86\xb5\
\x9e\x2a\x7f\x81\xe0\x25\x3f\xdb\xa5\xb6\x9b\x37\xe3\x77\xad\x80\
\x2c\xb3\x25\x8d\x08\xe7\xe5\x53\xe1\x8d\x4b\xf0\xdf\x1e\x72\xbe\
\x7f\x88\x57\x91\xe3\xb5\xac\xf1\x1d\xa4\x5e\xcd\xb0\xdf\x56\x5f\
\xa3\x9a\xdf\x3a\x1d\xbf\xe5\x54\x98\x39\x25\xe6\x4d\x59\x88\x81\
\xa1\xd2\x4b\x23\x9f\xc1\x7f\x6f\x87\xaf\x3d\x0a\x0f\xed\x87\x7d\
\x3d\x40\xb1\xc4\x03\x02\x52\x68\x6d\x80\x5b\xa7\xc3\x1b\x16\xc3\
\x1b\x16\xc1\xe1\x42\xe9\xf9\xa5\x9b\x03\x52\x66\x5b\x48\x53\x6b\
\xe1\xd2\x05\xf6\xa2\x66\x7c\xf3\x63\x70\xd3\x66\x35\x0d\x0e\xf2\
\x26\x72\xcc\x24\xf1\x20\x45\x9d\x3d\xad\x51\x7a\xcd\x02\x87\xb6\
\x5a\x25\x85\x30\xf2\x4e\xe4\x12\x69\x47\xaf\xfd\x9d\x2d\x30\x58\
\x00\xe4\xdb\x41\x3f\x9d\x50\x4d\x95\x29\xe9\x29\x35\xdd\xad\x1f\
\x8b\x3f\x7f\xf4\x31\xb8\xe4\xa3\xdb\x91\x96\x14\x8b\x9c\xb6\x77\
\x80\xf4\xb4\x56\xf9\x94\x06\x94\x05\x1c\x99\x01\x72\x09\x4c\xaf\
\x83\x6d\xbd\xb0\xa5\x5b\x75\x24\x2c\x25\xd1\x2b\x29\xf2\xaa\x86\
\x1a\x35\xbc\x63\x25\xfe\xad\xe5\x30\xa3\xae\xec\x55\xf1\xc6\x54\
\x86\x27\x11\x39\xf2\x7b\x5b\xe1\x7f\xdf\x03\xbf\xd8\x09\xfd\x05\
\x38\x67\x36\xbc\x6e\x29\x5c\xbc\x08\x56\xcc\x84\x9a\x2a\xd8\xd4\
\x05\xdb\xba\x61\xe3\x01\xc8\x02\x9c\x37\x3b\x7a\x74\x0c\x69\x54\
\x30\x35\xd8\x76\x92\x48\x6d\xb5\x70\x7a\x9b\x98\xdb\x28\x9e\x3c\
\x4c\x72\xb0\x97\x39\x88\x05\x14\x55\xfd\xc6\x53\xed\x2b\x96\xa2\
\x5c\x22\x85\xf2\xb3\x89\xfa\xf5\xfb\xdb\xe0\xe6\xcd\xa8\x58\xe4\
\x09\xc4\x67\x69\x4f\x7f\x31\xe2\xad\xb7\x5e\xcf\xd3\xcb\xad\xa3\
\x05\xb2\xd5\xc9\x7e\xd6\x85\xbf\x21\xe1\xfc\x27\xba\xb5\xf8\xcb\
\x0f\xc3\xc7\x9a\xe5\x9a\x9c\x55\x0a\x22\xce\x8c\xa6\xd7\x99\x2b\
\x97\xc9\x8f\x1e\x70\x6e\x67\xb7\x57\x90\xe0\xfa\x6a\x25\x6f\x5b\
\x11\x3d\x75\x6a\x0d\x64\xa6\xb4\x60\xc7\x7a\x6a\x19\x86\x87\x3a\
\xe1\xaf\xee\x81\x5d\x07\x61\x6e\x0b\xbc\xff\x45\x70\x46\x1b\x34\
\xd5\x44\x6e\x2d\x04\xe8\x19\x82\xc7\xba\xe1\xef\xee\x87\xc7\xf7\
\xc3\x3f\xae\x8f\x37\xf5\xb2\xc5\x70\x78\x18\x94\x1c\xe9\xbd\x76\
\x0c\x8c\x53\x6b\xe0\xb2\x85\x78\x71\x33\xfe\xf2\x7a\x25\xb7\x3e\
\x6a\x66\xb5\xda\xaf\x5e\x00\xf5\x55\x91\x5b\xcb\x37\x24\x4d\xac\
\x7d\xfd\xf2\x37\x37\xc3\xc0\x90\x41\xba\x13\x71\xdb\x53\x79\xeb\
\xd1\x83\xd7\xd1\x02\x59\x31\xdc\x43\xa2\x4f\x83\x7b\x6e\xdf\x11\
\xf4\xaf\x8f\x98\x9a\x9c\xca\x80\xc8\xc6\x12\xbc\x78\x3a\xbc\x6a\
\x3e\x20\x25\x55\x22\xbd\x72\xb9\xb9\xfa\x54\x68\xad\xb1\x62\x3c\
\x38\x3a\xa8\xc1\xf0\xb7\xf7\xc1\xae\x43\x30\x67\x2a\xdc\x70\x01\
\xbc\x7a\x01\xcc\x69\x84\x86\x2a\xa8\xc9\xc5\x9f\xa7\xd4\xc3\x45\
\x73\x61\xcd\x05\xb0\xb8\x0d\xf6\xf7\x45\x70\x0f\x0c\x46\x8f\x37\
\x15\xd4\xa2\xf2\xbf\xf8\x8e\xc5\x60\xe7\x12\xeb\xf4\x36\xf1\x67\
\xe7\xe2\x4f\xbf\x0e\x3e\x7e\x01\x9c\xde\x16\xe3\x46\x99\x5b\x05\
\xce\x82\xf8\xc1\x36\xb3\xe9\x00\x82\xe4\x71\xc4\xd7\x58\x95\x76\
\x1f\x31\xb8\xf1\x8c\x81\x8d\x01\xac\x54\xa0\xc8\x05\xec\xaf\x23\
\x7f\x73\x68\x58\x85\x9b\x1e\x83\xdb\xb6\x9b\xba\xbc\x1d\x42\x04\
\x37\xb3\x98\x92\x87\x37\x2f\x83\xb7\x9f\x09\xbf\xf7\x22\x78\xfb\
\x69\xd0\x56\x07\x99\x05\xc8\xe5\x0f\x58\x09\xa8\x4a\xcb\xf7\x81\
\x7d\x70\xcf\x1e\x68\xa8\x86\x77\x9e\x01\x67\x4d\x8b\x40\x55\x5a\
\x59\x82\x49\xb0\xb4\x05\x3e\x74\x5e\x94\x59\x5b\x0e\xc1\x7f\x3d\
\x0e\x75\x39\x70\x18\x7d\xdd\xca\xf7\x02\x48\x12\xc9\xc8\x18\xcd\
\xa8\xb3\x2e\x98\x23\xaf\x9c\x26\x55\x25\x91\x32\xca\xd7\x92\x08\
\x75\x0e\xe0\x9b\x47\xbc\xd5\x3f\x07\xfd\xe8\xe9\xbc\xf5\xd8\x81\
\xad\xac\x93\xae\x4a\x3a\x41\x9f\x22\xd1\xd6\xed\xdd\xf0\x95\xf5\
\x78\x47\x8f\x54\x95\xda\x25\xef\xb0\xb1\xe6\x34\x48\xef\x7f\x91\
\xfc\xae\x95\x72\x5b\x9d\x94\x85\xb2\xa7\xa2\x4a\x4f\x1a\x53\x66\
\x17\xdc\xb1\x0b\x8a\x19\xb4\x4d\x81\xd7\x2d\x8c\x00\xda\x63\x81\
\x19\x0f\xd6\xca\x56\x38\x6b\x16\xf4\x0f\xc1\xcf\x76\x45\xba\x98\
\xe8\xb5\x2b\xdf\xb3\x7c\x1d\x20\xd2\x04\x8d\xde\xbc\xd2\x5f\x08\
\x02\xe6\xd6\x6d\xb0\xed\x10\x42\x3c\x86\xfc\x45\x56\xa9\xe7\x58\
\x6a\xbf\xc7\x0e\xec\x2a\x55\x66\x67\xf7\xe3\xf0\x11\x12\x0e\xff\
\x6c\x17\xfa\x87\x87\x08\x99\xe3\xc5\xd9\x28\x04\x95\xe5\x92\x6a\
\x72\xf1\x4a\x1d\x93\xa8\x91\xbc\x74\xa2\x7c\x4a\x8e\xc1\x08\x60\
\x41\x13\x34\x56\x8d\x2e\xe9\x51\xae\x1c\x0b\x90\x89\x41\xf3\xac\
\x69\x51\x21\xee\xed\x87\x81\xac\xf4\xf7\x1c\x09\x2e\x13\x50\x44\
\xf9\xc6\x69\x7c\x9e\x67\xb1\xbf\xdf\x1a\x0e\x06\xb4\x1b\x25\xf7\
\x8c\xa4\xc3\x4f\x53\x8e\x7c\xe6\x0d\xab\xf2\x9d\x0a\x7c\x13\xe9\
\x6f\x09\x14\x6e\xd9\x86\xbe\xb7\x05\xa6\xe4\xcb\x4b\xed\xc8\x0b\
\x4e\x14\x81\xf3\x53\xf5\x1e\x05\x83\xa5\x96\x45\x75\x5a\x92\x08\
\x13\x64\x57\xe3\x6f\x4a\x22\xa8\x29\xad\xca\x2c\x96\x12\x79\xba\
\x16\xe7\x18\x25\x72\x94\xc4\xd9\x40\x21\x13\xb6\x40\xee\x27\xc4\
\xd6\xf6\xb1\x14\xd1\x9f\x39\xb0\xed\x49\xbc\x63\xd7\xa6\xfd\x38\
\xfc\x13\x09\x5b\x7a\x86\xd0\xfe\x01\x5c\x19\x34\x26\xbc\x60\x3d\
\xf5\x07\xb6\xa3\xbe\xc5\xb0\xb3\x2f\x52\xc2\x18\x7d\x3b\x01\x5f\
\x12\x2b\x4f\x3c\x71\x28\xbe\x7e\x63\x15\xd4\xe4\xe3\x63\x7a\xae\
\x6d\x31\x43\x4f\xc1\x64\x76\x06\x3a\x58\x1e\xc6\x38\x16\x7b\x76\
\x2d\xd6\xf2\x1d\x53\x32\x8c\x7d\xd0\x98\x62\xa9\x08\x2c\x4f\xe8\
\x64\xc7\x6c\x67\xcf\x88\x3f\x77\xf7\xc0\x7d\xfb\xe2\x32\x9f\xc8\
\xdb\x2a\x57\xc2\xde\x7e\xf8\xe9\x4e\x48\xf3\xb0\xa2\xad\x02\xd0\
\xa3\x78\x61\xe5\x05\x8e\xe7\xef\x91\x80\x6a\x3b\x00\xfb\x0e\x0b\
\x82\x86\x80\xdd\xa4\xe1\x04\x03\x3b\xea\x81\x45\xa4\x81\x2c\x98\
\xe1\xac\xc2\x2b\xfd\xec\xbc\x23\x18\x5e\x3e\x3b\x4a\xab\xce\x01\
\xf8\xc7\x87\x60\x5f\x7f\xcc\xc2\x12\x8d\x05\x41\x40\x4e\x70\x70\
\x10\xbe\xf0\x20\xf4\x0e\xc0\xb4\x5a\xb8\x6c\x11\xf4\x67\x47\x5f\
\x11\x8a\xd4\x79\x84\x22\x19\xf3\xda\x31\xbb\x50\xcf\xb0\xdd\x39\
\x68\x08\x0c\x20\x6d\xc3\xa1\xf8\xfc\x00\x8b\x87\x81\x5e\x2c\x06\
\x8a\x10\x5c\xf2\x85\x09\x96\x6c\x59\x22\x31\x81\x77\x8c\x3c\x2c\
\x68\xac\x81\x77\x9f\x09\xb9\x5c\xf4\xc2\x4f\xdf\x1d\xeb\x04\x85\
\x10\x01\xae\x4a\x63\xd4\xcf\x88\x09\xc2\xdf\x3f\x00\x37\x3f\x0a\
\x49\x2e\xa6\xb6\x2b\xa6\xc1\x70\x36\x36\xd8\x55\x52\x89\x5d\xaa\
\x29\x94\x28\xa4\x18\x8e\x54\x1c\x76\x2c\xbe\x6c\x39\x08\xbd\x83\
\x00\xf4\x83\x1f\xe5\x9a\xfc\x31\x7b\x6c\xee\xb9\xe1\xea\x41\xd0\
\x41\x02\xf4\x17\xf1\x50\x16\xd5\x54\x39\xc9\xd6\x38\xcf\x28\x05\
\x5a\x2a\x95\xc1\xf8\xe8\x2c\xc1\xeb\x17\xc1\x13\x07\xe1\x5f\x1f\
\x81\xef\x6c\x8a\xe3\x4e\x97\x2e\x88\x4a\xa1\x36\x07\x83\x19\x6c\
\xef\x81\x1f\x3e\x09\x0f\xef\x06\xe5\xe1\xf2\xc5\xf0\xde\x33\x63\
\xfa\xab\x09\x64\x59\xe5\xb5\x94\xbd\xff\xde\xbd\xf0\x8b\x3d\x70\
\xee\x4c\x78\xf1\x8c\x31\xd4\xa1\x24\xc1\xeb\xbb\x44\x4f\xc1\x90\
\xf8\x10\x10\xc7\x58\xff\xc5\xf0\x36\x9d\x60\x60\x03\x87\x49\xb4\
\x17\x02\x3d\xc3\xd0\x3b\x2c\xea\xd2\x52\xad\x64\x9c\x4e\xd5\x78\
\x9e\x3b\x8a\x96\x2d\x97\x0a\xdf\xff\xa2\x58\x2e\xbc\x79\x33\x6c\
\xde\x0f\x9b\xf7\x02\xd5\x50\x97\x8f\xe0\x31\x14\x5f\x74\xd6\xd4\
\xb8\xfc\xdf\x79\x46\x54\x12\x59\x25\x88\x25\x5a\x1a\x7f\x83\xf3\
\x29\x3c\xb4\x0f\x3e\x77\x1f\xfc\xe2\x49\xe8\x3b\xa7\x04\xec\xc8\
\x35\x89\x2c\x98\x07\xf7\xc1\x60\xc1\x45\xa4\x4d\x98\x4e\x00\x36\
\xf8\x79\xf0\xd8\xd5\x69\x3f\xeb\xc2\x0e\x80\xee\x01\xd4\x35\x80\
\x1b\x1a\x51\x65\x34\x2f\x7b\xc8\x50\x16\x65\x50\x6d\x7e\x34\x75\
\x1d\x0f\x6e\xf9\x67\x70\xcc\x9e\xde\xbd\x32\xea\xd3\x3b\x77\xc3\
\x86\x2e\xd8\xd9\x0b\xfd\x45\x68\xad\x81\x59\xb3\x60\x79\x2b\x9c\
\x37\x13\xce\x3f\x25\xbe\x47\x16\xc6\x81\x38\x7e\x85\x10\x6f\xda\
\xd6\x43\xf0\xe5\x87\xe1\x17\xbb\x60\x66\x1b\x9c\x33\x73\xf4\x9a\
\xec\xc8\xdd\x9b\x0f\x4a\x4f\x1c\x34\x04\xf5\x91\xf2\x23\xb2\xd2\
\xb6\x81\x1b\x92\x13\x0c\xec\x48\xb3\xd0\xdb\x91\xd8\xd7\x2f\x76\
\xf7\x59\x4b\x9b\xf1\x50\x36\x9a\xb2\xe6\x53\xe8\x1a\x80\x6f\x6c\
\x82\x0d\x9d\x71\x49\x5f\x3c\x37\x7a\x5e\x16\x46\x33\xab\xf1\xda\
\x32\x8b\xdd\x09\x5e\x36\x3b\x2a\x85\x9d\x7d\xb1\x0e\x30\x9c\xc5\
\xd7\x6c\xa9\x8e\xf5\x82\xda\x7c\x7c\xac\x12\xd4\x09\xd3\x58\x45\
\x85\xb1\xe5\x10\x7c\xfe\x01\xf8\xee\xe3\x50\x57\x0b\xbf\x7b\x3a\
\xfc\xc6\xec\xb1\x69\x72\x3e\xb1\x6f\xdf\x01\x7b\x0e\x23\x12\x0e\
\xc6\xb6\xbe\x9e\xd1\x98\xcd\xb3\x07\x76\xb4\x59\xb8\x0b\xb1\x7d\
\xef\x61\xe6\x6e\xeb\xc1\xe9\xb8\x96\x7a\x4e\x71\xe9\xde\xbf\x17\
\xee\xd8\x0a\x0f\xec\x81\x07\xf7\xc1\xd5\xa7\xc2\x82\xe6\x58\xb7\
\x0c\x4c\x10\x95\x4b\x9e\x3b\x98\x45\x50\x16\x34\xc1\xa2\xe6\xd1\
\x9c\xa1\x1c\x78\x06\x8b\x13\x67\x55\xe3\xcb\x90\xc1\x70\xdf\x5e\
\xf8\xd2\x43\xf0\xa3\xad\x50\x9d\x87\x77\x9c\x01\xaf\x5f\x32\x4a\
\x21\xa5\x6a\x96\xf7\x0d\x48\x3f\xdd\x19\x3c\x34\xcc\x30\x29\xb7\
\xe3\x64\xcb\x31\xb7\xcf\x8f\x0b\x15\xc4\x68\xb4\x03\xf9\xbe\xa1\
\x61\xcd\xdd\xdc\x2d\x0e\x0d\x41\xaa\xd8\x59\xa5\x44\x01\x33\xa7\
\xc0\x3b\x57\xc4\xc8\x7e\xd7\x4e\xf8\xfa\x46\xf8\xf9\x6e\x78\xfd\
\xe2\xc8\x8f\xd3\xea\x4a\x7a\xb5\xe4\x35\x1e\x97\x70\x19\x46\xe5\
\xdc\x51\x32\xa8\x11\xc5\x51\xae\xc5\x96\x7f\xe7\xb8\x62\xbe\xb7\
\x15\xbe\xf1\x08\x3c\xde\x05\xf5\xb5\xf1\x7a\xae\x3e\x35\xf2\x78\
\xa9\x83\x81\x80\xea\x54\xba\x75\x9b\xfd\xc8\x01\x09\xb9\x00\xfa\
\x2a\xed\xea\x1d\xdf\x2c\x3c\xf1\xc0\x06\xed\x24\xe1\x67\x96\xaf\
\x78\xb8\x13\x1e\xeb\xc6\x67\x4d\x97\xca\xd1\x39\x94\xa4\xcd\x4b\
\x67\xc2\xbc\x46\xf8\xc6\xa3\xf0\x9f\x8f\xc1\x96\x6e\xf8\xc2\x7d\
\x31\x38\x5d\x32\xbf\x14\xf5\x1b\xe3\x32\xcf\x69\x34\xd7\x2f\xff\
\x1b\xc9\xfd\x5d\x11\x09\x3d\x4e\x37\xaa\xa2\xd9\x68\xe8\x19\x8c\
\x37\xf0\xa6\x4d\xb0\x7e\x2f\x0c\x14\x61\xde\xd4\xc8\xdd\x97\x2e\
\x88\x3c\x5e\x2c\xa5\xd0\x0e\x50\x95\xc3\x3b\x7a\xd1\x2d\x5b\x4c\
\xdf\x40\x92\x91\xfa\x56\xe0\x9e\xa3\xb5\x5f\x9e\x5a\xe2\x3f\x17\
\x2b\x6f\x65\x5a\x17\x2e\xc6\xfa\x72\x5d\xce\x73\xdf\x7f\x36\x7e\
\xf7\x4a\x69\x30\x63\xa4\x6f\x5c\x16\xe6\x65\x70\x36\x76\xc1\x3f\
\x6f\x84\x9f\xed\x80\xee\x41\xc8\x13\x53\xd1\x85\x6d\x31\x41\x78\
\xc9\xcc\xc8\x9f\x55\xb9\x08\x72\x2e\x89\x74\x90\xa8\x22\x28\x55\
\x60\x9b\x85\x18\x18\x0b\x1e\x95\x62\x77\xec\x8c\xad\x9d\xed\x07\
\x62\x87\xbb\xba\x0a\x2e\x9c\x13\xd5\xc3\x19\x6d\xa3\x54\x53\x7e\
\x31\x61\x57\xa7\xd2\x67\xef\xc7\x9f\x7f\x20\xa8\x98\xa9\x1f\xf1\
\x56\x56\x25\xdf\x7a\x76\xb9\xd3\xf1\xb0\xb5\xa1\x11\xf1\x09\x99\
\xf7\xbd\x78\x36\x5e\xfd\x52\x71\x7a\x9b\xd5\x5f\xd4\x91\x7a\x96\
\xd1\xda\xeb\x86\x4e\xf8\x8f\xcd\xf0\xd3\x5d\xd0\xd9\x0f\x43\x45\
\xc8\x1b\xaa\x13\x68\xa8\x87\xd3\x5b\x61\x71\x4b\x6c\x16\x4e\xab\
\x8b\xe0\x57\x97\xb3\x30\x62\x2d\xa1\xaf\x10\x97\xfa\xf6\x5e\xd8\
\xd4\x0d\x0f\x77\xc2\x81\x9e\x48\x41\xc5\x24\x16\xc5\x4f\x6b\x83\
\xab\x96\xc1\x85\x73\xa3\x0e\x2e\x07\xcd\xd1\xeb\xb2\x6b\xf3\xd2\
\xed\xdb\xed\x35\x77\x8a\xed\xdd\x41\xe4\xf4\x39\x82\xdb\x69\x4f\
\x0f\xb2\x2e\x83\x55\xe9\x2f\x03\x58\x43\xc2\x65\xd8\x9f\xaf\x4d\
\x98\xf5\xb6\x95\xf2\xfb\xce\xb4\x6a\x72\xf2\x70\x16\xbd\x76\x7c\
\x26\xa4\x91\x08\x1c\x5b\xda\xb7\xef\x80\x1f\x6f\x8f\x51\xfb\xd0\
\x20\x1c\x2e\x42\x56\x84\x24\x40\x52\x4e\x22\x92\x12\x87\x96\xda\
\x2e\x84\xb8\x84\x4b\xff\x25\x24\x90\xa4\xd0\x90\x87\xa9\xb5\x70\
\xfa\x34\xb8\x6c\x61\x5c\x01\x35\xb9\x78\x23\x26\x2a\x43\x56\xa7\
\x66\x7b\x8f\x7c\xc3\x9d\xf8\xce\x27\x9d\x38\x61\x23\xd2\xef\xb0\
\x4a\xf7\x3f\xfb\x6c\xff\xb9\xda\x1a\xc3\xbe\x22\xcc\x48\xab\x91\
\x3e\x06\x5e\xd5\x5a\x87\xff\xec\x25\xe2\x0d\x8b\x91\x6d\x17\x83\
\x34\xbe\x9a\x3f\x26\x13\x22\x72\x6b\x92\xc0\xae\x5e\x78\x70\x7f\
\xf4\xe6\x27\x0e\xc5\x5a\x41\x7f\xa1\xe4\x81\x21\x72\x67\x99\x5a\
\x92\xd2\x8d\xa9\x4a\xa3\xec\x9a\x5a\x03\x4b\x9a\xe1\xac\xe9\x51\
\xf0\xcf\xaa\x87\xe1\x62\x69\xb8\xa3\xbc\x52\x4a\xcb\xbf\xfc\xde\
\xf9\x04\x77\x0f\xa2\xcf\xdc\x8b\xbf\xbd\xc9\xca\xf0\x61\xa4\xf7\
\xb2\x2a\xf9\xd7\x89\x06\x31\x9e\x5f\x8f\x2d\x7b\xad\xbc\x0c\xfc\
\xd7\xa0\xd7\x2e\x6c\xb1\xff\xf4\x1c\x71\xd1\x9c\x08\x67\x16\x53\
\x21\x97\x7a\x63\x47\x44\x74\x97\x6a\xa8\x69\x29\x78\xe5\xd3\x08\
\x78\x6f\x01\xf6\xf7\xc7\xe5\x7e\x68\x30\x16\x58\x8a\x21\xfe\xae\
\x3a\x0f\x8d\x25\xef\x9c\x51\x07\x2d\xa5\x6d\xc2\x85\x10\x55\x44\
\x18\xaf\x8f\x47\x41\x35\xa0\x5c\x62\x77\x0f\xa2\xff\xfb\x00\xfe\
\xfa\x23\x52\x31\x10\x80\xbf\x24\x09\x9f\xe4\xc3\xe9\xe0\x73\xab\
\x4f\x1d\x0f\x2b\x07\xb1\x0e\x0b\x71\x31\xf0\x57\x64\x3e\x73\x71\
\xab\xf9\xc3\x17\xc9\x17\xce\x15\x55\x09\x64\xb6\xec\x08\xee\x44\
\xd5\xfc\xca\x22\x8d\x4b\x25\x48\x25\xa5\xb1\xa1\x72\xb1\x5c\x63\
\x65\x98\x1d\x39\x33\xf3\x68\xe6\x34\x3e\x93\x73\xc5\x13\x8c\x9d\
\x22\x25\x09\xec\xea\xb3\xff\x61\xbd\xfd\x1f\x9b\x94\x14\x8b\x64\
\x88\xcf\x11\xf8\x08\xd7\x26\x07\xf8\x44\x80\x0f\x27\xbf\x64\x60\
\x2b\xdb\xe4\x6b\x0b\x09\x49\x7a\x39\xe8\xe3\x14\xbd\x62\x66\x13\
\xbc\xfd\x74\x85\x4b\x17\x58\xd3\xeb\xe2\x47\x0d\x2e\x43\x38\x0a\
\xd3\xf8\xfc\x1e\x1d\x59\x0d\x3b\xa6\x0f\x74\x94\x44\x01\xe2\xe0\
\x46\x92\xc4\x11\xa4\x0d\x5d\xf0\x95\x0d\x70\xdb\x16\x14\xf0\x20\
\xe2\xcb\x84\xe4\xa3\xac\xd6\x9e\x67\x3c\x95\x7e\x42\x81\xad\xe4\
\xa3\x8f\x17\x45\x5e\xaf\x05\x56\x53\xd4\xcb\x6a\xaa\xc8\xbd\x72\
\x01\x5c\xb6\x08\xaf\x6c\x83\xc6\x2a\x21\xa1\x60\xe3\x11\x18\x9f\
\x3a\x25\x9d\xa8\x89\x78\xb4\xe2\xf7\xb8\x20\x69\x95\x1a\xc3\x59\
\xb0\xf7\x1c\x86\x9f\xec\x80\x7f\xdb\x64\x6d\xde\x2f\x48\xb4\x9f\
\xc4\xff\x00\xfe\x14\xab\xd2\xce\xe3\x05\xc5\xf1\xdf\xfd\x56\x49\
\xf6\xeb\x7c\x36\xe2\x8f\x29\xfa\x32\x02\xd3\x4f\x69\xb1\x2e\x9c\
\x2b\xbf\xfc\x14\x38\x6d\x2a\x34\x56\x8b\x5c\x29\x05\xce\x7c\x64\
\xb4\x2e\x6b\xd7\xe0\xd1\x65\x5f\xce\xa6\xca\xbf\x2b\x53\xc0\xc8\
\x20\x40\x49\x3e\xc5\xd4\x5a\x04\xc7\x71\xd3\x7d\xfd\xe6\xbe\x7d\
\xf0\xe3\x27\xd1\x1d\x3b\x60\x78\x88\x02\x79\x6f\x00\xfd\x1f\x8a\
\xfa\x12\xd7\x69\x00\xe0\xb9\x52\xc0\x89\x03\xb6\xdc\x2a\x1f\x99\
\x8b\x75\x1b\xf2\xd5\xd8\xbf\x4d\x51\x67\x92\xd0\x3c\xbf\x19\x56\
\x4e\x87\xb3\xa6\xe3\x15\xd3\x60\x5e\x3d\xaa\xce\x45\xcf\x1d\xdf\
\x8d\x1d\x0e\xe5\xc8\x1f\xa7\x1c\x1d\x6b\x04\x1e\x0e\x50\xc8\x50\
\x55\xce\xe4\xc4\xc8\xfc\x57\x79\xda\xa5\x90\xe1\xae\x41\xb3\xf5\
\x10\x6c\xe8\x44\xeb\xf7\xc3\x03\xfb\xa1\xe7\x30\x45\x12\x76\x93\
\xea\x07\xd8\x5f\xa2\x3d\x19\x9d\x6a\x19\xbf\xd1\xe4\x57\x0e\xd8\
\xf1\x9e\x7b\xc9\x46\xb8\x74\xf9\x99\x24\xbc\x96\xe0\xd7\x53\x60\
\x19\x62\x7a\x73\x3d\xc9\xbc\x7a\xfb\xb2\x25\xe2\xf2\x25\x52\x4d\
\x6e\xd4\x2b\x8b\xc1\xbe\x7f\xaf\x74\xe7\x6e\x98\xdf\x68\x2f\x69\
\x91\x9a\xaa\xed\xe1\x0c\x76\xf5\xa1\xcd\xdd\xb0\xf5\x10\x3e\x73\
\xba\x78\xe3\x62\x4b\xa5\xac\x41\x82\xae\x01\xfb\x3f\x1f\x83\xfb\
\xf6\xc0\x9e\xc3\xd6\x93\xbd\x22\x1b\xe2\x30\x09\x7b\xc9\xe9\x6e\
\xe4\x6f\x92\x85\xef\xb3\x3a\xb7\xef\xb9\x48\xaa\x13\x5b\x2b\x38\
\xea\x1c\x42\x32\x36\xa8\xfd\x80\x07\x59\x13\x36\x92\xea\xbb\x54\
\x71\x3e\xf8\xe2\x83\xfd\xbc\xfa\x60\x37\x6d\xf9\x9c\x78\xf5\x7c\
\x53\x9b\x1b\xed\x3e\x0c\x14\xa5\x9b\x1f\xb7\xbf\xbd\x19\xa6\xd7\
\x49\xd3\xeb\xa0\x2e\x8f\x0a\x19\x1c\x1c\x82\xfd\x03\xa6\x6f\x40\
\x6c\xec\x32\x6f\x58\x1c\xf7\x55\x95\x9f\xbb\xbf\x1f\xfe\x69\x83\
\x39\x78\x50\x81\x1c\x5d\xa4\x3c\x42\x15\xf7\x80\xfe\x1b\xfb\x3e\
\x56\x25\x4f\x56\x64\x8d\x27\xe4\xd4\x90\x13\x07\x6c\x65\xbb\x7c\
\x14\xe0\x02\xf0\x20\xd7\x7b\x3d\x55\xfe\x06\x39\x7d\x05\xeb\x35\
\xf5\x55\x4e\xa5\xb1\x41\xac\x90\xc1\xee\xbe\xb8\x3d\x6e\x5f\x2f\
\xdd\xfb\x0e\xd1\x0b\xd4\x01\x45\xc4\x21\x12\x35\x90\x30\xe3\xd0\
\x30\xb9\x71\xc1\xcc\x12\xaa\xce\x01\x55\x1e\x26\xd5\xcd\xe0\x4f\
\x62\x3a\x69\x4f\x0e\x1c\x41\x57\xab\x4f\xcc\x5e\xe0\x13\x0f\xec\
\x78\x80\xd7\x06\x58\xad\x00\x74\xb1\xce\x43\x04\x98\xd7\x68\xaa\
\xd2\x23\x94\x55\x4c\xb0\x12\x02\xf2\xf7\xc9\xe9\x1b\xc0\x2c\xf0\
\x20\xb0\x05\xeb\x4a\xe0\x9d\xf9\x44\xf5\x1e\xd7\xe4\xa9\xcf\xc3\
\xc2\x26\xb1\xf7\x20\x26\xf5\x2e\x56\x95\x8e\x5d\x19\x79\xff\x64\
\xec\x64\xcf\x09\xb0\xe7\x7f\xeb\xf6\xe8\x86\xb9\xe9\xe0\x56\x82\
\x35\xa7\x5e\xce\x27\x63\x67\x64\xec\xb8\xec\xc1\x01\x79\x03\xab\
\xf4\x75\x12\x7d\x1e\x25\x5f\x62\x55\xfa\xfd\xd2\x36\xcb\xe0\xca\
\x58\x11\x83\x97\x6a\x73\xf2\xec\x29\x82\x40\x0a\x9a\x3e\xe1\xfb\
\x9f\x60\xfb\xe5\xed\x89\x4f\xc2\x3c\xa0\x01\x89\xd9\x0d\x90\x4f\
\x34\x7e\xcc\x80\x42\x80\xd2\xce\xbf\xb8\x09\xe3\x1a\xf5\xf3\x61\
\x95\x76\x43\x3b\x05\xcb\x51\x0b\x8f\xe9\xa1\xd7\xe4\xcc\x8c\x3a\
\x9b\xa0\x04\xd4\xc2\x9a\x30\xf5\x79\xff\x78\xbf\x34\x60\xd1\x7c\
\xac\x26\xaa\xac\xa9\xd5\xae\x18\x97\x2b\x63\x64\x0a\x71\xc7\x7e\
\xc0\x4c\x30\x28\xe1\x91\x5c\x41\x63\x4a\x66\xa6\x2a\x81\xd6\x5a\
\x95\x1a\x09\x6e\x26\x51\xdb\x0b\x07\x58\xb3\x90\x40\xd3\x8c\x7a\
\x54\xea\xdc\xaa\x92\x29\x03\x23\x2d\x93\xac\x7c\xce\xca\x84\x4a\
\x51\x15\x95\xef\xd2\x64\x79\x2e\x91\x1a\xab\x0d\x39\x27\xa0\x26\
\x12\x5e\x00\x1e\xbb\xa6\xdc\xbc\xf2\x1c\x42\xa8\x5b\xd0\x08\x35\
\x39\x8d\x49\x0a\x4a\xb1\x9d\x62\x64\xd0\x80\x29\x4c\x00\xac\x47\
\x2b\x31\x63\xdc\x56\x52\xec\x02\xe7\xaa\x2d\x82\x9b\xb0\x5b\x4f\
\x7e\x60\x47\x1b\x72\xd3\x09\x4a\xcb\xd3\x2d\xe3\xd3\x95\xe0\x12\
\xc7\xca\x19\xa8\xc0\x51\xb8\xa0\xb2\xf3\x58\x99\xb5\xd5\xe6\xa1\
\xa5\x06\x11\x68\x42\x7a\x81\x70\xec\xda\x6c\x3e\x68\x3a\x41\xc9\
\xa2\xb8\x41\x64\x8c\x14\x2d\x4f\x2c\x96\xce\xb2\x0a\xe0\xc2\xb1\
\xb1\xcb\x68\xf9\xb1\x36\x85\xd6\x1a\x81\xa9\x85\xd0\xfc\xc2\x00\
\x36\x49\x16\x02\x6d\xa4\xd6\xac\x29\x56\x55\x12\xb3\x83\xca\x5d\
\xc8\x0e\x50\x08\x26\x1e\xb7\xa4\x09\xce\x45\x89\xa5\x99\x70\xa4\
\x0f\x83\x71\x6d\x1e\x5a\x6b\x01\x93\xc7\x34\x9e\xdc\xc0\xae\x1d\
\x81\x61\x29\x19\xd3\x1b\x1b\x9c\x34\xd7\x8c\x56\xac\x2a\x0b\xd3\
\x19\x71\x9a\x3a\xca\xad\x09\x3d\x36\xc4\x29\xd6\x89\x84\x7e\xec\
\xb7\x4d\xad\xa1\xa4\x65\x93\x66\x5e\x7b\xfb\x49\x0c\xec\xa8\x38\
\x9f\x4f\xa0\x69\x71\x53\x42\x63\x95\x3c\x51\x85\xb5\x10\xa0\x10\
\x1f\x2e\x42\x32\x41\x9b\x24\x29\x02\x0e\xf6\x84\xb5\xf0\x48\x05\
\x50\x3a\x6b\xb0\x85\x8b\x2e\x68\x39\xb9\xa9\xe0\xc6\x2c\x0f\x9c\
\x42\x46\x6e\x69\x8b\xa9\xaf\x72\x69\xd7\xd7\xd8\x42\x75\xa1\x34\
\x44\x07\x14\x48\x18\x98\xc0\x61\x87\x31\x2e\x37\x0a\x2b\xf3\x60\
\x84\x6b\x72\x68\x6a\x2d\x31\x29\xc6\xad\xcf\xb7\xe4\x7a\xfe\x81\
\x4d\x58\x02\x3e\x05\x48\x17\x35\xe3\xfa\xaa\x8a\x0d\x1f\x15\x54\
\x30\x58\xa4\x8c\x58\x81\x10\x0e\x1f\xa9\xb6\x34\x8c\x08\x99\x47\
\x47\x84\x2a\x7f\x99\x4b\xa0\xb1\x1a\xc8\x91\x62\xb5\xa1\xe7\x57\
\x72\x3d\x7f\xc0\xde\x58\xfa\xf4\x89\x96\x10\x3c\x8f\x1a\x27\xb3\
\xeb\x51\x55\x22\x09\x8f\x95\x05\xb6\x0f\x17\x46\x82\xd1\x10\x24\
\x7d\x13\xe8\xd8\x01\x20\x14\x42\x6c\x26\x96\xe5\x56\xf9\xce\x88\
\x38\xe0\x31\xa5\x96\x84\xe0\x69\x40\xdb\xc9\x09\xec\x48\x65\x5e\
\x8b\xc8\x34\x63\x51\x73\xdc\xd3\x1a\x71\x2c\xed\x55\x74\x39\xde\
\x4b\xbd\xc3\x23\x4d\xf2\x21\xe4\x9e\x92\x4c\xab\x54\x00\x7d\x40\
\x56\x2c\x8d\x15\xa9\x42\xcf\x8e\x8c\xdd\x57\xe3\xe9\x75\x40\xa0\
\x05\x97\xd2\xda\x0e\x9f\x84\x54\xf0\x97\x4e\xc1\xf3\x09\x54\x9f\
\xda\x12\xe7\x01\x26\x8a\x3d\x01\xe8\x1e\x2a\x53\x83\x07\x09\xc4\
\x73\x01\xc6\xee\xaf\xea\x01\x8a\x76\x3c\xc5\xc8\xb2\xd1\x98\x2d\
\x50\x6e\xaa\x42\x33\xeb\x0c\xa6\x1a\x3c\x2d\x96\x2f\x75\x12\x02\
\x5b\xc3\x12\x60\x29\x26\xbf\xa4\x05\x9a\xab\x31\x1a\xdb\xe7\x8a\
\x1e\x6b\x1f\x18\x18\x11\x5f\x03\x74\xea\xd0\x04\x19\x6d\x17\x25\
\xa9\x7b\x70\x28\xb6\xb6\x2b\xa5\x2c\xa0\xe6\x1a\x3c\xbb\x5e\x10\
\xa8\x02\xcf\x63\x4d\x68\x3a\xb9\xa8\xa0\x63\x64\xf3\xd4\x62\x82\
\x97\xa6\x75\xe4\xe6\x34\xe0\xea\x54\xa5\x3a\xd6\xd8\xd2\x4a\xb0\
\xb4\x7f\x60\x24\x5b\xe8\xe1\xd3\x13\x6c\x70\x32\xfb\x81\x02\x36\
\x9d\x03\x63\x9f\x1f\x2b\xe4\xa6\xa1\x4a\xcc\xac\x17\x24\xe4\xb1\
\xe6\x93\x94\xce\xbd\x3d\x69\x80\x1d\x5d\x7e\x8b\x29\x6a\xfa\xb2\
\x66\x98\x39\xa5\x34\x4a\x65\x99\x71\xb3\x04\xc1\x71\x50\x2e\x6a\
\x58\xf6\x8d\xbd\x49\xa5\x48\x35\xa4\x2e\xf0\xb0\x11\x7b\xfb\x2b\
\xb6\xce\x8e\xf0\xac\x9c\x26\xd6\xf4\x29\x50\x5d\xab\x1c\x81\xc5\
\x88\xd9\xe3\x12\x95\x93\x80\x0a\xd6\xb8\x15\x38\x8d\x40\xed\xf2\
\xa9\x66\x56\x3d\xe5\xa4\x49\x63\x85\x12\x2e\x06\xb3\xb3\x57\x20\
\xfa\x81\xed\x63\x6f\x52\xe9\x92\x3f\xaa\x02\xa8\x13\xc4\xf6\x5e\
\x21\xac\xb1\x55\x2e\x94\x20\xcf\xac\xb3\xe7\x35\x18\x32\xa6\x01\
\x73\xc6\x25\x2a\xbf\xc6\xc0\xfe\x45\x29\x92\xa7\x2c\xc6\x9c\x49\
\x9e\x9a\x85\x2d\xa2\xa9\xba\x34\x9b\x55\x51\x38\x29\xb1\xa4\x7a\
\x87\xe5\xfd\xf1\xd8\xb1\x3e\x60\xdb\x53\xbc\xfa\x13\xd8\xc3\x4f\
\x1c\x2c\x6f\x2c\x1f\x97\xc1\x09\x9d\xd2\x10\x27\xc5\x09\xd4\x03\
\xa7\xb3\x26\x6b\x3c\x39\xa8\xe0\xfa\x72\x24\xf7\x42\x8a\x2c\x3c\
\xa5\xc9\x2c\x68\x82\x34\x91\x82\x46\xe5\xeb\x88\x04\xb5\xd8\xd6\
\x63\x0a\x99\x23\xbf\x9a\xc7\x9e\xa2\x9e\xf5\x30\x78\x68\x7b\xaf\
\x7d\xb8\x30\x1a\xc0\xa8\xe0\xd9\xd6\x1a\xb1\xa0\x59\x90\xa3\x0e\
\x73\x36\x29\xf3\xe2\x0a\xca\x4e\x02\x2a\x58\x13\x9a\x81\x73\x08\
\x6e\x5a\x3e\x15\x16\x34\xe2\x38\x43\x5c\x3a\x8e\xc1\xa3\xbb\x66\
\x02\xf8\xe1\xae\x91\x42\x6b\x1f\x8e\x07\xb2\x4f\x68\xd2\xfd\xa0\
\xc1\xc3\xc3\xe8\xb1\xee\xd1\x49\xef\x51\xbe\x96\xf3\xa9\xb5\xb8\
\x05\x66\x34\x22\x32\x2d\x83\x64\xde\xb8\xba\xf0\xaf\x21\xb0\xe5\
\x40\x93\x7a\x01\xc1\xe7\x91\xd3\x94\xa5\x53\xc5\xf4\xba\xd1\xe8\
\x4d\xc5\x19\x06\x92\x1d\x8c\x1e\xd8\x37\x02\xf7\x16\xae\x4d\xfa\
\x8f\xea\x61\x41\xbf\x00\x0d\x17\xe3\x56\x23\xe5\x92\x58\x6e\xac\
\xa4\x82\x54\x70\xea\x54\xbc\xb4\x59\x90\xd1\x06\xe1\x15\x74\x64\
\x2d\xbf\xde\x54\x30\x7a\x0a\xc5\xa9\x64\x2c\x99\xdf\x6c\x96\xb7\
\x42\x2e\x11\xc1\xe5\xb3\x85\xc6\x94\x0c\xd5\x37\x8c\xd7\x77\x96\
\x12\x00\xe9\xe7\x23\xaf\x55\xe9\x61\xe5\x0c\x6c\xb5\xba\x21\x6c\
\xc8\x02\xe1\xae\x3d\x72\x92\xe0\x23\xc6\x38\x25\x66\xd4\x99\xd3\
\xa6\x81\xaa\x55\x4f\xd0\x25\x88\xf9\x63\x6e\xfc\xaf\x15\xb0\xe5\
\x53\xd9\xd7\x79\x36\xe8\x55\x98\xd6\x53\xa7\xc2\xa9\x2d\x38\x51\
\x4c\x0b\xc6\x57\xb4\x12\xe4\xbb\xf7\x98\xbe\x61\x88\x9b\x9f\x7d\
\xdb\xc4\xe5\xc7\xca\x65\x9c\x7c\x0f\x6b\xe8\xd1\x2e\xb3\xa7\xcf\
\x24\xd1\xeb\x47\x9b\x92\x01\xaa\x73\xd2\x39\x33\xf0\xb2\x16\x43\
\xa6\x25\xa0\x57\xb2\x36\xab\xa3\x3d\x89\x07\x47\x9e\x80\xaf\x78\
\x49\x4e\x18\x05\x8c\xcc\x43\x79\x11\x99\x2e\xa8\xab\x53\xf5\xca\
\x19\x72\x6c\x4b\x8f\x16\x5d\xc6\x80\x8b\xb9\x65\xcb\xc8\x28\xe6\
\x4e\x56\xa7\xf7\x1e\x43\xa0\xf9\x0e\x30\x78\xb8\x88\x6e\x7b\x32\
\x6e\x80\x1b\xd3\x03\x03\x72\xc2\xa7\xb5\xa2\x15\xd3\x81\x34\x4c\
\x25\xf0\xe6\x52\x17\x23\x9e\xbb\xd8\x9e\x1e\x77\xef\x3d\xbe\xc0\
\x96\x4f\x3a\x1a\x39\xc9\x33\x9b\x0e\xbc\x99\xc0\x82\xd3\x5b\xe1\
\x9c\x19\x71\xcf\x56\xa8\x08\x5a\xe5\x30\x25\xf0\xf6\xde\xb8\xe1\
\x0d\xd3\x87\x92\x7f\x9f\x90\x06\xc6\xf3\x37\x6c\x84\xf0\xc8\x50\
\xd1\xe1\x07\xdb\xe2\x2d\x49\x92\xb1\xd5\xb2\x62\x40\xf5\x55\xe6\
\xa2\xb9\xf2\xa2\xe6\x04\x02\xa7\x83\xaf\x66\x5d\x98\xc3\xda\x2c\
\x19\xb9\xe6\x4f\x65\xf0\x17\xfe\x15\x03\x76\x5d\x18\x9d\x87\x5a\
\x67\xd1\x11\x9a\xb0\x2e\x23\xe3\xaa\xea\x6a\xd7\xbe\x64\x16\x5e\
\xd4\xa4\xd2\xe9\x51\x63\x37\x17\xc6\x21\x62\xf3\xcf\x1b\xf0\xe1\
\x02\x02\xed\xc7\xe1\xab\xc7\xc4\xdf\xed\x32\xe8\xcb\x98\xf0\xc8\
\x01\xb4\x7e\xbf\x9d\x2f\xf7\xd0\x2a\xbc\x36\x9f\xc0\xca\x36\x38\
\x7d\xba\x03\x39\x4f\x2d\x7d\xd5\xc0\xe7\x10\x97\xb2\x36\x4c\x89\
\xde\x9b\x42\xc3\xaf\x92\xc7\x56\x2e\xfd\x75\xd9\x14\xec\x0b\x81\
\x1b\x30\x9f\x44\xcc\x7b\xe9\x6c\x7c\xe9\x82\xf2\x66\xe0\x8a\xf0\
\x52\xa2\x81\x5c\x62\x3f\xd2\x85\xbe\xb3\xc5\x2a\x7d\xe7\xcd\x4d\
\xb4\xa7\x3b\x8e\x28\x15\x8e\xb7\x72\x6a\x6a\xdd\x0c\x3a\xd8\x3b\
\x2c\xfd\xdb\x26\x5c\x9e\xf6\xae\xf4\xda\x42\x86\x1b\xaa\xac\x37\
\x2d\x95\x7e\x73\x51\x12\xa6\xd6\x09\x89\xcb\x80\xaf\x20\xbf\x97\
\x8e\x52\x27\xf7\x9a\xe3\x53\xfd\x3a\x7e\x35\xb4\x1b\x0a\x90\x4f\
\xeb\x81\xdf\x41\x5c\x27\x98\x57\x93\xc2\x59\x33\xf0\xbb\x57\xc2\
\xb9\xb3\xe2\xd9\x82\xc1\x63\x8f\xde\xb3\xa1\xb1\xc6\xac\xbe\x4d\
\xbe\x69\xb3\xe5\xe0\x1d\x98\x0b\x58\x9d\x6e\x3d\xe6\xf7\xfe\x64\
\x06\x21\xf9\x34\xe6\xcf\x67\xd4\xdb\x7f\x73\x89\xb4\xa2\x0d\xf7\
\x17\xc6\x6e\xde\x13\x76\x6d\x0e\x1d\x1c\x82\x5b\xb7\xc9\x37\x6f\
\x36\x0f\xed\x47\x43\x45\xf7\x82\x3e\x08\xfa\x12\x19\xc3\x5c\xa7\
\x5f\x21\x2a\xa8\x4a\x85\x38\x0f\xb8\x2e\x97\x68\xde\x59\x33\xf0\
\xfb\x5e\x8c\xaf\x39\x57\x3a\x7f\x76\x6c\x12\x94\xbd\xb5\x72\x0b\
\x7d\x3e\xb5\x07\x0b\x62\xc3\x01\xdb\x41\x19\xe8\xd6\x11\x50\x8f\
\xf5\x6b\xad\xae\x49\xc1\xfe\x1c\xd0\x7b\x70\x08\x7d\x6f\x0b\xae\
\x4a\x51\x3e\x6e\x0f\x75\xe5\xc9\x9c\xfd\x45\xd1\x58\x8d\xdf\x7e\
\xba\x75\xed\xf9\xe2\xfc\xd9\x84\x9c\x68\x88\xdf\x7d\xe8\xd9\xa4\
\xbf\x6a\x1c\x1b\x37\x64\x2e\x05\xe6\xd6\xe6\xe0\x55\xf3\xf0\xbb\
\x56\x88\x15\xd3\x62\xb4\x4f\x12\xa8\x4a\x62\xf0\x2a\xef\x29\x48\
\x05\x59\x90\xbe\xf3\x84\xbd\xb3\xcf\x8a\xa9\x82\xbe\x3b\x1a\xf4\
\x44\x02\xfb\x00\x00\x02\x23\x49\x44\x41\x54\xb4\x8e\xe1\xf2\x46\
\x14\x83\xb6\x22\x7f\x6f\xa8\x28\xee\xdc\x05\x3f\xde\x81\xfb\x8b\
\x38\x0b\xb1\xb9\x90\x10\x79\x3c\x11\x0c\x14\xa4\xee\x41\xd1\x52\
\x03\x73\x1a\x50\x1a\xe7\xe7\x9a\x81\xa6\xe7\x76\xb8\xd5\xa8\x1d\
\xbf\xc1\xe3\x38\x3b\xb1\x01\x78\x70\x28\xf3\x59\xb7\x6d\x23\xe9\
\x19\xb2\xcf\x68\xc3\xf3\x1b\x45\x63\x15\xca\xa5\xe5\xa6\x00\x0c\
\x07\x69\xf7\x61\xfb\x9e\x3d\x70\xd3\x26\xd4\x1b\x47\x32\xee\xc6\
\xfc\xf0\x19\xbd\x6f\x59\x31\x88\x22\xe6\x73\xe0\x57\x6c\xec\x62\
\x66\xc7\xcf\xe0\xdc\xd9\xb0\xb4\x05\xcf\xac\x83\x29\x55\x20\xc4\
\x50\x66\xba\x07\x61\x7b\x0f\xda\xd8\x25\x3d\xb8\x4f\x94\xba\x40\
\x77\x02\xdb\x8f\x13\xae\xc7\x91\x63\xaf\x0f\x50\xa5\x3a\xf0\x9b\
\x80\x0f\x91\xb1\x3c\xcd\xbb\x66\xce\x14\x31\xad\x0e\x1a\x6a\xe2\
\x87\xcb\x2b\xee\x84\xe9\x1d\x12\x07\xfa\xcd\xe6\x43\x66\x70\x38\
\x29\x90\x84\xf5\x90\x7c\x90\xf6\xd2\x69\x97\x37\x04\xf8\xc8\x31\
\x2e\xa8\xf2\xd8\xfb\x1a\xe7\x48\xfc\x0e\xe0\x4f\xc9\xbc\x84\x44\
\xf5\xd3\xea\xa0\xa9\xb4\x6b\x5c\xc4\x79\x85\xfe\x22\x74\x0e\xc2\
\xc0\x10\x19\xa2\x8b\x94\x5b\xc0\x1d\xac\x4a\x1f\x3e\x6e\xeb\xf7\
\xb8\x75\x08\xca\xc5\xec\xb5\xa1\x9a\x84\x73\x80\xd7\x13\xb8\x90\
\x8c\xb9\x40\x03\xa2\x86\x94\x6a\x62\xd1\x29\x10\x18\xc2\x3a\x4c\
\xe2\xfd\xf1\x78\x10\xbe\x48\x7b\x72\xd7\x18\xa0\x9e\xcd\x35\xdc\
\x58\x48\xc8\xe5\xce\xc5\xbe\x04\xf3\x1b\x04\xe6\x61\x4d\xc1\xce\
\xc7\xea\x01\x19\x30\x48\xaa\x03\xc8\x0f\x23\xff\x08\xeb\x27\xb4\
\x97\x36\x7c\x7c\x32\x8b\x9c\xfd\x2b\xe3\xb1\xe3\xbf\x10\xb8\xc3\
\xcd\xa5\x8a\xfd\x5c\xf0\x52\xcc\x6c\xa0\x05\x93\x07\x86\x48\xe8\
\x02\xb6\x80\x1e\x02\xb6\xb3\x4a\x7b\x47\xa4\x5b\xfb\xb3\xa4\xfe\
\xca\xe7\xae\xcd\xea\x49\x98\x01\x6a\x02\x9a\x51\xfc\x4e\x0a\xcc\
\x00\xe8\x00\xa2\x07\xbb\x9b\x01\xed\xe1\x2f\x4b\xb2\xf7\xaf\x0c\
\x4f\x02\x9f\xd1\xaf\x10\xb0\xe3\x97\x65\xa5\x7d\x22\xd4\x61\x57\
\x23\x72\x71\xe4\x27\x09\x88\x02\x0e\xfd\xac\x4a\x47\xbf\x8b\xe0\
\x3a\xc3\x8d\xcf\xf1\x92\x8e\xf6\x95\x53\x6b\x8b\x09\x89\x44\x5f\
\x21\xe3\x86\x9a\x23\x7f\x7f\x1c\x37\xcf\x9d\x58\xfb\xf8\x33\xc8\
\xbd\x4f\xd4\xf7\xdc\x3e\x55\x8d\x61\xcd\xe4\xf7\x99\x4f\xda\xa4\
\x4d\xda\xa4\x4d\xda\xa4\x4d\xda\xa4\x4d\xda\xa4\x4d\xda\xa4\x4d\
\xda\xa4\x4d\xda\xa4\x4d\xda\xa4\x4d\xda\xa4\x4d\xda\xa4\x4d\xda\
\xa4\x4d\xda\xa4\x4d\xda\x2f\xc1\xfe\x3f\xfc\xb2\x62\x09\x13\x10\
\x5d\xf1\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\
\x00\x00\x21\xe6\
\x89\
\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
\x00\x00\x56\x00\x00\x00\x79\x08\x06\x00\x00\x00\xa3\xac\xd6\x14\
\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\
\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\
\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\
\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xda\x06\x0b\
\x13\x29\x00\x7d\x16\x65\x8a\x00\x00\x20\x00\x49\x44\x41\x54\x78\
\xda\xed\x9d\x79\x98\x5d\x55\x99\xee\x7f\xef\xda\xe7\x9c\x9a\x87\
\xcc\xf3\x3c\x12\x92\xa0\x0c\x02\xad\x02\x32\xd8\x34\xb6\x82\xa2\
\xed\xd8\xb6\x03\xdd\x76\xdb\xf6\xed\x6b\x2b\xa6\x02\xda\x2a\x48\
\x52\xc1\xe1\xb1\x7d\xbc\xfd\x48\x0f\x5e\x87\x1e\x1d\x9a\x16\xe5\
\xaa\x08\x8a\xb4\x03\x82\x60\x40\x48\x20\x84\x24\x90\x90\xb9\x32\
\x54\x6a\x3e\x67\xaf\xf7\xfe\xb1\xcf\xa9\x3a\x95\x14\x10\x20\x41\
\x0d\xf5\xfd\x55\x75\xaa\xf6\xd9\x6b\xbf\xeb\x5b\xdf\xf0\x7e\xdf\
\x5a\x1b\x46\x65\x54\x46\x65\x54\x46\x65\x54\x46\xe5\x05\x26\x9f\
\xf0\xd0\xcf\xd7\xc6\x51\x3c\x9e\xb3\xb4\xfb\xc9\xff\xb6\x3a\x3d\
\xca\x7f\xbc\xde\xa3\x40\x0e\x03\x35\xad\xc6\x2d\xa1\xdd\x63\x68\
\x77\xed\x10\x5e\x29\x1a\xfc\xc7\xb6\x24\xfb\x70\x55\x9a\x90\xd0\
\x84\x43\x89\x36\x75\x0d\x03\xbe\x4d\xa3\xa0\xb6\x47\x68\x0b\x15\
\x4c\xe6\x83\x5f\x0f\x9c\x0c\x74\x03\x9f\x01\x6f\xa0\x2d\x41\xc3\
\x00\x6b\x77\x0b\xf0\x6e\xf0\xb9\xc0\x7e\xc4\x2d\x58\xff\x8f\x36\
\x1d\x00\x60\x4d\x84\x15\xe1\x85\x0b\xea\xea\x08\x2b\x43\x45\x2b\
\x5f\x86\xf5\x37\xd8\xaf\x42\x2a\x64\x1f\xfa\xef\x41\x1f\x60\x45\
\xe8\x53\x95\x7a\x27\x88\x0b\x41\xff\x0d\xd4\x62\xc0\xec\x20\x70\
\x23\xf6\xdf\xd1\x96\x6c\x38\x42\xbb\x5f\x48\xb2\x2a\xc2\x55\x65\
\x50\xd7\xa4\xe7\x82\xae\x23\xf2\xd2\x49\x4d\xa6\xa9\x20\x3f\xde\
\x89\x06\x52\x6f\xc3\x5a\x4a\x5b\x38\x58\xa5\x7e\xaa\xc1\x3a\x1b\
\xa8\x9d\xd1\xac\x78\xde\x4c\x5c\xc8\x33\x85\xc8\x9f\x21\x7d\x8a\
\xeb\xd3\x53\x81\x0c\xd4\x6a\x1b\xf3\x42\x90\x6b\xd3\x2a\x50\x7d\
\x2a\xe8\x1a\x52\x5e\x3a\xb9\xc9\xb4\x9d\x29\x5f\x34\x0b\x0a\x09\
\x60\xd5\x63\x02\x40\xf5\xba\x16\xd0\x80\x61\x5e\xab\xf5\xe1\xb3\
\xe1\xcf\x96\xe3\xe6\x3a\xe5\x48\x79\x35\xd6\xf5\x5c\x9f\xbe\x78\
\x10\xdc\xd5\x2f\x20\x87\x56\x5b\x31\x95\xe9\x0c\x70\x1b\xa9\xce\
\x99\xd0\x04\xef\x3b\x55\x7e\xf5\x3c\x88\x48\xa5\x28\x40\x7b\x11\
\xe9\x61\xc0\xba\x04\xec\x00\xe8\x2b\x41\x6d\x5e\xfa\x93\x65\xe2\
\xbd\x2f\xc6\x63\x1b\x81\xd4\x17\x10\x59\x45\x7b\x5c\x08\xc0\x4a\
\x65\xcb\xe3\x84\xb7\xab\x29\x5c\x19\x60\x4d\xda\x84\xf4\x5e\x52\
\x2e\x6d\xaa\x35\x57\x2c\x93\x2f\x9a\x2d\x24\x69\xcb\x41\xbb\x3f\
\x35\x88\x87\x11\xa5\xe1\xc0\xda\x45\xe0\x61\x80\x3d\xbd\xf0\xc8\
\x3e\x68\x2e\x58\xaf\x5d\x90\x69\x6e\x4b\xbd\xc0\xba\x18\xf1\x71\
\xda\x3d\x19\xc8\x96\xc7\x35\x27\xb0\x59\x58\x13\x61\x65\x02\xd7\
\xa5\x39\xcc\x65\x44\xfe\x34\x97\xa3\x70\xf9\x62\xfb\x92\x79\xa6\
\x2e\x87\x76\x74\xc1\x8e\x2e\x70\x14\xe0\x5f\x94\x15\x94\xc0\xea\
\xb2\xd6\xad\xcc\x45\x60\x33\xb0\x7f\x77\x37\x5a\xdf\x01\x89\xe4\
\x7c\x40\xaf\x5d\x88\xde\x7e\xb2\xdc\x58\x00\x22\xaf\x47\x5c\xc9\
\x6a\xd7\x01\xd0\x7c\x02\x87\x60\x95\x08\x28\xa7\x65\xa0\x2b\xc1\
\xe3\x5e\x3e\x03\xbf\x7e\xa1\x68\xc8\xa3\x7c\x80\x07\xf6\x9a\x8e\
\x4a\x0c\x60\x7e\x42\x54\x31\x03\x76\xe5\xb0\xf0\x69\x2f\xf0\x83\
\x43\x03\xb0\x7e\x1f\x3e\xd8\x6f\x49\x76\x4d\x22\xde\xb8\x18\x5e\
\xbd\x40\xb1\x26\x90\x23\xc6\x3f\x23\xf8\x5d\xb4\xa7\x09\xff\x3b\
\x9c\xb8\xda\x9a\x85\xa0\x63\x41\x1f\xc4\x5a\x36\x67\x8c\x78\xf3\
\x49\x30\xbd\x49\xb2\x45\x3e\xb1\x7f\xb5\x1b\x3a\x7a\x11\xb0\x0b\
\x78\x94\x95\xc1\x87\x3b\x2f\x40\xfb\x41\xdf\xc7\xf0\xf0\x3e\xeb\
\x81\x3d\xb8\x26\x48\xc5\x68\x37\x16\xd0\x3b\x96\x5a\x2f\x9d\x65\
\x27\x52\x23\xd0\x86\x74\x21\xed\x31\x9b\xae\xeb\x8e\xa3\x33\xfb\
\xf8\x08\xe6\xe6\x1a\x1f\x7f\x6d\x6d\x4f\x0b\xc8\x6f\xc4\xbe\xac\
\xa5\x10\xb9\x7c\x11\x3e\x6d\xb2\x14\x6d\x07\xd9\x1d\xbd\xd2\xfa\
\x0e\xb9\xaf\x68\x20\x7e\x07\xd1\x59\xb9\x3c\x0c\xc6\x68\x00\x6d\
\x2a\x02\xf7\x00\x5b\xb6\x1c\x34\xbf\xdc\x05\xb1\x1c\x2e\xa4\xd1\
\x9e\xd2\x20\x5d\xb1\x3c\xb0\x60\x9c\x4c\x64\x3a\xe6\xa3\x98\xf9\
\x00\x4c\xe9\x3f\x46\x9a\x32\x02\x60\x1f\x1d\x21\x6e\xfe\x5b\x8d\
\x9c\x15\x1d\x33\x72\x25\x02\x3a\x09\xf8\xab\x80\xea\xcf\x9c\x21\
\xbf\x6a\xae\x48\x64\x52\x4b\xb5\x39\x69\xed\x6e\xfc\x58\xa7\xcb\
\x03\xd1\xcd\xa4\xee\xaa\x50\x00\xb9\x41\x27\x34\xe4\xc5\xb6\x80\
\xbe\x36\x50\xe2\x43\x77\xef\x84\x8b\x0e\xc0\x9c\x16\xa9\xaf\x04\
\x25\xe3\x93\xc7\x59\xef\x5e\x26\xaf\xba\x0b\xef\xef\xf1\xd9\x04\
\xda\x58\x1d\xdf\xc7\xbb\x42\xef\x31\x49\x1e\x56\x54\x42\x9b\x28\
\x02\x39\x20\x60\x07\x4c\x0e\x54\x00\x0c\x2a\x22\x97\xc0\x46\xa4\
\x44\xa5\xb4\x85\x38\x98\x6a\xae\x4e\x33\xa7\xf3\x6c\xe4\xba\x14\
\xae\x4e\x20\x4f\x23\xf0\x7e\x22\x27\xcd\x68\x35\x6f\x5e\x0c\x63\
\x6b\x51\x29\xca\x02\x09\xb8\x67\xa7\xd9\xd1\x65\x40\x5b\x40\xbf\
\xe6\xaa\x90\xcd\xec\x87\x54\x06\xb6\x7a\x30\x6d\xe1\x20\xed\xf1\
\x87\xa0\xf7\x3c\xb0\x97\x96\x5f\xee\xb4\xe7\xb6\xa2\x10\xe4\x34\
\xa2\x90\xe0\xf3\x66\xa2\x4d\x9d\xc4\x2f\xad\x95\x7a\x23\x6f\x20\
\xb0\x96\xf6\xf4\xf3\xb4\x25\x1e\x96\xa1\x1c\xd5\x83\x44\xb8\x3a\
\x54\x6b\x6c\x0d\xb8\x01\x98\x85\x59\x86\x99\x8b\x99\x0c\xb4\x00\
\xb5\xd9\xfa\xa1\x0f\xd3\x89\xb4\x1b\xd8\x82\x78\x88\x35\xf1\x21\
\xa0\x97\x34\xf6\xb2\x32\xf1\x11\x79\xfd\xd1\xca\xd5\x09\xac\x4a\
\x05\xbe\x14\x73\x69\x63\x4e\x5c\xb6\x40\x5e\x3e\x01\x45\xdb\xd1\
\x52\x4d\xce\x7e\xac\x53\xfa\xf5\x1e\x31\x50\x12\xe0\xff\xc4\x71\
\x77\xf5\xd7\x0c\x01\x3b\x7c\x86\xef\x03\xff\x57\x57\xbf\xde\x79\
\xc7\x36\x71\xf6\x54\x7b\x5a\x93\xd5\x1f\x45\x29\x4a\x35\x39\xb8\
\x7c\x21\x7a\x64\x1f\xbe\x6d\x33\x4d\x16\x7f\x99\x5d\xc3\x1d\xcf\
\x08\xd4\xea\xdc\xbb\xdd\x8d\xc0\x04\xf0\x45\x98\x73\x30\x8b\x81\
\x99\x92\x27\xe4\x83\x48\x04\x41\x99\xeb\x8d\x86\x14\x28\x19\x62\
\x64\x1f\xf0\x04\xf8\x51\x14\xee\x26\x84\xdb\x59\x93\x3e\x84\x43\
\x27\x6d\x2a\x1d\x71\x9f\xa7\x33\x43\x2b\x04\x41\x33\xb0\xdf\x2b\
\x68\x5d\x36\x05\x5f\x32\x17\x72\xc1\x14\xa3\x04\x50\x13\xa4\x7b\
\x76\xd9\x1b\xf6\x23\x50\x0a\xdc\x46\xc7\xde\xce\xea\xc9\xd4\x11\
\x74\x58\x65\x29\xb7\xc7\xd7\x63\xfd\x63\x63\x2d\xad\x57\xbe\x04\
\x5f\xb6\x00\xa5\x31\x9b\x31\xb0\x0b\x49\x66\x63\x3e\xfa\xd3\xc8\
\xe6\x0e\x44\xa2\x1b\x89\xbc\x97\x95\x61\xe7\xd3\x6a\xca\x6a\x67\
\x09\x46\xf6\x73\x1d\x8a\x33\x90\x2e\x27\x72\x31\xf6\xc9\x49\xa2\
\x71\x4d\x79\xd1\x5c\x63\x26\x35\xc1\xb4\x46\x3c\xa6\x56\xaa\xcd\
\x65\x8a\xd8\x57\x82\x83\xfd\x78\x7b\x37\xda\xd1\x09\x5d\xfd\xd0\
\x55\x84\xfe\x94\x3e\xcc\x06\x02\xf7\x12\x74\x13\x31\xfe\x8c\x34\
\xec\xe5\x6a\xa5\x65\xe6\x0e\xae\x4a\x9e\x8e\x67\xcd\x21\x7f\x9c\
\xc8\x95\x13\xea\xc8\x7f\xf8\xe5\xf8\xdc\xe9\x52\x34\x4e\x8d\xf2\
\xc1\xee\x2d\x4a\x9f\xbc\xdb\xfe\xaf\x0d\x08\xf3\x1d\xd0\x7b\x69\
\xd3\xd6\x91\x35\xb6\x92\xaa\x0e\x06\x08\xfa\x29\xf8\x3b\x5d\xfd\
\xbc\xed\x96\x2d\x70\xfa\x64\x3c\xa3\x49\x1a\x48\xc1\x48\x69\xb4\
\x97\x8e\x97\xfe\x78\x89\xe2\x67\xee\x42\x5d\x03\x7e\x25\x81\x77\
\xb3\xda\xed\xb4\x29\x1d\x06\xde\x11\xb4\xdb\x60\x8a\x38\x05\xf9\
\x35\x58\x6f\xa5\xe4\x53\x0b\x79\x35\x4c\x69\x10\x0b\xc7\xcb\xa7\
\x4f\x36\x0b\xc7\x88\x71\x75\xa8\x21\x8f\x6a\x12\x93\xcb\x54\x96\
\x52\x84\xfe\x88\x7a\x8a\x70\xa0\x0f\x6f\xe9\x84\xfb\x76\xc3\xfd\
\xbb\x63\xed\xde\x2e\x2d\xdf\xd7\xcf\x72\x4a\x3e\x8f\xc0\x9d\xe4\
\xfc\x35\xda\xfd\x13\xda\xb4\x87\xab\x12\xf8\x54\x0a\xfd\x1a\x6e\
\x7e\xaa\xb5\x15\x9f\x0d\xbc\x41\x28\x7f\xe1\x5c\xfb\xf4\x49\x99\
\xf1\x89\xce\xec\x6a\x21\x91\xee\xde\x61\xdf\xbb\x0b\x61\x03\xba\
\x89\x94\x9d\x87\x3f\x66\x6e\xc4\xf8\x6d\x45\x80\x15\xda\x41\x7b\
\xbc\x09\x73\xc1\x3d\x3b\x99\xf2\x93\x6d\xf8\x0d\x8b\x20\x08\x47\
\xa3\xd4\x52\x3e\x31\xe7\xcf\x94\x1e\xec\xc0\xdf\x5c\x47\x03\xf0\
\x76\xe4\xbb\x81\x5b\x46\x04\xb5\x32\xf8\xd5\xce\x23\x4e\x45\xfe\
\x4b\x4a\x7e\x25\x89\x26\xcd\x69\x15\xa7\x4f\xc3\xe7\xcf\x86\xf9\
\x2d\xd0\x5a\x2b\xd5\xe7\xb2\x94\x30\x75\x16\x37\x26\x9b\x1e\x41\
\xbd\x3d\x59\x94\x32\x67\x3e\xa1\xa5\xc1\x6a\xb5\x96\x4e\x10\x2f\
\x9b\x06\xbb\x7b\xe4\x7b\x76\x49\x77\x6c\x8b\x6c\xdc\xcb\xec\xbd\
\x3d\x9a\x8d\x39\x93\x1c\x3f\xa0\x3d\xfe\x3b\xf8\x2e\x3e\x98\xf4\
\x1c\xe1\xe0\xae\x29\x8f\xab\xdd\x8d\xc8\x7f\x4a\xca\x82\x39\xe3\
\xf0\xa5\xf3\xa1\xa9\x20\x0d\xa4\x36\x48\x89\xec\x9e\xa2\x74\xf7\
\x4e\x78\xfc\x90\x01\xdd\x03\xdc\xc5\xd5\x59\x52\x50\xbd\x22\x72\
\x4f\x9a\x6d\x64\x5a\xfb\x43\xe0\xe6\xbe\x01\xae\xf8\xce\xa3\xe8\
\x8c\xc9\xf6\xbc\x56\x14\xcb\x11\x46\x31\xc5\x63\x6b\xd1\xe5\x0b\
\xf1\xba\x0e\x79\xfd\x0e\x16\x90\xf7\x7b\x58\xed\x07\x59\xa9\x27\
\x86\xb4\xa0\x6c\x66\x32\x50\x9b\x48\x7c\x39\x91\x3f\xa7\xc8\x19\
\x63\x1b\x14\xce\x98\x8a\x5f\xb3\x40\x9c\x3c\xde\x8c\xa9\x91\x82\
\x4c\x31\xca\xa5\x0d\x8f\xa8\xf0\xe0\x5a\xd5\xad\xbb\x8f\x9a\x75\
\xf7\x11\x3a\xf6\xa0\x98\xad\xea\x58\xd7\x40\x71\xfe\x22\xf5\x2f\
\x39\x05\x2f\x7d\x11\xe3\x4f\x5e\xee\xf1\xe3\x1a\x35\xbb\xc5\x7e\
\xd9\x34\x71\xf7\x4e\xb8\x75\x0b\x7a\x70\x37\x73\x3a\x7b\x79\x37\
\x09\x2f\x21\xf0\x35\xda\xd3\xaf\xd1\x96\x3c\xca\xca\x04\x3e\x65\
\xe8\x8e\x50\x3f\x18\xa6\xbd\x1a\xf8\xfd\x7c\x62\x5e\xb7\x10\xcf\
\x1f\xa3\x50\x8a\xb6\xd1\xa0\xb6\x3e\xb0\xd7\xfe\xe9\x13\x28\xa6\
\x02\xf8\x36\xd2\x23\x83\x78\x55\x99\x19\x3d\x2d\x4b\xbe\xc6\x17\
\x11\xfd\xf9\x24\x61\xe1\x9f\x2c\x95\xdf\xf3\x22\x54\x08\x76\x8a\
\x84\x33\x0d\x36\xd6\xb7\x37\x2a\x7e\xe6\x2e\x42\x67\xaf\x0f\x90\
\x57\x3b\x25\x3e\xcd\x55\x2a\x71\x5d\x84\x1a\xc1\x07\x05\xab\xd3\
\x09\x24\xe1\xbd\xa4\x7e\x07\x91\xd9\x8b\xc6\x9b\xcb\x16\xc9\xaf\
\x98\x29\x26\xd5\xa3\x10\xa0\x94\x66\x0f\x52\x7f\xeb\xcd\xb4\x7c\
\xf5\x0b\xe4\x1f\x7d\x98\xd0\xd3\x05\xc5\xe2\x11\x83\x75\x92\xe0\
\xda\x3a\xd2\xd6\xb1\x74\x5d\xfa\x26\x3a\xff\xe8\x1d\x68\xfc\x04\
\x92\x00\x7d\x25\x7b\xfb\x21\xf8\xf1\x36\xb8\x65\xb3\xb4\x7e\xaf\
\x89\x25\x3a\xc9\xf1\x43\xc4\x97\x28\xe9\xbb\x5c\xad\x81\x2a\xff\
\x32\x05\x85\x7f\xa6\x18\xff\xe0\xac\xd9\xf8\x23\x67\x89\xe9\xcd\
\x99\xe9\x13\x95\xe7\x44\xff\xbe\xce\xfe\xdc\xbd\x68\xa0\xc4\x43\
\xc0\x9f\xd3\x16\x7e\x3c\x52\x11\x20\x37\x22\xb0\x6d\x61\xa8\x14\
\x63\x7e\x8a\x7c\x63\x9a\xea\xaf\xbf\xb7\xd9\xb5\x67\x4e\xc1\x67\
\x4d\x95\x62\xcc\x26\x32\x1a\x25\x41\x3e\x77\x86\x75\xdf\x1e\x7c\
\xe3\x7a\xb7\x12\x79\x2b\x81\x3b\x81\x1f\x0f\xda\xb2\xd5\x9e\x4e\
\xe2\x0f\x51\xf4\x5b\x48\x18\x77\xce\x1c\x78\xdb\x12\x79\xd9\x04\
\xa8\xcb\x59\x69\x94\xd3\x14\xe5\x37\x6d\x54\xe3\xcd\x5f\xa7\xe1\
\x3b\xdf\x20\xb7\x7d\x2b\x4f\xc5\x44\x28\x4d\x51\x77\x17\xa1\xbb\
\x8b\x96\x2f\xff\x3d\x85\x87\x1f\xe0\xd0\xe5\x7f\x4c\xdf\x69\x67\
\x39\xd7\xd0\xa8\xd9\xad\x30\xa9\x11\xbf\x68\xa2\xfd\xbd\x4d\x70\
\xcb\x16\x9a\x3b\x0e\x71\x29\x09\x27\x91\xf3\x72\xda\xe3\xff\xa5\
\x2d\x6c\x2b\xa7\x4a\xaf\x27\xf5\xef\x35\xd6\x89\x4b\xe7\xe1\x69\
\x4d\x99\xb6\x2a\x33\xad\xe4\x13\x6b\xd3\x01\xf9\xb6\xc7\xc5\x40\
\xc9\x00\xb7\x20\xaf\x1d\x71\xa5\x1f\x99\xd2\x56\xcb\x60\x36\xd6\
\x83\xf4\x2f\x48\x6b\xb7\x1f\x82\xff\x7c\x08\x0e\xf4\xdb\x41\x92\
\xcb\x49\x52\x1a\xd1\x98\x5a\xf4\xda\x05\xb0\x68\x82\xa0\xc8\x62\
\xe4\x77\xd1\x1e\x27\x96\x41\x9d\x43\xe2\x6b\x28\xf2\xce\x9a\x3c\
\xe3\x5e\xbf\x18\xff\xaf\xd3\xf0\x69\x93\x44\x6d\x2e\xe3\x32\x0d\
\xca\x6f\x7a\x84\xb1\xd7\x7f\x98\xe6\x7f\xf9\x87\xa7\x05\xf5\x70\
\x09\xdd\x5d\xd4\xff\xf8\x07\x8c\xfb\xc4\x87\xa8\xbf\xe3\x56\xb9\
\xbb\x9b\x52\xb4\x6b\x13\xb4\x7c\x02\x5c\x71\x0a\xfc\xcd\x19\xf8\
\xd4\xe9\x08\x7b\x11\xa9\x3f\x40\xf0\x67\x59\x93\x9e\x49\xbb\x97\
\x62\xde\x40\x4a\xf3\x79\xb3\xe4\x33\xa7\x48\x60\xec\x0c\xd4\x20\
\x7b\x20\x15\x77\xed\x30\xeb\x3b\x2c\xcc\xa3\xc8\xb7\xb0\x22\x39\
\x78\x44\x71\xf1\x69\x81\x6d\x4b\x86\xd2\xcb\x01\x3d\x80\xfc\xcf\
\xd8\x7b\x7f\xbe\x1d\xdd\xb4\x11\x72\x21\x73\x2c\x95\x21\x44\x8b\
\xc5\x63\xc5\x6b\xe6\xcb\xf5\x75\xe4\x29\x71\x3e\xe2\x62\x56\x79\
\x1e\x89\xaf\x66\xc0\x6f\x6e\xac\xa1\xf1\xad\x4b\xf1\xbb\x96\xc1\
\xdc\x96\xb2\xd2\xc5\x6c\x7a\x24\x68\xbc\xf9\xeb\xd4\xfe\xea\x17\
\x84\x9e\x6e\x9e\x0d\x67\xa6\x52\x91\xfc\xf6\xad\x34\x7d\xf3\xab\
\x24\x1d\x7b\x00\x29\x2d\x07\xf5\x63\xeb\xa4\x8b\x66\xc3\x95\x2f\
\xc1\x6f\x3e\x19\xd7\xd6\xa8\x85\xa2\x5e\x0b\xfa\x34\xc1\x9f\x25\
\xd5\xa9\x13\x9a\xa5\x57\xce\xb6\xc7\xd7\xa1\x34\x32\x98\x5b\xe7\
\x82\xb4\xab\xdb\xfe\xee\x66\xe8\x2b\x02\xf2\x1d\xa0\x9f\x8d\x18\
\x4d\x3d\xbd\xc6\x56\xa5\x97\x1f\x11\x44\xbe\x85\xf4\xfd\xde\x7e\
\x8a\x37\x3e\x82\xd6\xee\xc6\x85\x04\xd9\xb6\x32\x93\x40\x3e\xc0\
\x05\x33\xe1\xac\x69\x18\x34\x09\xf8\x00\x09\x5f\xa0\xc8\x6b\x9b\
\x6a\x55\xfb\xb6\x65\xf8\xcd\x27\xc1\x94\x86\x6c\x4a\xa2\x33\x6f\
\x2b\x41\xfd\xad\x37\xd3\x70\xf3\x37\x51\x4f\xf7\x73\x27\xfc\x7f\
\xf9\xf3\x0c\xdc\x7d\x19\xb8\x2e\x73\x1d\x49\x90\x16\x8d\x85\x2b\
\x4e\x11\x2b\xce\x94\xe7\x8c\x27\x50\xe4\x6c\x22\xe7\x91\xaa\xe1\
\x82\x59\xf6\xa9\x93\x50\xea\x2c\xa4\x2c\x3b\x21\x0f\xa4\xf0\xb3\
\xed\xb0\xbe\x03\x61\x36\x01\xdf\x66\x45\xd8\xff\x64\xda\xfa\xf4\
\xc0\x56\x13\x1b\x2b\xc3\x1e\xc4\xe7\x08\x3c\xbe\x69\xbf\xf8\xca\
\x83\xd0\x35\x20\x07\xa1\xf2\xdc\x3a\x35\x9a\x58\x6f\x5d\xb6\x50\
\x4c\x6b\x25\x47\xd1\x4b\x49\xfd\x8a\xc6\x1a\x8d\x79\xf3\x52\xf9\
\xf5\x8b\xc4\xb8\x3a\x91\x5a\xca\x16\x5a\x06\x6a\x7e\xd3\x23\x34\
\x7f\xe5\x0b\xcf\x78\xf9\x3f\x95\xe6\x36\x7d\xe3\x2b\xd4\xde\xf5\
\x13\x42\x6f\xf7\x60\x88\xe3\x8a\xf6\xd6\x4a\x97\xcc\x81\x8f\xbf\
\x14\x5f\x38\x5f\x81\x7e\x92\x29\x63\xec\x0b\x67\x43\x63\x21\xd3\
\xf2\xca\x77\x25\xc1\xda\xd7\x87\xbf\xbd\x11\x7a\xfb\x0d\xe2\x4e\
\xc4\xed\x4f\xa5\xad\x47\x07\x6c\xc5\x91\x65\x91\xf9\x2f\x09\xfa\
\x34\xb8\xf3\x8e\x6d\x51\xff\xf1\x90\xa9\xcd\xa9\x3c\x6c\x64\x63\
\x09\x5e\x3c\x11\xce\x9f\x05\x48\xa1\x20\x92\xcb\x16\x9b\x37\x2c\
\x82\x71\xb5\x56\xb4\x45\x15\xa8\x00\xf9\x07\xd6\x92\xdf\xb2\x11\
\xf9\xd8\x51\x81\xc9\xc1\x03\xd4\xdc\xfb\x0b\xe8\xee\x46\x65\xd6\
\xa4\x72\xc7\x52\xb4\x73\xc1\x5a\x32\x5e\xbc\xff\x0c\xfc\xe9\x3f\
\x80\x4f\xbc\x1c\x96\x8c\x57\xa6\xad\x1e\xd2\xd6\x34\x8a\xdb\x1e\
\x33\x1b\xf6\x21\x08\x8f\x22\xbe\xc6\x8a\xe4\x29\xb5\xf5\xc9\xa3\
\x82\x23\xc0\x2d\x23\x70\x75\x2e\xb2\x26\x7e\x1d\xf9\xa5\xfd\x03\
\xfa\xa3\x1b\x1f\x21\xb7\x78\x9c\x39\x6f\x06\xee\x1e\x90\x24\x94\
\x5a\x34\xe4\xe1\x75\x0b\x21\x1a\xea\x73\xd9\xcf\xe3\xeb\x21\xcd\
\xa8\x5b\x4b\x99\x62\x66\x86\x00\x6a\xd6\xdf\x87\xba\xbb\x8e\x39\
\xa5\x5a\xf3\xe0\x5a\x92\xde\x2e\x4a\x4c\x1c\xbc\x17\x40\x08\x92\
\x8d\x31\x9a\x54\x6f\x26\xd4\xc9\x80\x82\xa0\x62\xda\xca\x21\x96\
\x76\xf7\xe0\x9b\x2a\xda\x1a\xf8\x05\xe8\x47\x4f\xa7\xad\x47\xa7\
\xb1\x87\xf3\xa4\x2b\xc2\x5e\xd0\xa7\x08\xda\xb2\x75\x3f\x7c\xf5\
\x01\xbc\xad\x53\x2a\x24\x2e\x5b\xcc\x2c\xae\x9d\xde\x24\xfd\xc5\
\x8b\xe4\x77\x2c\x93\xc7\xd7\x4b\x69\xac\x68\xea\x70\x50\x33\x00\
\xee\x43\xfd\x7d\xc7\x1c\xd8\xc2\xc3\x0f\x12\xca\x36\x3b\x63\x38\
\x86\xee\x59\x19\x07\x88\x24\xa0\x24\x0c\x65\x45\x95\x08\x3f\x62\
\x6e\x7d\x0c\x1e\x3b\x88\x10\x8f\x20\x7f\x89\x15\xea\x3c\x1a\xee\
\xf7\xe8\x81\x5d\xa1\xea\xec\x6c\x2d\x8e\x1f\x21\xd0\xfd\xf3\xed\
\xe8\x8b\xbf\x26\xa6\xce\x06\x67\xa3\x18\xb3\x51\xd7\xe5\x51\x6d\
\x2e\x1b\xa9\xc9\xd6\x62\xc5\xd7\x0e\x9a\x81\x4d\x8f\x90\xec\xdb\
\xc3\xf1\xa8\x9c\x85\xfe\x3e\xf2\x8f\x6e\x18\x74\x88\xaa\xba\x49\
\x05\xe4\x0a\xe0\xd5\xbf\x0f\xfd\x93\xd8\xd3\x63\x0d\x44\x03\xda\
\x81\xc2\x2f\x07\xd3\xe1\xa7\xa1\x23\x9f\x79\xc1\xaa\x32\x53\x91\
\x6f\x23\xfd\x1f\x22\xc5\x5b\x1e\x43\xdf\xdf\x0c\x0d\xf9\xca\x52\
\x3b\x72\xc0\x41\x20\x83\x0f\x43\x50\xbd\x3d\x99\xcd\x38\x4e\xa2\
\xde\xee\x8c\x1b\x3f\xfc\x73\x0d\xff\x59\x23\xcc\xac\x81\x62\x2a\
\x6c\x81\xdc\x43\xcc\x4a\xdb\x47\x43\xa2\x3f\x73\x60\xdb\x42\x36\
\x63\x57\x25\x3d\x38\xfe\x2b\x81\xcd\x9d\xfd\x68\x4f\x2f\x4e\xc2\
\xf0\x47\x38\x62\xc0\x82\xdf\xa9\x9a\xae\xa1\xb3\x68\x52\x3b\x05\
\x1d\xa8\x34\x63\x1c\xd5\x6a\x79\x56\x37\xac\xcc\x98\xc2\x00\xf6\
\x01\x63\x4a\x65\x12\x58\x1e\x49\x3f\x9e\x5c\x8a\x73\xe6\x13\xeb\
\xea\x8f\x1b\x36\xc5\x39\x0b\x70\x5d\xc3\x30\x2d\xac\x1e\x60\x65\
\x55\x55\xff\x9e\x3d\x87\x1d\x81\xdd\xdd\x82\xa8\x7e\x60\x07\x49\
\x3c\xce\xc0\x0e\x69\x60\x09\xa9\x37\x8d\x66\x20\xad\xd2\xca\x67\
\x80\xac\xeb\x1b\x28\xce\x5b\x88\xf3\xf9\x63\x0f\xea\xcc\x39\xa4\
\x63\x27\x0c\x2e\x1b\x3b\x5b\x31\x56\x15\x80\x87\xd9\xd9\x41\x33\
\x21\xa9\x73\xc0\xde\xdb\x67\x88\xf4\x22\x3d\x86\x63\xe9\xf9\x01\
\x16\x0f\x00\x87\xb0\xe8\x2d\x41\x74\x59\x17\x34\x7c\xf6\x07\x35\
\x63\x04\x6d\x01\x18\x38\xf9\x94\xe3\xa2\xb5\xfd\x27\x2d\xc7\x0d\
\x8d\xc3\x9c\x95\x5d\x2e\x47\x66\xe4\x35\xa5\x38\x7c\x9c\xaa\x84\
\x5c\xc0\xe6\x03\x70\x28\x0b\x56\x7a\xc0\x0f\x73\x65\xfe\x79\xd2\
\x58\xbb\x0f\x38\x40\x84\x9e\x12\xee\x4f\x5d\x8e\x00\x18\x16\xe2\
\x0c\x7a\xdc\x2a\x6d\xa9\x7e\xd0\xfe\x93\x5f\x44\x6c\x6e\x3d\xe6\
\xc0\x0e\x9c\x72\x3a\xb1\xbe\x61\x38\xa8\x54\x6a\x67\x70\xcf\x2e\
\xf8\xe2\xfd\xb0\x76\x57\x36\xb6\x2a\x7f\xa0\x10\xf0\x03\x1d\xa2\
\xb3\x08\x04\x1f\x04\x67\x6d\xac\xff\xee\xe7\x01\xd8\x48\x37\x68\
\x17\x98\xce\x01\x73\x68\x20\x2b\xfa\x1d\xae\xad\x15\x25\xd6\x61\
\x04\x70\xe5\x81\x07\x96\x9c\x42\xd7\xa5\x6f\x24\x6d\x6c\x3e\x66\
\xa0\x76\x9f\x73\x11\x3d\x2f\xbf\x10\xd7\x37\x0e\x03\x55\x82\x7c\
\x02\x0f\xef\x83\x1b\xee\x85\x1b\xee\x84\x1f\x6d\x3d\x7c\x4c\x22\
\x8d\xe6\xfe\xdd\xa6\xaf\xe8\x12\xd2\x06\xac\xbd\x00\xac\x7b\x3e\
\x80\x5d\x99\xf4\x80\xb7\x01\xec\xef\x45\x1d\xe5\xc8\x00\x0f\x8f\
\x06\x82\xa0\x3f\x85\xde\xe2\x20\x69\x3c\xdc\x44\xd4\x37\x70\xe8\
\x8f\xde\x41\xdf\x59\xe7\xe0\x42\xe1\x98\xd8\xd6\x83\xef\xfc\x2b\
\x4a\x33\xe7\xe0\x32\x43\x5d\x99\xdc\x7c\x80\x2d\x07\xe1\x2b\x0f\
\xc2\xaf\xb6\xc3\xe4\xf1\x70\xda\xe4\xe1\xab\x2b\x01\x36\x1d\x90\
\x36\x1d\x40\x44\x75\x21\x7e\x44\x2c\x6f\x1b\xb8\x36\x1c\x67\x60\
\x07\xfb\x63\xbd\x15\x89\xdd\x3d\x62\x47\x97\x95\x0f\x43\xba\x6a\
\x67\xda\x71\xa0\x1f\xfe\x65\x1d\x7c\xf8\x27\xf0\xbd\xcd\x59\x95\
\x35\x17\x86\xb4\xd7\x86\x74\xec\x04\xba\x2e\x7f\x2b\xa5\xf1\x93\
\x9e\x33\xb0\x5d\x97\xbe\x89\xe2\xe2\x93\x71\x48\x06\xed\x52\x28\
\x6b\xea\xe6\x83\xf0\x0f\x6b\xe1\x7b\x8f\x42\x7d\x1d\xfc\xf1\x12\
\xf8\xbd\xa9\x43\x3e\x40\x82\x7c\xb0\xef\xd8\x66\xef\xec\x06\x02\
\x07\xb2\xb2\xbe\x9e\x51\x9b\xcd\xb3\x07\x76\xa8\x58\xb8\x1d\xb1\
\x75\x57\x37\x3c\xd6\x89\x93\xc3\x4a\xea\x39\x41\x4f\x31\xb3\x63\
\x3f\x7a\x14\x3e\x75\x27\x7c\xee\x1e\x78\x74\x7f\xa6\x42\x49\x55\
\xac\xdb\x7b\xea\xd9\xec\x7f\xff\xdf\xd2\x7b\xf6\x79\xcf\x4a\x73\
\x8b\x33\xe7\xb0\xef\x7d\x2b\x39\xf4\x9a\x37\x11\x1b\x9a\x06\xb5\
\x34\x57\x7e\xca\x7b\x77\xc1\x67\xef\x86\x6f\x6f\x80\x9a\x1c\xbc\
\xed\x64\x78\xd5\x7c\xa8\x19\xc2\x9f\x24\xd8\xbb\x7b\xa5\x9f\x3d\
\x61\xfa\x07\x3c\x80\x7c\x07\xd6\xe6\xc1\x62\xe1\xd1\x92\x40\xcf\
\x59\x3d\x2e\xfc\x98\x90\x5f\x1c\x4b\x5a\x3c\xa5\x49\x9c\x36\x39\
\xab\x66\xc6\x32\x2b\x10\x9d\x65\x64\x13\x1b\x60\x77\x1f\x6c\xdc\
\x0f\xeb\xf7\xc2\x2f\x76\x42\x77\x11\xa6\x34\x42\x7d\xbe\xac\xc1\
\xf9\x02\xa5\x69\x33\xe8\x7b\xc9\x4b\x71\xbe\x40\x7e\xd3\x06\xc2\
\x51\x72\x08\xdd\xe7\x5c\xc4\xbe\xf7\x7f\x94\x9e\xf3\x2f\xc6\x63\
\xc7\x11\x82\xb2\x0c\x10\xd8\xd7\x07\xdf\xda\x08\x5f\xf8\x15\xdc\
\xbb\x1d\x1a\xeb\xe0\x9d\xcb\xe1\x8d\x8b\x61\x4c\x2d\xa4\x55\xa6\
\xa2\x2e\x27\x7d\x6b\xa3\x7d\xf3\x26\x69\x20\xa5\x0f\xe9\x63\xb4\
\x85\x07\x01\xb8\xed\x9a\xe7\x11\xd8\xf3\x3f\xd6\x85\x98\x89\xb8\
\x10\xc1\xc9\xe3\x61\x5a\x93\x54\x8c\x55\xc4\x07\x30\xbd\x09\xce\
\x98\x02\x75\x79\x78\xfc\x10\x3c\xd1\x09\xbf\xde\x09\x3f\xda\x06\
\x1d\xbd\xd0\x5c\x03\x8d\x79\x50\xa1\x80\x5a\x5a\x29\x2d\x5a\x42\
\x71\xde\x22\x4a\xe3\x27\xe2\x10\x08\x07\xf6\xa3\xb4\x74\x84\x86\
\xf6\x9e\x75\x2e\x5d\xaf\x7b\x2b\x5d\x6f\xb9\x82\xd2\xe2\xa5\x24\
\xb5\x75\x99\xf3\x31\x1c\xe8\x83\xdb\xb7\xc2\xe7\xef\x85\xef\x6c\
\x80\xdd\xdd\x30\x73\x2c\xfc\xe5\xa9\x70\xd9\x02\x68\x2a\x94\x41\
\x2d\x8f\xb3\x90\xc3\x3b\xba\xd0\x3f\xde\x67\xb6\xec\x0b\x91\xc4\
\xdf\x03\xdd\xc0\xad\x1f\xef\xa6\x3d\x85\x5b\x8f\x1e\xd8\xe7\x96\
\x61\x56\x0a\x8e\x6b\xe2\x79\x58\x5f\xa9\xcf\x79\xc6\x5f\x9c\x8a\
\xdf\xb5\x4c\xea\x4b\x19\xac\x1b\x57\xc0\xcd\xca\x38\xb0\xbe\x03\
\xfe\x6d\x3d\xfc\x7c\x1b\xec\xef\x83\x3c\xd0\x5c\x80\x39\xe3\xe1\
\xa5\x53\xe1\xf4\xc9\x30\xad\x11\x6a\x8a\xdd\x14\x7a\xba\xc8\xf7\
\x75\x93\xf4\x76\x53\xf3\xe8\x06\xd4\x9b\x95\x6d\x06\xe6\x2e\x20\
\x8e\x9d\x40\x6c\x68\xa4\x58\xdb\x40\x5a\xdb\x40\x51\x81\xbe\x14\
\xb6\x76\xc2\x4f\x9f\x80\xff\xd9\x0a\x5b\xf7\x65\x15\xee\x9a\x02\
\x9c\x33\x1d\xde\x7e\x72\x36\xf9\x94\xe3\x58\x54\x89\x6b\xed\x9a\
\x44\xfa\xfc\x5a\xfc\x4f\xf7\x45\x95\x52\xf5\x20\xde\xc8\x8a\xf0\
\x9d\x67\x97\x3b\x1d\x0b\x59\x1d\x9b\x11\xd7\xcb\xbc\xe7\xc5\x53\
\xf1\xca\x97\x88\x25\xe3\xad\x9e\x92\x86\x00\xad\x5a\x6e\x95\x98\
\x76\xdd\x5e\xf8\xef\x8d\x59\xd9\x63\x6f\x0f\xf4\x97\x20\x6f\xa8\
\x09\xd0\xd4\x08\x4b\xc6\xc1\xbc\x31\x30\xa3\x09\x26\xd4\xc3\x98\
\xb4\x9b\x1a\x99\x20\x28\xd5\xd5\x53\x72\xa0\xab\x98\x69\xfc\xd6\
\x43\xb0\x61\x3f\x3c\xb8\x17\xf6\x75\x66\x51\x48\x29\x64\x5a\x79\
\xd2\x78\xb8\x7c\x21\x9c\x33\x03\xea\x72\x90\xc6\x21\x47\x95\x8d\
\xcb\xae\xcb\x4b\x77\x6c\xb5\x57\xdd\x29\xb6\xee\x8f\x22\xa7\x1b\
\x88\x6e\xa3\x2d\x39\xc0\x9a\x14\x56\x24\xbf\x09\x60\x0d\x81\x4b\
\xb0\xff\xa9\x2e\x30\xe5\xcd\xcb\xe4\xf7\x2c\xb7\x6a\x73\xf2\x40\
\x9a\x69\x6d\x35\xb8\xd5\x00\xe7\x03\xec\xec\x86\x3b\xb6\xc1\x8f\
\xb7\x66\x5e\xfb\x60\x1f\x74\x97\x20\x2d\x41\x88\x10\x2a\x09\x46\
\x28\xa7\xcc\xa1\xfc\x5d\x11\x5c\x06\x29\x02\x31\x40\x48\xa0\x29\
\x0f\x63\xeb\x60\xc9\x04\xb8\x64\x4e\xb6\x02\x6a\x73\x50\x4a\x8f\
\x4c\x5e\x00\x6a\x12\xb3\xb5\x53\xbe\xf6\x4e\x7c\xe7\xe3\x0e\x0e\
\xac\x47\x7a\x0b\x2b\xb4\xf6\xd9\x67\xfb\xcf\x55\x56\x19\x76\x97\
\x60\x52\x52\x83\xf4\x71\xf0\x8a\x71\xf5\xf8\xfd\xa7\x8b\x3f\x9c\
\x97\x15\x1b\x4b\x51\xaa\x66\xba\x8e\xc8\x84\xc8\x42\xa1\x10\x60\
\xfb\x21\xb8\x7f\x4f\xa6\xcd\x9b\x0e\xc2\xee\x9e\x2c\xaa\xe8\x4f\
\xb3\xf4\xb3\xe4\x21\xd3\x12\xca\x13\x53\x48\x32\xdb\x3d\xb6\x16\
\xe6\xb7\xc2\x29\x13\xe1\xc5\x93\x32\xc7\x38\x50\xca\xae\x8b\x95\
\x95\x52\x65\x53\xc9\xe2\x5a\xef\xef\x43\x9f\xb9\x07\xdf\xbc\xc1\
\x4a\x71\x37\xd2\x15\xac\x08\xff\x91\x11\xfc\xcf\x6e\x37\xe6\xb1\
\x63\xf1\x56\x1b\xe4\x85\xe0\xbf\x03\x5d\x3c\x67\x8c\xfd\xd7\xa7\
\x89\x73\xa7\x67\x70\xa6\x59\x03\x99\xcb\xb5\xb1\x61\x9c\xa8\xc9\
\x34\x4f\x40\x92\x64\x21\x5a\x3e\xc9\x00\x3f\x54\x84\x3d\x3d\xd9\
\x72\x3f\xd8\x07\x3d\x65\x80\x03\x50\x93\x87\xe6\xb2\x76\x4e\xaa\
\xcf\x3c\x3c\x40\x31\xc2\x40\x3a\x44\xf3\x0e\x26\x2b\x43\xa0\x1a\
\x50\x2e\xd8\xfb\xfb\xd0\x3f\xdc\x87\xbf\xfe\x90\x54\x8a\x44\xe0\
\x63\x84\xf8\x49\x3e\x94\x3c\xa7\x92\xc6\xb1\x01\xb6\xe2\xc4\xda\
\x2d\xc4\x79\xc0\x67\x49\xbd\x7c\xde\x38\xf3\xe7\x2f\x92\xcf\x99\
\x21\x0a\x01\x52\x5b\x76\x06\xee\x48\x6c\x7e\x35\x49\xe3\x32\x05\
\xa9\x90\xc5\xba\x95\xfe\xd8\x61\xd7\x55\x92\x8b\x98\x79\xf7\xe8\
\x23\xca\x2f\x0c\xe3\x7d\x9c\xf5\x40\x24\x48\x21\xc0\xf6\x2e\xfb\
\x8b\x0f\xd8\xff\xbd\x41\xa1\x54\x22\x45\xdc\x40\xe4\x23\x5c\x15\
\xf6\x71\x7d\x84\x0f\x85\xdf\x30\xb0\x95\xca\x42\x5b\x80\xd5\xc5\
\x40\x48\x5e\x0d\xfa\x04\x25\x2f\x9d\xdc\x02\x6f\x5d\xa2\x78\xd1\
\x6c\x6b\x62\x7d\xf6\xa8\xe5\x1e\x8d\x61\x89\xef\xa0\x69\xa8\x5e\
\xae\xf0\xcc\xc8\xdd\x11\xca\x2f\xd5\xbf\xa9\x0c\xe8\x40\x6a\xaf\
\xeb\x80\xaf\xae\x83\xdb\x37\xa3\x88\xfb\x10\x5f\x21\x86\x8f\xb2\
\x52\x3b\x9f\x71\x57\xfa\x71\x05\xb6\xda\x1e\x7d\xa2\x24\xf2\xba\
\x18\x58\x49\x49\x67\xd7\x16\xc8\xbd\x62\x36\x5c\x32\x17\x2f\x1b\
\x0f\xcd\x05\x21\xa1\x68\xe3\x41\x18\x8f\x2c\xf8\x1d\x41\xe4\x3c\
\xc9\xe7\x87\x5f\x7b\x98\x93\xb4\x64\x95\x89\x15\xef\xec\x86\x9f\
\x6c\x83\x6f\x6c\xb0\x36\xee\x11\x04\xed\x21\xf8\x8b\xe0\x4f\xb1\
\x22\xd9\x7b\xcc\x4a\x42\xc7\x9c\xab\xab\x36\xf6\x6b\x7c\x2a\xe2\
\x7d\x94\x7c\x09\x91\x89\xd3\xc6\x58\xe7\xcc\x90\x5f\x3a\x0d\x4e\
\x1a\x0b\xcd\x35\x22\x57\x4e\x81\x53\x1f\xe9\xad\x43\x79\xf9\x47\
\x0f\x2d\xfb\x0a\x2f\x59\xf9\x5b\xc5\x04\x0c\x36\x02\x94\xc3\xa7\
\x2c\xb5\x16\xd1\x59\xbb\xe9\xee\x1e\x73\xef\x6e\xf8\xf1\xe3\xe8\
\xa7\xdb\x60\xa0\x9f\x22\x79\xaf\x03\x7d\x81\x92\xbe\xcc\xd5\xea\
\x05\x78\xae\x26\xe0\xf8\x01\x9b\x01\x5a\xd5\x17\xeb\xf1\xc8\x6f\
\xc0\x7e\x13\x25\x2d\x27\xd0\x3a\xab\x15\x96\x4d\x84\x53\x26\xe2\
\xa5\x13\x60\x66\x23\xaa\xc9\x65\x9a\x5b\x0d\xac\x0d\x03\xb1\xe2\
\xf9\x87\x1a\xf1\x4a\x11\x0f\x44\x28\xa6\xa8\x90\x33\xb9\xac\xa7\
\x4e\x15\x92\xda\x48\xc5\x14\x77\xf4\x99\x2d\x07\x61\xdd\x5e\xf4\
\xc0\x1e\xb8\x6f\x0f\x74\x76\x53\x22\xb0\x83\x44\xb7\x61\x7f\x99\
\xb6\x70\xfb\xe0\xb8\x0f\xdf\x68\xf2\x5b\x07\xec\xe1\x9a\x7b\xc1\
\x7a\xb8\x68\xf1\x72\x02\x17\x13\xfd\x2a\x8a\x2c\x44\x4c\x6c\x6d\
\x24\xcc\x6c\xb4\x2f\x99\x2f\x5e\x3d\x5f\xaa\xcd\x0d\x69\x65\x29\
\xda\x6b\x77\x49\x77\xee\x80\x59\xcd\xf6\xfc\x31\x52\x4b\x8d\x3d\
\x90\xc2\xf6\x2e\xb4\x71\x3f\x6c\x39\x88\x97\x4f\x14\xaf\x99\x67\
\x65\xdd\x16\xd9\xb5\x1d\xbd\xf6\xb7\x1e\x81\x7b\x77\xc2\xce\x6e\
\xeb\xf1\x43\x22\xed\xa7\x9b\xc0\x2e\x72\xba\x1b\xf9\xdb\xa4\xf1\
\x07\xac\xcc\xed\x7e\x2e\x21\xd5\x53\x49\xee\xb8\x01\x5b\x19\x68\
\xc5\xa9\xdd\xc6\xfd\xac\x8a\xeb\x49\xf4\x3d\x0a\x9c\x05\x3e\xef\
\x40\x0f\x17\x1e\xd8\xcf\xf8\x7c\x4e\x5c\x38\xcb\xd4\x65\xaa\x87\
\x80\xde\x92\x74\xd3\xa3\xf6\xcd\x1b\x61\x62\xbd\x34\xb1\x1e\xea\
\xf3\xa8\x98\x66\x34\xe4\x9e\x5e\xd3\xd5\x2b\xd6\x77\x98\x3f\x9c\
\x97\xed\xab\xaa\x5c\xbb\xa7\x07\xfe\x75\x9d\x39\x70\x40\x91\x1c\
\x1d\x24\x3c\x44\x81\x5f\x82\xfe\x07\xfb\x5e\x56\x84\xc7\xab\xb2\
\xc6\xe3\x72\x6a\xc8\xf1\x03\xb6\x22\x6d\xc3\x00\x2e\x02\xf7\x73\
\x8d\x1f\xa0\xe0\x6f\x92\xd3\x57\xb1\x5e\xd9\x58\x70\x22\x0d\x77\
\x62\xc5\x14\x76\x74\x65\xdb\xe3\x76\x1f\x62\xff\xee\x83\x1c\x02\
\xea\x81\x12\xe2\x20\x41\x4d\x04\x26\x1d\x1c\x20\x77\x98\x33\xb3\
\x84\x6a\x72\x40\xc1\x03\x24\xba\x09\xfc\x49\xcc\x5e\xda\xc2\xbe\
\x23\xcc\xd5\xca\xe3\xb3\x17\xf8\xf8\x03\x7b\x38\xc0\xab\x23\xac\
\x54\x04\x3a\x58\xe3\x7e\x22\xcc\x6c\x36\x85\xe4\x88\xc8\x2a\x4b\
\xb0\x02\x11\xf9\x07\xe4\xf4\x4d\x60\x0a\xb8\x0f\xd8\x8c\x75\x19\
\xf0\xf6\x7c\x50\xa3\x87\xc5\x12\x19\x4b\x36\xa7\x45\xec\x3a\x80\
\x49\xbc\x9d\x15\xe5\x63\x57\x06\xef\x1f\x86\x77\xf6\x1c\x07\x79\
\xfe\xb7\x6e\x0f\x6d\x98\x9b\x08\x1e\x47\xb4\xa6\x37\xca\xf9\x30\
\xbc\x47\xc6\xce\x96\x3d\x38\x22\xaf\x63\x85\xbe\x4e\xd0\x3f\xa1\
\xf0\x65\x56\x24\x3f\x28\x6f\xb3\x8c\xae\xf6\x15\x99\xf3\x52\x5d\
\x4e\x9e\xda\x20\x88\x24\xa0\x89\x23\xde\xff\x38\xcb\x6f\x6e\x4f\
\x7c\x88\x33\x81\x26\x24\xa6\x36\x41\x3e\x0c\xd7\x20\x97\x53\xd3\
\xf2\xce\xbf\x6c\x13\xc6\x95\xea\xe1\x43\x2a\xef\x86\x76\x02\x96\
\xb3\x58\xb8\x2a\xc5\x12\xb5\x39\x33\xa9\xde\x26\x2a\x80\xc6\xb0\
\x2a\x8e\x7d\xde\x1f\xef\x37\x06\x2c\x9a\x85\xd5\x42\xc1\x1a\x5b\
\xe3\xaa\x76\xb9\x0a\x46\xa6\x98\xb5\x7d\x46\xcc\x08\x8d\x12\x1e\
\xcc\x15\x34\x8c\x32\x33\x85\x00\xe3\xea\x54\x2e\x0a\xbb\x95\xa0\
\xf1\x2f\x1c\x60\xcd\x1c\x22\x2d\x93\x1a\x51\x5d\x7e\xb0\x71\x79\
\xd0\x52\x46\x32\xb2\x05\x48\x2b\xe7\xac\x8c\x18\x29\x6a\x88\xac\
\xae\x74\x96\xe7\x82\xd4\x5c\x63\xc8\x39\x80\x5a\x08\xbc\x00\x34\
\x76\xb0\x20\xe7\xe9\xc4\x58\x3f\xbb\x19\x6a\x73\x1a\x96\x14\x94\
\x7d\x3b\xa5\xcc\x82\x46\x4c\x71\x04\x60\x3d\xc4\xc4\x0c\x53\xdb\
\x6c\x4f\x43\x1e\x72\x35\x16\xd1\x2d\xd8\xe3\x4e\x7c\x60\x87\x76\
\xef\x4d\x24\x2a\x99\xdd\x92\xb1\xfa\x87\xa7\x2b\xd1\x65\x1b\x2b\
\xa7\xa0\x22\x4f\x62\x0b\xaa\x34\x75\x58\x3a\x5c\x97\x87\x31\xb5\
\x88\x48\x0b\xd2\x0b\xc4\xc6\xae\x4e\x67\x81\x26\x12\x15\xe6\xb6\
\xca\xb5\x39\x0f\x0b\x45\x2b\x1d\x8b\xe5\xb3\xac\x22\xb8\x78\x74\
\xd6\x65\x88\x7e\xac\x4b\x60\x5c\xad\xc0\xd4\x41\x6c\x7d\x61\x00\
\x1b\xc2\x1c\x60\x3c\x89\x35\xa5\xc1\x2a\x84\x2c\x3b\x18\xaa\x9b\
\x64\xc4\x77\x31\x9a\xec\xb8\x25\x8d\x70\x2e\x4a\x46\xcd\xc4\x23\
\x75\x18\x8c\xeb\xf2\x30\xae\x0e\x30\x79\x4c\xf3\x89\x0d\xec\xea\
\x41\x18\x16\x90\x32\xb1\xb9\xc9\xa1\xb5\x76\x88\xb1\xaa\x26\xa6\
\x53\xb2\x6e\xea\x2c\xdc\x1a\x51\x63\x63\xd6\xc5\x3a\x52\xa0\x9f\
\xd5\xdb\xc6\xd6\x52\x8e\x65\x43\x2b\x17\xdf\x71\x02\x03\x3b\x14\
\x9c\xcf\x22\xd2\x32\xaf\x25\xd0\x5c\x90\x47\x62\x58\x8b\x11\x8a\
\xd9\xc7\x25\x08\x23\x94\x49\x42\x09\x70\xb4\x47\xe4\xc2\x33\x53\
\x00\xe5\xb3\x06\xc7\x70\xee\xcb\xc7\x9c\xd8\xa6\xe0\xba\x34\x0f\
\x4c\x23\x25\xb7\x60\x8c\x69\x2c\x54\xb6\xd2\x0d\x27\xaa\x8b\x29\
\xc4\x4c\xc1\x8b\x04\x7a\x47\x50\xd8\x01\x8c\x2b\x85\xc2\xea\x3c\
\x18\xe1\xda\x1c\x1a\x5b\x47\x96\x14\xe3\x71\xcf\x77\xc8\xf5\xfc\
\x03\x1b\x98\x0f\x9e\x06\x24\x73\x5b\x71\x63\xa1\x6a\xc3\x47\x95\
\x29\xe8\x2b\x51\x41\xac\x48\x8c\x47\xee\x03\x95\x06\x10\x31\xf5\
\x60\xbc\x3b\xec\x8f\xb9\x90\x75\xd7\x90\x23\xc1\x1a\x8f\x9e\xdf\
\x90\xeb\xf9\x03\xf6\xba\xf2\xd3\x07\xcd\x27\x7a\x26\xb5\x0e\x53\
\x1b\x51\x21\x48\xc2\xc3\xc3\x02\xdb\xdd\xc5\x41\x67\xd4\x0f\x61\
\x84\xdd\x75\xea\x05\x62\x31\x66\xc5\xc4\x4a\xb8\x55\x99\x19\x91\
\x75\xd7\x34\xd4\x11\x88\x9e\x00\x8c\x3f\x31\x81\x1d\x64\xe6\x35\
\x97\x54\x93\xe6\xb6\x4a\x63\x6b\x2b\x38\x96\xb7\x02\xba\xe2\xef\
\xa5\x43\x03\x83\x45\xf2\x7e\xe4\xce\x72\x98\x56\x1d\x01\x74\x01\
\x69\xc9\xd0\x97\x96\xd3\x05\x0f\xa3\x0c\x68\xae\xc1\x13\xeb\x81\
\xc8\x18\x5c\x4e\x6b\xdb\x7d\x02\x9a\x82\x8f\x39\x01\xcf\x22\x52\
\xb3\x68\x4c\xd6\x0f\x30\x92\xef\x89\xc0\xfe\xfe\x8a\x69\x70\x1f\
\x91\xec\x5c\x80\xe1\xfb\xab\x3a\x81\x92\x9d\x9d\x62\x64\xb9\xbc\
\x47\x6f\x68\x2f\x47\x4b\x01\x4d\xae\x37\x98\x1a\xf0\x84\x8c\xbe\
\xd4\x09\x08\x6c\x2d\xf3\x81\x05\x98\xfc\xfc\x31\xd0\x5a\x83\xd1\
\xf0\x3a\x57\xa6\xb1\xf6\xbe\xde\xc1\xe0\xab\x97\xbd\x3a\x38\x42\
\x46\xdb\x41\x39\xd4\x3d\xd0\x3f\x74\x12\x46\x75\x81\xb6\xb5\x16\
\x4f\x6d\x14\x44\x0a\xe0\x99\xac\x8a\x2d\x27\x96\x29\x68\x1f\xdc\
\x3c\x35\x8f\xe8\x05\x49\x3d\xb9\xe9\x4d\xb8\x26\x51\x99\xc7\x1a\
\x4e\xad\x44\x4b\x7b\x7a\x07\xb3\x85\x4e\x3e\x3d\xc2\x06\x27\xb3\
\x07\x28\x62\xb3\xb7\x77\xf8\xf5\x19\x43\x6e\x9a\x0a\x62\x72\xa3\
\x20\x90\xc7\x9a\x45\x28\x9f\x7b\x7b\xc2\x00\x3b\xb4\xfc\xe6\x51\
\xd2\xc4\x85\xad\x30\xb9\xa1\xdc\x4a\x65\x99\xc3\x7a\x09\xa2\xb3\
\x46\xb9\x2c\x86\x65\xf7\xf0\x49\x2a\x7b\xaa\x7e\x75\x80\x07\x8c\
\xd8\xd5\x33\xd4\x48\x33\x64\x67\xe5\x24\x58\x13\x1b\xa0\xa6\x4e\
\x39\x22\xf3\x10\x53\x0f\x4b\x54\x4e\x00\x53\xb0\xca\xe3\x80\x93\
\x88\xd4\x2d\x1e\x6b\xa6\x34\x52\x49\x9a\x34\x3c\x50\xc2\xa5\x68\
\x9e\x38\x24\x10\x3d\xc0\xd6\xe1\x93\x54\x1e\xf2\x47\x55\x04\xed\
\x05\xb1\xf5\x90\x10\xd6\x70\x96\x0b\x05\xe4\xc9\xf5\xf6\xcc\x26\
\x43\xca\x04\x60\xfa\x61\x89\xca\xef\x30\xb0\x7f\x5b\xf6\xe4\x09\
\xf3\x30\xcb\xc9\x53\x3b\x67\x8c\x68\xa9\x29\xf7\x66\x55\x11\x27\
\x65\x2b\xa9\x43\x03\xf2\x9e\xec\xd8\xb1\x2e\xe0\xb1\xa7\xf8\xf6\
\x4d\xd8\x03\x9b\x0e\x54\x36\x96\x1f\x96\xc1\x09\x4d\x6b\x82\xd9\
\xcd\x40\xa4\x11\x58\xc2\xaa\xb4\xf9\xc4\x30\x05\xd7\x54\x3c\xb9\
\xe7\x50\x62\xce\xb4\x16\x33\xbb\x05\x92\x20\x45\x0d\x85\xaf\x43\
\x3b\x68\xc4\x63\x9d\xa6\x98\xf5\xb0\x77\x62\x1e\x79\x0a\x3e\xeb\
\x41\x70\xff\xd6\x43\x76\x77\x71\xc8\x81\x51\x65\x67\xc7\xd5\x8a\
\xd9\xad\x82\x1c\xf5\x98\x53\x49\x98\x99\xad\xa0\xf4\x04\x30\x05\
\xab\x62\x2b\x70\x1a\xd1\x2d\x8b\xc7\xc2\xec\x66\x9c\xf5\x10\x97\
\x8f\x63\xf0\xd0\x1e\xab\x08\x7e\xb0\x63\x90\x68\xed\xc2\xd9\x81\
\xec\x23\x8a\xb4\x16\xd4\xd7\x3d\x80\x1e\xd9\x9f\xb5\x1c\x99\x6a\
\x7b\x2d\xe7\x13\x6b\xde\x18\x98\xd4\x8c\x48\xb5\x10\xc2\xcc\xc3\
\x78\xe1\xdf\x41\x60\x2b\x8e\x26\xf1\x6c\xa2\xcf\x24\xa7\x86\x05\
\x63\xc5\xc4\xfa\x21\xef\x4d\xd5\x19\x06\x92\x1d\x8d\xee\xdb\x3d\
\x08\xf7\x66\xae\x0a\x3d\x4f\xaa\x61\x51\xbf\x02\x0d\x94\x0c\xf7\
\xee\x42\xb9\x90\xd1\x8d\xd5\xa6\x20\x11\x2c\x1a\x8b\x17\xb4\x0a\
\x52\xc6\x43\x7c\x19\xed\xe9\x98\xdf\x6d\x53\x30\x74\x0a\xc5\x22\
\x52\xe6\xcf\x6a\x35\x8b\xc7\x41\x2e\x88\xe8\xa1\xf3\xb6\xaa\xa2\
\x02\x75\x0d\xe0\x07\xf6\x96\x13\x00\xe9\x17\x83\xdf\x55\xad\x61\
\x95\x0c\x6c\xa5\xf6\x43\x5c\x97\x46\xe2\x5d\x3b\xe5\x10\xf0\x11\
\x6d\x9c\x12\x93\xea\xcd\x49\x13\x40\x35\x6a\x24\xea\x02\xc4\xac\
\x61\x13\xff\x3b\x05\x6c\xe5\x54\xf6\x35\x9e\x0a\x3a\x1f\x33\x6e\
\xd1\x58\x58\x34\x86\xec\x48\x29\x1d\xc9\x68\x05\xe4\xbb\x77\x9a\
\xae\x01\x00\x1d\x20\xfa\xf6\x91\xe9\xc7\xea\x65\x1c\xbe\x8f\xd5\
\xff\x70\x87\xd9\xd9\x65\x42\xa6\xf5\x43\x45\xc9\x08\x35\x39\xe9\
\xb4\x49\x78\xe1\x18\x43\xaa\xf9\xa0\x57\xb0\x3a\xad\xa7\x2d\x64\
\x07\x47\x1e\x87\x57\xbc\x84\xe3\x66\x02\x06\xfb\xa1\x3c\x97\x54\
\x2f\xaf\xaf\x57\xcd\xb2\x49\x72\x56\x96\x1e\x22\x5d\x86\x81\x8b\
\xb9\x65\xf3\x60\x2b\xe6\x13\xac\x4c\xee\x39\x0a\x47\xf3\x5d\xa0\
\xaf\xbb\x84\x6e\x7f\x1c\x6a\x92\xe1\xe7\xce\x18\xc8\x09\x9f\x34\
\x0e\x2d\x9d\x08\x24\x71\x2c\x91\xd7\x95\xab\x18\xd9\x61\x96\x6d\
\xc9\x31\xd7\xde\x63\x0b\x6c\xe5\xa4\xa3\xc1\x93\x3c\xd3\x89\xc0\
\xeb\x88\xcc\x5e\x32\x0e\x4e\x9b\x94\xed\x40\x8c\x55\x4e\xab\xe2\
\xa6\x04\xde\x7a\x08\x7e\xb1\xa3\x4c\xb0\x28\xfc\xd7\x88\x66\xe0\
\x70\xfb\x0d\xeb\x21\x3e\xd4\x5f\x72\xbc\xed\xb1\x6c\x4a\x42\x18\
\xce\x96\x95\x22\x6a\x2c\x98\x73\x67\xc8\x73\x5b\x03\x44\x96\x80\
\xdf\xc0\x9a\x38\x9d\xd5\x69\x18\x1c\xf3\xa7\x52\xf8\x5b\xff\x96\
\x01\xbb\x26\x0e\xf5\x43\xad\xb1\x68\x8f\x2d\x58\x97\x90\x72\x79\
\x4d\x8d\xeb\x4e\x9f\x82\xe7\xb6\xa8\x7c\x7a\x54\x55\x78\x45\xa5\
\x89\xd8\xfc\xdb\x3a\xdc\x5d\x44\xa0\x3d\x38\xfe\xe7\x51\xd9\xef\
\x36\x19\xf4\x15\x4c\x7c\x68\x1f\x7a\x60\x8f\x9d\xaf\xd4\xd0\xaa\
\xb4\x36\x1f\x60\xd9\x78\x58\x32\xd1\x91\x9c\xc7\x96\x5f\x35\x70\
\x03\xe2\x22\x56\xc7\xec\x6c\x93\x0f\x26\xd0\xf4\xdb\xa4\xb1\xd5\
\x4b\x7f\x4d\xda\x80\x7d\x0e\x70\x2d\xe6\x93\x88\x99\x2f\x99\x8a\
\x2f\x9a\x9d\x6d\x06\x4e\xab\xdd\x4b\xd9\x0c\xe4\x82\xfd\x50\x07\
\xfa\xee\x66\xab\xfc\xce\x9b\x1b\x69\x4b\xb6\x1d\x41\x15\x1e\x2e\
\x95\xd4\xd4\xba\x09\x74\xe0\xd0\x80\xf4\x8d\x0d\xb8\xd2\xed\x5d\
\xad\xb5\xc5\x14\x37\x15\xac\xd7\x2e\x90\x7e\x7f\x6e\x88\x63\xeb\
\x85\xc4\x25\xc0\x57\x91\xaf\xa0\xbd\x5c\xc9\xbd\xf2\xd8\xb0\x5f\
\xc7\x8e\x43\xbb\xb6\x08\xf9\xa4\x11\x78\x0b\xe2\x6a\xc1\xcc\xda\
\x04\x4e\x99\x94\x9d\xbe\x79\xc6\x94\xa1\xb3\x05\xab\x79\x01\x1b\
\x9a\x6b\xcd\xca\xdb\xe5\x1b\x37\x5a\x8e\xde\x86\x79\x39\x2b\x93\
\x2d\x47\x7d\xef\x4f\xa6\x10\xc3\xa7\x31\x7f\x33\xa9\xd1\xfe\xdc\
\x05\xd2\xd2\xf1\xb8\xa7\x38\x7c\xf3\x9e\xb0\xeb\x72\xe8\x40\x3f\
\xdc\xfa\x98\x7c\xd3\x46\xf3\xeb\x3d\xa8\xbf\xe4\x43\xa0\x0f\x80\
\xbe\x4c\xca\x00\x57\xeb\xb7\xc8\x14\x14\x12\x21\xce\x04\xae\xce\
\x05\xcd\x3c\x65\x12\x7e\xcf\x8b\xf1\x95\x67\x48\x67\x4d\xcd\x8a\
\x04\x15\x6d\xad\x3e\xd8\x26\x9f\xd8\x7d\x45\xb1\x6e\x9f\xed\xa8\
\x14\x74\xeb\x20\xa8\x47\xfb\x5a\xab\x2b\x13\xb0\x6f\x00\x0e\x1d\
\xe8\x47\xdf\xdf\x9c\x9d\x14\x9a\x4f\xb2\x93\x8a\x87\x8e\x25\x91\
\x7a\x4a\xa2\xb9\x06\xbf\x75\x89\x75\xd5\x59\xe2\xac\xa9\xc4\x9c\
\x68\xca\xde\x7d\xe8\xa9\x24\xbf\x6d\x36\x36\xdb\x90\xb9\x00\x98\
\x51\x97\x83\xf3\x67\xe2\x77\x2c\x15\x4b\x27\x64\xde\x3e\x04\x28\
\x84\xcc\x79\x55\xf6\x14\x24\x82\x34\x4a\xdf\xdd\x64\x3f\xd1\x65\
\x65\xa9\x82\xbe\x37\xe4\xb4\x8e\x62\x78\x83\x11\x83\xb6\x20\x7f\
\xbf\xbf\x24\xee\xdc\x0e\x3f\xde\x86\x7b\x4a\x38\x8d\x59\x71\x21\
\x90\xd9\xf1\x20\xe8\x2d\x4a\xfb\xfb\xc4\x98\x5a\x98\xde\x84\x92\
\xac\x7f\xae\x15\x68\x79\xc6\xfb\x9f\x9e\x44\x8e\x5d\xe3\x71\xd6\
\x3b\xb1\x0e\xb8\xbf\x3f\xf5\x29\xb7\x3f\x46\xe8\xec\xb7\x4f\x1e\
\x8f\x67\x35\x8b\xe6\x02\xca\x25\x95\xa2\x00\x0c\x44\x69\x47\xb7\
\xfd\xcb\x9d\x70\xe3\x06\x74\x28\x6b\xc9\xb8\x1b\xf3\xc3\x67\x74\
\xdf\x4a\xc4\x20\x4a\x98\x1b\xc0\x2f\x5b\xdf\xc1\xe4\xf6\x9f\xc3\
\x19\x53\x61\xc1\x18\x3c\xb9\x1e\x1a\x0a\x20\x44\x7f\x6a\xf6\xf7\
\xc1\xd6\x4e\xb4\xbe\x43\xba\x7f\xb7\x28\x57\x81\xee\x04\xb6\x1e\
\x23\x5c\x8f\xa1\x8d\xbd\x26\x42\x41\xf5\xe0\xd7\x02\x1f\x24\x65\
\x71\x92\x77\xed\xf4\x06\x31\xa1\x1e\x9a\x6a\xb3\x87\xcb\x2b\xdb\
\x09\x73\xa8\x5f\xec\xeb\x31\x1b\x0f\x9a\xbe\x81\x50\x24\xc4\x2f\
\x80\xfb\x2a\x00\x00\x01\x5a\x49\x44\x41\x54\x07\x20\x7c\x80\xb6\
\xf2\x69\x97\xd7\x46\xf8\xc8\x51\x2e\xa8\x4a\xdb\xfb\x2a\xe7\x08\
\x7e\x1b\xf0\xd7\xa4\x9e\x4f\x50\xe3\x84\x7a\x68\x29\x64\x8e\x53\
\x64\xfd\x0a\x3d\x25\xd8\xdb\x07\xbd\xfd\xa4\x88\x0e\x12\x6e\x01\
\xb7\xb3\x22\x79\xf0\x98\xad\xdf\x63\x56\x21\xa8\x90\xd9\xab\x63\
\x0d\x81\xd3\x80\x57\x11\x39\x87\x94\x19\x40\x13\xa2\x96\x84\x1a\
\x32\xd2\x29\x12\xe9\xc7\xea\x26\x78\x0f\x09\x77\x60\xbe\x44\x5b\
\xb8\x6b\x18\x50\xcf\x66\x0c\xd7\x15\x03\xb9\xdc\x19\xd8\x17\x60\
\x7e\x8f\xc8\x4c\xac\x06\xec\x7c\xc6\x1e\x90\x02\x7d\x24\xda\x87\
\xfc\x20\xf2\x8f\xb0\x7e\x42\x5b\x79\xc3\xc7\x27\xd3\xcc\x66\xff\
\xd6\x68\xec\xe1\x2f\x04\x6e\x77\x6b\x99\xb1\x9f\x01\x5e\x80\x99\
\x0a\x8c\xc1\xe4\x81\x7e\x02\x1d\xc0\x66\xd0\xaf\x81\xad\xac\xd0\
\xae\xc1\xd0\xad\xed\x59\x9a\xfe\xea\x6b\x57\xa7\x8d\x04\x26\x81\
\x5a\x80\x56\x44\x33\x90\x60\x7a\x41\xfb\x10\x9d\xd8\xfb\xe9\xd5\
\x4e\x3e\x56\x0e\x7b\x3f\x6b\x78\x1c\xf8\x8c\x7e\x8b\x80\x3d\x7c\
\x59\x56\xcb\xf5\xb1\x1e\xbb\x06\x91\xcb\x5a\x7e\x42\x44\x14\x71\
\xec\x61\x45\x32\xf4\x2e\x82\xab\x0d\xd7\x3d\xc7\x21\x3d\xd9\x2b\
\xa7\x56\x97\x02\x41\xa2\xab\x98\x72\x6d\xed\x91\x7f\x3f\x86\x9b\
\xe7\x8e\xaf\x7c\xe2\x19\xe4\xde\xc7\xeb\x3d\xb7\x4f\xc5\x31\xac\
\x1a\x7d\x9f\xf9\xa8\x8c\xca\xa8\x8c\xca\xa8\x8c\xca\xa8\x8c\xca\
\xa8\x8c\xca\xa8\x8c\xca\xa8\x8c\xca\xa8\x8c\xca\xa8\x8c\xca\xa8\
\x8c\xca\xa8\x8c\xca\xa8\x8c\xca\xa8\x8c\xca\xa8\xfc\x06\xe4\xff\
\x03\xbc\x1a\xdc\x7f\xcc\x07\xe8\x0f\x00\x00\x00\x00\x49\x45\x4e\
\x44\xae\x42\x60\x82\
"

qt_resource_name = "\
\x00\x08\
\x08\xbc\x96\x62\
\x00\x66\
\x00\x72\x00\x65\x00\x65\x00\x73\x00\x65\x00\x65\x00\x72\
\x00\x09\
\x04\xeb\x98\xc3\
\x00\x6c\
\x00\x61\x00\x6e\x00\x67\x00\x75\x00\x61\x00\x67\x00\x65\x00\x73\
\x00\x0a\
\x0b\x0d\x22\x91\
\x00\x6d\
\x00\x75\x00\x6c\x00\x74\x00\x69\x00\x6d\x00\x65\x00\x64\x00\x69\x00\x61\
\x00\x08\
\x0b\x63\x58\x07\
\x00\x73\
\x00\x74\x00\x6f\x00\x70\x00\x2e\x00\x70\x00\x6e\x00\x67\
\x00\x0e\
\x02\x34\x92\x27\
\x00\x68\
\x00\x65\x00\x61\x00\x64\x00\x70\x00\x68\x00\x6f\x00\x6e\x00\x65\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\
\x00\x07\
\x09\xa6\x57\xa7\
\x00\x72\
\x00\x73\x00\x73\x00\x2e\x00\x70\x00\x6e\x00\x67\
\x00\x0a\
\x06\x88\x40\x07\
\x00\x72\
\x00\x65\x00\x63\x00\x6f\x00\x72\x00\x64\x00\x2e\x00\x70\x00\x6e\x00\x67\
\x00\x08\
\x08\x60\x4a\x1d\
\x00\x74\
\x00\x72\x00\x5f\x00\x6a\x00\x61\x00\x2e\x00\x71\x00\x6d\
\x00\x0b\
\x02\xf5\xf9\xdd\
\x00\x74\
\x00\x72\x00\x5f\x00\x6e\x00\x6c\x00\x5f\x00\x4e\x00\x4c\x00\x2e\x00\x71\x00\x6d\
\x00\x0b\
\x08\xce\xae\x7d\
\x00\x74\
\x00\x72\x00\x5f\x00\x61\x00\x72\x00\x5f\x00\x45\x00\x47\x00\x2e\x00\x71\x00\x6d\
\x00\x0b\
\x0e\xc3\x1b\x7d\
\x00\x74\
\x00\x72\x00\x5f\x00\x7a\x00\x68\x00\x5f\x00\x43\x00\x4e\x00\x2e\x00\x71\x00\x6d\
\x00\x0b\
\x08\xc0\x4e\xdd\
\x00\x74\
\x00\x72\x00\x5f\x00\x66\x00\x72\x00\x5f\x00\x43\x00\x41\x00\x2e\x00\x71\x00\x6d\
\x00\x0b\
\x04\xbd\x6e\xfd\
\x00\x74\
\x00\x72\x00\x5f\x00\x65\x00\x6e\x00\x5f\x00\x55\x00\x53\x00\x2e\x00\x71\x00\x6d\
\x00\x0b\
\x0b\xcf\x8e\x3d\
\x00\x74\
\x00\x72\x00\x5f\x00\x64\x00\x65\x00\x5f\x00\x44\x00\x45\x00\x2e\x00\x71\x00\x6d\
\x00\x0b\
\x0e\xcb\xeb\x7d\
\x00\x74\
\x00\x72\x00\x5f\x00\x7a\x00\x68\x00\x5f\x00\x48\x00\x4b\x00\x2e\x00\x71\x00\x6d\
\x00\x08\
\x05\xe2\x59\x27\
\x00\x6c\
\x00\x6f\x00\x67\x00\x6f\x00\x2e\x00\x70\x00\x6e\x00\x67\
\x00\x0c\
\x06\xe1\x9d\x87\
\x00\x6c\
\x00\x6f\x00\x67\x00\x6f\x00\x5f\x00\x72\x00\x65\x00\x63\x00\x2e\x00\x70\x00\x6e\x00\x67\
"

qt_resource_struct = "\
\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\
\x00\x00\x00\x16\x00\x02\x00\x00\x00\x08\x00\x00\x00\x0a\
\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x08\
\x00\x00\x00\x2e\x00\x02\x00\x00\x00\x04\x00\x00\x00\x04\
\x00\x00\x00\x5e\x00\x00\x00\x00\x00\x01\x00\x00\x0c\x2d\
\x00\x00\x00\x94\x00\x00\x00\x00\x00\x01\x00\x00\x27\x90\
\x00\x00\x00\x80\x00\x00\x00\x00\x00\x01\x00\x00\x20\x36\
\x00\x00\x00\x48\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\
\x00\x00\x01\x88\x00\x00\x00\x00\x00\x01\x00\x01\x45\xd2\
\x00\x00\x01\x9e\x00\x00\x00\x00\x00\x01\x00\x01\x68\x85\
\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x01\x00\x00\x62\x5e\
\x00\x00\x01\x34\x00\x00\x00\x00\x00\x01\x00\x00\xd7\x8c\
\x00\x00\x00\xae\x00\x00\x00\x00\x00\x01\x00\x00\x39\x0f\
\x00\x00\x01\x18\x00\x00\x00\x00\x00\x01\x00\x00\xb6\x65\
\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x01\x00\x00\x7b\x20\
\x00\x00\x01\x50\x00\x00\x00\x00\x00\x01\x00\x01\x0d\xc9\
\x00\x00\x00\xfc\x00\x00\x00\x00\x00\x01\x00\x00\x90\xc0\
\x00\x00\x01\x6c\x00\x00\x00\x00\x00\x01\x00\x01\x20\x2d\
"

def qInitResources():
    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

def qCleanupResources():
    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

qInitResources()

########NEW FILE########
__FILENAME__ = AutoRecordWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

from PyQt4.QtGui import QFont
from PyQt4.QtGui import QVBoxLayout
from PyQt4.QtGui import QWidget
from PyQt4.QtGui import QApplication
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QShortcut
from PyQt4.QtGui import QKeySequence
from PyQt4.QtCore import QTimer
from PyQt4.QtCore import Qt


class AutoRecordWidget(QWidget):
    """Widget that displays the fullscreen countdown for Freeseer's automated recording mode"""

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        self.secs = None
        self.recording = False
        self.flashMillisecs = 1000
        self.flashTimes = [0, 250, 500, 750]

        self.resize(400, 400)
        self.mainLayout = QVBoxLayout()
        self.setLayout(self.mainLayout)
        self.talkInfoFont = QFont('Serif', 50, QFont.Light)
        self.countdownFont = QFont('Serif', 300, QFont.Light)

        self.talkInfoString = QLabel()
        self.mainLayout.addWidget(self.talkInfoString)
        self.talkInfoString.setFont(self.talkInfoFont)
        self.talkInfoString.setAlignment(Qt.AlignCenter)
        self.talkInfoString.setStyleSheet("QLabel { background-color : white; color : black; }")

        self.countdownString = QLabel()
        self.mainLayout.addWidget(self.countdownString)
        self.countdownString.setFont(self.countdownFont)
        self.countdownString.setAlignment(Qt.AlignCenter)
        self.countdownString.setStyleSheet("QLabel { background-color : white; color : black; }")

        self.countdownTimer = QTimer()
        self.countdownTimer.timeout.connect(self.timertick)

        self.flashTimer = QTimer()
        self.flashTimer.timeout.connect(self.flash_display_text)

        QShortcut(QKeySequence("Esc"), self, self.showNormal)

    def set_recording(self, recording):
        """Sets recording to true or false"""
        self.recording = recording

    def set_display_message(self, title="", speaker=""):
        """Sets the part of the display message on screen that is not related to countdown"""
        if self.recording:
            self.talkInfoString.setText("RECORDING\n\nTime remaining:")
        else:
            self.talkInfoString.setText("NEXT TALK\nTitle: %s\nSpeaker: %s\n\nTime until recording:" % (title, speaker))

    def start_timer(self, secs):
        """Sets how much time to count down and starts the timer"""
        self.secs = secs
        self.countdownTimer.start(1000)

    def start_flash_timer(self):
        """Sets how much time to flash the screen and starts the timer"""
        self.flashMillisecs = 1000
        self.flashTimer.start(50)

    def flash_display_text(self):
        """Sets the flashing talk info and countdown display, decrements flash countdown and stops timer"""
        if self.flashMillisecs in self.flashTimes:
            self.countdownString.setStyleSheet("QLabel { background-color : white; color : black; }")
            self.talkInfoString.setStyleSheet("QLabel { background-color : white; color : black; }")
        else:
            self.countdownString.setStyleSheet("QLabel { background-color : black; color : white; }")
            self.talkInfoString.setStyleSheet("QLabel { background-color : black; color : white; }")
        self.flashMillisecs -= 50
        if self.flashMillisecs < 0:
            self.flashTimer.stop()

    def timertick(self):
        """Sets the countdown display string, decrements countdown, plays alert and stops timer.

        Sets and displays the countdown until the start or end of recording of a talk using a countdown timer.
        The size of one unit of timer tick is one second. Before recording starts, plays an alert sound.
        """
        if self.secs > 120:
            self.countdownString.setText("%d min." % (self.secs / 60 + 1))  # e.g., 5 min
        else:
            self.countdownString.setText("%02d:%02d" % (self.secs / 60, self.secs % 60))  # e.g., 01:36

        # Flash the screen when there is 1 minute and when there is 30 seconds left
        if self.secs == 60 or self.secs == 30:
            self.start_flash_timer()

        # In the last 10 seconds, display countdown in red
        if self.secs <= 10:
            self.countdownString.setStyleSheet("QLabel { background-color : white; color : red; }")

        self.secs -= 1
        if self.secs < 0:
            self.stop_timer()
            self.countdownString.setStyleSheet("QLabel { background-color : white; color : black; }")

    def stop_timer(self):
        """Stops the countdown timer"""
        self.countdownTimer.stop()

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    main = AutoRecordWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = record
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import logging
import os
import subprocess
import sys

from PyQt4 import QtGui, QtCore
from PyQt4.QtGui import QCursor

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

from freeseer.framework.presentation import Presentation
from freeseer.framework.failure import Failure
from freeseer.framework.util import get_free_space
from freeseer.frontend.qtcommon.FreeseerApp import FreeseerApp
from freeseer.frontend.configtool.configtool import ConfigToolApp
from freeseer.frontend.record.RecordingController import RecordingController
from freeseer.frontend.record.RecordingWidget import RecordingWidget
from freeseer.frontend.record.AutoRecordWidget import AutoRecordWidget
from freeseer.frontend.record.ReportDialog import ReportDialog
from freeseer.frontend.talkeditor.talkeditor import TalkEditorApp

log = logging.getLogger(__name__)


class RecordApp(FreeseerApp):
    """Freeseer's main GUI class."""

    def __init__(self, profile, config):
        FreeseerApp.__init__(self)

        self.db = profile.get_database()
        self.config = config
        self.controller = RecordingController(profile, self.db, self.config)

        self.recently_recorded_video = None

        self.resize(550, 450)

        # Setup custom widgets
        self.mainWidget = RecordingWidget()
        self.setCentralWidget(self.mainWidget)
        self.reportWidget = ReportDialog()
        self.reportWidget.setModal(True)
        self.autoRecordWidget = AutoRecordWidget()
        self.configToolApp = ConfigToolApp(profile, config)
        self.configToolApp.setWindowModality(QtCore.Qt.ApplicationModal)
        self.configToolApp.setWindowFlags(QtCore.Qt.Dialog)
        self.talkEditorApp = TalkEditorApp(self.config, self.db)
        self.talkEditorApp.setWindowModality(QtCore.Qt.ApplicationModal)
        self.talkEditorApp.setWindowFlags(QtCore.Qt.Dialog)

        self.statusBar().addPermanentWidget(self.mainWidget.statusLabel)

        # Initialize geometry, to be used for restoring window positioning.
        self.geometry = None
        self.current_event = None
        self.current_room = None
        self.controller.set_window_id(self.mainWidget.previewWidget.winId())
        self.controller.set_audio_feedback_handler(self.audio_feedback)

        # Set timer for recording how much time elapsed during a recording
        self.reset_timer()
        self.timer = QtCore.QTimer(self)
        self.timer.timeout.connect(self.update_timer)

        # Initialize variables for auto-recording
        self.singleID = None
        self.timeUntilStart = None
        self.timeUntilEnd = None
        self.autoTalks = None
        self.recorded = False
        self.beforeStartTimer = QtCore.QTimer(self)
        self.beforeStartTimer.timeout.connect(self.start_single_record)
        self.beforeEndTimer = QtCore.QTimer(self)
        self.beforeEndTimer.timeout.connect(self.single_auto_record)

        #
        # Setup Menubar
        #

        # Build the options Menu, TalkEditor and ConfigTool
        self.menuOptions = QtGui.QMenu(self.menubar)
        self.menuOptions.setObjectName(_fromUtf8("menuOptions"))
        self.menubar.insertMenu(self.menuHelp.menuAction(), self.menuOptions)
        self.actionConfigTool = QtGui.QAction(self)
        self.actionConfigTool.setShortcut("Ctrl+C")
        self.actionConfigTool.setObjectName(_fromUtf8("actionConfigTool"))
        self.actionTalkEditor = QtGui.QAction(self)
        self.actionTalkEditor.setShortcut("Ctrl+E")
        self.actionTalkEditor.setObjectName(_fromUtf8("actionTalkEditor"))
        self.menuOptions.addAction(self.actionConfigTool)
        self.menuOptions.addAction(self.actionTalkEditor)

        folderIcon = QtGui.QIcon.fromTheme("folder")
        self.actionOpenVideoFolder = QtGui.QAction(self)
        self.actionOpenVideoFolder.setShortcut("Ctrl+O")
        self.actionOpenVideoFolder.setObjectName(_fromUtf8("actionOpenVideoFolder"))
        self.actionOpenVideoFolder.setIcon(folderIcon)

        self.actionReport = QtGui.QAction(self)
        self.actionReport.setObjectName(_fromUtf8("actionReport"))

        # Actions
        self.menuFile.insertAction(self.actionExit, self.actionOpenVideoFolder)
        self.menuHelp.addAction(self.actionReport)
        # --- End Menubar

        #
        # Systray Setup
        #
        self.systray = QtGui.QSystemTrayIcon(self.icon)
        self.systray.show()
        self.systray.menu = QtGui.QMenu()
        self.systray.setContextMenu(self.systray.menu)

        self.visibilityAction = QtGui.QAction(self)
        self.recordAction = QtGui.QAction(self)

        self.systray.menu.addAction(self.visibilityAction)
        self.systray.menu.addAction(self.recordAction)

        self.connect(self.visibilityAction, QtCore.SIGNAL('triggered()'), self.toggle_window_visibility)
        self.connect(self.recordAction, QtCore.SIGNAL('triggered()'), self.toggle_record_button)
        self.connect(self.systray, QtCore.SIGNAL('activated(QSystemTrayIcon::ActivationReason)'), self._icon_activated)
        # --- End Systray Setup

        # main tab connections
        self.connect(self.mainWidget.eventComboBox, QtCore.SIGNAL('currentIndexChanged(const QString&)'), self.load_rooms_from_event)
        self.connect(self.mainWidget.roomComboBox, QtCore.SIGNAL('currentIndexChanged(const QString&)'), self.load_dates_from_event_room)
        self.connect(self.mainWidget.dateComboBox, QtCore.SIGNAL('currentIndexChanged(const QString&)'), self.load_talks_from_date)
        self.connect(self.mainWidget.talkComboBox, QtCore.SIGNAL('currentIndexChanged(const QString&)'), self.set_talk_tooltip)
        self.connect(self.mainWidget.standbyPushButton, QtCore.SIGNAL("toggled(bool)"), self.standby)
        self.connect(self.mainWidget.recordPushButton, QtCore.SIGNAL('toggled(bool)'), self.record)
        self.connect(self.mainWidget.autoRecordPushButton, QtCore.SIGNAL('toggled(bool)'), self.auto_record)
        self.connect(self.mainWidget.pauseToolButton, QtCore.SIGNAL('toggled(bool)'), self.pause)
        self.connect(self.mainWidget.audioFeedbackCheckbox, QtCore.SIGNAL('toggled(bool)'), self.toggle_audio_feedback)
        self.connect(self.mainWidget.playPushButton, QtCore.SIGNAL('toggled(bool)'), self.play_video)

        # Main Window Connections
        self.connect(self.actionConfigTool, QtCore.SIGNAL('triggered()'), self.open_configtool)
        self.connect(self.actionTalkEditor, QtCore.SIGNAL('triggered()'), self.open_talkeditor)
        self.connect(self.actionOpenVideoFolder, QtCore.SIGNAL('triggered()'), self.open_video_directory)
        self.connect(self.actionReport, QtCore.SIGNAL('triggered()'), self.show_report_widget)

        # GUI Disabling/Enabling Connections
        self.connect(self.mainWidget.recordPushButton, QtCore.SIGNAL("toggled(bool)"), self.mainWidget.pauseToolButton.setEnabled)

        #
        # ReportWidget Connections
        #
        self.connect(self.reportWidget.reportButton, QtCore.SIGNAL("clicked()"), self.report)

        self.load_settings()

        # Setup spacebar key.
        self.mainWidget.recordPushButton.setShortcut(QtCore.Qt.Key_Space)
        self.mainWidget.recordPushButton.setFocus()

        self.retranslate()

    ###
    ### Translation Related
    ###
    def retranslate(self):
        self.setWindowTitle(self.app.translate("RecordApp", "Freeseer - portable presentation recording station"))
        #
        # Reusable Strings
        #
        self.standbyString = self.app.translate("RecordApp", "Standby")
        self.autoRecordString = self.app.translate("RecordApp", "Auto Record")
        self.recordString = self.app.translate("RecordApp", "Record")
        self.pauseString = self.app.translate("RecordApp", "Pause")
        self.resumeString = self.app.translate("RecordApp", "Resume")
        self.stopString = self.app.translate("RecordApp", "Stop")
        self.stopAutoString = self.app.translate("RecordApp", "Stop Auto Record")
        self.hideWindowString = self.app.translate("RecordApp", "Hide Main Window")
        self.showWindowString = self.app.translate("RecordApp", "Show Main Window")
        self.playVideoString = self.app.translate("RecordApp", "Play Video")

        # Status Bar messages
        self.idleString = self.app.translate("RecordApp", "Idle.")
        self.readyString = self.app.translate("RecordApp", "Ready.")
        self.recordingString = self.app.translate("RecordApp", "Recording")
        self.pausedString = self.app.translate("RecordApp", "Recording Paused.")
        self.freeSpaceString = self.app.translate("RecordApp", "Free Space:")
        self.elapsedTimeString = self.app.translate("RecordApp", "Elapsed Time:")
        # --- End Reusable Strings

        if self.mainWidget.recordPushButton.isChecked() and self.mainWidget.pauseToolButton.isChecked():
            self.mainWidget.statusLabel.setText(self.pausedString)
        elif self.mainWidget.recordPushButton.isChecked() and (not self.mainWidget.pauseToolButton.isChecked()):
            self.mainWidget.statusLabel.setText(self.recordingString)
        elif self.mainWidget.standbyPushButton.isChecked():
            self.mainWidget.statusLabel.setText(self.readyString)
        elif self.mainWidget.autoRecordPushButton.isChecked():
            self.mainWidget.statusLabel.setText(self.autoRecordString)
        else:
            self.mainWidget.statusLabel.setText("{} {} --- {} ".format(self.freeSpaceString,
                                                                       get_free_space(self.config.videodir),
                                                                       self.idleString))

        #
        # Menubar
        #
        self.menuOptions.setTitle(self.app.translate("RecordApp", "&Options"))
        self.actionConfigTool.setText(self.app.translate("RecordApp", "&Configuration"))
        self.actionTalkEditor.setText(self.app.translate("RecordApp", "&Edit Talks"))
        self.actionOpenVideoFolder.setText(self.app.translate("RecordApp", "&Open Video Directory"))
        self.actionReport.setText(self.app.translate("RecordApp", "&Report"))
        # --- End Menubar

        #
        # Systray
        #
        self.visibilityAction.setText(self.hideWindowString)
        self.recordAction.setText(self.recordString)
        # --- End Systray

        #
        # RecordingWidget
        #
        self.mainWidget.playPushButton.setText(self.playVideoString)
        self.mainWidget.standbyPushButton.setText(self.standbyString)
        self.mainWidget.standbyPushButton.setToolTip(self.standbyString)
        if self.mainWidget.autoRecordPushButton.isChecked():
            self.mainWidget.autoRecordPushButton.setText(self.stopAutoString)
            self.mainWidget.autoRecordPushButton.setToolTip(self.stopAutoString)
        else:
            self.mainWidget.autoRecordPushButton.setText(self.autoRecordString)
            self.mainWidget.autoRecordPushButton.setToolTip(self.autoRecordString)
        if self.mainWidget.recordPushButton.isChecked():
            self.mainWidget.recordPushButton.setText(self.stopString)
            self.mainWidget.recordPushButton.setToolTip(self.stopString)
        else:
            self.mainWidget.recordPushButton.setText(self.recordString)
            self.mainWidget.recordPushButton.setToolTip(self.recordString)
        self.mainWidget.pauseToolButton.setText(self.pauseString)
        self.mainWidget.pauseToolButton.setToolTip(self.pauseString)
        self.mainWidget.eventLabel.setText(self.app.translate("RecordApp", "Event"))
        self.mainWidget.roomLabel.setText(self.app.translate("RecordApp", "Room"))
        self.mainWidget.dateLabel.setText(self.app.translate("RecordApp", "Date"))
        self.mainWidget.talkLabel.setText(self.app.translate("RecordApp", "Talk"))
        # --- End RecordingWidget

        #
        # ReportWidget
        #
        self.reportWidget.setWindowTitle(self.app.translate("RecordApp", "Reporting Tool"))
        self.reportWidget.titleLabel.setText(self.app.translate("RecordApp", "Title:"))
        self.reportWidget.speakerLabel.setText(self.app.translate("RecordApp", "Speaker:"))
        self.reportWidget.eventLabel.setText(self.app.translate("RecordApp", "Event:"))
        self.reportWidget.roomLabel.setText(self.app.translate("RecordApp", "Room:"))
        self.reportWidget.startTimeLabel.setText(self.app.translate("RecordApp", "Start Time:"))
        self.reportWidget.endTimeLabel.setText(self.app.translate("RecordApp", "End Time:"))
        self.reportWidget.commentLabel.setText(self.app.translate("RecordApp", "Comment"))
        self.reportWidget.releaseCheckBox.setText(self.app.translate("RecordApp", "Release Received"))
        self.reportWidget.closeButton.setText(self.app.translate("RecordApp", "Close"))
        self.reportWidget.reportButton.setText(self.app.translate("RecordApp", "Report"))

        # Logic for translating the report options
        noissues = self.app.translate("RecordApp", "No Issues")
        noaudio = self.app.translate("RecordApp", "No Audio")
        novideo = self.app.translate("RecordApp", "No Video")
        noaudiovideo = self.app.translate("RecordApp", "No Audio/Video")
        self.reportWidget.options = [noissues, noaudio, novideo, noaudiovideo]
        self.reportWidget.reportCombo.clear()
        for i in self.reportWidget.options:
            self.reportWidget.reportCombo.addItem(i)
        # --- End ReportWidget

    ###
    ### UI Logic
    ###

    def load_settings(self):
        """Load settings for Freeseer"""
        log.info('Loading settings...')

        # Load default language.
        actions = self.menuLanguage.actions()
        for action in actions:
            if action.data().toString() == self.config.default_language:
                action.setChecked(True)
                self.translate(action)
                break

        # Load Talks as a SQL Data Model.
        self.load_event_list()

    def current_presentation(self):
        """Creates a presentation object of the current presentation.

        Current presentation is the currently selected title on the GUI.
        """
        #i = self.mainWidget.talkComboBox.currentIndex()
        #p_id = self.mainWidget.talkComboBox.model().index(i, 1).data(QtCore.Qt.DisplayRole).toString()
        return self.db.get_presentation(self.current_presentation_id())

    def current_presentation_id(self):
        """Returns the current selected presentation ID."""
        i = self.mainWidget.talkComboBox.currentIndex()
        return self.mainWidget.talkComboBox.model().index(i, 1).data(QtCore.Qt.DisplayRole).toString()

    def standby(self, state):
        """Prepares the GStreamer pipelines for recording

        Sets the pipeline to paused state so that initiating a recording
        does not have a delay due to GStreamer initialization.
        """
        def toggle_gui(state):
            """Toggles GUI components when standby is pressed"""
            self.mainWidget.standbyPushButton.setHidden(state)
            self.mainWidget.autoRecordPushButton.setHidden(state)
            self.mainWidget.recordPushButton.setVisible(state)
            self.mainWidget.recordPushButton.setEnabled(state)
            self.mainWidget.pauseToolButton.setVisible(state)
            self.mainWidget.eventComboBox.setDisabled(state)
            self.mainWidget.roomComboBox.setDisabled(state)
            self.mainWidget.dateComboBox.setDisabled(state)
            self.mainWidget.talkComboBox.setDisabled(state)
            self.mainWidget.audioFeedbackCheckbox.setDisabled(state)

        if (state):  # Prepare the pipelines
            if self.load_backend():
                toggle_gui(True)
                self.controller.pause()
                self.mainWidget.statusLabel.setText("{} {} --- {} ".format(self.freeSpaceString,
                                                                       get_free_space(self.config.videodir),
                                                                       self.readyString))
            else:
                toggle_gui(False)
                self.mainWidget.standbyPushButton.setChecked(False)
        else:
            toggle_gui(False)
            self.mainWidget.standbyPushButton.setChecked(False)

        self.mainWidget.playPushButton.setVisible(False)
        self.mainWidget.playPushButton.setEnabled(False)

    def record(self, state):
        """The logic for recording and stopping recording."""

        if state:  # Start Recording.
            logo_rec = QtGui.QPixmap(":/freeseer/logo_rec.png")
            sysIcon2 = QtGui.QIcon(logo_rec)
            self.systray.setIcon(sysIcon2)
            self.controller.record()
            self.mainWidget.recordPushButton.setText(self.stopString)
            self.recordAction.setText(self.stopString)

            # Hide if auto-hide is set.
            if self.config.auto_hide:
                self.hide_window()
                self.visibilityAction.setText(self.showWindowString)
                log.debug('auto-hide is enabled, main window is now hidden in systray.')

            # Start timer.
            self.timer.start(1000)

        else:  # Stop Recording.
            logo_rec = QtGui.QPixmap(":/freeseer/logo.png")
            sysIcon = QtGui.QIcon(logo_rec)
            self.systray.setIcon(sysIcon)
            self.controller.stop()
            self.mainWidget.pauseToolButton.setChecked(False)
            self.mainWidget.recordPushButton.setText(self.recordString)
            self.recordAction.setText(self.recordString)
            self.mainWidget.audioSlider.setValue(0)
            self.mainWidget.statusLabel.setText("{} {} --- {} ".format(self.freeSpaceString,
                                                                       get_free_space(self.config.videodir),
                                                                       self.idleString))

            # Finally set the standby button back to unchecked position.
            self.standby(False)

            # Stop and reset timer.
            self.timer.stop()
            self.reset_timer()

            #Show playback button
            self.mainWidget.playPushButton.setVisible(True)
            self.mainWidget.playPushButton.setEnabled(True)

            # Select next talk if there is one within 15 minutes.
            if self.current_event and self.current_room:
                starttime = QtCore.QDateTime().currentDateTime()
                stoptime = starttime.addSecs(900)
                talkid = self.db.get_talk_between_time(self.current_event, self.current_room,
                                                       starttime.toString(), stoptime.toString())

                if talkid is not None:
                    for i in range(self.mainWidget.talkComboBox.count()):
                        if talkid == self.mainWidget.talkComboBox.model().index(i, 1).data(QtCore.Qt.DisplayRole).toString():
                            self.mainWidget.talkComboBox.setCurrentIndex(i)

    def _enable_disable_gui(self, state):
        """Disables GUI components when Auto Record is pressed, and enables them when Auto Record is released"""
        self.mainWidget.standbyPushButton.setDisabled(state)
        self.mainWidget.eventComboBox.setDisabled(state)
        self.mainWidget.roomComboBox.setDisabled(state)
        self.mainWidget.dateComboBox.setDisabled(state)
        self.mainWidget.talkComboBox.setDisabled(state)
        self.mainWidget.audioFeedbackCheckbox.setDisabled(state)

    def stop_auto_record_gui(self):
        """Sets the gui for stopping the auto record"""
        self.autoRecordWidget.stop_timer()
        self.autoRecordWidget.close()
        self._enable_disable_gui(False)
        self.recorded = False
        self.mainWidget.autoRecordPushButton.setText(self.autoRecordString)
        self.mainWidget.autoRecordPushButton.setChecked(False)

    def auto_record(self, state):
        """Starts automated recording"""
        if state:
            # If there is a room selected, then it's possible to auto-record
            if self.current_room:
                self.autoTalks = self.db.get_talks_by_room_and_time(self.current_room)
                # Start recording if there are talks in database that can be auto-recorded
                if self.autoTalks.next():
                    # Set the cursor back to before the first record so that single_auto_record works properly
                    self.autoTalks.previous()
                    self._enable_disable_gui(True)
                    self.mainWidget.autoRecordPushButton.setText(self.stopAutoString)
                    self.single_auto_record()
                else:
                    # Dialog for no talks to auto-record
                    QtGui.QMessageBox.information(self, 'No Talks to Record',
                        'There are no upcoming talks to auto-record in this room', QtGui.QMessageBox.Ok)
                    self.mainWidget.autoRecordPushButton.setChecked(False)

            else:
                # Dialog that pops up when no room is selected
                QtGui.QMessageBox.information(self, 'No Room Selected',
                    'Please select a room to auto-record', QtGui.QMessageBox.Ok)
                self.mainWidget.autoRecordPushButton.setChecked(False)
        else:
            self.beforeStartTimer.stop()
            self.beforeEndTimer.stop()
            self.controller.stop()
            self.stop_auto_record_gui()

        self.mainWidget.playPushButton.setVisible(False)
        self.mainWidget.playPushButton.setEnabled(False)

    def single_auto_record(self):
        """Completes one display and record cycle of the auto-record feature.

        Stops the recording of the last talk if it exists, displays the countdown until the start of
        the next talk, and when the talk begins, records the talk while displaying the countdown until
        the end of the talk.
        """
        if self.recorded:
            self.controller.stop()
            self.recorded = False
            log.debug("Auto-recording for the current talk stopped.")

        if self.autoTalks.next():
            starttime = QtCore.QTime.fromString(self.autoTalks.value(8).toString())
            endtime = QtCore.QTime.fromString(self.autoTalks.value(9).toString())
            currenttime = QtCore.QTime.currentTime()

            if currenttime <= starttime:
                self.singleID = self.autoTalks.value(0).toString()
                title = self.autoTalks.value(1).toString()
                speaker = self.autoTalks.value(2).toString()

                # Time (in seconds) until recording for the talk starts
                self.timeUntilStart = currenttime.secsTo(starttime)
                # Time (in seconds) from the starttime to endtime of this talk
                self.timeUntilEnd = starttime.secsTo(endtime)

                # Display fullscreen countdown and talk info until talk starts
                self.autoRecordWidget.set_recording(False)
                self.autoRecordWidget.set_display_message(title, speaker)
                self.autoRecordWidget.start_timer(self.timeUntilStart)
                self.autoRecordWidget.showFullScreen()

                # Wait for talk to start, then change display and start recording
                self.beforeStartTimer.setInterval((self.timeUntilStart + 1) * 1000)
                self.beforeStartTimer.setSingleShot(True)
                self.beforeStartTimer.start()
            else:
                # Start time has already passed, so move on to next talk
                self.single_auto_record()
        else:
            self.stop_auto_record_gui()

    def start_single_record(self):
        """Begins the auto-recording of a single talk while displaying the countdown on screen"""
        self.autoRecordWidget.set_recording(True)
        self.autoRecordWidget.set_display_message()
        self.autoRecordWidget.start_timer(self.timeUntilEnd)
        if self.controller.record_talk_id(self.singleID):
            log.debug("Auto-recording for the current talk started.")
            self.recorded = True
        self.beforeEndTimer.setInterval((self.timeUntilEnd + 1) * 1000)
        self.beforeEndTimer.setSingleShot(True)
        self.beforeEndTimer.start()

    def pause(self, state):
        """Pause the recording"""
        if (state):  # Pause Recording.
            self.controller.pause()
            log.info("Recording paused.")
            self.mainWidget.pauseToolButton.setToolTip(self.resumeString)
            self.mainWidget.statusLabel.setText(self.pausedString)
            self.timer.stop()
        elif self.mainWidget.recordPushButton.isChecked():
            self.controller.record()
            log.info("Recording unpaused.")
            self.mainWidget.pauseToolButton.setToolTip(self.pauseString)
            self.timer.start(1000)

    def load_backend(self):
        """Prepares the backend for recording"""
        if self.current_presentation():
            presentation = self.current_presentation()

        # If current presentation is no existant (empty talk database)
        # use a default recording name.
        else:
            presentation = Presentation(title=unicode("default"))

        initialized, self.recently_recorded_video = self.controller.load_backend(presentation)
        if initialized:
            return True
        else:
            return False  # Error something failed while loading the backend

    def update_timer(self):
        """Updates the Elapsed Time displayed.

        Uses the statusLabel for the display.
        """
        frmt_time = "%d:%02d" % (self.time_minutes, self.time_seconds)
        self.time_seconds += 1
        if self.time_seconds == 60:
            self.time_seconds = 0
            self.time_minutes += 1

        self.mainWidget.statusLabel.setText("{} {} --- {} {} --- {}".format(self.elapsedTimeString,
                                                                            frmt_time,
                                                                            self.freeSpaceString,
                                                                            get_free_space(self.config.videodir),
                                                                            self.recordingString))

    def reset_timer(self):
        """Resets the Elapsed Time."""
        self.time_minutes = 0
        self.time_seconds = 0

    def toggle_audio_feedback(self, enabled):
        """Enables or disables audio feedback according to checkbox state"""
        self.config.audio_feedback = enabled

    ###
    ### Talk Related
    ###

    def set_talk_tooltip(self, talk):
        self.mainWidget.talkComboBox.setToolTip(talk)

    def load_event_list(self):
        model = self.db.get_events_model()
        self.mainWidget.eventComboBox.setModel(model)

    def load_rooms_from_event(self, event):
        #self.disconnect(self.mainWidget.roomComboBox, QtCore.SIGNAL('currentIndexChanged(const QString&)'), self.load_talks_from_room)

        self.current_event = event

        model = self.db.get_rooms_model(self.current_event)
        self.mainWidget.roomComboBox.setModel(model)

        #self.connect(self.mainWidget.roomComboBox, QtCore.SIGNAL('currentIndexChanged(const QString&)'), self.load_talks_from_room)

    def load_dates_from_event_room(self, change):
        event = str(self.mainWidget.eventComboBox.currentText())
        room = str(self.mainWidget.roomComboBox.currentText())
        model = self.db.get_dates_from_event_room_model(event, room)
        self.mainWidget.dateComboBox.setModel(model)

    def load_talks_from_date(self, date):
        self.current_room = str(self.mainWidget.roomComboBox.currentText())
        self.current_date = date

        model = self.db.get_talks_model(self.current_event, self.current_room, self.current_date)
        self.mainWidget.talkComboBox.setModel(model)

    ###
    ### Report Failure
    ###
    def show_report_widget(self):
        p = self.current_presentation()
        self.reportWidget.titleLabel2.setText(p.title)
        self.reportWidget.speakerLabel2.setText(p.speaker)
        self.reportWidget.eventLabel2.setText(p.event)
        self.reportWidget.roomLabel2.setText(p.room)
        self.reportWidget.startTimeLabel2.setText(p.starTime)
        self.reportWidget.endTimeLabel2.setText(p.endTime)

        # Get existing report if there is one.
        talk_id = self.current_presentation_id()
        f = self.db.get_report(talk_id)
        if f is not None:
            self.reportWidget.commentEdit.setText(f.comment)
            i = self.reportWidget.reportCombo.findText(f.indicator)
            self.reportWidget.reportCombo.setCurrentIndex(i)
            self.reportWidget.releaseCheckBox.setChecked(f.release)
        else:
            self.reportWidget.commentEdit.setText("")
            self.reportWidget.reportCombo.setCurrentIndex(0)
            self.reportWidget.releaseCheckBox.setChecked(False)

        self.reportWidget.show()

    def report(self):
        talk_id = self.current_presentation_id()
        i = self.reportWidget.reportCombo.currentIndex()

        failure = Failure(talk_id, self.reportWidget.commentEdit.text(), self.reportWidget.options[i], self.reportWidget.releaseCheckBox.isChecked())
        log.info("Report Failure: %s, %s, %s, release form? %s" % (talk_id,
                                                                   self.reportWidget.commentEdit.text(),
                                                                   self.reportWidget.options[i],
                                                                   self.reportWidget.releaseCheckBox.isChecked()))

        self.db.insert_failure(failure)
        self.reportWidget.close()

    ###
    ### Misc.
    ###

    def _icon_activated(self, reason):
        if reason == QtGui.QSystemTrayIcon.Trigger:
            self.systray.menu.popup(QCursor.pos())
        if reason == QtGui.QSystemTrayIcon.DoubleClick:
            self.toggle_record_button()

    def hide_window(self):
        self.geometry = self.saveGeometry()
        self.hide()

    def show_window(self):
        if (self.geometry is not None):
            self.restoreGeometry(self.geometry)
        self.show()

    def toggle_window_visibility(self):
        """Toggles the visibility of the Recording Main Window."""
        if self.isHidden():
            self.show_window()
            self.visibilityAction.setText(self.hideWindowString)
        else:
            self.hide_window()
            self.visibilityAction.setText(self.showWindowString)

    def toggle_record_button(self):
        self.mainWidget.standbyPushButton.toggle()
        self.mainWidget.recordPushButton.toggle()

    def audio_feedback(self, value):
        self.mainWidget.audioSlider.setValue(value)

    def open_video_directory(self):
        if sys.platform.startswith("linux"):
            os.system("xdg-open %s" % self.config.videodir)
        elif sys.platform.startswith("win32"):
            os.system("explorer %s" % self.config.videodir)
        else:
            log.info("Error: This command is not supported on the current OS.")

    def closeEvent(self, event):
        log.info('Exiting freeseer...')
        event.accept()

    '''
    This function plays the most recently recorded video
    '''
    def play_video(self):
        if sys.platform.startswith("linux"):
            subprocess.call(["xdg-open", "{}/{}".format(self.config.videodir, self.recently_recorded_video)])
        if sys.platform.startswith("win32"):
            os.system("start {}".format(os.path.join(self.config.videodir, self.recently_recorded_video)))

    '''
    Client functions
    '''
    def show_client_widget(self):
        self.current_presentation()
        self.clientWidget.show()

    '''
    This function is for handling commands sent from the server to the client
    '''
    def getAction(self):
        message = self.clientWidget.socket.read(self.clientWidget.socket.bytesAvailable())
        if message == 'Record':
            self.mainWidget.standbyPushButton.toggle()
            self.mainWidget.recordPushButton.toggle()
            self.clientWidget.sendMessage('Started recording')
            log.info("Started recording by server's request")
        elif message == 'Stop':
            self.mainWidget.recordPushButton.toggle()
            log.info("Stopping recording by server's request")
        elif message == 'Pause' or 'Resume':
            self.mainWidget.pauseToolButton.toggle()
            if message == 'Pause':
                log.info("Paused recording by server's request")
            elif message == 'Resume':
                log.info("Resumed recording by server's request")

    ###
    ### Utility
    ###
    def open_configtool(self):
        self.configToolApp.show()

    def open_talkeditor(self):
        self.talkEditorApp.show()
        self.load_event_list()

########NEW FILE########
__FILENAME__ = RecordingController
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

from freeseer.framework.multimedia import Multimedia
from freeseer.framework.plugin import PluginManager


class RecordingController:
    def __init__(self, profile, db, config, cli=False):
        self.config = config
        self.db = db
        self.plugman = PluginManager(profile)
        self.media = Multimedia(self.config, self.plugman, cli=cli)

    def set_window_id(self, window_id):
        """Sets the Window ID which GStreamer should paint on"""
        self.media.set_window_id(window_id)

    def set_audio_feedback_handler(self, audio_feedback_handler):
        """Sets the handler for Audio Feedback levels"""
        self.media.set_audio_feedback_handler(audio_feedback_handler)

    def record(self):
        """Start Recording"""
        self.media.record()

    def stop(self):
        """Stop Recording"""
        self.media.stop()

    def pause(self):
        """Pause Recording"""
        self.media.pause()

    def load_backend(self, presentation=None):
        """Prepares the backend for recording"""
        initialized, filename_for_frontend = self.media.load_backend(presentation)
        if initialized:
            return True, filename_for_frontend
        else:
            return False  # Error something failed while loading the backend

    def print_talks(self):
        query = self.db.get_talks()

        # Print the header
        print("\n")
        print("ID: Speaker - Title")
        print("-------------------")

        while(query.next()):
            talkid = unicode(query.value(0).toString())
            title = unicode(query.value(1).toString())
            speaker = unicode(query.value(2).toString())

            print("{talkid}: {speaker} - {title}".format(talkid=talkid, speaker=speaker, title=title))

    ###
    ### Convenience commands
    ###
    def record_talk_id(self, talk_id):
        """Records using a known Talk ID

        Returns True if recording is successfully started
        Returns False if any issues arise
        """
        presentation = self.db.get_presentation(talk_id)
        if self.media.load_backend(presentation):
            # Only record if the backend successfully loaded
            # No need to print error on failure since load_backend already
            # prints an error message
            self.record()
            return True

        else:
            return False

    def record_filename(self, filename):
        """Records to a specific filename

        Returns True if recording is successfully started
        Returns False if any issues arise
        """
        if self.media.load_backend(filename=filename):
            self.record()
            return True

        else:
            return False

########NEW FILE########
__FILENAME__ = RecordingWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

"""
@author: Thanh Ha
"""

from PyQt4.QtCore import QSize
from PyQt4.QtCore import Qt
from PyQt4.QtCore import SIGNAL
from PyQt4.QtGui import QCheckBox
from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFont
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QPixmap
from PyQt4.QtGui import QPushButton
from PyQt4.QtGui import QSizePolicy
from PyQt4.QtGui import QSlider
from PyQt4.QtGui import QToolButton
from PyQt4.QtGui import QWidget
from PyQt4.QtGui import QVBoxLayout

from freeseer.frontend.qtcommon import resource  # noqa


class RecordingWidget(QWidget):
    """Widget containing main recording UI for Freeseer"""

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        icon = QIcon()
        icon.addPixmap(QPixmap(":/freeseer/logo.png"), QIcon.Normal, QIcon.Off)
        self.setWindowIcon(icon)
        self.resize(400, 400)

        self.mainLayout = QVBoxLayout()
        self.setLayout(self.mainLayout)

        boldFont = QFont()
        boldFont.setBold(True)

        # Control bar
        self.controlRow = QHBoxLayout()
        self.mainLayout.addLayout(self.controlRow)

        self.standbyIcon = QIcon.fromTheme("system-shutdown")
        recordFallbackIcon = QIcon(":/multimedia/record.png")
        self.recordIcon = QIcon.fromTheme("media-record", recordFallbackIcon)
        stopFallbackIcon = QIcon(":/multimedia/stop.png")
        self.stopIcon = QIcon.fromTheme("media-playback-stop", stopFallbackIcon)
        self.pauseIcon = QIcon.fromTheme("media-playback-pause")
        self.resumeIcon = QIcon.fromTheme("media-playback-start")
        self.headphoneIcon = QIcon()
        self.headphoneIcon.addPixmap(QPixmap(":/multimedia/headphones.png"), QIcon.Normal, QIcon.Off)

        self.standbyPushButton = QPushButton("Standby")
        self.standbyPushButton.setToolTip("Standby")
        self.standbyPushButton.setMinimumSize(QSize(0, 40))
        self.standbyPushButton.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed)
        self.standbyPushButton.setIcon(self.standbyIcon)
        self.standbyPushButton.setCheckable(True)
        self.standbyPushButton.setObjectName("standbyButton")
        self.controlRow.addWidget(self.standbyPushButton)

        self.autoRecordPushButton = QPushButton("Auto Record")
        self.autoRecordPushButton.setToolTip("Automated Recording")
        self.autoRecordPushButton.setMinimumSize(QSize(40, 40))
        self.autoRecordPushButton.setMaximumSize(QSize(120, 40))
        self.autoRecordPushButton.setCheckable(True)
        self.autoRecordPushButton.setObjectName("autoRecordButton")
        self.controlRow.addWidget(self.autoRecordPushButton)

        self.recordPushButton = QPushButton("Record")
        self.recordPushButton.setToolTip("Record")
        self.recordPushButton.setMinimumSize(QSize(0, 40))
        self.recordPushButton.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed)
        self.recordPushButton.setIcon(self.recordIcon)
        self.recordPushButton.setHidden(True)
        self.recordPushButton.setEnabled(False)
        self.recordPushButton.setCheckable(True)
        self.recordPushButton.setObjectName("recordButton")
        self.controlRow.addWidget(self.recordPushButton)
        self.connect(self.recordPushButton, SIGNAL("toggled(bool)"), self.setRecordIcon)

        self.pauseToolButton = QToolButton()
        self.pauseToolButton.setText("Pause")
        self.pauseToolButton.setToolTip("Pause")
        self.pauseToolButton.setIcon(self.pauseIcon)
        self.pauseToolButton.setMinimumSize(QSize(40, 40))
        self.pauseToolButton.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Fixed)
        self.pauseToolButton.setHidden(True)
        self.pauseToolButton.setEnabled(False)
        self.pauseToolButton.setCheckable(True)
        self.controlRow.addWidget(self.pauseToolButton)
        self.connect(self.pauseToolButton, SIGNAL("toggled(bool)"), self.setPauseIcon)

        playbackIcon = QIcon.fromTheme("video-x-generic")
        self.playPushButton = QPushButton()
        self.playPushButton.setText("Play Video")
        self.playPushButton.setToolTip("Play last recorded Video")
        self.playPushButton.setIcon(playbackIcon)
        self.playPushButton.setMinimumSize(QSize(40, 40))
        self.playPushButton.setMaximumSize(QSize(120, 40))
        self.playPushButton.setHidden(True)
        self.playPushButton.setEnabled(False)
        self.playPushButton.setCheckable(True)
        self.controlRow.addWidget(self.playPushButton)

        # Filter bar
        self.filterBarLayout = QVBoxLayout()
        self.mainLayout.addLayout(self.filterBarLayout)

        self.filterBarLayoutRow_1 = QHBoxLayout()
        self.filterBarLayout.addLayout(self.filterBarLayoutRow_1)
        self.eventLabel = QLabel("Event")
        self.eventLabel.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Fixed)
        self.eventComboBox = QComboBox()
        self.eventLabel.setBuddy(self.eventComboBox)
        self.roomLabel = QLabel("Room")
        self.roomLabel.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Fixed)
        self.roomComboBox = QComboBox()
        self.roomLabel.setBuddy(self.roomComboBox)
        self.dateLabel = QLabel("Date")
        self.dateLabel.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Fixed)
        self.dateComboBox = QComboBox()
        self.dateLabel.setBuddy(self.dateComboBox)
        self.filterBarLayoutRow_1.addWidget(self.eventLabel)
        self.filterBarLayoutRow_1.addWidget(self.eventComboBox)
        self.filterBarLayoutRow_1.addWidget(self.roomLabel)
        self.filterBarLayoutRow_1.addWidget(self.roomComboBox)
        self.filterBarLayoutRow_1.addWidget(self.dateLabel)
        self.filterBarLayoutRow_1.addWidget(self.dateComboBox)

        self.filterBarLayoutRow_2 = QHBoxLayout()
        self.filterBarLayout.addLayout(self.filterBarLayoutRow_2)
        self.talkLabel = QLabel("Talk ")
        self.talkLabel.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Fixed)
        self.talkComboBox = QComboBox()
        self.talkComboBox.setFont(boldFont)
        self.talkComboBox.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Maximum)
        self.talkComboBox.setSizeAdjustPolicy(QComboBox.AdjustToMinimumContentsLength)
        self.filterBarLayoutRow_2.addWidget(self.talkLabel)
        self.filterBarLayoutRow_2.addWidget(self.talkComboBox)

        # Preview Layout
        self.previewLayout = QHBoxLayout()
        self.mainLayout.addLayout(self.previewLayout)

        self.previewWidget = QWidget()
        self.audioSlider = QSlider()
        self.audioSlider.setSizePolicy(QSizePolicy.Fixed, QSizePolicy.Expanding)
        self.audioSlider.setEnabled(False)
        self.previewLayout.addWidget(self.previewWidget)
        self.previewLayout.addWidget(self.audioSlider)

        self.statusLabel = QLabel()
        self.mainLayout.addWidget(self.statusLabel)

        # Audio Feedback Checkbox
        self.audioFeedbackCheckbox = QCheckBox()
        self.audioFeedbackCheckbox.setLayoutDirection(Qt.RightToLeft)
        self.audioFeedbackCheckbox.setIcon(self.headphoneIcon)
        self.audioFeedbackCheckbox.setToolTip("Enable Audio Feedback")
        self.mainLayout.addWidget(self.audioFeedbackCheckbox)

    def setRecordIcon(self, state):
        if state:
            self.recordPushButton.setIcon(self.stopIcon)
        else:
            self.recordPushButton.setIcon(self.recordIcon)

    def setPauseIcon(self, state):
        if state:
            self.pauseToolButton.setIcon(self.resumeIcon)
        else:
            self.pauseToolButton.setIcon(self.pauseIcon)

if __name__ == "__main__":
    import sys
    from QtGui import QApplication
    app = QApplication(sys.argv)
    main = RecordingWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = ReportDialog
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

from PyQt4.QtCore import QString
from PyQt4.QtCore import SIGNAL
from PyQt4.QtGui import QCheckBox
from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QDialog
from PyQt4.QtGui import QFont
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QLineEdit
from PyQt4.QtGui import QPixmap
from PyQt4.QtGui import QPushButton
from PyQt4.QtGui import QWidget
from PyQt4.QtGui import QVBoxLayout

try:
    _fromUtf8 = QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

from freeseer.frontend.qtcommon import resource  # noqa


class ReportDialog(QDialog):
    """Failure report dialog for Freeseer"""
    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        icon = QIcon()
        icon.addPixmap(QPixmap(_fromUtf8(":/freeseer/logo.png")), QIcon.Normal, QIcon.Off)
        self.setWindowIcon(icon)

        self.mainWidget = QWidget()
        self.mainLayout = QVBoxLayout()
        self.setLayout(self.mainLayout)

        boldFont = QFont()
        boldFont.setBold(True)

        self.infoLayout = QFormLayout()
        self.mainLayout.addLayout(self.infoLayout)
        self.reportLayout = QHBoxLayout()
        self.mainLayout.addLayout(self.reportLayout)
        self.buttonLayout = QHBoxLayout()
        self.mainLayout.addLayout(self.buttonLayout)

        # Talk infomation
        self.titleLabel = QLabel("Title:")
        self.titleLabel2 = QLabel()
        self.titleLabel2.setFont(boldFont)
        self.speakerLabel = QLabel("Speaker:")
        self.speakerLabel2 = QLabel()
        self.speakerLabel2.setFont(boldFont)
        self.eventLabel = QLabel("Event:")
        self.eventLabel2 = QLabel()
        self.eventLabel2.setFont(boldFont)
        self.roomLabel = QLabel("Room:")
        self.roomLabel2 = QLabel()
        self.roomLabel2.setFont(boldFont)
        self.startTimeLabel = QLabel("Start Time:")
        self.startTimeLabel2 = QLabel()
        self.startTimeLabel2.setFont(boldFont)
        self.endTimeLabel = QLabel("End Time:")
        self.endTimeLabel2 = QLabel()
        self.endTimeLabel2.setFont(boldFont)
        self.infoLayout.addRow(self.titleLabel, self.titleLabel2)
        self.infoLayout.addRow(self.speakerLabel, self.speakerLabel2)
        self.infoLayout.addRow(self.eventLabel, self.eventLabel2)
        self.infoLayout.addRow(self.roomLabel, self.roomLabel2)
        self.infoLayout.addRow(self.startTimeLabel, self.startTimeLabel2)
        self.infoLayout.addRow(self.endTimeLabel, self.endTimeLabel2)

        #Report
        self.commentLabel = QLabel("Comment")
        self.commentEdit = QLineEdit()

        self.reportCombo = QComboBox()
        # Prototype for report options. Please define these in the
        # record.py logic file under retranslate() so that translations
        # work.
#        self.options = ['No Audio', 'No Video', 'No Audio/Video']
#        for i in self.options:
#            self.reportCombo.addItem(i)

        self.releaseCheckBox = QCheckBox("Release Received")

        self.reportLayout.addWidget(self.commentLabel)
        self.reportLayout.addWidget(self.commentEdit)
        self.reportLayout.addWidget(self.reportCombo)
        self.reportLayout.addWidget(self.releaseCheckBox)

        #Buttons
        self.reportButton = QPushButton("Report")
        self.closeButton = QPushButton("Close")

        self.buttonLayout.addWidget(self.closeButton)
        self.buttonLayout.addWidget(self.reportButton)
        self.connect(self.closeButton, SIGNAL("clicked()"), self.close)

########NEW FILE########
__FILENAME__ = reporteditor
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import logging

from PyQt4.QtCore import QDateTime
from PyQt4.QtCore import QString
from PyQt4.QtCore import SIGNAL
from PyQt4.QtGui import QAction
from PyQt4.QtGui import QFileDialog
from PyQt4.QtGui import QHeaderView
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QMessageBox
from PyQt4.QtGui import QPixmap
from PyQt4.QtGui import QWidget

try:
    _fromUtf8 = QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

from freeseer.framework.presentation import Presentation
from freeseer.frontend.qtcommon.FreeseerApp import FreeseerApp

from freeseer.frontend.reporteditor.ReportEditorWidget import ReportEditorWidget

log = logging.getLogger(__name__)


class ReportEditorApp(FreeseerApp):
    '''
    Freeseer report editor main gui class
    '''

    def __init__(self, config, db):
        FreeseerApp.__init__(self)

        self.config = config
        self.db = db

        icon = QIcon()
        icon.addPixmap(QPixmap(_fromUtf8(":/freeseer/logo.png")), QIcon.Normal, QIcon.Off)
        self.setWindowIcon(icon)
        self.resize(960, 400)

        self.mainWidget = QWidget()
        self.mainLayout = QHBoxLayout()
        self.mainWidget.setLayout(self.mainLayout)
        self.setCentralWidget(self.mainWidget)

        self.editorWidget = ReportEditorWidget()
        self.editorWidget.editor.setColumnHidden(5, True)

        self.mainLayout.addWidget(self.editorWidget)

        # Initialize geometry, to be used for restoring window positioning.
        self.geometry = None

        #
        # Setup Menubar
        #
        self.actionExportCsv = QAction(self)
        self.actionExportCsv.setObjectName(_fromUtf8("actionExportCsv"))

        # Actions
        self.menuFile.insertAction(self.actionExit, self.actionExportCsv)
        # --- End Menubar

        #
        # Report Editor Connections
        #

        # Editor Widget
        self.connect(self.editorWidget.removeButton, SIGNAL('clicked()'), self.remove_talk)
        self.connect(self.editorWidget.clearButton, SIGNAL('clicked()'), self.confirm_reset)
        self.connect(self.editorWidget.closeButton, SIGNAL('clicked()'), self.close)

        # Main Window Connections
        self.connect(self.actionExportCsv, SIGNAL('triggered()'), self.export_reports_to_csv)
        self.connect(self.editorWidget.editor, SIGNAL('clicked (const QModelIndex&)'), self.editorSelectionChanged)

        # Load default language
        actions = self.menuLanguage.actions()
        for action in actions:
            if action.data().toString() == self.config.default_language:
                action.setChecked(True)
                self.translate(action)
                break

        self.load_failures_model()
        self.editorWidget.editor.resizeColumnsToContents()
        self.editorWidget.editor.resizeRowsToContents()

    ###
    ### Translation
    ###
    def retranslate(self):
        self.setWindowTitle(self.app.translate("ReportEditorApp", "Freeseer Report Editor"))

        #
        # Reusable Strings
        #
        self.confirmDBClearTitleString = self.app.translate("ReportEditorApp", "Clear Database")
        self.confirmDBClearQuestionString = self.app.translate("ReportEditorApp", "Are you sure you want to clear the DB?")
        self.selectFileString = self.app.translate("ReportEditorApp", "Select File")
        # --- End Reusable Strings

        #
        # Menubar
        #
        self.actionExportCsv.setText(self.app.translate("ReportEditorApp", "&Export to CSV"))
        # --- End Menubar

        #
        # EditorWidget
        #
        self.editorWidget.removeButton.setText(self.app.translate("ReportEditorApp", "Remove"))
        self.editorWidget.clearButton.setText(self.app.translate("ReportEditorApp", "Clear"))
        self.editorWidget.closeButton.setText(self.app.translate("ReportEditorApp", "Close"))

        self.editorWidget.titleLabel.setText(self.app.translate("ReportEditorApp", "Title:"))
        self.editorWidget.speakerLabel.setText(self.app.translate("ReportEditorApp", "Speaker:"))
        self.editorWidget.descriptionLabel.setText(self.app.translate("ReportEditorApp", "Description:"))
        self.editorWidget.levelLabel.setText(self.app.translate("ReportEditorApp", "Level:"))
        self.editorWidget.eventLabel.setText(self.app.translate("ReportEditorApp", "Event:"))
        self.editorWidget.roomLabel.setText(self.app.translate("ReportEditorApp", "Room:"))
        self.editorWidget.startTimeLabel.setText(self.app.translate("ReportEditorApp", "Start Time:"))
        self.editorWidget.endTimeLabel.setText(self.app.translate("ReportEditorApp", "End Time:"))
        # --- End EditorWidget

    def load_failures_model(self):
        # Load Presentation Model
        self.failureModel = self.db.get_failures_model()
        editor = self.editorWidget.editor
        editor.setModel(self.failureModel)
        editor.horizontalHeader().setResizeMode(QHeaderView.Stretch)

    def hide_add_talk_widget(self):
        self.editorWidget.setHidden(False)
        self.addTalkWidget.setHidden(True)

    def add_talk(self):
        date = self.addTalkWidget.dateEdit.date()
        startTime = self.addTalkWidget.startTimeEdit.time()
        datetime = QDateTime(date, startTime)  # original "time" is now "startTime"
        presentation = Presentation(unicode(self.addTalkWidget.titleLineEdit.text()),
                                    unicode(self.addTalkWidget.presenterLineEdit.text()),
                                    "",  # description
                                    "",  # level
                                    unicode(self.addTalkWidget.eventLineEdit.text()),
                                    unicode(self.addTalkWidget.roomLineEdit.text()),
                                    unicode(datetime.toString()),
                                    unicode(self.addTalkWidget.endTimeEdit.text()))

        # Do not add talks if they are empty strings
        if (len(presentation.title) == 0):
            return

        self.db.insert_presentation(presentation)

        # cleanup
        self.addTalkWidget.titleLineEdit.clear()
        self.addTalkWidget.presenterLineEdit.clear()

        self.failureModel.select()

        self.hide_add_talk_widget()

    def remove_talk(self):
        try:
            row_clicked = self.editorWidget.editor.currentIndex().row()
        except:
            return

        self.failureModel.removeRow(row_clicked)
        self.failureModel.select()

    def reset(self):
        self.db.clear_report_db()
        self.failureModel.select()

    def confirm_reset(self):
        """
        Presents a confirmation dialog to ask the user if they are sure they
        wish to remove the report database.

        If Yes call the reset() function.
        """
        confirm = QMessageBox.question(self,
                    self.confirmDBClearTitleString,
                    self.confirmDBClearQuestionString,
                    QMessageBox.Yes |
                    QMessageBox.No,
                    QMessageBox.No)

        if confirm == QMessageBox.Yes:
            self.reset()

    def closeEvent(self, event):
        log.info('Exiting report editor...')
        self.geometry = self.saveGeometry()
        event.accept()

    def editorSelectionChanged(self, index):
        talkId = self.failureModel.record(index.row()).value(0).toString()
        self.updatePresentationInfo(talkId)

    def updatePresentationInfo(self, talkId):
        p = self.db.get_presentation(talkId)
        if p is not None:
            self.editorWidget.titleLabel2.setText(p.title)
            self.editorWidget.speakerLabel2.setText(p.speaker)
            self.editorWidget.descriptionLabel2.setText(p.description)
            self.editorWidget.levelLabel2.setText(p.level)
            self.editorWidget.eventLabel2.setText(p.event)
            self.editorWidget.roomLabel2.setText(p.room)
            self.editorWidget.startTimeLabel2.setText(p.startTime)
            self.editorWidget.endTimeLabel2.setText(p.endTime)
        else:
            self.editorWidget.titleLabel2.setText("Talk not found")
            self.editorWidget.speakerLabel2.setText("Talk not found")
            self.editorWidget.descriptionLabel2.setText("Talk not found")
            self.editorWidget.levelLabel2.setText("Talk not found")
            self.editorWidget.eventLabel2.setText("Talk not found")
            self.editorWidget.roomLabel2.setText("Talk not found")
            self.editorWidget.startTimeLabel2.setText("Talk not found")
            self.editorWidget.endTimeLabel2.setText("Talk not found")

    def export_reports_to_csv(self):
        fname = QFileDialog.getSaveFileName(self, self.selectFileString, "", "*.csv")
        if fname:
            self.db.export_reports_to_csv(fname)

########NEW FILE########
__FILENAME__ = ReportEditorWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4 import QtGui

from freeseer.frontend.qtcommon import resource  # noqa


class ReportEditorWidget(QtGui.QWidget):
    '''
    classdocs
    '''

    def __init__(self, parent=None):
        '''
        Constructor
        '''
        QtGui.QWidget.__init__(self, parent)

        self.mainLayout = QtGui.QVBoxLayout()
        self.setLayout(self.mainLayout)

        #
        # ReportEditor Layout
        #
        self.editorLayout = QtGui.QHBoxLayout()
        self.mainLayout.addLayout(self.editorLayout)

        self.buttonsLayout = QtGui.QVBoxLayout()

        self.editorLayout.addLayout(self.buttonsLayout)

        boldFont = QtGui.QFont()
        boldFont.setBold(True)

        removeIcon = QtGui.QIcon.fromTheme("list-remove")
        clearIcon = QtGui.QIcon.fromTheme("edit-clear")
        closeIcon = QtGui.QIcon.fromTheme("application-exit")

        #self.addButton = QtGui.QPushButton("Add")
        #self.addButton.setIcon(addIcon)
        self.removeButton = QtGui.QPushButton("Remove")
        self.removeButton.setIcon(removeIcon)
        self.clearButton = QtGui.QPushButton("Clear")
        self.clearButton.setIcon(clearIcon)
        self.closeButton = QtGui.QPushButton("Close")
        self.closeButton.setIcon(closeIcon)
        #self.buttonsLayout.addWidget(self.addButton)
        self.buttonsLayout.addWidget(self.removeButton)
        self.buttonsLayout.addWidget(self.clearButton)
        self.buttonsLayout.addStretch(0)
        self.buttonsLayout.addWidget(self.closeButton)

        self.editor = QtGui.QTableView()
        self.editor.setAlternatingRowColors(True)
        self.editor.setSortingEnabled(True)

        self.tableLayout = QtGui.QGridLayout()
        self.tableLayout.addWidget(self.editor)
        self.editorLayout.addLayout(self.tableLayout)

        self.infoLayout = QtGui.QFormLayout()
        self.editorLayout.addLayout(self.infoLayout)

        self.titleLabel = QtGui.QLabel("Title :")
        self.titleLabel2 = QtGui.QLabel()
        self.titleLabel2.setFont(boldFont)
        self.speakerLabel = QtGui.QLabel("Speaker :")
        self.speakerLabel2 = QtGui.QLabel()
        self.speakerLabel2.setFont(boldFont)
        self.descriptionLabel = QtGui.QLabel("Description :")
        self.descriptionLabel2 = QtGui.QLabel()
        self.descriptionLabel2.setFont(boldFont)
        self.levelLabel = QtGui.QLabel("Level :")
        self.levelLabel2 = QtGui.QLabel()
        self.levelLabel2.setFont(boldFont)
        self.eventLabel = QtGui.QLabel("Event :")
        self.eventLabel2 = QtGui.QLabel()
        self.eventLabel2.setFont(boldFont)
        self.roomLabel = QtGui.QLabel("Room :")
        self.roomLabel2 = QtGui.QLabel()
        self.roomLabel2.setFont(boldFont)
        self.startTimeLabel = QtGui.QLabel("Start Time :")
        self.startTimeLabel2 = QtGui.QLabel()
        self.startTimeLabel2.setFont(boldFont)
        self.endTimeLabel = QtGui.QLabel("End Time :")
        self.endTimeLabel2 = QtGui.QLabel()
        self.endTimeLabel2.setFont(boldFont)

        self.infoLayout.addRow(self.titleLabel, self.titleLabel2)
        self.infoLayout.addRow(self.speakerLabel, self.speakerLabel2)
        self.infoLayout.addRow(self.descriptionLabel, self.descriptionLabel2)
        self.infoLayout.addRow(self.levelLabel, self.levelLabel2)
        self.infoLayout.addRow(self.eventLabel, self.eventLabel2)
        self.infoLayout.addRow(self.roomLabel, self.roomLabel2)
        self.infoLayout.addRow(self.startTimeLabel, self.startTimeLabel2)
        self.infoLayout.addRow(self.endTimeLabel, self.endTimeLabel2)

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    main = ReportEditorWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = CommandButtons
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QPushButton
from PyQt4.QtGui import QLineEdit
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QWidget
from PyQt4.QtGui import QIcon


class CommandButtons(QWidget):

    def __init__(self, parent=None):
        super(CommandButtons, self).__init__(parent)
        self.setWindowTitle('Unlock Talk Details')

        self.layout = QHBoxLayout()
        self.setLayout(self.layout)

        importIcon = QIcon.fromTheme("document-open")
        exportIcon = QIcon.fromTheme("document-save")
        addIcon = QIcon.fromTheme("list-add")
        removeIcon = QIcon.fromTheme("list-remove")
        removeAllIcon = QIcon.fromTheme("window-close")

        self.importButton = QPushButton('Import')
        self.importButton.setIcon(importIcon)
        self.exportButton = QPushButton('Export')
        self.exportButton.setIcon(exportIcon)
        self.addButton = QPushButton('Add New Talk')
        self.addButton.setIcon(addIcon)
        self.removeButton = QPushButton('Remove')
        self.removeButton.setIcon(removeIcon)
        self.removeAllButton = QPushButton('Remove All')
        self.removeAllButton.setIcon(removeAllIcon)
        self.searchLineEdit = QLineEdit()
        self.searchLineEdit.setPlaceholderText("Search...")
        self.searchIcon = QIcon.fromTheme("edit-find")
        self.searchButton = QPushButton('Search')
        self.searchButton.setIcon(self.searchIcon)
        self.layout.addWidget(self.importButton)
        self.layout.addWidget(self.exportButton)
        self.layout.addWidget(self.addButton)
        self.layout.addWidget(self.removeButton)
        self.layout.addWidget(self.removeAllButton)
        self.layout.addStretch()
        self.layout.addWidget(self.searchLineEdit)
        self.layout.addWidget(self.searchButton)
        self.layout.addStretch()

if __name__ == "__main__":
    import sys
    from PyQt4.QtGui import QApplication
    app = QApplication(sys.argv)
    main = CommandButtons()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = ImportTalksWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2011, 2013 Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Michael Brawn, Thanh Ha
'''

from PyQt4 import QtGui
import sys


class ImportTalksWidget(QtGui.QWidget):

    '''classdocs'''
    def __init__(self, parent=None):
        '''Constructor'''
        QtGui.QWidget.__init__(self, parent)
        self.mainLayout = QtGui.QVBoxLayout()
        self.setLayout(self.mainLayout)

        self.importTalksGroupBox = QtGui.QGroupBox("Import Talks")

        self.importTalksLayout = QtGui.QFormLayout()
        self.importTalksGroupBox.setLayout(self.importTalksLayout)

        # Buttons
        self.importButton = QtGui.QPushButton("Import")
        self.cancelButton = QtGui.QPushButton("Cancel")

        # Radio Button Group
        self.buttonGroup = QtGui.QButtonGroup(self.mainLayout)
        self.csvRadioButton = QtGui.QRadioButton("CSV File")
        self.csvRadioButton.setChecked(True)
        self.rssRadioButton = QtGui.QRadioButton("RSS URL")
        self.buttonGroup.addButton(self.csvRadioButton)
        self.buttonGroup.addButton(self.rssRadioButton)

        # CSV Layout
        self.csvLayout = QtGui.QHBoxLayout()
        self.csvWidget = QtGui.QWidget()
        self.csvWidget.setLayout(self.csvLayout)
        self.csvLineEdit = QtGui.QLineEdit()

        if sys.platform == 'win32':
            if hasattr(QtGui.QLineEdit(), 'setPlaceholderText'):
                self.csvLineEdit.setPlaceholderText("C:\Example\Freeseer2011.csv")
        else:
            if hasattr(QtGui.QLineEdit(), 'setPlaceholderText'):
                self.csvLineEdit.setPlaceholderText("/home/freeseer/Example/Freeseer2011.csv")
        self.csvFileSelectButton = QtGui.QToolButton()
        csvFileSelectButton = QtGui.QIcon.fromTheme("folder")
        self.csvFileSelectButton.setIcon(csvFileSelectButton)

        self.csvLayout.addWidget(self.csvRadioButton)
        self.csvLayout.addWidget(self.csvLineEdit)
        self.csvLayout.addWidget(self.csvFileSelectButton)

        #
        # RSS Layout
        #
        self.rssWidget = QtGui.QWidget()
        self.rssLayout = QtGui.QHBoxLayout()
        self.rssWidget.setLayout(self.rssLayout)

        self.rssLineEdit = QtGui.QLineEdit()
        self.rssLineEdit.setEnabled(False)
        if hasattr(QtGui.QLineEdit(), 'setPlaceholderText'):
            self.rssLineEdit.setPlaceholderText("http://www.example.com/rss")
        self.rssLayout.addWidget(self.rssRadioButton)
        self.rssLayout.addWidget(self.rssLineEdit)

        #
        # Layout
        #
        self.mainLayout.addWidget(self.importTalksGroupBox)
        self.mainLayout.addWidget(self.csvWidget)
        self.mainLayout.addWidget(self.rssWidget)

        self.importCommandButtonsWidget = QtGui.QWidget()
        self.importCommandButtonsLayout = QtGui.QHBoxLayout()
        self.importCommandButtonsWidget.setLayout(self.importCommandButtonsLayout)
        self.importCommandButtonsLayout.addStretch()
        self.importCommandButtonsLayout.addWidget(self.importButton)
        self.importCommandButtonsLayout.addWidget(self.cancelButton)
        self.mainLayout.addWidget(self.importCommandButtonsWidget)

if __name__ == "__main__":
    app = QtGui.QApplication(sys.argv)
    main = ImportTalksWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = NewTalkWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

from PyQt4.QtGui import QDialog
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QPushButton
from PyQt4.QtGui import QVBoxLayout

from freeseer.frontend.talkeditor.TalkDetailsWidget import TalkDetailsWidget


class NewTalkWidget(QDialog):
    """Dialog for adding new talk to database"""
    def __init__(self, parent=None):
        super(NewTalkWidget, self).__init__(parent)

        self.resize(600, 200)

        self.layout = QVBoxLayout()
        self.setLayout(self.layout)

        self.bottomButtonLayout = QHBoxLayout()

        self.talkDetailsWidget = TalkDetailsWidget()
        self.layout.addWidget(self.talkDetailsWidget)

        self.talkDetailsWidget.saveButton.hide()
        addIcon = QIcon.fromTheme("list-add")
        cancelIcon = QIcon.fromTheme("edit-clear")

        self.addButton = QPushButton('Add')
        self.addButton.setIcon(addIcon)
        self.cancelButton = QPushButton('Cancel')
        self.cancelButton.setIcon(cancelIcon)

        self.talkDetailsWidget.layout.addLayout(self.bottomButtonLayout, 6, 1, 1, 1)

        self.bottomButtonLayout.addWidget(self.addButton)
        self.bottomButtonLayout.addWidget(self.cancelButton)

        self.setWindowTitle("New Talk")

        self.talkDetailsWidget.enable_input_fields()
        self.talkDetailsWidget.dateEdit.setDisplayFormat('dd MMMM, yyyy')

########NEW FILE########
__FILENAME__ = TalkDetailsWidget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtCore import Qt
from PyQt4.QtCore import QDate

from PyQt4.QtGui import QDateEdit
from PyQt4.QtGui import QGridLayout
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QLineEdit
from PyQt4.QtGui import QPlainTextEdit
from PyQt4.QtGui import QTimeEdit
from PyQt4.QtGui import QWidget
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QPushButton


class TalkDetailsWidget(QWidget):

    def __init__(self, parent=None):
        super(TalkDetailsWidget, self).__init__(parent)

        self.layout = QGridLayout()
        self.setLayout(self.layout)

        self.buttonLayout = QHBoxLayout()

        saveIcon = QIcon.fromTheme("document-save")
        self.saveButton = QPushButton('Save Talk')
        self.saveButton.setIcon(saveIcon)
        self.buttonLayout.addWidget(self.saveButton)

        self.layout.addLayout(self.buttonLayout, 0, 1, 1, 1)

        self.titleLabel = QLabel('Title')
        self.titleLineEdit = QLineEdit()
        self.presenterLabel = QLabel('Presenter')
        self.presenterLineEdit = QLineEdit()
        self.layout.addWidget(self.titleLabel, 1, 0, 1, 1)
        self.layout.addWidget(self.titleLineEdit, 1, 1, 1, 1)
        self.layout.addWidget(self.presenterLabel, 1, 2, 1, 1)
        self.layout.addWidget(self.presenterLineEdit, 1, 3, 1, 1)

        self.eventLabel = QLabel('Event')
        self.eventLineEdit = QLineEdit()
        self.categoryLabel = QLabel('Category')
        self.categoryLineEdit = QLineEdit()

        self.layout.addWidget(self.eventLabel, 2, 0, 1, 1)
        self.layout.addWidget(self.eventLineEdit, 2, 1, 1, 1)
        self.layout.addWidget(self.categoryLabel, 2, 2, 1, 1)
        self.layout.addWidget(self.categoryLineEdit, 2, 3, 1, 1)

        self.roomLabel = QLabel('Room')
        self.roomLineEdit = QLineEdit()
        self.dateLayout = QHBoxLayout()
        self.dateLabel = QLabel('Date')
        self.dateEdit = QDateEdit()
        currentDate = QDate()
        self.dateEdit.setDate(currentDate.currentDate())
        self.dateEdit.setCalendarPopup(True)

        self.layout.addWidget(self.roomLabel, 3, 0, 1, 1)
        self.layout.addWidget(self.roomLineEdit, 3, 1, 1, 1)
        self.dateLayout.addWidget(self.dateEdit)
        self.layout.addWidget(self.dateLabel, 3, 2, 1, 1)
        self.layout.addLayout(self.dateLayout, 3, 3, 1, 1)

        self.startTimeLayout = QHBoxLayout()
        self.startTimeLabel = QLabel('Start Time')
        self.startTimeEdit = QTimeEdit()
        self.startTimeLayout.addWidget(self.startTimeEdit)
        self.endTimeLayout = QHBoxLayout()
        self.endTimeLabel = QLabel('End Time')
        self.endTimeEdit = QTimeEdit()
        self.endTimeLayout.addWidget(self.endTimeEdit)

        self.layout.addWidget(self.startTimeLabel, 4, 0, 1, 1)
        self.layout.addLayout(self.startTimeLayout, 4, 1, 1, 1)
        self.layout.addWidget(self.endTimeLabel, 4, 2, 1, 1)
        self.layout.addLayout(self.endTimeLayout, 4, 3, 1, 1)

        self.descriptionLabel = QLabel('Description')
        self.descriptionLabel.setAlignment(Qt.AlignTop)
        self.descriptionTextEdit = QPlainTextEdit()
        self.layout.addWidget(self.descriptionLabel, 5, 0, 1, 1)
        self.layout.addWidget(self.descriptionTextEdit, 5, 1, 1, 3)

    def enable_input_fields(self):
            self.titleLineEdit.setPlaceholderText("Enter Talk Title")
            self.presenterLineEdit.setPlaceholderText("Enter Presenter Name")
            self.categoryLineEdit.setPlaceholderText("Enter Category Type")
            self.eventLineEdit.setPlaceholderText("Enter Event Name")
            self.roomLineEdit.setPlaceholderText("Enter Room Location")
            self.titleLineEdit.setEnabled(True)
            self.presenterLineEdit.setEnabled(True)
            self.categoryLineEdit.setEnabled(True)
            self.eventLineEdit.setEnabled(True)
            self.roomLineEdit.setEnabled(True)
            self.dateEdit.setEnabled(True)
            self.startTimeEdit.setEnabled(True)
            self.endTimeEdit.setEnabled(True)
            self.descriptionTextEdit.setEnabled(True)

    def disable_input_fields(self):
            self.titleLineEdit.setPlaceholderText("")
            self.presenterLineEdit.setPlaceholderText("")
            self.categoryLineEdit.setPlaceholderText("")
            self.eventLineEdit.setPlaceholderText("")
            self.roomLineEdit.setPlaceholderText("")
            self.titleLineEdit.setEnabled(False)
            self.presenterLineEdit.setEnabled(False)
            self.categoryLineEdit.setEnabled(False)
            self.eventLineEdit.setEnabled(False)
            self.roomLineEdit.setEnabled(False)
            self.dateEdit.setEnabled(False)
            self.startTimeEdit.setEnabled(False)
            self.endTimeEdit.setEnabled(False)
            self.descriptionTextEdit.setEnabled(False)

if __name__ == "__main__":
    import sys
    from PyQt4.QtGui import QApplication
    app = QApplication(sys.argv)
    main = TalkDetailsWidget()
    main.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = talkeditor
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

# python-libs
import logging

# PyQt modules
from PyQt4.QtCore import SIGNAL
from PyQt4.QtCore import QStringList
from PyQt4.QtCore import Qt
from PyQt4.QtGui import QAbstractItemView
from PyQt4.QtGui import QAction
from PyQt4.QtGui import QCompleter
from PyQt4.QtGui import QDataWidgetMapper
from PyQt4.QtGui import QFileDialog
from PyQt4.QtGui import QHeaderView
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QMessageBox
from PyQt4.QtGui import QPixmap
from PyQt4.QtGui import QSortFilterProxyModel
from PyQt4.QtGui import QTableView
from PyQt4.QtGui import QVBoxLayout
from PyQt4.QtGui import QWidget

# Freeseer modules
from freeseer.framework.presentation import Presentation
from freeseer.frontend.qtcommon.FreeseerApp import FreeseerApp

# TalkEditor modules
from freeseer.frontend.talkeditor.CommandButtons import CommandButtons
from freeseer.frontend.talkeditor.TalkDetailsWidget import TalkDetailsWidget
from freeseer.frontend.talkeditor.NewTalkWidget import NewTalkWidget
from freeseer.frontend.talkeditor.ImportTalksWidget import ImportTalksWidget

log = logging.getLogger(__name__)


class TalkEditorApp(FreeseerApp):
    '''Freeseer talk database editor main gui class'''
    def __init__(self, config, db):
        FreeseerApp.__init__(self)

        self.config = config
        self.db = db

        icon = QIcon()
        icon.addPixmap(QPixmap(':/freeseer/logo.png'), QIcon.Normal, QIcon.Off)
        self.setWindowIcon(icon)
        self.resize(960, 600)

        #
        # Setup Layout
        #
        self.mainWidget = QWidget()
        self.mainLayout = QVBoxLayout()
        self.mainWidget.setLayout(self.mainLayout)
        self.setCentralWidget(self.mainWidget)
        self.mainLayout.setAlignment(Qt.AlignTop)

        # Add custom widgets
        self.commandButtons = CommandButtons()
        self.tableView = QTableView()
        self.tableView.setSortingEnabled(True)
        self.tableView.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.talkDetailsWidget = TalkDetailsWidget()
        self.importTalksWidget = ImportTalksWidget()
        self.newTalkWidget = NewTalkWidget()
        self.mainLayout.addWidget(self.importTalksWidget)
        #self.mainLayout.addLayout(self.titleLayout)
        self.mainLayout.addWidget(self.commandButtons)
        self.mainLayout.addWidget(self.tableView)
        self.mainLayout.addWidget(self.talkDetailsWidget)
        self.mainLayout.addWidget(self.importTalksWidget)
        # --- End Layout

        # Initialize geometry, to be used for restoring window positioning.
        self.geometry = None

        #
        # Setup Menubar
        #
        self.actionExportCsv = QAction(self)
        self.actionExportCsv.setObjectName('actionExportCsv')
        self.actionRemoveAll = QAction(self)
        self.actionRemoveAll.setObjectName('actionRemoveAll')

        # Actions
        self.menuFile.insertAction(self.actionExit, self.actionExportCsv)
        self.menuFile.insertAction(self.actionExit, self.actionRemoveAll)
        # --- End Menubar

        #
        # TableView Connections
        #
        self.connect(self.tableView, SIGNAL('activated(const QModelIndex)'), self.talk_selected)
        self.connect(self.tableView, SIGNAL('selected(const QModelIndex)'), self.talk_selected)
        self.connect(self.tableView, SIGNAL('clicked(const QModelIndex)'), self.talk_selected)

        # Import Widget
        self.connect(self.importTalksWidget.csvRadioButton, SIGNAL('toggled(bool)'), self.toggle_import)
        self.connect(self.importTalksWidget.importButton, SIGNAL('clicked()'), self.import_talks)
        self.connect(self.importTalksWidget.cancelButton, SIGNAL('clicked()'), self.hide_import_talks_widget)
        self.importTalksWidget.setHidden(True)
        self.connect(self.importTalksWidget.csvFileSelectButton, SIGNAL('clicked()'), self.csv_file_select)
        self.connect(self.importTalksWidget.csvLineEdit, SIGNAL('returnPressed()'),
            self.importTalksWidget.importButton.click)
        self.connect(self.importTalksWidget.rssLineEdit, SIGNAL('returnPressed()'),
            self.importTalksWidget.importButton.click)
        self.connect(self.actionExportCsv, SIGNAL('triggered()'), self.export_talks_to_csv)
        self.connect(self.actionRemoveAll, SIGNAL('triggered()'), self.confirm_reset)

        # Command Buttons
        self.connect(self.commandButtons.addButton, SIGNAL('clicked()'), self.show_new_talk_popup)
        self.connect(self.commandButtons.removeButton, SIGNAL('clicked()'), self.remove_talk)
        self.connect(self.commandButtons.removeAllButton, SIGNAL('clicked()'), self.confirm_reset)
        self.connect(self.commandButtons.importButton, SIGNAL('clicked()'), self.show_import_talks_widget)
        self.connect(self.commandButtons.exportButton, SIGNAL('clicked()'), self.export_talks_to_csv)
        self.connect(self.commandButtons.searchButton, SIGNAL('clicked()'), self.search_talks)
        self.connect(self.commandButtons.searchLineEdit, SIGNAL('textEdited(QString)'), self.search_talks)
        self.connect(self.commandButtons.searchLineEdit, SIGNAL('returnPressed()'), self.search_talks)

        # Talk Details Buttons
        self.connect(self.talkDetailsWidget.saveButton, SIGNAL('clicked()'), self.update_talk)

        # Talk Details Widget
        self.connect(self.talkDetailsWidget.titleLineEdit, SIGNAL('textEdited(const QString)'), self.enable_save)
        self.connect(self.talkDetailsWidget.presenterLineEdit, SIGNAL('textEdited(const QString)'), self.enable_save)
        self.connect(self.talkDetailsWidget.categoryLineEdit, SIGNAL('textEdited(const QString)'), self.enable_save)
        self.connect(self.talkDetailsWidget.eventLineEdit, SIGNAL('textEdited(const QString)'), self.enable_save)
        self.connect(self.talkDetailsWidget.roomLineEdit, SIGNAL('textEdited(const QString)'), self.enable_save)
        self.connect(self.talkDetailsWidget.descriptionTextEdit, SIGNAL('modificationChanged(bool)'), self.enable_save)
        self.connect(self.talkDetailsWidget.dateEdit, SIGNAL('dateChanged(const QDate)'), self.enable_save)
        self.connect(self.talkDetailsWidget.startTimeEdit, SIGNAL('timeChanged(const QTime)'), self.enable_save)
        self.connect(self.talkDetailsWidget.endTimeEdit, SIGNAL('timeChanged(const QTime)'), self.enable_save)

        # New Talk Widget
        self.newTalkWidget.connect(self.newTalkWidget.addButton, SIGNAL('clicked()'), self.add_talk)
        self.newTalkWidget.connect(self.newTalkWidget.cancelButton, SIGNAL('clicked()'), self.newTalkWidget.reject)

        # Load default language
        actions = self.menuLanguage.actions()
        for action in actions:
            if action.data().toString() == self.config.default_language:
                action.setChecked(True)
                self.translate(action)
                break

        # Load Talk Database
        self.load_presentations_model()

        # Setup Autocompletion
        self.update_autocomplete_fields()

        self.talkDetailsWidget.saveButton.setEnabled(False)

        # Select first item
        #self.tableView.setCurrentIndex(self.proxy.index(0,0))
        #self.talk_selected(self.proxy.index(0,0))

    #
    # Translation
    #
    def retranslate(self):
        self.setWindowTitle(self.app.translate("TalkEditorApp", "Freeseer Talk Editor"))

        #
        # Reusable Strings
        #
        self.confirmDBClearTitleString = self.app.translate("TalkEditorApp", "Remove All Talks from Database")
        self.confirmDBClearQuestionString = self.app.translate("TalkEditorApp",
                                                               "Are you sure you want to clear the DB?")
        self.confirmTalkDetailsClearTitleString = self.app.translate("TalkEditorApp", "Unsaved Data")
        self.confirmTalkDetailsClearQuestionString = self.app.translate("TalkEditorApp",
                                                                        "Unsaved talk details will be lost. Continue?")
        # --- End Reusable Strings

        #
        # Menubar
        #
        self.actionExportCsv.setText(self.app.translate("TalkEditorApp", "&Export to CSV"))
        self.actionRemoveAll.setText(self.app.translate("TalkEditorApp", "&Remove All Talks"))

        # --- End Menubar

        #
        # TalkDetailsWidget
        #
        self.talkDetailsWidget.titleLabel.setText(self.app.translate("TalkEditorApp", "Title"))
        self.talkDetailsWidget.presenterLabel.setText(self.app.translate("TalkEditorApp", "Presenter"))
        self.talkDetailsWidget.categoryLabel.setText(self.app.translate("TalkEditorApp", "Category"))
        self.talkDetailsWidget.eventLabel.setText(self.app.translate("TalkEditorApp", "Event"))
        self.talkDetailsWidget.roomLabel.setText(self.app.translate("TalkEditorApp", "Room"))
        self.talkDetailsWidget.dateLabel.setText(self.app.translate("TalkEditorApp", "Date"))
        self.talkDetailsWidget.startTimeLabel.setText(self.app.translate("TalkEditorApp", "Start Time"))
        self.talkDetailsWidget.endTimeLabel.setText(self.app.translate("TalkEditorApp", "End Time"))
        # --- End TalkDetailsWidget

        #
        # Import Talks Widget Translations
        #
        self.importTalksWidget.rssRadioButton.setText(self.app.translate("TalkEditorApp", "RSS URL"))
        self.importTalksWidget.csvRadioButton.setText(self.app.translate("TalkEditorApp", "CSV File"))
        self.importTalksWidget.importButton.setText(self.app.translate("TalkEditorApp", "Import"))
        # --- End Talks Widget Translations

        #
        # Command Button Translations\
        #
        self.commandButtons.importButton.setText(self.app.translate("TalkEditorApp", "Import"))
        self.commandButtons.exportButton.setText(self.app.translate("TalkEditorApp", "Export"))
        self.commandButtons.addButton.setText(self.app.translate("TalkEditorApp", "Add New Talk"))
        self.commandButtons.removeButton.setText(self.app.translate("TalkEditorApp", "Remove"))
        self.commandButtons.removeAllButton.setText(self.app.translate("TalkEditorApp", "Remove All"))
        # --- End Command Butotn Translations

        #
        # Search Widget Translations
        #
        self.commandButtons.searchButton.setText(self.app.translate("TalkEditorApp", "Search"))
        # --- End Command Button Translations

    def load_presentations_model(self):
        # Load Presentation Model
        self.presentationModel = self.db.get_presentations_model()
        self.proxy = QSortFilterProxyModel()
        self.proxy.setSourceModel(self.presentationModel)
        self.tableView.setModel(self.proxy)
        self.proxy.setFilterCaseSensitivity(Qt.CaseInsensitive)

        # Fill table whitespace.
        self.tableView.horizontalHeader().setStretchLastSection(False)
        self.tableView.horizontalHeader().setResizeMode(1, QHeaderView.Stretch)

        # Hide the ID field
        self.tableView.setColumnHidden(0, True)

        # Map data to widgets
        self.mapper = QDataWidgetMapper()
        self.mapper.setModel(self.proxy)
        self.mapper.setSubmitPolicy(QDataWidgetMapper.ManualSubmit)
        self.mapper.addMapping(self.talkDetailsWidget.titleLineEdit, 1)
        self.mapper.addMapping(self.talkDetailsWidget.presenterLineEdit, 2)
        self.mapper.addMapping(self.talkDetailsWidget.categoryLineEdit, 4)
        self.mapper.addMapping(self.talkDetailsWidget.eventLineEdit, 5)
        self.mapper.addMapping(self.talkDetailsWidget.roomLineEdit, 6)
        self.mapper.addMapping(self.talkDetailsWidget.descriptionTextEdit, 3)
        self.mapper.addMapping(self.talkDetailsWidget.dateEdit, 7)
        self.mapper.addMapping(self.talkDetailsWidget.startTimeEdit, 8)
        self.mapper.addMapping(self.talkDetailsWidget.endTimeEdit, 9)

        # Load StringLists
        self.titleList = QStringList(self.db.get_string_list("Title"))
        #self.speakerList = QStringList(self.db.get_speaker_list())
        #self.categoryList = QStringList(self.db.get_category_list())
        #self.eventList = QStringList(self.db.get_event_list())
        #self.roomList = QStringList(self.db.get_room_list())

        #Disble input
        self.talkDetailsWidget.disable_input_fields()

    def search_talks(self):
        # The default value is 0. If the value is -1, the keys will be read from all columns.
        self.proxy.setFilterKeyColumn(-1)
        self.proxy.setFilterFixedString(self.commandButtons.searchLineEdit.text())

    def talk_selected(self, model):
        self.mapper.setCurrentIndex(model.row())
        self.talkDetailsWidget.enable_input_fields()
        self.talkDetailsWidget.saveButton.setEnabled(False)

    def toggle_import(self):
        if self.importTalksWidget.csvRadioButton.isChecked():
            self.importTalksWidget.csvLineEdit.setEnabled(True)
            self.importTalksWidget.csvFileSelectButton.setEnabled(True)
            self.importTalksWidget.rssLineEdit.setEnabled(False)
        else:
            self.importTalksWidget.csvLineEdit.setEnabled(False)
            self.importTalksWidget.csvFileSelectButton.setEnabled(False)
            self.importTalksWidget.rssLineEdit.setEnabled(True)

    def show_import_talks_widget(self):
        self.commandButtons.setHidden(True)
        self.tableView.setHidden(True)
        self.talkDetailsWidget.setHidden(True)
        self.importTalksWidget.setHidden(False)

    def hide_import_talks_widget(self):
        self.commandButtons.setHidden(False)
        self.tableView.setHidden(False)
        self.talkDetailsWidget.setHidden(False)
        self.importTalksWidget.setHidden(True)

    def add_talk(self):
        """Adds a new talk to the database using data from the NewTalkWidget input fields"""
        presentation = self.create_presentation(self.newTalkWidget.talkDetailsWidget)

        if presentation:
            self.db.insert_presentation(presentation)
            self.newTalkWidget.accept()  # Close the dialog

    def update_talk(self):
        """Updates the currently selected talk using data from the TalkEditorApp input fields"""
        selected_talk = self.tableView.currentIndex()
        if selected_talk.row() >= 0:  # The tableView index begins at 0 and is -1 by default
            talk_id = selected_talk.sibling(selected_talk.row(), 0).data().toString()
            presentation = self.create_presentation(self.talkDetailsWidget)

            if presentation:
                self.db.update_presentation(talk_id, presentation)
                self.apply_changes(selected_talk)
                self.talkDetailsWidget.saveButton.setEnabled(False)

    def create_presentation(self, talkDetailsWidget):
        """Creates and returns an instance of Presentation using data from the input fields"""
        date = talkDetailsWidget.dateEdit.date()
        startTime = talkDetailsWidget.startTimeEdit.time()
        endTime = talkDetailsWidget.endTimeEdit.time()

        title = unicode(talkDetailsWidget.titleLineEdit.text()).strip()
        if title:
            return Presentation(
                unicode(talkDetailsWidget.titleLineEdit.text()).strip(),
                unicode(talkDetailsWidget.presenterLineEdit.text()).strip(),
                unicode(talkDetailsWidget.descriptionTextEdit.toPlainText()).strip(),
                unicode(talkDetailsWidget.categoryLineEdit.text()).strip(),
                unicode(talkDetailsWidget.eventLineEdit.text()).strip(),
                unicode(talkDetailsWidget.roomLineEdit.text()).strip(),
                unicode(date.toString(Qt.ISODate)),
                unicode(startTime.toString(Qt.ISODate)),
                unicode(endTime.toString(Qt.ISODate)))

    def show_new_talk_popup(self):
        """Displays a modal dialog with a talk details view

        When Add is selected, a new talk is added to the database using the input field data.
        When Cancel is selected, no talk is added.
        """
        log.info('Opening Add Talk window...')
        self.clear_new_talk_fields()
        self.remove_new_talk_placeholder_text()
        self.newTalkWidget.talkDetailsWidget.titleLineEdit.setFocus()
        if self.newTalkWidget.exec_() == 1:
            self.apply_changes()
            self.talkDetailsWidget.disable_input_fields()
        else:
            log.info('No talk added...')

    def apply_changes(self, updated_talk=None):
        """Repopulates the model to display the effective changes

        Updates the autocomplete fields.
        Displays the updated model in the table view, and selects the newly updated/added talk.
        """
        self.presentationModel.select()
        self.select_talk(updated_talk)
        self.update_autocomplete_fields()

    def select_talk(self, talk=None):
        """Selects the given talk in the table view

        If no talk is given, the last row in the table view is selected.
        """
        if talk:
            row = talk.row()
            column = talk.column()
        else:
            row = self.presentationModel.rowCount() - 1  # Select last row
            column = 0

        self.tableView.selectRow(row)
        self.tableView.setCurrentIndex(self.proxy.index(row, column))
        self.talk_selected(self.proxy.index(row, column))

    def remove_talk(self):
        try:
            rows_selected = self.tableView.selectionModel().selectedRows()
        except:
            return

        # Reversed because rows in list change position once row is removed
        for row in reversed(rows_selected):
            self.presentationModel.removeRow(row.row())

    def load_talk(self):
        try:
            self.tableView.currentIndex().row()
        except:
            return

        self.mapper.addMapping(self.talkDetailsWidget.roomLineEdit, 6)
        self.presentationModel.select()

    def reset(self):
        self.db.clear_database()
        self.presentationModel.select()

    def confirm_reset(self):
        """Presents a confirmation dialog to ask the user if they are sure they wish to remove the talk database.
        If Yes call the reset() function"""
        confirm = QMessageBox.question(self,
                                       self.confirmDBClearTitleString,
                                       self.confirmDBClearQuestionString,
                                       QMessageBox.Yes |
                                       QMessageBox.No,
                                       QMessageBox.No)

        if confirm == QMessageBox.Yes:
            self.reset()

    def add_talks_from_rss(self):
        rss_url = unicode(self.importTalksWidget.rssLineEdit.text())
        if rss_url:
            self.db.add_talks_from_rss(rss_url)
            self.presentationModel.select()
            self.hide_import_talks_widget()
        else:
            error = QMessageBox()
            error.setText("Please enter a RSS URL")
            error.exec_()

    def closeEvent(self, event):
        log.info('Exiting talk database editor...')
        self.geometry = self.saveGeometry()
        event.accept()

    def csv_file_select(self):
        fname = QFileDialog.getOpenFileName(
            self, 'Select file', "", "*.csv")
        if fname:
            self.importTalksWidget.csvLineEdit.setText(fname)

    def add_talks_from_csv(self):
        fname = self.importTalksWidget.csvLineEdit.text()

        if fname:
            self.db.add_talks_from_csv(fname)
            self.presentationModel.select()
            self.hide_import_talks_widget()
        else:
            error = QMessageBox()
            error.setText("Please select a file")
            error.exec_()

    def import_talks(self):
        if self.importTalksWidget.csvRadioButton.isChecked():
            self.add_talks_from_csv()
        else:
            self.add_talks_from_rss()

        self.update_autocomplete_fields()

    def export_talks_to_csv(self):
        fname = QFileDialog.getSaveFileName(self, 'Select file', "", "*.csv")
        if fname:
            self.db.export_talks_to_csv(fname)

    def update_autocomplete_fields(self):
        self.titleList = QStringList(self.db.get_string_list("Title"))
        self.speakerList = QStringList(self.db.get_string_list("Speaker"))
        self.categoryList = QStringList(self.db.get_string_list("Category"))
        self.eventList = QStringList(self.db.get_string_list("Event"))
        self.roomList = QStringList(self.db.get_string_list("Room"))

        self.titleCompleter = QCompleter(self.titleList)
        self.titleCompleter.setCaseSensitivity(Qt.CaseInsensitive)
        self.speakerCompleter = QCompleter(self.speakerList)
        self.speakerCompleter.setCaseSensitivity(Qt.CaseInsensitive)
        self.categoryCompleter = QCompleter(self.categoryList)
        self.categoryCompleter.setCaseSensitivity(Qt.CaseInsensitive)
        self.eventCompleter = QCompleter(self.eventList)
        self.eventCompleter.setCaseSensitivity(Qt.CaseInsensitive)
        self.roomCompleter = QCompleter(self.roomList)
        self.roomCompleter.setCaseSensitivity(Qt.CaseInsensitive)

        self.talkDetailsWidget.titleLineEdit.setCompleter(self.titleCompleter)
        self.talkDetailsWidget.presenterLineEdit.setCompleter(self.speakerCompleter)
        self.talkDetailsWidget.categoryLineEdit.setCompleter(self.categoryCompleter)
        self.talkDetailsWidget.eventLineEdit.setCompleter(self.eventCompleter)
        self.talkDetailsWidget.roomLineEdit.setCompleter(self.roomCompleter)

    def are_fields_enabled(self):
        return (self.talkDetailsWidget.titleLineEdit.isEnabled() and
                self.talkDetailsWidget.presenterLineEdit.isEnabled() and
                self.talkDetailsWidget.categoryLineEdit.isEnabled() and
                self.talkDetailsWidget.eventLineEdit.isEnabled() and
                self.talkDetailsWidget.roomLineEdit.isEnabled() and
                self.talkDetailsWidget.dateEdit.isEnabled() and
                self.talkDetailsWidget.startTimeEdit.isEnabled() and
                self.talkDetailsWidget.endTimeEdit.isEnabled())

    def unsaved_details_exist(self):
        """Checks if changes have been made to new/existing talk details

        Looks for text in the input fields and check the enabled state of the Save Talk button
        If the Save Talk button is enabled, the input fields contain modified values
        """
        return (self.talkDetailsWidget.saveButton.isEnabled() and
                (self.talkDetailsWidget.titleLineEdit.text() or
                self.talkDetailsWidget.presenterLineEdit.text() or
                self.talkDetailsWidget.categoryLineEdit.text() or
                self.talkDetailsWidget.descriptionTextEdit.toPlainText()))

    def enable_save(self):
        self.talkDetailsWidget.saveButton.setEnabled(True)

    def clear_new_talk_fields(self):
        """Removes existing data from all NewTalkWidget fields except event, room, date and time"""
        self.newTalkWidget.talkDetailsWidget.titleLineEdit.clear()
        self.newTalkWidget.talkDetailsWidget.presenterLineEdit.clear()
        self.newTalkWidget.talkDetailsWidget.descriptionTextEdit.clear()
        self.newTalkWidget.talkDetailsWidget.categoryLineEdit.clear()

    def remove_new_talk_placeholder_text(self):
        """Removes placeholder text in NewTalkWidget originally set by TalkDetailsWidget"""
        self.newTalkWidget.talkDetailsWidget.titleLineEdit.setPlaceholderText("")
        self.newTalkWidget.talkDetailsWidget.presenterLineEdit.setPlaceholderText("")
        self.newTalkWidget.talkDetailsWidget.categoryLineEdit.setPlaceholderText("")
        self.newTalkWidget.talkDetailsWidget.eventLineEdit.setPlaceholderText("")
        self.newTalkWidget.talkDetailsWidget.roomLineEdit.setPlaceholderText("")

########NEW FILE########
__FILENAME__ = youtube
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/


import os

from freeseer import settings
from freeseer.framework.youtube import Response
from freeseer.framework.youtube import YoutubeService


def get_defaults():
    """Retrieve the defaults value for client_secrets, video folder, etc.

    Returns:
        dictionary of default values which are:
        client_secrets: ~/<configdir>/client_secrets.json
        oauth2_token: ~/<configdir>/oauth2_token.json
        video_directory: ~/Videos
    """
    profile = settings.profile_manager.get("default")
    config = profile.get_config('freeseer.conf', settings.FreeseerConfig, storage_args=['Global'], read_only=True)
    return {
        "video_directory": config.videodir,
        "oauth2_token": os.path.join(settings.configdir, "oauth2_token.json"),
        "client_secrets": os.path.join(settings.configdir, "client_secrets.json")
    }


def handle_response(response_code, response):
    """Process the response from the Youtube API"""
    if response_code is Response.SUCCESS:
        print("The file was successfully uploaded with video id: {}".format(response['id']))
    elif response_code is Response.UNEXPECTED_FAILURE:
        print("The file failed to upload with unexpected response: {}".format(response))
    elif response_code is Response.UNRETRIABLE_ERROR:
        print("An unretriable HTTP error {} occurred:\n{}".format(response['status'], response['content']))
    elif response_code is Response.MAX_RETRIES_REACHED:
        print("The maximum number of retries has been reached")
    elif response_code is Response.ACCESS_TOKEN_ERROR:
        print("The access token has expired or been revoked, please run python -m freeseer config youtube")


def gather_videos(files):
    """Gather all valid videos into a set for upload"""
    # Because we are using a set, no duplicates will be present
    videos = set()
    for item in files:
        # Crawl subfolders
        if os.path.isdir(item):
            for root, _, filenames in os.walk(item):
                for filename in filenames:
                    filepath = os.path.join(root, filename)
                    # Check if its a video
                    if YoutubeService.valid_video_file(filepath):
                        videos.add(filepath)
        # If it exists it is a single file, check if its a video
        elif os.path.exists(item) and YoutubeService.valid_video_file(item):
            videos.add(item)
    return videos


def prompt_user(videos, confirmation=False):
    """Method to prompt user for confirmation, if yes is specified then no prompt is shown

    Returns: boolean value of final decision
    """
    if not confirmation:
        print("Found videos:")
        print("\n".join(videos))
        question = "Are you sure you would like to upload these videos? [Y/n]"
        confirmation = raw_input(question).lower() in ('', 'y', 'yes')
    return confirmation


def upload(files, token, assume_yes):
    """Uploads a file(s) to YouTube using the YouTube service API

    This function uploads a list of videos and/or directories of videos to YouTube.

    Args:
        token            - location of an oauth2 token
        files            - list of files and directories to upload
        assume_yes       - if True, assume yes to all interaction (default: False)
    """
    # check if token exists
    if not os.path.exists(token):
        print("{} does not exist, please specify a valid token file".format(token))
    else:
        # Gather videos specified and vids from folders specified into list
        videos = gather_videos(files)
        # Now begin upload process
        if not videos:
            print("Nothing to upload")
        # Prompt for confirmation
        elif prompt_user(videos, confirmation=assume_yes):
            youtube_service = YoutubeService()
            # Authorize with OAuth2 token
            youtube_service.authorize(token)
            for video in videos:
                response_code, response = youtube_service.upload_video(video)
                handle_response(response_code, response)
        # Response was no, so do nothing
        else:
            print("Exiting...")

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QLineEdit
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.label_client = QLabel("Client")
        self.lineedit_client = QLineEdit()
        layout.addRow(self.label_client, self.lineedit_client)

        self.label_connect = QLabel("Connect")
        self.lineedit_connect = QLineEdit()
        layout.addRow(self.label_connect, self.lineedit_connect)

        self.label_server = QLabel("Server")
        self.lineedit_server = QLineEdit()
        layout.addRow(self.label_server, self.lineedit_server)

        self.label_clientname = QLabel("Client Name")
        self.lineedit_clientname = QLineEdit()
        layout.addRow(self.label_clientname, self.lineedit_clientname)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QSizePolicy
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.source_label = QLabel('Source')
        self.source_combobox = QComboBox()
        self.source_combobox.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Maximum)
        layout.addRow(self.source_label, self.source_combobox)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtCore import Qt
from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QSizePolicy
from PyQt4.QtGui import QStackedWidget
from PyQt4.QtGui import QToolButton
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.label = QLabel("Audio Input")
        self.inputLayout = QHBoxLayout()
        self.combobox = QComboBox()
        self.combobox.setMinimumWidth(150)
        self.inputSettingsToolButton = QToolButton()
        self.inputSettingsToolButton.setText("Settings")
        configIcon = QIcon.fromTheme("preferences-other")
        self.inputSettingsToolButton.setIcon(configIcon)
        self.inputSettingsToolButton.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Maximum)
        self.inputSettingsToolButton.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.inputSettingsStack = QStackedWidget()
        blankWidget = QWidget()
        self.inputSettingsStack.addWidget(blankWidget)
        self.inputSettingsStack.addWidget(self.inputSettingsToolButton)
        self.inputLayout.addWidget(self.combobox)
        self.inputLayout.addWidget(self.inputSettingsStack)
        layout.addRow(self.label, self.inputLayout)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Aaron Brubacher
'''

from PyQt4.QtCore import Qt
from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QGridLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QSizePolicy
from PyQt4.QtGui import QStackedWidget
from PyQt4.QtGui import QToolButton
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QGridLayout()
        self.setLayout(layout)

        self.source1_label = QLabel('Source 1')
        self.source1_combobox = QComboBox()
        self.source1_combobox.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Maximum)
        self.source1_button = QToolButton()
        self.source1_button.setText("Settings")
        configIcon = QIcon.fromTheme("preferences-other")
        self.source1_button.setIcon(configIcon)
        self.source1_button.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Maximum)
        self.source1_button.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.source1_stack = QStackedWidget()
        blankWidget = QWidget()
        self.source1_stack.addWidget(blankWidget)
        self.source1_stack.addWidget(self.source1_button)
        layout.addWidget(self.source1_label, 0, 0)
        layout.addWidget(self.source1_combobox, 0, 1)
        layout.addWidget(self.source1_stack, 0, 2)

        self.source2_label = QLabel('Source 2')
        self.source2_combobox = QComboBox()
        self.source2_combobox.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Maximum)
        self.source2_button = QToolButton()
        self.source2_button.setText("Settings")
        self.source2_button.setIcon(configIcon)  # reuse icon from source1
        self.source2_button.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Maximum)
        self.source2_button.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.source2_stack = QStackedWidget()
        blankWidget = QWidget()
        self.source2_stack.addWidget(blankWidget)
        self.source2_stack.addWidget(self.source2_button)
        layout.addWidget(self.source2_label, 1, 0)
        layout.addWidget(self.source2_combobox, 1, 1)
        layout.addWidget(self.source2_stack, 1, 2)

########NEW FILE########
__FILENAME__ = csv_importer
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

"""
CSV Importer
--------------

An import plugin for CSV files used when adding presentations

@author: Rio Lowry
"""

import csv
import logging

from freeseer.framework.plugin import IImporter

log = logging.getLogger(__name__)


class CsvImporter(IImporter):
    """CSV Importer plugin for Freeseer

    Provides functionality to import presentations from a CSV file
    """

    name = "CSV Importer"
    os = ["linux", "linux2"]

    def get_presentations(self, fname):
        """Returns list of dictionaries of all presentations in the csv file."""
        presentations = []

        try:
            with open(fname) as csv_file:
                reader = csv.DictReader(csv_file)
                for row in reader:
                    talk = {
                        'Title': unicode(row.get('Title', ''), 'utf-8'),
                        'Speaker': unicode(row.get('Speaker', ''), 'utf-8'),
                        'Abstract': unicode(row.get('Abstract', ''), 'utf-8'),  # Description
                        'Level': unicode(row.get('Level', ''), 'utf-8'),
                        'Event': unicode(row.get('Event', ''), 'utf-8'),
                        'Room': unicode(row.get('Room', ''), 'utf-8'),
                        'Time': unicode(row.get('Time', ''), 'utf-8')
                    }

                    presentations.append(talk)

        except IOError:
            log.exception("CSV: File %s not found", csv_file)

        return presentations

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)
        self.feedbackLabel = QLabel("Feedback")
        self.feedbackComboBox = QComboBox()
        self.feedbackComboBox.addItem("autoaudiosink")
        self.feedbackComboBox.addItem("alsasink")

        layout.addRow(self.feedbackLabel, self.feedbackComboBox)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QLineEdit
from PyQt4.QtGui import QSpinBox
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.label_ip = QLabel("IP")
        self.lineedit_ip = QLineEdit()
        layout.addRow(self.label_ip, self.lineedit_ip)

        self.label_port = QLabel("Port")
        self.spinbox_port = QSpinBox()
        self.spinbox_port.setMinimum(0)
        self.spinbox_port.setMaximum(65535)
        layout.addRow(self.label_port, self.spinbox_port)

        self.label_password = QLabel("Password")
        self.lineedit_password = QLineEdit()
        layout.addRow(self.label_password, self.lineedit_password)

        self.label_mount = QLabel("Mount")
        self.lineedit_mount = QLineEdit()
        layout.addRow(self.label_mount, self.lineedit_mount)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QCheckBox
from PyQt4.QtGui import QDoubleSpinBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QSpinBox
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        #
        # Audio Quality
        #

        self.label_audio_quality = QLabel("Audio Quality")
        self.spinbox_audio_quality = QDoubleSpinBox()
        self.spinbox_audio_quality.setMinimum(0.0)
        self.spinbox_audio_quality.setMaximum(1.0)
        self.spinbox_audio_quality.setSingleStep(0.1)
        self.spinbox_audio_quality.setDecimals(1)
        self.spinbox_audio_quality.setValue(0.3)            # Default value 0.3
        layout.addRow(self.label_audio_quality, self.spinbox_audio_quality)

        #
        # Video Quality
        #

        self.label_video_quality = QLabel("Video Quality (kb/s)")
        self.spinbox_video_quality = QSpinBox()
        self.spinbox_video_quality.setMinimum(0)
        self.spinbox_video_quality.setMaximum(16777215)
        self.spinbox_video_quality.setValue(2400)           # Default value 2400
        layout.addRow(self.label_video_quality, self.spinbox_video_quality)

        #
        # Misc.
        #
        self.label_matterhorn = QLabel("Matterhorn Metadata")
        self.label_matterhorn.setToolTip("Generates Matterhorn Metadata in XML format")
        self.checkbox_matterhorn = QCheckBox()
        layout.addRow(self.label_matterhorn, self.checkbox_matterhorn)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        # Preview
        self.previewLabel = QLabel("Preview")
        self.previewComboBox = QComboBox()
        self.previewComboBox.addItem("autovideosink")
        self.previewComboBox.addItem("ximagesink")
        self.previewComboBox.addItem("xvimagesink")
        self.previewComboBox.addItem("gconfvideosink")

        layout.addRow(self.previewLabel, self.previewComboBox)

        # Leaky Queue
        # Allows user to set queue in video to be leaky - required to work with RTMP streaming plugin
        self.leakyQueueLabel = QLabel("Leaky Queue")
        self.leakyQueueComboBox = QComboBox()

        layout.addRow(self.leakyQueueLabel, self.leakyQueueComboBox)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QPushButton
from PyQt4.QtGui import QRadioButton
from PyQt4.QtGui import QSpinBox
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.desktopLabel = QLabel("Record Desktop")
        self.desktopButton = QRadioButton()
        layout.addRow(self.desktopLabel, self.desktopButton)

        # Record Area of Desktop
        areaGroup = QHBoxLayout()
        self.areaLabel = QLabel("Record Region")
        self.areaButton = QRadioButton()
        self.setAreaButton = QPushButton("Set")
        areaGroup.addWidget(self.areaButton)
        areaGroup.addWidget(self.setAreaButton)
        layout.addRow(self.areaLabel, areaGroup)

        # Select screen to record
        self.screenLabel = QLabel("Screen")
        self.screenSpinBox = QSpinBox()
        layout.addRow(self.screenLabel, self.screenSpinBox)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.devicesLabel = QLabel("Video Device")
        self.devicesCombobox = QComboBox()
        self.devicesCombobox.setMinimumWidth(150)
        layout.addRow(self.devicesLabel, self.devicesCombobox)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.devicesLabel = QLabel("Video Device")
        self.devicesCombobox = QComboBox()
        self.devicesCombobox.setMinimumWidth(150)
        layout.addRow(self.devicesLabel, self.devicesCombobox)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtGui import QCheckBox
from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QVBoxLayout
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QVBoxLayout()
        self.setLayout(layout)

        self.liveCheckBox = QCheckBox("Live Source")
        self.liveCheckBox.setToolTip('Act as a live video source')
        layout.addWidget(self.liveCheckBox)

        formWidget = QWidget()
        formLayout = QFormLayout()
        formWidget.setLayout(formLayout)
        layout.addWidget(formWidget)

        self.patternLabel = QLabel("Pattern")
        self.patternComboBox = QComboBox()

        formLayout.addRow(self.patternLabel, self.patternComboBox)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtCore import Qt
from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QGridLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QSizePolicy
from PyQt4.QtGui import QStackedWidget
from PyQt4.QtGui import QToolButton
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QGridLayout()
        self.setLayout(layout)

        self.mainInputLabel = QLabel("Main Source")
        self.mainInputComboBox = QComboBox()
        self.mainInputSetupButton = QToolButton()
        self.mainInputSetupButton.setText("Settings")
        configIcon = QIcon.fromTheme("preferences-other")
        self.mainInputSetupButton.setIcon(configIcon)
        self.mainInputSetupButton.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Maximum)
        self.mainInputSetupButton.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.mainInputSetupStack = QStackedWidget()
        blankWidget = QWidget()
        self.mainInputSetupStack.addWidget(blankWidget)
        self.mainInputSetupStack.addWidget(self.mainInputSetupButton)
        layout.addWidget(self.mainInputLabel, 0, 0)
        layout.addWidget(self.mainInputComboBox, 0, 1)
        layout.addWidget(self.mainInputSetupStack, 0, 2)

        self.pipInputLabel = QLabel("PIP Source")
        self.pipInputComboBox = QComboBox()
        self.pipInputSetupButton = QToolButton()
        self.pipInputSetupButton.setText("Settings")
        self.pipInputSetupButton.setIcon(configIcon)  # reuse the one from main input
        self.pipInputSetupButton.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Maximum)
        self.pipInputSetupButton.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.pipInputSetupStack = QStackedWidget()
        blankWidget = QWidget()
        self.pipInputSetupStack.addWidget(blankWidget)
        self.pipInputSetupStack.addWidget(self.pipInputSetupButton)
        layout.addWidget(self.pipInputLabel, 1, 0)
        layout.addWidget(self.pipInputComboBox, 1, 1)
        layout.addWidget(self.pipInputSetupStack, 1, 2)

########NEW FILE########
__FILENAME__ = widget
#!/usr/bin/python
# -*- coding: utf-8 -*-

'''
freeseer - vga/presentation capture software

Copyright (C) 2013  Free and Open Source Software Learning Centre
http://fosslc.org

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

For support, questions, suggestions or any other inquiries, visit:
http://wiki.github.com/Freeseer/freeseer/

@author: Thanh Ha
'''

from PyQt4.QtCore import Qt
from PyQt4.QtGui import QComboBox
from PyQt4.QtGui import QFormLayout
from PyQt4.QtGui import QHBoxLayout
from PyQt4.QtGui import QIcon
from PyQt4.QtGui import QLabel
from PyQt4.QtGui import QSizePolicy
from PyQt4.QtGui import QSlider
from PyQt4.QtGui import QSpinBox
from PyQt4.QtGui import QStackedWidget
from PyQt4.QtGui import QToolButton
from PyQt4.QtGui import QWidget


class ConfigWidget(QWidget):

    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        layout = QFormLayout()
        self.setLayout(layout)

        self.inputLabel = QLabel("Video Input")
        self.inputLayout = QHBoxLayout()
        self.inputCombobox = QComboBox()
        self.inputSettingsToolButton = QToolButton()
        self.inputSettingsToolButton.setText("Settings")
        configIcon = QIcon.fromTheme("preferences-other")
        self.inputSettingsToolButton.setIcon(configIcon)
        self.inputSettingsToolButton.setSizePolicy(QSizePolicy.Maximum, QSizePolicy.Maximum)
        self.inputSettingsToolButton.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.inputSettingsStack = QStackedWidget()
        blankWidget = QWidget()
        self.inputSettingsStack.addWidget(blankWidget)
        self.inputSettingsStack.addWidget(self.inputSettingsToolButton)
        self.inputLayout.addWidget(self.inputCombobox)
        self.inputLayout.addWidget(self.inputSettingsStack)
        layout.addRow(self.inputLabel, self.inputLayout)

        self.videocolourLabel = QLabel(self.tr("Colour Format"))
        self.videocolourComboBox = QComboBox()
        self.videocolourComboBox.addItem("video/x-raw-rgb")
        self.videocolourComboBox.addItem("video/x-raw-yuv")
        self.videocolourComboBox.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Maximum)
        layout.addRow(self.videocolourLabel, self.videocolourComboBox)

        self.framerateLabel = QLabel("Framerate")
        self.framerateLayout = QHBoxLayout()
        self.framerateSlider = QSlider()
        self.framerateSlider.setOrientation(Qt.Horizontal)
        self.framerateSlider.setMinimum(1)
        self.framerateSlider.setMaximum(60)
        self.framerateSpinBox = QSpinBox()
        self.framerateSpinBox.setMinimum(1)
        self.framerateSpinBox.setMaximum(60)
        self.framerateLayout.addWidget(self.framerateSlider)
        self.framerateLayout.addWidget(self.framerateSpinBox)
        layout.addRow(self.framerateLabel, self.framerateLayout)

        self.videoscaleLabel = QLabel("Video Scale")
        self.videoscaleComboBox = QComboBox()
        self.videoscaleComboBox.addItem("NOSCALE")
        self.videoscaleComboBox.setSizePolicy(QSizePolicy.Minimum, QSizePolicy.Maximum)
        layout.addRow(self.videoscaleLabel, self.videoscaleComboBox)

########NEW FILE########
__FILENAME__ = settings
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import os

from freeseer.framework.config.core import Config
from freeseer.framework.config.profile import ProfileManager
import freeseer.framework.config.options as options

# TODO: change to config_dir when all the pull requests from UCOSP Fall 2013 are merged in
configdir = os.path.abspath(os.path.expanduser('~/.freeseer/'))
default_profile_name = 'default'
default_config_file = 'freeseer.conf'

profile_manager = ProfileManager(os.path.join(configdir, 'profiles'))


class FreeseerConfig(Config):
    """General Freeseer profile settings."""

    resmap = {
        # No Scaling
        'default': '0x0',

        # Scaling
        '240p': '320x240',
        '360p': '480x360',
        '480p': '640x480',
        '720p': '1280x720',
        '1080p': '1920x1080'
    }

    videodir = options.FolderOption('~/Videos', auto_create=True)
    auto_hide = options.BooleanOption(False)
    resolution = options.ChoiceOption(resmap.keys(), 'default')
    enable_audio_recording = options.BooleanOption(True)
    enable_video_recording = options.BooleanOption(True)
    videomixer = options.StringOption('Video Passthrough')
    audiomixer = options.StringOption('Audio Passthrough')
    record_to_file = options.BooleanOption(True)
    record_to_file_plugin = options.StringOption('Ogg Output')
    record_to_stream = options.BooleanOption(False)
    record_to_stream_plugin = options.StringOption('RTMP Streaming')
    audio_feedback = options.BooleanOption(False)
    video_preview = options.BooleanOption(True)
    default_language = options.StringOption('tr_en_US.qm')

########NEW FILE########
__FILENAME__ = test_boolean
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.config.options import BooleanOption
from freeseer.tests.framework.config.options import OptionTest


class TestBooleanOptionNoDefault(unittest.TestCase, OptionTest):
    """Tests BooleanOption without a default value."""

    valid_success = [
        True,
        False,
    ]
    valid_failure = [
        'True',
        1337,
    ]

    encode_success = [
        (True, 'true'),
        (False, 'false'),
    ]

    decode_success = [
        ('true', True),
        ('false', False),
    ]

    def setUp(self):
        self.option = BooleanOption()


class TestBooleanOptionWithDefault(TestBooleanOptionNoDefault):
    """Test BooleanOption with a default value."""

    def setUp(self):
        self.option = BooleanOption(False)

    def test_default(self):
        """Tests that the default was set correctly."""
        self.assertEqual(self.option.default, False)

########NEW FILE########
__FILENAME__ = test_choice
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.config.options import ChoiceOption
from freeseer.tests.framework.config.options import OptionTest


class TestChoiceOptionNoDefault(unittest.TestCase, OptionTest):
    """Tests ChoiceOption without a default value."""

    valid_success = [
        'hello',
        'world',
    ]
    valid_failure = [
        'hello1',
        '1hello',
        'w0rld',
    ]

    encode_success = zip(valid_success, valid_success)

    decode_success = zip(valid_success, valid_success)
    decode_failure = valid_failure

    def setUp(self):
        self.option = ChoiceOption([
            'hello',
            'world',
        ])


class TestChoiceOptionWithDefault(TestChoiceOptionNoDefault):
    """Tests ChoiceOption with a default value."""

    def setUp(self):
        self.option = ChoiceOption([
            'hello',
            'world',
        ], 'hello')

    def test_default(self):
        """Tests that the default was set correctly."""
        self.assertEqual(self.option.default, 'hello')

########NEW FILE########
__FILENAME__ = test_folder
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import os
import shutil
import tempfile
import unittest

from freeseer.framework.config.options import FolderOption
from freeseer.tests.framework.config.options import OptionTest


class TestFolderOptionNoDefault(unittest.TestCase, OptionTest):
    """Tests FolderOption without a default value."""

    valid_success = [
        '/tmp',
    ]
    valid_failure = [
        '/tmp/1',
    ]

    encode_success = zip(valid_success, valid_success)

    decode_success = zip(valid_success, valid_success)
    decode_failure = valid_failure

    def setUp(self):
        self.option = FolderOption()

    def test_presentation(self):
        path = tempfile.mkdtemp()
        shutil.rmtree(path)

        presentation_value = self.option.presentation(path)
        self.assertEqual(presentation_value, path)
        self.assertFalse(os.path.exists(presentation_value))


class TestFolderOptionAutoCreate(TestFolderOptionNoDefault):
    """Tests FolderOption without a default value, and with auto_create turned on."""

    valid_failure = []

    decode_failure = []

    def setUp(self):
        self.option = FolderOption(auto_create=True)

    def test_presentation(self):
        path = tempfile.mkdtemp()
        shutil.rmtree(path)

        presentation_value = self.option.presentation(path)
        self.assertEqual(presentation_value, path)
        self.assertTrue(os.path.exists(presentation_value))

        shutil.rmtree(path)


class TestFolderOptionWithDefault(TestFolderOptionNoDefault):
    """Tests FolderOption with a default value."""

    def setUp(self):
        self.option = FolderOption('/tmp')

    def test_default(self):
        """Tests that the default was set correctly."""
        self.assertEqual(self.option.default, '/tmp')

########NEW FILE########
__FILENAME__ = test_integer
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.config.options import IntegerOption
from freeseer.tests.framework.config.options import OptionTest


class TestIntegerOptionNoDefault(unittest.TestCase, OptionTest):
    """Tests IntegerOption without a default value."""

    valid_success = range(-1000, 1000)

    encode_success = zip(valid_success, map(str, valid_success))

    decode_success = zip(map(str, valid_success), valid_success)
    decode_failure = [
        'hello',
        '1world',
        'test2',
    ]

    def setUp(self):
        self.option = IntegerOption()


class TestIntegerOptionWithDefault(TestIntegerOptionNoDefault):
    """Tests IntegerOption with a default value."""

    def setUp(self):
        self.option = IntegerOption(1234)

    def test_default(self):
        """Tests that the default was set correctly."""
        self.assertEqual(self.option.default, 1234)

########NEW FILE########
__FILENAME__ = test_string
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.config.options import StringOption
from freeseer.tests.framework.config.options import OptionTest


class TestStringOptionNoDefault(unittest.TestCase, OptionTest):
    """Tests StringOption without a default value."""

    valid_success = [
        'testing',
        True,
        0,
    ]

    encode_success = [
        ('testing', 'testing'),
        (True, 'True'),
    ]

    decode_success = [
        ('testing', 'testing'),
        ('True', 'True'),
    ]

    def setUp(self):
        self.option = StringOption()


class TestStringOptionWithDefault(TestStringOptionNoDefault):
    """Tests StringOption with a default value."""

    def setUp(self):
        self.option = StringOption('testing')

    def test_default(self):
        """Tests that the default was set correctly."""
        self.assertEqual(self.option.default, 'testing')

########NEW FILE########
__FILENAME__ = test_configparser
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.config.persist import ConfigParserStorage
from freeseer.tests.framework.config.persist import ConfigStorageTest

initial_config = '''\
[this_section]
option1 = othello
option2 = 0

'''
after_config = '''\
[this_section]
option1 = something_new
option2 = 10

'''


class TestConfigParserStorage(ConfigStorageTest, unittest.TestCase):
    """Tests that ConfigParserStorage works with a generic Config subclass."""

    CONFIG_STORAGE_CLASS = ConfigParserStorage
    INITIAL_LOAD_CONFIG = initial_config
    AFTER_STORE_CONFIG = after_config

########NEW FILE########
__FILENAME__ = test_jsonstorage
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.config.persist import JSONConfigStorage
from freeseer.tests.framework.config.persist import ConfigStorageTest

initial_config = '''\
{
    "this_section": {
        "option1": "othello",
        "option2": "0"
    }
}\
'''
after_config = '''\
{
    "this_section": {
        "option1": "something_new",
        "option2": "10"
    }
}\
'''


class TestJSONConfigStorage(ConfigStorageTest, unittest.TestCase):
    """Tests that JSONConfigStorage works with a generic Config subclass."""

    CONFIG_STORAGE_CLASS = JSONConfigStorage
    INITIAL_LOAD_CONFIG = initial_config
    AFTER_STORE_CONFIG = after_config

########NEW FILE########
__FILENAME__ = test_core
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.config import options
from freeseer.framework.config.core import Config
from freeseer.framework.config.exceptions import InvalidOptionValueError
from freeseer.framework.config.exceptions import OptionValueNotSetError
from freeseer.framework.config.exceptions import StorageNotSetError


class MyConfig(Config):
    option1 = options.IntegerOption(1337)
    option2 = options.StringOption()


class TestConfigNoStorage(unittest.TestCase):
    """Tests that ConfigBase is setting up the Config subclass properly."""

    def setUp(self):
        self.config = MyConfig()

    def test_set_defaults(self):
        """Tests that the default values of the Config options were set correctly."""
        self.assertEqual(self.config.values['option1'], 1337)
        self.assertNotIn('option2', self.config.values)

    def test_get_value_missing(self):
        """Tests that get_value(...) fails if the option's value has never been set before."""
        name = 'option2'
        option = self.config.options[name]

        self.assertRaises(OptionValueNotSetError, self.config.get_value, name, option)
        self.assertNotIn(name, self.config.values)

    def test_get_value_success(self):
        """Tests that get_value(...) succeeds if the option's value has been set before."""
        name = 'option1'
        option = self.config.options[name]
        value = self.config.values[name]

        self.assertEqual(self.config.get_value(name, option), value)

    def test_set_value_invalid(self):
        """Tests that set_value(...) fails if it tries to set an invalid value for an option."""
        name = 'option1'
        option = self.config.options[name]
        value = 'invalid'
        initial_value = self.config.values[name]

        self.assertRaises(InvalidOptionValueError, self.config.set_value, name, option, value)
        self.assertEqual(self.config.values[name], initial_value)

    def test_set_value_valid(self):
        """Tests that set_value(...) succeeds if it tries to set a valid value for an option."""
        name = 'option2'
        option = self.config.options[name]
        value = 'hello'

        self.config.set_value(name, option, value)
        self.assertEqual(self.config.values[name], value)

    def test_get_property_missing(self):
        """Tests that getting the property for an option fails if its value has not been set before."""
        try:
            value = self.config.option2
            assert value
        except Exception as e:
            self.assertIsInstance(e, OptionValueNotSetError)
            self.assertNotIn('option2', self.config.values)

    def test_get_property_success(self):
        """Tests that getting the property for an option succeeds if its value has been set before."""
        self.assertEqual(self.config.option1, 1337)

    def test_set_property_invalid(self):
        """Tests that setting the property for an option fails if the value is not valid."""
        try:
            initial_value = self.config.values['option1']
            self.config.option1 = 'invalid'
        except Exception as e:
            self.assertIsInstance(e, InvalidOptionValueError)
            self.assertEqual(self.config.values['option1'], initial_value)

    def test_set_property_success(self):
        """Tests that setting the property for an option succeeds if the value is valid."""
        self.config.option1 = 9001
        self.assertEqual(self.config.values['option1'], 9001)

        self.config.option2 = 'bar'
        self.assertEqual(self.config.values['option2'], 'bar')

    def test_save(self):
        """Tests that saving a Config without a ConfigStorage instance attached to it fails."""
        self.assertRaises(StorageNotSetError, self.config.save)


class MockStorage(object):
    """A mock ConfigStorage class. It simply stores whether its store method was called at least once."""

    def __init__(self):
        self.store_args = []
        self.store_called = False

    def store(self, *args):
        self.store_args = args
        self.store_called = True


class TestConfigWithStorage(TestConfigNoStorage):

    def setUp(self):
        self.storage = MockStorage()
        self.config = MyConfig(self.storage, ['global'])
        self.store_args = (self.config, 'global')

    def test_save(self):
        """Tests that saving a Config with a ConfigStorage instance attached to it "succeeds"."""
        self.config.save()
        self.assertEqual(self.storage.store_args, self.store_args)
        self.assertTrue(self.storage.store_called)

########NEW FILE########
__FILENAME__ = test_profile
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import shutil
import tempfile
import unittest

from freeseer.framework.config import Config
from freeseer.framework.config import options
from freeseer.framework.config.exceptions import StorageNotSetError
from freeseer.framework.config.persist import ConfigParserStorage
from freeseer.framework.config.persist import JSONConfigStorage
from freeseer.framework.config.profile import Profile
from freeseer.framework.config.profile import ProfileManager
from freeseer.framework.database import QtDBConnector


class TestConfig(Config):
    option1 = options.StringOption('hello')
    option2 = options.StringOption('world')


class TestProfileManager(unittest.TestCase):
    """Tests the ProfileManager."""

    def setUp(self):
        self.profiles_path = tempfile.mkdtemp()
        self.profile_manager = ProfileManager(self.profiles_path)

    def tearDown(self):
        shutil.rmtree(self.profiles_path)

    def test_get(self):
        """Tests that get returns a Profile instance."""
        profile = self.profile_manager.get('testing')
        self.assertIsInstance(profile, Profile)

    def test_get_cache(self):
        """Tests that get caching is working as expected."""
        profile1 = self.profile_manager.get('testing')
        profile2 = self.profile_manager.get('testing')
        self.assertEqual(profile1, profile2)


class TestProfile(unittest.TestCase):
    """Tests Profile."""

    def setUp(self):
        self.profile_path = tempfile.mkdtemp()
        self.profile = Profile(self.profile_path, 'testing')

    def tearDown(self):
        shutil.rmtree(self.profile_path)

    def test_get_filepath(self):
        """Tests that get_filepath(...) returns a path prefixed with the profile's folder."""
        filepath = self.profile.get_filepath('testing.db')
        self.assertTrue(filepath.startswith(self.profile_path))

    def test_get_storage_valid_suffix(self):
        """Tests that get_storage(...) returns the correct ConfigStorage class for a particular file suffix."""
        json_storage = self.profile.get_storage('testing.json')
        self.assertIsInstance(json_storage, JSONConfigStorage)

        config_parser_storage = self.profile.get_storage('testing.conf')
        self.assertIsInstance(config_parser_storage, ConfigParserStorage)

    def test_get_storage_cache(self):
        """Tests that get_storage(...) caches ConfigStorage instances properly."""
        storage1 = self.profile.get_storage('testing.conf')
        storage2 = self.profile.get_storage('testing.conf')
        self.assertEqual(storage1, storage2)

    def test_get_storage_invalid_suffix(self):
        """Tests that get_storage(...) does not accept an invalid filename suffix."""
        self.assertRaises(KeyError, self.profile.get_storage, ('testing.json,'))

    def test_get_config(self):
        """Tests that get_config(...) returns the correct config instance and that it is .save()-able."""
        config = self.profile.get_config('testing.conf', TestConfig, storage_args=['this_section'])
        self.assertIsInstance(config, TestConfig)
        self.assertIsNone(config.save())

    def test_get_config_read_only(self):
        """Tests that get_config(...) returns a read-only config instance."""
        config = self.profile.get_config('testing.conf', TestConfig, storage_args=['this_section'], read_only=True)
        self.assertIsInstance(config, TestConfig)
        self.assertRaises(StorageNotSetError, config.save)

    def test_get_database(self):
        """Tests that get_database(...) returns an instance of QtDBConnector."""
        database = self.profile.get_database('testing.db')
        self.assertIsInstance(database, QtDBConnector)

    def test_get_database_cache(self):
        """Tests that get_database(...) caches QtDBConnector properly."""
        database1 = self.profile.get_database('testing.db')
        database2 = self.profile.get_database('testing.db')
        self.assertEqual(database1, database2)

########NEW FILE########
__FILENAME__ = test_config
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import os
import shutil
import tempfile
import unittest

from freeseer.framework.config.profile import ProfileManager
from freeseer import settings


class TestConfig(unittest.TestCase):

    def setUp(self):
        '''
        Stardard init method: runs before each test_* method

        Initializes a PluginManager

        '''
        self.profile_manager = ProfileManager(tempfile.mkdtemp())
        self.profile = self.profile_manager.get('testing')
        self.config = self.profile.get_config('freeseer.conf',
                                              settings.FreeseerConfig,
                                              ['Global'],
                                              read_only=False)

    def tearDown(self):
        '''
        Generic unittest.TestCase.tearDown()
        '''
        shutil.rmtree(self.profile_manager._base_folder)

    def test_save(self):
        '''
        Tests that the config file was created after being saved.
        '''
        filepath = self.profile.get_filepath('freeseer.conf')
        self.config.save()
        self.assertTrue(os.path.exists(filepath))

########NEW FILE########
__FILENAME__ = test_database
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import os
import shutil
import tempfile
import unittest

from PyQt4 import QtSql

from freeseer.framework.config.profile import Profile
from freeseer.framework.database import QtDBConnector
from freeseer.framework.plugin import PluginManager
from freeseer.framework.presentation import Presentation


class TestDatabase(unittest.TestCase):
    def setUp(self):
        '''
        Stardard init method: runs before each test_* method

        Initializes a PluginManager

        '''
        self.profile_path = tempfile.mkdtemp()
        profile = Profile(self.profile_path, 'testing')

        dirname = os.path.dirname(__file__)
        self._csvfile = os.path.join(dirname, 'sample_talks.csv')

        db_file = os.path.join(self.profile_path, 'presentations.db')
        self.db = QtDBConnector(db_file, PluginManager(profile))

    def tearDown(self):
        '''
        Generic unittest.TestCase.tearDown()
        '''
        shutil.rmtree(self.profile_path)

    def test_get_talks(self):
        """Simply test that a query is returned"""
        self.assertIsInstance(self.db.get_talks(), QtSql.QSqlQuery)

    def test_get_events(self):
        """Simply test that a query is returned"""
        self.assertIsInstance(self.db.get_events(), QtSql.QSqlQuery)

    def test_get_talk_ids(self):
        """Simply test that a query is returned"""
        self.assertIsInstance(self.db.get_talk_ids(), QtSql.QSqlQuery)

    def test_get_talks_by_event(self):
        """Simply test that a query is returned"""
        self.assertIsInstance(self.db.get_talks_by_event("SC2011"), QtSql.QSqlQuery)

    def test_get_talks_by_room(self):
        """Simply test that a query is returned"""
        self.assertIsInstance(self.db.get_talks_by_room("T105"), QtSql.QSqlQuery)

    def test_get_presentation(self):
        """Simply test that a presentation is returned"""
        self.assertIsInstance(self.db.get_presentation(1), Presentation)

    def test_get_presentations_model(self):
        """Simply test that a model is returned"""
        self.assertIsInstance(self.db.get_presentations_model(), QtSql.QSqlTableModel)

    def test_get_events_model(self):
        """Simply test that a model is returned"""
        self.assertIsInstance(self.db.get_events_model(), QtSql.QSqlQueryModel)

    def test_get_rooms_model(self):
        """Simply test that a model is returned"""
        self.assertIsInstance(self.db.get_rooms_model("SC2011"), QtSql.QSqlQueryModel)

    def test_get_talks_model(self):
        """Simply test that a model is returned"""
        self.assertIsInstance(self.db.get_talks_model("SC2011", "T105"), QtSql.QSqlQueryModel)

    def test_add_talks_from_rss(self):
        """Test that talks are retrieved from the RSS feed"""

        feed1 = "http://fosslc.org/drupal/presentations_rss/summercamp2010"
        feed2 = "http://fosslc.org/drupal/presentations_rss/sc2011"

        presentation1 = Presentation("Managing map data in a database", "Andrew Ross")
        presentation2 = Presentation("Building NetBSD", "David Maxwell")

        self.db.add_talks_from_rss(feed1)
        self.assertTrue(self.db.presentation_exists(presentation1))

        self.db.add_talks_from_rss(feed2)
        self.assertTrue(self.db.presentation_exists(presentation2))

    def test_add_talks_from_csv(self):
        """Test that talks are retrieved from the CSV file"""

        fname = self._csvfile

        presentation = Presentation("Building NetBSD", "David Maxwell")

        self.db.add_talks_from_csv(fname)
        self.assertTrue(self.db.presentation_exists(presentation))

########NEW FILE########
__FILENAME__ = test_multimedia
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2012, 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import shutil
import tempfile
import unittest

import pygst
pygst.require("0.10")
import gst

from freeseer.framework.config.profile import ProfileManager
from freeseer.framework.multimedia import Multimedia
from freeseer.framework.plugin import PluginManager
from freeseer import settings


class TestMultimedia(unittest.TestCase):

    def setUp(self):
        self.profile_manager = ProfileManager(tempfile.mkdtemp())
        self.temp_video_dir = tempfile.mkdtemp()
        profile = self.profile_manager.get('testing')
        config = profile.get_config('freeseer.conf', settings.FreeseerConfig, ['Global'], read_only=True)
        config.videodir = self.temp_video_dir
        plugin_manager = PluginManager(profile)
        self.multimedia = Multimedia(config, plugin_manager)

    def tearDown(self):
        shutil.rmtree(self.temp_video_dir)
        shutil.rmtree(self.profile_manager._base_folder)

    def test_load_backend(self):
        self.multimedia.load_backend(filename=u"test.ogg")

    def test_record_functions(self):
        self.multimedia.load_backend(filename=u"test.ogg")
        self.multimedia.record()
        self.multimedia.pause()
        self.multimedia.stop()

    def test_current_state_is_record(self):
        self.multimedia.record()
        self.assertEqual(self.multimedia.current_state, self.multimedia.RECORD)
        self.assertEqual(self.multimedia.player.get_state()[1], gst.STATE_PLAYING)

    def test_current_state_is_pause(self):
        self.multimedia.pause()
        self.assertEqual(self.multimedia.current_state, self.multimedia.PAUSE)
        self.assertEqual(self.multimedia.player.get_state()[1], gst.STATE_PAUSED)

    def test_current_state_is_not_stop(self):
        self.multimedia.player.set_state(self.multimedia.NULL)  # set to NULL
        self.multimedia.stop()
        self.assertNotEqual(self.multimedia.current_state, self.multimedia.STOP)
        self.assertEqual(self.multimedia.player.get_state()[1], gst.STATE_NULL)

########NEW FILE########
__FILENAME__ = test_plugins
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import shutil
import tempfile
import unittest

import pygst
pygst.require("0.10")
import gst

from freeseer.framework.config.profile import ProfileManager
from freeseer.framework.plugin import PluginManager


class TestPlugins(unittest.TestCase):

    def setUp(self):
        '''
        Stardard init method: runs before each test_* method

        Initializes a PluginManager

        '''
        self.profile_manager = ProfileManager(tempfile.mkdtemp())
        profile = self.profile_manager.get('testing')
        self.plugman = PluginManager(profile)

    def tearDown(self):
        '''
        Generic unittest.TestCase.tearDown()
        '''
        shutil.rmtree(self.profile_manager._base_folder)

    def test_audio_input_bin(self):
        '''Check that audio input plugins are returning a gst.Bin object

        Verifies that get_audioinput_bin() is returning the proper object.
        '''
        plugins = self.plugman.get_plugins_of_category("AudioInput")

        for plugin in plugins:
            plugin_bin = plugin.plugin_object.get_audioinput_bin()
            self.assertIsInstance(plugin_bin, gst.Bin,
                "%s did not return a gst.Bin object" % plugin.name)

    def test_audio_mixer_bin(self):
        '''Check that audio mixer plugins are returning a gst.Bin object

        Verifies that get_audioinput_bin() is returning the proper object.
        '''
        plugins = self.plugman.get_plugins_of_category("AudioMixer")

        for plugin in plugins:
            plugin_bin = plugin.plugin_object.get_audiomixer_bin()
            self.assertIsInstance(plugin_bin, gst.Bin,
                "%s did not return a gst.Bin object" % plugin.name)

    def test_video_input_bin(self):
        '''Check that video input plugins are returning a gst.Bin object

        Verifies that get_videoinput_bin() is returning the proper object.
        '''
        plugins = self.plugman.get_plugins_of_category("VideoInput")

        for plugin in plugins:
            if plugin.name == "Firewire Source":
                # There is an issue with Firewire Source in testing
                # Skip until this is resolved
                continue

            plugin_bin = plugin.plugin_object.get_videoinput_bin()
            self.assertIsInstance(plugin_bin, gst.Bin,
                "%s did not return a gst.Bin object" % plugin.name)

    def test_video_mixer_bin(self):
        '''Check that video mixer plugins are returning a gst.Bin object

        Verifies that get_videomixer_bin() is returning the proper object.
        '''
        plugins = self.plugman.get_plugins_of_category("VideoMixer")

        for plugin in plugins:
            plugin_bin = plugin.plugin_object.get_videomixer_bin()
            self.assertIsInstance(plugin_bin, gst.Bin,
                "%s did not return a gst.Bin object" % plugin.name)

    def test_output_bin(self):
        '''Check that output plugins are returning a gst.Bin object

        Verifies that get_output_bin() is returning the proper object.
        '''
        plugins = self.plugman.get_plugins_of_category("Output")

        for plugin in plugins:
            plugin_bin = plugin.plugin_object.get_output_bin()
            self.assertIsInstance(plugin_bin, gst.Bin,
                "%s did not return a gst.Bin object" % plugin.name)

########NEW FILE########
__FILENAME__ = test_presentation
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2012, 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import unittest

from freeseer.framework.presentation import Presentation


#
# Note: The Presentation class doesn't really need to be tested
# since all the functionality is set and referenced using
# public attributes.
#
# This test class was implemented as a quick-and-easy demo
# and proof-of-concept for Freeseer's test framework
#


class TestPresentation(unittest.TestCase):

    def setUp(self):
        '''
        Generic unittest.TestCase.setUp()
        '''

        self.pres = Presentation("John Doe", event="haha", startTime="NOW", endTime="Later")

    def test_correct_time_set(self):
        self.assertTrue(self.pres.startTime == "NOW")
        self.assertTrue(self.pres.endTime == "Later")

    def test_speaker_not_first_param(self):
        self.assertNotEquals(self.pres.speaker, "John Doe")

    def test_event_is_default(self):
        self.assertTrue(self.pres.event == "haha")

    def test_room_is_default(self):
        self.assertTrue(self.pres.room == "Default")

########NEW FILE########
__FILENAME__ = test_util
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2014  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import mock
import os
import shutil
import tempfile
import unittest

from freeseer.framework.config.profile import ProfileManager
from freeseer.framework.util import reset
from freeseer.framework.util import reset_configuration
from freeseer.framework.util import reset_database


class TestUtil(unittest.TestCase):

    def setUp(self):
        self.config_dir = tempfile.mkdtemp()
        self.profile_manager = ProfileManager(os.path.join(self.config_dir, 'profiles'))

    def tearDown(self):
        shutil.rmtree(self.config_dir)

    def test_reset(self):
        """Test Resetting the configuration directory"""
        profile = self.profile_manager.get('default')
        open(profile.get_filepath('freeseer.conf'), 'w+')
        open(profile.get_filepath('plugin.conf'), 'w+')
        open(profile.get_filepath('presentations.db'), 'w+')
        self.assertTrue(os.path.exists(self.config_dir))
        with mock.patch('__builtin__.raw_input', return_value='yes'):
            reset(self.config_dir)
        self.assertFalse(os.path.exists(self.config_dir))

        # recreate the config_dir for tearDown()
        # while we're at it test that passing a none "yes" answer results in directory not removed
        os.makedirs(self.config_dir)
        with mock.patch('__builtin__.raw_input', return_value='no'):
            reset(self.config_dir)
        self.assertTrue(os.path.exists(self.config_dir))

    def test_reset_configuration(self):
        """Test Resetting configuration files"""
        # Test resetting the default profile (no profile arguments passed)
        profile = self.profile_manager.get('default')
        open(profile.get_filepath('freeseer.conf'), 'w+')
        open(profile.get_filepath('plugin.conf'), 'w+')
        self.assertTrue(os.path.exists(profile.get_filepath('plugin.conf')))
        self.assertTrue(os.path.exists(profile.get_filepath('freeseer.conf')))
        reset_configuration(self.config_dir)
        self.assertFalse(os.path.exists(profile.get_filepath('plugin.conf')))
        self.assertFalse(os.path.exists(profile.get_filepath('freeseer.conf')))

        # Test resetting a non-default profile
        profile = self.profile_manager.get('not-default')
        open(profile.get_filepath('freeseer.conf'), 'w+')
        open(profile.get_filepath('plugin.conf'), 'w+')
        self.assertTrue(os.path.exists(profile.get_filepath('plugin.conf')))
        self.assertTrue(os.path.exists(profile.get_filepath('freeseer.conf')))
        reset_configuration(self.config_dir, 'not-default')
        self.assertFalse(os.path.exists(profile.get_filepath('plugin.conf')))
        self.assertFalse(os.path.exists(profile.get_filepath('freeseer.conf')))

    def test_reset_database(self):
        """Test Resetting database file"""
        # Test resetting the default profile (no profile arguments passed)
        profile = self.profile_manager.get('default')
        open(profile.get_filepath('presentations.db'), 'w+')
        self.assertTrue(os.path.exists(profile.get_filepath('presentations.db')))
        reset_database(self.config_dir)
        self.assertFalse(os.path.exists(profile.get_filepath('presentations.db')))

        # Test resetting a non-default profile
        profile = self.profile_manager.get('not-default')
        open(profile.get_filepath('presentations.db'), 'w+')
        self.assertTrue(os.path.exists(profile.get_filepath('presentations.db')))
        reset_database(self.config_dir, 'not-default')
        self.assertFalse(os.path.exists(profile.get_filepath('presentations.db')))

########NEW FILE########
__FILENAME__ = test_config_tool
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2012, 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import shutil
import tempfile
import unittest

from PyQt4 import Qt
from PyQt4 import QtCore
from PyQt4 import QtGui
from PyQt4 import QtTest

from freeseer.framework.config.profile import ProfileManager
from freeseer.frontend.configtool.configtool import ConfigToolApp
from freeseer import settings


class TestConfigToolApp(unittest.TestCase):
    '''
    Test suite to verify the functionality of the ConfigToolApp class.

    Tests interact like an end user (using QtTest). Expect the app to be rendered.

    NOTE: most tests will follow this format:
        1. Get current config setting
        2. Make UI change (config change happens immediately)
        3. Reparse config file
        4. Test that has changed (using the previous and new)
    '''

    def setUp(self):
        '''
        Stardard init method: runs before each test_* method

        Initializes a QtGui.QApplication and ConfigToolApp object.
        ConfigToolApp.show() causes the UI to be rendered.
        '''
        self.profile_manager = ProfileManager(tempfile.mkdtemp())
        profile = self.profile_manager.get('testing')
        config = profile.get_config('freeseer.conf', settings.FreeseerConfig, storage_args=['Global'], read_only=False)

        self.app = QtGui.QApplication([])
        self.config_tool = ConfigToolApp(profile, config)
        self.config_tool.show()

    def tearDown(self):
        '''
        Standard tear down method. Runs after each test_* method.

        This method closes the ConfigToolApp by clicking the "close" button
        '''

        QtTest.QTest.mouseClick(self.config_tool.mainWidget.closePushButton, Qt.Qt.LeftButton)
        shutil.rmtree(self.profile_manager._base_folder)
        del self.config_tool.app
        self.app.deleteLater()

    def test_about_widget(self):
        self.assertTrue(self.config_tool.currentWidget == self.config_tool.aboutWidget)

    def test_general_settings(self):
        '''
        Tests for the config tool's General Tab
        '''

        # Select "General" tab
        item = self.config_tool.mainWidget.optionsTreeWidget.findItems(self.config_tool.generalString, QtCore.Qt.MatchExactly)
        self.assertFalse(not item or item[0] is None)
        self.config_tool.mainWidget.optionsTreeWidget.setCurrentItem(item[0])
        QtTest.QTest.mouseClick(self.config_tool.mainWidget.optionsTreeWidget, Qt.Qt.LeftButton)

        # Language drop-down
        # TODO

        # Record directory
        # TODO

        # AutoHide Checkbox
        for i in range(2):
            state = self.config_tool.currentWidget.autoHideCheckBox.checkState()
            expected_state = QtCore.Qt.Unchecked
            if state == QtCore.Qt.Unchecked:
                expected_state = QtCore.Qt.Checked
            self.config_tool.currentWidget.autoHideCheckBox.click()
            self.assertEquals(
                self.config_tool.currentWidget.autoHideCheckBox.checkState(), expected_state)

            self.assertEquals(self.config_tool.config.auto_hide, expected_state == QtCore.Qt.Checked)

    def test_recording_settings(self):
        '''
        Tests for config tool's Recording tab
        '''

        # Select "Recording" tab
        item = self.config_tool.mainWidget.optionsTreeWidget.findItems(self.config_tool.avString, QtCore.Qt.MatchExactly)
        self.assertFalse(not item or item[0] is None)
        self.config_tool.mainWidget.optionsTreeWidget.setCurrentItem(item[0])
        QtTest.QTest.mouseClick(self.config_tool.mainWidget.optionsTreeWidget, Qt.Qt.LeftButton)

        # Recording tab
        self.assertTrue(self.config_tool.currentWidget == self.config_tool.avWidget)

        # Audio Input

        # Checkbox
        for i in range(2):
            #self.config_tool.config.readConfig()
            if self.config_tool.currentWidget.audioGroupBox.isChecked():
                self.assertTrue(self.config_tool.config.enable_audio_recording)
                self.assertTrue(self.config_tool.config.audiomixer == "Audio Passthrough" or
                    self.config_tool.config.audiomixer == "Multiple Audio Inputs")
                self.config_tool.currentWidget.audioGroupBox.setChecked(False)
            else:
                self.assertFalse(self.config_tool.config.enable_audio_recording)
                self.config_tool.currentWidget.audioGroupBox.setChecked(True)

        # Dropdown
        # TODO

        # Video Input
        # Checkbox
        for i in range(2):
            #self.config_tool.config.readConfig()
            if self.config_tool.currentWidget.videoGroupBox.isChecked():
                self.assertTrue(self.config_tool.config.enable_video_recording)
                # TODO: Write better test case for this
                self.assertTrue(self.config_tool.config.videomixer == "Video Passthrough" or
                    self.config_tool.config.videomixer == "Picture-In-Picture")
                self.config_tool.currentWidget.videoGroupBox.setChecked(False)
            else:
                self.assertFalse(self.config_tool.config.enable_video_recording)
                self.config_tool.currentWidget.videoGroupBox.setChecked(True)

        # Dropdown
        # TODO

        # Record to File

        # Checkbox
        for i in range(2):
            #self.config_tool.config.readConfig()
            if self.config_tool.currentWidget.fileGroupBox.isChecked():
                self.assertTrue(self.config_tool.config.record_to_file)
                # TODO: Write better test case for this
                self.assertTrue(self.config_tool.config.record_to_file_plugin == "Ogg Output" or
                    self.config_tool.config.record_to_file_plugin == "WebM Output")
                self.config_tool.currentWidget.fileGroupBox.setChecked(False)
            else:
                self.assertFalse(self.config_tool.config.record_to_file)
                self.config_tool.currentWidget.fileGroupBox.setChecked(True)

        # Dropdown
        # TODO

        # Record to Stream

        # Checkbox
        for i in range(2):
            #self.config_tool.config.readConfig()
            if self.config_tool.currentWidget.streamGroupBox.isChecked():
                self.assertTrue(self.config_tool.config.record_to_stream)
                # TODO: Write better test case for this
                #self.assertTrue(self.config_tool.config.record_to_stream_plugin == None)
                self.config_tool.currentWidget.streamGroupBox.setChecked(False)
            else:
                self.assertFalse(self.config_tool.config.record_to_stream)
                self.config_tool.currentWidget.streamGroupBox.setChecked(True)

        # Dropdown
        # TODO

    def test_plugin_audio_input_settings(self):
        '''
        Tests for config tool's Plugins->Audio Input tab
        '''

        # TODO
        pass

    def test_plugin_audio_mixer_settings(self):
        '''
        Tests for config tool's Plugins->Audio Mixer tab
        '''

        # TODO
        pass

    def test_plugin_video_input_settings(self):
        '''
        Tests for config tool's Plugins->Video Input tab
        '''

        # TODO
        pass

    def test_plugin_video_mixer_settings(self):
        '''
        Tests for config tool's Plugins->Video Mixer tab
        '''

        # TODO
        pass

    def test_plugin_output_settings(self):
        '''
        Tests for config tool's Plugins->Output tab
        '''

        # TODO
        pass

    def test_logger_settings(self):
        '''
        Tests for config tool's Logger tab

        Needs to be tested differently since the
        Config instance isn't affected by changes in this tab.
        '''

        # TODO
        pass

    def test_close_configtool(self):
        '''
        Tests for config tool's close button
        '''

        self.assertTrue(self.config_tool.mainWidget.isVisible())
        QtTest.QTest.mouseClick(self.config_tool.mainWidget.closePushButton, Qt.Qt.LeftButton)
        self.assertFalse(self.config_tool.mainWidget.isVisible())

    def test_file_menu_quit(self):
        '''
        Tests for config tool's File->Quit
        '''

        self.assertTrue(self.config_tool.isVisible())

        # File->Quit
        self.config_tool.actionExit.trigger()
        self.assertFalse(self.config_tool.isVisible())

    def test_help_menu_about(self):
        '''
        Tests for config tool's Help->About
        '''

        self.assertTrue(self.config_tool.isVisible())

        # Help->About
        self.config_tool.actionAbout.trigger()
        self.assertFalse(self.config_tool.hasFocus())
        self.assertTrue(self.config_tool.aboutDialog.isVisible())

        # Click "Close"
        QtTest.QTest.mouseClick(self.config_tool.aboutDialog.closeButton, Qt.Qt.LeftButton)
        self.assertFalse(self.config_tool.aboutDialog.isVisible())

########NEW FILE########
__FILENAME__ = test_record
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2012, 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import shutil
import tempfile
import unittest

from PyQt4 import Qt
from PyQt4 import QtGui
from PyQt4 import QtTest

from freeseer.framework.config.profile import ProfileManager
from freeseer.frontend.record.record import RecordApp
from freeseer import settings


class TestRecordApp(unittest.TestCase):
    '''
    Test suite to verify the functionality of the RecordApp class.

    Tests interact like an end user (using QtTest). Expect the app to be rendered.

    '''

    def setUp(self):
        '''
        Stardard init method: runs before each test_* method

        Initializes a QtGui.QApplication and RecordApp object.
        RecordApp.show() causes the UI to be rendered.
        '''
        self.profile_manager = ProfileManager(tempfile.mkdtemp())
        profile = self.profile_manager.get('testing')
        config = profile.get_config('freeseer.conf', settings.FreeseerConfig, storage_args=['Global'], read_only=False)

        self.app = QtGui.QApplication([])
        self.record_app = RecordApp(profile, config)
        self.record_app.show()

    def tearDown(self):
        '''
        Generic unittest.TestCase.tearDown()
        '''
        shutil.rmtree(self.profile_manager._base_folder)

        self.record_app.actionExit.trigger()
        self.app.deleteLater()

    def test_init_conditions(self):
        '''
        Tests the initial state of the RecordApp
        '''
        # TODO
        pass

    def test_standby_to_recording(self):
        '''
        Tests pre and post conditions when entering Standby, Record, Stop modes

        '''

        # TODO: ROADBLOCK
        # The Gstreamer takes a while to initialize the preview.
        # Due to this, when the unitest clicks "Record", the preview has not yet been initialized
        # and Freeseer freezes
        # It is not trivial or clear how to detect whether or not the preview has loaded
        # It turns out that even if the state is Multimedia.PAUSE, the preview has not quite loaded

#       self.assertTrue(self.record_app.mainWidget.standbyPushButton.isVisible(), "[PRE STANDBY] Expected Standby button to be visible")
#       self.assertFalse(self.record_app.mainWidget.recordPushButton.isVisible(), "[PRE STANDBY] Expected Record button to be invisible")

        # Click the Standby button with the left mouse button
#       QtTest.QTest.mouseClick(self.record_app.mainWidget.standbyPushButton, Qt.Qt.LeftButton)

#       self.assertFalse(self.record_app.mainWidget.standbyPushButton.isVisible(), "[STANDBY] Expected Standby button to be invisible")
#       self.assertTrue(self.record_app.mainWidget.recordPushButton.isVisible(), "[STANDBY] Expected Record button to be visible")

        # TODO: Check if preview has loaded

        # Click the Record button with the left mouse button
#       QtTest.QTest.mouseClick(self.record_app.mainWidget.recordPushButton, Qt.Qt.LeftButton)

#       self.assertFalse(self.record_app.mainWidget.standbyPushButton.isVisible(), "[RECORDING] Expected Standby button to be invisible")
#       self.assertTrue(self.record_app.mainWidget.recordPushButton.isVisible(), "[RECORDING] Expected Record button to be visible")
#       self.assertTrue(self.record_app.mainWidget.recordPushButton.text() == self.record_app.stopString, "[RECORDING] Incorrect button text for this phase")

        # Click the Record button again in 5 seconds with the left mouse button
#       QtTest.QTest.mouseClick(self.record_app.mainWidget.recordPushButton, Qt.Qt.LeftButton)

    def test_reset_timer(self):
        '''
        Tests RecordApp.reset_timer()
        '''

        # set our own values
        self.record_app.time_minutes = 15
        self.record_app.time_seconds = 30

        # reset timer and check that the values are 0
        self.record_app.reset_timer()
        self.assertTrue(self.record_app.time_minutes == 0 and self.record_app.time_seconds == 0)

    def test_file_menu_quit(self):
        '''
        Tests RecordApp's File->Quit
        '''

        self.assertTrue(self.record_app.isVisible())

        # File->Menu
        self.record_app.actionExit.trigger()
        self.assertFalse(self.record_app.isVisible())

    def test_help_menu_about(self):
        '''
        Tests RecordApp's Help->About
        '''

        self.assertTrue(self.record_app.isVisible())

        # Help->About
        self.record_app.actionAbout.trigger()
        self.assertFalse(self.record_app.hasFocus())
        self.assertTrue(self.record_app.aboutDialog.isVisible())

        # Click "Close"
        QtTest.QTest.mouseClick(self.record_app.aboutDialog.closeButton, Qt.Qt.LeftButton)
        self.assertFalse(self.record_app.aboutDialog.isVisible())

########NEW FILE########
__FILENAME__ = test_reporteditor
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2012, 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import shutil
import tempfile
import unittest

from PyQt4 import Qt
from PyQt4 import QtGui
from PyQt4 import QtTest

from freeseer.framework.config.profile import ProfileManager
from freeseer.frontend.reporteditor.reporteditor import ReportEditorApp
from freeseer import settings


class TestReportEditorApp(unittest.TestCase):
    '''
    Test cases for ReportEditorApp.
    '''

    def setUp(self):
        '''
        Stardard init method: runs before each test_* method

        Initializes a QtGui.QApplication and ReportEditorApp object.
        ReportEditorApp() causes the UI to be rendered.
        '''
        self.profile_manager = ProfileManager(tempfile.mkdtemp())
        profile = self.profile_manager.get('testing')
        config = profile.get_config('freeseer.conf', settings.FreeseerConfig, storage_args=['Global'], read_only=False)
        db = profile.get_database()

        self.app = QtGui.QApplication([])
        self.report_editor = ReportEditorApp(config, db)
        self.report_editor.show()

    def tearDown(self):
        shutil.rmtree(self.profile_manager._base_folder)
        del self.report_editor.app
        self.app.deleteLater()

    def test_close_report_editor(self):
        '''
        Tests closing the ReportEditorApp
        '''

        QtTest.QTest.mouseClick(self.report_editor.editorWidget.closeButton, Qt.Qt.LeftButton)
        self.assertFalse(self.report_editor.editorWidget.isVisible())

    def test_file_menu_quit(self):
        '''
        Tests ReportEditorApp's File->Quit
        '''

        self.assertTrue(self.report_editor.isVisible())

        # File->Menu
        self.report_editor.actionExit.trigger()
        self.assertFalse(self.report_editor.isVisible())

    def test_help_menu_about(self):
        '''
        Tests ReportEditorApp's Help->About
        '''

        self.assertTrue(self.report_editor.isVisible())

        # Help->About
        self.report_editor.actionAbout.trigger()
        self.assertFalse(self.report_editor.hasFocus())
        self.assertTrue(self.report_editor.aboutDialog.isVisible())

        # Click "Close"
        QtTest.QTest.mouseClick(self.report_editor.aboutDialog.closeButton, Qt.Qt.LeftButton)
        self.assertFalse(self.report_editor.aboutDialog.isVisible())

########NEW FILE########
__FILENAME__ = test_talkeditor
#!/usr/bin/python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
# Copyright (C) 2012, 2013 Free and Open Source Software Learning Centre
# http://fosslc.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

import shutil
import tempfile
import unittest

from PyQt4 import Qt
from PyQt4 import QtGui
from PyQt4 import QtTest

from freeseer.framework.config.profile import ProfileManager
from freeseer.frontend.talkeditor.talkeditor import TalkEditorApp
from freeseer import settings


class TestTalkEditorApp(unittest.TestCase):
    '''
    Test suite to verify the functionality of the TalkEditorApp class.

    Tests interact like an end user (using QtTest). Expect the app to be rendered.

    '''

    def setUp(self):
        '''
        Stardard init method: runs before each test_* method

        Initializes a QtGui.QApplication and TalkEditorApp object.
        TalkEditorApp.show() causes the UI to be rendered.
        '''
        self.profile_manager = ProfileManager(tempfile.mkdtemp())
        profile = self.profile_manager.get('testing')
        config = profile.get_config('freeseer.conf', settings.FreeseerConfig,
                                    storage_args=['Global'], read_only=True)
        db = profile.get_database()

        self.app = QtGui.QApplication([])
        self.talk_editor = TalkEditorApp(config, db)
        self.talk_editor.show()

    def tearDown(self):
        '''
        Standard tear down method. Runs after each test_* method.

        This method closes the TalkEditorApp by clicking the "close" button
        '''
        shutil.rmtree(self.profile_manager._base_folder)

        del self.app
        self.talk_editor.app.deleteLater()

    # def test_add_talk(self):
    #     '''
    #     Tests a user creating a talk and adding it.
    #     '''

    #     QtTest.QTest.mouseClick(self.talk_editor.editorWidget.addButton, Qt.Qt.LeftButton)
    #     self.assertFalse(self.talk_editor.editorWidget.isVisible())
    #     self.assertTrue(self.talk_editor.addTalkWidget.isVisible())

    #     mTitle = "This is a test"
    #     mPresenter = "Me, myself, and I"
    #     mEvent = "0 THIS St."
    #     mRoom = "Room 13"

    #     # populate talk data (date and time are prepopulated)
    #     self.talk_editor.addTalkWidget.titleLineEdit.setText(mTitle)
    #     self.talk_editor.addTalkWidget.presenterLineEdit.setText(mPresenter)
    #     self.talk_editor.addTalkWidget.eventLineEdit.setText(mEvent)
    #     self.talk_editor.addTalkWidget.roomLineEdit.setText(mRoom)

    #     # add in the talk
    #     QtTest.QTest.mouseClick(self.talk_editor.addTalkWidget.addButton, Qt.Qt.LeftButton)

    #     # find our talk (ensure it was added)
    #     found = False
    #     row_count = self.talk_editor.editorWidget.editor.model().rowCount() - 1
    #     while row_count >= 0 and not found:  # should be at the end, but you never know
    #         if self.talk_editor.editorWidget.editor.model().index(row_count, 1).data() == mTitle and \
    #                 self.talk_editor.editorWidget.editor.model().index(row_count, 2).data() == mPresenter and \
    #                 self.talk_editor.editorWidget.editor.model().index(row_count, 5).data() == mEvent and \
    #                 self.talk_editor.editorWidget.editor.model().index(row_count, 6).data() == mRoom:
    #                 found = True
    #                 # TODO: Select this row
    #         row_count -= 1

    #     self.assertTrue(found, "Couldn't find talk just inserted...")

    #     # now delete the talk we just created
    #     QtTest.QTest.mouseClick(self.talk_editor.editorWidget.removeButton, Qt.Qt.LeftButton)

    def test_file_menu_quit(self):
        '''
        Tests TalkEditorApp's File->Quit
        '''

        self.assertTrue(self.talk_editor.isVisible())

        # File->Quit
        self.talk_editor.actionExit.trigger()
        self.assertFalse(self.talk_editor.isVisible())

    def test_help_menu_about(self):
        '''
        Tests TalkEditorApp's Help->About
        '''

        self.assertTrue(self.talk_editor.isVisible())

        # Help->About
        self.talk_editor.actionAbout.trigger()
        self.assertFalse(self.talk_editor.hasFocus())
        self.assertTrue(self.talk_editor.aboutDialog.isVisible())

        # Click "Close"
        QtTest.QTest.mouseClick(self.talk_editor.aboutDialog.closeButton, Qt.Qt.LeftButton)
        self.assertFalse(self.talk_editor.aboutDialog.isVisible())

########NEW FILE########
__FILENAME__ = __main__
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/

from freeseer import main

main()

########NEW FILE########
