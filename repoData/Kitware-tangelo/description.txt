How to Contribute
=================

We love hearing from Tangelo users, whether by email, on the issue tracker, or
via pull request.  Here are some guidelines for contributing:

- Please email us at <tangelo-users@public.kitware.com> if you have any questions or concerns or if you need help with any usage problems you encounter while using Tangelo.
- If you have feature requests or bug reports, go ahead and open a new issue on the [tracker](https://github.com/Kitware/tangelo/issues).
- If you would like to contribute actual code, follow these steps:

1. Get a [GitHub account](https://github.com/join).
2. [Fork](https://github.com/Kitware/tangelo/fork) the Tangelo repository.
3. Create a topic branch for your changes.
4. Make commits as needed, and include informative commit messages.  Try to structure your commits logically, so that each one has a clear-cut purpose.
5. Send us a pull request according to the guidelines [here](https://help.github.com/articles/using-pull-requests).

The Tangelo documentation includes a section on [coding guidelines](http://tangelo.readthedocs.org/en/latest/coding-style-guide.html) to help ease your contributions into the codebase.  Refer to the rest of the [documentation](http://tangelo.readthedocs.org/en/latest/index.html) as needed, and let us know if anything is unclear.  We're looking forward to hearing from you!

============================================================
 Tangelo: Rapidly create powerfully visual web applications
============================================================

http://kitware.github.io/tangelo/
---------------------------------

**Tangelo** is a web framework built on top of
`CherryPy <http://www.cherrypy.org/>`_ for producing rich web applications
that pair your data with cutting-edge visual interfaces.

In a nutshell, Tangelo is a flexible HTML5 web server architecture that cleanly separates
your web *applications* (pure Javascript, HTML, and CSS) and web *services*
(pure Python), bundled with some great tools to get you started. Mix and match
from the following to create your own breed:

* `Bootstrap <http://twitter.github.io/bootstrap/>`_ to put your app's style on a solid
  footing.
* `D3 <http://d3js.org>`_ for constructing all manner of dynamic and animated charts.
* *Vega*, a brand new declarative language for defining visual interfaces.
* `MongoDB <http://www.mongodb.org>`_ for a flexible, speedy NoSQL backend to feed
  data to your apps.
* *tangelo.js*, a set of tools and interface elements that make it easy to create
  apps that put your data front and center.

Documentation
=============

See our `documentation <http://tangelo.readthedocs.org/>`_ for a getting started guide
and API descriptions.

System Architecture
===================

Tangelo applications are divided into two functional layers: the *frontend*
and *backend*, with `Ajax <http://en.wikipedia.org/wiki/Ajax_(programming)>`_
bridging the gap between them.

The *frontend* is a standard website -- HTML for content and formatting, with
CSS for styling and JavaScript for dynamic behavior.  The JavaScript code can
also make Ajax calls to the Python *backend* modules to request various
services, such as database access, server side processing, or anything else that
you can imagine.

See the `Tangelo documentation <https://tangelo.readthedocs.org>`_ for more
information.

Get Involved
============

Please join our `mailing list <http://public.kitware.com/cgi-bin/mailman/listinfo/tangelo-users>`_
to ask questions about setting up and using Tangelo.

Fork our repository and do great things. At `Kitware <http://www.kitware.com>`_,
we've been contributing to open-source software for 15 years and counting, and
want to make Tangelo as useful to as many as possible.

Acknowledgement
===============

Tangelo development is sponsored by the Air Force Research Laboratory and DARPA XDATA program.

