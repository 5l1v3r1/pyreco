[
    "lib.shell",
    "plugin.gundo",
    "markedjson.nodes",
    "segments.plugin.tagbar",
    "bindings.i3",
    "powerline.lib.humanize_bytes",
    "test_lib",
    "renderers.i3bar",
    "powerline-i3",
    "segments",
    "theme",
    "vcs",
    "bindings.ipython.pre_0_11",
    "nodes",
    "segments.plugin.nerdtree",
    "powerline.vim",
    "powerline.matchers",
    "qtile",
    "reader",
    "test_configuration",
    "powerline.lint.markedjson.error",
    "test_segments",
    "source.powerline_autodoc",
    "mercurial",
    "markedjson.composer",
    "matchers.plugin.gundo",
    "lib.config_mock",
    "common",
    "markedjson.reader",
    "post_0_11",
    "tests.test_shells.postproc",
    "powerline-awesome",
    "renderers.vim",
    "ipython.post_0_11",
    "powerline.renderers.tcsh_prompt",
    "markedjson.events",
    "lint.markedjson.nodes",
    "tests.test_segments",
    "zsh_prompt",
    "docs.source.powerline_autodoc",
    "widget",
    "powerline.lib.monotonic",
    "powerline.lib.file_watcher",
    "powerline.renderers",
    "powerline.lint.markedjson.reader",
    "renderers.ipython",
    "ipython",
    "path",
    "markedjson.tokens",
    "lint.inspect",
    "powerline.renderers.tmux",
    "powerline.bindings.awesome",
    "colorscheme",
    "tests.lib.config_mock",
    "renderers.tmux",
    "tests.test_configuration",
    "powerline.lib.vcs.bzr",
    "powerline.lib.inotify",
    "powerline.lint",
    "lib.unicode",
    "powerline.lib.url",
    "tmux",
    "vim",
    "powerline.matchers.plugin.ctrlp",
    "powerline.renderers.bash_prompt",
    "composer",
    "bindings",
    "tools",
    "plugin.ctrlp",
    "bindings.awesome",
    "powerline.lint.markedjson.parser",
    "powerline.bindings.ipython.pre_0_11",
    "nerdtree",
    "bash_prompt",
    "ipython.pre_0_11",
    "lib.tree_watcher",
    "tree_watcher",
    "markedjson.constructor",
    "source.conf",
    "powerline.lib.config",
    "inotify",
    "powerline.segments.plugin.ctrlp",
    "powerline.shell",
    "powerline.matchers.plugin.gundo",
    "powerline.segments",
    "renderers.shell",
    "renderers.tcsh_prompt",
    "docs.source.conf",
    "powerline.lint.markedjson.tokens",
    "error",
    "markedvalue",
    "powerline.segments.plugin.syntastic",
    "lint.markedjson.error",
    "test_shells",
    "awesome",
    "renderers",
    "powerline.bindings.ipython",
    "tests.lib",
    "powerline.segments.i3wm",
    "conf",
    "powerline",
    "powerline.segments.plugin.nerdtree",
    "lint.markedjson.tokens",
    "powerline.lint.markedjson.events",
    "powerline.bindings",
    "markedjson.loader",
    "powerline.renderers.ipython",
    "powerline.segments.plugin.tagbar",
    "docs",
    "config",
    "events",
    "powerline.bindings.awesome.powerline-awesome",
    "colors_find",
    "i3",
    "segments.ipython",
    "monotonic",
    "powerline.segments.ipython",
    "powerline.matchers.plugin",
    "i3.powerline-i3",
    "tests.path",
    "powerline.renderers.zsh_prompt",
    "test_shells.postproc",
    "renderers.zsh_prompt",
    "gundo",
    "lint.markedjson.composer",
    "threaded",
    "lib",
    "loader",
    "lib.threaded",
    "lint.markedjson.resolver",
    "plugin",
    "tools.colors_find",
    "lib.config",
    "powerline.renderers.i3bar",
    "matchers",
    "powerline.renderers.pango_markup",
    "unicode",
    "test_cmdline",
    "segments.i3wm",
    "powerline.renderer",
    "vcs.git",
    "source",
    "segments.plugin.syntastic",
    "powerline.ipython",
    "lint.markedjson.parser",
    "powerline.renderers.shell",
    "humanize_bytes",
    "markedjson.error",
    "lib.vcs",
    "tests",
    "powerline.segments.vim",
    "powerline.segment",
    "powerline.lint.markedjson.constructor",
    "resolver",
    "matchers.plugin",
    "pango_markup",
    "powerline.segments.shell",
    "powerline.matcher",
    "lib.monotonic",
    "path.vim",
    "generate_gradients",
    "powerline.matchers.plugin.nerdtree",
    "powerline_autodoc",
    "powerline.lib.unicode",
    "lib.vcs.mercurial",
    "powerline.matchers.vim",
    "file_watcher",
    "pre_0_11",
    "postproc",
    "powerline.lib.tree_watcher",
    "lib.file_watcher",
    "lib.url",
    "bindings.i3.powerline-i3",
    "matcher",
    "vcs.bzr",
    "renderers.pango_markup",
    "powerline.lib",
    "powerline.lib.threaded",
    "lib.vcs.bzr",
    "plugin.nerdtree",
    "config_mock",
    "awesome.powerline-awesome",
    "powerline.bindings.i3",
    "powerline.segments.plugin",
    "lib.inotify",
    "matchers.plugin.nerdtree",
    "segments.common",
    "powerline.lib.shell",
    "markedjson.parser",
    "inspect",
    "tools.generate_gradients",
    "powerline.segments.common",
    "tests.vim",
    "bindings.ipython.post_0_11",
    "renderers.bash_prompt",
    "i3bar",
    "lib.humanize_bytes",
    "powerline.lint.markedjson.scanner",
    "matchers.plugin.ctrlp",
    "powerline.lib.vcs",
    "vcs.mercurial",
    "constructor",
    "bindings.qtile",
    "qtile.widget",
    "test_config_reload",
    "segments.plugin.ctrlp",
    "markedjson.resolver",
    "powerline.lib.vcs.git",
    "powerline.lint.markedjson.markedvalue",
    "renderer",
    "syntastic",
    "powerline.renderers.vim",
    "git",
    "i3wm",
    "matchers.vim",
    "lint.markedjson.events",
    "plugin.tagbar",
    "ctrlp",
    "powerline.bindings.ipython.post_0_11",
    "powerline.bindings.i3.powerline-i3",
    "lint",
    "lib.memoize",
    "tokens",
    "tcsh_prompt",
    "lint.markedjson.scanner",
    "lint.markedjson.reader",
    "powerline.lib.memoize",
    "lint.markedjson.markedvalue",
    "bindings.qtile.widget",
    "powerline.colorscheme",
    "lint.markedjson.constructor",
    "lint.markedjson.loader",
    "powerline.lib.vcs.mercurial",
    "tests.test_cmdline",
    "segments.shell",
    "scanner",
    "segments.vim",
    "parser",
    "shell",
    "powerline.lint.markedjson.resolver",
    "lint.markedjson",
    "bindings.awesome.powerline-awesome",
    "lib.vcs.git",
    "docs.source",
    "markedjson",
    "tests.path.vim",
    "bindings.ipython",
    "powerline.bindings.qtile",
    "powerline.bindings.qtile.widget",
    "powerline.lint.inspect",
    "tests.test_lib",
    "powerline.theme",
    "memoize",
    "powerline.lint.markedjson.loader",
    "powerline.lint.markedjson.composer",
    "plugin.syntastic",
    "tests.test_config_reload",
    "powerline.lint.markedjson",
    "markedjson.markedvalue",
    "powerline.lint.markedjson.nodes",
    "segment",
    "bzr",
    "url",
    "tagbar",
    "markedjson.scanner",
    "segments.plugin",
    "tests.test_shells"
]