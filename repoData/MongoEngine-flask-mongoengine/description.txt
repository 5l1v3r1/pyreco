Flask Sphinx Styles
===================

This repository contains sphinx styles for Flask and Flask related
projects.  To use this style in your Sphinx documentation, follow
this guide:

1. put this folder as _themes into your docs folder.  Alternatively
   you can also use git submodules to check out the contents there.
2. add this to your conf.py:

   sys.path.append(os.path.abspath('_themes'))
   html_theme_path = ['_themes']
   html_theme = 'flask'

The following themes exist:

- 'flask' - the standard flask documentation theme for large
  projects
- 'flask_small' - small one-page theme.  Intended to be used by
  very small addon libraries for flask.

The following options exist for the flask_small theme:

   [options]
   index_logo = ''              filename of a picture in _static
                                to be used as replacement for the
                                h1 in the index.rst file.
   index_logo_height = 120px    height of the index logo
   github_fork = ''             repository name on github for the
                                "fork me" badge

Sample app to test the toolbar
==============================

A simple multi file app - to help get you started

1. Install all the requirements from: flask-mongoengine/requirements.txt::

    pip install -r requirements.txt

2. From the root folder run the app eg::

	python ./examples/biggerapp/app.py

3. Point your browser to localhost:4000/


Sample app to test the toolbar
==============================

A simple one file app - to help get you started

1. Install all the requirements from: flask-mongoengine/requirements.txt::

    pip install -r requirements.txt

2. From the root folder run the app eg::

	python ./examples/simpleapp/app.py

3. Point your browser to localhost:4000/


=================
Flask-MongoEngine
=================
.. image:: https://secure.travis-ci.org/MongoEngine/flask-mongoengine.png?branch=master
  :target: http://travis-ci.org/MongoEngine/flask-mongoengine

:Info: Flask extension to help with MongoEngine
:Maintainer: Looking for a maintainer - contact the mailing list!
:Author: Ross Lawley (http://github.com/rozza)

A Flask extension that provides integration with `MongoEngine <http://mongoengine.org/>`_. It handles connection management for your app.

You can also use `WTForms <http://wtforms.simplecodes.com/>`_ as model forms for your models.

Full documentation: `Read The Docs <http://readthedocs.org/docs/flask-mongoengine/en/latest/>`_

For a demo run - simply setup a virtualenv:

    pip install -r requirements.txt

    python example/simpleapp.py


And goto http://localhost:4000

