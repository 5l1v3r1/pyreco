Autobahn Testsuite
==================

General information and installation instructions are available at
http://autobahn.ws/testsuite.

Running the test suite
----------------------

To test the server::

    $ python test_server.py
    $ wstest -m fuzzingclient

To test the client::

    $ wstest -m fuzzingserver
    $ python test_client.py

Run the first command in a shell. Run the second command in another shell. It
should take about one minute to complete. Then kill the first one with Ctrl-C.

The test client or server shouldn't display any exceptions. The results are
stored in reports/index.html.

Note that the Autobahn software only supports Python 2, while websockets only
supports Python 3; you need two different environments.

Conformance notes
-----------------

Test cases 6.4.2, 6.4.3, and 6.4.4 are actually more strict than the RFC.
Given its implementation, ``websockets`` gets a "Non-Strict".

WebSockets
==========

``websockets`` is a library for developing WebSocket servers_ and clients_ in
Python. It implements `RFC 6455`_ with a focus on correctness and simplicity.
It passes the `Autobahn Testsuite`_.

Built on top on Python's asynchronous I/O support introduced in `PEP 3156`_,
it provides an API based on coroutines, making it easy to write highly
concurrent applications.

Installation is as simple as ``pip install websockets``. It requires Python â‰¥
3.4 or Python 3.3 with the ``asyncio`` module, which is available with ``pip
install asyncio`` or in the `Tulip`_ repository.

Documentation is available at http://aaugustin.github.io/websockets/.

Bug reports, patches and suggestions welcome! Just open an issue_ or send a
`pull request`_.

.. _servers: https://github.com/aaugustin/websockets/blob/master/example/server.py
.. _clients: https://github.com/aaugustin/websockets/blob/master/example/client.py
.. _RFC 6455: http://tools.ietf.org/html/rfc6455
.. _Autobahn Testsuite: https://github.com/aaugustin/websockets/blob/master/compliance/README.rst
.. _PEP 3156: http://www.python.org/dev/peps/pep-3156/
.. _Tulip: http://code.google.com/p/tulip/
.. _issue: https://github.com/aaugustin/websockets/issues/new
.. _pull request: https://github.com/aaugustin/websockets/compare/

