sample-of-events
================

This sample is designed to allow you to easily get a feel for what sort of
events you can tap into with `crankd`.  `generate-event-plist.py` will create a
file called `crankd-config.plist`, which configures crankd to call our wrapper
script, `tunnel.sh` when any of a large sampling of system events (such as
joining networks or mounting volumes) occur.

To use it, open up a `Terminal` window to the directory containing the files.

1.  Generate the plist:

> `python generate-event-plist.py`

2.  If desired, edit `tunnel.sh` until you are satisfied with what commands it
will trigger.  It is intially set up to log the event (so you can see it in
`Console`) and to [Growl](http://growl.info/) the event (but you need to have
`growlnotify` installed), to `say` that an event occured, and to `echo` the
event.

3.  Run crankd:

> `/path/to/bin/crankd.py --config=crankd-config.plist`

4.  Generate some events -- (dis)connect to/from a network, (un)mount a volume,
(un)plug the power adapter, and so on.  Watch as the events are triggered.

5.  When you are done, press `Ctrl-C` to kill `crankd`.

This example uses crankd to dynamically enable or disable the SOCKS proxy when the network changes:

http://code.google.com/p/pymacadmin/wiki/SOCKSProxyExample

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>
      PyMacAdmin README
    </title>
    <style type="text/css" media="screen" xml:space="preserve">
/*<![CDATA[*/
      body {
        font-family: "Lucida Grande", sans-serif;
      }
    /*]]>*/
    </style>
  </head>
  <body>
    <h1>
      <a href="http://groups.google.com/group/pymacadmin" style="color:inherit;text-decoration:inherit;">PyMacAdmin</a>
    </h1>
    <p style="font-style: oblique">
      A collection of Python utilities for Mac OS X system administration
    </p>
    <p>
      The PyMacAdmin project started as a collaboration between Chris Adams
      and Nigel Kersten to develop a replacement for the unsupported 'kicker'
      feature included in OS X prior to 10.5. That replacement eventually
      became crankd, which provides a way to execute Python code or a shell
      script in response to many system events: network changes, filesystem
      activity, application launching, etc.
    </p>
    <p>
      A second major features was the disk image unit testing framework
      designed to test OS X installation images before deployment and we've
      since gained or had contributed utilities to create network locations,
      manage proxy settings or update AirPort passwords using our Keychain
      wrapper.
    </p>
    <p>
      You're invited join the mailing list: <a href="http://groups.google.com/group/pymacadmin">http://groups.google.com/group/pymacadmin</a>
    </p>
    <p>
      Please see <a href="http://pymacadmin.googlecode.com/">http://pymacadmin.googlecode.com/</a> for more information.
    </p>
  </body>
</html>

A collection of Python utilities for Mac OS X system administration.

The PyMacAdmin project started as a collaboration between Chris Adams and
Nigel Kersten to develop a replacement for the unsupported 'kicker' feature
included in OS X prior to 10.5. That replacement eventually became crankd,
which provides a way to execute Python code or a shell script in response to
many system events: network changes, filesystem activity, application
launching, etc.

A second major features is the disk image unit testing framework designed to
test OS X installation images before deployment.

We've also added utilities to create network locations, manage proxy settings
or update AirPort passwords using our Keychain wrapper.

You're invited join the mailing list:

http://groups.google.com/group/pymacadmin

Please see http://pymacadmin.googlecode.com/ for more information.

