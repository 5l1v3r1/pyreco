[
    "lex_error4",
    "lex_error2",
    "lex_error3",
    "lex_error1",
    "calcdebug",
    "example.ansic.cparse",
    "yacc_notok",
    "test.testyacc",
    "basiclog",
    "yacc_unused_rule",
    "example.BASIC.basiclog",
    "lex_ignore",
    "test.lex_token_dup",
    "lex_rule1",
    "lex_optimize2",
    "lex_optimize3",
    "test.yacc_badtok",
    "lex_re1",
    "lex_re2",
    "lex_re3",
    "test.lex_state2",
    "test.lex_state3",
    "optcalc",
    "test.yacc_literal",
    "yacc_nodoc",
    "example.BASIC",
    "lex_dup3",
    "yply",
    "lex_dup1",
    "example.yply",
    "lex_module_import",
    "example.GardenSnake.GardenSnake",
    "ctokens",
    "newclasscalc.calc",
    "test.yacc_badrule",
    "lex_state_try",
    "test.yacc_badargs",
    "example.closurecalc.calc",
    "ansic.cparse",
    "yacc_error5",
    "yacc_error2",
    "yacc_error3",
    "example.unicalc",
    "yacc_error1",
    "test.lex_state_try",
    "lex_empty",
    "test.yacc_unused_rule",
    "test.yacc_prec1",
    "yacc_prec1",
    "test.lex_state_noerror",
    "yacc_uprec2",
    "yacc_rr",
    "example.ansic.clex",
    "closurecalc",
    "test.lex_object",
    "test.yacc_inf",
    "lex_token5",
    "test.lex_dup1",
    "test.lex_dup2",
    "example.calc",
    "lex_token1",
    "lex_opt_alias",
    "lex_token3",
    "lex_token2",
    "yacc_term1",
    "test.yacc_badprec",
    "test.lex_ignore",
    "lex_optimize",
    "clex",
    "example.newclasscalc.calc",
    "example.BASIC.basinterp",
    "test.yacc_notok",
    "GardenSnake.GardenSnake",
    "yacc_unicode_literals",
    "yacc",
    "test.yacc_uprec2",
    "classcalc.calc",
    "lex_hedit",
    "closurecalc.calc",
    "example.newclasscalc",
    "test.testlex",
    "yacc_unused",
    "lex_object",
    "example.hedit",
    "yacc_badprec",
    "ylex",
    "test.lex_optimize3",
    "test.lex_optimize2",
    "example.BASIC.basiclex",
    "testyacc",
    "example.BASIC.basparse",
    "calclex",
    "ansic.clex",
    "BASIC.basiclog",
    "test.yacc_uprec",
    "example.hedit.hedit",
    "newclasscalc",
    "lex_many_tokens",
    "test.yacc_simple",
    "ply.yacc",
    "test.lex_token5",
    "example.yply.yply",
    "ply",
    "yacc_rr_unused",
    "yacc_dup",
    "yacc_nop",
    "lex",
    "ansic",
    "lex_state_norule",
    "example.yply.ylex",
    "hedit",
    "yacc_simple",
    "test.calclex",
    "lex_rule3",
    "cparse",
    "example.calc.calc",
    "test.yacc_error7",
    "test.yacc_error6",
    "test.yacc_error5",
    "lex_rule2",
    "test.yacc_error3",
    "test.yacc_error2",
    "test.yacc_error1",
    "yacc_misplaced",
    "lex_state4",
    "lex_state1",
    "ply.ctokens",
    "lex_state3",
    "lex_state2",
    "ply.cpp",
    "lex_ignore2",
    "ply.lex",
    "example.yply.yparse",
    "calc.calc",
    "yacc_badrule",
    "calcdebug.calc",
    "classcalc",
    "basiclex",
    "example.ansic",
    "yply.yply",
    "yacc_noerror",
    "yacc_badtok",
    "test.yacc_badprec2",
    "test.yacc_badprec3",
    "unicalc",
    "test.lex_literal2",
    "test.yacc_nop",
    "test.lex_literal1",
    "test.lex_state4",
    "test.lex_many_tokens",
    "test.lex_state5",
    "basic",
    "test.lex_error4",
    "calc",
    "test.lex_error1",
    "test.lex_error3",
    "test.lex_error2",
    "BASIC.basic",
    "test.lex_rule1",
    "test.lex_rule2",
    "yacc_badid",
    "test.lex_re1",
    "test.lex_state1",
    "test.lex_re3",
    "test.lex_re2",
    "yacc_badprec3",
    "yacc_badprec2",
    "example.classcalc.calc",
    "example.calcdebug",
    "test.lex_dup3",
    "yply.ylex",
    "example.classcalc",
    "test.yacc_sr",
    "test.yacc_noerror",
    "hedit.hedit",
    "yply.yparse",
    "BASIC.basinterp",
    "test.lex_optimize",
    "BASIC.basparse",
    "test.yacc_notfunc",
    "test.yacc_rr_unused",
    "test.lex_module_import",
    "yacc_missing1",
    "test.yacc_rr",
    "BASIC.basiclex",
    "lex_state_noerror",
    "GardenSnake",
    "test.lex_empty",
    "example",
    "example.optcalc",
    "example.optcalc.calc",
    "test.lex_literal3",
    "test.yacc_error4",
    "test.yacc_nested",
    "test.yacc_unicode_literals",
    "BASIC",
    "yacc_literal",
    "lex_closure",
    "test.yacc_misplaced",
    "yacc_uprec",
    "cpp",
    "lex_token4",
    "example.BASIC.basic",
    "test.lex_module",
    "lex_doc1",
    "example.unicalc.calc",
    "lex_state5",
    "yacc_inf",
    "test.lex_rule3",
    "example.GardenSnake",
    "test.lex_state_norule",
    "test.lex_opt_alias",
    "test.lex_doc1",
    "doc.makedoc",
    "test",
    "yacc_nested",
    "yacc_sr",
    "lex_dup2",
    "test.yacc_missing1",
    "example.closurecalc",
    "test.lex_closure",
    "unicalc.calc",
    "basinterp",
    "yacc_notfunc",
    "test.lex_token4",
    "makedoc",
    "test.lex_token2",
    "test.lex_token3",
    "test.lex_token1",
    "test.yacc_nodoc",
    "example.calcdebug.calc",
    "lex_literal1",
    "test.yacc_term1",
    "lex_literal3",
    "lex_literal2",
    "optcalc.calc",
    "test.yacc_badid",
    "yparse",
    "basparse",
    "yacc_error6",
    "lex_token_dup",
    "yacc_error7",
    "lex_module",
    "doc",
    "yacc_error4",
    "test.lex_hedit",
    "test.yacc_dup",
    "test.lex_ignore2",
    "yacc_badargs",
    "testlex",
    "test.yacc_unused"
]