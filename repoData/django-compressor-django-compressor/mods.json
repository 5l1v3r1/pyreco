[
    "filters.datauri",
    "compressor.offline.django",
    "test_base",
    "compressor.templatetags.compress",
    "beautifulsoup",
    "filters",
    "compressor.filters.closure",
    "tests.test_templatetags",
    "compressor.css",
    "cache",
    "compressor.tests",
    "utils.stringformat",
    "signals",
    "test_signals",
    "compressor.parser",
    "compressor.tests.test_templatetags",
    "compressor.js",
    "tests",
    "docs",
    "filters.jsmin.rjsmin",
    "compressor.offline",
    "stringformat",
    "compressor.management",
    "offline.jinja2",
    "offline.django",
    "jinja2",
    "filters.yuglify",
    "parser.beautifulsoup",
    "rcssmin",
    "docs.conf",
    "management.commands.compress",
    "closure",
    "contrib.sekizai",
    "compressor.tests.test_offline",
    "filters.template",
    "jsmin.rjsmin",
    "filters.cssmin.cssmin",
    "yuglify",
    "management.commands",
    "tests.test_filters",
    "parser.default_htmlparser",
    "cssmin.cssmin",
    "utils.staticfiles",
    "compressor.filters.jsmin.slimit",
    "compressor.tests.test_parsers",
    "filters.css_default",
    "html5lib",
    "test_templatetags",
    "compressor.parser.default_htmlparser",
    "filters.closure",
    "parser.base",
    "rjsmin",
    "compressor.parser.lxml",
    "compressor.cache",
    "compressor.tests.precompiler",
    "test_parsers",
    "tests.test_signals",
    "template",
    "compressor.tests.test_signals",
    "offline",
    "decorators",
    "jinja2ext",
    "compressor.filters.yui",
    "compressor.signals",
    "tests.test_jinja2ext",
    "parser.lxml",
    "compressor.parser.beautifulsoup",
    "test_jinja2ext",
    "tests.test_offline",
    "mtime_cache",
    "js",
    "compressor.management.commands.compress",
    "finders",
    "compressor.parser.base",
    "compressor.filters",
    "compressor.offline.jinja2",
    "commands",
    "test_settings",
    "yui",
    "utils.decorators",
    "filters.base",
    "base",
    "compressor.templatetags",
    "css_default",
    "compressor.management.commands.mtime_cache",
    "compressor.contrib.sekizai",
    "test_offline",
    "compressor.tests.test_filters",
    "compressor.filters.datauri",
    "compressor.parser.html5lib",
    "compressor.management.commands",
    "compressor.filters.base",
    "tests.test_storages",
    "contrib",
    "precompiler",
    "filters.cssmin",
    "compressor.filters.cssmin.cssmin",
    "filters.jsmin.slimit",
    "tests.test_parsers",
    "commands.compress",
    "commands.mtime_cache",
    "compressor.filters.cssmin.rcssmin",
    "compressor",
    "staticfiles",
    "jsmin",
    "compressor.test_settings",
    "filters.yui",
    "datauri",
    "compressor.utils",
    "compressor.filters.yuglify",
    "compressor.utils.staticfiles",
    "compressor.models",
    "compressor.tests.test_base",
    "compressor.filters.csstidy",
    "compressor.filters.css_default",
    "exceptions",
    "compressor.conf",
    "contrib.jinja2ext",
    "filters.jsmin",
    "slimit",
    "compressor.base",
    "compressor.storage",
    "utils",
    "parser",
    "default_htmlparser",
    "templatetags",
    "cssmin.rcssmin",
    "compressor.finders",
    "compressor.utils.decorators",
    "conf",
    "sekizai",
    "compressor.exceptions",
    "filters.cssmin.rcssmin",
    "test_filters",
    "compressor.tests.test_storages",
    "templatetags.compress",
    "tests.test_base",
    "storage",
    "compressor.filters.jsmin.rjsmin",
    "css",
    "compressor.tests.test_jinja2ext",
    "compressor.contrib",
    "models",
    "compress",
    "lxml",
    "test_storages",
    "compressor.filters.template",
    "cssmin",
    "jsmin.slimit",
    "compressor.contrib.jinja2ext",
    "compressor.utils.stringformat",
    "compressor.filters.jsmin",
    "django",
    "filters.csstidy",
    "csstidy",
    "management.commands.mtime_cache",
    "tests.precompiler",
    "management",
    "compressor.filters.cssmin",
    "parser.html5lib"
]