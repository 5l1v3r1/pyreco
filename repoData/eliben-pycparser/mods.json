[
    "examples.explore_ast",
    "ply.yacc",
    "pycparser",
    "c_parser",
    "utils.internal",
    "make_fake_typedefs",
    "c_ast",
    "test_c_generator",
    "pycparser.ply.yacc",
    "pycparser._ast_gen",
    "c_generator",
    "utils.internal.zz_parse",
    "internal",
    "pycparser.ply.ctokens",
    "all_tests",
    "c_lexer",
    "using_gcc_E_libc",
    "tests",
    "pycparser.plyparser",
    "tests.test_c_generator",
    "ctokens",
    "examples.using_gcc_E_libc",
    "c-to-c",
    "examples.func_defs",
    "examples.c-to-c",
    "yacc",
    "test_c_lexer",
    "pycparser.ply.lex",
    "test_c_parser",
    "_ast_gen",
    "z",
    "ply.cpp",
    "func_calls",
    "examples.using_cpp_libc",
    "cdecl",
    "utils",
    "pycparser.ply",
    "internal.zz_parse",
    "examples.func_calls",
    "func_defs",
    "test_general",
    "pycparser.c_parser",
    "examples",
    "tests.test_c_lexer",
    "pycparser.c_ast",
    "explore_ast",
    "tests.test_c_ast",
    "utils.internal.fake_includes",
    "utils.internal.make_fake_typedefs",
    "tests.all_tests",
    "test_c_ast",
    "tests.test_general",
    "pycparser.ply.cpp",
    "internal.make_fake_typedefs",
    "ply",
    "examples.cdecl",
    "lex",
    "pycparser.c_generator",
    "using_cpp_libc",
    "plyparser",
    "pycparser.c_lexer",
    "_clean_tables",
    "zz_parse",
    "pycparser.ast_transforms",
    "fake_includes",
    "tests.test_c_parser",
    "internal.fake_includes",
    "ast_transforms",
    "ply.ctokens",
    "cpp",
    "pycparser._build_tables",
    "_build_tables",
    "ply.lex"
]