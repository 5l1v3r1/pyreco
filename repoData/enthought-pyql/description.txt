QuantLib / Cython example: Construction of zero-coupon curves from FRB data

1) Download swap and deposit rate data from the Federal Reserve database:
www.federalreserve.gov/datadownload

2) Read the csv file and build a time series of deposit and swap rates

3) Use QuantLib to compute a zero-coupon curve for a given date

Calibration of Heston model on SPX option data
==============================================

1) process_SPX_options.py computes:
    - market implied forward, interest rate and dividend yield
    - implied market volatility (bid/ask)
    - quick delta
    - filters quotes to retain only the quotes with a QD between .2 and .8
    
2) calibrate_heston estimate the parameters by non-linear least-square 
    error computed on difference between market vol and model vol
    
3) calibration_plot displays fitted and market vols at selected expiries.






PyQL - QuantLib Cython wrappers
===============================

This library is a new set of wrappers using Cython on top of QuantLib.
It currently focuses on useful simple objects like Date, Calendar but
might be extended to more complex wrappers if needed.

This is still considered as alpha version even if it works quite well.

As PyQL is already used by other projects, we are still looking for a good
name. Suggestions are welcome!

Prerequisites
-------------

* [QuantLib](http://www.quantlib.org) (version 1.1 or higher)
* [Cython](http://www.cython.org) (version 0.19 or higher)

Building the library
--------------------

The build and test suite can be run as follows::

    make clean
    make build
    make tests

To build the library on Mac OS X 10.9, the QuantLib library must be linked
against libstdc++. To do so, set the environment variables `CXXFLAGS` and
`LDFLAGS` to `-stlib=libstdc++ -mmacosx-version-min=10.6` before building
from source.

