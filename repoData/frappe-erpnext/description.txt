# Contributing to ERPNext

## Reporting issues

We only accept issues that are bug reports or feature requests. Bugs must be isolated and reproducible problems. Please read the following guidelines before opening any issue.

1. **Search for existing issues.** We want to avoid duplication, and you'd help us out a lot by first checking if someone else has reported the same issue. The issue may have already been resolved with a fix available.

### Issues

1. **Share as much information as possible.** Include operating system and version, browser and version, when did you last update ERPNext, how is it customized, etc. where appropriate. Also include steps to reproduce the bug.
1. Consider adding screenshots annotated with what goes wrong.
1. If you are reporting an issue from the browser, Open the Javascript Console and paste us any error messages you see.

### Feature Requests

1. We need as much information you can to consider a feature request. 
1. Think about **how** you want us to build the feature. Consider including:
	1. Mockups (wireframes of features)
	1. Screenshots (annotated with what should change)
	1. Screenshots from other products if you want us to implement features present in other products.
1. Basically, the more you help us, the faster your request is likely to be completed.
1. A one line feature request like **Implement Capacity Planning** will be closed.

## Pull Requests

General guidelines for sending pull requests:

#### Don't Repeat Yourself (DRY)

We believe that the most effective way to manage a product like this is to ensure that
there is minimum repetition of code. So before contributing a function, please make sure
that such a feature or function does not exist else where. If it does, the try and extend
that function to accommodate your use case.

#### Don't create new DocTypes Unless Absolutely Necessary

DocTypes are easy to create but hard to maintain. If you find that there is a another DocType with a similar functionality, then please try and extend that functionality. For example, by adding a "type" field to classify the new type of record.

#### Don't Send Trivial Requests

Don't send pull requests for fixing a simple typo in a code comment.

#### Tabs or spaces?

Tabs!

### Copyright

Please see README.md
Account DocType represents an Accounting Ledger or Group.

Follows a composite model. `parent_account` represents the parent of an Account except
a root account.
There can be only 4 root accounts: Income, Expense, Assets and Liabilities in a company.

Other features:

- It can be of type Debit or Credit.
- A Group is a collection of groups or ledgers


Tool to update realization dates for banking transactions.
Detail of transaction for parent Bank Reconciliation.
Budget amounts for year and distribution for parent Cost Center.
Budget distribution master to manage manage budget seasonality.
Percent allocation for month for parent Budget Distribution.
Cost center master (tree).
C Form (India specific only) - Will be deprecated.
Invoice detail for parent C-Form.
Accounting year. Fiscal Year is tagged in all accounting transactions.
All accounting entries are consolidated / aggregated in GL Entry (General Ledger Entry) DocType. All reports are generated from this DocType.
Journal entry for accounting entries including payments.
Individual entry for parent Journal Voucher.
Master for modes of payment.

e.g.

- Cash
- Credit Card
- Bank Transfer
- Check
Tool for mapping (cancelling) unpaid invoices and payments.
Journal Voucher (payment) detail for matching to invoice.
Entry to close all Profit and Loss (P&L) accounts at the end of a financial period.
Standard settings for Point of Sales (POS) type of Sales Invoice.
Itemized invoice raised by Supplier.
Detail of advance paid against Purchase Invoice.
Item detail in parent Purchase Invoice.
Tax details for all Purchase Transactions.
Template for tax structure in purchase transactions.
Itemized invoice raised to Customers.
Details of advances paid by Customers against Sales Invoice.
Item details of parent Sales Invoice.
Tax details for all sales transactions.
Template for tax structure in sales transactions.
Tree view browser for Chart of Accounts and Chart of Cost Centers
Trends (multi-year) for account balances including.
Period wise opening and closing balance of all transactions.
Accounts module contains masters and transactions to manage a traditional
double entry accounting system.

Accounting heads are called "Accounts" and they can be groups in a tree like
"Chart of Accounts"

Entries are:

- Journal Vouchers
- Sales Invoice (Itemised)
- Purchase Invoice (Itemised)

All accounting entries are stored in the `General Ledger`
Common scripts for purchase transactions.
Confirmed order to Supplier to deliver certain Items.
Item details (qty, rate etc.) for parent Purchase Order.
Raw material (if any) supplied along with Purchase Order.
Details of Items supplied when receiving purchases via Purchase Receipt.
Incoming quality inspection for received Items.
Parameter reading for quality inspection of particular Item.
Supplier (vendor) master.
Quotation sent by Supplier with price, qty and terms.
Item details (rate, qty) in parent Supplier Quotation.
Trends of purchases across Items, Item Groups, Suppliers.
Manage buying (purchasing).

Transactions include:

- Material Request
- Supplier Quotation
- Purchase Order
- Quality Inspection
Activity Feed.
List of latest activities based on Feed.
Performance of an Employee in a Time Period against given goals.
Goal for the parent Appraisal.
Standard set of goals for an Employee / Designation / Job Profile. New Appraisal transactions can be created from the Template.
Goal details for the parent Appraisal Template.
Attendance record of an Employee on a particular date.
Location belonging to the organization where Employees can belong.
Type of salary deduction. 

e.g. Tax paid on behalf of the employee that is deducted from the salary.
Department where Employee belongs.
Employee Designation.
Type of earning that is a part of the salary.

e.g. basic salary, bonus etc.
Employee master.
Education detail for parent Employee.
External work history details of parent Employee.
Work history details of parent Employee within the organization.
User authorized to approve Leave Application for an Employee.
Type of employment.

e.g. Permanent, Probation, Intern etc.
Amount claimed by Employee for expense made by the Employee on organization's behalf.
Detail of expense in parent Expense Claim.
Type of expense for Expense Claim.
Holiday date in Holiday List.
List of Holidays.
Applicant for Job.
Open position for Job.
Leave Allocated to an Employee at the beginning of the period.
Application for Leave by an Employee.
List of days on which leaves can only be approved by special users.
User allowed to approve leave on blocked date.
Date blocked on parent Leave Block List.
Tool to allocate leaves in bulk.
Type of Leave.

e.g.

- Casual Leave
- Sick Leave
Tool to issue monthly Salary Slips to all Employees.
Details of monthly salary paid for an Employee.
Deduction detail in parent Salary Slip.

e.g.

- Tax paid on employee's behalf
Earning detail in parent Salary Slip.

e.g.

- Basic Salary
- Performance Bonus

Salary Template for an Employee, basis of which monthly Salary is calculated.
Deduction details in parent Salary Structure.
Earning details in parent Salary Structure.
Tool to upload attendance via csv file.
Key features:

- Leave and Attendance
- Payroll
- Appraisal
- Expense Claim
Bill of Materials (BOM) is a list of operations and Items required to manufacture a particular product (Item).
Detail of Item required for the main Item by parsing the entire BOM tree.
Item required in the parent Bill of Material.
Operation performed in the parent Bill of Material.
Tool to replace one Item with another in all Bill of Material (BOM) trees.
Authorization (order) given to manufacturing unit to produce a certain Item.
Tool to create Production Orders from a bunch of Sales Orders and generate Material Requests (MRP) as required.
Item being considered for planning in Production Planning Tool.
Sales Order being considered for the Production Planning Tool.
Workstation where BOM Operation is performed.
Plan and manage manufacturing operations, bill of materials for manufacturing.
Type of Activity (set in Task, Time Log)
You can use projects to:

1. Track budgets (Purchase Orders, Invoices).
2. Track material consumption.
3. Create and assign tasks (and view them on a Gantt Chart).
Project details. Projects can be internal or external and can have Tasks, Milestones associated to it.
Important date in the project lifecycle.
Task to be completed for a Project (optional).
Log of activity done by a user in a particular period.
Group of Time Logs that can be batched for billing.
Time Log detail for parent Time Log Batch.
Sales campaign / promotion, like special discount, exhibition, newsletter etc.
Customer master.
Type of industry for a Customer.
Details of product installation at Customer location.
Detail of Item installed as a part of Installation Note.
Prospective customer / prospect database. List of all prospects that could be source of business.
Potential sales opportunity (deal) from a Lead or Customer.
Items considered in the parent Opportunity.
Price + terms quote sent to Lead or Customer.
Item details (qty, rate) in parent Quotation.
Confirmed order received from Customer (either against a PO or a payment). All fulfilment details (shipments, billing) are tracked against the Sales Order.
Item detail in parent Sales Order.
Sales Person involved in parent Quotation, Sales Order.
Tool to send Bulk SMS to Lead or Contacts.
Trends of sales by Item, Item Group, Customer etc.
Tree editor for Territory, Customer Group, Item Group, Sales Partner
Selling management module. Includes forms for capturing / managing the sales process.

- Lead
- Opportunity
- Quotation
- Sales Order
Tool to define Authorization Rules (limits above which only specified roles have right to Submit).
Rule to define limits on transactions, above which only specified Role can Submit.
Settings to manage automated backups to third party tools like Dropbox and Google Drive.
Brand of an Item.
Company against which all transactions are made. This is not the Customer or Supplier, this is the company that is the host of the system. Multiple companies can be created as host companies with each user having a different right.
[To deprecate] Common scripts for Contacts.
Country Master.
Currency Master with details about abbreviation, symbol etc.
Customer classification (tree).
Details of automated daily, weekly, monthly digests sent to users.
Settings for enabling / disabling certain features that will result in smaller forms.
Global defaults and settings for various modules.
Item classification (tree).
Settings to extract job applications via email (POP).
Tool to set numbering (naming) series for various DocTypes.
Tool to automatically prompt sending of Email on Submission of various records.
Custom title for print main heading. e.g. "Pro Forma Invoice"
Reason master for losing quotations.
Settings for creating new Communication, Leads from sales inbox like "sales@example.com" via POP3.
Partner / dealer / distributor who sells products (maybe for commission) and for whom targets can be set.
Sales User for whom sales targets can be set.
SMS query parameter for SMS Settings.
Settings for automatically sending SMS from the system.
Supplier classification.
Target set for Sales Person, Territory or Sales Partner.
Order / Contract terms that can be attached to any sale or purchase transaction.
Territory against with any sale can be tagged and targets can be set.
Unit of Measure (UoM) of an Item.
Alternate grouping of parent Item (for website, so an Item can be listed under multiple groups).
Batch of Items Units. If Item has batched inventory, then adding tagging each inventory transaction to a Batch becomes important.
Bin represents a unique Item-Warehouse combination. Sum of all transactions, planned, ordered, reserved quantities for that Item Warehouse is maintained in Bin.
Record of shipment made to Customer, optionally against a Sales Order.
Item shipped in parent Delivery Note.
Item master. Also called SKU (stock keeping unit).
Item-codes used by Customers for the parent Item.
Price of the Item in a particular Price List.
Quality inspection parameter for parent Item.
Warehouse-wise reorder level for the parent Item.
Supplier and supplier code for the parent Item.
Tax rate for this Item against the specified Account.
Specification detail / parameter for website listing.
Item to whose value the selected expense is to be added.
Purchase Receipt where the expense is to be added.
Tool to distribute costs as part of Item value after the Item has been received. This is typically in case where bills related to Items are received much later and for multiple Item. (specially Custom Duty)
Request for material (Items) from internal warehouse or by purchase.
Items requested in parent Material Receipt.
Items contained in a package / container against Delivery Note.
Item detail of parent Packing Slip.
Item Price List master. Price Lists can be defined per Country, Currency.
Shipment received from Supplier against Purchase Order.
Detail of Items received in parent Purchase Receipt.
Grouping of Items for sale. This is use where inventory is not maintained for the main Item but only the child Items.
Child Item grouped in parent Sales BOM.
Unique serial number assigned to an instance (unit) of an Item. This is used incase each unit of the Item needs to be tracked separately for warranty or recall purposes.
Stock movement from one warehouse to another (or from, or to a warehouse).
Item moved as a part of the Stock Entry.
Internal / consolidated record of stock movement. All types of stock movements are recorded on this table and is the key table for inventory reports.
Tool to update stock level, value on a particular date by uploading a csv file.
Tool to replace unit of measure (UoM) of an Item.
Conversion factor to convert non-standard Unit of Measure (UoM) to standard UoM.
Location (physical or virtual) where Items can be stored.
If specified, only user defined in this table are allowed to transact on the parent Warehouse.
Average "age" of an Item in a particular Warehouse based on First-in-first-out (FIFO).
Trends of Items quantities and values.
Stock balances on a particular day, per warehouse.
Stock movement report based on Stock Ledger Entry.
Stock levels (actual, planned, reserved, ordered) for Items on a particular date.
Inventory management module.
Issue raised by Customer, can be tagged against Invoice, Serial Number to verify warranty, service contract.
Schedule generator for planned maintenance for service contract or internal maintenance.
Scheduled event generated by Maintenance Schedule.
Details of Item to be maintained.
Log of visit for maintenance.
Table containing details of Items checked during Maintenance Visit.
Newsletter to be sent to Leads / Contacts.
Support Ticket (query) raised by customer via website or email (if configured).
Support Ticket volume, performance over time.
Customer Support / After sales service / Maintenance Module.
Address belonging to a Customer or Supplier.
Contact representing a Customer or Supplier.
Shared Note. (Page with standard information, links, attachments).
User who can access / edit the parent Note.
Tool to rename in bulk by uploading a .csv file.
Log of SMS sent via SMS Center.
Common utilities / DocTypes.
# ERPNext - Open Source ERP for small, medium sized businesses [![Build Status](https://travis-ci.org/frappe/erpnext.png)](https://travis-ci.org/frappe/erpnext)

[https://erpnext.com](https://erpnext.com)

Includes Accounting, Inventory, CRM, Sales, Purchase, Projects, HRMS. Built on Python / MySQL.

ERPNext is built on [frappe](https://github.com/frappe/frappe)

- [User Guide](http://erpnext.org/user-guide.html)
- [Getting Help](http://erpnext.org/getting-help.html)
- [Developer Forum](http://groups.google.com/group/erpnext-developer-forum)
- [User Forum](http://groups.google.com/group/erpnext-user-forum)

---

### Development install

Use the bench, https://github.com/frappe/frappe-bench.

### Admin Login

1. go to "/login"
1. Administrator user name: "Administrator"
1. Administrator passowrd "admin"

### Download and Install

##### Virtual Image:

- [ERPNext Download](http://erpnext.com/download)

---

## License

GNU/General Public License (see LICENSE.txt)

The ERPNext code is licensed as GNU General Public License (v3) and the Documentation is licensed as Creative Commons (CC-BY-SA-3.0) and the copyright is owned by Web Notes Technologies Pvt Ltd (Web Notes) and Contributors.

---

## Logo and Trademark

The brand name ERPNext and the logo are trademarks of Web Notes Technologies Pvt. Ltd.

### Introduction

Web Notes Technologies Pvt. Ltd. (Web Notes) owns and oversees the trademarks for the ERPNext name and logos. We have developed this trademark usage policy with the following goals in mind:

- We’d like to make it easy for anyone to use the ERPNext name or logo for community-oriented efforts that help spread and improve ERPNext.
- We’d like to make it clear how ERPNext-related businesses and projects can (and cannot) use the ERPNext name and logo.
- We’d like to make it hard for anyone to use the ERPNext name and logo to unfairly profit from, trick or confuse people who are looking for official ERPNext resources.

### Web Notes Trademark Usage Policy

Permission from Web Notes is required to use the ERPNext name or logo as part of any project, product, service, domain or company name.

We will grant permission to use the ERPNext name and logo for projects that meet the following criteria:

- The primary purpose of your project is to promote the spread and improvement of the ERPNext software.
- Your project is non-commercial in nature (it can make money to cover its costs or contribute to non-profit entities, but it cannot be run as a for-profit project or business).
Your project neither promotes nor is associated with entities that currently fail to comply with the GPL license under which ERPNext is distributed.
- If your project meets these criteria, you will be permitted to use the ERPNext name and logo to promote your project in any way you see fit with one exception: Please do not use ERPNext as part of a domain name.

Use of the ERPNext name and logo is additionally allowed in the following situations:

All other ERPNext-related businesses or projects can use the ERPNext name and logo to refer to and explain their services, but they cannot use them as part of a product, project, service, domain, or company name and they cannot use them in any way that suggests an affiliation with or endorsement by the ERPNext or WebNotes or the ERPNext open source project. For example, a consulting company can describe its business as “123 Web Services, offering ERPNext consulting for small businesses,” but cannot call its business “The ERPNext Consulting Company.”

Similarly, it’s OK to use the ERPNext logo as part of a page that describes your products or services, but it is not OK to use it as part of your company or product logo or branding itself. Under no circumstances is it permitted to use ERPNext as part of a top-level domain name.

We do not allow the use of the trademark in advertising, including AdSense/AdWords.

Please note that it is not the goal of this policy to limit commercial activity around ERPNext. We encourage ERPNext-based businesses, and we would love to see hundreds of them.

When in doubt about your use of the ERPNext name or logo, please contact the Web Notes Technologies for clarification.

(inspired from Wordpress)

