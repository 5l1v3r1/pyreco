## Windows users

If you're a Windows user we suggest you set up a virtual machine using [VirtualBox](http://www.virtualbox.org) - Ubuntu
virtual machines can be downloaded [here](http://virtualboxes.org/images/ubuntu/). 

Alternatively, you can help us with [#185 - Windows development environment](https://github.com/freedomsponsors/www.freedomsponsors.org/issues/185)

## Running

Instructions to run application locally:

1. You'll need a few tools for the next steps - make sure all of them are installed before proceeding to the next steps.

 1.1 Make sure your package information is up to date.
 
 ```bash
 $ sudo apt-get update --fix-missing
 ```
 
 1.2 Install Git.
 
  ```bash
  $ sudo apt-get install git
  ```
 
 1.3 Install PostgreSQL.
 
 ```bash
 $ sudo apt-get install postgresql 
 $ sudo apt-get install postgresql-server-dev-all # Make sure you have this.
 ```
 1.4 Install python-dev.
 
 ```bash
 $ sudo apt-get install python-dev
 ```
 1.5 Install python-lxml.
 
 ```bash
 $ sudo apt-get install python-lxml libxslt-dev
 ```
 
 1.6 Install libpq-dev.
 
 ```bash
 $ sudo apt-get install libpq-dev
 ```
 
2. Clone the web application repository.

  ```bash
  $ git clone git://github.com/freedomsponsors/www.freedomsponsors.org.git
  ```

3. Create the database/default user.
  
    ```bash
    $ sudo su postgres #run the next command as postgres
    $ createuser -d -SRP frespo # this will prompot you to create a password (just use frespo for now)
    $ createdb -O frespo frespo
    $ exit # go back to your normal user
    ```

4. Configure settings.

  ```bash
  $ cd djangoproject
  $ cp frespo/env_settings.py_template frespo/env_settings.py
  # edit the env_settings.py file - you must change the definitions shown below (values as used in this walkthrough):
  # ENVIRONMENT = 'DEV'
  # DATABASE_NAME = 'frespo'
  # DATABASE_USER = 'frespo'
  # DATABASE_PASS = 'frespo'  
  $ nano frespo/env_settings.py 
  ```
5. Create a virtualenv and install dependencies.

    ```bash
    $ python bootstrap
    ```
  If this command fails because of psycopg2, make sure you have installed postgresql-server-dev-all (mentioned on step 1)

  Then you can enter the virtualenv:

    ```bash
    $ source bin/activate
    ```
  To exit the virtualenv

    ```bash
    $ deactivate
    ```
  You'll need to be in the virtual environment to use `./manage.py ...` commands

6. Create database objects.

  ```bash  
  $ cd www.freedomsponsors.org/djangoproject
  $ ./manage.py syncdb --migrate --noinput
  ```

7. Run!

  ```bash
  $ ./manage.py runserver # and visit http://localhost:8000
  ```

If you find that the steps above are not actually accurate, please [open a new issue to let us know](https://github.com/freedomsponsors/www.freedomsponsors.org/issues/new)!

You should also verify if you can run all the automatic tests successfully.
Please see: [Running unit tests](http://github.com/freedomsponsors/www.freedomsponsors.org/blob/master/doc/testing.md)

If you can run FreedomSponsors on your machine, you should also be able to run unit tests.

# Running unit tests

Make sure you're in the virtual environment

```shell
www.freedomsponsors.org$ source bin/activate

```

run tests
```shell
www.freedomsponsors.org$ cd djangoproject
djangoproject$ ./manage.py test core gh_frespo_integration

```

This will run all tests in packages 'core' and 'gh_frespo_integration'

# Running splinter tests

There is another set of tests that need additional setup before they can be ran.
Those tests live in the 'core_splinter_tests' package, and they use [Splinter](https://github.com/cobrateam/splinter) (a wrapper around Selenium). 

Those tests assume that you have chrome (or chromium) installed, and that you have chromedriver in your path.
If you don't have that, skip to the next section and then come back here.

run tests
```shell
djangoproject$ ./manage.py test core core_splinter_tests

```

It should start some browser instances and run some tests (have fun watching :-))

# Setup chromedriver

If you don't have Chrome or Chromium, use this command to install chromium:

```
sudo apt-get install chromium-browser
```

There are some `.sh` files in the djangoproject folder that run some tests (`test_all.sh`, `test_splinter.sh`, `coverage.sh`).
Those files are only there because I tend to have a hard time remembering commands :P.

Download the latest version of chromedriver:
https://code.google.com/p/chromedriver/downloads/list

Get the appropriate version for your OS, and unzip it somewhere (I used `~/bin`)

make sure the folder where you unzipped it is in the system path, and that the file is executable:

```shell
export PATH=$PATH:~/bin
chmod +x ~/bin/chromedriver
```

ok, that's it.

# Generating coverage reports

Did you know we have public test coverage reports?
Here: http://freedomsponsors.github.io/www.freedomsponsors.org/coverage_html_report/

You can generate those reports locally, by running:

```
djangoproject$ ./coverage.sh
```

The reports will be at djangoproject/coverage_html_report/index.html

# Help out

If you find the instructions above are incorrect or incomplete, please feel free to add an issue (or a pull request)

It's possible to run a limited environment for FreedomSponsors on windows.
This environment can be used for front-end development (only)

To run a fully functional environment, the webapp needs more python dependencies and not all of them play nice with windows.
(You can try, though - maybe you`ll suceed where I failed :-))

Anyway the steps below will tell you how you can get a front-end dev environment up.

## 1. Install Python2
Get it: [win32](http://www.python.org/ftp/python/2.7.6/python-2.7.6.msi) or [amd64](http://www.python.org/ftp/python/2.7.6/python-2.7.6.amd64.msi)

## 2. Install SetupTools 

Get it: [win32](http://www.lfd.uci.edu/~gohlke/pythonlibs/dmemghrp/setuptools-1.3.2.win32-py2.7.exe) or [amd64](http://www.lfd.uci.edu/~gohlke/pythonlibs/dmemghrp/setuptools-1.3.2.win-amd64-py2.7.exe)

## 3. Install pip

Get it: [win32](http://www.lfd.uci.edu/~gohlke/pythonlibs/dmemghrp/pip-1.4.1.win32-py2.7.exe) or [amd64](http://www.lfd.uci.edu/~gohlke/pythonlibs/dmemghrp/pip-1.4.1.win-amd64-py2.7.exe)

## 4. Fix your PATH

You need to make sure you can run pip.
Windows has and environment variable named PATH that tells it where to search for executables on the command line.
After you install pip with the command above, pip.exe is placed at C:\Python27\Scripts, but that folder is not in the PATH.
You need to manually change PATH to include it. To edit your path:

* Open Windows Explorer and click "Computer" or "My Computer"

![Click properties](https://raw.github.com/freedomsponsors/www.freedomsponsors.org/master/doc/win_properties.png)

* Click on "advanced settings"

![Advanced Settings](https://raw.github.com/freedomsponsors/www.freedomsponsors.org/master/doc/win_config.png)

* Click on "environment variables"

![Click Environment Variables](https://raw.github.com/freedomsponsors/www.freedomsponsors.org/master/doc/win_click_envvars.png)

* Find the PATH variable and edit

![Click Environment Variables](https://raw.github.com/freedomsponsors/www.freedomsponsors.org/master/doc/win_path.png)

* Add ";C\Python27\Scripts" and close everything

![Click Environment Variables](https://raw.github.com/freedomsponsors/www.freedomsponsors.org/master/doc/win_path_edit.png)

Now open a new cmd prompt and type "pip" to see if cmd can find it. If not, review your steps!

## 5. Install virtualenv

On your prompt type

```
pip install virtualenv
```

## 6. Fork/clone this repo.

If you haven't already, fork and clone this repo.
Then open a cmd prompt and cd into it.

## 7. Create a virtualenv called ENV

```
C:\work\solo\www.freedomsponsors.org>virtualenv ENV
```

## 8. Activate your newly created virtualenv

Whenever you're working on the project you need to have this virtualenv activated.

```
C:\work\solo\www.freedomsponsors.org>ENV\Scripts\activate
(ENV) C:\work\solo\www.freedomsponsors.org>
```

Notice how the prompt changes to tell you that you're in the (ENV) virtualenv
To deactivate the virtualenv, simply type

```
deactivate
```

## 9. Install FreedomSponsors python dependencies (make sure you activate your virtualenv first!)

```
C:\work\solo\www.freedomsponsors.org>ENV\Scripts\activate
(ENV) C:\work\solo\www.freedomsponsors.org>pip install -r requirements-win.txt
```

## 10. Run the webapp

```
(ENV) C:\work\solo\www.freedomsponsors.org>cd djangoproject
(ENV) C:\work\solo\www.freedomsponsors.org\djangoproject>manage.py runserver --settings=frespo.settings_sandbox
```

Now point your browser to http://localhost:8000/sandbox
Sweet. :-)

You wanna know that:

* Templates (html) live in the `djangoproject\templates\core2` directory,
* Static files (css/js) live in `djangoprojects\statfiles`
* Routes are configured in `djangoproject\sandbox\urls.py`
* Fake data for the pages is set on `djangoproject\sandbox\views.py`

If you find any mistakes in the instructions above, don't hesitate to open an issue!


www.freedomsponsors.org 
=======================

[![Build Status](http://jenkins.freedomsponsors.org/buildStatus/icon?job=FreedomSponsors)](http://jenkins.freedomsponsors.org/job/FreedomSponsors/)


FreedomSponsors is a platform for supporting free/libre software projects through microcrowdfunding – that is, crowdfunding individual open source project’s issues.

http://freedomsponsors.org lets you help the Open Source projects you love by creating and collecting bounties.

How it works:

* 1) A sponsor places a bounty for an issue.
* 2) Other sponsors might places more bounties for the same issue.
* 3) A developer resolves the issue.
* 4) The sponsors verify the fix and pay the developer.

FreedomSponsors is a system strongly based on trust and reputation.

In this repo you'll find the full source code that powers FS (backend and frontend).

FreedomSponsors is a Python+Django application.

Follow our [blog](http://blog.freedomsponsors.org/).

## Helping out

Liked FreedomSponsors and want to help? Great! There are many ways you can help.

### Spread the word.

For crowdfunding to happen there must be a crowd in the first place.

The easiest way you can help FreedomSponsors is talk about it. 

Show it around at your workplace, [tweet](https://twitter.com/intent/tweet?url=http://www.freedomsponsors.org&text=Check%20this%20out!%20%23FreedomSponsors%20-%20crowdfunding%20Free%20Software,%20one%20issue%20at%20a%20time.) about it, share on [Facebook](https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.freedomsponsors.org) and [Google+](https://plus.google.com/share?url=http%3A%2F%2Fwww.freedomsponsors.org)

### Get in touch

Great things come up when people communicate and we'd love to hear from you. 
There are many ways you can get in touch:
- email: write to tonylampada@gmail.com
- meet the founder on [twitter](twitter.com/tonylampada), [facebook](https://www.facebook.com/tonylampada) or Skype ("tonylampada")
- join the [official mailing list](https://groups.google.com/forum/?hl=en#!forum/freedomsponsors)
- Follow our [facebook page](https://www.facebook.com/freedomsponsors)

### Give feedback

Want to report a bug or suggest a great new feature?

Have a killer idea to help us with marketing?

Besides the channels above, you can drop your thoughts in the [feedback section](http://www.freedomsponsors.org/core/feedback).
We love feedback, really :-)

### Code!

We have a lot of cool ideas to implement, and we got our hands full, so we'll take all the help we can get :-).

If you want to help out, check out our Waffle board below to see what's going on and the most urgent issues that we need help with. 

[![Stories in Ready](https://badge.waffle.io/freedomsponsors/www.freedomsponsors.org.png)](http://waffle.io/freedomsponsors/www.freedomsponsors.org)

## Useful resources

* [Setting up a development environment](http://github.com/freedomsponsors/www.freedomsponsors.org/blob/master/doc/setup.md)
* [Running unit tests](http://github.com/freedomsponsors/www.freedomsponsors.org/blob/master/doc/testing.md)
* [Test coverage report](http://freedomsponsors.github.com/www.freedomsponsors.org/coverage_html_report/)

## Licensing

This software is licensed under the [AFFERO GENERAL PUBLIC LICENSE](http://www.gnu.org/licenses/agpl-3.0.html)
. 

