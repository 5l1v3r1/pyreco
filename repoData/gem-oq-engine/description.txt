This package uses the quilt(1) patching tool. Please see

    /usr/share/doc/quilt/README.source

for more information.

Classical PSHA Area Source Demo

This calculation demo exercises the Classical hazard calculator with a trivial
source model logic tree, containing a single model with a single area source.

In this example, we first compute hazard curves for all IMTs and sites of
interest (see below). From each curve set we interpolate hazard maps at 10% and
2% probabilities of exceedance. Finally, we also extract Uniform Hazard Spectra
(UHS) for the same probabilities from the PGA and SA hazard maps.

Expected runtime: ~2 minutes
Number of sites: 2112
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGV, PGA, SA(0.025), SA(0.05), SA(0.1), SA(0.2), SA(0.5), SA(1.0), SA(2.0)
Outputs: Hazard Curves, Hazard Maps, UHS

Classical PSHA Characteristic Fault Source Demo, Case 1

This calculation demo exercises the Classical hazard calculator with a trivial
source model logic tree, containing a single model with a single characteristic
source. The geometry of this source is represented by two contiguous planar
surfaces.

In this example, we first compute hazard curves for all IMTs and sites of
interest (see below). From each curve set we interpolate hazard maps at 10% and
2% probabilities of exceedance. Finally, we also extract Uniform Hazard Spectra
(UHS) for the same probabilities from the PGA and SA hazard maps.

Expected runtime: <1 minute
Number of sites: 9213
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGV, PGA, SA(0.025), SA(0.05), SA(0.1), SA(0.2), SA(0.5), SA(1.0), SA(2.0)
Outputs: Hazard Curves, Hazard Maps, UHS

Classical PSHA Characteristic Fault Source Demo, Case 2

This calculation demo exercises the Classical hazard calculator with a trivial
source model logic tree, containing a single model with a single characteristic
source. The geometry of this source is represented by a simple 2-dimensional
fault trace.

In this example, we first compute hazard curves for all IMTs and sites of
interest (see below). From each curve set we interpolate hazard maps at 10% and
2% probabilities of exceedance. Finally, we also extract Uniform Hazard Spectra
(UHS) for the same probabilities from the PGA and SA hazard maps.

Expected runtime: <1 minute
Number of sites: 8836
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGV, PGA, SA(0.025), SA(0.05), SA(0.1), SA(0.2), SA(0.5), SA(1.0), SA(2.0)
Outputs: Hazard Curves, Hazard Maps, UHS

Classical PSHA Characteristic Fault Source Demo, Case 3

This calculation demo exercises the Classical hazard calculator with a trivial
source model logic tree, containing a single model with a single characteristic
source. The geometry of this source is represented by as a "complex" fault,
consisting of three edges: a top edge, a bottom edge, and an intermediate edge.
Each edge is defined as a 3-dimensional linestring.

In this example, we first compute hazard curves for all IMTs and sites of
interest (see below). From each curve set we interpolate hazard maps at 10% and
2% probabilities of exceedance. Finally, we also extract Uniform Hazard Spectra
(UHS) for the same probabilities from the PGA and SA hazard maps.

Expected runtime: <1 minute
Number of sites: 9213
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGV, PGA, SA(0.025), SA(0.05), SA(0.1), SA(0.2), SA(0.5), SA(1.0), SA(2.0)
Outputs: Hazard Curves, Hazard Maps, UHS

Classical PSHA Complex Fault Source Demo

This calculation demo exercises the Classical hazard calculator with a trivial
source model logic tree, containing a single model with a single complex fault
source.

In this example, we first compute hazard curves for all IMTs and sites of
interest (see below). From each curve set we interpolate hazard maps at 10% and
2% probabilities of exceedance. Finally, we also extract Uniform Hazard Spectra
(UHS) for the same probabilities from the PGA and SA hazard maps.

Expected runtime: ~2 minutes
Number of sites: 1452
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGV, PGA, SA(0.025), SA(0.05), SA(0.1), SA(0.2), SA(0.5), SA(1.0), SA(2.0)
Outputs: Hazard Curves, Hazard Maps, UHS

Hazard Disaggregation Demo

This calculation demo exercises the Disaggregation hazard with non-trivial
logic trees. The source model logic tree only contains a single source model,
which in turn contains two sources: an area source and a simple fault source.
Each source is defined with a different tectonic region type ("Stable
Continental Crust" and "Active Shallow Crust", respectively), and thus require
separate GMPEs to be defined for each region type. In GMPE logic tree for this
example, "ChiouYoungs2008" is specified for sources in the "Active Shallow
Crust" tectonic region, while "ToroEtAl2002" is specified for "Stable
Continental Crust" sources.

In this demo, we first calculate a hazard curve for the site of interest. We
then disaggregate in order to quantify the contribution to the level of hazard
at a 10% probability of exceedance, in terms of longitude, latitude, magnitude,
distance, epsilon, and tectonic region type. From this information we construct
a matrix of 6 dimensions, from which we extract multiple "sub-matrices". For a
more detailed description of disaggregation output, see
http://docs.openquake.org/oq-engine/calculators/hazard.html#disaggregation-matrices.

Expected runtime: <1 minute
Number of sites: 1
Number of logic tree realizations: 1
GMPEs: ChiouYoungs2008, ToroEtAl2002
IMTs: PGA
Outputs: Hazard Curves, Disaggregation Matrices

Event Based PSHA Area Source Demo

This calculation demo exercises the Event-Based hazard calculator with a
trivial source model logic tree, containing a single model with a single area
source. This source adds complexity to the calculation due to the presence of
a nodal plane distribution containing 12 uncertainties.

In this example, we first simulate 10 Stochastic Event Sets, each containing a
random set of ruptures. (Note: This random element is controlled by the
`random_seed` in the job.ini.) We then compute a Ground Motion Field for each
rupture.

Once GMFs are computed, we can produce a hazard curve for the site of interest
by aggregating all of the ground motion values. This method of hazard curve
computation is considered to be equivalent to the Classical PSHA approach.

Finally, this demo also extracts a hazard map at a 10% probability of exceedance.

Expected runtime: ~5 minutes
Number of sites: 1
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGA
Outputs: Stochastic Event Sets, Ground Motion Fields, Hazard Curves, Hazard Maps

Classical PSHA Logic Tree Demo, Case 1

This calculation demo exercises the Classical hazard calculator with a non-trivial
source model logic tree, containing two similar source models. Each source model
contains one area source and one simple fault source and they are nearly identical,
except that the area source geometry differs slightly.

This demo also specifies a non-trivial GMPE logic tree, containing two branching
levels and a total of four GMPEs (two for seismic sources in "Active Shallow Crust"
and two for "Stable Continental Crust").

In this example, we first compute hazard curves for each logic tree realization
for the single site of interest. We then compute the weighted mean of all eight
realizations and output this curve as a separate artifact. Similarly we also
compute 5%, 50%, and 95% weighted quantile aggregates.

Finally, we extract hazard maps and Uniform Hazard Spectra at a 10% probability
of exceedance.

Expected runtime: <1 minute
Number of sites: 1
Number of logic tree realizations: 8
GMPEs: BooreAtkinson2008, ChiouYoungs2008, ToroEtAl2002, Campbell2003
IMTs: PGA
Outputs: Hazard Curves, Mean Hazard Curves, Quantile Hazard Curves, Hazard Maps, UHS

Classical PSHA Logic Tree Demo, Case 2

This calculation demo exercises the Classical hazard calculator with a non-trivial
source model logic tree, containing a single source model with absolute uncertainties
on Gutenberg-Richter a and b values and maximum magnitude.

This demo also specifies a non-trivial GMPE logic tree, containing two branching
levels and a total of four GMPEs (two for seismic sources in "Active Shallow Crust"
and two for "Stable Continental Crust").

In this example, we first compute hazard curves for each logic tree realization
for the single site of interest. We then compute the weighted mean of all 324
realizations and output this curve as a separate artifact. Similarly we also
compute 5%, 50%, and 95% weighted quantile aggregates.

Finally, we extract hazard maps and Uniform Hazard Spectra at 10% and 2% probabilities
of exceedance.

Expected runtime: ~20 minutes
Number of sites: 1
Number of logic tree realizations: 324
GMPEs: BooreAtkinson2008, ChiouYoungs2008, ToroEtAl2002, Campbell2003
IMTs: PGA
Outputs: Hazard Curves, Mean Hazard Curves, Quantile Hazard Curves, Hazard Maps, UHS

Classical PSHA Logic Tree Demo, Case 3

This calculation demo exercises the Classical hazard calculator with a non-trivial
source model logic tree, containing a single source model with relative uncertainties
on Gutenberg-Richter b values and maximum magnitude.

This demo also specifies a non-trivial GMPE logic tree, containing two branching
levels and a total of four GMPEs (two for seismic sources in "Active Shallow Crust"
and two for "Stable Continental Crust").

In this example, we first compute hazard curves for each logic tree realization
for the single site of interest. We then compute 5%, 50%, and 95% weighted quantile
aggregates of all 36 realizations.

Finally, we extract hazard maps at 10% and 2% probabilities of exceedance.

Expected runtime: ~3 minutes
Number of sites: 1
Number of logic tree realizations: 36
GMPEs: BooreAtkinson2008, ChiouYoungs2008, ToroEtAl2002, Campbell2003
IMTs: PGA
Outputs: Hazard Curves, Quantile Hazard Curves, Hazard Maps

Classical PSHA Point Source Demo

This calculation demo exercises the Classical hazard calculator with a trivial
source model logic tree, containing a single model with a single point source.

In this example, we first compute hazard curves for all IMTs and sites of
interest (see below). From each curve set we interpolate hazard maps at 10% and
2% probabilities of exceedance. Finally, we also extract Uniform Hazard Spectra
(UHS) for the same probabilities from the PGA and SA hazard maps.

Expected runtime: ~1 minute
Number of sites: 1936
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGV, PGA, SA(0.025), SA(0.05), SA(0.1), SA(0.2), SA(0.5), SA(1.0), SA(2.0)
Outputs: Hazard Curves, Hazard Maps, UHS

Scenario Hazard Simple Fault Rupture Demo

This calculation demo exercises the Scenario hazard calculator by simlulating
a single rupture originating from a simple fault source.

In this example, we compute 10 sets of Ground Motion Fields for each IMT. Each
GMF covers the entire geographical area of interest (all 121 sites).

Expected runtime: <1 minute
Number of sites: 121
GMPEs: BooreAtkinson2008
IMTs: PGA, SA(0.1)
Outputs: Ground Motion Fields

Scenario Hazard Complex Fault Rupture Demo

This calculation demo exercises the Scenario hazard calculator by simlulating
a single rupture originating from a complex fault source.

In this example, we compute 10 sets of Ground Motion Fields for each IMT. Each
GMF covers the entire geographical area of interest (all 352 sites).

Expected runtime: <1 minute
Number of sites: 352
GMPEs: BooreAtkinson2008
IMTs: PGA, SA(0.1)
Outputs: Ground Motion Fields

Classical PSHA Simple Fault Source Demo

This calculation demo exercises the Classical hazard calculator with a trivial
source model logic tree, containing a single model with a single simple fault
source.

In this example, we first compute hazard curves for all IMTs and sites of
interest (see below). From each curve set we interpolate hazard maps at 10% and
2% probabilities of exceedance. Finally, we also extract Uniform Hazard Spectra
(UHS) for the same probabilities from the PGA and SA hazard maps.

Expected runtime: ~3 minutes
Number of sites: 1369
Number of logic tree realizations: 1
GMPEs: BooreAtkinson2008
IMTs: PGV, PGA, SA(0.025), SA(0.05), SA(0.1), SA(0.2), SA(0.5), SA(1.0), SA(2.0)
Outputs: Hazard Curves, Hazard Maps, UHS

Classical PSHA-based Risk Demo

The demo consists of two parts: hazard and risk. The hazard and risk
calculations are defined in separate .ini files and were designed to be
run together to form a complete end-to-end demonstration of the workflow.

--Hazard--
Expected runtime: ~2 minutes
Outputs: Hazard Curves

--Risk--
Expected runtime: <1 minute
Outputs: Loss Curves
Classical PSHA-based Benefit Cost Ratio Risk Demo

The demo consists of two parts: hazard and risk. The hazard and risk
calculations are defined in separate .ini files and were designed to be
run together to form a complete end-to-end demonstration of the workflow.

--Hazard--
Expected runtime: <2 minutes
Outputs: Hazard Curves

--Risk--
Expected runtime: <1 minute
Outputs: Benefit Cost Ratio Maps
Probabilistic Event-based Risk Demo

The demo consists of two parts: hazard and risk. The hazard and risk
calculations are defined in separate .ini files and were designed to be
run together to form a complete end-to-end demonstration of the workflow.

--Hazard--
Expected runtime: ~4 minutes
Outputs: Ground Motion Fields, Stochastic Event Sets

--Risk--
Expected runtime: ~3 minutes
Outputs: Loss Curves, Aggregate Loss Curves, Event Loss Tables, Loss Maps

Scenario Damage Risk Demo

The demo consists of two parts: hazard and risk. The hazard and risk
calculations are defined in separate .ini files and were designed to be
run together to form a complete end-to-end demonstration of the workflow.

--Hazard--
Expected runtime: <1 minute
Outputs: Ground Motion Fields

--Risk--
Expected runtime: ~7 minutes
Outputs: Damage Distribution per Asset,Damage Distribution per Taxonomy, Collapse Maps, Total Damage Distribution
Scenario Risk Demo

The demo consists of two parts: hazard and risk. The hazard and risk
calculations are defined in separate .ini files and were designed to be
run together to form a complete end-to-end demonstration of the workflow.

--Hazard--
Expected runtime: ~2 minutes
Outputs: Ground Motion Fields

--Risk--
Expected runtime: ~3 minutes
Outputs: Loss Maps, Aggregate Losses
# OpenQuake Engine Server REST API

## Introduction

oq-engine-server provides a series of REST API methods for running calculations, checking calculation status, and browsing and downloading results.

All responses are JSON, unless otherwise noted.

#### GET /v1/calc/hazard

List a summary of hazard calculations. The [url](#get-v1calchazardcalc_id) in each item of the response can be followed to retrieve complete calculation details.

Parameters: None

Response:

    [{"description": "Hazard Calculation for end-to-end hazard+risk",
      "id": 1,
      "status": "executing",
      "url": "http://localhost:8000/v1/calc/hazard/1"},
     {"description": "Hazard Calculation for end-to-end hazard+risk",
      "id": 2,
      "status": "complete",
      "url": "http://localhost:8000/v1/calc/hazard/2"},
     {"description": "Hazard Calculation for end-to-end hazard+risk",
      "id": 3,
      "status": "complete",
      "url": "http://localhost:8000/v1/calc/hazard/3"}]

#### GET /v1/calc/risk

List a summary of risk calculations. The [url](#get-v1calcriskcalc_id) in each item of the response can be followed to retrieve complete calculation details.

Parameters: None

Response:

    [{"description": "Risk Calculation for end-to-end hazard+risk",
      "id": 1,
      "status": "complete",
      "url": "http://localhost:8000/v1/calc/risk/1"},
     {"description": "Risk Calculation for end-to-end hazard+risk",
      "id": 2,
      "status": "complete",
      "url": "http://localhost:8000/v1/calc/risk/2"}]

#### GET /v1/calc/hazard/:calc_id

Get hazard calculation status and parameter summary for the given `calc_id`.

Parameters: None

Response:

    {"area_source_discretization": 10.0,
     "calculation_mode": "classical",
     "description": "Hazard Calculation for end-to-end hazard+risk",
     "id": 2,
     "intensity_measure_types_and_levels": {"SA(0.1)": [0.01, 0.04, 0.07, 0.1, 0.13, 0.16, 0.19, 0.22, 0.25, 0.28, 0.31, 0.34, 0.37, 0.4, 0.43, 0.46, 0.49, 0.52, 0.55, 0.58, 0.61, 0.64, 0.67, 0.7, 0.73, 0.77, 0.8, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.01, 1.04, 1.07, 1.1, 1.13, 1.16, 1.19, 1.22, 1.25, 1.28, 1.31, 1.34, 1.37, 1.4, 1.43, 1.46, 1.5]},
     "investigation_time": 50.0,
     "maximum_distance": 300.0,
     "mean_hazard_curves": true,
     "no_progress_timeout": 3600,
     "number_of_logic_tree_samples": 0,
     "poes": [0.1, 0.2],
     "quantile_hazard_curves": [0.15, 0.5, 0.85],
     "random_seed": 1024,
     "reference_depth_to_1pt0km_per_sec": 50.0,
     "reference_depth_to_2pt5km_per_sec": 2.5,
     "reference_vs30_type": "measured",
     "reference_vs30_value": 800.0,
     "rupture_mesh_spacing": 20.0,
     "sites": {"coordinates": [[-78.182, 15.615]], "type": "MultiPoint"},
     "status": "complete",
     "truncation_level": 4.0,
     "uniform_hazard_spectra": false,
     "width_of_mfd_bin": 0.2}

#### GET /v1/calc/risk/:calc_id

Get risk calculation status and parameter summary for the given `calc_id`.

Parameters: None

Response:

    {"hazard_calculation": 3,
     "status": "complete",
     "quantile_loss_curves": [0.1, 0.9],
     "maximum_distance": 100.0,
     "description": "Risk Calculation for end-to-end hazard+risk",
     "insured_losses": false,
     "lrem_steps_per_interval": 2,
     "loss_curve_resolution": 50,
     "poes_disagg": [0.2],
     "calculation_mode": "classical",
     "no_progress_timeout": 3600,
     "conditional_loss_poes": [0.1],
     "region_constraint": {"type": "Polygon", "coordinates": [[[-78.181, 15.614], [-78.153, 15.614], [-78.153, 15.566], [-78.181, 15.566], [-78.181, 15.614]]]},
     "asset_correlation": 0.0,
     "id": 2}

#### GET /v1/calc/hazard/:calc_id/results

List a summary of results for the given `calc_id`. The [url](#get-v1calchazardresultresult_id) in each response item can be followed to retrieve the full result artifact.

Parameters: None

Response:

    [{"url": "http://localhost:8000/v1/calc/hazard/result/12", "type": "hazard_curve", "name": "hc-rlz-22", "id": 12},
     {"url": "http://localhost:8000/v1/calc/hazard/result/14", "type": "hazard_curve", "name": "hc-rlz-23", "id": 14},
     {"url": "http://localhost:8000/v1/calc/hazard/result/16", "type": "hazard_curve", "name": "hc-rlz-24", "id": 16},
     {"url": "http://localhost:8000/v1/calc/hazard/result/18", "type": "hazard_curve", "name": "hc-rlz-25", "id": 18}]

#### GET /v1/calc/risk/:calc_id/results

List a summary of results for the given `calc_id`. The [url](#get-v1calcriskresultresult_id) in each response item can be followed to retrieve the full result artifact.

Parameters: None

Response:

    [{"url": "http://localhost:8000/v1/calc/risk/result/138", "type": "loss_curve", "name": "mean loss curves. type=structural", "id": 138},
     {"url": "http://localhost:8000/v1/calc/risk/result/139", "type": "loss_curve", "name": "quantile(0.1) loss curves. type=structural", "id": 139},
     {"url": "http://localhost:8000/v1/calc/risk/result/140", "type": "loss_curve", "name": "quantile(0.9) loss curves. type=structural", "id": 140},
     {"url": "http://localhost:8000/v1/calc/risk/result/141", "type": "loss_map", "name": "mean loss map type=structural poe=0.1000", "id": 141},
     {"url": "http://localhost:8000/v1/calc/risk/result/142", "type": "loss_map", "name": "quantile(0.1000) loss map type=structural poe=0.1000", "id": 142}]

#### GET /v1/calc/hazard/result/:result_id

Get the full content of a hazard calculation result for the given `result_id`.

Parameters:

    * export_type: the desired format for the result (`xml`, `geojson`, etc.)

Response:

The requested result as a blob of text. If the desired `export_type` is not supported, an HTTP 404 error is returned.

#### GET /v1/calc/risk/result/:result_id

Get the full content of a risk calculation result for the given `result_id`.

Parameters:

    * export_type: the desired format for the result (`xml`, `geojson`, etc.)

Response:

The requested result as a blob of text. If the desired `export_type` is not supported, an HTTP 404 error is returned.

#### POST /v1/calc/hazard/run

Run a new hazard calculation with the specified job config file, input models, and other parameters.

Files:

    * job_config: an oq-engine job config INI-style file
    * input_model_1 - input_model_N: any number (including zero) of input model files

Parameters:

    * migration_callback_url: optional; post to this URL to initiate post-calculation migration of results; see documentation for the oq-platform Icebox (TODO: link) for more information
    * foreign_calculation_id: optional, required with migration_callback_url; specifies the id of the calculation on the icebox side

Response: Redirects to [/v1/calc/hazard/:calc_id](#get-v1calchazardcalc_id), where `calc_id` is the ID of the newly created calculation.

#### POST /v1/calc/risk/run

Run a new risk calculation with the specified job config file, input models, and other parameters.

Files:

    * job_config: an oq-engine job config INI-style file
    * input_model_1 - input_model_N: any number (including zero) of input model files

Parameters:

    * migration_callback_url: optional; post to this URL to initiate post-calculation migration of results; see documentation for the oq-platform Icebox (TODO: link) for more information
    * foreign_calculation_id: optional, required with migration_callback_url; specifies the id of the calculation on the icebox side
    * hazard_calc: the hazard calculation ID upon which to run this risk calculation; specify this or hazard_result
    * hazard_result: the hazard results ID upon which to run this risk calculation; specify this or hazard_calc

Response: Redirects to [/v1/calc/risk/:calc_id](#get-v1calcriskcalc_id), where `calc_id` is the ID of the newly created calculation.

Case 1
Vulnerability function where the uncertainty of the loss ratios follows a lognormal distribution

Case 2
Vulnerability function where the uncertainty of the loss ratios follows a beta distribution
Case 1
Vulnerability function where the uncertainty of the loss ratios follows a lognormal distribution

OpenQuake Engine
================

OpenQuake is an open source application that allows users to
compute seismic hazard and seismic risk of earthquakes on a global scale.

Please note: the `/usr/bin/openquake` script requires a `celeryconfig.py`
file in the `PYTHONPATH`.  Please make sure this is the case and that your
celeryconfig.py file works with your python-celery setup.

Feel free to copy `/usr/openquake/engine/celeryconfig.py` and revise it as needed.

### Running Tests ###

#### Short-running test suite ####

These tests should complete in about 5 minutes:

    $ nosetests --with-doctest tests/

#### Shorter-running test suite ####

These tests should complete in about 1 minute:

    $ nosetests --with-doctest -a '!slow' tests/

#### Full test suite ####

These tests including many long-running QA tests and can take ~1 hour to run:

    $ nosetests --with-doctest


OpenQuake Engine Server
=======================

### Running Tests ###

Here are some examples for how to run tests. Both methods must be run from the
`openquake/server/` directory.

Using Django's manage.py:

    $ python manage.py test --settings=test_db_settings

    Note: You need to install Django South for this to work.

Using nosetests:

    $ (export DJANGO_SETTINGS_MODULE="openquake.server.settings"; nosetests -v --with-coverage --cover-package=openquake.server)


