__FILENAME__ = conf
# -*- coding: utf-8 -*-
#
# wikipedia documentation build configuration file, created by
# sphinx-quickstart on Thu Aug 22 11:23:34 2013.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys, os

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('../..'))
sys.path.append(os.path.abspath('_themes'))

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.coverage', 'sphinx.ext.ifconfig']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'wikipedia'
copyright = u'2013, Jonathan Goldsmith'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '0.9'
# The full version, including alpha/beta/rc tags.
release = '0.9'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'flask_small'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = ['_themes']

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'wikipediadoc'


# -- Options for LaTeX output --------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    # 'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
    ('index', 'wikipedia.tex', u'wikipedia Documentation',
     u'Jonathan Goldsmith', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'wikipedia', u'wikipedia Documentation',
     [u'Jonathan Goldsmith'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output ------------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    ('index', 'wikipedia', u'wikipedia Documentation',
     u'Jonathan Goldsmith', 'wikipedia', 'One line description of project.',
     'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False

########NEW FILE########
__FILENAME__ = geosearch_test
# -*- coding: utf-8 -*-
import unittest

from collections import defaultdict
from decimal import Decimal

from wikipedia import wikipedia
from request_mock_data import mock_data


# mock out _wiki_request
class _wiki_request(object):

  calls = defaultdict(int)

  @classmethod
  def __call__(cls, params):
    cls.calls[params.__str__()] += 1
    return mock_data["_wiki_request calls"][tuple(sorted(params.items()))]

wikipedia._wiki_request = _wiki_request()


class TestSearchLoc(unittest.TestCase):
  """Test the functionality of wikipedia.geosearch."""

  def test_geosearch(self):
    """Test parsing a Wikipedia location request result."""
    self.assertEqual(
      wikipedia.geosearch(Decimal('40.67693'), Decimal('117.23193')),
      mock_data['data']["great_wall_of_china.geo_seach"]
    )

  def test_geosearch_with_radius(self):
    """Test parsing a Wikipedia location request result."""
    self.assertEqual(wikipedia.geosearch(
      Decimal('40.67693'), Decimal('117.23193'), radius=10000),
      mock_data['data']["great_wall_of_china.geo_seach_with_radius"]
    )

  def test_geosearch_with_existing_title(self):
    """Test parsing a Wikipedia location request result."""
    self.assertEqual(wikipedia.geosearch(
      Decimal('40.67693'), Decimal('117.23193'), title='Great Wall of China'),
      mock_data['data']["great_wall_of_china.geo_seach_with_existing_article_name"]
    )

  def test_geosearch_with_non_existing_title(self):
    self.assertEqual(wikipedia.geosearch(
      Decimal('40.67693'), Decimal('117.23193'), title='Test'),
      mock_data['data']["great_wall_of_china.geo_seach_with_non_existing_article_name"]
    )
########NEW FILE########
__FILENAME__ = lang_test
# -*- coding: utf-8 -*-
import unittest

from wikipedia import wikipedia


class TestLang(unittest.TestCase):
  """Test the ability for wikipedia to change the language of the API being accessed."""

  def test_lang(self):
    wikipedia.set_lang("fr")
    self.assertEqual(wikipedia.API_URL, 'http://fr.wikipedia.org/w/api.php')

########NEW FILE########
__FILENAME__ = page_test
# -*- coding: utf-8 -*-
from decimal import Decimal
import unittest

from wikipedia import wikipedia
from request_mock_data import mock_data


# mock out _wiki_request
def _wiki_request(params):
  return mock_data["_wiki_request calls"][tuple(sorted(params.items()))]
wikipedia._wiki_request = _wiki_request


class TestPageSetUp(unittest.TestCase):
  """Test the functionality of wikipedia.page's __init__ and load functions."""

  def test_missing(self):
    """Test that page raises a PageError for a nonexistant page."""
    # Callicarpa?
    purpleberry = lambda: wikipedia.page("purpleberry", auto_suggest=False)
    self.assertRaises(wikipedia.PageError, purpleberry)

  def test_redirect_true(self):
    """Test that a page successfully redirects a query."""
    # no error should be raised if redirect is test_redirect_true
    mp = wikipedia.page("Menlo Park, New Jersey")

    self.assertEqual(mp.title, "Edison, New Jersey")
    self.assertEqual(mp.url, "http://en.wikipedia.org/wiki/Edison,_New_Jersey")

  def test_redirect_false(self):
    """Test that page raises an error on a redirect when redirect == False."""
    mp = lambda: wikipedia.page("Menlo Park, New Jersey", auto_suggest=False, redirect=False)
    self.assertRaises(wikipedia.RedirectError, mp)

  def test_disambiguate(self):
    """Test that page raises an error when a disambiguation page is reached."""
    try:
      ram = wikipedia.page("Dodge Ram (disambiguation)", auto_suggest=False, redirect=False)
      error_raised = False
    except wikipedia.DisambiguationError as e:
      error_raised = True
      options = e.options

    self.assertTrue(error_raised)
    self.assertEqual(options, [u'Dodge Ramcharger', u'Dodge Ram Van', u'Dodge Mini Ram', u'Dodge Caravan C/V', u'Dodge Caravan C/V', u'Ram C/V', u'Dodge Ram 50', u'Dodge D-Series', u'Dodge Rampage', u'Ram (brand)'])

  def test_auto_suggest(self):
    """Test that auto_suggest properly corrects a typo."""
    # yum, butter.
    butterfly = wikipedia.page("butteryfly")

    self.assertEqual(butterfly.title, "Butterfly")
    self.assertEqual(butterfly.url, "http://en.wikipedia.org/wiki/Butterfly")


class TestPage(unittest.TestCase):
  """Test the functionality of the rest of wikipedia.page."""

  def setUp(self):
    # shortest wikipedia articles with images and sections
    self.celtuce = wikipedia.page("Celtuce")
    self.cyclone = wikipedia.page("Tropical Depression Ten (2005)")
    self.great_wall_of_china = wikipedia.page("Great Wall of China")

  def test_from_page_id(self):
    """Test loading from a page id"""
    self.assertEqual(self.celtuce, wikipedia.page(pageid=1868108))

  def test_title(self):
    """Test the title."""
    self.assertEqual(self.celtuce.title, "Celtuce")
    self.assertEqual(self.cyclone.title, "Tropical Depression Ten (2005)")

  def test_url(self):
    """Test the url."""
    self.assertEqual(self.celtuce.url, "http://en.wikipedia.org/wiki/Celtuce")
    self.assertEqual(self.cyclone.url, "http://en.wikipedia.org/wiki/Tropical_Depression_Ten_(2005)")

  def test_content(self):
    """Test the plain text content."""
    self.assertEqual(self.celtuce.content, mock_data['data']["celtuce.content"])
    self.assertEqual(self.cyclone.content, mock_data['data']["cyclone.content"])

  def test_revision_id(self):
    """Test the revision id."""
    self.assertEqual(self.celtuce.revision_id, mock_data['data']["celtuce.revid"])
    self.assertEqual(self.cyclone.revision_id, mock_data['data']["cyclone.revid"])

  def test_parent_id(self):
    """Test the parent id."""
    self.assertEqual(self.celtuce.parent_id, mock_data['data']["celtuce.parentid"])
    self.assertEqual(self.cyclone.parent_id, mock_data['data']["cyclone.parentid"])


  def test_summary(self):
    """Test the summary."""
    self.assertEqual(self.celtuce.summary, mock_data['data']["celtuce.summary"])
    self.assertEqual(self.cyclone.summary, mock_data['data']["cyclone.summary"])

  def test_images(self):
    """Test the list of image URLs."""
    self.assertEqual(sorted(self.celtuce.images), mock_data['data']["celtuce.images"])
    self.assertEqual(sorted(self.cyclone.images), mock_data['data']["cyclone.images"])

  def test_references(self):
    """Test the list of reference URLs."""
    self.assertEqual(self.celtuce.references, mock_data['data']["celtuce.references"])
    self.assertEqual(self.cyclone.references, mock_data['data']["cyclone.references"])

  def test_links(self):
    """Test the list of titles of links to Wikipedia pages."""
    self.assertEqual(self.celtuce.links, mock_data['data']["celtuce.links"])
    self.assertEqual(self.cyclone.links, mock_data['data']["cyclone.links"])

  def test_html(self):
    """Test the full HTML method."""
    self.assertEqual(self.celtuce.html(), mock_data['data']["celtuce.html"])

  def test_sections(self):
    """Test the list of section titles."""
    self.assertEqual(sorted(self.cyclone.sections), mock_data['data']["cyclone.sections"])

  def test_section(self):
    """Test text content of a single section."""
    self.assertEqual(self.cyclone.section("Impact"), mock_data['data']["cyclone.section.impact"])
    self.assertEqual(self.cyclone.section("History"), None)

  def test_coordinates(self):
    """Test geo coordinates of a page"""
    lat, lon = self.great_wall_of_china.coordinates
    self.assertEqual(str(lat.quantize(Decimal('1.000'))), mock_data['data']['great_wall_of_china.coordinates.lat'])
    self.assertEqual(str(lon.quantize(Decimal('1.000'))), mock_data['data']['great_wall_of_china.coordinates.lon'])

########NEW FILE########
__FILENAME__ = request_mock_data
# -*- coding: utf-8 -*-
from __future__ import unicode_literals

mock_data = {
  "_wiki_request calls": {

    (('explaintext', ''), ('prop', 'extracts|revisions'), ('rvprop', 'ids'), ('titles', 'Celtuce')):
    {'query': {'pages': {'1868108': {'extract': 'Celtuce (Lactuca sativa var. asparagina, augustana, or angustata), also called stem lettuce, celery lettuce, asparagus lettuce, or Chinese lettuce, IPA (UK,US) /\u02c8s\u025blt.\u0259s/, is a cultivar of lettuce grown primarily for its thick stem, used as a vegetable. It is especially popular in China, and is called wosun (Chinese: \u83b4\u7b0b; pinyin: w\u014ds\u016dn) or woju (Chinese: \u83b4\u82e3; pinyin: w\u014dj\xf9) (although the latter name may also be used to mean lettuce in general).\n\nThe stem is usually harvested at a length of around 15\u201320 cm and a diameter of around 3\u20134 cm. It is crisp, moist, and mildly flavored, and typically prepared by slicing and then stir frying with more strongly flavored ingredients.\n\nDown: Photos of the celtuce, chinese lettuce or "Wosun" taken in the province of Girona (Catalonia, Spain, Europe) in June 2013\nCeltuce Nutritional content', 'ns': 0, 'pageid': 1868108, 'revisions': [{'revid': 575687826, 'parentid': 574302108}], 'title': 'Celtuce'}}}},

    (('explaintext', ''), ('prop', 'extracts|revisions'), ('rvprop', 'ids'), ('titles', 'Tropical Depression Ten (2005)')):
    {'query': {'pages': {'21196082': {'extract': 'Tropical Depression Ten was the tenth tropical cyclone of the record-breaking 2005 Atlantic hurricane season. It formed on August 13 from a tropical wave that emerged from the west coast of Africa on August 8. As a result of strong wind shear, the depression remained weak and did not strengthen beyond tropical depression status. The cyclone degenerated on August 14, although its remnants partially contributed to the formation of Tropical Depression Twelve, which eventually intensified into Hurricane Katrina. The cyclone had no effect on land, and did not directly result in any fatalities or damage.\n\n\n== Meteorological history ==\n\nOn August 8, a tropical wave emerged from the west coast of Africa and entered the Atlantic Ocean. Tracking towards the west, the depression began to exhibit signs of convective organization on August 11. The system continued to develop, and it is estimated that Tropical Depression Ten formed at 1200 UTC on August 13. At the time, it was located about 1,600 miles (2,600 km) east of Barbados. Upon its designation, the depression consisted of a large area of thunderstorm activity, with curved banding features and expanding outflow. However, the environmental conditions were predicted to quickly become unfavorable. The depression moved erratically and slowly towards the west, and wind shear inhibited any significant intensification. Late on August 13, it was "beginning to look like Irene-junior as it undergoes southwesterly mid-level shear beneath the otherwise favorable upper-level outflow pattern". The wind shear was expected to relent within 48 hours, prompting some forecast models to suggest the depression would eventually attain hurricane status.\nBy early August 14, the shear had substantially disrupted the storm, leaving the low-level center of circulation exposed from the area of convection, which was also deteriorating. After meandering, the storm began to move westward. Forecasters expected it to resume a northwestward track as high pressure to the south of Bermuda was forecasted to weaken and another high was predicted to form southwest of the Azores. By 1800 UTC on August 14, the strong shear had further weakened the storm, and it no longer met the criteria for a tropical cyclone. It degenerated into a remnant low, and the National Hurricane Center issued their final advisory on the cyclone. Moving westward, it occasionally produced bursts of convective activity, before dissipating on August 18.\nTropical Depression Twelve formed over the southeastern Bahamas at 2100 UTC on August 23, partially from the remains of Tropical Depression Ten. While the normal standards for numbering tropical depressions in the Atlantic stipulate that the initial designation be retained when a depression regenerates, satellite imagery indicated that a second tropical wave had combined with Tropical Depression Ten north of Puerto Rico to form a new, more complex weather system, which was then designated as Tropical Depression Twelve. In a re-analysis, it was found that the low-level circulation of Tropical Depression Ten had completely detached and dissipated; only the remnant mid-level circulation moved on and merged with the second tropical wave. As a result, the criteria for keeping the same name and identity were not met. Tropical Depression Twelve later became Hurricane Katrina.\n\n\n== Impact ==\nBecause Tropical Depression Ten never approached land as a tropical cyclone, no tropical cyclone watches and warnings were issued for any land masses. No effects, damages, or fatalities were reported, and no ships reported tropical storm-force winds in association with the depression. The system did not attain tropical storm status; as such, it was not given a name by the National Hurricane Center. The storm partially contributed to the formation of Hurricane Katrina, which became a Category 5 hurricane on the Saffir-Simpson Hurricane Scale and made landfall in Louisiana, causing catastrophic damage. Katrina was the costliest hurricane, and one of the five deadliest, in the history of the United States.\n\n\n== See also ==\n\nMeteorological history of Hurricane Katrina\nList of storms in the 2005 Atlantic hurricane season\nTimeline of the 2005 Atlantic hurricane season\n\n\n== References ==\n\n\n== External links ==\n\nTropical Depression Ten Tropical Cyclone Report\nTropical Depression Ten advisory archive', 'ns': 0, 'pageid': 21196082, 'revisions': [{'revid': 572715399, 'parentid': 539367750}], 'title': 'Tropical Depression Ten (2005)'}}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'purpleberry')):
    {'query': {'normalized': [{'to': 'Purpleberry', 'from': 'purpleberry'}], 'pages': {'-1': {'missing': '', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Purpleberry&action=edit', 'title': 'Purpleberry', 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Purpleberry'}}}},

    (('limit', 1), ('list', 'search'), ('srinfo', 'suggestion'), ('srlimit', 1), ('srprop', ''), ('srsearch', 'Menlo Park, New Jersey')):
    {'query-continue': {'search': {'sroffset': 1}}, 'query': {'search': [{'ns': 0, 'title': 'Edison, New Jersey'}]}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'Menlo Park, New Jersey')):
    {'query': {'redirects': [{'to': 'Edison, New Jersey', 'from': 'Menlo Park, New Jersey'}], 'pages': {'125414': {'lastrevid': 607768264, 'pageid': 125414, 'title': 'Edison, New Jersey', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Edison,_New_Jersey&action=edit', 'counter': '', 'length': 85175, 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'touched': '2014-05-14T17:10:49Z', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Edison,_New_Jersey'}}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'Edison, New Jersey')):
    {'query': {'pages': {'125414': {'lastrevid': 607768264, 'pageid': 125414, 'title': 'Edison, New Jersey', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Edison,_New_Jersey&action=edit', 'counter': '', 'length': 85175, 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'touched': '2014-05-14T17:10:49Z', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Edison,_New_Jersey'}}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'Dodge Ram (disambiguation)')):
    {'query': {'pages': {'18803364': {'lastrevid': 567152802, 'pageid': 18803364, 'title': 'Dodge Ram (disambiguation)', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Dodge_Ram_(disambiguation)&action=edit', 'counter': '', 'length': 702, 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'touched': '2013-08-08T15:12:27Z', 'ns': 0, 'pageprops': {'disambiguation': ''}, 'fullurl': 'http://en.wikipedia.org/wiki/Dodge_Ram_(disambiguation)'}}}},

    (('prop', 'revisions'), ('rvlimit', 1), ('rvparse', ''), ('rvprop', 'content'), ('titles', 'Dodge Ram (disambiguation)')):
    {'query-continue': {'revisions': {'rvcontinue': 556603298}}, 'query': {'pages': {'18803364': {'ns': 0, 'pageid': 18803364, 'revisions': [{'*': '<p><b><a href="/wiki/Dodge_Ram" title="Dodge Ram">Dodge Ram</a></b> is a collective nameplate for light trucks made by <a href="/wiki/Dodge" title="Dodge">Dodge</a>\n</p>\n<ul><li><a href="/wiki/Dodge_Ramcharger" title="Dodge Ramcharger">Dodge Ramcharger</a> - full-size SUV based on the Ram chassis (first vehicle to use the Ram name)\n</li><li><a href="/wiki/Dodge_Ram_Van" title="Dodge Ram Van">Dodge Ram Van</a> - full-size van\n</li><li><a href="/wiki/Dodge_Mini_Ram" title="Dodge Mini Ram" class="mw-redirect">Dodge Mini Ram</a> - cargo version of the Dodge Caravan\n<ul><li>See also:\n<ul><li><a href="/wiki/Dodge_Caravan_C/V" title="Dodge Caravan C/V" class="mw-redirect">Dodge Caravan C/V</a>\n</li><li><a href="/wiki/Ram_C/V" title="Ram C/V" class="mw-redirect">Ram C/V</a> (modern day equivalent)\n</li></ul>\n</li></ul>\n</li><li><a href="/wiki/Dodge_Ram_50" title="Dodge Ram 50" class="mw-redirect">Dodge Ram 50</a> - Dodge version of the Mitsubishi Mighty Max, predecessor to the Dakota\n</li></ul>\n<p>See also:\n</p>\n<ul><li><a href="/wiki/Dodge_D-Series" title="Dodge D-Series" class="mw-redirect">Dodge D-Series</a> - Ram\'s predecessor, page includes first Ram body style\n</li><li><a href="/wiki/Dodge_Rampage" title="Dodge Rampage">Dodge Rampage</a> - car-based pickup truck\n</li><li><a href="/wiki/Ram_Trucks" title="Ram Trucks">Ram (brand)</a> - truck brand based on the Ram pickup truck\n</li></ul>\n<table id="disambigbox" class="metadata plainlinks dmbox dmbox-disambig" style="" role="presentation">\n<tr>\n<td class="mbox-image" style="padding: 2px 0 2px 0.4em;"> <a href="/wiki/File:Disambig_gray.svg" class="image"><img alt="Disambiguation icon" src="//upload.wikimedia.org/wikipedia/en/thumb/5/5f/Disambig_gray.svg/30px-Disambig_gray.svg.png" width="30" height="23" srcset="//upload.wikimedia.org/wikipedia/en/thumb/5/5f/Disambig_gray.svg/45px-Disambig_gray.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/5/5f/Disambig_gray.svg/60px-Disambig_gray.svg.png 2x" /></a></td>\n<td class="mbox-text" style="padding: 0.25em 0.4em; font-style: italic;"> This <a href="/wiki/Help:Disambiguation" title="Help:Disambiguation">disambiguation</a> page lists articles associated with the same title. <br/> <small>If an <a class="external text" href="//en.wikipedia.org/w/index.php?title=Special:WhatLinksHere/Dodge_Ram_(disambiguation)&amp;namespace=0">internal link</a> led you here, you may wish to change the link to point directly to the intended article.</small> </td>\n</tr>\n</table>\n'}], 'title': 'Dodge Ram (disambiguation)'}}}},

    (('limit', 1), ('list', 'search'), ('srinfo', 'suggestion'), ('srlimit', 1), ('srprop', ''), ('srsearch', 'butteryfly')):
    {'query-continue': {'search': {'sroffset': 1}}, 'query': {'searchinfo': {'suggestion': 'butterfly'}, 'search': [{'ns': 0, 'title': "Butterfly's Tongue"}]}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'butterfly')):
    {'query': {'normalized': [{'to': 'Butterfly', 'from': 'butterfly'}], 'pages': {'48338': {'lastrevid': 566847704, 'pageid': 48338, 'title': 'Butterfly',  'editurl': 'http://en.wikipedia.org/w/index.php?title=Butterfly&action=edit', 'counter': '', 'length': 60572, 'contentmodel': 'wikitext', '    pagelanguage': 'en', 'touched': '2013-08-07T11:15:37Z', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Butterfly'}}}},

    (('limit', 1), ('list', 'search'), ('srinfo', 'suggestion'), ('srlimit', 1), ('srprop', ''), ('srsearch', 'Celtuce')):
    {'query-continue': {'search': {'sroffset': 1}}, 'query': {'search': [{'ns': 0, 'title': 'Celtuce'}]}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('limit', 1), ('list', 'search'), ('srinfo', 'suggestion'), ('srlimit', 1), ('srprop', ''), ('srsearch', 'Tropical Depression Ten (2005)')):
    {'query-continue': {'search': {'sroffset': 1}}, 'query': {'search': [{'ns': 0, 'title': 'Tropical Depression Ten (2005)'}]}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('limit', 1), ('list', 'search'), ('srinfo', 'suggestion'), ('srlimit', 1), ('srprop', ''), ('srsearch', 'Great Wall of China')):
    {'query-continue': {'search': {'sroffset': 1}}, 'query': {'search': [{'ns': 0, 'title': 'Great Wall of China'}]}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'Celtuce')):
    {'query': {'pages': {'1868108': {'lastrevid': 562756085, 'pageid': 1868108, 'title': 'Celtuce', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Celtuce&action=edit', 'counter': '', 'length': 1662, 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'touched': '2013-08-17T03:30:23Z', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Celtuce'}}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'Tropical Depression Ten (2005)')):
    {'query': {'pages': {'21196082': {'lastrevid': 572715399, 'pageid': 21196082, 'title': 'Tropical Depression Ten (2005)', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Tropical_Depression_Ten_(2005)&action=edit', 'counter': '', 'length': 8543, 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'touched': '2013-09-18T13:45:33Z', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Tropical_Depression_Ten_(2005)'}}}},

    (('inprop', 'url'), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', ''), ('titles', 'Great Wall of China')):
    {'query': {'pages': {'5094570': {'lastrevid': 604138653, 'pageid': 5094570, 'title': 'Great Wall of China', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Great_Wall_of_China&action=edit', 'counter': '', 'length': 23895, 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'touched': '2013-08-17T03:30:23Z', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Great_Wall_of_China'}}}},

    (('explaintext', ''), ('prop', 'extracts'), ('titles', 'Celtuce')):
    {'query': {'pages': {'1868108': {'extract': 'Celtuce (Lactuca sativa var. asparagina, augustana, or angustata), also called stem lettuce, celery lettuce, asparagus lettuce, or Chinese lettuce, IPA (UK,US) /\u02c8s\u025blt.\u0259s/, is a cultivar of lettuce grown primarily for its thick stem, used as a vegetable. It is especially popular in China, and is called wosun (Chinese: \u83b4\u7b0b; pinyin: w\u014ds\u016dn) or woju (Chinese: \u83b4\u82e3; pinyin: w\u014dj\xf9) (although the latter name may also be used to mean lettuce in general).\n\nThe stem is usually harvested at a length of around 15\u201320 cm and a diameter of around 3\u20134 cm. It is crisp, moist, and mildly flavored, and typically prepared by slicing and then stir frying with more strongly flavored ingredients.', 'ns': 0, 'pageid': 1868108, 'title': 'Celtuce'}}}},

    (('exintro', ''), ('explaintext', ''), ('prop', 'extracts'), ('titles', 'Celtuce')):
    {'query': {'pages': {'1868108': {'extract': 'Celtuce (Lactuca sativa var. asparagina, augustana, or angustata), also called stem lettuce, celery lettuce, asparagus lettuce, or Chinese lettuce, IPA (UK,US) /\u02c8s\u025blt.\u0259s/, is a cultivar of lettuce grown primarily for its thick stem, used as a vegetable. It is especially popular in China, and is called wosun (Chinese: \u83b4\u7b0b; pinyin: w\u014ds\u016dn) or woju (Chinese: \u83b4\u82e3; pinyin: w\u014dj\xf9) (although the latter name may also be used to mean lettuce in general).\n\nThe stem is usually harvested at a length of around 15\u201320 cm and a diameter of around 3\u20134 cm. It is crisp, moist, and mildly flavored, and typically prepared by slicing and then stir frying with more strongly flavored ingredients.', 'ns': 0, 'pageid': 1868108, 'title': 'Celtuce'}}}},

    (('exintro', ''), ('explaintext', ''), ('prop', 'extracts'), ('titles', 'Tropical Depression Ten (2005)')):
    {'query': {'pages': {'21196082': {'extract': 'Tropical Depression Ten was the tenth tropical cyclone of the record-breaking 2005 Atlantic hurricane season. It formed on August 13 from a tropical wave that emerged from the west coast of Africa on August 8. As a result of strong wind shear, the depression remained weak and did not strengthen beyond tropical depression status. The cyclone degenerated on August 14, although its remnants partially contributed to the formation of Tropical Depression Twelve, which eventually intensified into Hurricane Katrina. The cyclone had no effect on land, and did not directly result in any fatalities or damage.\n\n', 'ns': 0, 'pageid': 21196082, 'title': 'Tropical Depression Ten (2005)'}}}},

    (('generator', 'images'), ('gimlimit', 'max'), ('iiprop', 'url'), ('prop', 'imageinfo'), ('titles', 'Celtuce')):
    {'query': {'pages': {'22263385': {'imagerepository': 'local', 'ns': 6, 'pageid': 22263385, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/en/9/99/Question_book-new.svg', 'descriptionurl': 'http://en.wikipedia.org/wiki/File:Question_book-new.svg'}], 'title': 'File:Question book-new.svg'}, '-1': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/8/87/Celtuce.jpg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:Celtuce.jpg'}], 'missing': '', 'title': 'File:Celtuce.jpg'}, '-3': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/7/79/VegCorn.jpg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:VegCorn.jpg'}], 'missing': '', 'title': 'File:VegCorn.jpg'}, '-2': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg'}], 'missing': '', 'title': "File:The farmer's market near the Potala in Lhasa.jpg"}}}, 'limits': {'images': 500}},

    (('generator', 'images'), ('gimlimit', 'max'), ('iiprop', 'url'), ('prop', 'imageinfo'), ('titles', 'Tropical Depression Ten (2005)')):
    {'query': {'pages': {'33285577': {'imagerepository': 'local', 'ns': 6, 'pageid': 33285577, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/en/4/4a/Commons-logo.svg', 'descriptionurl': 'http://en.wikipedia.org/wiki/File:Commons-logo.svg'}], 'title': 'File:Commons-logo.svg'}, '23473511': {'imagerepository': 'local', 'ns': 6, 'pageid': 23473511, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/en/4/48/Folder_Hexagonal_Icon.svg', 'descriptionurl': 'http://en.wikipedia.org/wiki/File:Folder_Hexagonal_Icon.svg'}], 'title': 'File:Folder Hexagonal Icon.svg'}, '33285464': {'imagerepository': 'local', 'ns': 6, 'pageid': 33285464, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/en/e/e7/Cscr-featured.svg', 'descriptionurl': 'http://en.wikipedia.org/wiki/File:Cscr-featured.svg'}], 'title': 'File:Cscr-featured.svg'}, '2526001': {'imagerepository': 'shared', 'ns': 6, 'pageid': 2526001, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/8/89/Cyclone_Catarina_from_the_ISS_on_March_26_2004.JPG', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:Cyclone_Catarina_from_the_ISS_on_March_26_2004.JPG'}], 'title': 'File:Cyclone Catarina from the ISS on March 26 2004.JPG'}, '33285257': {'imagerepository': 'local', 'ns': 6, 'pageid': 33285257, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/en/f/fd/Portal-puzzle.svg', 'descriptionurl': 'http://en.wikipedia.org/wiki/File:Portal-puzzle.svg'}], 'title': 'File:Portal-puzzle.svg'}, '-5': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/8/89/Symbol_book_class2.svg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:Symbol_book_class2.svg'}], 'missing': '', 'title': 'File:Symbol book class2.svg'}, '-4': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/4/47/Sound-icon.svg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:Sound-icon.svg'}], 'missing': '', 'title': 'File:Sound-icon.svg'}, '-7': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/7/7d/Tropical_Depression_10_%282005%29.png', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:Tropical_Depression_10_(2005).png'}], 'missing': '', 'title': 'File:Tropical Depression 10 (2005).png'}, '-6': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/4/4a/TD_10_August_13%2C_2005.jpg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:TD_10_August_13,_2005.jpg'}], 'missing': '', 'title': 'File:TD 10 August 13, 2005.jpg'}, '-1': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/a/a5/10-L_2005_track.png', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:10-L_2005_track.png'}], 'missing': '', 'title': 'File:10-L 2005 track.png'}, '-3': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/3/37/People_icon.svg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:People_icon.svg'}], 'missing': '', 'title': 'File:People icon.svg'}, '-2': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/e/e0/2005_Atlantic_hurricane_season_summary_map.png', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:2005_Atlantic_hurricane_season_summary_map.png'}], 'missing': '', 'title': 'File:2005 Atlantic hurricane season summary map.png'}, '-8': {'imagerepository': 'shared', 'ns': 6, 'imageinfo': [{'url': 'http://upload.wikimedia.org/wikipedia/commons/3/33/Tropical_Depression_Ten_%282005%29.ogg', 'descriptionurl': 'http://commons.wikimedia.org/wiki/File:Tropical_Depression_Ten_(2005).ogg'}], 'missing': '', 'title': 'File:Tropical Depression Ten (2005).ogg'}}}, 'limits': {'images': 500}},

    (('ellimit', 'max'), ('prop', 'extlinks'), ('titles', 'Celtuce')):
    {'query': {'pages': {'1868108': {'extlinks': [{'*': 'http://ndb.nal.usda.gov/ndb/search/list'}, {'*': 'http://ndb.nal.usda.gov/ndb/search/list?qlookup=11145&format=Full'}], 'ns': 0, 'pageid': 1868108, 'title': 'Celtuce'}}}, 'limits': {'extlinks': 500}},

    (('ellimit', 'max'), ('prop', 'extlinks'), ('titles', 'Tropical Depression Ten (2005)')):
    {'query': {'pages': {'21196082': {'extlinks': [{'*': 'http://books.google.com/?id=-a8DRl1HuwoC&q=%22tropical+depression+ten%22+2005&dq=%22tropical+depression+ten%22+2005'}, {'*': 'http://facstaff.unca.edu/chennon/research/documents/erb_ncur2006_preprint.pdf'}, {'*': 'http://www.nhc.noaa.gov/archive/2005/TEN.shtml?'}, {'*': 'http://www.nhc.noaa.gov/archive/2005/dis/al102005.discus.001.shtml?'}, {'*': 'http://www.nhc.noaa.gov/archive/2005/dis/al102005.discus.002.shtml?'}, {'*': 'http://www.nhc.noaa.gov/archive/2005/dis/al102005.discus.003.shtml?'}, {'*': 'http://www.nhc.noaa.gov/archive/2005/dis/al122005.discus.001.shtml'}, {'*': 'http://www.nhc.noaa.gov/pdf/TCR-AL102005_Ten.pdf'}, {'*': 'http://www.nhc.noaa.gov/pdf/TCR-AL122005_Katrina.pdf'}, {'*': 'http://www.wptv.com/content/chopper5/story/Capt-Julie-Reports-On-Hurricane-Katrina/q__v8S2TZES2GiccRTQ2bw.cspx'}], 'ns': 0, 'pageid': 21196082, 'title': 'Tropical Depression Ten (2005)'}}}, 'limits': {'extlinks': 500}},

    (('pllimit', 'max'), ('plnamespace', 0), ('prop', 'links'), ('titles', 'Celtuce')):
    {'query': {'pages': {'1868108': {'ns': 0, 'pageid': 1868108, 'links': [{'ns': 0, 'title': 'Calcium'}, {'ns': 0, 'title': 'Carbohydrate'}, {'ns': 0, 'title': 'Chinese language'}, {'ns': 0, 'title': 'Dietary Reference Intake'}, {'ns': 0, 'title': 'Dietary fiber'}, {'ns': 0, 'title': 'Fat'}, {'ns': 0, 'title': 'Folate'}, {'ns': 0, 'title': 'Food energy'}, {'ns': 0, 'title': 'Iron'}, {'ns': 0, 'title': 'Lettuce'}, {'ns': 0, 'title': 'Lhasa'}, {'ns': 0, 'title': 'Magnesium in biology'}, {'ns': 0, 'title': 'Manganese'}, {'ns': 0, 'title': 'Niacin'}, {'ns': 0, 'title': 'Pantothenic acid'}, {'ns': 0, 'title': 'Phosphorus'}, {'ns': 0, 'title': 'Pinyin'}, {'ns': 0, 'title': 'Plant stem'}, {'ns': 0, 'title': 'Potassium'}, {'ns': 0, 'title': 'Protein (nutrient)'}, {'ns': 0, 'title': 'Riboflavin'}, {'ns': 0, 'title': 'Sodium'}, {'ns': 0, 'title': 'Stir frying'}, {'ns': 0, 'title': 'Thiamine'}, {'ns': 0, 'title': 'Vegetable'}, {'ns': 0, 'title': 'Vitamin A'}, {'ns': 0, 'title': 'Vitamin B6'}, {'ns': 0, 'title': 'Vitamin C'}, {'ns': 0, 'title': 'Zinc'}], 'title': 'Celtuce'}}}, 'limits': {'links': 500}},

    (('pllimit', 'max'), ('plnamespace', 0), ('prop', 'links'), ('titles', 'Tropical Depression Ten (2005)')):
    {'query': {'pages': {'21196082': {'ns': 0, 'pageid': 21196082, 'links': [{'ns': 0, 'title': '2005 Atlantic hurricane season'}, {'ns': 0, 'title': '2005 Azores subtropical storm'}, {'ns': 0, 'title': 'Atlantic Ocean'}, {'ns': 0, 'title': 'Atmospheric circulation'}, {'ns': 0, 'title': 'Atmospheric convection'}, {'ns': 0, 'title': 'Azores'}, {'ns': 0, 'title': 'Bahamas'}, {'ns': 0, 'title': 'Bar (unit)'}, {'ns': 0, 'title': 'Barbados'}, {'ns': 0, 'title': 'Bermuda'}, {'ns': 0, 'title': 'High pressure area'}, {'ns': 0, 'title': 'Hurricane Beta'}, {'ns': 0, 'title': 'Hurricane Cindy (2005)'}, {'ns': 0, 'title': 'Hurricane Dennis'}, {'ns': 0, 'title': 'Hurricane Emily (2005)'}, {'ns': 0, 'title': 'Hurricane Epsilon'}, {'ns': 0, 'title': 'Hurricane Irene (2005)'}, {'ns': 0, 'title': 'Hurricane Katrina'}, {'ns': 0, 'title': 'Hurricane Maria (2005)'}, {'ns': 0, 'title': 'Hurricane Nate (2005)'}, {'ns': 0, 'title': 'Hurricane Ophelia (2005)'}, {'ns': 0, 'title': 'Hurricane Philippe (2005)'}, {'ns': 0, 'title': 'Hurricane Rita'}, {'ns': 0, 'title': 'Hurricane Stan'}, {'ns': 0, 'title': 'Hurricane Vince (2005)'}, {'ns': 0, 'title': 'Hurricane Wilma'}, {'ns': 0, 'title': 'Inch of mercury'}, {'ns': 0, 'title': 'International Standard Book Number'}, {'ns': 0, 'title': 'List of Category 5 Atlantic hurricanes'}, {'ns': 0, 'title': 'List of storms in the 2005 Atlantic hurricane season'}, {'ns': 0, 'title': 'Louisiana'}, {'ns': 0, 'title': 'Meteorological history of Hurricane Katrina'}, {'ns': 0, 'title': 'National Hurricane Center'}, {'ns': 0, 'title': 'North Atlantic tropical cyclone'}, {'ns': 0, 'title': 'Outflow (meteorology)'}, {'ns': 0, 'title': 'Pascal (unit)'}, {'ns': 0, 'title': 'Puerto Rico'}, {'ns': 0, 'title': 'Saffir-Simpson Hurricane Scale'}, {'ns': 0, 'title': 'Saffir\u2013Simpson hurricane wind scale'}, {'ns': 0, 'title': 'Timeline of the 2005 Atlantic hurricane season'}, {'ns': 0, 'title': 'Tropical Storm Alpha (2005)'}, {'ns': 0, 'title': 'Tropical Storm Arlene (2005)'}, {'ns': 0, 'title': 'Tropical Storm Bret (2005)'}, {'ns': 0, 'title': 'Tropical Storm Delta (2005)'}, {'ns': 0, 'title': 'Tropical Storm Franklin (2005)'}, {'ns': 0, 'title': 'Tropical Storm Gamma'}, {'ns': 0, 'title': 'Tropical Storm Gert (2005)'}, {'ns': 0, 'title': 'Tropical Storm Jose (2005)'}, {'ns': 0, 'title': 'Tropical Storm Tammy (2005)'}, {'ns': 0, 'title': 'Tropical Storm Zeta'}, {'ns': 0, 'title': 'Tropical cyclone'}, {'ns': 0, 'title': 'Tropical cyclone scales'}, {'ns': 0, 'title': 'Tropical cyclone watches and warnings'}, {'ns': 0, 'title': 'Tropical wave'}, {'ns': 0, 'title': 'Wind shear'}], 'title': 'Tropical Depression Ten (2005)'}}}, 'limits': {'links': 500}},

    (('prop', 'revisions'), ('rvlimit', 1), ('rvparse', ''), ('rvprop', 'content'), ('titles', 'Celtuce')):
    {'query-continue': {'revisions': {'rvcontinue': 547842204}}, 'query': {'pages': {'1868108': {'ns': 0, 'pageid': 1868108, 'revisions': [{'*': '<table class="metadata plainlinks ambox ambox-content ambox-Unreferenced" style="" role="presentation">\n<tr><td class="mbox-image"><div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image"><img alt="Question book-new.svg" src="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" /></a></div></td><td class="mbox-text" style=""><span class="mbox-text-span">This article <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>.<span class="hide-when-compact">  Please help <a class="external text" href="//en.wikipedia.org/w/index.php?title=Celtuce&amp;action=edit">improve this article</a> by <a href="/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href="/wiki/Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span>&#32;<small><i>(December 2009)</i></small><span class="hide-when-compact"> </span></span></td></tr></table><div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/wiki/File:Celtuce.jpg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/8/87/Celtuce.jpg/300px-Celtuce.jpg" width="300" height="135" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/8/87/Celtuce.jpg/450px-Celtuce.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/8/87/Celtuce.jpg/600px-Celtuce.jpg 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/wiki/File:Celtuce.jpg" class="internal" title="Enlarge"><img src="//bits.wikimedia.org/static-1.22wmf12/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>Celtuce stems &amp; heads</div></div></div>\n<p><b>Celtuce</b> (<i>Lactuca sativa</i> var. <i>asparagina</i>, <i>augustana</i>, or <i>angustata</i>), also called <b>stem lettuce</b>, <b>celery lettuce</b>, <b>asparagus lettuce</b>, or <b>Chinese lettuce</b>, IPA (UK,US) <span title="Representation in the International Phonetic Alphabet (IPA)" class="IPA">/\u02c8s\u025blt.\u0259s/</span>, is a cultivar of <a href="/wiki/Lettuce" title="Lettuce">lettuce</a> grown primarily for its thick <a href="/wiki/Plant_stem" title="Plant stem">stem</a>, used as a <a href="/wiki/Vegetable" title="Vegetable">vegetable</a>.  It is especially popular in China, and is called <i><b>wosun</b></i> (<a href="/wiki/Chinese_language" title="Chinese language">Chinese</a>&#58; <span lang="zh"><a href="//en.wiktionary.org/wiki/%E8%8E%B4" class="extiw" title="wiktionary:\u83b4">\u83b4</a><a href="//en.wiktionary.org/wiki/%E7%AC%8B" class="extiw" title="wiktionary:\u7b0b">\u7b0b</a></span>&#59;&#32;<a href="/wiki/Pinyin" title="Pinyin">pinyin</a>&#58; <em>w\u014ds\u016dn</em>) or <i><b>woju</b></i> (<a href="/wiki/Chinese_language" title="Chinese language">Chinese</a>&#58; <span lang="zh"><a href="//en.wiktionary.org/wiki/%E8%8E%B4" class="extiw" title="wiktionary:\u83b4">\u83b4</a><a href="//en.wiktionary.org/wiki/%E8%8B%A3" class="extiw" title="wiktionary:\u82e3">\u82e3</a></span>&#59;&#32;<a href="/wiki/Pinyin" title="Pinyin">pinyin</a>&#58; <em>w\u014dj\xf9</em>) (although the latter name may also be used to mean lettuce in general).\n</p>\n<div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/wiki/File:The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg/300px-The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg" width="300" height="241" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg/450px-The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/wiki/File:The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg" class="internal" title="Enlarge"><img src="//bits.wikimedia.org/static-1.22wmf12/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>Celtuce (foreground) for sale in <a href="/wiki/Lhasa" title="Lhasa">Lhasa</a></div></div></div>\n<table class="infobox" style="font-size: 88%; text-align: left; width: 22em; line-height: 1.5em">\n<caption style="font-size: 125%; font-weight: bold"> Celtuce, raw\n\n</caption>\n<tr>\n<th colspan="2" style="text-align: center"> Nutritional value per 100&#160;g (3.5&#160;oz)\n</th></tr>\n<tr style="background-color: #e0e0e0">\n<th> <a href="/wiki/Food_energy" title="Food energy">Energy</a>\n</th>\n<td> 75&#160;kJ (18&#160;kcal)\n</td></tr>\n<tr>\n<th> <a href="/wiki/Carbohydrate" title="Carbohydrate">Carbohydrates</a>\n</th>\n<td> 3.65 g\n</td></tr>\n\n\n\n<tr>\n<th> - <a href="/wiki/Dietary_fiber" title="Dietary fiber">Dietary fiber</a>\n</th>\n<td> 1.7 g\n</td></tr>\n\n<tr>\n<th> <a href="/wiki/Fat" title="Fat">Fat</a>\n</th>\n<td> 0.3 g\n</td></tr>\n\n\n\n\n\n\n<tr>\n<th> <a href="/wiki/Protein_(nutrient)" title="Protein (nutrient)">Protein</a>\n</th>\n<td> 0.85 g\n</td></tr>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<tr>\n<td> <a href="/wiki/Vitamin_A" title="Vitamin A">Vitamin A</a> equiv.\n</td>\n<td> 175 \u03bcg (22%)\n</td></tr>\n\n\n\n\n<tr>\n<td> <a href="/wiki/Thiamine" title="Thiamine">Thiamine (vit. B<sub>1</sub>)</a>\n</td>\n<td> 0.055 mg (5%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Riboflavin" title="Riboflavin">Riboflavin (vit. B<sub>2</sub>)</a>\n</td>\n<td> 0.07 mg (6%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Niacin" title="Niacin">Niacin (vit. B<sub>3</sub>)</a>\n</td>\n<td> 0.55 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Pantothenic_acid" title="Pantothenic acid">Pantothenic acid</a> (B<sub>5</sub>)\n</td>\n<td> 0.183 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Vitamin_B6" title="Vitamin B6">Vitamin B<sub>6</sub></a>\n</td>\n<td> 0.05 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Folate" title="Folate" class="mw-redirect">Folate</a> (vit. B<sub>9</sub>)\n</td>\n<td> 46 \u03bcg (12%)\n</td></tr>\n\n\n<tr>\n<td> <a href="/wiki/Vitamin_C" title="Vitamin C">Vitamin C</a>\n</td>\n<td> 19.5 mg (23%)\n</td></tr>\n\n\n\n\n\n<tr>\n<td> <a href="/wiki/Calcium#Nutrition" title="Calcium">Calcium</a>\n</td>\n<td> 39 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Iron#Biological_role" title="Iron">Iron</a>\n</td>\n<td> 0.55 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Magnesium_in_biology" title="Magnesium in biology">Magnesium</a>\n</td>\n<td> 28 mg (8%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Manganese#Biological_role" title="Manganese">Manganese</a>\n</td>\n<td> 0.688 mg (33%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Phosphorus#Biological_role" title="Phosphorus">Phosphorus</a>\n</td>\n<td> 39 mg (6%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Potassium#In_diet" title="Potassium">Potassium</a>\n</td>\n<td> 330 mg (7%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Sodium#Biological_role" title="Sodium">Sodium</a>\n</td>\n<td> 11 mg (1%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Zinc#Biological_role" title="Zinc">Zinc</a>\n</td>\n<td> 0.27 mg (3%)\n</td></tr>\n\n\n\n\n\n<tr style="background-color: #e0e0e0; font-size: 90%; text-align: center; padding: 4pt; line-height: 1.25em">\n<td colspan="2"> <a rel="nofollow" class="external text" href="http://ndb.nal.usda.gov/ndb/search/list?qlookup=11145&amp;format=Full">Link to USDA Database entry</a><br/>Percentages are roughly approximated<br>using <a href="/wiki/Dietary_Reference_Intake" title="Dietary Reference Intake">US recommendations</a> for adults.<br/><small>Source: <a rel="nofollow" class="external text" href="http://ndb.nal.usda.gov/ndb/search/list">USDA Nutrient Database</a></small>\n</td></tr></table>\n<p>The stem is usually harvested at a length of around 15\u201320&#160;cm and a diameter of around 3\u20134&#160;cm. It is crisp, moist, and mildly flavored, and typically prepared by slicing and then <a href="/wiki/Stir_frying" title="Stir frying">stir frying</a> with more strongly flavored ingredients.\n</p><p><br />\n</p>\n<table class="metadata plainlinks stub" style="background: transparent;" role="presentation"><tr>\n<td><a href="/wiki/File:VegCorn.jpg" class="image"><img alt="Stub icon" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/79/VegCorn.jpg/40px-VegCorn.jpg" width="40" height="26" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/79/VegCorn.jpg/60px-VegCorn.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/79/VegCorn.jpg/80px-VegCorn.jpg 2x" /></a></td>\n<td><i>This <a href="/wiki/Vegetable" title="Vegetable">vegetable</a>-related article  is a <a href="/wiki/Wikipedia:Stub" title="Wikipedia:Stub">stub</a>.  You can help Wikipedia by <a class="external text" href="//en.wikipedia.org/w/index.php?title=Celtuce&amp;action=edit">expanding it</a>.</i><div class="noprint plainlinks hlist navbar mini" style="position: absolute; right: 15px; display: none;"><ul><li class="nv-view"><a href="/wiki/Template:Vegetable-stub" title="Template:Vegetable-stub"><span title="View this template" style="">v</span></a></li><li class="nv-talk"><a href="/wiki/Template_talk:Vegetable-stub" title="Template talk:Vegetable-stub"><span title="Discuss this template" style="">t</span></a></li><li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Vegetable-stub&amp;action=edit"><span title="Edit this template" style="">e</span></a></li></ul></div></td>\n</tr></table>\n'}], 'title': 'Celtuce'}}}},

    (('action', 'parse'), ('prop', 'sections'), ('titles', 'Tropical Depression Ten (2005)')):
    {'parse': {'sections': [{'index': '1', 'level': '2', 'fromtitle': 'Tropical_Depression_Ten_(2005)', 'toclevel': 1, 'number': '1', 'byteoffset': 1369, 'line': 'Meteorological history', 'anchor': 'Meteorological_history'}, {'index': '2', 'level': '2', 'fromtitle': 'Tropical_Depression_Ten_(2005)', 'toclevel': 1, 'number': '2', 'byteoffset': 6248, 'line': 'Impact', 'anchor': 'Impact'}, {'index': '3', 'level': '2', 'fromtitle': 'Tropical_Depression_Ten_(2005)', 'toclevel': 1, 'number': '3', 'byteoffset': 7678, 'line': 'See also', 'anchor': 'See_also'}, {'index': '4', 'level': '2', 'fromtitle': 'Tropical_Depression_Ten_(2005)', 'toclevel': 1, 'number': '4', 'byteoffset': 7885, 'line': 'References', 'anchor': 'References'}, {'index': '5', 'level': '2', 'fromtitle': 'Tropical_Depression_Ten_(2005)', 'toclevel': 1, 'number': '5', 'byteoffset': 7917, 'line': 'External links', 'anchor': 'External_links'}], 'title': 'Tropical Depression Ten (2005)'}},

    (('limit', 10), ('list', 'search'), ('srlimit', 10), ('srprop', ''), ('srsearch', 'Barack Obama')):
    {'query-continue': {'search': {'sroffset': 10}}, 'query': {'searchinfo': {'totalhits': 12987}, 'search': [{'ns': 0, 'title': 'Barack Obama'}, {'ns': 0, 'title': 'Barack Obama, Sr.'}, {'ns': 0, 'title': 'Presidency of Barack Obama'}, {'ns': 0, 'title': 'Barack Obama presidential campaign, 2008'}, {'ns': 0, 'title': 'List of federal judges appointed by Barack Obama'}, {'ns': 0, 'title': 'Barack Obama in comics'}, {'ns': 0, 'title': 'Political positions of Barack Obama'}, {'ns': 0, 'title': 'Barack Obama on social media'}, {'ns': 0, 'title': 'List of Batman: The Brave and the Bold characters'}, {'ns': 0, 'title': 'Family of Barack Obama'}]}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('limit', 3), ('list', 'search'), ('srlimit', 3), ('srprop', ''), ('srsearch', 'Porsche')):
    {'query-continue': {'search': {'sroffset': 3}}, 'query': {'searchinfo': {'totalhits': 5335}, 'search': [{'ns': 0, 'title': 'Porsche'}, {'ns': 0, 'title': 'Porsche in motorsport'}, {'ns': 0, 'title': 'Porsche 911 GT3'}]}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('limit', 10), ('list', 'search'), ('srinfo', 'suggestion'), ('srlimit', 10), ('srprop', ''), ('srsearch', 'hallelulejah')):
    {'query': {'searchinfo': {'suggestion': 'hallelujah'}, 'search': []}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('limit', 10), ('list', 'search'), ('srinfo', 'suggestion'), ('srlimit', 10), ('srprop', ''), ('srsearch', 'qmxjsudek')):
    {'query': {'search': []}, 'warnings': {'main': {'*': "Unrecognized parameter: 'limit'"}}},

    (('inprop', 'url'), ('pageids', 1868108), ('ppprop', 'disambiguation'), ('prop', 'info|pageprops'), ('redirects', '')):
    {'query': {'pages': {'1868108': {'lastrevid': 575687826, 'pageid': 1868108, 'title': 'Celtuce', 'editurl': 'http://en.wikipedia.org/w/index.php?title=Celtuce&action=edit', 'counter': '', 'length': 1960, 'contentmodel': 'wikitext', 'pagelanguage': 'en', 'touched': '2014-01-12T09:30:00Z', 'ns': 0, 'fullurl': 'http://en.wikipedia.org/wiki/Celtuce'}}}},

    (('colimit', 'max'), ('prop', 'coordinates'), ('titles', 'Great Wall of China')):
    {'query': {'pages': {'5094570': {'ns': 0, 'pageid': 5094570, 'coordinates': [{'lat': 40.6769, 'globe': 'earth', 'lon': 117.232, 'primary': ''}], 'title': 'Great Wall of China'}}}, 'limits': {'extlinks': 500}},

    (('gscoord', '40.67693|117.23193'), ('gslimit', 10), ('gsradius', 1000), ('list', 'geosearch')):
    {'query': {'geosearch': [{'pageid': 5094570, 'title': 'Great Wall of China', 'lon': 117.232, 'primary': '', 'lat': 40.6769, 'dist': 6.8, 'ns': 0}]}},

    (('gscoord', '40.67693|117.23193'), ('gslimit', 10), ('gsradius', 10000), ('list', 'geosearch')):
    {'query': {'geosearch': [{'pageid': 5094570, 'title': 'Great Wall of China', 'lon': 117.232, 'primary': '', 'lat': 40.6769, 'dist': 6.8, 'ns': 0}, {'pageid': 10135375, 'title': 'Jinshanling', 'lon': 117.244, 'primary': '', 'lat': 40.6764, 'dist': 1019.6, 'ns': 0}]}},

    (('gscoord', '40.67693|117.23193'), ('gslimit', 10), ('gsradius', 1000), ('list', 'geosearch'), ('titles', 'Great Wall of China')):
    {'query': {'geosearch': [{'pageid': 5094570, 'title': 'Great Wall of China', 'lon': 117.232, 'primary': '', 'lat': 40.6769, 'dist': 6.8, 'ns': 0}]}},

    (('gscoord', '40.67693|117.23193'), ('gslimit', 10), ('gsradius', 1000), ('list', 'geosearch'), ('titles', 'Test')):
    {'query': {'geosearch': []}},
  },

  "data": {
    "celtuce.content": 'Celtuce (Lactuca sativa var. asparagina, augustana, or angustata), also called stem lettuce, celery lettuce, asparagus lettuce, or Chinese lettuce, IPA (UK,US) /\u02c8s\u025blt.\u0259s/, is a cultivar of lettuce grown primarily for its thick stem, used as a vegetable. It is especially popular in China, and is called wosun (Chinese: \u83b4\u7b0b; pinyin: w\u014ds\u016dn) or woju (Chinese: \u83b4\u82e3; pinyin: w\u014dj\xf9) (although the latter name may also be used to mean lettuce in general).\n\nThe stem is usually harvested at a length of around 15\u201320 cm and a diameter of around 3\u20134 cm. It is crisp, moist, and mildly flavored, and typically prepared by slicing and then stir frying with more strongly flavored ingredients.\n\nDown: Photos of the celtuce, chinese lettuce or "Wosun" taken in the province of Girona (Catalonia, Spain, Europe) in June 2013\nCeltuce Nutritional content',

    "celtuce.parentid": 574302108,

    "celtuce.revid": 575687826,

    "celtuce.summary": "Celtuce (Lactuca sativa var. asparagina, augustana, or angustata), also called stem lettuce, celery lettuce, asparagus lettuce, or Chinese lettuce, IPA (UK,US) /\u02c8s\u025blt.\u0259s/, is a cultivar of lettuce grown primarily for its thick stem, used as a vegetable. It is especially popular in China, and is called wosun (Chinese: \u83b4\u7b0b; pinyin: w\u014ds\u016dn) or woju (Chinese: \u83b4\u82e3; pinyin: w\u014dj\xf9) (although the latter name may also be used to mean lettuce in general).\n\nThe stem is usually harvested at a length of around 15\u201320 cm and a diameter of around 3\u20134 cm. It is crisp, moist, and mildly flavored, and typically prepared by slicing and then stir frying with more strongly flavored ingredients.",

    "celtuce.images": ['http://upload.wikimedia.org/wikipedia/commons/7/79/VegCorn.jpg', 'http://upload.wikimedia.org/wikipedia/commons/8/87/Celtuce.jpg', 'http://upload.wikimedia.org/wikipedia/commons/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg', 'http://upload.wikimedia.org/wikipedia/en/9/99/Question_book-new.svg'],

    "celtuce.references": ['http://ndb.nal.usda.gov/ndb/search/list', 'http://ndb.nal.usda.gov/ndb/search/list?qlookup=11145&format=Full'],

    "celtuce.links": ['Calcium', 'Carbohydrate', 'Chinese language', 'Dietary Reference Intake', 'Dietary fiber', 'Fat', 'Folate', 'Food energy', 'Iron', 'Lettuce', 'Lhasa', 'Magnesium in biology', 'Manganese', 'Niacin', 'Pantothenic acid', 'Phosphorus', 'Pinyin', 'Plant stem', 'Potassium', 'Protein (nutrient)', 'Riboflavin', 'Sodium', 'Stir frying', 'Thiamine', 'Vegetable', 'Vitamin A', 'Vitamin B6', 'Vitamin C', 'Zinc'],

    "celtuce.html": '<table class="metadata plainlinks ambox ambox-content ambox-Unreferenced" style="" role="presentation">\n<tr><td class="mbox-image"><div style="width: 52px;"><a href="/wiki/File:Question_book-new.svg" class="image"><img alt="Question book-new.svg" src="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" /></a></div></td><td class="mbox-text" style=""><span class="mbox-text-span">This article <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">references or sources</a></b>.<span class="hide-when-compact">  Please help <a class="external text" href="//en.wikipedia.org/w/index.php?title=Celtuce&amp;action=edit">improve this article</a> by <a href="/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href="/wiki/Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span>&#32;<small><i>(December 2009)</i></small><span class="hide-when-compact"> </span></span></td></tr></table><div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/wiki/File:Celtuce.jpg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/8/87/Celtuce.jpg/300px-Celtuce.jpg" width="300" height="135" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/8/87/Celtuce.jpg/450px-Celtuce.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/8/87/Celtuce.jpg/600px-Celtuce.jpg 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/wiki/File:Celtuce.jpg" class="internal" title="Enlarge"><img src="//bits.wikimedia.org/static-1.22wmf12/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>Celtuce stems &amp; heads</div></div></div>\n<p><b>Celtuce</b> (<i>Lactuca sativa</i> var. <i>asparagina</i>, <i>augustana</i>, or <i>angustata</i>), also called <b>stem lettuce</b>, <b>celery lettuce</b>, <b>asparagus lettuce</b>, or <b>Chinese lettuce</b>, IPA (UK,US) <span title="Representation in the International Phonetic Alphabet (IPA)" class="IPA">/\u02c8s\u025blt.\u0259s/</span>, is a cultivar of <a href="/wiki/Lettuce" title="Lettuce">lettuce</a> grown primarily for its thick <a href="/wiki/Plant_stem" title="Plant stem">stem</a>, used as a <a href="/wiki/Vegetable" title="Vegetable">vegetable</a>.  It is especially popular in China, and is called <i><b>wosun</b></i> (<a href="/wiki/Chinese_language" title="Chinese language">Chinese</a>&#58; <span lang="zh"><a href="//en.wiktionary.org/wiki/%E8%8E%B4" class="extiw" title="wiktionary:\u83b4">\u83b4</a><a href="//en.wiktionary.org/wiki/%E7%AC%8B" class="extiw" title="wiktionary:\u7b0b">\u7b0b</a></span>&#59;&#32;<a href="/wiki/Pinyin" title="Pinyin">pinyin</a>&#58; <em>w\u014ds\u016dn</em>) or <i><b>woju</b></i> (<a href="/wiki/Chinese_language" title="Chinese language">Chinese</a>&#58; <span lang="zh"><a href="//en.wiktionary.org/wiki/%E8%8E%B4" class="extiw" title="wiktionary:\u83b4">\u83b4</a><a href="//en.wiktionary.org/wiki/%E8%8B%A3" class="extiw" title="wiktionary:\u82e3">\u82e3</a></span>&#59;&#32;<a href="/wiki/Pinyin" title="Pinyin">pinyin</a>&#58; <em>w\u014dj\xf9</em>) (although the latter name may also be used to mean lettuce in general).\n</p>\n<div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/wiki/File:The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg/300px-The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg" width="300" height="241" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg/450px-The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/d/dc/The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/wiki/File:The_farmer%27s_market_near_the_Potala_in_Lhasa.jpg" class="internal" title="Enlarge"><img src="//bits.wikimedia.org/static-1.22wmf12/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>Celtuce (foreground) for sale in <a href="/wiki/Lhasa" title="Lhasa">Lhasa</a></div></div></div>\n<table class="infobox" style="font-size: 88%; text-align: left; width: 22em; line-height: 1.5em">\n<caption style="font-size: 125%; font-weight: bold"> Celtuce, raw\n\n</caption>\n<tr>\n<th colspan="2" style="text-align: center"> Nutritional value per 100&#160;g (3.5&#160;oz)\n</th></tr>\n<tr style="background-color: #e0e0e0">\n<th> <a href="/wiki/Food_energy" title="Food energy">Energy</a>\n</th>\n<td> 75&#160;kJ (18&#160;kcal)\n</td></tr>\n<tr>\n<th> <a href="/wiki/Carbohydrate" title="Carbohydrate">Carbohydrates</a>\n</th>\n<td> 3.65 g\n</td></tr>\n\n\n\n<tr>\n<th> - <a href="/wiki/Dietary_fiber" title="Dietary fiber">Dietary fiber</a>\n</th>\n<td> 1.7 g\n</td></tr>\n\n<tr>\n<th> <a href="/wiki/Fat" title="Fat">Fat</a>\n</th>\n<td> 0.3 g\n</td></tr>\n\n\n\n\n\n\n<tr>\n<th> <a href="/wiki/Protein_(nutrient)" title="Protein (nutrient)">Protein</a>\n</th>\n<td> 0.85 g\n</td></tr>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<tr>\n<td> <a href="/wiki/Vitamin_A" title="Vitamin A">Vitamin A</a> equiv.\n</td>\n<td> 175 \u03bcg (22%)\n</td></tr>\n\n\n\n\n<tr>\n<td> <a href="/wiki/Thiamine" title="Thiamine">Thiamine (vit. B<sub>1</sub>)</a>\n</td>\n<td> 0.055 mg (5%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Riboflavin" title="Riboflavin">Riboflavin (vit. B<sub>2</sub>)</a>\n</td>\n<td> 0.07 mg (6%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Niacin" title="Niacin">Niacin (vit. B<sub>3</sub>)</a>\n</td>\n<td> 0.55 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Pantothenic_acid" title="Pantothenic acid">Pantothenic acid</a> (B<sub>5</sub>)\n</td>\n<td> 0.183 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Vitamin_B6" title="Vitamin B6">Vitamin B<sub>6</sub></a>\n</td>\n<td> 0.05 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Folate" title="Folate" class="mw-redirect">Folate</a> (vit. B<sub>9</sub>)\n</td>\n<td> 46 \u03bcg (12%)\n</td></tr>\n\n\n<tr>\n<td> <a href="/wiki/Vitamin_C" title="Vitamin C">Vitamin C</a>\n</td>\n<td> 19.5 mg (23%)\n</td></tr>\n\n\n\n\n\n<tr>\n<td> <a href="/wiki/Calcium#Nutrition" title="Calcium">Calcium</a>\n</td>\n<td> 39 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Iron#Biological_role" title="Iron">Iron</a>\n</td>\n<td> 0.55 mg (4%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Magnesium_in_biology" title="Magnesium in biology">Magnesium</a>\n</td>\n<td> 28 mg (8%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Manganese#Biological_role" title="Manganese">Manganese</a>\n</td>\n<td> 0.688 mg (33%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Phosphorus#Biological_role" title="Phosphorus">Phosphorus</a>\n</td>\n<td> 39 mg (6%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Potassium#In_diet" title="Potassium">Potassium</a>\n</td>\n<td> 330 mg (7%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Sodium#Biological_role" title="Sodium">Sodium</a>\n</td>\n<td> 11 mg (1%)\n</td></tr>\n<tr>\n<td> <a href="/wiki/Zinc#Biological_role" title="Zinc">Zinc</a>\n</td>\n<td> 0.27 mg (3%)\n</td></tr>\n\n\n\n\n\n<tr style="background-color: #e0e0e0; font-size: 90%; text-align: center; padding: 4pt; line-height: 1.25em">\n<td colspan="2"> <a rel="nofollow" class="external text" href="http://ndb.nal.usda.gov/ndb/search/list?qlookup=11145&amp;format=Full">Link to USDA Database entry</a><br/>Percentages are roughly approximated<br>using <a href="/wiki/Dietary_Reference_Intake" title="Dietary Reference Intake">US recommendations</a> for adults.<br/><small>Source: <a rel="nofollow" class="external text" href="http://ndb.nal.usda.gov/ndb/search/list">USDA Nutrient Database</a></small>\n</td></tr></table>\n<p>The stem is usually harvested at a length of around 15\u201320&#160;cm and a diameter of around 3\u20134&#160;cm. It is crisp, moist, and mildly flavored, and typically prepared by slicing and then <a href="/wiki/Stir_frying" title="Stir frying">stir frying</a> with more strongly flavored ingredients.\n</p><p><br />\n</p>\n<table class="metadata plainlinks stub" style="background: transparent;" role="presentation"><tr>\n<td><a href="/wiki/File:VegCorn.jpg" class="image"><img alt="Stub icon" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/79/VegCorn.jpg/40px-VegCorn.jpg" width="40" height="26" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/79/VegCorn.jpg/60px-VegCorn.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/79/VegCorn.jpg/80px-VegCorn.jpg 2x" /></a></td>\n<td><i>This <a href="/wiki/Vegetable" title="Vegetable">vegetable</a>-related article  is a <a href="/wiki/Wikipedia:Stub" title="Wikipedia:Stub">stub</a>.  You can help Wikipedia by <a class="external text" href="//en.wikipedia.org/w/index.php?title=Celtuce&amp;action=edit">expanding it</a>.</i><div class="noprint plainlinks hlist navbar mini" style="position: absolute; right: 15px; display: none;"><ul><li class="nv-view"><a href="/wiki/Template:Vegetable-stub" title="Template:Vegetable-stub"><span title="View this template" style="">v</span></a></li><li class="nv-talk"><a href="/wiki/Template_talk:Vegetable-stub" title="Template talk:Vegetable-stub"><span title="Discuss this template" style="">t</span></a></li><li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Vegetable-stub&amp;action=edit"><span title="Edit this template" style="">e</span></a></li></ul></div></td>\n</tr></table>\n',

    "cyclone.content": 'Tropical Depression Ten was the tenth tropical cyclone of the record-breaking 2005 Atlantic hurricane season. It formed on August 13 from a tropical wave that emerged from the west coast of Africa on August 8. As a result of strong wind shear, the depression remained weak and did not strengthen beyond tropical depression status. The cyclone degenerated on August 14, although its remnants partially contributed to the formation of Tropical Depression Twelve, which eventually intensified into Hurricane Katrina. The cyclone had no effect on land, and did not directly result in any fatalities or damage.\n\n\n== Meteorological history ==\n\nOn August 8, a tropical wave emerged from the west coast of Africa and entered the Atlantic Ocean. Tracking towards the west, the depression began to exhibit signs of convective organization on August 11. The system continued to develop, and it is estimated that Tropical Depression Ten formed at 1200 UTC on August 13. At the time, it was located about 1,600 miles (2,600 km) east of Barbados. Upon its designation, the depression consisted of a large area of thunderstorm activity, with curved banding features and expanding outflow. However, the environmental conditions were predicted to quickly become unfavorable. The depression moved erratically and slowly towards the west, and wind shear inhibited any significant intensification. Late on August 13, it was "beginning to look like Irene-junior as it undergoes southwesterly mid-level shear beneath the otherwise favorable upper-level outflow pattern". The wind shear was expected to relent within 48 hours, prompting some forecast models to suggest the depression would eventually attain hurricane status.\nBy early August 14, the shear had substantially disrupted the storm, leaving the low-level center of circulation exposed from the area of convection, which was also deteriorating. After meandering, the storm began to move westward. Forecasters expected it to resume a northwestward track as high pressure to the south of Bermuda was forecasted to weaken and another high was predicted to form southwest of the Azores. By 1800 UTC on August 14, the strong shear had further weakened the storm, and it no longer met the criteria for a tropical cyclone. It degenerated into a remnant low, and the National Hurricane Center issued their final advisory on the cyclone. Moving westward, it occasionally produced bursts of convective activity, before dissipating on August 18.\nTropical Depression Twelve formed over the southeastern Bahamas at 2100 UTC on August 23, partially from the remains of Tropical Depression Ten. While the normal standards for numbering tropical depressions in the Atlantic stipulate that the initial designation be retained when a depression regenerates, satellite imagery indicated that a second tropical wave had combined with Tropical Depression Ten north of Puerto Rico to form a new, more complex weather system, which was then designated as Tropical Depression Twelve. In a re-analysis, it was found that the low-level circulation of Tropical Depression Ten had completely detached and dissipated; only the remnant mid-level circulation moved on and merged with the second tropical wave. As a result, the criteria for keeping the same name and identity were not met. Tropical Depression Twelve later became Hurricane Katrina.\n\n\n== Impact ==\nBecause Tropical Depression Ten never approached land as a tropical cyclone, no tropical cyclone watches and warnings were issued for any land masses. No effects, damages, or fatalities were reported, and no ships reported tropical storm-force winds in association with the depression. The system did not attain tropical storm status; as such, it was not given a name by the National Hurricane Center. The storm partially contributed to the formation of Hurricane Katrina, which became a Category 5 hurricane on the Saffir-Simpson Hurricane Scale and made landfall in Louisiana, causing catastrophic damage. Katrina was the costliest hurricane, and one of the five deadliest, in the history of the United States.\n\n\n== See also ==\n\nMeteorological history of Hurricane Katrina\nList of storms in the 2005 Atlantic hurricane season\nTimeline of the 2005 Atlantic hurricane season\n\n\n== References ==\n\n\n== External links ==\n\nTropical Depression Ten Tropical Cyclone Report\nTropical Depression Ten advisory archive',

    "cyclone.revid": 572715399,

    "cyclone.parentid": 539367750,

    "cyclone.summary": 'Tropical Depression Ten was the tenth tropical cyclone of the record-breaking 2005 Atlantic hurricane season. It formed on August 13 from a tropical wave that emerged from the west coast of Africa on August 8. As a result of strong wind shear, the depression remained weak and did not strengthen beyond tropical depression status. The cyclone degenerated on August 14, although its remnants partially contributed to the formation of Tropical Depression Twelve, which eventually intensified into Hurricane Katrina. The cyclone had no effect on land, and did not directly result in any fatalities or damage.\n\n',

    "cyclone.images": ['http://upload.wikimedia.org/wikipedia/commons/3/33/Tropical_Depression_Ten_%282005%29.ogg', 'http://upload.wikimedia.org/wikipedia/commons/3/37/People_icon.svg', 'http://upload.wikimedia.org/wikipedia/commons/4/47/Sound-icon.svg', 'http://upload.wikimedia.org/wikipedia/commons/4/4a/TD_10_August_13%2C_2005.jpg', 'http://upload.wikimedia.org/wikipedia/commons/7/7d/Tropical_Depression_10_%282005%29.png', 'http://upload.wikimedia.org/wikipedia/commons/8/89/Cyclone_Catarina_from_the_ISS_on_March_26_2004.JPG', 'http://upload.wikimedia.org/wikipedia/commons/8/89/Symbol_book_class2.svg', 'http://upload.wikimedia.org/wikipedia/commons/a/a5/10-L_2005_track.png', 'http://upload.wikimedia.org/wikipedia/commons/e/e0/2005_Atlantic_hurricane_season_summary_map.png', 'http://upload.wikimedia.org/wikipedia/en/4/48/Folder_Hexagonal_Icon.svg', 'http://upload.wikimedia.org/wikipedia/en/4/4a/Commons-logo.svg', 'http://upload.wikimedia.org/wikipedia/en/e/e7/Cscr-featured.svg', 'http://upload.wikimedia.org/wikipedia/en/f/fd/Portal-puzzle.svg'],

    "cyclone.references": ['http://books.google.com/?id=-a8DRl1HuwoC&q=%22tropical+depression+ten%22+2005&dq=%22tropical+depression+ten%22+2005', 'http://facstaff.unca.edu/chennon/research/documents/erb_ncur2006_preprint.pdf', 'http://www.nhc.noaa.gov/archive/2005/TEN.shtml?', 'http://www.nhc.noaa.gov/archive/2005/dis/al102005.discus.001.shtml?', 'http://www.nhc.noaa.gov/archive/2005/dis/al102005.discus.002.shtml?', 'http://www.nhc.noaa.gov/archive/2005/dis/al102005.discus.003.shtml?', 'http://www.nhc.noaa.gov/archive/2005/dis/al122005.discus.001.shtml', 'http://www.nhc.noaa.gov/pdf/TCR-AL102005_Ten.pdf', 'http://www.nhc.noaa.gov/pdf/TCR-AL122005_Katrina.pdf', 'http://www.wptv.com/content/chopper5/story/Capt-Julie-Reports-On-Hurricane-Katrina/q__v8S2TZES2GiccRTQ2bw.cspx'],

    "cyclone.links": ['2005 Atlantic hurricane season', '2005 Azores subtropical storm', 'Atlantic Ocean', 'Atmospheric circulation', 'Atmospheric convection', 'Azores', 'Bahamas', 'Bar (unit)', 'Barbados', 'Bermuda', 'High pressure area', 'Hurricane Beta', 'Hurricane Cindy (2005)', 'Hurricane Dennis', 'Hurricane Emily (2005)', 'Hurricane Epsilon', 'Hurricane Irene (2005)', 'Hurricane Katrina', 'Hurricane Maria (2005)', 'Hurricane Nate (2005)', 'Hurricane Ophelia (2005)', 'Hurricane Philippe (2005)', 'Hurricane Rita', 'Hurricane Stan', 'Hurricane Vince (2005)', 'Hurricane Wilma', 'Inch of mercury', 'International Standard Book Number', 'List of Category 5 Atlantic hurricanes', 'List of storms in the 2005 Atlantic hurricane season', 'Louisiana', 'Meteorological history of Hurricane Katrina', 'National Hurricane Center', 'North Atlantic tropical cyclone', 'Outflow (meteorology)', 'Pascal (unit)', 'Puerto Rico', 'Saffir-Simpson Hurricane Scale', 'Saffir\u2013Simpson hurricane wind scale', 'Timeline of the 2005 Atlantic hurricane season', 'Tropical Storm Alpha (2005)', 'Tropical Storm Arlene (2005)', 'Tropical Storm Bret (2005)', 'Tropical Storm Delta (2005)', 'Tropical Storm Franklin (2005)', 'Tropical Storm Gamma', 'Tropical Storm Gert (2005)', 'Tropical Storm Jose (2005)', 'Tropical Storm Tammy (2005)', 'Tropical Storm Zeta', 'Tropical cyclone', 'Tropical cyclone scales', 'Tropical cyclone watches and warnings', 'Tropical wave', 'Wind shear'],

    "cyclone.sections": ['External links', 'Impact', 'Meteorological history', 'References', 'See also'],

    "cyclone.section.impact": 'Because Tropical Depression Ten never approached land as a tropical cyclone, no tropical cyclone watches and warnings were issued for any land masses. No effects, damages, or fatalities were reported, and no ships reported tropical storm-force winds in association with the depression. The system did not attain tropical storm status; as such, it was not given a name by the National Hurricane Center. The storm partially contributed to the formation of Hurricane Katrina, which became a Category 5 hurricane on the Saffir-Simpson Hurricane Scale and made landfall in Louisiana, causing catastrophic damage. Katrina was the costliest hurricane, and one of the five deadliest, in the history of the United States.',

    "barack.search": ['Barack Obama', 'Barack Obama, Sr.', 'Presidency of Barack Obama', 'Barack Obama presidential campaign, 2008', 'List of federal judges appointed by Barack Obama', 'Barack Obama in comics', 'Political positions of Barack Obama', 'Barack Obama on social media', 'List of Batman: The Brave and the Bold characters', 'Family of Barack Obama'],

    "porsche.search": ['Porsche', 'Porsche in motorsport', 'Porsche 911 GT3'],

    "great_wall_of_china.coordinates.lat": '40.677',
    "great_wall_of_china.coordinates.lon": '117.232',

    "great_wall_of_china.geo_seach": ['Great Wall of China'],

    "great_wall_of_china.geo_seach_with_radius": ['Great Wall of China', 'Jinshanling'],

    "great_wall_of_china.geo_seach_with_existing_article_name": ['Great Wall of China'],

    "great_wall_of_china.geo_seach_with_non_existing_article_name": [],
  }
}

########NEW FILE########
__FILENAME__ = search_test
# -*- coding: utf-8 -*-
import unittest

from collections import defaultdict

from wikipedia import wikipedia
from request_mock_data import mock_data


# mock out _wiki_request
class _wiki_request(object):

  calls = defaultdict(int)

  @classmethod
  def __call__(cls, params):
    cls.calls[params.__str__()] += 1
    return mock_data["_wiki_request calls"][tuple(sorted(params.items()))]

wikipedia._wiki_request = _wiki_request()


class TestSearch(unittest.TestCase):
  """Test the functionality of wikipedia.search."""

  def test_search(self):
    """Test parsing a Wikipedia request result."""
    self.assertEqual(wikipedia.search("Barack Obama"), mock_data['data']["barack.search"])

  def test_limit(self):
    """Test limiting a request results."""
    self.assertEqual(wikipedia.search("Porsche", results=3), mock_data['data']["porsche.search"])

  def test_suggestion(self):
    """Test getting a suggestion as well as search results."""
    search, suggestion = wikipedia.search("hallelulejah", suggestion=True)
    self.assertEqual(search, [])
    self.assertEqual(suggestion, u'hallelujah')

  def test_suggestion_none(self):
    """Test getting a suggestion when there is no suggestion."""
    search, suggestion = wikipedia.search("qmxjsudek", suggestion=True)
    self.assertEqual(search, [])
    self.assertEqual(suggestion, None)

########NEW FILE########
__FILENAME__ = exceptions
"""
Global wikipedia exception and warning classes.
"""

import sys


class WikipediaException(Exception):
  """Base Wikipedia exception class."""

  def __init__(self, error):
    self.error = error

  def __unicode__(self):
    return "An unknown error occured: \"{0}\". Please report it on GitHub!".format(self.error)

  if sys.version_info > (3, 0):
    def __str__(self):
      return self.__unicode__()

  else:
    def __str__(self):
      return self.__unicode__().encode('utf8')


class PageError(WikipediaException):
  """Exception raised when no Wikipedia matched a query."""

  def __init__(self, pageid=None, *args):
    if pageid:
      self.pageid = pageid
    else:
      self.title = args[0]

  def __unicode__(self):
    if hasattr(self, 'title'):
      return u"\"{0}\" does not match any pages. Try another query!".format(self.title)
    else:
      return u"Page id \"{0}\" does not match any pages. Try another id!".format(self.pageid)


class DisambiguationError(WikipediaException):
  """
  Exception raised when a page resolves to a Disambiguation page.

  The `options` property contains a list of titles
  of Wikipedia pages that the query may refer to.

  .. note:: `options` does not include titles that do not link to a valid Wikipedia page.
  """

  def __init__(self, title, may_refer_to):
    self.title = title
    self.options = may_refer_to

  def __unicode__(self):
    return u"\"{0}\" may refer to: \n{1}".format(self.title, '\n'.join(self.options))


class RedirectError(WikipediaException):
  """Exception raised when a page title unexpectedly resolves to a redirect."""

  def __init__(self, title):
    self.title = title

  def __unicode__(self):
    return u"\"{0}\" resulted in a redirect. Set the redirect property to True to allow automatic redirects.".format(self.title)


class HTTPTimeoutError(WikipediaException):
  """Exception raised when a request to the Mediawiki servers times out."""

  def __init__(self, query):
    self.query = query

  def __unicode__(self):
    return u"Searching for \"{0}\" resulted in a timeout. Try again in a few seconds, and make sure you have rate limiting set to True.".format(self.query)

########NEW FILE########
__FILENAME__ = util
from __future__ import print_function, unicode_literals

import sys
import functools

def debug(fn):
  def wrapper(*args, **kwargs):
    print(fn.__name__, 'called!')
    print(sorted(args), tuple(sorted(kwargs.items())))
    res = fn(*args, **kwargs)
    print(res)
    return res
  return wrapper


class cache(object):

  def __init__(self, fn):
    self.fn = fn
    self._cache = {}
    functools.update_wrapper(self, fn)

  def __call__(self, *args, **kwargs):
    key = str(args) + str(kwargs)
    if key in self._cache:
      ret = self._cache[key]
    else:
      ret = self._cache[key] = self.fn(*args, **kwargs)

    return ret

  def clear_cache(self):
    self._cache = {}


# from http://stackoverflow.com/questions/3627793/best-output-type-and-encoding-practices-for-repr-functions
def stdout_encode(u, default='UTF8'):
  encoding = sys.stdout.encoding or default
  if sys.version_info > (3, 0):
    return u.encode(encoding).decode(encoding)
  return u.encode(encoding)

########NEW FILE########
__FILENAME__ = wikipedia
from __future__ import unicode_literals

import requests
import time
from bs4 import BeautifulSoup
from datetime import datetime, timedelta
from decimal import Decimal

from .exceptions import PageError, DisambiguationError, RedirectError, HTTPTimeoutError, WikipediaException
from .util import cache, stdout_encode, debug


API_URL = 'http://en.wikipedia.org/w/api.php'
RATE_LIMIT = False
RATE_LIMIT_MIN_WAIT = None
RATE_LIMIT_LAST_CALL = None
USER_AGENT = 'wikipedia (https://github.com/goldsmith/Wikipedia/)'


def set_lang(prefix):
  '''
  Change the language of the API being requested.
  Set `prefix` to one of the two letter prefixes found on the `list of all Wikipedias <http://meta.wikimedia.org/wiki/List_of_Wikipedias>`_.

  After setting the language, the cache for ``search``, ``suggest``, and ``summary`` will be cleared.

  .. note:: Make sure you search for page titles in the language that you have set.
  '''
  global API_URL
  API_URL = 'http://' + prefix.lower() + '.wikipedia.org/w/api.php'

  for cached_func in (search, suggest, summary):
    cached_func.clear_cache()


def set_user_agent(user_agent_string):
  '''
  Set the User-Agent string to be used for all requests.

  Arguments:

  * user_agent_string - (string) a string specifying the User-Agent header
  '''
  global USER_AGENT
  USER_AGENT = user_agent_string


def set_rate_limiting(rate_limit, min_wait=timedelta(milliseconds=50)):
  '''
  Enable or disable rate limiting on requests to the Mediawiki servers.
  If rate limiting is not enabled, under some circumstances (depending on
  load on Wikipedia, the number of requests you and other `wikipedia` users
  are making, and other factors), Wikipedia may return an HTTP timeout error.

  Enabling rate limiting generally prevents that issue, but please note that
  HTTPTimeoutError still might be raised.

  Arguments:

  * rate_limit - (Boolean) whether to enable rate limiting or not

  Keyword arguments:

  * min_wait - if rate limiting is enabled, `min_wait` is a timedelta describing the minimum time to wait before requests.
         Defaults to timedelta(milliseconds=50)
  '''
  global RATE_LIMIT
  global RATE_LIMIT_MIN_WAIT
  global RATE_LIMIT_LAST_CALL

  RATE_LIMIT = rate_limit
  if not rate_limit:
    RATE_LIMIT_MIN_WAIT = None
  else:
    RATE_LIMIT_MIN_WAIT = min_wait

  RATE_LIMIT_LAST_CALL = None


@cache
def search(query, results=10, suggestion=False):
  '''
  Do a Wikipedia search for `query`.

  Keyword arguments:

  * results - the maxmimum number of results returned
  * suggestion - if True, return results and suggestion (if any) in a tuple
  '''

  search_params = {
    'list': 'search',
    'srprop': '',
    'srlimit': results,
    'limit': results,
    'srsearch': query
  }
  if suggestion:
    search_params['srinfo'] = 'suggestion'

  raw_results = _wiki_request(search_params)

  if 'error' in raw_results:
    if raw_results['error']['info'] in ('HTTP request timed out.', 'Pool queue is full'):
      raise HTTPTimeoutError(query)
    else:
      raise WikipediaException(raw_results['error']['info'])

  search_results = (d['title'] for d in raw_results['query']['search'])

  if suggestion:
    if raw_results['query'].get('searchinfo'):
      return list(search_results), raw_results['query']['searchinfo']['suggestion']
    else:
      return list(search_results), None

  return list(search_results)


@cache
def geosearch(latitude, longitude, title=None, results=10, radius=1000):
  '''
  Do a wikipedia geo search for `latitude` and `longitude`
  using HTTP API described in http://www.mediawiki.org/wiki/Extension:GeoData

  Arguments:

  * latitude (float or decimal.Decimal)
  * longitude (float or decimal.Decimal)

  Keyword arguments:

  * title - The title of an article to search for
  * results - the maximum number of results returned
  * radius - Search radius in meters. The value must be between 10 and 10000
  '''

  search_params = {
    'list': 'geosearch',
    'gsradius': radius,
    'gscoord': '{0}|{1}'.format(latitude, longitude),
    'gslimit': results
  }
  if title:
    search_params['titles'] = title

  raw_results = _wiki_request(search_params)

  if 'error' in raw_results:
    if raw_results['error']['info'] in ('HTTP request timed out.', 'Pool queue is full'):
      raise HTTPTimeoutError('{0}|{1}'.format(latitude, longitude))
    else:
      raise WikipediaException(raw_results['error']['info'])

  search_pages = raw_results['query'].get('pages', None)
  if search_pages:
    search_results = (v['title'] for k, v in search_pages.items() if k != '-1')
  else:
    search_results = (d['title'] for d in raw_results['query']['geosearch'])

  return list(search_results)


@cache
def suggest(query):
  '''
  Get a Wikipedia search suggestion for `query`.
  Returns a string or None if no suggestion was found.
  '''

  search_params = {
    'list': 'search',
    'srinfo': 'suggestion',
    'srprop': '',
  }
  search_params['srsearch'] = query

  raw_result = _wiki_request(search_params)

  if raw_result['query'].get('searchinfo'):
    return raw_result['query']['searchinfo']['suggestion']

  return None


def random(pages=1):
  '''
  Get a list of random Wikipedia article titles.

  .. note:: Random only gets articles from namespace 0, meaning no Category, User talk, or other meta-Wikipedia pages.

  Keyword arguments:

  * pages - the number of random pages returned (max of 10)
  '''
  #http://en.wikipedia.org/w/api.php?action=query&list=random&rnlimit=5000&format=jsonfm
  query_params = {
    'list': 'random',
    'rnnamespace': 0,
    'rnlimit': pages,
  }

  request = _wiki_request(query_params)
  titles = [page['title'] for page in request['query']['random']]

  if len(titles) == 1:
    return titles[0]

  return titles


@cache
def summary(title, sentences=0, chars=0, auto_suggest=True, redirect=True):
  '''
  Plain text summary of the page.

  .. note:: This is a convenience wrapper - auto_suggest and redirect are enabled by default

  Keyword arguments:

  * sentences - if set, return the first `sentences` sentences (can be no greater than 10).
  * chars - if set, return only the first `chars` characters (actual text returned may be slightly longer).
  * auto_suggest - let Wikipedia find a valid page title for the query
  * redirect - allow redirection without raising RedirectError
  '''

  # use auto_suggest and redirect to get the correct article
  # also, use page's error checking to raise DisambiguationError if necessary
  page_info = page(title, auto_suggest=auto_suggest, redirect=redirect)
  title = page_info.title
  pageid = page_info.pageid

  query_params = {
    'prop': 'extracts',
    'explaintext': '',
    'titles': title
  }

  if sentences:
    query_params['exsentences'] = sentences
  elif chars:
    query_params['exchars'] = chars
  else:
    query_params['exintro'] = ''

  request = _wiki_request(query_params)
  summary = request['query']['pages'][pageid]['extract']

  return summary


def page(title=None, pageid=None, auto_suggest=True, redirect=True, preload=False):
  '''
  Get a WikipediaPage object for the page with title `title` or the pageid
  `pageid` (mutually exclusive).

  Keyword arguments:

  * title - the title of the page to load
  * pageid - the numeric pageid of the page to load
  * auto_suggest - let Wikipedia find a valid page title for the query
  * redirect - allow redirection without raising RedirectError
  * preload - load content, summary, images, references, and links during initialization
  '''

  if title is not None:
    if auto_suggest:
      results, suggestion = search(title, results=1, suggestion=True)
      try:
        title = suggestion or results[0]
      except IndexError:
        # if there is no suggestion or search results, the page doesn't exist
        raise PageError(title)
    return WikipediaPage(title, redirect=redirect, preload=preload)
  elif pageid is not None:
    return WikipediaPage(pageid=pageid, preload=preload)
  else:
    raise ValueError("Either a title or a pageid must be specified")



class WikipediaPage(object):
  '''
  Contains data from a Wikipedia page.
  Uses property methods to filter data from the raw HTML.
  '''

  def __init__(self, title=None, pageid=None, redirect=True, preload=False, original_title=''):
    if title is not None:
      self.title = title
      self.original_title = original_title or title
    elif pageid is not None:
      self.pageid = pageid
    else:
      raise ValueError("Either a title or a pageid must be specified")

    self.__load(redirect=redirect, preload=preload)

    if preload:
      for prop in ('content', 'summary', 'images', 'references', 'links', 'sections'):
        getattr(self, prop)

  def __repr__(self):
    return stdout_encode(u'<WikipediaPage \'{}\'>'.format(self.title))

  def __eq__(self, other):
    try:
      return (
        self.pageid == other.pageid
        and self.title == other.title
        and self.url == other.url
      )
    except:
      return False

  def __load(self, redirect=True, preload=False):
    '''
    Load basic information from Wikipedia.
    Confirm that page exists and is not a disambiguation/redirect.

    Does not need to be called manually, should be called automatically during __init__.
    '''
    query_params = {
      'prop': 'info|pageprops',
      'inprop': 'url',
      'ppprop': 'disambiguation',
      'redirects': '',
    }
    if not getattr(self, 'pageid', None):
      query_params['titles'] = self.title
    else:
      query_params['pageids'] = self.pageid

    request = _wiki_request(query_params)

    query = request['query']
    pageid = list(query['pages'].keys())[0]
    page = query['pages'][pageid]

    # missing is present if the page is missing
    if 'missing' in page:
      if hasattr(self, 'title'):
        raise PageError(self.title)
      else:
        raise PageError(pageid=self.pageid)

    # same thing for redirect, except it shows up in query instead of page for
    # whatever silly reason
    elif 'redirects' in query:
      if redirect:
        redirects = query['redirects'][0]
        normalized = query['normalized'][0]

        assert redirects['from'] == normalized['to'], "this shouldn't happen. Please report on GitHub: github.com/goldsmith/Wikipedia"
        assert normalized['from'] == self.title, "this shouldn't happen. Please report on GitHub: github.com/goldsmith/Wikipedia"

        # change the title and reload the whole object
        self.__init__(redirects['to'], redirect=redirect, preload=preload)

      else:
        raise RedirectError(getattr(self, 'title', page['title']))

    # since we only asked for disambiguation in ppprop,
    # if a pageprop is returned,
    # then the page must be a disambiguation page
    elif 'pageprops' in page:
      query_params = {
        'prop': 'revisions',
        'rvprop': 'content',
        'rvparse': '',
        'rvlimit': 1
      }
      if hasattr(self, 'pageid'):
        query_params['pageids'] = self.pageid
      else:
        query_params['titles'] = self.title
      request = _wiki_request(query_params)
      html = request['query']['pages'][pageid]['revisions'][0]['*']

      lis = BeautifulSoup(html).find_all('li')
      filtered_lis = [li for li in lis if not 'tocsection' in ''.join(li.get('class', []))]
      may_refer_to = [li.a.get_text() for li in filtered_lis if li.a]

      raise DisambiguationError(getattr(self, 'title', page['title']), may_refer_to)

    else:
      self.pageid = pageid
      self.title = page['title']
      self.url = page['fullurl']

  def __continued_query(self, query_params):
    '''
    Based on https://www.mediawiki.org/wiki/API:Query#Continuing_queries
    '''
    query_params.update(self.__title_query_param)

    last_continue = {}
    prop = query_params.get('prop', None)

    while True:
      params = query_params.copy()
      params.update(last_continue)

      request = _wiki_request(params)

      if 'query' not in request:
        break

      pages = request['query']['pages']
      if 'generator' in query_params:
        for datum in pages.values():  # in python 3.3+: "yield from pages.values()"
          yield datum
      else:
        for datum in pages[self.pageid][prop]:
          yield datum

      if 'continue' not in request:
        break

      last_continue = request['continue']

  @property
  def __title_query_param(self):
    if getattr(self, 'title', None) is not None:
      return {'titles': self.title}
    else:
      return {'pageids': self.pageid}

  def html(self):
    '''
    Get full page HTML.

    .. warning:: This can get pretty slow on long pages.
    '''

    if not getattr(self, '_html', False):
      query_params = {
        'prop': 'revisions',
        'rvprop': 'content',
        'rvlimit': 1,
        'rvparse': '',
        'titles': self.title
      }

      request = _wiki_request(query_params)
      self._html = request['query']['pages'][self.pageid]['revisions'][0]['*']

    return self._html

  @property
  def content(self):
    '''
    Plain text content of the page, excluding images, tables, and other data.
    '''

    if not getattr(self, '_content', False):
      query_params = {
        'prop': 'extracts|revisions',
        'explaintext': '',
        'rvprop': 'ids'
      }
      if not getattr(self, 'title', None) is None:
         query_params['titles'] = self.title
      else:
         query_params['pageids'] = self.pageid
      request = _wiki_request(query_params)
      self._content     = request['query']['pages'][self.pageid]['extract']
      self._revision_id = request['query']['pages'][self.pageid]['revisions'][0]['revid']
      self._parent_id   = request['query']['pages'][self.pageid]['revisions'][0]['parentid']

    return self._content

  @property
  def revision_id(self):
    '''
    Revision ID of the page.

    The revision ID is a number that uniquely identifies the current
    version of the page. It can be used to create the permalink or for
    other direct API calls. See `Help:Page history
    <http://en.wikipedia.org/wiki/Wikipedia:Revision>`_ for more
    information.
    '''

    if not getattr(self, '_revid', False):
      # fetch the content (side effect is loading the revid)
      self.content

    return self._revision_id

  @property
  def parent_id(self):
    '''
    Revision ID of the parent version of the current revision of this
    page. See ``revision_id`` for more information.
    '''

    if not getattr(self, '_parentid', False):
      # fetch the content (side effect is loading the revid)
      self.content

    return self._parent_id

  @property
  def summary(self):
    '''
    Plain text summary of the page.
    '''

    if not getattr(self, '_summary', False):
      query_params = {
        'prop': 'extracts',
        'explaintext': '',
        'exintro': '',
      }
      if not getattr(self, 'title', None) is None:
         query_params['titles'] = self.title
      else:
         query_params['pageids'] = self.pageid

      request = _wiki_request(query_params)
      self._summary = request['query']['pages'][self.pageid]['extract']

    return self._summary

  @property
  def images(self):
    '''
    List of URLs of images on the page.
    '''

    if not getattr(self, '_images', False):
      self._images = [
        page['imageinfo'][0]['url']
        for page in self.__continued_query({
          'generator': 'images',
          'gimlimit': 'max',
          'prop': 'imageinfo',
          'iiprop': 'url',
        })
        if 'imageinfo' in page
      ]

    return self._images

  @property
  def coordinates(self):
    '''
    Tuple of Decimals in the form of (lat, lon) or None
    '''
    if not getattr(self, '_coordinates', False):
      query_params = {
        'prop': 'coordinates',
        'colimit': 'max',
        'titles': self.title,
      }

      request = _wiki_request(query_params)

      if 'query' in request:
        coordinates = request['query']['pages'][self.pageid]['coordinates']
        self._coordinates = (Decimal(coordinates[0]['lat']), Decimal(coordinates[0]['lon']))
      else:
        self._coordinates = None

    return self._coordinates

  @property
  def references(self):
    '''
    List of URLs of external links on a page.
    May include external links within page that aren't technically cited anywhere.
    '''

    if not getattr(self, '_references', False):
      def add_protocol(url):
        return url if url.startswith('http') else 'http:' + url

      self._references = [
        add_protocol(link['*'])
        for link in self.__continued_query({
          'prop': 'extlinks',
          'ellimit': 'max'
        })
      ]

    return self._references

  @property
  def links(self):
    '''
    List of titles of Wikipedia page links on a page.

    .. note:: Only includes articles from namespace 0, meaning no Category, User talk, or other meta-Wikipedia pages.
    '''

    if not getattr(self, '_links', False):
      self._links = [
        link['title']
        for link in self.__continued_query({
          'prop': 'links',
          'plnamespace': 0,
          'pllimit': 'max'
        })
      ]

    return self._links

  @property
  def sections(self):
    '''
    List of section titles from the table of contents on the page.
    '''

    if not getattr(self, '_sections', False):
      query_params = {
        'action': 'parse',
        'prop': 'sections',
      }
      query_params.update(self.__title_query_param)

      request = _wiki_request(query_params)
      self._sections = [section['line'] for section in request['parse']['sections']]

    return self._sections

  def section(self, section_title):
    '''
    Get the plain text content of a section from `self.sections`.
    Returns None if `section_title` isn't found, otherwise returns a whitespace stripped string.

    This is a convenience method that wraps self.content.

    .. warning:: Calling `section` on a section that has subheadings will NOT return
           the full text of all of the subsections. It only gets the text between
           `section_title` and the next subheading, which is often empty.
    '''

    section = u"== {} ==".format(section_title)
    try:
      index = self.content.index(section) + len(section)
    except ValueError:
      return None

    try:
      next_index = self.content.index("==", index)
    except ValueError:
      next_index = len(self.content)

    return self.content[index:next_index].lstrip("=").strip()


@cache
def languages():
  '''
  List all the currently supported language prefixes (usually ISO language code).

  Can be inputted to `set_lang` to change the Mediawiki that `wikipedia` requests
  results from.

  Returns: dict of <prefix>: <local_lang_name> pairs. To get just a list of prefixes,
  use `wikipedia.languages().keys()`.
  '''
  response = _wiki_request({
    'meta': 'siteinfo',
    'siprop': 'languages'
  })

  languages = response['query']['languages']

  return {
    lang['code']: lang['*']
    for lang in languages
  }


def donate():
  '''
  Open up the Wikimedia donate page in your favorite browser.
  '''
  import webbrowser

  webbrowser.open('https://donate.wikimedia.org/w/index.php?title=Special:FundraiserLandingPage', new=2)


def _wiki_request(params):
  '''
  Make a request to the Wikipedia API using the given search parameters.
  Returns a parsed dict of the JSON response.
  '''
  global RATE_LIMIT_LAST_CALL
  global USER_AGENT

  params['format'] = 'json'
  if not 'action' in params:
    params['action'] = 'query'

  headers = {
    'User-Agent': USER_AGENT
  }

  if RATE_LIMIT and RATE_LIMIT_LAST_CALL and \
    RATE_LIMIT_LAST_CALL + RATE_LIMIT_MIN_WAIT > datetime.now():

    # it hasn't been long enough since the last API call
    # so wait until we're in the clear to make the request

    wait_time = (RATE_LIMIT_LAST_CALL + RATE_LIMIT_MIN_WAIT) - datetime.now()
    time.sleep(int(wait_time.total_seconds()))

  r = requests.get(API_URL, params=params, headers=headers)

  if RATE_LIMIT:
    RATE_LIMIT_LAST_CALL = datetime.now()

  return r.json()

########NEW FILE########
