This benchmark was executed on a 2012 macbook and used 200k colors from the XKCD color list. Processing of the raw lab values into objects / matrices was not included in the timings. For the full pickled lab matrix see http://lyst-classifiers.s3.amazonaws.com/color/lab-colors.pk

|method  |  delta_e | delta_e_matrix|
|:-------|---------:|--------------:|
|cie1976 | 3.256    | 0.018         |
|cie1994 | 3.787    | 0.058         |
|cmc     | 4.265    | 0.06          |
|cie2000 | 5.563    | 0.213         |

On large data-sets the vectorized version is an order of magnitude faster

Python Color Math Module (colormath)
====================================

.. image:: https://travis-ci.org/gtaylor/python-colormath.png?branch=master
        :target: https://travis-ci.org/gtaylor/python-colormath
.. image:: https://pypip.in/d/colormath/badge.png
        :target: https://crate.io/packages/colormath/

This module implements a large number of different color operations such as
color space conversions, Delta E, and density to spectral.

Requirements
------------

* numpy
* Python 2.7 or Python 3.3+

Installation
------------

The easiest way to install colormath is via pip/easy_install::

    pip install colormath

Documentation
-------------

For documentation, see the project webpage at:

    http://python-colormath.readthedocs.org/
    
There are also a lot of useful examples under the examples directory within
this directory.

Support
-------

Head over to https://github.com/gtaylor/python-colormath
and submit an issue if you have any problems or questions.

Legal Mumbo Jumbo
-----------------

Copyright (C) 2014 `Gregory Taylor`_

This software is licensed under the BSD License.

.. _Gregory Taylor: http://gc-taylor.com

