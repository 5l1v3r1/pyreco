Generic single-database configuration.
Hello {{ user.fullname }},

You or someone claiming to be you asked for your password to be reset.

[Click here to reset your password][reset].

[reset]: {{ url_for('.reset_email', _external=True, userid=user.userid, secret=secret) }}

If you did not ask for your password to be reset, you may safely ignore this
email.

Hello {{ useremail.user.fullname }},

[Click here to confirm your email address][confirm].

[confirm]: {{ url_for('lastuser_oauth.confirm_email', _external=True, md5sum=useremail.md5sum, secret=useremail.verification_code) }}

If you did not sign up, you may safely ignore this email.

Lastuser
========

User management is a pain. There's no need to write new user management code
for each new app to do basic things like logging in, managing the profile and
verifying email addresses. Setup one Lastuser instance for all your apps and
defer all user management to it. Use the API to integrate with your app.

This project is a work in progress.


Test deployment
---------------

Here is how you make a test deployment::

    $ git clone https://github.com/hasgeek/lastuser
    $ cd lastuser
    $ cp instance/settings-sample.py instance/settings.py
    $ open instance/settings.py # Customize this file as needed
    $ pip install -r requirements.txt
    $ python runserver.py

You may also want to setup the database with::

    $ python manage.py db create

For development setup, you can also set the `CACHE_TYPE` to `simple` in `instance/settings.py` or in `instance/development.py`::

    #: Cache type
    CACHE_TYPE = 'simple'


