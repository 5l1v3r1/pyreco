
About
-----
This software is for Code-128 barcode detection and decoding. 
Primary is optimized for photos taken by digital camera with
1MPix or so resolution.

There are two variants -- barcode1 and barcode2: 
    -- barcode1 is quick'n'dirty implementation
    -- barcode2 is development version, unsuccessful attempt 
                to recognize smaller images


Requirements
------------
Module libjpeg-dev is required for reading JPEG images (at least 
files jpeglib.h and jpeg.so should be in standard locations).


Installation
------------
Just type "make" and optionally copy compiled barcode1 and barcode2 
executables to $PATH. It should compile cleanly on most Linux and 
*BSD distributions.


Usage
-----
Just execute "./barcode1 image.jpg".
Recognized barcode will be printed to standard output:

    bash$ for i in test-images/* ; do ; \
	      echo $i ; ./barcode1 $i ; done
    test-images/01.jpg
    HP+164701-41842-48
    test-images/02.jpg
    HP+164701-41842-48
    test-images/03.jpg
    HP+183601-65131-12
    test-images/04.jpg
    test-images/05.jpg
    HP+183901-82130-80
    test-images/06.jpg
    HP+184001-12105-88
    test-images/07.jpg
    HP+184001-12105-88
    test-images/08.jpg
    test-images/09.jpg
    test-images/10.jpg
    test-images/11.jpg
    HP+173902-74080-144
    test-images/12.jpg
    HP+200401-10201-18
    test-images/13.jpg


Algorithm
---------
Algorithms used are described directly in barcode1.c or barcode2.c
source files.


Manifest
--------
   barcode1.c    -- source of barcode1 program
   barcode2.c    -- source of barcode2 program
   code128.h     -- Code-128 symbol table
   Makefile      -- makefile for make
   test-images/  -- some testing photos
   doc/          -- description of barcode2 algorithms
   bboxs.tar.gz  -- bound-boxes of found barcodes
   drafts/       -- old versions of various algorithms used
   test/         -- cropped small barcodes for testing purposes
   README        -- this document 


Author
------
Coded by Martin Sarfy <sarfy@ics.muni.cz> on hire for HUDORA GmbH.
Published under a BSD license.




About
-----
This software is for Code-128 barcode detection and decoding. 
Primary is optimized for photos taken by digital camera with
1MPix or so resolution.

There are two variants -- barcode1 and barcode2: 
    -- barcode1 is quick'n'dirty implementation
    -- barcode2 is development version, unsuccessful attempt 
                to recognize smaller images


Requirements
------------
Module libjpeg-dev is required for reading JPEG images (at least 
files jpeglib.h and jpeg.so should be in standard locations).


Installation
------------
Just type "make" and optionally copy compiled barcode1 and barcode2 
executables to $PATH. It should compile cleanly on most Linux and 
*BSD distributions.


Usage
-----
Just execute "./barcode1 image.jpg".
Recognized barcode will be printed to standard output:

    bash$ for i in test-images/* ; do ; \
	      echo $i ; ./barcode1 $i ; done
    test-images/01.jpg
    HP+164701-41842-48
    test-images/02.jpg
    HP+164701-41842-48
    test-images/03.jpg
    HP+183601-65131-12
    test-images/04.jpg
    test-images/05.jpg
    HP+183901-82130-80
    test-images/06.jpg
    HP+184001-12105-88
    test-images/07.jpg
    HP+184001-12105-88
    test-images/08.jpg
    test-images/09.jpg
    test-images/10.jpg
    test-images/11.jpg
    HP+173902-74080-144
    test-images/12.jpg
    HP+200401-10201-18
    test-images/13.jpg


Algorithm
---------
Algorithms used are described directly in barcode1.c or barcode2.c
source files.


Manifest
--------
   barcode1.c    -- source of barcode1 program
   barcode2.c    -- source of barcode2 program
   code128.h     -- Code-128 symbol table
   Makefile      -- makefile for make
   test-images/  -- some testing photos
   doc/          -- description of barcode2 algorithms
   bboxs.tar.gz  -- bound-boxes of found barcodes
   drafts/       -- old versions of various algorithms used
   test/         -- cropped small barcodes for testing purposes
   README        -- this document 


Author
------
Coded by Martin Sarfy <sarfy@ics.muni.cz> on hire for HUDORA GmbH.
Published under a BSD license.



h1. huBarcode

huBarcode is a Python Library to generate 1D and 2D Barcodes. Currently it
supports

 * code128
 * ean13
 * datamatrix
 * qrcode


!https://raw.github.com/mdornseif/huBarcode/master/hubarcode/code128/test_img/3.png! !https://raw.github.com/mdornseif/huBarcode/master/hubarcode/ean13/test_img/3.png! !https://raw.github.com/mdornseif/huBarcode/master/sample_barcodes/hudora.png! !https://raw.github.com/mdornseif/huBarcode/master/hubarcode/qrcode/test_img/10.png!

The interface of the different encoders is fairly straightforward:

<pre><code>
>>> encoder = DataMatrixEncoder("HuDoRa")
>>> encoder.save( "test.png" )
>>> print encoder.get_ascii()
XX  XX  XX  XX  XX  XX  XX
XX  XXXX  XXXXXX      XXXXXX
XXXXXX    XX          XX
XXXXXX    XX        XXXX  XX
XXXX  XX  XXXXXX
XXXXXX    XXXXXXXX    XXXXXX
XX    XX  XXXXXXXX  XXXX
XX    XX      XXXX      XXXX
XX  XXXXXXXXXX    XXXX
XX  XXXX    XX            XX
XX  XXXXXX  XXXXXX      XX
XXXXXX  XX  XX  XX  XX    XX
XX    XX              XX
XXXXXXXXXXXXXXXXXXXXXXXXXXXX
</code></pre>


h2. Download

You can get huBarcode at "the Python Cheeseshop":http://pypi.python.org/pypi/huBarcode/ or at "GitHub":http://github.com/mdornseif/huBarcode#.


h2. Decoders

Open Source barcode decoders we are aware of:

* "ZXing (Zebra Crossing)":http://code.google.com/p/zxing/ (higly recommended)
* "ExactCODE;":http://www.exactcode.de/site/open_source/exactimage/bardecode/
* "ZBar":http://sourceforge.net/projects/zbar/
* "pydmtx":http://libdmtx.wikidot.com/libdmtx-python-wrapper



h2. Changes

See the "Changelog":https://github.com/hudora/mdornseif/blob/master/CHANGES

h2. License

If you worry about copyright you might consider this Software BSD-Licensed.
If you are still worried, you might consider it GPL1/2/3 compatible.
But don't worry. If you need something formal:
The code is available under the Apache License, Version 2.0.


!https://travis-ci.org/hudora/huBarcode.png?branch=master!:https://travis-ci.org/hudora/huBarcode

