[
    "mandelbrot.pycuda",
    "mandelbrot.numpy_loop.numpy_loop",
    "pycuda.pycuda_asnumpy_float32",
    "numpy_loop",
    "mandelbrot.multiprocessing",
    "shedskin1",
    "mandelbrot.parallelpython_cython_pure_python",
    "numpy_loop.numpy_loop_pycomplex",
    "pure_python_slow",
    "numpy_loop_pycomplex",
    "parallelpython_cython_pure_python.parallelpython_cython_pure_python",
    "pure_python",
    "numpy_vector_numexpr",
    "mandelbrot.pycuda.pycuda_elementwise_float32",
    "mandelbrot.numpy_vector",
    "numpy_vector_numexpr.numpy_vector_numexpr",
    "parallelpython_pure_python_using_ppserver",
    "mandelbrot",
    "pycuda_elementwise_float32",
    "pycuda.pycuda_elementwise_float32",
    "cython_pure_python",
    "pure_python.pure_python",
    "mandelbrot.numpy_vector.numpy_vector",
    "mandelbrot.shedskin.shedskin2",
    "shedskin.shedskin2",
    "docs.conf",
    "shedskin.shedskin1",
    "mandelbrot.parallelpython_pure_python.parallelpython_pure_python",
    "multi",
    "pycuda_asnumpy_float32",
    "parallelpython_pure_python.parallelpython_pure_python",
    "pycuda_sourcemodule_float32",
    "mandelbrot.parallelpython_pure_python.parallelpython_pure_python_using_ppserver",
    "mandelbrot.multiprocessing.multi",
    "multiprocessing",
    "mandelbrot.parallelpython_pure_python",
    "mandelbrot.shedskin.shedskin1",
    "numpy_loop.numpy_loop",
    "cython_numpy_loop.cython_numpy_loop",
    "mandelbrot.pycuda.pycuda_sourcemodule_float32",
    "conf",
    "mandelbrot.parallelpython_cython_pure_python.parallelpython_cython_pure_python",
    "mandelbrot.cython_numpy_loop.cython_numpy_loop",
    "mandelbrot.numpy_loop.numpy_loop_pycomplex",
    "mandelbrot.cython_pure_python",
    "docs",
    "parallelpython_cython_pure_python",
    "parallelpython_pure_python",
    "mandelbrot.pure_python",
    "mandelbrot.pycuda.pycuda_asnumpy_float32",
    "mandelbrot.cython_numpy_loop",
    "cython_pure_python.cython_pure_python",
    "mandelbrot.numpy_vector_numexpr.numpy_vector_numexpr",
    "numpy_vector.numpy_vector",
    "mandelbrot.pure_python.pure_python",
    "shedskin2",
    "mandelbrot.numpy_loop",
    "pycuda",
    "parallelpython_pure_python.parallelpython_pure_python_using_ppserver",
    "mandelbrot.numpy_vector_numexpr",
    "numpy_vector",
    "mandelbrot.cython_pure_python.cython_pure_python",
    "mandelbrot.pure_python.pure_python_slow",
    "multiprocessing.multi",
    "mandelbrot.shedskin",
    "shedskin",
    "pure_python.pure_python_slow",
    "pycuda.pycuda_sourcemodule_float32",
    "cython_numpy_loop"
]