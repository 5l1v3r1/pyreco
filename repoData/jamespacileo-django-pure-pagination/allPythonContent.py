__FILENAME__ = models
from django.db import models

# Create your models here.


########NEW FILE########
__FILENAME__ = names
names = [
'Aan',
'Aalia',
'Aaliah',
'Aaliyah',
'Aaron',
'Aaryanna',
'Aavree',
'Abbie',
'Abbott',
'Abbra',
'Abby',
'Abe',
'Abel',
'Abelardo',
'Abeni',
'Abia',
'Abiba',
'Abie',
'Abigail',
'Abner',
'Abraham',
'Abram',
'Abrial',
'Abrianna',
'Abrienda',
'Abril',
'Abryl',
'Absolom',
'Abu',
'Acacia',
'Acadia',
'Ace',
'Achika',
'Acsah; achsah',
'Ada',
'Adabeel',
'Adah',
'Adair',
'Adalia',
'Adam',
'Adamina',
'Adamma',
'Adara',
'Addison',
'Ade',
'Adela',
'Adelaide',
'Adele',
'Adeline',
'Adelio',
'Adelle',
'Adem',
'Aden',
'Aderes',
'Adian',
'Adie',
'Adiel',
'Adil',
'Adila',
'Adina',
'Adir',
'Adita',
'Adkins',
'Adlai',
'Adler',
'Adli',
'Adolfo',
'Adolph',
'Adonai',
'Adonia',
'Adonijah',
'Adora',
'Adra',
'Adrian',
'Adriana',
'Adriano',
'Adriel',
'Adrienne',
'Adrina',
'Ady',
'Aelan',
'Aeyesha',
'Affrica',
'Afra',
'Afric',
'Africa',
'Afton',
'Agamemnon',
'Agatha',
'Aggie',
'Agnes',
'Ah cy',
'Ahava',
'Ai',
'Aida',
'Aidan',
'Aiko',
'Aileen',
'Ailis',
'Ailish',
'Ailo',
'Aimee',
'Aine',
'Ainsley',
'Aisha',
'Aisleigh',
'Aisling',
'Aislinn',
'Aiyan',
'Aizza',
'Aja',
'Ajani',
'Ajay',
'Ajel',
'Akeel',
'Akeem',
'Akili',
'Akira',
'Akoya',
'Akuji',
'Al',
'Alaina',
'Alair',
'Alake',
'Alan',
'Alana',
'Alanna',
'Alara',
'Alastair',
'Alaura',
'Alazne',
'Alban',
'Albany',
'Albert',
'Alberta',
'Alberto',
'Albin',
'Albina',
'Alda',
'Aldan',
'Alden',
'Alder',
'Aldina',
'Aldo',
'Aldon',
'Aldona',
'Alec',
'Aleda',
'Alejandra',
'Alejandro',
'Alem',
'Alena',
'Alesia',
'Alessa',
'Aleta',
'Aletha',
'Alethea',
'Aletta',
'Alex',
'Alexa',
'Alexander',
'Alexandra',
'Alexandria',
'Alexei',
'Alexia',
'Alexis',
'Alexsandra',
'Alfonso',
'Alfred',
'Algeron',
'Ali',
'Alia',
'Alice',
'Alicia',
'Alida',
'Alijah',
'Alika',
'Alima',
'Alina',
'Alisa',
'Alisha',
'Alison',
'Alissa',
'Alitza',
'Alivia',
'Aliya',
'Aliyah',
'Aliza',
'Alize',
'Alka',
'Allegra',
'Allen',
'Allene',
'Allie',
'Allison',
'Allyson',
'Alma',
'Almeda',
'Alohilani',
'Alonzo',
'Aloysius',
'Alphonse',
'Alsatia',
'Alta',
'Altagrace',
'Althea',
'Alva',
'Alvin',
'Alyanah',
'Alyn',
'Alyse & alysse',
'Alyson',
'Alyssa',
'Amadeus',
'Amador',
'Amalia',
'Amalie',
'Aman',
'Amana',
'Amanda',
'Amandla',
'Amara',
'Amaranta',
'Amarante',
'Amaranth',
'Amaris',
'Amaryllis',
'Amaya',
'Amber',
'Ambrose',
'Ambrosia',
'Ame',
'Amelia',
'Amena',
'America',
'Amerigo',
'Ami',
'Amia',
'Amie',
'Amiel',
'Amilynne',
'Amina',
'Amir',
'Amiri',
'Amity',
'Amma',
'Amorina',
'Amos',
'Amy',
'An',
'Ana',
'Anabelle',
'Anahi',
'Anais',
'Anaiya',
'Analiese',
'Analise',
'Anana',
'Anando',
'Anastasia',
'Anatola',
'Anatole',
'Ande',
'Andra',
'Andralyn',
'Andre',
'Andrea',
'Andreas',
'Andres',
'Andrew',
'Andy',
'Anecia',
'Aneesa',
'Anel',
'Anemone',
'Anevay',
'Angel',
'Angela',
'Angelica',
'Angelina',
'Angelo',
'Angie',
'Angus',
'Anh',
'Ani',
'Ania',
'Anibal',
'Anika',
'Anila',
'Anisa',
'Anita',
'Anitra',
'Anja',
'Anlon',
'Ann',
'Anna',
'Annakin',
'Annalise',
'Annamae',
'Annamika',
'Anne',
'Anneke',
'Annette',
'Annice',
'Annick',
'Annika (anika, aneka)',
'Annis',
'Annissa',
'Anniyyah',
'Annora',
'Annot',
'Ansley',
'Anthea',
'Anthony',
'Anthy',
'Antigone',
'Antionette',
'Antipholus',
'Antoine',
'Antoinette',
'Antonia',
'Antonie',
'Antonio',
'Antony',
'Anu',
'Anwar',
'Anya',
'Aoko',
'Aolani',
'Aowyn',
'Aphrodite',
'Apollo',
'Appollo',
'Apria',
'April',
'Aquila',
'Arabela',
'Arabella',
'Araceli',
'Aram',
'Aran',
'Aravis',
'Arch',
'Archibald',
'Archie',
'Ardith',
'Aren',
'Aretha',
'Argus',
'Ari',
'Aria',
'Ariana',
'Ariel',
'Ariella',
'Arielle',
'Arien',
'Aries',
'Arissa',
'Arista',
'Ariza',
'Arkadiy',
'Arland',
'Arlen',
'Arlene',
'Arlo',
'Arlynda',
'Armand',
'Armande',
'Armando',
'Armelle',
'Armetha',
'Armina',
'Armon',
'Arnaud',
'Arne',
'Arnie',
'Arnold',
'Aron',
'Aroq',
'Arpan',
'Art',
'Artemis',
'Arthur',
'Artie',
'Arty',
'Arvid',
'Arvin',
'Aryiah',
'Aryka',
'Asa',
'Asabi',
'Asalie',
'Asasia',
'Ash',
'Asha',
'Ashai',
'Ashby',
'Asher',
'Ashlea',
'Ashlee',
'Ashleigh',
'Ashley',
'Ashlie',
'Ashling',
'Ashlyn',
'Ashtin',
'Ashton',
'Ashtyn',
'Asia',
'Asis',
'Asli',
'Asnee',
'Aspen',
'Asta',
'Asthore',
'Astin',
'Astra',
'Astrid',
'Atalo',
'Athalia',
'Athena',
'Atira',
'Atlas',
'Atreyu',
'Atticus',
'Attylaka',
'Auberta',
'Aubrey',
'Aubrianna',
'Audi',
'Audra',
'Audrey',
'August',
'Augustin',
'Augustus',
'Auhna',
'Aulii',
'Aure',
'Aurelia',
'Aurora',
'Aurorette',
'Austin',
'Autumn',
'Ava',
'Avalie',
'Avalon',
'Avel',
'Aveline',
'Avery',
'Avi',
'Avianna',
'Avis',
'Avital',
'Aviv',
'Aviva',
'Avongara',
'Axel',
'Axelle',
'Aya',
'Ayame',
'Ayanna',
'Ayeka',
'Ayla',
'Aylieah',
'Aylira',
'Ayoka',
'Aysha',
'Azana',
'Aziza',
'Azize',
'Azra',
'Azriel',
'Azuka',
'Azura',
'Azza',
'Baba',
'Babette',
'Bagley',
'Bahari',
'Bailey',
'Baird',
'Bairn',
'Bakula',
'Ballard',
'Balthasar',
'Balu',
'Bambi',
'Banji',
'Barake',
'Barb',
'Barbara',
'Barbie',
'Barclay',
'Bari',
'Barke',
'Barnabas',
'Barnard',
'Barney',
'Barny',
'Barr',
'Barran',
'Barrett',
'Barretta',
'Barry',
'Bart',
'Barth',
'Bartholemew',
'Barto',
'Barton',
'Baruch',
'Bary',
'Bash',
'Basil',
'Basiliso',
'Bast',
'Bastien',
'Baxter',
'Bayard',
'Bayen',
'Baylee',
'Bayo',
'Bea',
'Beata',
'Beate',
'Beatrice',
'Beatriz',
'Beau',
'Beauregard',
'Bebe',
'Bebhin',
'Becca',
'Beck',
'Becka',
'Becky',
'Bel',
'Bela',
'Belay',
'Belden',
'Belen',
'Belinda',
'Belita',
'Bell',
'Bella',
'Belle',
'Bellini',
'Ben',
'Bena',
'Benard',
'Benedict & benedicta',
'Benen',
'Benita',
'Benjamin',
'Benjy',
'Bennett',
'Benny',
'Benson',
'Berdine',
'Berg',
'Berke',
'Bern',
'Bernadette',
'Bernadine',
'Bernard',
'Berne',
'Bernice',
'Bernie',
'Berny',
'Bert',
'Bertha',
'Bertille',
'Beryl',
'Bess',
'Bessie',
'Beth',
'Bethan',
'Bethany',
'Betsy',
'Bette',
'Bettina',
'Betty',
'Beulah',
'Bevan',
'Beverly',
'Bevis',
'Beyla',
'Biana',
'Bianca',
'Bibiane',
'Bidelia',
'Bikita',
'Bilen',
'Bill',
'Billy',
'Bin',
'Bina',
'Bing',
'Bingham',
'Birch',
'Bisbee',
'Bishop',
'Biton',
'Bjorn',
'Blade',
'Blaine',
'Blair',
'Blaise',
'Blake',
'Blanche',
'Blaze',
'Blenda',
'Blinda',
'Bliss',
'Blithe',
'Blodwyn',
'Blossom',
'Blum',
'Bluma',
'Bly',
'Blythe',
'Bo',
'Boaz',
'Bob',
'Bodee',
'Bona',
'Bonaventure',
'Bond',
'Bonita',
'Bonna',
'Bonnie',
'Bono',
'Boone',
'Boris',
'Botarea',
'Bowen',
'Bowie',
'Boyd',
'Bracha',
'Brad',
'Bradden',
'Braden',
'Bradford',
'Bradley',
'Brady',
'Braeden',
'Braima',
'Bran',
'Brand',
'Brandee',
'Branden',
'Brandi',
'Brandie',
'Brandon',
'Brandy',
'Branellan',
'Brant',
'Braxton',
'Brayden',
'Brazil',
'Breanna',
'Breckin',
'Brede',
'Bree',
'Brein',
'Brend',
'Brenda',
'Brendan',
'Brenden',
'Brendon',
'Brenna',
'Brennan',
'Brennon',
'Brent',
'Brett',
'Brewster',
'Brian',
'Briana',
'Brianna',
'Brianne',
'Briar',
'Brice',
'Brick',
'Bridget',
'Bridgit',
'Brie',
'Brielle',
'Brier',
'Brigham',
'Brighton',
'Brigit',
'Brigitte',
'Brilane',
'Brilliant',
'Brin',
'Brina',
'Brinkley',
'Brinly',
'Brit',
'Brita',
'Britain',
'Britannia',
'Britany',
'Britt',
'Britt-marie',
'Brittani',
'Britannia',
'Brittany',
'Brittnee & brittney',
'Brock',
'Brody',
'Bron',
'Brondyn',
'Brone',
'Bronson',
'Bronwen',
'Brooke',
'Brooklyn',
'Brooks',
'Bruce',
'Bruno',
'Bryan',
'Bryanne',
'Bryant',
'Bryce',
'Brygid',
'Brynn',
'Bryony',
'Bryton',
'Buck',
'Bud',
'Buddy',
'Buffi',
'Buffy',
'Buford',
'Bunny',
'Burdette',
'Burke',
'Burlak',
'Burt',
'Burton',
'Butterfly',
'Buzz',
'Byrd',
'Byron',
'Cade',
'Cadee',
'Caden',
'Cadence',
'Cady',
'Cael',
'Caelan',
'Caeley',
'Caesar',
'Cai',
'Cailean',
'Caimile',
'Cain',
'Caine',
'Caique',
'Cairbre',
'Cairo',
'Cais',
'Caitlin',
'Caitlyn',
'Cal',
'Cala',
'Calais',
'Calandra',
'Calantha',
'Calder',
'Cale',
'Caleah',
'Caleb',
'Caley',
'Calhoun',
'Calix',
'Calixte',
'Calla',
'Callia',
'Calliope',
'Callista',
'Callum',
'Calvin',
'Calvine',
'Calypso',
'Cam',
'Cambria',
'Camden',
'Camdyn',
'Cameron',
'Camilla',
'Camille',
'Camilo',
'Camlin',
'Cana',
'Canaan',
'Candace',
'Candice',
'Candida',
'Candide',
'Candie',
'Candy',
'Cannon',
'Capri',
'Caprice',
'Caquise',
'Cara',
'Caralee',
'Caresse',
'Carey',
'Carha',
'Cari',
'Carina',
'Carissa',
'Carl',
'Carla',
'Carleton',
'Carley',
'Carlie',
'Carlisle',
'Carlos',
'Carlota',
'Carlotta',
'Carlton',
'Carly',
'Carmel',
'Carmela',
'Carmelita',
'Carmen',
'Carmine',
'Carol',
'Carolena',
'Carolina',
'Caroline',
'Carolyn',
'Caron',
'Carra',
'Carr',
'Carrick',
'Carrie',
'Carrieann',
'Carson',
'Carsyn',
'Carter',
'Carver',
'Cary',
'Casandra',
'Casey',
'Cashlin',
'Casimir',
'Casondra',
'Caspar',
'Casper',
'Cassandra',
'Cassee',
'Cassia',
'Cassidy',
'Cassie',
'Cassius',
'Castel',
'Catalin',
'Catherine',
'Cathy',
'Catrin',
'Caven',
'Cayla',
'Ceana',
'Cearo',
'Cece',
'Cecil',
'Cecile',
'Cecilia',
'Cecily',
'Cedric',
'Celeste',
'Celestyn',
'Celia',
'Celina',
'Celine',
'Cera',
'Cerise',
'Cesar',
'Ceylan',
'Chad',
'Chaela',
'Chaeli',
'Chailyn',
'Chaim',
'Chakotay',
'Chalina',
'Chalsie',
'Chana',
'Chance',
'Chancellor',
'Chandler',
'Chandra',
'Chanel',
'Chanell',
'Chanelle',
'Chaney',
'Channing',
'Channon',
'Chantal',
'Chantel',
'Chaplin',
'Chardonnay',
'Charis',
'Charisse',
'Charity',
'Charla',
'Charlee',
'Charleigh',
'Charlene',
'Charles',
'Charlet',
'Charlin',
'Charlot',
'Charlotte',
'Charmaine',
'Charo',
'Chars',
'Charu',
'Chas',
'Chase',
'Chastity',
'Chauncey',
'Chava',
'Chavi',
'Chay',
'Chaya',
'Chaylse',
'Chayza',
'Cheche',
'Chelsa',
'Chelsea',
'Chelsey',
'Chelsi',
'Chelsia',
'Chen',
'Cheney',
'Chenoa',
'Cher',
'Cheri',
'Cherie',
'Cherish',
'Cherlin',
'Cherry',
'Cheryl',
'Chesna',
'Chester',
'Cheston',
'Chet',
'Cheyenne',
'Cheyne',
'Chezarina',
'Chhaya',
'Chia',
'Chick',
'Chico',
'Chika',
'Chill',
'Chilton',
'Chimelu',
'Chimon',
'China',
'Chip',
'Chipo',
'Chirag',
'Chloe',
'Chloris',
'Chris',
'Chrissy',
'Christa',
'Christena',
'Christian',
'Christiana',
'Christie',
'Christina',
'Christine',
'Christopher',
'Christy',
'Chuck',
'Chumani',
'Chun',
'Chyna',
'Chynna',
'Cian',
'Cianna',
'Ciara',
'Cicely',
'Cicero',
'Cicily',
'Cid',
'Ciel',
'Cindy',
'Cira',
'Cirila',
'Ciro',
'Cirocco',
'Cissy',
'Citlalli',
'Claire',
'Clancy',
'Clara',
'Claral',
'Clare',
'Clarence',
'Clarissa',
'Clark',
'Clarke',
'Claude',
'Claudia',
'Claudine',
'Clay',
'Clayland',
'Clayton',
'Clea',
'Cleantha',
'Cleatus',
'Cleavant',
'Cleave',
'Cleavon',
'Clem',
'Clemens',
'Clement',
'Clementine',
'Cleo',
'Cleta',
'Cleveland',
'Cliff',
'Clifford',
'Clifton',
'Clint',
'Clinton',
'Clio',
'Clitus',
'Clive',
'Clodagh',
'Clodia',
'Cloris',
'Clove',
'Clover',
'Coby',
'Cocheta',
'Cody',
'Colby',
'Cole',
'Colebrook',
'Colette',
'Coligny',
'Colin',
'Colista',
'Colleen',
'Collice',
'Collin',
'Colm',
'Colman',
'Colton',
'Columbia',
'Comfort',
'Conan',
'Conlan',
'Conley',
'Conner',
'Connie',
'Connley',
'Connor',
'Conor',
'Conrad',
'Constance',
'Constantine',
'Consuela',
'Consuelo',
'Contavious',
'Content',
'Contessa',
'Conway',
'Conyers',
'Cooper',
'Cora',
'Coral',
'Coralia',
'Coralie',
'Corban',
'Corbin',
'Corby',
'Cordelia',
'Corentine',
'Corey',
'Corin',
'Corina',
'Corine',
'Corinna',
'Corinne',
'Corky',
'Corliss',
'Corlista',
'Cornelia',
'Cornelius',
'Cornell',
'Corretta',
'Corrine',
'Cort',
'Cory',
'Cosette',
'Cosima',
'Cosmo',
'Coty',
'Courtney',
'Coy',
'Coye',
'Craig',
'Cray',
'Creighton',
'Creola',
'Crescent',
'Crete',
'Crevan',
'Crispian',
'Crispin',
'Crissa',
'Cristee',
'Cristiana',
'Cristy',
'Crystal',
'Crysti',
'Cullen',
'Curry',
'Curt',
'Curtis',
'Cuthbert',
'Cutler',
'Cutter',
'Cy',
'Cybele',
'Cybil',
'Cybill',
'Cyd',
'Cyle',
'Cyma',
'Cyndi',
'Cynthia',
'Cypress',
'Cypriss',
'Cyrah',
'Cyril',
'Cyrus',
'D''lorah',
'Da-xia',
'Dabrisha',
'Dacey',
'Dafydd',
'Dagan',
'Dagmar',
'Dagobert',
'Dahlia',
'Dairne',
'Daisy',
'Dakir',
'Dakota',
'Dale',
'Dalene',
'Dalena',
'Dalia',
'Dalila',
'Dalit',
'Dallas',
'Dallin',
'Dalton',
'Dalva',
'Damaris',
'Dameion',
'Damian',
'Damiana',
'Damita',
'Damon',
'Dan',
'Dana',
'Danae',
'Dane',
'Danette',
'Dani',
'Danica',
'Daniel',
'Daniela',
'Danielle',
'Danika',
'Danil',
'Danitra',
'Dannie',
'Danniell',
'Danny',
'Dantae',
'Dante',
'Danton',
'Danyl',
'Daphne',
'Dara',
'Daray',
'Darby',
'Darcey',
'Darcie',
'Darcy',
'Dard',
'Daria',
'Darian',
'Darin',
'Dario',
'Daris',
'Darla',
'Darlene',
'Darnell',
'Darrell',
'Darren',
'Darrin',
'Darrion',
'Darrius',
'Darryl',
'Darshan',
'Darwin',
'Daryl',
'Dasan',
'Dasani',
'Dasha',
'Davan',
'Dave',
'Davi',
'David',
'Davida',
'Davin',
'Davina',
'Davis',
'Davonna',
'Davu',
'Dawn',
'Dawson',
'Dax',
'Daxton',
'Daylin',
'Dayna',
'Dayne',
'Dayton',
'Dea',
'Dean',
'Deandra',
'Deanna',
'Deanne',
'D''ante',
'Debbie',
'Debby',
'Deborah',
'Debra',
'Declan',
'Deidra',
'Deiondre',
'Deirdra',
'Deirdre',
'Deiter',
'Deja',
'Dejah',
'Dejalysse',
'Dejaun',
'Deka',
'Del',
'Delaine',
'Delaney',
'Delbert',
'Delfina',
'Delia',
'Delila',
'Delilah',
'Deliz',
'Della',
'Delling',
'Delores',
'Delphine',
'Delta',
'Delu',
'Demario',
'Dembe',
'Demetria',
'Demetrius',
'Demi',
'Demitrius',
'Demonio',
'Demoryea',
'Dempster',
'Den''e',
'Dena',
'Denali',
'Deniro',
'Denis',
'Denisa',
'Denise',
'Denna',
'Dennis',
'Dennise',
'Denver',
'Denyce',
'Denyne',
'Denyse',
'Denzil',
'Denzyl',
'Deo',
'Deon',
'Derby',
'Derek',
'Derex',
'Derica',
'Dermot',
'Derora',
'Derrick',
'Derron',
'Derry',
'Des',
'Desana',
'Desdemona',
'Deserae',
'Desi',
'Desiderio',
'Desiree',
'Desmond',
'Dessa',
'Dessie',
'Destiny',
'Deva',
'Devaki',
'Devereaux',
'Devi',
'Devin',
'Devon',
'Devorah',
'Devorit',
'Dewey',
'Dewitt',
'Dexter',
'Dextra',
'Deyana',
'Dezarae',
'Diallo',
'Diamond',
'Diana',
'Diane',
'Dianne',
'Diantha',
'Dianthe',
'Diata',
'Diavion',
'Dick',
'Didier',
'Didrika',
'Diego',
'Dijon',
'Diliza',
'Dillan',
'Dillian',
'Dillon',
'Dina',
'Dinah',
'Dino',
'Dion',
'Diondra',
'Dionna',
'Dionne',
'Dionysius',
'Dionysus',
'Dior',
'Dirk',
'Dixie',
'Dixon',
'Dmitri',
'Doane',
'Doctor',
'Doda',
'Doi',
'Dolly',
'Dolores',
'Dolph',
'Dom',
'Domani',
'Dominic',
'Dominick',
'Dominique',
'Dominy',
'Don',
'Donagh',
'Donahi',
'Donal',
'Donald',
'Donat',
'Donato',
'Donelle',
'Donna',
'Donnel',
'Donnica',
'Donny',
'Donovan',
'Dora',
'Doran',
'Dorcas',
'Dore',
'Dori',
'Doria',
'Dorian',
'Dorie',
'Dorinda',
'Doris',
'Dorit',
'Dorothea',
'Dorothy',
'Dorrance',
'Dorset',
'Dorsey',
'Dory',
'Dot',
'Dotty',
'Doug',
'Dougal',
'Douglas',
'Douglass',
'Dove',
'Doyle',
'Doyt',
'Drake',
'Dreama',
'Drew',
'Dru',
'Dryden',
'Duane',
'Duc',
'Dudley',
'Duena',
'Duff',
'Dugan',
'Duka',
'Duke',
'Dulce',
'Dulcea',
'Dulcina',
'Dulcinea',
'Dumi',
'Duncan',
'Dunixi',
'Dunja',
'Dunn',
'Dunne',
'Durlie',
'Duscha',
'Dustin',
'Dusty',
'Duvon',
'Duwane',
'Dwayne',
'Dwight',
'Dyan',
'Dyani',
'Dyanne',
'Dylan',
'Dyllis',
'Dyre',
'Dysis',
'Eadoin',
'Eamon',
'Earl',
'Earlene',
'Earnest',
'Easter',
'Easton',
'Eavan',
'Ebony',
'Echo',
'Ed',
'Edalene',
'Edaline',
'Edana',
'Edda',
'Eddie',
'Eddy',
'Edeline',
'Eden',
'Edena',
'Edgar',
'Edie',
'Edison',
'Edita',
'Edith',
'Edmund',
'Edna',
'Edric',
'Edward',
'Edwardo',
'Edwin',
'Edwina',
'Edwiygh',
'Edythe',
'Effie',
'Efrat',
'Efrem',
'Egan',
'Ehren',
'Eileen',
'Eilis',
'Eiman',
'Eitan',
'Ejlicey',
'Ela',
'Elaina',
'Elaine',
'Elan',
'Elana',
'Elani',
'Elata',
'Elda',
'Elden',
'Eldon',
'Eldora',
'Eleanor',
'Electra',
'Elena',
'Eleni',
'Elephteria',
'Elgin',
'Eli',
'Elia',
'Eliana',
'Elias',
'Elie',
'Elijah',
'Elin',
'Eliora',
'Eliot',
'Elisabeth',
'Elise',
'Elisha',
'Elita',
'Eliza',
'Elizabeth',
'Eljah',
'Elkan',
'Elke',
'Ella',
'Ellard',
'Elle',
'Ellema',
'Ellen',
'Ellery',
'Ellie',
'Elliot',
'Elliott',
'Ellis',
'Ellisa',
'Elmo',
'Elodie',
'Eloise',
'Elsa',
'Elsie',
'Elspeth',
'Elton',
'Elu',
'Elva',
'Elvin',
'Elvina',
'Elvira',
'Elvis',
'Ely',
'Elysia',
'Elyssa',
'Elza',
'Emaline',
'Emani',
'Emanuel',
'Emanuele',
'Emele',
'Emene',
'Emera',
'Emerald',
'Emery',
'Emese',
'Emil',
'Emilia',
'Emilie',
'Emiliee',
'Emilio',
'Emily',
'Emira',
'Emma',
'Emmagin',
'Emmanuel',
'Emmet',
'Emmett',
'Emmly',
'Emory',
'Enid',
'Ennis',
'Enos',
'Enrico',
'Envy',
'Eolande',
'Ephraim',
'Epifanio',
'Er',
'Erasmus',
'Eri',
'Eric',
'Erica',
'Erik',
'Erika',
'Erimentha',
'Erin',
'Eris',
'Erland',
'Erma',
'Erme',
'Ermin',
'Erna',
'Ernest',
'Ernie',
'Erno',
'Eron',
'Eros',
'Errin',
'Errol',
'Erv',
'Ervin',
'Erwin',
'Eryk',
'Esben',
'Eshe',
'Esma',
'Esmerelda',
'Essie',
'Esteban',
'Estefania',
'Estelle',
'Ester',
'Esther',
'Estralita',
'Etan',
'Etana',
'Eternity',
'Ethan',
'Ethel',
'Ethelda',
'Etta',
'Eudora',
'Eugene',
'Eulalia',
'Eulalie',
'Eupemia',
'Euphemia',
'Euridice',
'Eva',
'Evalina',
'Evan',
'Evane',
'Evangeline',
'Evania',
'Eve',
'Evelia',
'Evelien',
'Evelyn',
'Everett',
'Evette',
'Evi',
'Evie',
'Evita',
'Evonne',
'Ewa',
'Eyal',
'Eydie',
'Ezekiel',
'Ezra',
'Fabian',
'Fabienne',
'Fabiola',
'Fabricio',
'Fabrizio',
'Fabunni',
'Fahaad',
'Fahd',
'Faire',
'Fairfax',
'Fairly',
'Faith',
'Fala',
'Fale',
'Fallon',
'Falona',
'Fanchon',
'Fane',
'Farah',
'Farica',
'Faris',
'Farley',
'Farrah',
'Farrell',
'Farren',
'Farrest',
'Fatima',
'Fatmira',
'Fausta',
'Faustine',
'Favian',
'Fawn',
'Fay',
'Faye',
'Faylinn',
'Faymatu',
'Fedora',
'Feivel',
'Feleti',
'Felice',
'Felicia',
'Felicity',
'Felimy',
'Felina',
'Felix',
'Fell',
'Felton',
'Fennella',
'Feoras',
'Ferdinand',
'Fergal',
'Fergus',
'Ferguson',
'Fern',
'Fernandez',
'Fernando',
'Ferris',
'Ferrol',
'Fiachra',
'Fico',
'Fidel',
'Fidelia',
'Fidelio',
'Fidella',
'Field',
'Filbert',
'Filia',
'Filipina',
'Fineen',
'Finley',
'Finn',
'Finna',
'Finola',
'Fiona',
'Fionan',
'Fionn',
'Fionnula',
'Fiorenza',
'Fisk',
'Fisseha',
'Flan',
'Flannery',
'Flavia',
'Flavian',
'Fletcher',
'Fleur',
'Flint',
'Flo',
'Flora',
'Floramaria',
'Florence',
'Floria',
'Floriane',
'Florida',
'Florrie',
'Flower',
'Floyd',
'Flynn',
'Fola',
'Fonda',
'Fondea',
'Forbes',
'Ford',
'Fordon',
'Forrest',
'Forrester',
'Forster',
'Fortune',
'Foster',
'Fotini',
'Fountain',
'Fox',
'Foy',
'Fraley',
'Fran',
'Frances',
'Francesca',
'Francis',
'Francois',
'Frank',
'Franklin',
'Franz',
'Frasier',
'Frayne',
'Fred',
'Freddy',
'Frederica',
'Frederick',
'Fredrica',
'Freed',
'Freeman',
'Freja',
'Fremont',
'Freya',
'Frieda',
'Fritz',
'Fritzi',
'Frode',
'Fronde',
'Fruma',
'Frye',
'Fulbright',
'Fuller',
'Fynn',
'Gabby',
'Gabe',
'Gabi',
'Gabriel',
'Gabriela',
'Gabriella',
'Gabrielle',
'Gaby',
'Gaetan',
'Gaetane',
'Gafna',
'Gage',
'Gail',
'Gailia',
'Gaille',
'Gainell',
'Gaius',
'Gale',
'Galen',
'Galeno',
'Gali',
'Gallagher',
'Gallia',
'Galvin',
'Gamada',
'Gamal',
'Gamaliel',
'Ganaya',
'Ganit',
'Gannon',
'Ganya',
'Gardner',
'Gareth',
'Garfield',
'Garland',
'Garren',
'Garret',
'Garrett',
'Garrick',
'Garrison',
'Garron',
'Garry',
'Garson',
'Garth',
'Garvey',
'Gary',
'Gates',
'Gaurav',
'Gautier',
'Gavan',
'Gavin',
'Gavivi',
'Gavril',
'Gawain',
'Gay',
'Gaye',
'Gayle',
'Gaylord',
'Gaynell',
'Gazali',
'Gazelle',
'Gazit',
'Gella',
'Gelsey',
'Gemma',
'Gene',
'Genell',
'Genesis',
'Genet',
'Geneva',
'Genevieve',
'Genna',
'Gent',
'Geoff',
'Geoffrey',
'Geordi',
'George',
'Georgette',
'Georgia',
'Georgina',
'Gerald',
'Geraldene',
'Geraldine',
'Geraldo',
'Gerard',
'Gerardo',
'Gerene',
'Gerda',
'Geri',
'Gerik',
'Germain',
'Germaine',
'Gerodi',
'Gerry',
'Gershom',
'Gertrude',
'Gethan',
'Ghita',
'Giacomo',
'Gian',
'Gianina',
'Gianna',
'Giavanna',
'Gibson',
'Gideon',
'Gigi',
'Gil',
'Gilbert',
'Gilda',
'Giles',
'Gili',
'Gillespie',
'Gillian',
'Gin',
'Gina',
'Ginacarlo',
'Ginata',
'Ginger',
'Ginny',
'Gino',
'Giolla',
'Giorgio',
'Giovanett',
'Giovanni',
'Gira',
'Gisela',
'Giselle',
'Gita',
'Gitano',
'Gitel',
'Gittel',
'Giulio',
'Giuseppe',
'Giva',
'Giza',
'Gladys',
'Glen',
'Glenda',
'Glenn',
'Glenna',
'Glennis',
'Glenys',
'Glinora',
'Glora',
'Gloria',
'Glory',
'Glyn',
'Glynis',
'Glynnis',
'Godana',
'Godfrey',
'Golda',
'Goldie',
'Goldy',
'Gomer',
'Gordon',
'Gordy',
'Grace',
'Gracie',
'Grady',
'Graham',
'Gram',
'Grania',
'Grant',
'Granville',
'Gratia',
'Gratiana',
'Grayce',
'Grayson',
'Grazia',
'Greer',
'Greg',
'Gregg',
'Gregory',
'Greta',
'Gretchen',
'Gretel',
'Grier',
'Griffin',
'Griselda',
'Grizelda',
'Grover',
'Guadalupe',
'Gualtier',
'Guban',
'Gudrun',
'Guenevere',
'Guido',
'Guinevere',
'Gunda',
'Gunnar',
'Gunther',
'Gur',
'Gure',
'Guri',
'Gurit',
'Gusanthony',
'Gustav',
'Guy',
'Gwen',
'Gwendolyn',
'Gwyn',
'Gwyneth',
'Gypsy',
'Haben',
'Habib',
'Hachi',
'Hada',
'Hadar',
'Hadassah',
'Hadley',
'Hafiz',
'Haile',
'Haines',
'Hajari',
'Hal',
'Halen',
'Haley',
'Hali',
'Halim',
'Halley',
'Halona',
'Ham',
'Hamal',
'Hamdia',
'Hamilton',
'Hamlet',
'Hamlin',
'Hampton',
'Hana',
'Hanan',
'Hanibal',
'Hanifa',
'Hank',
'Hanley',
'Hanna',
'Hannah',
'Hannelore',
'Hannibal',
'Hans',
'Hanzila',
'Hao',
'Haracha',
'Harel or harrell',
'Harlan',
'Harley',
'Harlow',
'Harmon',
'Harmony',
'Harold',
'Haroun',
'Harper',
'Harriet',
'Harrison',
'Harry',
'Hart',
'Hartwell',
'Haru',
'Haruki',
'Haruko',
'Haruni',
'Harva',
'Harvey',
'Hasad',
'Hasan',
'Hasana',
'Hastin',
'Hateya',
'Haven',
'Hawa',
'Hayden',
'Haylee',
'Hayleigh',
'Hayley',
'Hayward',
'Hazeka',
'Hazel',
'Hazelle',
'Hazina',
'Heath',
'Heather',
'Heaven',
'Heavynne',
'Hector',
'Hedda',
'Hedia',
'Hedva',
'Hedwig',
'Hedy',
'Hedya',
'Heidi',
'Heinz',
'Helaina',
'Helaine',
'Helen',
'Helena',
'Helene',
'Helga',
'Helia',
'Heller',
'Heloise',
'Henri',
'Henrietta',
'Henrik',
'Henry',
'Hera',
'Herb',
'Herbert',
'Herbst',
'Heremon',
'Herman',
'Herschel',
'Hertz',
'Hesper',
'Hester',
'Hestia',
'Hewitt',
'Hidalgo',
'Hidi',
'Hiero',
'Hija',
'Hila',
'Hilaire',
'Hilary',
'Hilda',
'Hilde',
'Hillary',
'Hilzarie',
'Hina',
'Hinda',
'Hiroko',
'Hirsi',
'Holden',
'Holiday',
'Hollace',
'Holli',
'Hollie',
'Hollis',
'Holly',
'Hollye',
'Holt',
'Homer',
'Honey',
'Honora',
'Honoria',
'Hope',
'Horace',
'Horst',
'Horus',
'Hosea',
'Hosein',
'Hoshi',
'Hoshiko',
'Houston',
'Howard',
'Howe',
'Howell',
'Howie',
'Hoyt',
'Hubert',
'Hue',
'Huela',
'Huey',
'Hugh',
'Hugo',
'Humphrey',
'Hunter',
'Hurley',
'Huslu',
'Huso',
'Hussein',
'Huxley',
'Hy',
'Hyacinth',
'Hyman',
'Hyroniemus',
'Ian',
'Ianna',
'Ianthe',
'Ida',
'Idalee',
'Idalia',
'Idana',
'Idande',
'Idania',
'Idra',
'Iesha',
'Ife',
'Ifeoma',
'Igball',
'Ige',
'Iggi',
'Iggy',
'Ignacio',
'Ignatius',
'Ike',
'Ikechukwa',
'Ikenna',
'Ikennachukwa',
'Ilana',
'Ilario',
'Ileana',
'Ilia',
'Iliana',
'Ilit',
'Ilo',
'Ilom',
'Ilori',
'Ilse',
'Ilyssa',
'Iman',
'Imogene',
'Ina',
'Inari',
'Inci',
'Independence',
'India',
'Indira',
'Indra',
'Inez',
'Infinity',
'Inga',
'Inge',
'Ingrid',
'Inoke',
'Iola',
'Iolani',
'Ion',
'Iona',
'Ipo',
'Ira',
'Iram',
'Irene',
'Iria',
'Irida',
'Irina',
'Iris',
'Irisa',
'Irma',
'Irving',
'Iryl',
'Isaac',
'Isabel',
'Isabis',
'Isadora',
'Isaiah',
'Isanne',
'Isao',
'Isha',
'Isi',
'Isidro',
'Isis',
'Isleen',
'Ismaela',
'Ismail',
'Ismet',
'Isolde',
'Isra',
'Israel',
'Issay',
'Ita',
'Italia',
'Iuliana',
'Iulianna',
'Ivan',
'Ivet',
'Ivi',
'Ivie',
'Ivo',
'Ivria',
'Ivrit',
'Ivy',
'Iyana',
'Iyende',
'Iyindi',
'Izefia',
'Izegbe',
'Izellah',
'Ja',
'Jaala',
'Jaali',
'Jabari',
'Jabilo',
'Jabir',
'Jabulani',
'Jace',
'Jacinda',
'Jacinta',
'Jack',
'Jackie',
'Jackson',
'Jaclyn',
'Jacob',
'Jacoba',
'Jacqueline',
'Jacquelyn',
'Jacques',
'Jacquetta',
'Jacqui',
'Jacquleyn',
'Jada',
'Jade',
'Jaden',
'Jadon',
'Jadyn',
'Jael',
'Jafaru',
'Jahazel',
'Jai',
'Jaime',
'Jaimie',
'Jake',
'Jaleel',
'Jalen',
'Jalene',
'Jalil',
'Jalila',
'Jamal',
'Jamar',
'James',
'Jamesa',
'Jamese',
'Jami',
'Jamie',
'Jamila',
'Jan',
'Jana',
'Janae',
'Janai',
'Jancy',
'Jane',
'Janel',
'Janelis',
'Janelle',
'Janet',
'Janette',
'Jania',
'Janiah',
'Janice',
'Janina',
'Janine',
'Jantz',
'Japheth',
'Jara',
'Jarah',
'Jared',
'Jariath',
'Jarod',
'Jarrett',
'Jarvis',
'Jasa',
'Jasalynn',
'Jasmine',
'Jason',
'Jasper',
'Jatupol',
'Jaurene',
'Javen',
'Javier',
'Jay',
'Jayce',
'Jayden',
'Jaymar',
'Jayme',
'Jazel',
'Jazlynn',
'Jealexiz',
'Jean',
'Jeanette',
'Jeanine',
'Jeanne',
'Jeb',
'Jebediah',
'Jedidiah',
'Jeff',
'Jefferson',
'Jeffrey',
'Jemima',
'Jena',
'Jenelle',
'Jenesis',
'Jengo',
'Jenike',
'Jenis',
'Jenna',
'Jennelle',
'Jennessa',
'Jenni',
'Jennie',
'Jennifer',
'Jennika',
'Jenny',
'Jens',
'Jensen',
'Jered',
'Jeremiah',
'Jeremy',
'Jeri',
'Jerica',
'Jericho',
'Jermaine',
'Jermica',
'Jerod',
'Jeroen',
'Jerold',
'Jerom',
'Jerome',
'Jerommeke',
'Jerrell',
'Jerrick',
'Jerry',
'Jerusha',
'Jess',
'Jessalyn',
'Jesse',
'Jessica',
'Jessie',
'Jesup',
'Jesus',
'Jethro',
'Jett',
'Jewel',
'Jewelysa',
'Jewell',
'Jewl',
'Jewlana',
'Jezebel',
'Jianna',
'Jihan',
'Jill',
'Jillian',
'Jim',
'Jimi',
'Jimmy',
'Jin',
'Jina',
'Jinda',
'Jira',
'Jiro',
'Joan',
'Joann',
'Joanna',
'Joanne',
'Job',
'Jocasta',
'Jocelyn',
'Jock',
'Joda',
'Jodi',
'Jodie',
'Jody',
'Joe',
'Joel',
'Joelle',
'Joey',
'Johann',
'Johanna',
'John',
'Johnny',
'Joi',
'Joie',
'Jola',
'Jolene',
'Jolie',
'Jolina',
'Jon',
'Jonah',
'Jonathan',
'Jonny',
'Jordan',
'Joren',
'Jorge',
'Jorn',
'Jorrin',
'Jorunn',
'Jorryn',
'Jory',
'Jose',
'Josef',
'Joseph',
'Josephine',
'Joselyn',
'Josh',
'Joshua',
'Joshwa',
'Josiah',
'Josie',
'Joslyn',
'Josue',
'Jovan',
'Jovana',
'Jovianne',
'Jovita',
'Joy',
'Joyce',
'Joylyn',
'Juan',
'Juana',
'Juandalynn',
'Juani',
'Juanita',
'Jubal',
'Jud',
'Judah',
'Judd',
'Jude',
'Judith',
'Judson',
'Judy',
'Juji',
'Jules',
'Julia',
'Julian',
'Juliana',
'Julianna',
'Julianne',
'Julliatte',
'Julie',
'Juliet',
'Julieta',
'Juliette',
'Julio',
'Julisa',
'Julissa',
'Julisha',
'July',
'Jumoke',
'Jun',
'June',
'Junior',
'Juniper',
'Justin',
'Justina',
'Justine',
'Justise',
'Justyn',
'Kabibe',
'Kabili',
'Kabira',
'Kacela',
'Kacey',
'Kachina',
'Kacy',
'Kadeem',
'Kadin',
'Kael',
'Kaeley',
'Kaelin',
'Kaethe',
'Kahlia',
'Kahlilia',
'Kai',
'Kaikura',
'Kailey',
'Kaitlin',
'Kaitlyn',
'Kaiya',
'Kalani',
'Kalb',
'Kalea',
'Kaleanne',
'Kaleb',
'Kaleena',
'Kaleeyse',
'Kalena',
'Kalei',
'Kaleigh',
'Kaley',
'Kali',
'Kalila',
'Kalilah',
'Kalin',
'Kalinda',
'Kalista',
'Kalli',
'Kamal',
'Kamali',
'Kamari',
'Kamau',
'Kambriea',
'Kame',
'Kamella',
'Kameryn',
'Kamil',
'Kamilia',
'Kande',
'Kandice',
'Kane',
'Kapi',
'Kara',
'Karan',
'Karana',
'Kare',
'Kareem',
'Karen',
'Karena',
'Kari',
'Karia',
'Karie',
'Karik',
'Karim',
'Karimah',
'Karina',
'Karis',
'Karissa',
'Karl',
'Karla',
'Karli',
'Karma',
'Karmael',
'Karmina',
'Karna',
'Karston',
'Kasi',
'Kasim',
'Kaspar',
'Kassandra',
'Kassel',
'Kassia',
'Kat',
'Kata',
'Kate',
'Katelin',
'Katharine',
'Katherine',
'Kathie',
'Kathleen',
'Kathryn',
'Kathy',
'Katie',
'Katina',
'Katiryn',
'Kato',
'Kator',
'Katrina',
'Katy',
'Kaula',
'Kawena',
'Kay',
'Kaya',
'Kaycee',
'Kaydee',
'Kayden',
'Kayin',
'Kayla',
'Kaylana',
'Kaylee',
'Kaylee-ann',
'Kaylen',
'Kaylia',
'Kayo',
'Kayonga',
'Kaz',
'Kazi',
'Kazimierz',
'Kazu',
'Keagan',
'Keaira',
'Keanu',
'Keara',
'Keb',
'Kedem',
'Kedma',
'Keefe',
'Keefer',
'Keegan',
'Keelan',
'Keelia',
'Keely',
'Keena',
'Keenan',
'Keene',
'Keeya',
'Kefira',
'Kei',
'Keiji',
'Keiki',
'Keiko',
'Keir',
'Keira',
'Keiran',
'Keisha',
'Keita',
'Keitaro',
'Keith',
'Kelby',
'Kelda',
'Kele',
'Kelea',
'Kelii',
'Kelila',
'Kellan',
'Kellee',
'Kellen',
'Kelley',
'Kelli',
'Kellie',
'Kellsie',
'Kelly',
'Kelsey',
'Kelsi',
'Kelsie-lynn',
'Kelton',
'Kelvin',
'Kemmora',
'Ken',
'Kenadia',
'Kenadie',
'Kenda',
'Kendall',
'Kendi',
'Kendis',
'Kendra',
'Keneisha',
'Kenisha',
'Kenley',
'Kenna',
'Kennan',
'Kennedi',
'Kennedie',
'Kennedy',
'Kenneth',
'Kenny',
'Kent',
'Kenton',
'Kenvee',
'Kenyi',
'Kenyon',
'Kenzie',
'Keola',
'Keon',
'Keosha',
'Kera',
'Kerda',
'Keren',
'Kerica',
'Kermit',
'Kern',
'Kerr',
'Kerri',
'Kerry',
'Kerstiana',
'Kesin',
'Kessler',
'Ketara',
'Keturah',
'Kevin',
'Kevina',
'Key',
'Keyanna',
'Keyon',
'Keytanna',
'Keziah',
'Khalida',
'Khalil',
'Khalipha',
'Khiry',
'Khrystin',
'Khursten',
'Kia',
'Kiah',
'Kiaira',
'Kiana',
'Kiandra',
'Kiara',
'Kibibe',
'Kiden',
'Kieran',
'Kiersten',
'Kiho',
'Kiki',
'Kiley',
'Killian',
'Kim',
'Kimball',
'Kimberly',
'Kimi',
'Kimmy',
'Kin',
'Kina',
'Kindra',
'Kinfe',
'King',
'Kingston',
'Kinipela',
'Kioko',
'Kione',
'Kiora',
'Kipling',
'Kiplyn',
'Kipp',
'Kira',
'Kirabo',
'Kiral',
'Kirby',
'Kiri',
'Kiril',
'Kirk',
'Kiros',
'Kirra',
'Kirsi',
'Kirsten',
'Kirstie',
'Kirstin',
'Kirstyn',
'Kisha',
'Kishi',
'Kita',
'Kitoko',
'Kitra',
'Kitty',
'Kiyo',
'Kiyone',
'Kiyoshi',
'Kizzy',
'Kjiristen',
'Klania',
'Klaus',
'Klitos',
'Knut',
'Koda',
'Koen',
'Kohana',
'Koine',
'Koko',
'Kola',
'Kole',
'Kolton',
'Konane',
'Konrad',
'Kordell',
'Koren',
'Korene',
'Kori',
'Korina',
'Korinne',
'Korrie',
'Kortnie',
'Kory',
'Kostya',
'Koto',
'Kourtney',
'Kozue',
'Kris',
'Krisidian',
'Krista',
'Kristen',
'Kristian',
'Kristin',
'Kristina',
'Kristine',
'Kristopher',
'Kristy',
'Krystal',
'Krystyn',
'Kuma',
'Kumi',
'Kumiko',
'Kuniko',
'Kura',
'Kuri',
'Kuron',
'Kurt',
'Kwanita',
'Kyla',
'Kylan',
'Kyle',
'Kyleigh',
'Kylene',
'Kyler',
'Kyley',
'Kylia',
'Kylie',
'Kymberlee',
'Kyna',
'Kynan',
'Kynthia',
'Kynton',
'Kyra',
'Kyrene',
'Kyria',
'L''pree',
'La don',
'Lacey',
'Lachlan',
'Lacy',
'Laddie',
'Ladona',
'Lael',
'Lahela',
'Lahoma',
'Laila',
'Lailani',
'Laina',
'Laird',
'Lajuan',
'Lajuana',
'Lakeisha',
'Lakin',
'Lala',
'Lale',
'Laleh',
'Lalena',
'Lali',
'Lalita',
'Lalo',
'Lamar',
'Lamesha',
'Lamia',
'Lamont',
'Lan',
'Lana',
'Lanai',
'Lanaya',
'Lance',
'Lancelot',
'Landen',
'Landers',
'Landis',
'Landon',
'Landry',
'Lane',
'Lanelle',
'Lang',
'Langer',
'Langston',
'Lani',
'Lanier',
'Lankston',
'Lanza',
'Laqueta',
'Lara',
'Laree',
'Laraine',
'Lareina',
'Larie',
'Larissa',
'Lark',
'Larkin',
'Larry',
'Lars',
'Larue',
'Larvall',
'Lasca',
'Lashanda',
'Lassie',
'Laszlo',
'Latanya',
'Latasha',
'Lateefa',
'Laterian',
'Latham',
'Lathrop',
'Latika',
'Latimer',
'Latisha',
'Latoya',
'Laura',
'Lauren',
'Laurence',
'Laurie',
'Laval',
'Lavaun',
'Lave',
'Laverne',
'Lavey',
'Lavi',
'Lavonn',
'Lavonne',
'Lawanda',
'Lawrence',
'Lawrencia',
'Layla',
'Layne',
'Lazar',
'Lazarus',
'Lazzaro',
'Le',
'Lea',
'Leaerialle',
'Leah',
'Leal',
'Leala',
'Leander',
'Leane',
'Leanna',
'Leanne',
'Learay',
'Leata',
'Leavitt',
'Lecea',
'Lechelsea',
'Ledarrius',
'Leda',
'Ledell',
'Lee',
'Leeanne',
'Leena',
'Leeto',
'Leevy',
'Legend',
'Lehana',
'Leia',
'Leif',
'Leigh',
'Leigha',
'Leighanna',
'Leila',
'Leilani',
'Leimomi',
'Lekey',
'Lel',
'Lela',
'Leland',
'Lelia',
'Lamanuel',
'Lemuel',
'Lena',
'Lencho',
'Leneva',
'Lenka',
'Lenna',
'Lenora',
'Lenore',
'Lente',
'Leo',
'Leola',
'Leoma',
'Leon',
'Leona',
'Leonard',
'Leone',
'Leoni',
'Leonie',
'Leonora',
'Leonzal',
'Leopold',
'Leora',
'Leota (f)',
'Leotas (m)',
'Laquenna',
'Laqueenie',
'Leigh',
'Lerato',
'Lerin',
'Leroy',
'Les',
'Lesa',
'Lesha',
'Lesley',
'Leslie',
'Less',
'Lester',
'Leticia or letticia',
'Letitia',
'Letoya',
'Lev',
'Levana',
'Leverett',
'Levi',
'Levia',
'Levon',
'Lewa',
'Lewis',
'Lex',
'Lexi',
'Lexine',
'Lexiss',
'Leyva',
'Lia',
'Liam',
'Lian',
'Liana',
'Libba',
'Libby',
'Liberty',
'Lida',
'Lidia',
'Lien',
'Liko',
'Lila',
'Lilac',
'Lilah',
'Lilia',
'Liliauna',
'Liliha',
'Lilith',
'Lilli',
'Lillian',
'Lillion',
'Lilo',
'Lily',
'Lin',
'Lina',
'Lincoln',
'Linda',
'Lindley',
'Lindsay',
'Lindsey',
'Lindy',
'Linette',
'Linna',
'Linus',
'Liona',
'Lionel',
'Lirit',
'Lisa',
'Lisandra',
'Lisbet',
'Lisette',
'Lisimba',
'Lisle',
'Lita',
'Liv',
'Livana',
'Livi',
'Livia',
'Livvy',
'Lixue',
'Liz',
'Liza',
'Lizbeth',
'Lizett',
'Lizina',
'Llewellyn',
'Lloyd',
'Loba',
'Lobo',
'Locke',
'Loe',
'Logan',
'Lois',
'Lola',
'Lolonyo',
'Lolovivi',
'Lolymiya',
'Loman',
'Lona',
'Lonato',
'London',
'Lonna',
'Lonni',
'Lonnie',
'Lonnit',
'Lora',
'Lorelei',
'Lorena',
'Lorenzo',
'Loretta',
'Lori',
'Lorie',
'Lorimer',
'Lorin',
'Loring',
'Lorna',
'Lorne',
'Lorraine',
'Lorretta',
'Lory',
'Lotta',
'Lotte',
'Lotus',
'Lou',
'Louanna',
'Loughlin',
'Louis',
'Louisa',
'Louise',
'Loura',
'Lourana',
'Lourdes',
'Lourine',
'Love',
'Lovette',
'Lovey',
'Lovie',
'Lowell',
'Luam',
'Luana',
'Lucas',
'Luce',
'Lucia',
'Lucian',
'Lucie',
'Lucille',
'Lucinda',
'Lucio',
'Lucius',
'Lucretia',
'Lucus',
'Lucy',
'Ludema',
'Ludlow',
'Ludwig',
'Luigi',
'Luis',
'Luke',
'Lula',
'Lulli',
'Lulu',
'Luna',
'Lundy',
'Lunette',
'Lupe',
'Lupita',
'Luthando',
'Luther',
'Ly',
'Lyannie',
'Lyde',
'Lydette',
'Lydia',
'Lyle',
'Lyn',
'Lynae',
'Lynch',
'Lynda',
'Lynde',
'Lyndel',
'Lyndon',
'Lyndsey',
'Lynelle',
'Lynette',
'Lynley',
'Lynn',
'Lynna',
'Lynne',
'Lynnea',
'Lynton',
'Lyre',
'Lyris',
'Lysa',
'Lysander',
'Lysandra',
'Maarten',
'Maat',
'Mabel',
'Mac',
'Macayle',
'Mace',
'Maceo',
'Macha',
'Mackenzie',
'Mactarr',
'Macy',
'Madaleno',
'Maddox',
'Madeleine',
'Madelia',
'Madeline',
'Madge',
'Madison & madyson',
'Madonna',
'Madra',
'Madrona',
'Mae',
'Maeko',
'Maemi',
'Maeron',
'Maeryn',
'Maeve',
'Magan',
'Magda',
'Magdalena',
'Magdalene',
'Magee',
'Maggie',
'Magnar',
'Magnolia',
'Magua',
'Maha',
'Mahala',
'Mahalia',
'Mahari',
'Mahdi',
'Mahitable',
'Mai',
'Maia',
'Maik',
'Maille',
'Maimun',
'Maire',
'Mairi',
'Maisie',
'Maj',
'Major',
'Makaih',
'Makaila',
'Makalah',
'Makale',
'Makalo',
'Makani',
'Makaveli',
'Makayla',
'Makenna',
'Makenzy',
'Makoto',
'Makya',
'Malachi',
'Malaika',
'Malana',
'Malane',
'Malasy',
'Malaya',
'Malcolm',
'Malia',
'Malik',
'Malin',
'Malina',
'Malise',
'Malissa',
'Malka',
'Mallory',
'Malo',
'Malomo',
'Malone',
'Malory',
'Malyn',
'Mamie',
'Mana',
'Mandel',
'Mandelina',
'Mandell',
'Mandy',
'Manica',
'Manina',
'Manning',
'Manolin',
'Manon',
'Mansa',
'Manuel',
'Manuela',
'Maori',
'Mara',
'Marash',
'Marc',
'Marcel',
'Marcell',
'Marcella',
'Marcello',
'Marcellus',
'Marchelle',
'Marcia',
'Marcie',
'Marco',
'Marcus',
'Marcy',
'Mardell',
'Mardi',
'Mare',
'Maree',
'Marek',
'Maren',
'Marenda',
'Margaret',
'Margarita',
'Marge',
'Margo',
'Margot',
'Marguerite',
'Mari',
'Maria',
'Mariah',
'Mariam',
'Marianne',
'Mariatu',
'Maribel',
'Maribeth',
'Marie',
'Mariel',
'Mariella',
'Marietta',
'Marigold',
'Marijke',
'Marika',
'Marilu',
'Marilyn',
'Marin',
'Marina',
'Marinel',
'Marino',
'Mario',
'Marion',
'Maris',
'Marisa',
'Marisela',
'Marisol',
'Marissa',
'Maritza',
'Marius',
'Marjean',
'Marjorie',
'Mark',
'Marka',
'Marlas',
'Marlena',
'Marlene',
'Marli',
'Marlie',
'Marlin',
'Marlo',
'Marlon',
'Marlow',
'Marly',
'Marnie',
'Marnin',
'Marnina',
'Maro',
'Marquette',
'Marquis',
'Marrim',
'Marsha',
'Marshall',
'Marta',
'Martha',
'Martin',
'Martina',
'Marty',
'Marv',
'Marva',
'Marvel',
'Marvela',
'Marvene',
'Marvin',
'Mary',
'Maryjane',
'Masada',
'Mashaka',
'Mason',
'Massimo',
'Matana',
'Mateo',
'Mathilda',
'Mathilde',
'Matia',
'Matias',
'Matilda',
'Matilde',
'Matisse',
'Matrika',
'Matsu',
'Matt',
'Matteo',
'Matthew',
'Matthias',
'Mattox',
'Matty',
'Matusio',
'Maude',
'Mauli',
'Maura',
'Maureen',
'Maurice',
'Maurilio',
'Maurizio',
'Mauro',
'Mauve',
'Maverick',
'Mavis',
'Max',
'Maxim',
'Maxima',
'Maxime',
'Maximilian',
'Maximos',
'Maxine',
'Maxwell',
'May',
'Maya',
'Mayan',
'Mayda',
'Mayes',
'Maylin',
'Maymay',
'Maynard',
'Mayra',
'Mazi',
'Mazya',
'Mazzy',
'Mcdade',
'Mckale',
'Mckayla',
'Mckenna',
'Mckenzie',
'Mckile',
'Mcnamara',
'Mea',
'Mead',
'Meagan',
'Meaghan',
'Meara',
'Meda',
'Medard',
'Medea',
'Meg',
'Megan',
'Meged',
'Meghan',
'Mehalia',
'Mei',
'Meinako',
'Meir',
'Mekayla',
'Mekelle',
'Mel',
'Mela',
'Melania',
'Melanie',
'Melantha',
'Melba',
'Melchior',
'Mele',
'Meli',
'Melia',
'Melina',
'Melinda',
'Meliora',
'Melisande',
'Melissa',
'Melita',
'Melody',
'Melora',
'Melosa',
'Melva',
'Melvin',
'Melvina',
'Melvyn',
'Mendel',
'Menora',
'Mercedes',
'Mercer',
'Mercia',
'Mercy',
'Meredith',
'Merethe',
'Meria',
'Meris',
'Merita',
'Merle',
'Merlin',
'Merlot',
'Merrick',
'Merrill',
'Merritt',
'Merry',
'Mersendies',
'Merton',
'Merv',
'Mervin',
'Mervyn',
'Meryl',
'Meryle',
'Meshal',
'Messina',
'Metea',
'Mettabel',
'Mia',
'Mialyn',
'Micaella',
'Micah',
'Micaiah',
'Michael',
'Michaela',
'Michal',
'Michel',
'Michele',
'Micheline',
'Michelle',
'Michiko',
'Michila',
'Michon',
'Mick',
'Mickey',
'Micol',
'Mieko',
'Miette',
'Migdana',
'Mignon',
'Mihoshi',
'Mika',
'Mikaili',
'Mikal',
'Mike',
'Mike''aha',
'Mikey',
'Mikhail',
'Miki',
'Mikinea',
'Mikkel',
'Milan',
'Milandu',
'Mildred',
'Milena',
'Miles',
'Mili',
'Milia',
'Miliani',
'Miller',
'Millicent',
'Millie',
'Mills',
'Milly',
'Milo',
'Milt',
'Milton',
'Mimi',
'Mina',
'Minako',
'Minda',
'Mindy',
'Minerva',
'Miniya',
'Minna',
'Minnie',
'Minor',
'Minty',
'Mio',
'Mira',
'Mirabel',
'Mirabelle',
'Miracle',
'Miranda',
'Mircea',
'Mireille',
'Mirella',
'Miriam',
'Mirit',
'Miroslav',
'Mirra',
'Misae',
'Misha',
'Misty',
'Misu',
'Mitch',
'Mitchel',
'Mitchell',
'Mitsu',
'Miya',
'Miyana',
'Miyanda',
'Miyoko',
'Mizell',
'Moa',
'Moana',
'Moanna',
'Modesta',
'Modesty',
'Mohammed',
'Mohan',
'Moin',
'Moina',
'Moinuddin',
'Moira',
'Moji',
'Mojtaba',
'Moke',
'Molly',
'Mona',
'Monae',
'Monahan',
'Monica',
'Moniqua',
'Monique',
'Monita',
'Monroe',
'Montague',
'Montana',
'Monte',
'Montego',
'Montgomery',
'Monty',
'Moon',
'Moon-unit',
'Mora',
'Morag',
'Moral',
'Morathi',
'Mordecai',
'More',
'Morela',
'Morey',
'Morgan',
'Morgana',
'Moriah',
'Moriba',
'Morley',
'Morna',
'Morrie',
'Morrigan',
'Morris',
'Morrison',
'Morse',
'Mort',
'Mortimer',
'Morton',
'Morty',
'Morwenna',
'Moses',
'Moshe',
'Moss',
'Mostapha',
'Mostyn',
'Moya',
'Moyna',
'Mrena',
'Muhammad',
'Mulan',
'Muliya',
'Muna',
'Mura',
'Muriel',
'Murphy',
'Murray',
'Murron',
'Musoke',
'Mustafa',
'Mutia',
'Mya',
'Mykel',
'Myles',
'Myra',
'Myrilla',
'Myrladis',
'Myrna',
'Myron',
'Myrtle',
'Myson',
'Myte',
'Naal',
'Nada',
'Nadia',
'Nadie',
'Nadina',
'Nadine',
'Naeco',
'Nafis',
'Nafuna',
'Naghmeh',
'Naila',
'Naiser',
'Najee',
'Najla',
'Najmeh',
'Nakeisha',
'Nakima',
'Nalo',
'Nalonnie',
'Namir',
'Nan',
'Nancy',
'Nanette',
'Nani',
'Naoise',
'Naolin',
'Naoll',
'Naomi',
'Napoleon',
'Nara',
'Narain',
'Narcisse',
'Nardo',
'Narelle',
'Nariah',
'Nariko',
'Narma',
'Nascha',
'Naseem',
'Nasha',
'Nasia',
'Nasser',
'Nat',
'Natala',
'Natalia',
'Natalie',
'Nataly & natalya',
'Natane',
'Natasha',
'Nate',
'Natesa',
'Nathalie',
'Nathan',
'Nathanael or nathaniel',
'Natine',
'Natividad',
'Natori',
'Natsu',
'Nature',
'Nav',
'Nava',
'Navarro',
'Naveen',
'Navid',
'Navora',
'Nawal',
'Nayati',
'Nayelis',
'Nayer',
'Naysa',
'Nazli',
'N''dea',
'Neal',
'Nealon',
'Necia',
'Neda',
'Nedim',
'Nedra',
'Neely',
'Neena',
'Neetee',
'Nefertiti',
'Neil',
'Nelia',
'Nell',
'Nellie',
'Nelson',
'Nemesis',
'Nen',
'Nenet',
'Neola',
'Nephtalie',
'Nerina',
'Nerine',
'Nerissa',
'Nerita',
'Nero',
'Nessa',
'Nessan',
'Nestor',
'Netanya',
'Neva',
'Nevada',
'Nevan',
'Neville',
'Newman',
'Neydi',
'Neylan',
'Nia',
'Niabi',
'Niall',
'Niamh',
'Nichelle',
'Nicholai',
'Nicholas',
'Nichole',
'Nick',
'Nicki',
'Nicodemus',
'Nicola',
'Nicole',
'Nicoletta',
'Nicolette',
'Nidia',
'Nieca',
'Niel',
'Nieves',
'Nigel',
'Nijole',
'Nika',
'Nikhil',
'Nikiesha',
'Nikita',
'Nikki',
'Nikkos',
'Nikoi',
'Nikola',
'Nikole',
'Niks',
'Niles',
'Nimeesha',
'Nina',
'Ninfa',
'Ninon',
'Nira',
'Nire',
'Nirel',
'Nishi',
'Nissa',
'Nita',
'Nitin',
'Nitara',
'Nitesh',
'Nitis',
'Niv',
'Nixie',
'Nizana',
'Noah',
'Noam',
'Nodin',
'Noe',
'Noel',
'Noelani',
'Noell',
'Nokomis',
'Nola',
'Nolan',
'Noland',
'Noma',
'Nomar',
'Nomlanga',
'Nona',
'Nonnie',
'Nora',
'Norah',
'Noreen',
'Nori',
'Norina',
'Norm',
'Norma',
'Norman',
'Normandy',
'Norris',
'Norton',
'Norwood',
'Nova',
'Novalee',
'Novia',
'Nowles',
'Noxolo',
'Noya',
'Nuhad',
'Nuncio',
'Nuri',
'Nuru',
'Nya',
'Nyako',
'Nydia',
'Nyeki',
'Nyler',
'Nyoka',
'Nysa',
'Nyx',
'Oafe',
'Oanh',
'Oakes',
'Oakley',
'Obadiah',
'Obedience',
'Oberon',
'Obert',
'Oceana',
'Octavia',
'Octavio',
'Octavious',
'Odele',
'Odelia',
'Odell',
'Odessa',
'Odetta',
'Odette',
'Odile',
'Odina',
'Odysseus',
'Oedipus',
'Ofer',
'Ogden',
'Ogima',
'Ohio',
'Oistin',
'Okal',
'Okalik',
'Okapi',
'Oke',
'Okechuku',
'Okoth',
'Oksana',
'Ola',
'Olaf',
'Olathe',
'Oleg',
'Olesia',
'Olga',
'Oliana',
'Olin',
'Olinda',
'Olive',
'Oliver',
'Olivia',
'Ollie',
'Olympia',
'Oma',
'Omar',
'Ombler',
'Omega',
'Ona',
'Onan',
'Ondette',
'One',
'Oneida',
'Oni',
'Onslow',
'Oona',
'Opa',
'Opal',
'Ophelia',
'Ophira',
'Oprah',
'Ora',
'Oral',
'Oralee',
'Oran',
'Orane',
'Orde',
'Oren',
'Orenda',
'Oria',
'Oriana',
'Oriel',
'Orien',
'Oringo',
'Orino',
'Oriole',
'Orion',
'Orla',
'Orlando',
'Orleans',
'Orlee',
'Orli',
'Orly',
'Orma',
'Ormand',
'Ornice',
'Orrick',
'Orsen',
'Orsin',
'Orson',
'Orton',
'Orville',
'Osanna',
'Osaze',
'Osborn',
'Osborne',
'Oscar',
'Osgood',
'Osias',
'Oskar',
'Osma',
'Osmond',
'Ossian',
'Ossie',
'Oswald',
'Othello',
'Otis',
'Otto',
'Ouray',
'Ova',
'Overton',
'Ovid',
'Owen',
'Ownah',
'Oz',
'Ozzie',
'Pabla',
'Pablo',
'Pace',
'Pacey',
'Packard',
'Paco',
'Paddy',
'Padhraig',
'Padraic',
'Page',
'Paige',
'Paisley',
'Palani',
'Palesa',
'Paley',
'Pallas',
'Palma',
'Palmer',
'Paloma',
'Palti',
'Pamela',
'Pamelalee',
'Pamelia',
'Pammay',
'Pancho',
'Pandora',
'Panfila',
'Paniga',
'Panya',
'Paola',
'Paolo',
'Papina',
'Paris',
'Parisa',
'Parker',
'Parkin',
'Parlan',
'Parley',
'Parrish',
'Parry',
'Parsifal',
'Parson',
'Pascal',
'Pascale',
'Pascha',
'Pasi',
'Patch',
'Patience',
'Patrice',
'Patricia',
'Patrick',
'Patsy',
'Patty',
'Paul',
'Paula',
'Paulette',
'Paulina',
'Pauline',
'Paulo',
'Paulos',
'Pavithra',
'Paxton',
'Payil',
'Payton',
'Paz',
'Peale',
'Pearl',
'Pearlie',
'Pearly',
'Pebbles',
'Pedro',
'Peggy',
'Peivi',
'Pelagia',
'Pelham',
'Pembroke',
'Pena',
'Penelope',
'Penn',
'Penney',
'Pennie',
'Penny',
'Penrod',
'Peony',
'Pepe',
'Pepper',
'Percival',
'Percy',
'Perdita',
'Perdy',
'Peregrine',
'Peri',
'Perrin',
'Perry',
'Pete',
'Peter',
'Petra',
'Petronella',
'Petula',
'Petunia',
'Peyton',
'Phaedra',
'Pharzam',
'Phemia',
'Phenia',
'Phiala',
'Phil',
'Phila',
'Philana',
'Phillia',
'Philo',
'Philopena',
'Philip',
'Phillip',
'Philomena',
'Philyra',
'Phindiwe',
'Phoebe',
'Phoenix',
'Phylicia',
'Phylisia',
'Phyliss',
'Phyllis',
'Phyre',
'Pia',
'Picabo',
'Pier',
'Piera',
'Pierce',
'Pierre',
'Pierrette',
'Pilar',
'Pillan',
'Piper',
'Pirro',
'Piuta',
'Placido',
'Plato',
'Platt',
'Pleasance',
'Plennie',
'Po mya',
'Polly',
'Polo',
'Ponce',
'Poppy',
'Poria',
'Porsha',
'Porter',
'Portia',
'Posy',
'Powa',
'Prentice',
'Prescott',
'Presencia',
'Presley',
'Preston',
'Price',
'Primo',
'Prince',
'Princessa',
'Priscilla',
'Priya',
'Procopia',
'Prudence',
'Prue',
'Prunella',
'Pryderi',
'Psyche',
'Pyralis',
'Qabil',
'Qamar',
'Qiana',
'Qing-jao',
'Quade',
'Quana',
'Quanda',
'Quang',
'Queenie',
'Quella',
'Quennell',
'Quentin',
'Querida',
'Quiana',
'Quilla',
'Quillan',
'Quimby',
'Quin',
'Quincy',
'Quinella',
'Quinlan',
'Quinn',
'Quinta',
'Quintana',
'Quintin',
'Quinto',
'Quinton',
'Quirino',
'Quolan',
'Quon',
'Qwin',
'Rabertina',
'Rabia',
'Rach',
'Rachael',
'Rachel',
'Rachelle',
'Radley',
'Radwan',
'Rae',
'Raeanne',
'Raegan',
'Raemarie',
'Rafael',
'Raffaello',
'Rafi',
'Rai',
'Raimi',
'Rain',
'Raina',
'Raine',
'Rainer',
'Raisa',
'Raja',
'Raleigh',
'Ralph',
'Ram',
'Ramie',
'Ramiro',
'Ramon',
'Ramona',
'Ramses',
'Ranae',
'Randall',
'Randi (alternate forms: randie, randee, randey)',
'Randilyn',
'Randolph',
'Randy',
'Rane',
'Ranee',
'Rania',
'Ranit',
'Raphael',
'Raphaela',
'Raquel',
'Rasha',
'Rashida',
'Rasia',
'Raul',
'Raven',
'Ravi',
'Ray',
'Raymond',
'Raynell',
'Rayya',
'Razi',
'Razvan',
'Rea',
'Read',
'Reagan',
'Reann',
'Reanna',
'Reasha',
'Reba',
'Rebecca',
'Rebekah',
'Red',
'Redell',
'Redford',
'Redina',
'Reed',
'Reent',
'Reese',
'Reeves',
'Regan',
'Regina',
'Reginald',
'Reilly',
'Reina',
'Remedy',
'Rememberance',
'Remi',
'Remick',
'Remington',
'Remy',
'Ren',
'Rena',
'Renata',
'Renate',
'Rene',
'Renee',
'Renny',
'Reth',
'Reuben',
'Reva',
'Revel',
'Revelin',
'Revelpedro',
'Rex',
'Rey',
'Reye',
'Reyna',
'Reynalynn',
'Reynard',
'Reynold',
'Reza',
'Rhasheem',
'Rhea',
'Rhett',
'Rhiannon',
'Rhoda',
'Rhodes',
'Rhona',
'Rhonda',
'Rhoswen',
'Rhylee',
'Rhys',
'Ria',
'Rianna',
'Rianne',
'Riannon',
'Ricardo',
'Rich',
'Richann',
'Richard',
'Ricjunette',
'Rick',
'Rickesha',
'Rico',
'Rider',
'Riene',
'Rigg',
'Riley',
'Rimca',
'Rimona',
'Rin',
'Rina',
'Ringo',
'Riona',
'Riordan',
'Risa',
'Rita',
'Riva',
'River',
'Rivka',
'Rob',
'Robbin',
'Robert',
'Roberta',
'Robin',
'Robyn',
'Rocco',
'Rochelle',
'Rocio',
'Rock',
'Rockne',
'Rockwell',
'Rocky',
'Rod',
'Rodd',
'Roddy',
'Roderick',
'Rodney',
'Roger',
'Roland',
'Rolando',
'Rolf',
'Rollo',
'Romaine',
'Roman',
'Romeo',
'Rona',
'Ronald',
'Ronalee',
'Ronan',
'Ronat',
'Ronda',
'Ronia',
'Ronica',
'Ronisha',
'Ronli',
'Ronna',
'Ronnie',
'Ronny',
'Roosevelt',
'Rori',
'Rory',
'Ros',
'Rosa',
'Rosalba',
'Rosalia',
'Rosalind',
'Rosalita',
'Rosalyn',
'Rosamunde',
'Rose',
'Roseanne',
'Roselani',
'Rosemary',
'Roshaun',
'Rosie',
'Rosine',
'Ross',
'Rossa',
'Rothrock',
'Rowan',
'Rowdy',
'Rowena',
'Roxanne',
'Roy',
'Royce',
'Roz',
'Roza',
'Ruairi',
'Ruana',
'Ruby',
'Rudolph',
'Rudra',
'Rudy',
'Rufina',
'Rufus',
'Ruggiero',
'Rui',
'Rumer',
'Runa',
'Rune',
'Rupert',
'Rupetina',
'Russ',
'Russell',
'Russom',
'Rusti',
'Rusty',
'Ruth',
'Ruza',
'Ryan',
'Rydell',
'Ryder',
'Ryk',
'Ryker',
'Rylan',
'Ryland',
'Rylee',
'Rylie',
'Ryne',
'Ryo',
'Ryoko',
'Saba',
'Sabeeka',
'Sabina',
'Sabine',
'Sabra',
'Sabrina',
'Sachi',
'Sadie',
'Sadiki',
'Sadira',
'Safara',
'Saffron',
'Safina',
'Sage',
'Sahara',
'Saidi',
'Sailor',
'Saja',
'Saku',
'Sakura',
'Sal',
'Salena',
'Salene',
'Sally',
'Salome',
'Salvador',
'Salvatore',
'Sam',
'Samantha',
'Samia',
'Samson',
'Samuel',
'Sana',
'Sandra',
'Sandro',
'Sandy',
'Sanford',
'Sanjay',
'Sanjeet',
'Sanne',
'Santa',
'Santana',
'Santiago',
'Santo',
'Santos',
'Sanyu',
'Sapphire',
'Sara',
'Sarabrynn',
'Sarah',
'Sarahlyn',
'Sarai',
'Saraid',
'Sarama',
'Sarda',
'Sargent',
'Sarissa',
'Sarita',
'Sarki',
'Sarren',
'Sasami',
'Sasha',
'Sasilvia',
'Saskia',
'Satchel',
'Satin',
'Satinka',
'Satori',
'Satu',
'Saul',
'Savanna',
'Savannah',
'Saville',
'Savion',
'Savon',
'Sawyer',
'Saxen',
'Saxon',
'Saxton',
'Sayaan',
'Sayward',
'Scarlet',
'Scarlett',
'Schuyler',
'Schyler',
'Schylor',
'Scot',
'Scott',
'Scout',
'Seamus',
'Sean',
'Seanna',
'Season',
'Sebastian',
'Sebastien',
'Seda',
'Seema',
'Sef',
'Seghen',
'Seiko',
'Sela',
'Selas',
'Selena',
'Selene',
'Selia',
'Selima',
'Selina',
'Selma',
'Sema',
'Semele',
'Semir',
'Semira',
'Senalda',
'Senia',
'Sephora',
'September',
'Sequoia',
'Sera',
'Serafina',
'Serena',
'Serenity',
'Serepta',
'Serge',
'Sergio',
'Serwa',
'Seth',
'Seven',
'Severino',
'Sevinc',
'Seveyn',
'Sevilla',
'Seville',
'Seymour',
'Shacher',
'Shaelynn',
'Shaina',
'Shainah',
'Shakia',
'Shakila',
'Shakir',
'Shakira',
'Shakti',
'Shakur',
'Shakura',
'Shalaidah',
'Shalamar',
'Shalimar',
'Shaman',
'Shamar',
'Shamara',
'Shamira',
'Shamon',
'Shamus',
'Shana',
'Shandi',
'Shandrell',
'Shane',
'Shani',
'Shania',
'Shanity',
'Shanlee',
'Shanna',
'Shannen',
'Shannon',
'Shanon',
'Shante',
'Shantell',
'Shaquille',
'Sharis',
'Sharlene',
'Sharne',
'Sharon',
'Shasa',
'Shaun',
'Shauna',
'Shaunna',
'Shavonda',
'Shavonne',
'Shaw',
'Shawn',
'Shawnda',
'Shawna',
'Shawndell',
'Shay',
'Shea',
'Sheadon',
'Sheba',
'Sheehan',
'Sheena',
'Sheera',
'Sheila',
'Shel',
'Shelby',
'Sheldon',
'Shella',
'Shelley',
'Shelly',
'Shenelle',
'Sheri',
'Sheridan',
'Sherine',
'Sherise',
'Sherisse',
'Sherman',
'Shermel',
'Sherri',
'Sherry',
'Sheryl',
'Shieefera',
'Shiela',
'Shifra',
'Shiloh',
'Shimon',
'Shing',
'Shino',
'Shira',
'Shiran',
'Shiri',
'Shirley',
'Shirlyn',
'Shlomo',
'Shneek',
'Shona',
'Shoshana',
'Shoshanah',
'Shubha',
'Shyan',
'Shyler',
'Sian',
'Sibley',
'Sibyl',
'Sid',
'Sidhartha',
'Sidney',
'Sidonia',
'Sidra',
'Siegfried',
'Sienna',
'Sierra',
'Signa',
'Sigrid',
'Sika',
'Silvain',
'Silvan',
'Silvana',
'Silver',
'Silvio',
'Sim',
'Sima',
'Simba',
'Simeon',
'Simon',
'Simone',
'Sinclair',
'Sine',
'Sinead',
'Sinjin',
'Sinjon',
'Siobhan',
'Sirus',
'Sissy',
'Sivney',
'Skip',
'Skipper',
'Skylar',
'Skyler',
'Slade',
'Sloan',
'Sloane',
'Slone',
'Smedley',
'Smith',
'Snow',
'Snowy',
'Sofia',
'Sohl-bin',
'Sokphorn',
'Sol',
'Solace',
'Solana',
'Solange',
'Solangel',
'Sole',
'Soleil',
'Solomon',
'Son',
'Sondo',
'Sondra',
'Sonel',
'Sonia',
'Sonja',
'Sonnagh',
'Sonora',
'Sonya',
'Sophia',
'Sophie',
'Sora',
'Sorcha',
'Soren',
'Sorley',
'Spence',
'Spencer',
'Speranza',
'Spike',
'Spring',
'Stacey',
'Stacia',
'Stacy',
'Stan',
'Stanislaus',
'Stanislav',
'Stanislaw',
'Stanley',
'Stanton',
'Star',
'Starla',
'Starr',
'Stavros',
'Stefan',
'Stefanie',
'Steffi',
'Steffie',
'Stefon',
'Stella',
'Step',
'Stephan',
'Stephanie',
'Stephen',
'Stephenie',
'Sterling',
'Stesha',
'Steve',
'Steven',
'Stevie',
'Stew',
'Stewart',
'Stillman',
'Stockton',
'Stone',
'Storm',
'Stormy',
'Strom',
'Stu',
'Stuart',
'Studs',
'Sue',
'Sugar',
'Sukey',
'Suki',
'Sulis',
'Sullivan',
'Sully',
'Sumana',
'Summer',
'Sundeep',
'Sunee',
'Sunny',
'Susan',
'Susane',
'Susanna',
'Susannah',
'Susie',
'Sutton',
'Suzanne',
'Suzette',
'Suzy',
'Svein',
'Sveta',
'Sybil',
'Sydnee',
'Sydney',
'Sylest',
'Sylvain',
'Sylvester',
'Sylvia',
'Sylvie',
'Synan',
'Synclair',
'Syshe',
'Ta''ib',
'Tab',
'Taban',
'Taber',
'Tabetha',
'Tabitha',
'Tacita',
'Tacy',
'Tad',
'Tadelesh',
'Tadhg',
'Taffy',
'Tahlib',
'Tai',
'Taifa',
'Tailynn',
'Taima',
'Tait',
'Taja',
'Tajanea',
'Takeshi',
'Tala',
'Talasi',
'Talen',
'Talia',
'Taliesin',
'Taliliikilyit',
'Talisa',
'Talisha',
'Talitha',
'Tallah',
'Tallis',
'Tallulah',
'Talmai',
'Talynn',
'Tam',
'Tama',
'Tamah',
'Tamara',
'Tamasha',
'Tamasine',
'Tamatha',
'Tambre',
'Tamera',
'Tameron',
'Tamika',
'Tamma',
'Tammy',
'Tamra',
'Tamsen',
'Tamsin',
'Tamzin',
'Tana',
'Tandice',
'Tanesia',
'Tania',
'Tanika',
'Tanisha',
'Tanith',
'Tanna',
'Tannar',
'Tanner',
'Tannor',
'Tanya',
'Tao',
'Tara',
'Tarah',
'Taran',
'Tarana',
'Tarek',
'Tarika',
'Tarin',
'Tariq',
'Taru',
'Taryn',
'Tasha',
'Tasida',
'Tasmine',
'Tassos',
'Tate',
'Tatiana',
'Tatum',
'Tauja',
'Taurean',
'Tave',
'Taveon',
'Tavi',
'Tavia',
'Tavish',
'Tavita',
'Tawana',
'Taya or taia',
'Tayla',
'Taylah',
'Taylor',
'Tazara',
'Tea',
'Teagan',
'Teague',
'Teal',
'Tecla',
'Ted',
'Teddy',
'Teenie',
'Tefo',
'Teige',
'Tekevia',
'Teleza',
'Teli',
'Telly',
'Telma',
'Temima',
'Temira',
'Templeton',
'Tenen',
'Tennille',
'Teo',
'Terah',
'Terena',
'Terence',
'Terentia',
'Teresa',
'Terina',
'Termon',
'Terra',
'Terran',
'Terrel',
'Terrence',
'Terris',
'Terry',
'Terryal',
'Tertius',
'Tertullian',
'Teshi',
'Tess',
'Tessa',
'Teva',
'Tevani',
'Tevin',
'Tex',
'Texil',
'Thackery',
'Thad',
'Thaddeus',
'Thadeus',
'Thady',
'Thais',
'Thalassa',
'Thalia',
'Than',
'Thandeka',
'Thane',
'Thanh',
'Thatcher',
'Thayer',
'Thea',
'Thel',
'Thelma',
'Thema',
'Themba',
'Theo',
'Theodora',
'Theodore',
'Theresa',
'Therese',
'Thina',
'Thom',
'Thomas',
'Thomasina',
'Thor',
'Thora',
'Thorin',
'Thornton',
'Thrine',
'Thron',
'Thurman',
'Thuy',
'Thyra',
'Tia',
'Tiana & tiannah',
'Tiara',
'Tiaret',
'Tiassale',
'Tidus',
'Tiere',
'Tierney',
'Tiffany',
'Tilden',
'Tillie',
'Tilly',
'Tim',
'Timothy',
'Timu',
'Tina',
'Tino',
'Tip',
'Tirza',
'Tirzah',
'Tisha',
'Titan',
'Titus',
'Tivona',
'Toan',
'Toben',
'Tobin',
'Tobit',
'Toby',
'Tod',
'Todd',
'Toki',
'Tolla',
'Tom',
'Tomas',
'Tommy',
'Tomo',
'Tonette',
'Toni',
'Tony',
'Tonya',
'Topaz',
'Topaza',
'Topo',
'Topper',
'Tori',
'Torie',
'Torn',
'Torrance',
'Torrin',
'Tory',
'Tosca',
'Tosha',
'Toshi',
'Toshia',
'Totie',
'Tova',
'Tovah',
'Tovi',
'Townsend',
'Toya',
'Toyah',
'Tracey',
'Tracie',
'Tracy',
'Traelic-an',
'Trahern',
'Tranquilla',
'Trapper',
'Trava',
'Travis',
'Traven',
'Trella',
'Trent',
'Trenton',
'Tressa',
'Tresure',
'Trevon',
'Trevor',
'Trey',
'Tricia',
'Trilby',
'Trina',
'Trinady',
'Trini',
'Trinity',
'Trish',
'Trisha',
'Trista',
'Tristan',
'Tristana',
'Tristessa',
'Tristram',
'Trixie',
'Trory',
'Troy',
'Truda',
'Trude',
'Trudy',
'Truitt',
'Trula',
'Truly',
'Truman',
'Tryphena',
'Tucker',
'Tudor',
'Tuesday',
'Tulla',
'Tully',
'Tumo',
'Tuyen',
'Twila',
'Twyla',
'Ty',
'Tyan',
'Tyanne',
'Tybal',
'Tyler',
'Tylynn',
'Tyme',
'Tyne',
'Tynley',
'Tyra',
'Tyree',
'Tyrell',
'Tyrick',
'Tyriq',
'Tyrone',
'Tyrus',
'Tyson',
'Uang',
'Uba',
'Uday',
'Ugo',
'Ujana',
'Ukiah',
'Ula',
'Ulan',
'Ulani',
'Ulema',
'Ulf',
'Ull',
'Ulla',
'Ulric',
'Ulysses',
'Uma',
'Umay',
'Umberto',
'Umeko',
'Umi',
'Ummi',
'Una',
'Unity',
'Upendo',
'Urania',
'Urbain',
'Urban',
'Uri',
'Uriah',
'Uriel',
'Urilla',
'Urit',
'Ursa',
'Ursala',
'Ursula',
'Uta',
'Utana',
'Ute',
'Utina',
'Uzma',
'Vail',
'Val',
'Vala',
'Valarie',
'Valbona',
'Valeda',
'Valencia',
'Valene',
'Valentina',
'Valentine',
'Valeria',
'Valerie',
'Valeska',
'Valiant',
'Vallerie',
'Valtina',
'Valyn',
'Van',
'Vance',
'Vandalin',
'Vanessa',
'Vangie',
'Vanna',
'Varae',
'Varen',
'Vaschel',
'Vashti',
'Vashni',
'Vatusia',
'Vaughan',
'Vaughn',
'Vea',
'Veasna',
'Veda',
'Vega',
'Velaura',
'Velma',
'Venedict',
'Venetia',
'Vera',
'Verda',
'Verdi',
'Vern',
'Verna',
'Verne',
'Verneil',
'Vernon',
'Veronica',
'Vesta',
'Vevay',
'Vevina',
'Vi',
'Vianey',
'Vic',
'Vicki',
'Vicky',
'Victor',
'Victoria',
'Vida',
'Vidal',
'Vidor',
'Vienna',
'Vila',
'Vince',
'Vincent',
'Vine',
'Vinnie',
'Vinny',
'Vinson',
'Viola',
'Violet',
'Virgil',
'Virgina',
'Virginia',
'Visola',
'Vita',
'Vitalis',
'Vito',
'Vittorio',
'Vivek',
'Vivi',
'Vivian',
'Viviana',
'Vivienne',
'Vlad',
'Vladimir',
'Volleny',
'Von',
'Vonda',
'Vondila',
'Vondra',
'Vonette',
'Vonna',
'Vui',
'Wade',
'Wafa',
'Waggoner',
'Walda',
'Waldo',
'Walker',
'Wallace',
'Walt',
'Walta',
'Walter',
'Wanda',
'Waneta',
'Ward',
'Warner',
'Warren',
'Wasaki',
'Washi',
'Washington',
'Watson',
'Waverly',
'Wayne',
'Webster',
'Weldon',
'Wence',
'Wenceslaus',
'Wenda',
'Wendell',
'Wendi',
'Wendy',
'Werner',
'Wes',
'Wesley',
'Weston',
'Wheeler',
'Whitby',
'Whitfield',
'Whitley',
'Whitney',
'Wilbur',
'Wiley',
'Wilford',
'Wilfred',
'Wilfredo',
'Wilhelmina',
'Will',
'Willa',
'Willard',
'Willem',
'William',
'Williams',
'Willis',
'Willow',
'Wilma',
'Wilson',
'Wilton',
'Win',
'Winda',
'Winfred',
'Winifred',
'Winona',
'Winson',
'Winslow',
'Winston',
'Winta',
'Winter',
'Winthrop',
'Wolfgang',
'Wood',
'Woodrow',
'Woods',
'Woody',
'Worden',
'Wrangler',
'Wyanet',
'Wyatt',
'Wyman',
'Wynn',
'Wynne',
'Wynona',
'Wyome',
'Xander',
'Xandy',
'Xanthe',
'Xanthus',
'Xanto',
'Xavier',
'Xaviera',
'Xena',
'Xenia',
'Xenos',
'Xentrie',
'Xerxes',
'Xi-wang',
'Xinavane',
'Xolani',
'Xuxa',
'Xylon',
'Yachi',
'Yadid',
'Yael',
'Yaholo',
'Yahto',
'Yair',
'Yaksh or yakchh',
'Yale',
'Yamal',
'Yamin',
'Yana',
'Yancy',
'Yank',
'Yanka',
'Yanni',
'Yannis',
'Yardan',
'Yardley',
'Yaro',
'Yaron',
'Yaser',
'Yasin',
'Yasmin',
'Yasnery',
'Yasuo',
'Yates',
'Ye',
'Yeardleigh',
'Yehudi',
'Yelena',
'Yen',
'Yenge',
'Yepa',
'Yered',
'Yeriel',
'Yesenia',
'Yestin',
'Yetty',
'Yeva',
'Yihana',
'Yitro',
'Yitta',
'Ymir',
'Yo',
'Yogi',
'Yoko',
'Yoland',
'Yolanda',
'Yomonda',
'Yonah',
'Yoninah',
'Yorick',
'York',
'Yosef',
'Yosefu',
'Y?shi',
'Yoshi',
'Yoshino',
'Ysabel',
'Ysanne',
'Yuk',
'Yuki',
'Yul',
'Yule',
'Yuma',
'Yuri',
'Yuval',
'Yves',
'Yvette',
'Yvon',
'Yvonne',
'Zaccheus',
'Zach',
'Zachariah',
'Zachary',
'Zaci',
'Zada',
'Zafira',
'Zahava',
'Zahur',
'Zaida',
'Zaide',
'Zaido',
'Zaila',
'Zainab',
'Zaira',
'Zaire',
'Zaki',
'Zak''nefein',
'Zalman',
'Zan',
'Zane',
'Zanna',
'Zara',
'Zareb',
'Zared',
'Zareh',
'Zarek',
'Zarifa',
'Zarina',
'Zarren',
'Zavad',
'Zaybian',
'Zaylyn',
'Zayn',
'Zayne',
'Zayo',
'Zaza',
'Zazu',
'Zbigniew',
'Ze''ev',
'Zea',
'Zeb',
'Zebidy',
'Zebulon',
'Zechariah',
'Zechuriah',
'Zed',
'Zef',
'Zeheb',
'Zeke',
'Zeki',
'Zelda',
'Zelia',
'Zelig',
'Zena',
'Zenas',
'Zene',
'Zenia',
'Zenobia',
'Zenon',
'Zephan',
'Zephiniah',
'Zeppelin',
'Zesiro',
'Zev',
'Zia',
'Ziazan',
'Ziggy',
'Zikomo',
'Zili',
'Zilli',
'Zimri',
'Zinna',
'Zinnia',
'Zion',
'Ziraili',
'Zita',
'Ziv',
'Ziva',
'Zivan',
'Ziven',
'Ziya',
'Zizi',
'Zo',
'Zoan',
'Zoe',
'Zoey',
'Zofia',
'Zohar',
'Zoie',
'Zola',
'Zolen',
'Zoltan',
'Zoltin',
'Zona',
'Zontee',
'Zorada',
'Zoraida',
'Zsa zsa',
'Zsuzsanna',
'Zula',
'Zuleika',
'Zulema',
'Zuriel',
'Zyta', ]
########NEW FILE########
__FILENAME__ = tests
"""
This file demonstrates writing tests using the unittest module. These will pass
when you run "manage.py test".

Replace this with more appropriate tests for your application.
"""

from django.test import TestCase


class SimpleTest(TestCase):
    def test_basic_addition(self):
        """
        Tests that 1 + 1 always equals 2.
        """
        self.assertEqual(1 + 1, 2)

########NEW FILE########
__FILENAME__ = views
# Create your views here.
from random import randint

from django.http import Http404
from django.shortcuts import render_to_response

from pure_pagination.paginator import Paginator

from core.names import names

def index(request):

    how_many_names = request.GET.get('how_many_names', 60)
    page_size = request.GET.get('page_size', 10)
    page_num = request.GET.get('page', 1)
    try:
        page_num = int(page_num)
        page_size = int(page_size)
        how_many_names = int(how_many_names)
    except ValueError:
        raise Http404

    selected_names = []
    total = len(names)
    for i in xrange(how_many_names):
        selected_names.append(names[randint(0, total-1)])
    p = Paginator(selected_names, page_size, request=request)

    page = p.page(page_num)
    return render_to_response('index.html', {
        'page': page,
    })

    
########NEW FILE########
__FILENAME__ = manage
#!/usr/bin/env python
from django.core.management import execute_manager
import imp
try:
    imp.find_module('settings') # Assumed to be in the same directory.
except ImportError:
    import sys
    sys.stderr.write("Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n" % __file__)
    sys.exit(1)

import settings

if __name__ == "__main__":
    execute_manager(settings)

########NEW FILE########
__FILENAME__ = settings
# Django settings for example_project project.

DEBUG = True
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

import os
PROJECT_DIR = os.path.abspath(os.path.dirname(__file__))

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'dev.db',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'America/Chicago'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = ''

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = ''

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

# URL prefix for admin static files -- CSS, JavaScript and images.
# Make sure to use a trailing slash.
# Examples: "http://foo.com/static/admin/", "/static/admin/".
ADMIN_MEDIA_PREFIX = '/static/admin/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'z8_a2@$l8igj-!cm!&$-!b9yrvitj2^2!ruq_ld_8-ooqxvedf'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
)

ROOT_URLCONF = 'example_project.urls'

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(PROJECT_DIR, 'templates'),
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Uncomment the next line to enable the admin:
    # 'django.contrib.admin',
    # Uncomment the next line to enable admin documentation:
    # 'django.contrib.admindocs',

    'core',
    'pure_pagination',
)

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}

########NEW FILE########
__FILENAME__ = urls
from django.conf.urls.defaults import patterns, include, url

# Uncomment the next two lines to enable the admin:
# from django.contrib import admin
# admin.autodiscover()

urlpatterns = patterns('',
    # Examples:
    # url(r'^$', 'example_project.views.home', name='home'),
    # url(r'^example_project/', include('example_project.foo.urls')),

    # Uncomment the admin/doc line below to enable admin documentation:
    # url(r'^admin/doc/', include('django.contrib.admindocs.urls')),

    # Uncomment the next line to enable the admin:
    # url(r'^admin/', include(admin.site.urls)),

    url(r'^$', 'core.views.index', name="index"),
)

########NEW FILE########
__FILENAME__ = mixins
from pure_pagination.paginator import Paginator

class PaginationMixin(object):
    """
    Mixin for generic class-based views (e.g. django.views.generic.ListView)
    """
    # Replace the default django.core paginator by pure_pagination.Paginator
    paginator_class = Paginator

    def get_paginator(self, queryset, per_page, orphans=0, allow_empty_first_page=True):
        # Pass the request object to the paginator to keep the parameters in the url querystring ("?page=2&old_param=...")
        request = self.request
        return self.paginator_class(queryset, per_page, orphans=orphans, allow_empty_first_page=allow_empty_first_page, request=request)

########NEW FILE########
__FILENAME__ = models
__author__ = 'James'
  
########NEW FILE########
__FILENAME__ = paginator
from django.conf import settings

from math import ceil
import functools

from django.template.loader import render_to_string

PAGINATION_SETTINGS = getattr(settings, "PAGINATION_SETTINGS", {})

PAGE_RANGE_DISPLAYED = PAGINATION_SETTINGS.get("PAGE_RANGE_DISPLAYED", 10)
MARGIN_PAGES_DISPLAYED = PAGINATION_SETTINGS.get("MARGIN_PAGES_DISPLAYED", 2)

class InvalidPage(Exception):
    pass

class PageNotAnInteger(InvalidPage):
    pass

class EmptyPage(InvalidPage):
    pass

class Paginator(object):
    def __init__(self, object_list, per_page, orphans=0, allow_empty_first_page=True, request=None):
        self.object_list = object_list
        self.per_page = per_page
        self.orphans = orphans
        self.allow_empty_first_page = allow_empty_first_page
        self._num_pages = self._count = None
        self.request = request

    def validate_number(self, number):
        "Validates the given 1-based page number."
        try:
            number = int(number)
        except ValueError:
            raise PageNotAnInteger('That page number is not an integer')
        if number < 1:
            raise EmptyPage('That page number is less than 1')
        if number > self.num_pages:
            if number == 1 and self.allow_empty_first_page:
                pass
            else:
                raise EmptyPage('That page contains no results')
        return number

    def page(self, number):
        "Returns a Page object for the given 1-based page number."
        number = self.validate_number(number)
        bottom = (number - 1) * self.per_page
        top = bottom + self.per_page
        if top + self.orphans >= self.count:
            top = self.count
        return Page(self.object_list[bottom:top], number, self)

    def _get_count(self):
        "Returns the total number of objects, across all pages."
        if self._count is None:
            try:
                self._count = self.object_list.count()
            except (AttributeError, TypeError):
                # AttributeError if object_list has no count() method.
                # TypeError if object_list.count() requires arguments
                # (i.e. is of type list).
                self._count = len(self.object_list)
        return self._count
    count = property(_get_count)

    def _get_num_pages(self):
        "Returns the total number of pages."
        if self._num_pages is None:
            if self.count == 0 and not self.allow_empty_first_page:
                self._num_pages = 0
            else:
                hits = max(1, self.count - self.orphans)
                self._num_pages = int(ceil(hits / float(self.per_page)))
        return self._num_pages
    num_pages = property(_get_num_pages)

    def _get_page_range(self):
        """
        Returns a 1-based range of pages for iterating through within
        a template for loop.
        """
        return range(1, self.num_pages + 1)
    page_range = property(_get_page_range)

QuerySetPaginator = Paginator # For backwards-compatibility.

class PageRepresentation(int):
    def __new__(cls, x, querystring):
        obj = int.__new__(cls, x)
        obj.querystring = querystring
        return obj


def add_page_querystring(func):
    @functools.wraps(func)
    def wrapper(self, *args, **kwargs):
        result = func(self, *args, **kwargs)
        if isinstance(result, int):
            querystring = self._other_page_querystring(result)
            return PageRepresentation(result, querystring)
        elif isinstance(result, list):
            new_result = []
            for number in result:
                if isinstance(number, int):
                    querystring = self._other_page_querystring(number)
                    new_result.append(PageRepresentation(number, querystring))
                else:
                    new_result.append(number)
            return new_result
        return result

    return wrapper

class Page(object):
    def __init__(self, object_list, number, paginator):
        self.object_list = object_list
        self.paginator = paginator
        if paginator.request:
            # Reason: I just want to perform this operation once, and not once per page
            self.base_queryset = self.paginator.request.GET.copy()
            self.base_queryset['page'] = 'page'
            self.base_queryset = self.base_queryset.urlencode().replace('%', '%%').replace('page=page', 'page=%s')

        self.number = PageRepresentation(number, self._other_page_querystring(number))

    def __repr__(self):
        return '<Page %s of %s>' % (self.number, self.paginator.num_pages)

    def has_next(self):
        return self.number < self.paginator.num_pages

    def has_previous(self):
        return self.number > 1

    def has_other_pages(self):
        return self.has_previous() or self.has_next()

    @add_page_querystring
    def next_page_number(self):
        return self.number + 1

    @add_page_querystring
    def previous_page_number(self):
        return self.number - 1

    def start_index(self):
        """
        Returns the 1-based index of the first object on this page,
        relative to total objects in the paginator.
        """
        # Special case, return zero if no items.
        if self.paginator.count == 0:
            return 0
        return (self.paginator.per_page * (self.number - 1)) + 1

    def end_index(self):
        """
        Returns the 1-based index of the last object on this page,
        relative to total objects found (hits).
        """
        # Special case for the last page because there can be orphans.
        if self.number == self.paginator.num_pages:
            return self.paginator.count
        return self.number * self.paginator.per_page

    @add_page_querystring
    def pages(self):
        if self.paginator.num_pages <= PAGE_RANGE_DISPLAYED:
            return range(1, self.paginator.num_pages+1)
        result = []
        left_side = PAGE_RANGE_DISPLAYED/2
        right_side = PAGE_RANGE_DISPLAYED - left_side
        if self.number > self.paginator.num_pages - PAGE_RANGE_DISPLAYED/2:
            right_side = self.paginator.num_pages - self.number
            left_side = PAGE_RANGE_DISPLAYED - right_side
        elif self.number < PAGE_RANGE_DISPLAYED/2:
            left_side = self.number
            right_side = PAGE_RANGE_DISPLAYED - left_side
        for page in xrange(1, self.paginator.num_pages+1):
            if page <= MARGIN_PAGES_DISPLAYED:
                result.append(page)
                continue
            if page > self.paginator.num_pages - MARGIN_PAGES_DISPLAYED:
                result.append(page)
                continue
            if (page >= self.number - left_side) and (page <= self.number + right_side):
                result.append(page)
                continue
            if result[-1]:
                result.append(None)

        return result

    def _other_page_querystring(self, page_number):
        """
        Returns a query string for the given page, preserving any
        GET parameters present.
        """
        if self.paginator.request:
            return self.base_queryset %page_number

        #raise Warning("You must supply Paginator() with the request object for a proper querystring.")
        return 'page=%s' %page_number

    def render(self):
        return render_to_string('pure_pagination/pagination.html', {
            'current_page':self,
            'page_obj':self, # Issue 9 https://github.com/jamespacileo/django-pure-pagination/issues/9
                             # Use same naming conventions as Django
            })


########NEW FILE########
__FILENAME__ = tests
from datetime import datetime
from operator import attrgetter

from pure_pagination import Paginator, InvalidPage, EmptyPage
from django.test import TestCase
from django.test.client import Client

from django.db import models

class Article(models.Model):
    headline = models.CharField(max_length=100, default='Default headline')
    pub_date = models.DateTimeField()

    def __unicode__(self):
        return self.headline

class CountContainer(object):
    def count(self):
        return 42

class LenContainer(object):
    def __len__(self):
        return 42

class PaginationTests(TestCase):
    def setUp(self):
        # Prepare a list of objects for pagination.
        for x in range(1, 10):
            a = Article(headline='Article %s' % x, pub_date=datetime(2005, 7, 29))
            a.save()

    def test_paginator(self):
        paginator = Paginator(Article.objects.all(), 5)
        self.assertEqual(9, paginator.count)
        self.assertEqual(2, paginator.num_pages)
        self.assertEqual([1, 2], paginator.page_range)

    def test_first_page(self):
        paginator = Paginator(Article.objects.all(), 5)
        p = paginator.page(1)
        self.assertEqual(u"<Page 1 of 2>", unicode(p))
        self.assertQuerysetEqual(p.object_list, [
                "<Article: Article 1>",
                "<Article: Article 2>",
                "<Article: Article 3>",
                "<Article: Article 4>",
                "<Article: Article 5>"
            ]
        )
        self.assertTrue(p.has_next())
        self.assertFalse(p.has_previous())
        self.assertTrue(p.has_other_pages())
        self.assertEqual(2, p.next_page_number())
        self.assertEqual(0, p.previous_page_number())
        self.assertEqual(1, p.start_index())
        self.assertEqual(5, p.end_index())

    def test_last_page(self):
        paginator = Paginator(Article.objects.all(), 5)
        p = paginator.page(2)
        self.assertEqual(u"<Page 2 of 2>", unicode(p))
        self.assertQuerysetEqual(p.object_list, [
                "<Article: Article 6>",
                "<Article: Article 7>",
                "<Article: Article 8>",
                "<Article: Article 9>"
            ]
        )
        self.assertFalse(p.has_next())
        self.assertTrue(p.has_previous())
        self.assertTrue(p.has_other_pages())
        self.assertEqual(3, p.next_page_number())
        self.assertEqual(1, p.previous_page_number())
        self.assertEqual(6, p.start_index())
        self.assertEqual(9, p.end_index())

    def test_empty_page(self):
        paginator = Paginator(Article.objects.all(), 5)
        self.assertRaises(EmptyPage, paginator.page, 0)
        self.assertRaises(EmptyPage, paginator.page, 3)

        # Empty paginators with allow_empty_first_page=True.
        paginator = Paginator(Article.objects.filter(id=0), 5, allow_empty_first_page=True)
        self.assertEqual(0, paginator.count)
        self.assertEqual(1, paginator.num_pages)
        self.assertEqual([1], paginator.page_range)

        # Empty paginators with allow_empty_first_page=False.
        paginator = Paginator(Article.objects.filter(id=0), 5, allow_empty_first_page=False)
        self.assertEqual(0, paginator.count)
        self.assertEqual(0, paginator.num_pages)
        self.assertEqual([], paginator.page_range)

    def test_invalid_page(self):
        paginator = Paginator(Article.objects.all(), 5)
        self.assertRaises(InvalidPage, paginator.page, 7)

    def test_orphans(self):
        # Add a few more records to test out the orphans feature.
        for x in range(10, 13):
            Article(headline="Article %s" % x, pub_date=datetime(2006, 10, 6)).save()

        # With orphans set to 3 and 10 items per page, we should get all 12 items on a single page.
        paginator = Paginator(Article.objects.all(), 10, orphans=3)
        self.assertEqual(1, paginator.num_pages)

        # With orphans only set to 1, we should get two pages.
        paginator = Paginator(Article.objects.all(), 10, orphans=1)
        self.assertEqual(2, paginator.num_pages)

    def test_paginate_list(self):
        # Paginators work with regular lists/tuples, too -- not just with QuerySets.
        paginator = Paginator([1, 2, 3, 4, 5, 6, 7, 8, 9], 5)
        self.assertEqual(9, paginator.count)
        self.assertEqual(2, paginator.num_pages)
        self.assertEqual([1, 2], paginator.page_range)
        p = paginator.page(1)
        self.assertEqual(u"<Page 1 of 2>", unicode(p))
        self.assertEqual([1, 2, 3, 4, 5], p.object_list)
        self.assertTrue(p.has_next())
        self.assertFalse(p.has_previous())
        self.assertTrue(p.has_other_pages())
        self.assertEqual(2, p.next_page_number())
        self.assertEqual(0, p.previous_page_number())
        self.assertEqual(1, p.start_index())
        self.assertEqual(5, p.end_index())

    def test_paginate_misc_classes(self):
        # Paginator can be passed other objects with a count() method.
        paginator = Paginator(CountContainer(), 10)
        self.assertEqual(42, paginator.count)
        self.assertEqual(5, paginator.num_pages)
        self.assertEqual([1, 2, 3, 4, 5], paginator.page_range)

        # Paginator can be passed other objects that implement __len__.
        paginator = Paginator(LenContainer(), 10)
        self.assertEqual(42, paginator.count)
        self.assertEqual(5, paginator.num_pages)
        self.assertEqual([1, 2, 3, 4, 5], paginator.page_range)

    def test_pagination_containing_percent_char(self):
        pass

    def test_mixins(self):
        pass
    
########NEW FILE########
