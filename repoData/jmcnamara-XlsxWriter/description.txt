# XlsxWriter: Bug Reports and Contributing


## Reporting Bugs

Here are some tips on reporting bugs in XlsxWriter.


### Upgrade to the latest version of the module

The bug you are reporting may already be fixed in the latest version of the
module. You can check which version of xlsxWriter that you are using as follows:

    python -c 'import xlsxwriter; print(xlsxwriter.__version__)'


The [Changes](https://github.com/jmcnamara/XlsxWriter/blob/master/Changes) file lists what has changed in the latest versions.


### Read the documentation

Read or search the [XlsxWriter documentation](https://xlsxwriter.readthedocs.org/en/latest/index.html) to see if the issue you are encountering is already explained.

### Look at the example programs

There are [several example programs](https://github.com/jmcnamara/XlsxWriter/tree/master/examples) in the distribution. Try to identify an example program that corresponds to your query and adapt it to use as a bug report.


### Pointers for submitting a bug report

1. Describe the problem as clearly and as concisely as possible.
2. Include a sample program. This is probably the most important step. It is generally easier to describe a problem in code than in written prose.
3. The sample program should be as small as possible to demonstrate the problem. Don't copy and paste large non-relevant sections of your program.


### Sample Bug Report

A sample bug report is shown below. This format helps to analyse and respond to the bug report more quickly.

> **Issue with SOMETHING**
>
>   I am using XlsxWriter to do SOMETHING but it appears to do SOMETHING ELSE.
>
>   I am using Python version X.Y.Z and XlsxWriter x.y.z.
>
>   Here is some code that demonstrates the problem::
>
>       import xlsxwriter
>
>       workbook = xlsxwriter.Workbook('hello.xlsx')
>       worksheet = workbook.add_worksheet()
>
>       worksheet.write('A1', 'Hello world')
>
>       workbook.close()


### Use the XlsxWriter GitHub issue tracker

Submit the bug report using the [XlsxWriter issue tracker](https://github.com/jmcnamara/XlsxWriter/issues).


## Contributing to XlsxWriter

All patches and pull requests are welcome.


### Getting Started

1. New feature proposals should start with an [issue tracker](https://github.com/jmcnamara/XlsxWriter/issues). Describe what you plan to do. If there are API changes add some code example to demonstrate them.
2. Fork the repository.
3. Run all the tests to make sure the current code work on your system using `make test`.
4. Create a feature branch for your new feature.
5. Enable Travis CI on your fork, see below.


### Enabling Travis CI via your GitHub account

Travis CI is a free Continuous Integration service that will test any code you push to GitHub with Python 2.5, 2.6, 2.7, 3.2, 3.3 and PyPy.

See the [Travis CI Getting Started](http://about.travis-ci.org/docs/user/getting-started/) instructions.

You only have to do steps 1 and 2. Step 3, creating a `.travis.yml` file, is already done in the XlsxWriter repo.


### Writing Tests

This is the most important step. XlsxWriter has approximately 1000 tests and a 2:1 test to code ratio. Patches and pull requests for anything other than minor fixes or typos will not be merged without tests.

Use the existing tests in `XlsxWriter/xlsxwriter/test/` as examples.

Ideally, new features should be accompanied by tests that compare XlsxWriter output against actual Excel 2007 files. See the `XlsxWriter/xlsxwriter/test/comparison` test files for examples. If you don't have access to Excel 2007 I can help you create input files for test cases.

Tests should use the standard [unittest](http://docs.python.org/2/library/unittest.html) Python module.


### Code Style

Follow the general style of the surrounding code and format it to the [PEP8](http://www.python.org/dev/peps/pep-0008/) coding standards.

Tests should conform to `PEP8` but can ignore `E501` for long lines to allow the inclusion of Excel XML in tests.

There is a make target that will verify the source and test files:

    make pep8


### Running tests

As a minimum tests should be run using Python 2.7 and Python 3.3.


    make test
    # or
    py.test

The author uses [pythonbrew](https://github.com/utahta/pythonbrew) and [Tox](http://tox.readthedocs.org/en/latest/) to test with a variety of Python versions. See the Makefile for example test targets. A `tox.ini` file is already configured.

When you push your changes they will also be tested using [Travis CI](https://travis-ci.org/jmcnamara/XlsxWriter/) as explained above.


### Documentation

If your feature requires it then write some [RST](http://docutils.sourceforge.net/rst.html) documentation in [Sphinx](http://sphinx-doc.org) format or add to the existing documentation.

The docs, in `dev/docs/source` can be built in Html format using:

    make docs


### Example programs

If applicable add an example program to the `examples` directory.


### Copyright and License

Copyright remains with the original author. Do not include additional copyright claims or Licensing requirements. GitHub and the `git` repository will record your contribution an it will be acknowledged it in the Changes file.


### Submitting the Pull Request

If your change involves several incremental `git` commits then `rebase` or `squash` them onto another branch so that the Pull Request is a single commit or a small number of logical commits.

Push your changes to GitHub and submit the Pull Request. In the `git` commit link to the to the Issue tracker that was opened above.



This directory contains some simple tests programs for testing
performance of the XlsxWriter module.

See the perf_test.sh shell script for examples.



This directory contains files that are useful to the library developer.

It contains the source for the documentation, some performance testing
scripts and some release utilities.



This directory contains some release utilities that are mainly useful
to the library developer.




<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>Getting Started with XlsxWriter &mdash; XlsxWriter Readme</title>
    
    <link rel="stylesheet" href="_static/default.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />
    
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '',
        VERSION:     '0.3.2',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
    <script type="text/javascript" src="_static/jquery.js"></script>
    <script type="text/javascript" src="_static/underscore.js"></script>
    <script type="text/javascript" src="_static/doctools.js"></script>
    <link rel="top" title="XlsxWriter Readme" href="index.html" /> 
  </head>
  <body>
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li><a href="#">XlsxWriter Readme</a> &raquo;</li> 
      </ul>
    </div>  

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            
  <div class="section" id="getting-started-with-xlsxwriter">
<h1>Getting Started with XlsxWriter</h1>
<p>Here are some easy instructions to get you up and running with the XlsxWriter
module.</p>
<div class="section" id="installing-xlsxwriter">
<h2>Installing XlsxWriter</h2>
<p>The first step is to install the XlsxWriter module. There are several ways to
do this.</p>
<div class="section" id="using-pip">
<h3>Using PIP</h3>
<p>The <a class="reference external" href="http://www.pip-installer.org/en/latest/index.html">pip</a>  installer is
the preferred method for installing Python modules from
<a class="reference external" href="http://pypi.python.org/pypi">PyPI</a>, the Python Package Index:</p>
<div class="highlight-python"><pre>$ sudo pip install XlsxWriter</pre>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Windows users can omit <tt class="docutils literal"><span class="pre">sudo</span></tt> at the start of the command.</p>
</div>
</div>
<div class="section" id="using-easy-install">
<h3>Using Easy_Install</h3>
<p>If <tt class="docutils literal"><span class="pre">pip</span></tt> doesn&#8217;t work you can try
<a class="reference external" href="http://peak.telecommunity.com/DevCenter/EasyInstall">easy_install</a>:</p>
<div class="highlight-python"><pre>$ sudo easy_install install XlsxWriter</pre>
</div>
</div>
<div class="section" id="installing-from-a-tarball">
<h3>Installing from a tarball</h3>
<p>If you download a tarball of the latest version of XlsxWriter you can install
it as follows (change the version number to suit):</p>
<div class="highlight-python"><pre>$ tar -zxvf XlsxWriter-1.2.3.tar.gz

$ cd XlsxWriter-1.2.3
$ sudo python setup.py install</pre>
</div>
<p>A tarball of the latest code can be downloaded from GitHub as follows:</p>
<div class="highlight-python"><pre>$ curl -O -L http://github.com/jmcnamara/XlsxWriter/archive/master.tar.gz

$ tar zxvf master.tar.gz
$ cd XlsxWriter-master/
$ sudo python setup.py install</pre>
</div>
</div>
<div class="section" id="cloning-from-github">
<h3>Cloning from GitHub</h3>
<p>The XlsxWriter source code and bug tracker is in the
<a class="reference external" href="http://github.com/jmcnamara/XlsxWriter">XlsxWriter repository</a> on GitHub.
You can clone the repository and install from it as follows:</p>
<div class="highlight-python"><pre>$ git clone https://github.com/jmcnamara/XlsxWriter.git

$ cd XlsxWriter
$ sudo python setup.py install</pre>
</div>
</div>
</div>
<div class="section" id="running-a-sample-program">
<h2>Running a sample program</h2>
<p>If the installation went correctly you can create a small sample program like
the following to verify that the module works correctly:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="n">xlsxwriter</span>

<span class="n">workbook</span> <span class="o">=</span> <span class="n">xlsxwriter.Workbook</span><span class="p">(</span><span class="s">&#39;hello.xlsx&#39;</span><span class="p">)</span>
<span class="n">worksheet</span> <span class="o">=</span> <span class="n">workbook</span><span class="o">.</span><span class="n">add_worksheet</span><span class="p">()</span>

<span class="n">worksheet</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;A1&#39;</span><span class="p">,</span> <span class="s">&#39;Hello world&#39;</span><span class="p">)</span>

<span class="n">workbook</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</pre></div>
</div>
<p>Save this to a file called <tt class="docutils literal"><span class="pre">hello.py</span></tt> and run it as follows:</p>
<div class="highlight-python"><pre>$ python hello.py</pre>
</div>
<p>This will output a file called <tt class="docutils literal"><span class="pre">hello.xlsx</span></tt> which should look something like
the following:</p>
<img alt="_static/hello01.png" src="_static/hello01.png" />
<p>If you downloaded a tarball or cloned the repo, as shown above, you should also
have a directory called
<a class="reference external" href="https://github.com/jmcnamara/XlsxWriter/tree/master/examples">examples</a>
with some sample applications that demonstrate different features of
XlsxWriter.</p>
</div>
</div>
<div class="section" id="documentation">
<h1>Documentation</h1>
<p>The full version of XlsxWriter documentation is hosted on
<a class="reference external" href="http://xlsxwriter.readthedocs.org">Read The Docs</a>. It is
also available as a
<a class="reference external" href="https://github.com/jmcnamara/XlsxWriter/raw/master/docs/XlsxWriter.pdf">PDF</a>.</p>
</div>


          </div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">
            <p class="logo"><a href="#">
              <img class="logo" src="_static/logo.png" alt="Logo"/>
            </a></p>

        </div>
      </div>
      <div class="clearer"></div>
    </div>
    <div class="footer">
        &copy; Copyright 2013-2014, John McNamara.
    </div>
  </body>
</html>


This directory contains the source files for the documentation.


XlsxWriter
==========

**XlsxWriter** is a Python module for writing files in the Excel 2007+ XLSX
file format.

XlsxWriter can be used to write text, numbers, formulas and hyperlinks to
multiple worksheets and it supports features such as formatting and many more,
including:

* 100% compatible Excel XLSX files.
* Full formatting.
* Merged cells.
* Defined names.
* Charts.
* Autofilters.
* Data validation and drop down lists.
* Conditional formatting.
* Worksheet PNG/JPEG images.
* Rich multi-format strings.
* Cell comments.
* Memory optimisation mode for writing large files.

It supports Python 2.5, 2.6, 2.7, 3.1, 3.2, 3.3, Jython and PyPy and uses
standard libraries only.

Here is a simple example:

.. code-block:: python

   import xlsxwriter


   # Create an new Excel file and add a worksheet.
   workbook = xlsxwriter.Workbook('demo.xlsx')
   worksheet = workbook.add_worksheet()

   # Widen the first column to make the text clearer.
   worksheet.set_column('A:A', 20)

   # Add a bold format to use to highlight cells.
   bold = workbook.add_format({'bold': True})

   # Write some simple text.
   worksheet.write('A1', 'Hello')

   # Text with formatting.
   worksheet.write('A2', 'World', bold)

   # Write some numbers, with row/column notation.
   worksheet.write(2, 0, 123)
   worksheet.write(3, 0, 123.456)

   # Insert an image.
   worksheet.insert_image('B5', 'logo.png')

   workbook.close()

.. image:: https://raw.github.com/jmcnamara/XlsxWriter/master/dev/docs/source/_images/demo.png

See the full documentation at: http://xlsxwriter.readthedocs.org

Release notes: http://xlsxwriter.readthedocs.org/changes.html


