calibre
=========

calibre is an e-book manager. It can view, convert, edit and catalog e-books 
in all of the major e-book formats. It can also talk to e-book reader 
devices. It can go out to the internet and fetch metadata for your books. 
It can download newspapers and convert them into e-books for convenient 
reading. It is cross platform, running on Linux, Windows and OS X.

For more information, see the [calibre About page](http://calibre-ebook.com/about)

Screenshots
-------------
[Screenshots page](http://calibre-ebook.com/demo)

Usage
-------
See the [User Manual](http://manual.calibre-ebook.com)

Development
-------------
[Setting up a development environment for calibre](http://manual.calibre-ebook.com/develop.html)


A [tarball of the source code](http://status.calibre-ebook.com/dist/src) for the 
current calibre release.

Bugs
------

Bug reports and feature requests should be made in the calibre bug tracker at [launchpad](https://bugs.launchpad.net/calibre).
GitHub is only used for code hosting and pull requests.

Support calibre
----------------

calibre is a result of the efforts of many volunteers from all over the world.
If you find it useful, please consider contributing to support its development.
[Donate to support calibre development](http://calibre-ebook.com/donate).


This code is under the Apache License 2.0.  http://www.apache.org/licenses/LICENSE-2.0

This is a python port of a ruby port of arc90's readability project, taken
from https://github.com/buriy/python-readability

The original readability project:
http://lab.arc90.com/experiments/readability/

In few words,
Given a html document, it pulls out the main body text and cleans it up.
It also can clean up title based on latest readability.js code.

Based on:
 - Latest readability.js ( https://github.com/MHordecki/readability-redux/blob/master/readability/readability.js )
 - Ruby port by starrhorne and iterationlabs
 - Python port by gfxmonk ( https://github.com/gfxmonk/python-readability , based on BeautifulSoup )
 - Decruft effort to move to lxml ( http://www.minvolai.com/blog/decruft-arc90s-readability-in-python/ )
 - "BR to P" fix from readability.js which improves quality for smaller texts.
 - Github users contributions.

Installation::

    easy_install readability-lxml
    or
    pip install readability-lxml

Usage::

    from readability.readability import Document
    import urllib
    html = urllib.urlopen(url).read()
    readable_article = Document(html).summary()
    readable_title = Document(html).short_title()

Command-line usage::

    python -m readability.readability -u http://pypi.python.org/pypi/readability-lxml

Hunspell spell checker and morphological analyser library

Documentation, tests, examples: http://hunspell.sourceforge.net

Author of Hunspell:
László Németh (nemethl (at) gyorsposta.hu)

Hunspell based on OpenOffice.org's Myspell. MySpell's author:
Kevin Hendricks (kevin.hendricks (at) sympatico.ca)

License: GPL 2.0/LGPL 2.1/MPL 1.1 tri-license

The contents of this library may be used under the terms of
the GNU General Public License Version 2 or later (the "GPL"), or
the GNU Lesser General Public License Version 2.1 or later (the "LGPL",
see http://gnu.org/copyleft/lesser.html) or the Mozilla Public License
Version 1.1 or later (the "MPL", see http://mozilla.org/MPL/MPL-1.1.html).

Software distributed under these licenses is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the licences
for the specific language governing rights and limitations under the licenses.

This regex engine is taken, with thanks, from: https://code.google.com/p/mrab-regex-hg/

It is licensed under the Python Software Foundation License

Author: Matthew Barnett


                       Portable UnRAR version


   1. General

   This package includes freeware Unrar C++ source and a few makefiles
   (makefile.bcc, makefile.msc+msc.dep, makefile.unix). Unrar source
   is subset of RAR and generated from RAR source automatically,
   by a small program removing blocks like '#ifndef UNRAR ... #endif'.
   Such method is not perfect and you may find some RAR related
   stuff unnecessary in Unrar, especially in header files.

   If you wish to port Unrar to a new platform, you may need to edit
   '#define LITTLE_ENDIAN' in os.hpp and data type definitions
   in rartypes.hpp.

   if computer architecture does not allow not aligned data access,
   you need to undefine ALLOW_NOT_ALIGNED_INT and define
   STRICT_ALIGNMENT_REQUIRED in os.h. Note that it will increase memory
   requirements.

   If you use Borland C++ makefile (makefile.bcc), you need to define
   BASEPATHCC environment (or makefile) variable containing
   the path to Borland C++ installation.

   Makefile.unix contains numerous compiler option sets.
   GCC Linux is selected by default. If you need to compile Unrar
   for other platforms, uncomment corresponding lines.

   UnRAR.vcproj and UnRARDll.vcproj are projects for Microsoft Visual C++.
   UnRARDll.vcproj lets to build unrar.dll library.


   2. Unrar binaries

   If you compiled Unrar for OS, which is not present in "Downloads"
   and "RAR extras" on www.rarlab.com, we will appreciate if you send
   us the compiled executable to place it to our site.


   3. Acknowledgements

   This source includes parts of code written by the following authors:

   Dmitry Shkarin     PPMII v.H text compression
   Dmitry Subbotin    Carryless rangecoder
   Szymon Stefanek    AES encryption
   Brian Gladman      AES encryption
   Steve Reid         SHA-1 hash function
   Marcus Herbert     makefile.unix file
   Tomasz Klim        fixes for libunrar.so
   Robert Riebisch    makefile.dj and patches for DJGPP


   4. Legal stuff

   Unrar source may be used in any software to handle RAR archives
   without limitations free of charge, but cannot be used to re-create
   the RAR compression algorithm, which is proprietary. Distribution
   of modified Unrar source in separate form or as a part of other
   software is permitted, provided that it is clearly stated in
   the documentation and source comments that the code may not be used
   to develop a RAR (WinRAR) compatible archiver.

   More detailed license text is available in license.txt.

These files are taken from the iso-codes package, licensed under the LGPL 2.1

All the files are from the iso_639_3 sub-directory.

Translations for calibre. (https://github.com/kovidgoyal/calibre)

Translations are managed via Transifex
(https://www.transifex.com/projects/p/calibre/)

