# Project Babel 2 安装文档

[Project Babel 2](http://github.com/livid/v2ex) 是一个用 [Python](http://www.python.org) 语言写成的运行在 [Google App Engine](http://code.google.com/appengine) 云计算环境中的社区软件，本文详细描述最新版本的 Project Babel 2 的安装过程。

## 在 Google App Engine 注册你的应用

Project Babel 2 需要运行在 Google App Engine 的云计算环境中，因此你首先需要在 [Google App Engine](http://code.google.com/appengine) 网站注册自己的 Application ID。

第一次注册时会需要通过 Google 的手机验证，请填入你的手机号码并加入国家代码即可，比如：

    +8613901012345

通过手机验证之后，即可开始注册自己的 Application ID。Application ID 即网址中 .appspot.com 前面的那串字母及数字，比如在下面的例子中，Application ID 即是 v2ex：

    v2ex.appspot.com

## 使用 git 获取最新源代码

请首先确保系统上安装有 git，Mac OS X 用户可以通过 [MacPorts](http://www.macports.org/) 获得 git：

    sudo port install git-core
    
安装 git 之后，运行以下指令获得最新版本的 Project Babel 2 源代码：

    git clone git://github.com/livid/v2ex.git v2ex
    
之后你需要将获得的那个目录更改为自己的 Application ID。然后将其中的 app.yaml.example 复制为 app.yaml，将其中的 application: 后面的字符串同样更改为自己的 Application ID。

之后，你需要将 config.py.example 复制为 config.py 并做一些必要的修改。比如如果你需要用到 Project Babel 2 内置的 Twitter 客户端，那么你就需要在 config.py 中填入你在 [Twitter](http://twitter.com) 网站上申请的 OAuth Consumer Key 和 Secret。

为了防止恶意注册，Project Babel 2 还使用了 [reCAPTCHA](http://www.google.com/recaptcha)，因此你同样需要在 config.py 填入你自己的 reCAPTCHA 信息。

## 使用 Google App Engine Launcher 进行部署

[Google App Engine Launcher](http://code.google.com/appengine/downloads.html) 是 Google 官方的 App Engine 部署工具，可以非常方便的用于上传和更新自己的 Project Babel 2。该工具需要系统安装有 Python 运行环境，如果你的系统里还没有 Python，Windows 用户建议安装 [ActivePython](http://www.activestate.com/activepython)。

安装好 Google App Engine Launcher 后，选择 Add Existing Application，然后选择之前通过 git 获得的那个目录，然后点击蓝色的 Deploy 按钮，即可完成部署。

第一次部署结束后，将需要等待 Google 完成数据库索引，之后网站才可访问。

## 更多资源

如果你在使用 Project Babel 2 的过程中遇到任何问题，欢迎到官方讨论区探讨：

[http://v2ex.appspot.com/go/babel](http://v2ex.appspot.com/go/babel)
Graphy library

The web site is http://code.google.com/p/graphy/

This copy was downloaded from
http://graphy.googlecode.com/files/graphy_1.0.tar.bz2

Graphy is licensed under the Apache 2.0 open source license.

Local changes:

- Changed imports to make mapreduce library hermetic.



Simplejson library

The web site is http://undefined.org/python/#simple_json

This copy was downloaded from
http://pypi.python.org/packages/source/s/simplejson/simplejson-2.0.5.tar.gz

simplejson is licensed under the MIT open source license.

Local changes:

- Changed imports to make mapreduce library hermetic.


Project Babel

Project Babel is a software package for running a community on Google App Engine. It's written in Python and released under very liberal BSD license. You can use it, modify it or even sell it whatever way you want.

Features:

- Topics are organized under Nodes (Discussion Areas), you can have many Nodes in one community
- Nodes can have header, foot and category property, or organized under Sections
- Two clean themes: one for desktop browser, another for iOS device and Android
- Optimized for modern browsers
- Built-in WebDAV avatar facility, you can host all avatars with MobileMe or other WebDAV servers
- Atom feed output
- HTML5
- Built-in MapReduce tasks for optimizing community data
- Built-in OAuth Twitter client for tweeting and syncing topics/replies
- Built-in Notes feature
- Gravatar support
# Project Babel 2

Project Babel 2 is an open source software package for creating and supporting communities. It's written in Python and running on [Google App Engine](http://code.google.com/appengine), which is a free and robust cloud hosting infrastructure.

[V2EX](http://v2ex.appspot.com/), a community about sharing and discovering interesting stuff of the world, is proudly powered by Project Babel 2.

## Features

* Topics are organized under Nodes (Discussion Areas), you can have many Nodes in one community
* Nodes can have header, foot and category property, or organized under Sections
* Two clean themes: one for desktop browser, another for iPhone and Android
* Optimized for modern browsers
* Built-in WebDAV avatar facility, you can host all avatars with MobileMe or other WebDAV servers
* Atom feed output
* HTML5
* Built-in MapReduce tasks for optimizing community data
* Built-in OAuth Twitter client for tweeting and syncing topics/replies
* Built-in Notes feature
* Gravatar support

## Installation

It's recommended to get the latest codebase of Project Babel 2 with git:

    git clone http://github.com/livid/v2ex.git v2ex
    
Then you can rename *v2ex* to whatever you want to match your own App Engine AppID. And follow the steps:

1. Copy app.yaml.example to app.yaml and change its *application* to match your own AppID.
2. Copy config.py.example to config.py, and if you want to use the built-in Twitter features, please fill in your own OAuth consumer key and secret. And callback address for Twitter is http://your_app_id.appspot.com/twitter/oauth .
3. Add this folder to Google App Engine Launcher as an existing application, and click Deploy. It's done and quite simple, right?

If you have any questions or feature requests, feel free to discuss it in official development node at V2EX:

[http://v2ex.appspot.com/go/babel](http://v2ex.appspot.com/go/babel)

## Troubleshooting

## FAQ

### Why I got an error page says it needs index?

For newly deployed App Engine app, it took some time for Google to build indexes so that your data can be fast accessed. It usually take up to an hour to build all indexes required for a new installation of Project Babel 2.

### How about performance?

According to our actual operation data, Project Babel 2 is able to support 100,000 pageviews under App Engine free quota. If you don't mind enabling billing, Project Babel 2 is able to support large sites with millions pageviews/day as long as you have enough budget for traffic.

Performance is always our area of focus, we'll keep improving it.

## License

Project Babel 2 is licensed under very liberal BSD license.

Copyright (c) 2010, Xin Liu
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of the OLIVIDA nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
