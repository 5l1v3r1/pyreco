# Mackup Changelog

## WIP

## Mackup 0.7.3

- Support for Liftoff (via @Lumde)
- Support for Sublime Text 3 in Linux (via @hiyer)
- Support for Charles (via @raylillywhite)
- Support for Keybase
- Support for MySQL (via @fayland)
- Support for Wget (via @fayland)
- Improved support for Divvy (via @oalders)
- Support for SBT (via @laughedelic)
- Imroved support for nvALT (via @aristidesfl)
- Support for Perl related configuration (via @fayland)
- Support for AusKey (via @antulik)

## Mackup 0.7.2

- Support for Atom (via @damiankloip)
- Support for RubyMine 6 (via @damiankloip)
- Support for SBCL (via @yonkeltron)
- Support for asciinema (via @yonkeltron)
- Support for AWS CLI (via @yonkeltron)
- Limit .vim folder backup for better linux support (via @Imperiopolis)
- Add a missing OmniFocus preferences file (via @sbleon)
- Support for Phoenix (via @vitorgalvao)
- Print out the moved files on uninstall

## Mackup 0.7.1

- Improved the configuration loader engine
- Added support for Processing (via @vitorgalvao)
- Improved support for launchbar and fish (via @aristidesfl)
- Support for R (via @yonkeltron)
- Error out when an absolute filepath is used in a application config

## Mackup 0.7

- Added support for Google Drive to store your files
- Added support for any directory to store your files
- Ability to customize the Mackup directory name
- Improved the test coverage

## Mackup 0.6.1

- Added support for Livestreamer (via @vitorgalvao)
- Added support for Brackets (via @vitorgalvao)
- Added a list mode to list supported apps
- Improved the help message
- Prevent Mackup to be run as a superuser
- Code cleanup

## Mackup 0.6

- Added support for custom applications
- Fixed pip support (via @lachlancooper)
- Added XChat support (via @scottydelta)
- Removing Ember support, it does not like file links
- Homebrew fixes
- Doc updates

## Mackup 0.5.9

- Added support for rTorrent (via @mgalkiewicz)
- Added support for Dolphin (via @lachlancooper)
- Improved Janus support for Vim
- Do not sync Dash Docsets anymore
- Added support for Lightroom 5 (via @Darep)
- Added support for Adobe Camera Raw (via @Darep)
- Refactored the code to prepare future modularization

## Mackup 0.5.8

- Extend Little Snitch with latest user config file (via @stechico)
- Added support to Hands Off! (via @stechico)
- Fixed GnuPG support

## Mackup 0.5.7

- Only sync the config for Bundler
- Don't sync Apple Messages attachments
- Added support for Default Folder X (via @Cottser)
- Added support for Path Finder (via @Cottser)

## Mackup 0.5.6

- Added support for LittleSnitch (via @stechio)
- Added support for OmniGraffle (via @stecico)
- Added support for SABnzbd (via @stechico)
- Added support for Skitch (via @stechico)
- Added support for FontExplorer X (via @stechico)
- Improved Transmission support (via @stechico)
- Added support for Lightroom 2, 3 and 4 (via @stechico)
- Fix Bundlerâ€™s synced dir (via @atipugin)

## Mackup 0.5.5

- Added support for Enjoyable (via @vitorgalvao)
- Added support for Deal Alert (via @vitorgalvao)
- Added support for MagicPrefs (via @vitorgalvao)
- Added support for LaunchBar (via @Cottser)
- Added support for XLD (via @vitorgalvao)
- Added support for Gmail Notifr (via @lachlancooper)
- Added support for Awareness (via @lachlancooper)
- Added support for Chicken (via @lachlancooper)
- Added support for Hexels (via @lachlancooper)
- Added support for Clementine (via @lachlancooper)
- Add support for mpd and ncmpcpp (via @zmrow)
- Improved Sublime 3 support (via @laupiFrpar)
- Added FileZilla support (via @kidh0)
- Added support for Light Table (via @vitorgalvao)

## Mackup 0.5.4

- Added support for Arara and Aspell (via @twsh)
- Removed support of OS X Services, as it does not support links
- Added support for i2cssh and iTunes Applescripts (via @jannae)
- Make slogan consistent throughout (via @Cottser)
- Added tests to cover file copying and linking (via @Cottser)
- Better Apple Messages support (via @vitorgalvao)
- Added support for Keka (via @vitorgalvao)
- Added support for Feeds (via @vitorgalvao)
- Added support for Textual (via @vitorgalvao)

## Mackup 0.5.3

- Added support for Divvy (via @saulshanabrook)
- Added support for Apple Messages (via @pzbyszynski)
- Added support for Skype (via @pzbyszynski)
- Added support for SuperDuper! (via @pzbyszynski)
- Added support for ForkLift 2 (via @pzbyszynski)
- Added support for Ember (via @pzbyszynski)
- Added support for Dash and Cyberduck (via @suprememoocow)
- Added support for Mou (via @jannae)
- Added support for PokerStars (via @vitorgalvao)

## Mackup 0.5.2

- Added support for Tower (via @MichaelRBond)
- Added support for Colloquy (via @MichaelRBond)
- Added support for Twitterrific (via @MichaelRBond)
- Mackup path in dropbox is now configurable via constant (via @MichaelRBond)
- Added support for Spectacle (via @vincecima)

## Mackup 0.5.1

- Added support for exercism (via @mwarkentin)
- Added support for Skim
- Added support for Scenario
- Added support for Ack (via @adamlogic)
- Added support for Stata and SelfControl (via @kfinlay)
- Added support for LaTeXiT (via @twsh)
- Do not link ~/Library/* files on GNU/Linux, should fix #104

## Mackup 0.5

- Added GNU/Linux support (via @flexiondotorg)
- Added the ability to explicitly list the list of applications to sync (thx
  @zuhao)
- Added support for Shuttle, the heroku-accounts plugin for Heroku, bundler,
  pry and awesome-print for Ruby (via @yabawock)
- Added support for Bash it (via @Tam-Lin)

## Mackup 0.4.4

- Conflict folder sync fix (via @ediventurin)
- Added support for PIP (via @dhellmann)
- Added support for FTP's .netrc, Chef, Pear (via @yabawock)
- Added support for Irssi (via @louisrli)
- Added support for Htop and Janus (via @walkertraylor)
- Added support for Transmit (via @dustinmm80)
- Improved Vim support (via @yabawock)

## Mackup 0.4.3

- Added support for nvALT (via @stenehall)
- Added support for Adobe Lightroom, OS X Scripts Services and Quicklook (thx
  @Tam-Lin)
- Added support for Bartender, Caffeine, CloudApp, Droplr, Fantastical, Moom,
  OmniFocus, Pastebot, PopClip, Slogger (via @ediventurin)
- Added support for ClipMenu, MenuMeters, PhpStorm 6, RubyMine 5, Spotify
  (via @hakubo)
- Added support for Concentrate (via @raylillywhite)
- Added support for BibDesk (via @twsh)

## Mackup 0.4.2

- Made a method to check if a process is running (not yet)
- Added support for XCode (via @adeca)
- Added support for CoRD, Spark, f.lux, BetterTouchTool, BetterSnapTool and
  Coda 2 (via @TimCorcoran)
- Added support for Mailplane and Gitbox (via @THEY)

## Mackup 0.4.1

- Hotfix: Checking that a process is runnin is not working everywhere

## Mackup 0.4

- Fixed support for locked files e.g. SourceTree (via @dbingham)
- Added support for Nano (via @stechico)
- Added support for SHSH Blobs (via @stechico)
- Added support for Teamocil and Tmuxinator (via @djquan)
- Added support for Viscosity and Transmission (via @ovrtn)
- Fixed support for Sublime Text (via @nZac)
- Added a config file to not sync some user defined applications (via @nZac)

## Mackup 0.3.2

- Added support for iTerm2 (via @joshbrown)
- Added support for SourceTree (via @stechico)
- Added support for OS X's ColorSync profiles (via @stechico)
- Added support of AppCode 2 (via @MarcoSero)
- Added support of IntelliJIdea 12 (via @MarcoSero)
- Added support of RubyMine 4 (via @MarcoSero)
- Fixed a typo (via @dhellmann)
- Added support for Screen (via @dhellmann)
- Added support for PyPI (via @dhellmann)
- Added support for ExpanDrive (via @dhellmann)
- Added support for Git Hooks (via @dhellmann)

## Mackup 0.3.1

- Added support for Slate (via @stechico)
- Added support for Adium (via @stechico)
- Improved support for Mercurial (via @stechico)
- Added support for Sublime Text 3 (via @laupiFrpar)
- Added support for MPV (via @Nyx0uf)
- Added support for Ventrilo (via @stechico)
- Added support for TextMate (via @hkaju)
- Added support for Tmux, SizeUp, Quicksilver, Witch, ControlPlane, GeekTool,
  Keymo, KeyRemap4MacBook, MercuryMover, PCKeyboardHack (via @orenshk)
- Made the help screen more readable (too many supported apps)

## Mackup 0.3

- Added an uninstall mode to revert a system to its pre-Mackup state
- Added support for Byobu (via @drye)
- Added support for Fish (via @saulshanabrook)
- Improved the Vim support

## Mackup 0.2

- Added support for Emacs and XEmacs
- Added support for Zsh
- Added support for LimeChat
- Added support for Subversion (via @adamme)
- Added support for Oh My Zsh (via @adamme)
- Added support for Ruby and Rails (via @atipugin)
- Added support for Pow (via @atipugin)
- Added support for Ruby Version (via @adamstac)
- Added support for Pentadactyl (via @alanning)
- Added support for Vimperator (via @alanning)
- Improved Git support (via @atipugin)
- Improved Bash support (via @adamme)
- Doc updates

## Mackup 0.1

- Initial release

# How to contribute

To speed up the process of getting your PR (Pull Request) approved and merged
into Mackup, make sure you follow those guidelines:
- Keep one application supported per PR
- Add the application you want to support in the list of supported applications
  in the README.md file
- Add yourself a changelog line at the top WIP section of the CHANGELOG.md file
- Don't contribute an application that already provide a way to sync its
  config. e.g. Google Chrome or Alfred (paid version)
- If you want to sync the config of your favorite application, sync only the
  config, not the data. You don't want to have MB of always changing data in
  your syncing folders.

Thanks in advance for your contribution !

# Configuration

## Storage

### Dropbox

You can specify the storage type Mackup will use to store your configuration
files.
For now you have 3 options: `dropbox`, `google_drive` and `file_system`.
If none is specified, Mackup will try to use the default: `dropbox`.
With the `dropbox` storage engine, Mackup will automatically figure out your
Dropbox folder.

```ini
[storage]
engine = dropbox
```

### Google Drive

If you choose the `google_drive` storage engine instead, Mackup will figure out
where your Google Drive is and store your configuration files in it.

```ini
[storage]
engine = google_drive
```

### File System

If you want to specify another directory, you can use the `file_system` engine
and Mackup won't try to detect any path for you: it will store your files where
you explicitely told him to, using the `path` setting.
The `path` can be absolute (from the `/` of your drive) or relative to your
home directory.
The `path` setting is mandatory when using the `file_system` engine.

```ini
[storage]
engine = file_system
path = some/folder/in/your/home
# or path = /some/folder/in/your/root
```

### Custom Directory Name

You can customize the directory name in which Mackup stores your file. By
default, if not specified, Mackup creates a `Mackup` directory in the storage
engine you chose, e.g. `~/Dropbox/Mackup`.

```ini
[storage]
directory = Mackup
```

For example:

```ini
[storage]
engine = file_system
path = dotfiles
directory = backup
```

This will store your files in the `~/dotfiles/backup` directory in your home.

## Applications

### Only sync one or two application

In your home folder, create a file named `.mackup.cfg` and add the application
names to allow in the `[applications_to_sync]` section, one by line.

```ini
# Example, to only sync SSH and Adium:
[applications_to_sync]
ssh
adium
```

A [sample](.mackup.cfg) of this file is available in this folder. Just copy it
in your home folder:

```bash
$ cp mackup/doc/.mackup.cfg ~/
```

### Don't sync an application

In your home folder, create a file named `.mackup.cfg` and add the application
names to ignore in the `[applications_to_ignore]` section, one by line.

```ini
# Example, to not sync SSH and Adium:
[applications_to_ignore]
ssh
adium
```

A [sample](.mackup.cfg) of this file is available in this folder. Just copy it
in your home folder:

```bash
$ cp mackup/doc/.mackup.cfg ~/
```

### Get official support for an application

Open a [new issue](https://github.com/lra/mackup/issues) and ask for it, or
fork Mackup and open a
[Pull Request](https://help.github.com/articles/using-pull-requests).
The stock application configs are in the `mackup/applications` directory.

### Add support for an application or any file or directory

You can customize the Mackup engine and add support for unsupported
applications or just custom files and directories you'd like to sync.

Let's say that you'd like to add support for Nethack (config file:
`.nethackrc`) and for the `bin` and `.hidden` directories you keep in your
home.

In your home, create a `.mackup` directory and add a config file for the
application you'd like to support.

```bash
$ mkdir ~/.mackup
$ touch ~/.mackup/nethack.cfg
$ touch ~/.mackup/my-files.cfg
```

Edit those files

```bash
$ cat ~/.mackup/nethack.cfg
[application]
name = Nethack

[configuration_files]
.nethackrc
```

```bash
$ cat ~/.mackup/my-files.cfg
[application]
name = My personal synced files and dirs

[configuration_files]
bin
.hidden
```

You can run mackup to see if they are listed
```bash
$ mackup list
Supported applications:
[...]
 - my-files
 - nethack
[...]
```

All good, you can now sync your newly configured files:
```bash
mackup backup
```

If you override an application config that is already supported by Mackup, your
new config for this application will replace the one provided by Mackup.

You can find some sample config in this directory.

# Detailled install instructions for Mackup

There are 3 ways to run mackup

1. Install it with Homebrew and run it (OSX only)
1. Download it, install it with python setuptools and run it (OSX and
   GNU/Linux)
1. Download it, and run it without installing it (OSX and GNU/Linux)

## Install

### With Homebrew (OSX only)

```bash
# Easy
brew install mackup

# Now just run it
mackup -h
```

### With Python Setuptools

```bash
# Download Mackup
curl -o mackup.zip https://codeload.github.com/lra/mackup/zip/master

# Uncompress the archive
unzip mackup.zip

# Install Mackup on your system
cd mackup-master
sudo python setup.py install

# Now you can run it
mackup -h
```

### Run it without installing it

```bash
# Download Mackup
curl -o mackup.zip https://codeload.github.com/lra/mackup/zip/master

# Uncompress the archive
unzip mackup.zip

# Run it without the need to install it
./mackup-master/bin/mackup -h
```

## Upgrade

### With Homebrew (OSX only)

```bash
brew update
brew upgrade
mackup -h
```

### With Python Setuptools

```bash
# Download Mackup
curl -o mackup.zip https://codeload.github.com/lra/mackup/zip/master

# Uncompress the archive
unzip mackup.zip

# Install Mackup on your system
cd mackup-master
sudo python setup.py install

# Now you can run it
mackup -h
```

## Uninstall

### With Homebrew (OSX only)

```bash
brew uninstall mackup
```

### With Python Setuptools

```bash
sudo rm -rf /usr/local/bin/mackup /usr/local/lib/python?.?/site-packages/Mackup-*.egg/
```



# Mackup

Keep your application settings in sync.

[![Build Status](https://travis-ci.org/lra/mackup.png?branch=master)](https://travis-ci.org/lra/mackup)
[![Coverage Status](https://coveralls.io/repos/lra/mackup/badge.png)](https://coveralls.io/r/lra/mackup)
[![Code Health](https://landscape.io/github/lra/mackup/master/landscape.png)](https://landscape.io/github/lra/mackup/master)

## Quickstart

If you have Dropbox installed and want to use it to save your config files,
that's super easy.

On OS X, if you want an easy install, you can install
[Homebrew](http://brew.sh/) and do:
```bash
# Install Mackup
brew install mackup

# Launch it and back up your files
mackup backup
```

If not running OS X, or you don't like Homebrew, run on your current
workstation:
```bash
# Download Mackup
curl -o mackup.zip https://codeload.github.com/lra/mackup/zip/master

# Uncompress the archive
unzip mackup.zip

# Launch it and back up your files
./mackup-master/bin/mackup backup
```

You're all set, and constantly backuped from now on.

Next, on any new workstation, do:
```bash
# Install Mackup
brew install mackup

# Launch it and restore your files
mackup restore
```

Done !

You can find more detailled instructions in [INSTALL.md](INSTALL.md)

## Usage

`mackup backup`

Backup your application settings.

`mackup restore`

Restore your application settings on a newly installed workstation.

`mackup uninstall`

Revert any synced config file to its original state, and delete the Mackup
folder in Dropbox. This will revert your system at pre-Mackup state.

`mackup list`

Display the list of applications supported by Mackup.

`mackup -h`

Get some help, obvious...

## What does it do ?

- Backups your application settings in a safe directory (e.g. Dropbox)
- Syncs your application settings among all your workstations
- Restores your configuration on any fresh install in one command line

By only tracking pure configuration files, it keeps the crap out of your
freshly new installed workstation (No cache, temporary and locally specific
files are transfered).

It also helps you spend more time doing real cool stuff, and less time setting
you environment.

## Bullsh*t, what does it really do to my files ?!

Let's take `git` as an example. Your settings for `git` are saved in your home
folder, in the `.gitconfig` file.

### Backup

If you have Dropbox, when you launch `mackup backup`, here's what it's really
doing:

1. `cp ~/.gitconfig ~/Dropbox/Mackup/.gitconfig`
1. `rm ~/.gitconfig`
1. `ln -s ~/Dropbox/Mackup/.gitconfig ~/.gitconfig`

Now your `git` config is always backup and up to date on all your workstations.

### Restore

When you launch `mackup restore`, here's what it's really doing:

1. `ln -s ~/Dropbox/Mackup/.gitconfig ~/.gitconfig`

That's it, you got your `git` config setup on your new workstation.

`mackup` does the same for any supported application.

### Uninstall

You can revert all your files to their original state.
```bash
# Just run this
mackup uninstall
```
This will move back any file from Dropbox to its original place in your home
folder and destroy the Mackup folder in Dropbox.

## Supported Storages

 - [Dropbox](https://www.dropbox.com/)
 - [Google Drive](https://drive.google.com/)
 - Anything able to sync a folder (e.g. [Git](http://git-scm.com/))

See the [README](doc/README.md) file in the doc directory for more info.

## Supported Applications

  - [Ack](http://beyondgrep.com/)
  - [Adium](http://adium.im/)
  - [Adobe Camera Raw](http://www.adobe.com/products/photoshop/extend.html)
  - [Adobe Lightroom](http://www.adobe.com/products/photoshop-lightroom.html)
  - [AppCode 2](http://www.jetbrains.com/objc/)
  - [Atom](https://atom.io/)
  - [Arara](http://cereda.github.io/arara/)
  - [asciinema](https://asciinema.org/)
  - [Aspell](http://aspell.net/)
  - [AusKey](https://abr.gov.au/AUSkey/)
  - [Awareness](http://iamfutureproof.com/tools/awareness/)
  - [AWS Command Line Interface](https://aws.amazon.com/cli/)
  - [Bartender](http://www.macbartender.com/)
  - [Bash it](https://github.com/revans/bash-it/)
  - [Bash](http://www.gnu.org/software/bash/)
  - [BetterSnapTool](http://blog.boastr.net/)
  - [BetterTouchTool](http://blog.boastr.net/)
  - [BibDesk](http://bibdesk.sourceforge.net/)
  - [Boto](https://github.com/boto/boto)
  - [Brackets](http://brackets.io/)
  - [Bundler](http://bundler.io)
  - [Byobu](http://byobu.co/)
  - [Caffeine](http://lightheadsw.com/caffeine/)
  - [Charles](http://www.charlesproxy.com)
  - [Chef](http://www.opscode.com/chef/)
  - [Chicken](http://sourceforge.net/projects/chicken/)
  - [Clementine](http://www.clementine-player.org/)
  - [ClipMenu](http://www.clipmenu.com/)
  - [CloudApp](http://getcloudapp.com/)
  - [Coda 2](http://panic.com/coda/)
  - [Colloquy](http://colloquy.info/)
  - [Concentrate](http://www.getconcentrating.com/)
  - [ControlPlane](http://www.controlplaneapp.com/)
  - [CoRD](http://cord.sourceforge.net/)
  - [Cyberduck](http://cyberduck.ch/)
  - [Dash](http://kapeli.com/dash)
  - [Deal Alert](http://dealalertapp.com/)
  - [Default Folder X](http://www.stclairsoft.com/DefaultFolderX/)
  - [Divvy](http://mizage.com/divvy/)
  - [Dolphin](https://dolphin-emu.org/)
  - [Droplr](https://droplr.com/hello)
  - [Emacs](http://www.gnu.org/software/emacs/)
  - [Enjoyable](http://yukkurigames.com/enjoyable/)
  - [Exercism](http://exercism.io/)
  - [ExpanDrive](http://www.expandrive.com/)
  - [Fantastical](http://flexibits.com/fantastical)
  - [Feeds](http://www.feedsapp.com/)
  - [Filezilla](https://filezilla-project.org/)
  - [Fish](http://ridiculousfish.com/shell/)
  - [Flux](http://stereopsis.com/flux/)
  - [FontExplorer X](http://www.fontexplorerx.com/)
  - [ForkLift 2](http://www.binarynights.com/forklift/)
  - [GeekTool](http://projects.tynsoe.org/en/geektool/)
  - [Git Hooks](https://github.com/icefox/git-hooks)
  - [Git](http://git-scm.com/)
  - [Gitbox](http://gitboxapp.com/)
  - [Gmail Notifr](http://ashchan.com/projects/gmail-notifr)
  - [GnuPG](http://www.gnupg.org/)
  - [Hands Off!](http://www.oneperiodic.com/products/handsoff/)
  - [Heroku](https://www.heroku.com/)
  - [Hexels](http://hexraystudios.com/hexels/)
  - [Htop](http://htop.sourceforge.net/)
  - [i2cssh](https://github.com/wouterdebie/i2cssh)
  - [IntelliJIDEA 12](http://www.jetbrains.com/idea/)
  - [Irssi](http://www.irssi.org/)
  - [ITerm2](http://www.iterm2.com/)
  - [Janus](https://github.com/carlhuda/janus)
  - [Keka](http://kekaosx.com/)
  - [Keybase](https://keybase.io/)
  - [Keymo](http://manytricks.com/keymo/)
  - [KeyRemap4MacBook](http://pqrs.org/macosx/keyremap4macbook/)
  - [LaTeXiT](http://www.chachatelier.fr/latexit/latexit-home.php?lang=en)
  - [LaunchBar](http://www.obdev.at/products/launchbar/index.html)
  - [Liftoff](http://github.com/thoughtbot/liftoff)
  - [Light Table](http://www.lighttable.com/)
  - [LimeChat](http://limechat.net/mac/)
  - [LittleSnitch](http://www.obdev.at/products/littlesnitch/)
  - [Livestreamer](http://livestreamer.tanuki.se/)
  - [MacOSX](http://www.apple.com/osx/)
  - [MacVim](https://code.google.com/p/macvim/)
  - [MagicPrefs](http://magicprefs.com/)
  - [Mailplane](http://mailplaneapp.com/)
  - [MenuMeters](http://www.ragingmenace.com/software/menumeters/)
  - [Mercurial](http://mercurial.selenic.com/)
  - [MercuryMover](http://www.heliumfoot.com/mercurymover/)
  - [Messages](http://www.apple.com/osx/apps/#messages)
  - [MySQL](http://www.mysql.com/)
  - [Moom](http://manytricks.com/moom/)
  - [Mou](http://mouapp.com/)
  - [mpd](http://www.musicpd.org)
  - [MPV](http://mpv.io/)
  - [Nano](http://www.nano-editor.org/)
  - [ncmpcpp](http://ncmpcpp.rybczak.net)
  - [nvALT](http://brettterpstra.com/projects/nvalt/)
  - [Oh My Zsh](https://github.com/robbyrussell/oh-my-zsh)
  - [OmniFocus](http://www.omnigroup.com/products/omnifocus/)
  - [OmniGraffle](http://www.omnigroup.com/omnigraffle/)
  - [OpenSSH](http://www.openssh.org/)
  - [Pastebot](http://tapbots.com/software/pastebot/)
  - [Path Finder](http://www.cocoatech.com/pathfinder/)
  - [PCKeyboardHack](http://pqrs.org/macosx/keyremap4macbook/pckeyboardhack.html.en)
  - [Pear](http://pear.php.net/)
  - [Pentadactyl](http://5digits.org/pentadactyl/)
  - [Perl](http://www.perl.org/)
  - [Phoenix](https://github.com/sdegutis/Phoenix)
  - [PhpStorm 6](http://www.jetbrains.com/phpstorm/)
  - [PIP](http://www.pip-installer.org/)
  - [PokerStars](http://www.pokerstars.com/)
  - [PopClip](http://pilotmoon.com/popclip/)
  - [Pow](http://pow.cx/)
  - [Processing](http://processing.org/)
  - [PyPI](https://pypi.python.org/pypi)
  - [Quicksilver](http://qsapp.com/)
  - [Rails](http://rubyonrails.org/)
  - [rTorrent](http://libtorrent.rakshasa.no/)
  - [R](http://www.r-project.org/)
  - [Ruby Version](https://gist.github.com/fnichol/1912050)
  - [Ruby](http://ruby-lang.org/)
  - [RubyMine](http://www.jetbrains.com/ruby/)
  - [S3cmd](http://s3tools.org/s3cmd)
  - [SABnzbd](http://sabnzbd.org/)
  - [SBCL](http://www.sbcl.org/)
  - [SBT](http://www.scala-sbt.org/)
  - [Scenario](http://www.lagentesoft.com/scenario/)
  - [Screen](http://www.gnu.org/software/screen/)
  - [SelfControl](http://selfcontrolapp.com/)
  - [Sequel Pro](http://www.sequelpro.com/)
  - [SHSH Blobs](http://en.wikipedia.org/wiki/SHSH_blob)
  - [Shuttle](http://fitztrev.github.io/shuttle/)
  - [SizeUp](http://www.irradiatedsoftware.com/sizeup/)
  - [Skim](http://skim-app.sourceforge.net/)
  - [Skitch](http://evernote.com/skitch/)
  - [Skype](http://www.skype.com/)
  - [Slate](https://github.com/jigish/slate)
  - [Slogger](http://brettterpstra.com/projects/slogger/)
  - [SourceTree](http://sourcetreeapp.com)
  - [Spark](http://www.shadowlab.org/softwares/spark.php)
  - [Spectacle](http://spectacleapp.com/)
  - [Spotify](https://www.spotify.com/)
  - [Stata](http://www.stata.com/)
  - [Sublime Text](http://www.sublimetext.com/)
  - [Subversion](http://subversion.apache.org/)
  - [SuperDuper!](http://www.shirt-pocket.com/SuperDuper/SuperDuperDescription.html)
  - [Teamocil](http://remiprev.github.io/teamocil/)
  - [TextMate](http://macromates.com/)
  - [Textual](http://www.codeux.com/textual/)
  - [Tmux](http://tmux.sourceforge.net/)
  - [Tmuxinator](https://github.com/aziz/tmuxinator)
  - [Tower](http://www.git-tower.com/)
  - [Transmission](http://www.transmissionbt.com/)
  - [Transmit](http://panic.com/transmit/)
  - [Twitterrific](http://twitterrific.com/)
  - [uTorrent](http://www.utorrent.com/)
  - [Ventrilo](http://www.ventrilo.com/)
  - [Vim](http://www.vim.org/)
  - [Vimperator](http://www.vimperator.org/vimperator)
  - [Viscosity](http://www.sparklabs.com/viscosity/)
  - [Wget](https://www.gnu.org/software/wget/)
  - [Witch](http://manytricks.com/witch/)
  - [X11](http://www.x.org/)
  - [Xchat](http://www.xchat.org/)
  - [XCode](https://developer.apple.com/xcode/)
  - [XEmacs](http://www.xemacs.org/)
  - [XLD](http://tmkk.undo.jp/xld/)
  - [Zsh](http://zsh.sourceforge.net/)
  - iTunes Applescripts

You can add your favorite application by forking it and doing a
[Pull Request](https://help.github.com/articles/using-pull-requests).

## Why did you do this ?!

Yesterday, I had a talk with [Zach Zaro](http://zacharyzaro.com/), complaining
about the pain it is to reconfigure our Macbook each time we get a new one or
install from scratch. That's a talk we already had months ago.

I change my workstation every X months. Each time I either loose the
configuration of all the apps I use, or I just waste a bunch of hours getting
setup like I was on my old box. I also spent a lot of time reconfiguring the
same stuff again on all my workstations (home, work)

Boring...

Some people tried to solve the problem on the application layer, like
[Github's Boxen](http://boxen.github.com/), but I feel like it solves a non
problem: I don't really spend time installing stuff, mostly downloading: I
spend time configuring it.

For years, I've used a personnal shell script that was copying known config
files into Subversion, Git or Dropbox, and linked them into my home. But I felt
a lot of us had the same problem: Making a more generic tool could help others
and I could get help from others to support more apps in the tool.

So here comes Mackup, the little tool that will sync all your application
configs to Dropbox (or Google Drive, or anything).

And it's [GPL](http://www.gnu.org/licenses/gpl.html) of course.

## What platform is supported ?

- OS X
- GNU/Linux

## What's up with the weird name ?

Mackup is just a contraction of Mac and Backup, I suck at naming stuff, ok.

## Where can I find more information ?

In the [doc](doc) directory.

## Tests ?

Tests are put in this folder.
Feel free to add more, the more the better !

## How to run the tests ?

```bash
$ cd src/mackup
$ pip install -r requirements.txt
$ nosetests
```

And you should see
```
.
----------------------------------------------------------------------
Ran 1 test in 0.016s

OK
```

Yeah, I wrote this file when there was only 1 test, I hope there will be more
when you read it !

# TODO

Feel free to implement any of those ;)

- `mackup status` to display any synced app, and any app that could be synced
  by launching `mackup backup`
- A GUI, we could definitely use an OS X gui that woule display the status:
  synced apps, unsynced apps, using wxPython ?
- Try with hard links to support the Fonts pb
- 100% test coverage
- Rollback any file that's not maintained by mackup anymore
  https://github.com/lra/mackup/issues/190
- Ability to encrypt specific files, asked in #134 and #109
- Setup some webpage
- Ability to enable/disable an app (will update the cfg file)
- Progress bar on syncing
- Invite the user to generate the conf file at launch if Mackup has no conf
  file
- Merge all the config code in Config()
- Ability to `mackup list` without any storage, and use `mackup list` as a test
  in `homebrew`
- Do not crash on non existing file during uninstall #240
- Simplify the parameter handling with https://github.com/mitsuhiko/click

