tipfy' logo is made using the font SG04 by Shakagraphics.

http://www.dafont.com/shakagraphics.d339?text=tipfy

It is a small and blocky font. We like this.
/lib
====

Use this directory to place your libraries.

This directory is searched first when looking for a package, and
"/distlib" is searched in sequence.

This directory is not editted by a build tool. It is a safe place for custom
libraries or to override packages from the "/distlib" directory.
/locale
=======

This directory is used to store translations for the app. If you are not
going to use internationalization in your app, you can ignore or remove it.
/bin
====

This directory contains scripts and tools to help development.

For example, the development server (dev_appserver) and the deployment
tool (appcfg) are stored here, but there are more.

Tipfy Installation
==================
Tipfy is a small but powerful framework made specifically for Google App
Engine. Here are some quick instructions to get started with it. More details
are available in tipfy's wiki:

  http://www.tipfy.org/wiki/guide/installation/

Our goal gere is to provide a smooth installation process so that you can see
a tipfy application up and running in a few minutes. If you have any problems,
please post a message to the discussion group:

  http://groups.google.com/group/tipfy


All-in-one installation
-----------------------
If you downloaded the all-in-one pack, all you need to do is to start the
development server pointing to the /app dir inside the uncompressed archive:

- Run the dev_appserver tool from the App Engine SDK (or the App Engine
  Launcher) pointing to the /app directory inside the uncompressed archive:

    dev_appserver.py /path/to/project/app

- Open a browser and test the URLs:

    http://localhost:8080/
    http://localhost:8080/pretty

You should see a Hello, World! message. If you do, that's all. Now you have
a project environment to start developing your app.


Do-it-yourself installation
---------------------------
If you downloaded the do-it-yourself pack, you need to first install the
needed libraries before running de development server. Here's how:

- Access the project directory and call the bootstrap script using your
  Python 2.5 interpreter. We pass the command --distribute because it
  is preferable to the default setuptools. This will prepare buildout to run:

    python bootstrap.py --distribute

- Build the project calling bin/buildout. This will download and setup
  tipfy and all libraries inside the /app directory. It may take a while.

    bin/buildout

- Start the development server calling bin/dev_appserver. It will use the
  application from /app by default:

    bin/dev_appserver

- Open a browser and test the URLs:

    http://localhost:8080/
    http://localhost:8080/pretty

You should see a Hello, World! message. If you do, that's all. Now you have
a project environment to start developing your app.

/etc/downloads
==============

This directory is used to cache downloads of package distributions and the
App Engine SDK.
/var
====

This directory contains variable files used by the application.

For example, the datastore and blobstore data are stored here by default.

You generally don't need to care about this directory; it's internal stuff.

Tipfy Docs
==========

Tipfy uses Sphinx for documentation. The docs are written in ReStructuredText.

Quick references:

- http://sphinx.pocoo.org/
- http://docutils.sourceforge.net/rst.html

Building the docs
-----------------

1. Build the project so that Sphinx will have access to the API code: access
   the docs/project directory and run buildout::

       > cd docs/project
       > python2.5 bootstrap.py
       > bin/buildout
       > cd ../

2. Install sphinx (http://sphinx.pocoo.org/)::

       > sudo pip install sphinx

   or...::

       > sudo easy_install sphinx

   or (on Ubuntu)...::

       > sudo apt-get install python-sphinx

3. Build the docs::

       > make html


Rebuilding the docs
-------------------
To rebuild the docs, first clean the current build. Just do::

   > make clean
   > make html


Contributing
------------
Help on documentation is much needed and appreciated!

If you spot a typo or incorrect information in the docs, or think that
something can be improved, please let us know. You can use the mailing list
for this, or talk about it on IRC or, even better, clone the repo (on google
code, bitbucket or github), commit your fixes and then just tell us about it.

- Mailing list: http://groups.google.com/group/tipfy
- IRC channel: #tipfy @ freenode.org
- Project repositories:
  - http://code.google.com/p/tipfy/source/checkout
  - http://bitbucket.org/moraes/tipfy/
  - http://github.com/moraes/tipfy

lib
===

Use this directory to place your libraries.

This directory is searched first when looking for a package, and
"lib/dist" is searched in sequence.

This directory is not editted by a build tool. It is a safe place for custom
libraries or to override packages from the "lib/dist" directory.
/locale
=======

This directory is used to store translations for the app. If you are not
going to use internationalization in your app, you can ignore or remove it.
/bin
====

This directory contains scripts and tools to help development.

For example, the development server (dev_appserver) and the deployment
tool (appcfg) are stored here, but there are more.

Tipfy Installation
==================
Tipfy is a small but powerful framework made specifically for Google App
Engine. Here are some quick instructions to get started with it. More details
are available in tipfy's wiki:

  http://www.tipfy.org/wiki/guide/installation/

Our goal gere is to provide a smooth installation process so that you can see
a tipfy application up and running in a few minutes. If you have any problems,
please post a message to the discussion group:

  http://groups.google.com/group/tipfy


All-in-one installation
-----------------------
If you downloaded the all-in-one pack, all you need to do is to start the
development server pointing to the /app dir inside the uncompressed archive:

- Run the dev_appserver tool from the App Engine SDK (or the App Engine
  Launcher) pointing to the /app directory inside the uncompressed archive:

    dev_appserver.py /path/to/project/app

- Open a browser and test the URLs:

    http://localhost:8080/
    http://localhost:8080/pretty

You should see a Hello, World! message. If you do, that's all. Now you have
a project environment to start developing your app.


Do-it-yourself installation
---------------------------
If you downloaded the do-it-yourself pack, you need to first install the
needed libraries before running de development server. Here's how:

- Access the project directory and call the bootstrap script using your
  Python 2.5 interpreter. We pass the command --distribute because it
  is preferable to the default setuptools. This will prepare buildout to run:

    python bootstrap.py --distribute

- Build the project calling bin/buildout. This will download and setup
  tipfy and all libraries inside the /app directory. It may take a while.

    bin/buildout

- Start the development server calling bin/dev_appserver. It will use the
  application from /app by default:

    bin/dev_appserver

- Open a browser and test the URLs:

    http://localhost:8080/
    http://localhost:8080/pretty

You should see a Hello, World! message. If you do, that's all. Now you have
a project environment to start developing your app.

/etc/downloads
==============

This directory is used to cache downloads of package distributions and the
App Engine SDK.
/var
====

This directory contains variable files used by the application.

For example, the datastore and blobstore data are stored here by default.

You generally don't need to care about this directory; it's internal stuff.

Management utilities
====================
This is unfinished and a work in progress. We need someone with the time to
continue developing it.

/lib
====

Use this directory to place your libraries.

This directory is searched first when looking for a package, and
"/distlib" is searched in sequence.

This directory is not editted by a build tool. It is a safe place for custom
libraries or to override packages from the "/distlib" directory.
/locale
=======

This directory is used to store translations for the app. If you are not
going to use internationalization in your app, you can ignore or remove it.
lib
===

Use this directory to place your libraries.

This directory is searched first when looking for a package, and
"lib/dist" is searched in sequence.

This directory is not editted by a build tool. It is a safe place for custom
libraries or to override packages from the "lib/dist" directory.
/locale
=======

This directory is used to store translations for the app. If you are not
going to use internationalization in your app, you can ignore or remove it.
/bin
====

This directory contains scripts and tools to help development.

For example, the development server (dev_appserver) and the deployment
tool (appcfg) are stored here, but there are more.

Tipfy Installation
==================
Tipfy is a small but powerful framework made specifically for Google App
Engine. Here are some quick instructions to get started with it. More details
are available in tipfy's wiki:

  http://www.tipfy.org/wiki/guide/installation/

Our goal gere is to provide a smooth installation process so that you can see
a tipfy application up and running in a few minutes. If you have any problems,
please post a message to the discussion group:

  http://groups.google.com/group/tipfy


All-in-one installation
-----------------------
If you downloaded the all-in-one pack, all you need to do is to start the
development server pointing to the /app dir inside the uncompressed archive:

- Run the dev_appserver tool from the App Engine SDK (or the App Engine
  Launcher) pointing to the /app directory inside the uncompressed archive:

    dev_appserver.py /path/to/project/app

- Open a browser and test the URLs:

    http://localhost:8080/
    http://localhost:8080/pretty

You should see a Hello, World! message. If you do, that's all. Now you have
a project environment to start developing your app.


Do-it-yourself installation
---------------------------
If you downloaded the do-it-yourself pack, you need to first install the
needed libraries before running de development server. Here's how:

- Access the project directory and call the bootstrap script using your
  Python 2.5 interpreter. We pass the command --distribute because it
  is preferable to the default setuptools. This will prepare buildout to run:

    python bootstrap.py --distribute

- Build the project calling bin/buildout. This will download and setup
  tipfy and all libraries inside the /app directory. It may take a while.

    bin/buildout

- Start the development server calling bin/dev_appserver. It will use the
  application from /app by default:

    bin/dev_appserver

- Open a browser and test the URLs:

    http://localhost:8080/
    http://localhost:8080/pretty

You should see a Hello, World! message. If you do, that's all. Now you have
a project environment to start developing your app.

/etc/downloads
==============

This directory is used to cache downloads of package distributions and the
App Engine SDK.
/var
====

This directory contains variable files used by the application.

For example, the datastore and blobstore data are stored here by default.

You generally don't need to care about this directory; it's internal stuff.

Welcome to Tipfy!
=================

Tipfy is a small but powerful framework designed specifically for Google
App Engine. It is a lot like webapp::

  from tipfy import RequestHandler, Response

  class HelloWorldHandler(RequestHandler):
      def get(self):
          return Response('Hello, World!')


...but offers a lot of features (own authentication, sessions, i18n etc) and
other goodies that webapp misses. Everything in a modular, lightweight way,
tuned for App Engine. You use only what you need, when you need.

Read the documentation to learn more about it:

  http://www.tipfy.org/docs

For questions and comments, join our discussion group:

  http://groups.google.com/group/tipfy

And if you have any issues, open a ticket at Google Code:

  http://code.google.com/p/tipfy/


Installation
============

Read the instructions in `project/README.txt` or for a more detailed
description see `installation instructions <http://www.tipfy.org/wiki/guide/installation/>`_.

Unit test setup
---------------
Run the tests inside a virtualenv. If you don't have it installed:

    $ pip install virtualenv

Then create a virtualenv inside the tests directory:

    $ cd path/to/tipfy/tests
    $ virtualenv env

Activate the virtualenv. On *nix:

    $ . env/bin/activate

...or on Windows:

    $ env\scripts\activate

Then install dependencies and libraries ued by the tests:

    $ pip install werkzeug
    $ pip install jinja2
    $ pip install blinker
    $ pip install babel
    $ pip install gaepytz
    $ pip install mako
    $ pip install coverage

Alternatively, install this compiled babel trunk for format_timedelta support:
http://tipfy.googlecode.com/files/babel_trunk_with_format_timedelta.tar.bz2

Uncompress, access the uncompressed dir, then:

    $ python setup.py install

Running the tests
-----------------
Activate the virtualenv. Then use the Makefile to run all tests (only tested
on Linux):

    $ make test

Or to run single tests:

    $ make app_test
    $ make config_test
    $ ...

Or to run the coverage:

    $ make coverage

