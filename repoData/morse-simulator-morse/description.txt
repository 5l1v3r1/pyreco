Documentation README 
====================

- MORSE documentation is made available as a set of text files using the 
reStructuredText syntax [1].

- The current state of the documentation may be consulted online on the 
official MORSE webpage [2].

- Internal link must have this form:

:doc:`dir/file`

- Media can be embedded in the documentation. Images must be stored in the 
media/ directory and can be linked this way:

.. image:: ../media/image.jpg
  :width: 123
  :align: center

(cf reStructuredText image syntax for details regarding layout)

[1] http://docutils.sourceforge.net/rst.html
[2] http://morse.openrobots.org

 1. time  : (msec) Orocos Time

 2. Xv[0] : (m) ReSSAC UAV Position North
 3. Xv[1] : (m) ReSSAC UAV Position East
 4. Xv[2] : (m) ReSSAC UAV Position Down

 5. Vv[0] : (m/sec) ReSSAC UAV Velocity North
 6. Vv[1] : (m/sec) ReSSAC UAV Velocity East
 7. Vv[2] : (m/sec) ReSSAC UAV Velocity Down

 8. av[0] : (m/sec²) ReSSAC UAV Acceleration Body Forward - biased
 9. av[1] : (m/sec²) ReSSAC UAV Acceleration Body Right   - biased
10. av[2] : (m/sec²) ReSSAC UAV Acceleration Body Down    - biased

11. phi   : (rad) ReSSAC UAV Attitude Angle Roll
12. theta : (rad) ReSSAC UAV Attitude Angle Pitch
13. psi   : (rad) ReSSAC UAV Attitude Angle Yaw (Heading) - biased

14. Xt[0] : (m) Ground Target Position North
15. Xt[1] : (m) Ground Target Position East
16. Xt[2] : (m) Ground Target Position Down

17. Vt[0] : (m/sec) Ground Target Velocity North
18. Vt[1] : (m/sec) Ground Target Velocity East
19. Vt[2] : (m/sec) Ground Target Velocity Down


OpenRobots Simulator
====================

    (c) LAAS-CNRS/ONERA 2009-2010 LAAS-CNRS 2011-2014

[![Build Status](https://travis-ci.org/morse-simulator/morse.png?branch=master)](https://travis-ci.org/morse-simulator/morse)

[MORSE](http://morse.openrobots.org) (Modular OpenRobots simulation Engine) is
a Blender-based robotic simulator.  It is a BSD-licensed project (cf
[LICENSE](LICENSE)).

It is meant to be versatile (simulation of field robotics, indoor
robotics, human robot interaction, multi-robots systems) and allow
simulation at different levels (from raw cameras to high-level
semantics).

The communication with the simulator is middleware independent. At the
moment, MORSE supports the [following
middlewares](http://www.openrobots.org/morse/doc/latest/user/integration.html):

- ROS
- Yarp
- pocolibs
- MOOS
- socket

Installation
------------

Please read INSTALL or check the [on-line installation
instructions](http://www.openrobots.org/morse/doc/latest/user/installation.html).

Documentation
-------------

The MORSE documentation is available from the doc/ directory.  It is
available as well online, on the [MORSE
website](http://www.openrobots.org/morse/doc).

You can also [subscribe to
morse-users@laas.fr](https://sympa.laas.fr/sympa/subscribe/morse-users).

How to contribute
-----------------

Even if the code-base is not stabilized yet, contribution to MORSE are
more than welcome.

You can contribute new robot models, new sensors, we have a TODO list
for the Blender game engine itself...

Feel free to [subscribe to
morse-dev@laas.fr](https://sympa.laas.fr/sympa/subscribe/morse-dev) and ask!

Code is available on [GitHub](https://github.com/morse-simulator/morse).

Feel free to fork, pull request or submit issues to improve the project!

Acknowledgements
----------------

The development of MORSE is partially funded by the Foundation RTRA
within the ROSACE project framework, and by DGA
<http://www.defense.gouv.fr/dga> through the ACTION
<http://action.onera.fr> project.


