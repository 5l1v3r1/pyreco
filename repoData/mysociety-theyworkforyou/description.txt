1) ABOUT
========

This is the Python package 'antlr3', which is required to use parsers created
by the ANTLR3 tool. See <http://www.antlr.org/> for more information about
ANTLR3.


2) STATUS
=========

The Python target for ANTLR3 is still in beta. Documentation is lacking, some
bits of the code is not yet done, some functionality has not been tested yet.
Also the API might change a bit - it currently mimics the Java implementation,
but it may be made a bit more pythonic here and there.

WARNING: Currently the runtime library for V3.1 is not compatible with
recognizers generated by ANTLR V3.0.x. If you are an application developer,
then the suggested way to solve this is to package the correct runtime with
your application. Installing the runtime in the global site-packages directory
may not be a good idea.
It is still undetermined, if a future release of the V3.1 runtime will be
compatible with V3.0.x recognizers or if future runtimes V3.2+ will be
compatible with V3.1 recognizers.
Sorry for the inconvenience.


3) DOWNLOAD
===========

This runtime is part of the ANTLR distribution. The latest version can be found
at <http://www.antlr.org/download.html>.

If you are interested in the latest, most bleeding edge version, have a look at
the perforce depot at <http://fisheye2.cenqua.com/browse/antlr>. There are
tarballs ready to download, so you don't have to install the perforce client.


4) INSTALLATION
===============

Just like any other Python package:
$ python setup.py install

See <http://docs.python.org/inst/> for more information.


5) DOCUMENTATION
================

Documentation (as far as it exists) can be found in the wiki
<http://www.antlr.org/wiki/display/ANTLR3/Antlr3PythonTarget>


6) REPORTING BUGS
=================

Please send bug reports to the ANTLR mailing list 
<http://www.antlr.org:8080/mailman/listinfo/antlr-interest> or
<pink@odahoda.de>.

Existing bugs may appear someday in the bugtracker:
<http://www.antlr.org:8888/browse/ANTLR>


7) HACKING
==========

Only the runtime package can be found here. There are also some StringTemplate
files in 'src/org/antlr/codegen/templates/Python/' and some Java code in
'src/org/antlr/codegen/PythonTarget.java' (of the main ANTLR3 source
distribution).

If there are no directories 'tests' and 'unittests' in 'runtime/Python', you
should fetch the latest ANTLR3 version from the perforce depot. See section
DOWNLOAD.
You'll need java and ant in order to compile and use the tool.
Be sure to properly setup your CLASSPATH.
(FIXME: is there some generic information, how to build it yourself? I should
point to it to avoid duplication.)

You can then use the commands
$ python setup.py unittest
$ python setup.py functest
to ensure that changes do not break existing behaviour.

Please send patches to <pink@odahoda.de>. For larger code contributions you'll
have to sign the "Developer's Certificate of Origin", which can be found on
<http://www.antlr.org/license.html> or use the feedback form at
<http://www.antlr.org/misc/feedback>.

Django is a high-level Python Web framework that encourages rapid development
and clean, pragmatic design.

All documentation is in the "docs" directory and online at
http://www.djangoproject.com/documentation/.  If you're just getting started,
here's how we recommend you read the docs:

    * First, read docs/install.txt for instructions on installing Django.

    * Next, work through the tutorials in order (docs/tutorial01.txt,
      docs/tutorial02.txt, etc.).

    * If you want to set up an actual deployment server, read docs/modpython.txt
      for instructions on running Django under mod_python.

    * The rest of the documentation is of the reference-manual variety.
      Read it -- and the FAQ -- as you run into problems.

Docs are updated rigorously. If you find any problems in the docs, or think they
should be clarified in any way, please take 30 seconds to fill out a ticket
here:

http://code.djangoproject.com/newticket

To get more help:

    * Join the #django channel on irc.freenode.net. Lots of helpful people
      hang out there. Read the archives at http://simon.bofh.ms/logger/django/ .

    * Join the django-users mailing list, or read the archives, at
      http://groups.google.com/group/django-users.

To contribute to Django:

    * Check out http://www.djangoproject.com/community/ for information
      about getting involved.


ipaddr.py is a library for working with IP addresses, both IPv4 and IPv6.
It was developed by Google for internal use, and is now open source.

Project home page: http://code.google.com/p/ipaddr-py/

Please send contributions to ipaddr-py-dev@googlegroups.com.  Code should
include unit tests and follow the Google Python style guide:
http://code.google.com/p/soc/wiki/PythonStyleGuide

PyYAML - The next generation YAML parser and emitter for Python.

To install, type 'python setup.py install'.

You may build faster LibYAML based parser and emitter with
'python setup_with_libyaml.py install'.
Then you may use the LibYAML based parser this way:
    >>> yaml.load(stream, Loader=yaml.CLoader)
    >>> yaml.dump(data, Dumper=yaml.CDumper)

For more information, check the PyYAML homepage:
'http://pyyaml.org/wiki/PyYAML'.

Documentation (rough and incomplete though):
'http://pyyaml.org/wiki/PyYAMLDocumentation'.

Post your questions and opinions to the YAML-Core mailing list:
'http://lists.sourceforge.net/lists/listinfo/yaml-core'.

Submit bug reports and feature requests to the PyYAML bug tracker:
'http://pyyaml.org/newticket?component=pyyaml'.

PyYAML is written by Kirill Simonov <xi@resolvent.net>.  It is released
under the MIT license. See the file LICENSE for more details.

Copyright 2008 Google Inc.
All rights reserved.

App Engine SDK - Development tools for Google App Engine

CONTENTS
========

   * Installing on Mac OSX
   * Installing on Windows
   * Installing on Linux and other platforms
   * Running the SDK
   * Using the SDK
   * Using the App Engine Launcher


INSTALLING ON Mac OSX
=====================
1) Download and install Python 2.5 from http://www.python.org/download/
2) Download the SDK installer from http://code.google.com/appengine/downloads
3) Install the SDK by double-clicking on the GoogleAppEngine.dmg file and
running the installer.


INSTALLING ON WINDOWS
=====================
1) Download and install Python 2.5 from http://www.python.org/download/
2) Download the SDK installer from http://code.google.com/appengine/downloads
3) Install the SDK by double-clicking on the GoogleAppEngine.msi file and
running the installer.


INSTALLING ON LINUX AND OTHER PLATFORMS
===============================
1) Download and install Python 2.5 from http://www.python.org/download/
2) Download the SDK zip file from http://code.google.com/appengine/downloads
3) Unpack the zip file.


RUNNING THE SDK
=========================
You can run the SDK with the following command:

dev_appserver.py [options] <application root>

Application root must be the path to the application to run in this server.
Must contain a valid app.yaml or app.yml file.

Options:
  --help, -h                 View this helpful message.
  --debug, -d                Use debug logging. (Default false)
  --clear_datastore, -c      Clear the Datastore on startup. (Default false)
  --address=ADDRESS, -a ADDRESS
                             Address to which this server should bind. (Default
                             localhost).
  --port=PORT, -p PORT       Port for the server to run on. (Default 8080)
  --datastore_path=PATH      Path to use for storing Datastore file stub data.
                             (Default /tmp/dev_appserver.datastore)
  --history_path=PATH        Path to use for storing Datastore history.
                             (Default /tmp/dev_appserver.datastore.history)
  --require_indexes          Disallows queries that require composite indexes
                             not defined in index.yaml.
  --smtp_host=HOSTNAME       SMTP host to send test mail to.  Leaving this
                             unset will disable SMTP mail sending.
                             (Default '')
  --smtp_port=PORT           SMTP port to send test mail to.
                             (Default 25)
  --smtp_user=USER           SMTP user to connect as.  Stub will only attempt
                             to login if this field is non-empty.
                             (Default '').
  --smtp_password=PASSWORD   Password for SMTP server.
                             (Default '')
  --enable_sendmail          Enable sendmail when SMTP not configured.
                             (Default false)
  --show_mail_body           Log the body of emails in mail stub.
                             (Default false)
  --auth_domain              Authorization domain that this app runs in.
                             (Default gmail.com)
  --debug_imports            Enables debug logging for module imports, showing
                             search paths used for finding modules and any
                             errors encountered during the import process.
  --disable_static_caching   Never allow the browser to cache static files.
                             (Default enable if expiration set in app.yaml)



USING THE SDK
=======================
For instructions on getting started with Google App Engine, please see the
Google App Engine Getting Started Guide

http://code.google.com/appengine/docs/gettingstarted


USING THE APP ENGINE LAUNCHER
=============================
The Windows and Mac OSX Python SDKs include an additional development tool
called the App Engine Launcher.  This tool provides a simple graphical
interface to create projects, run them locally, and deploy them to Google's App
Engine servers. It can be used in place of the dev_appserver and appcfg
command-line tools.

The Windows SDK can optionally install a desktop short-cut during
installation. If you are missing the short-cut, you can find the launcher in
the launcher subdirectory of your App Engine installation. The default
location is
C:\Program Files\Google\google_appengine\launcher\GoogleAppEngineLauncher.exe

In Mac OSX, the Launcher is installed by dragging it out of the .dmg to a
location specified by the user. The Launcher contains the SDK inside of it.
A typical drag-install destination for the Launcher and SDK is
/Applications/GoogleAppEngineLauncher.app

Contains records of deliberations to decide the national questions for the
TheyWorkForYou surveys of candidates for Parliament.


2010 General Election
=====================

Recording of judging session in London on Monday, 29 March 2010, which decided
the national questions which were asked to all candidates in the run up to
the May 2010 General Election.

2 hours, 20 minutes, in two parts

2010-national-questions-judging-1.wma
2010-national-questions-judging-2.wma

See bin/national-issues.csv for the final list of issues selected.


*** More, better information avaialable here:
*** https://secure.mysociety.org/intranet/ProductionSites/TheyWorkForYou/GuardianElectionSurvey


The Guardian hit the election survey results from within their CMS, at the bottom 
of every "Politcal Person" page.
Currently, we return empty content if there is no result to show (i.e., not a 404).
This content contains an HTML comment indicating why there's no content.
See guardian_candidate in views.py, but generally problems may be:

  * couldn't find anyone matching the aristotle-ID (most unlikely since the page exists on their site)
  * aristotle data doesn't state this person as a 2010 electoral candidate
  * found the aristotle name, but couldn't find a match in our data
    - most likely: surname spelt differently
    - slightly less likely: couldn't find the constituency (search by name)
  * found everything, but the candidate did not answer the survey
  
The HTML comment also indicates whether or not the aristotle-id was in the map
(if it was, the number shown in the YNMP-id it's mapped to), or, if it wasn't,
it'll say that it saved it.

Once an aristotle-id is mapped to a YNMP-id, that mapping will *always* be used
instead of the searching algorithm. You may need to manually delete a key if it's
stopping a better match being found; conversely if you add the id it will always
return the (mapped) candidate.

==========================================================================
This is the microapp definition:
name:--------------------------------------------------------------------
twfy-candidate-survey

provider:----------------------------------------------------------------
mySociety.org

rootURI:-----------------------------------------------------------------
http://election.theyworkforyou.com/

XML:--------------------------------------------------------------------
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<microapp interface-version="1" name="twfy-candidate-survey" provider="mySociety.org" version="1.0">
    <components>
        <component-definition
                display-name="Your Next MP Survey Results"
                name="twfy-survey-results"
                path="guardian_candidate/{key:aristotle.person_id}"
                widths="460"/>
    </components>
</microapp>

Root CMS Path:-----------------------------------------------------------
/Guardian/twfysurve
# TheyWorkForYou.com Installation Instructions

$Id: INSTALL.txt,v 1.15 2009-08-04 14:48:49 francis Exp $

## Introduction

This file explains how to install a working version of theyworkforyou.com. I'll
assume you have a basic knowledge of Apache, PHP and MySQL.

## System Requirements

* Perl 5.8.1

* PHP 5.3

    `short_open_tag` has to be enabled, and PHP must be configured with curl,
    using the `--with-curl` option.

* Apache 1.3.28 or 2.2.23

* MySQL 4.1 or 5.0

    Note: it is possible to make the code with 4.0 versions of MySQL, but you
    have to do some mucking around with character sets.
  
* Xapian

    You should be able to run the site without installing Xapian (the search
    engine, see below), but the site might error; if this happens to you,
    contact us so we can make it optional better. If you do have Xapian
    installed, you'll need to make sure PHP includes the Xapian extension by
    adding extension=xapian.so to your php.ini file.

* [Composer](https://getcomposer.org/)

    Composer is used to generate TheyWorkForYou's autoloader, as well as to
    manage some development dependencies. If you are running the site, you can
    generate the required files by running `composer install --no-dev`. If you
    plan on using development tools such as PHPUnit or PHPDoc, you should run
    `composer install` instead.

    Composer will automatically manage as many of its own dependencies as
    possible, but may prompt you if you need to manually install others.

* Other libraries and modules.

You will also need a few other library packages. There is a list, given as the
names of Debian packages, in `theyworkforyou/conf/packages`.

## Other sources of help

Documentation and help is also available from the following:

1. mySociety IRC - http://www.irc.mysociety.org/ - there are generally always
people hanging around willing to help or point you in the right direction.

2. Out of date wiki:

    http://wiki.theyworkforyou.com/cgi-bin/moin.cgi

3. Also look out for announcements on http://www.theyworkforyou.com/
   or http://www.mysociety.org/

## Installation

**Note:**  
I assume you will set this up to run as a *name based virtual host*. It's quite
possible to set it up without using its own virtual host, but I'll not cover
that here.

### Installation Section 1: The Basics

1. Download the latest version of the TheyWorkForYou code from
http://github.com/mysociety/theyworkforyou.

2. Create a new MySQL database:  
  
        mysqladmin -u root -p create twfy

3. Create a user for your database:

        grant all on twfy.* to twfy@localhost identified by 'mypass';

    (to load the Wikipedia titles, you'll need the FILE privilege too, I'm not
    sure if the above line adds it or not).

4. Create database schema. The creation script is in the `db` subdirectory of
the theyworkforyou source code package.  
  
        $ cd db
        $ mysql -u twfy -p twfy < schema.sql

5. Configure the configuration file. In directory `<theyworkforyou>/conf` you
should rename the file `general-example` to `general` and then edit the first
few lines to be appropriate for your setup. Make sure the directories you
specify have the trailing `/`, unless otherwise specified.

6. Configure Apache:
    If you want to create a virtual host, make sure that the NameVirtualHost
    directive is uncommented and says `NameVirtualHost *` and then add something
    like the following, with the paths updated for your setup, and restart
    Apache (`apachectl restart`). The `Include` line is to get the site specific
    commands, like nice rewriting of URLs and so on.  
  
        <VirtualHost localether>
            ServerAdmin me@example.com
            DocumentRoot /data/vhost/www.theyworkforyou.com/theyworkforyou/www/docs
            ServerName twfy.example.com
            <Directory /data/vhost/www.theyworkforyou.com/theyworkforyou/www/docs>
                Options FollowSymLinks
                AllowOverride All
                Allow from all
                Order allow,deny
            </Directory>

            Include /data/vhost/www.theyworkforyou.com/theyworkforyou/conf/httpd.conf

            ErrorLog /var/log/httpd/twfy_error
            CustomLog /var/log/httpd/twfy_access combined
        </VirtualHost>

### Installation Section 2: Getting Some Data

In this section we'll populate your mysql database with lots of nice data about
MPs. This will be based on XML format data published by theyworkforyou.com.

1. Download various data from http://www.theyworkforyou.com/pwdata/

    You need to preserve the directory structure which exists under pwdata, but
    you don't need to get *everything*. Most of the useful stuff is under
    scrapedxml. You'll also need the members directory in the parlparse folder,
    which is available from http://project.knowledgeforge.net/ukparse/svn/trunk/parlparse/.
    (and via SVN checkout). I recommend either using rsync or downloading the
    zip files containing all the data if you want it - for more information,
    see http://parser.theyworkforyou.com/ under "Getting the Data".

2. Now you have that data, you are ready to import it into your database. You do
this using a script called `xml2db.pl` which is in the `scripts` subdir.

3. Edit the config file (conf/general) to tell it where to look for this data
using the variables `RAWDATA` and `PWMEMBERS`. `PWMEMBERS` should point to the
`members` subdir which you fetched above.

4. now run `xml2db.pl` as follows:  

        $ ./xml2db.pl --wrans --debates --members --lords --all

    That will process all written answers, debates and members. Running the
    script with no args gives usage.

**You should now have a working install of theyworkforyou.com**

## Final notes/known issues

1. Features that don't work on development versions:
    * The Postcode lookup service is disabled on development versions. Instead,
    postcodes are mapped randomly but deterministically to MPs.

2. Search engine:

    The search engine relies uses Xapian (http://www.xapian.org/), which is a
    search toolkit written in C++. In order to use the search system, you need
    to either install the PHP bindings of Xapian from a package, or compile them
    yourself. If you don't have Xapian, you will probably get an error like this
    when you try to do a search:  
  
        Fatal error: Class 'XapianStem' not found in /.../www/includes/easyparliament/searchengine.php on line 39  
There are some old instructions on compiling Xapian for PHP at
http://lists.tartarus.org/pipermail/xapian-discuss/2004-May/000037.html  
  
    You need to run `search/index.pl sincefile` to create the Xapian index. If
    you get an error like this while doing it, you may have run out of disk
    space. You can probably use `search/indexall.sh` to help.

        DBD::mysql::st execute failed: Incorrect key file for table '/tmp/#sql_b63_0.MYI'; try to repair it at ./index.pl line 118.

3. Git Submodules

    If you've downloaded your copy by git cloning, you'll need to pull down the
    submodules in commonlib.

    You can do this by going to the directory where you cloned the repo and run
    `git submodule update --init`


# License

## TheyWorkForYou

Copyright (c) 2003-2004, FaxYourMP Ltd where not otherwise marked
Copyright (c) 2003-2004, various as marked in individual files
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

* Neither the name of FaxYourMP Ltd nor the names of its contributors nor
the name TheyWorkForYou may be used to endorse or promote products derived from
this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

## HTMLPurifier

This software makes use of the HTMLPurifier library, which is licenses under the
GNU Lesser General Public License. A copy of this license is available at the
following location in this repository:

`www/includes/standalone/HTMLPurifier/LICENSE.txt`

Hello everyone,

If you're looking to set up a new Parliamentary monitoring site then you
should look at our Pombola probject at
http://www.mysociety.org/international/pombola/ which takes the lessons
we've learned from writing and running TheyWorkForYou and uses them to
create a modern, flexible and more easily adaptable platform for
creating your own Parliamentary monitoring site. We strongly encourage
people to use this rather than trying to adapt TheyWorkForYou to their
own requirements.

If you want to dig in to the source of TheyWorkForYou then carry right
on below.

We're pleased to release the TheyWorkForYou.com source code. This is the code
for the website itself. It's mainly written in PHP, although there are also some
Perl scripts for database loading and indexing. The backend parser code is
separate and available from the UKParse Subversion repository on KnowledgeForge.

The TheyWorkForYou.com source code in this distribution is released under a BSD
style license. Roughly, this means you are free to copy, use, modify and
redistribute the code or binaries made from the code. Commercial or non-
commercial use is allowed. However, we disclaim warranty, and expect you not to
use our name without our permission.

See the file LICENSE.txt for exact legal information.

## What is TheyWorkForYou.com anyway?

Everything MPs say in the UK's House of Commons is recorded in a document called
Hansard. TheyWorkForYou.com helps make sense of this vital democratic resource
and, crucially, allows you to add your own annotations and links to the official
transcripts of Parliament.

## How on earth do I use this code?

See INSTALL.md for installation questions.

If you have questions, the best place to ask is the mySociety developers-public
email list at
https://secure.mysociety.org/admin/lists/mailman/listinfo/developers-public

### Developing with Vagrant

You will need the latest versions of VirtualBox and Vagrant, then:

* Stick an entry in your `hosts` file to point `theyworkforyou.dev` at `192.168.88.10`.
* Run `vagrant up`.
* Go make a cup of tea. It may take a while whilst Vagrant and Puppet do their thing.
* Point your web browser at `http://theyworkforyou.dev` and marvel at modern technology.

#### Compiling Static Assets

If you're working on a page which uses the redesign, you will need to compile
static assets:

* `vagrant ssh`
* `sudo gem install zurb-foundation`
* `sudo gem install compass`
* `cd /data/twfy/www/docs/style`
* `compass compile` for a one-off compilation or `compass watch` to recompile on changes

## Testing

TheyWorkForYou includes a (currently *very limited*) test suite, using PHPunit.
To run tests, ensure that the environment variables `TWFY_TEST_DB_HOST`,
`TWFY_TEST_DB_NAME`, `TWFY_TEST_DB_USER` and `TWFY_TEST_DB_PASS` are set and
contain relevant information for your testing database. The database will be
stripped down and rebuilt during testing, so make sure it's not an important
copy.

You may find that in some versions of PHPUnit errors are thrown regarding code
coverage reports. If this is the case, the version installed by [Composer](http://getcomposer.org/)
and located at `/vendor/bin/phpunit` should run correctly.

### Build Status

[![Build Status](https://travis-ci.org/mysociety/theyworkforyou.png?branch=master)](https://travis-ci.org/mysociety/theyworkforyou)

[![Code Coverage](https://scrutinizer-ci.com/g/mysociety/theyworkforyou/badges/coverage.png?s=c57f14b63bc4010f6daa58b51c8c5a16be883bc3)](https://scrutinizer-ci.com/g/mysociety/theyworkforyou/)

[![Scrutinizer Quality Score](https://scrutinizer-ci.com/g/mysociety/theyworkforyou/badges/quality-score.png?s=438f0b4db5d9ce959aa80e4a87ac77af60d92da2)](https://scrutinizer-ci.com/g/mysociety/theyworkforyou/)

To update the site news, edit editme.php.

video_status column, hansard table
==================================

This bitfield documents the status of video with respect to the speech.

Bit 0 = according to the bbcparlvid database and Hansard's timestamp, there is video for this speech.
Bit 1 = CaptionBot has a timestamp for this speech.
Bit 2 = Someone has timestamped this speech, yay.
Bit 3 = There is no video for this speech, no matter what the above lot say.

0,2	No video
1,3	Video, needs timestamping
4,6	Impossible (hopefully!)
5,7	Timestamped by user
8+	No video available, manual override

video_timestamps table
======================

user_id is currently -1 for CaptionBot, NULL for anonymous, or the user's user_id.
(Might change this at some point to be 0 for anonymous to make the queries simpler.)

deleted is set to 1 if the user clicks Oops (or lets us know that the video is wrong).
If you mark a timestamp as deleted, you'll need to update the video_status column as
above (generally AND with 11 to remove the setting of bit 2).

A note about the email templates.
=================================

The first line should start with 'Subject:' and include the 
default subject line for the mail. It's possible to override
this dynamically in the code.

The {TOKENS} will all be replaced with dynamic text when the 
email is sent. If you need to add new tokens when re-writing
an email, the code will need to be changed to make sure the
correct text is available.


For those that need to know, the emails are sent by
send_template_email() in utility.php.

-- 
phil@gyford.com
