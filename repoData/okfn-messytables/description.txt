0.14.0 (wip, master)
* Add null processor
* Update magic library

0.13.0 (15 October 2013)
* #86 Provide more information about the original table (properties)
* #89 Skip PDF tests if PDFTables not installed

0.12.0 (7 August 2013)
* #51 Removed FloatType, use DecimalType
* #81 Make HTML table name human-readable
* #82 Add preliminary PDF support
* #83 Use XLSTableSet also for xlsx files

0.11.0 (8 July 2013)
* #65 Reworked any.py
* #60 Basic HTML table parsing
* #55 Fix `__repr__` and unicode issue
* #55 Add `__getitem__` to TableSet

0.10.0 (16 May 2013)
* #52 Rewrite type guessing
* Properly handle empty values when applying types
* Use normal float casting, if possible instead of locale.atof

0.9.0 (6 May 2013)

0.8.0 (6 May 2013)
* #45/#46 `from_fileobj` is deprecated - please use the constructor directly.
* `AnyTableSet` is deprecated - please use the function `any_tableset`.
* #47 Can now open xls with explicit character encoding

0.7.0 (2 May 2013)
* #40 JSON Table Schema output
* improve overall type guessing if the type is already correct
* #30 Fix for type_guess guesses datetime field on xls files as string
* Larger sample when detecting character encoding
* Avoid Python 2.7 dependency (ZipFile)

0.6.0 (10 Apr 2013)
* better CSV dialect sniffing
* Cope with blank first sheet
* #38 Fix for BufferedFile over a network socket
* Skip initial spaces in cells

0.5.0 (19 Feb 2013) - beta

0.4.0 (8 Jan 2013)

# How to contribute to messytables

## Contributing a feature

You are very welcome to submit code features or doc changes for review and merge into the central git repository:

* Create an issue
* Create a git branch with the format `ISSUE_NUMBER-brief-one-line-synopsis-of-the-work`
* Commit and push your changes and write tests for your code
* Use [PEP8](http://www.python.org/dev/peps/pep-0008/), where possible
* Make sure all tests are passing
* Add a note to the `CHANGELOG.md`
* Add new requirements to `setup.py`
* Send a pull request and have someone to review it

For small changes and doc changes, it is not necessary to file a pull request.


## Commit messages

Generally, follow the [commit guidelines from the Pro Git book](http://git-scm.com/book/en/Distributed-Git-Contributing-to-a-Project#Commit-Guidelines):

* Try to make each commit a logically separate, digestible changeset.
* The first line of the commit message should concisely summarise the changeset.
* Optionally, follow with a blank line and then a more detailed explanation of the changeset.
* Use the imperative present tense as if you were giving commands to the codebase to change its behaviour, e.g. Add tests for..., make xyzzy do frotz..., this helps to make the commit message easy to read.
* If your commit has an issue in the [messytables issue tracker](https://github.com/okfn/messytables/issues) put the issue number at the start of the first line of the commit message like this: [#123].


## Running the tests

```bash
source pyenv/messytables/bin/activate
python setup.py develop
pip install -r requirements-test.txt

nosetests
```

## Merging a pull request

If you're reviewing a pull request for messytables, when merging a branch into master:

* Use the `--no-ff` option in the `git merge` command


## Making a release

If you want to release a new version:

* Make sure everything works as expected and all features are reasonably stable
* Tag the HEAD using [semantic versioning](http://semver.org/) and push them (`git push --tags`)
* Push to PyPi

Files found at:

http://data.gov.uk/dataset/bi-annual-analysis-of-mental-capacity-act-2005-deprivation-of-liberty-safeguards-assessments-england/resource/9c6602dd-1361-4ce0-afea-8b20d13b4091
https://catalogue.ic.nhs.uk/publications/mental-health/legislation/bian-anal-mca-2005-dols-eng-1011-0312/bian-anal-mca-2005-dols-eng-1011-0312-tab3.xlsm

#Parsing for messy tables

[![Build Status](https://travis-ci.org/okfn/messytables.png?branch=master)](https://travis-ci.org/okfn/messytables)
[![Coverage Status](https://coveralls.io/repos/okfn/messytables/badge.png?branch=master)](https://coveralls.io/r/okfn/messytables?branch=master)
[![Version](https://pypip.in/v/messytables/badge.png)](https://crate.io/packages/messytables/)
[![Downloads](https://pypip.in/d/messytables/badge.png)](https://crate.io/packages/messytables/)

A library for dealing with messy tabular data in several formats, guessing types and detecting headers.

See the documentation at: https://messytables.readthedocs.org

Find the package at: https://pypi.python.org/pypi/messytables

* **Contact**: Friedrich Lindenberg <friedrich.lindenberg@okfn.org>, David Raznick
  <david.raznick@okfn.org>, Dominik Moritz <dominik.moritz@okfn.org>
* **License**: MIT

