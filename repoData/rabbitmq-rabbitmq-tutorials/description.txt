# Clojure code for RabbitMQ tutorials

Here you can find Clojure code examples from
[RabbitMQ tutorials](http://www.rabbitmq.com/getstarted.html).

## Requirements

To run this code you need [Langohr](http://clojurerabbitmq.info).

Dependencies are managed by [Leiningen](http://leiningen.org).

These tutorials only require JDK 6 or 7 (Oracle or OpenJDK).

## Code

Code examples are executed via `lein run`:

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-java.html):

    lein run -m rabbitmq.tutorials.send
    lein run -m rabbitmq.tutorials.receive

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-java.html):

    lein run -m rabbitmq.tutorials.new-task
    lein run -m rabbitmq.tutorials.worker

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-java.html)

    lein run -m rabbitmq.tutorials.receive-logs
    lein run -m rabbitmq.tutorials.emit-log

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-java.html)

    lein run -m rabbitmq.tutorials.receive-logs-direct
    lein run -m rabbitmq.tutorials.emit-log-direct

[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-java.html)

    lein run -m rabbitmq.tutorials.receive-logs-topic
    lein run -m rabbitmq.tutorials.emit-log-topic

[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-java.html)

    TBD

To learn more, visit [Langohr documentation](http://clojurerabbitmq.info) site.

# Dotnet C# code for RabbitMQ tutorials

Here you can find the C# code examples for [RabbitMQ
tutorials](http://www.rabbitmq.com/getstarted.html).

To successfully use the examples you will need a running RabbitMQ server.

## Requirements

### Requirements on Windows

You need the RabbitMQ dotnet client.

* Download [RabbitMQ .NET client for .NET 3.0+](http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v2.4.1/rabbitmq-dotnet-client-2.4.1-dotnet-3.0.zip)
* Extract it and copy "RabbitMQ.Client.dll" to your working folder.

You also need to ensure your system can find the C# compiler `csc.exe`,
you may need to add `;C:\WINDOWS\Microsoft.NET\Framework\v3.5` (change .NET version
to fit your installation) to your Path.

We're using the command line (start->run cmd.exe) to
compile and run the code. Alternatively you could use Visual Studio, but
due to the nature of examples we prefer the command line.

### Requirements on Linux

You need Mono and RabbitMQ dotnet client.

    sudo apt-get install mono-devel
    mkdir lib
    cd lib
    wget http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v3.2.2/rabbitmq-dotnet-client-3.2.2-dotnet-3.0.zip
    unzip rabbitmq-dotnet-client-3.2.2-dotnet-3.0.zip
    cd ..


## Code

#### [Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-java.html)

##### Windows

    csc /r:"RabbitMQ.Client.dll" Send.cs
    csc /r:"RabbitMQ.Client.dll" Receive.cs

    Send.exe
    Receive.exe

##### Linux

    gmcs -r:lib/bin/RabbitMQ.Client.dll Send.cs
    gmcs -r:lib/bin/RabbitMQ.Client.dll Receive.cs

    MONO_PATH=lib/bin mono Send.exe
    MONO_PATH=lib/bin mono Receive.exe


#### [Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-java.html)


##### Windows

    csc /r:"RabbitMQ.Client.dll" NewTask.cs
    csc /r:"RabbitMQ.Client.dll" Worker.cs

    NewTask.exe
    Worker.exe

##### Linux

    gmcs -r:lib/bin/RabbitMQ.Client.dll NewTask.cs
    gmcs -r:lib/bin/RabbitMQ.Client.dll Worker.cs

    MONO_PATH=lib/bin mono NewTask.exe
    MONO_PATH=lib/bin mono Worker.exe

#### [Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-java.html)

##### Windows

    csc /r:"RabbitMQ.Client.dll" ReceiveLogs.cs
    csc /r:"RabbitMQ.Client.dll" EmitLog.cs

    ReceiveLogs.exe
    EmitLog.exe

##### Linux

    gmcs -r:lib/bin/RabbitMQ.Client.dll ReceiveLogs.cs
    gmcs -r:lib/bin/RabbitMQ.Client.dll EmitLog.cs

    MONO_PATH=lib/bin mono ReceiveLogs.exe
    MONO_PATH=lib/bin mono EmitLog.exe

#### [Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-java.html)

##### Windows

    csc /r:"RabbitMQ.Client.dll" ReceiveLogsDirect.cs
    csc /r:"RabbitMQ.Client.dll" EmitLogDirect.cs

    ReceiveLogsDirect.exe
    EmitLogDirect.exe

##### Linux

    gmcs -r:lib/bin/RabbitMQ.Client.dll ReceiveLogsDirect.cs
    gmcs -r:lib/bin/RabbitMQ.Client.dll EmitLogDirect.cs

    MONO_PATH=lib/bin mono ReceiveLogsDirect.exe
    MONO_PATH=lib/bin mono EmitLogDirect.exe

#### [Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-java.html)

##### Windows

    csc /r:"RabbitMQ.Client.dll" ReceiveLogsTopic.cs
    csc /r:"RabbitMQ.Client.dll" EmitLogTopic.cs

    ReceiveLogsTopic.exe
    EmitLogTopic.exe

##### Linux

    gmcs -r:lib/bin/RabbitMQ.Client.dll ReceiveLogsTopic.cs
    gmcs -r:lib/bin/RabbitMQ.Client.dll EmitLogTopic.cs

    MONO_PATH=lib/bin mono ReceiveLogsTopic.exe
    MONO_PATH=lib/bin mono EmitLogTopic.exe

#### [Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-java.html)

##### Windows

    csc /r:"RabbitMQ.Client.dll" RPCServer.cs
    csc /r:"RabbitMQ.Client.dll" RPCClient.cs

    RPCServer.exe
    RPCClient.exe

##### Linux

    gmcs -r:lib/bin/RabbitMQ.Client.dll RPCServer.cs
    gmcs -r:lib/bin/RabbitMQ.Client.dll RPCClient.cs

    MONO_PATH=lib/bin mono RPCServer.exe
    MONO_PATH=lib/bin mono RPCClient.exe


# Erlang code for RabbitMQ tutorials #

Here you can find a Erlang code examples from [RabbitMQ
tutorials](http://www.rabbitmq.com/getstarted.html).

This code is using [RabbitMQ Erlang
Client](http://hg.rabbitmq.com/rabbitmq-erlang-client/) ([User
Guide](http://www.rabbitmq.com/erlang-client-user-guide.html)).

## Requirements

To run this code you need at least [Erlang
R13B03](http://erlang.org/download.html), on Ubuntu you can get it
using apt:

    sudo apt-get install erlang

You need Erlang Client binaries:

    wget http://www.rabbitmq.com/releases/rabbitmq-erlang-client/v2.7.0/rabbit_common-2.7.0.ez
    unzip rabbit_common-2.7.0.ez
    ln -s rabbit_common-2.7.0 rabbit_common

    wget http://www.rabbitmq.com/releases/rabbitmq-erlang-client/v2.7.0/amqp_client-2.7.0.ez
    unzip amqp_client-2.7.0.ez
    ln -s amqp_client-2.7.0 amqp_client


## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    ./send.erl
    ./receive.erl

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    ./new_task.erl "A very hard task which takes two seconds.."
    ./worker.erl

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html):

    ./receive_logs.erl
    ./emit_log.erl "info: This is the log message"

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-python.html):

    ./receive_logs_direct.erl info
    ./emit_log_direct.erl info Hello

[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-python.html):

    ./receive_logs_topic.erl "*.rabbit"
    ./emit_log_topic.erl red.rabbit Hello

# Go code for RabbitMQ tutorials

Here you can find Go code examples from
[RabbitMQ tutorials](http://www.rabbitmq.com/getstarted.html).

## Requirements

To run this code you need [Go RabbitMQ client](https://github.com/streadway/amqp).

## Code

Code examples are executed via `go run`:

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    go run send.go
    go run receive.go

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    go run new_task.go hello world
    go run worker.go

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html)

    go run receive_logs.go
    go run emit_log.go hello world

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-python.html)

    go run receive_logs_direct.go info warn
    go run emit_log_direct.go warn "a warning"

[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-python.html)

    go run receive_logs_topic.go info warn
    go run emit_log_topic.go warn "a warning"

[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-python.html)

    TBD

To learn more, see [Go RabbitMQ client](https://github.com/streadway/amqp).

# Haskell code for RabbitMQ tutorials

Here you can find Haskell code examples from
[RabbitMQ tutorials](http://www.rabbitmq.com/getstarted.html).

## Requirements

To run this code you need [Network.AMQP](http://hackage.haskell.org/package/amqp-0.6.0/docs/Network-AMQP.html).

## Code

Code examples are executed via `runhaskell`:

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    runhaskell send.hs
    runhaskell receive.hs

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    runhaskell newTask.hs hello world
    runhaskell worker.hs

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html)

    runhaskell receiveLogs.hs
    runhaskell emitLog.hs hello world

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-python.html)

    runhaskell receiveLogsDirect.hs info warn
    runhaskell emitLogDirect.hs warn "a warning"

[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-python.html)

    runhaskell receiveLogsTopic.hs info warn
    runhaskell emitLogTopic.hs warn "a warning"

[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-python.html)

    TBD

To learn more, see [Network.AMQP](https://github.com/hreinhardt/amqp).

# Java code for RabbitMQ tutorials

Here you can find the Java code examples from [RabbitMQ
tutorials](http://www.rabbitmq.com/getstarted.html).

To successfully use the examples you will need a running RabbitMQ server.

## Requirements

You'll need to download the RabbitMQ
[java client library package](http://www.rabbitmq.com/java-client.html),
and check its signature as described there.
Unzip it into your working directory and ensure the JAR files from the
unzipped directory are placed in your working directory:

    $ unzip rabbitmq-java-client-bin-*.zip
    $ cp rabbitmq-java-client-bin-*/*.jar ./

To compile you only need the Rabbitmq java client jar on the classpath.

To run them you'll need all the dependencies, see examples below.

Note: If you're on Windows,
use a semicolon instead of a colon to separate items in the classpath.

> You can set an environment variable for the jar files on the classpath e.g.
>
>      $ export CP=.:commons-io-1.2.jar:commons-cli-1.1.jar:rabbitmq-client.jar
>      $ java -cp $CP Send
>
> or on Windows:
>
>      > set CP=.;commons-io-1.2.jar;commons-cli-1.1.jar;rabbitmq-client.jar
>      > java -cp %CP% Send

## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-java.html):

    $ javac -cp rabbitmq-client.jar Send.java Recv.java

    $ java -cp .:commons-io-1.2.jar:commons-cli-1.1.jar:rabbitmq-client.jar Send
    $ java -cp .:commons-io-1.2.jar:commons-cli-1.1.jar:rabbitmq-client.jar Recv

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-java.html):

    $ javac -cp rabbitmq-client.jar NewTask.java Worker.java

    $ java -cp $CP NewTask
    $ java -cp $CP Worker

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-java.html)

    $ javac -cp rabbitmq-client.jar EmitLog.java ReceiveLogs.java

    $ java -cp $CP ReceiveLogs
    $ java -cp $CP EmitLog



# Node.js code for RabbitMQ tutorials

Here you can find Node.js code examples from [RabbitMQ
tutorials](http://www.rabbitmq.com/getstarted.html).

To successfully use the examples you will need a running RabbitMQ server.

## Requirements

Apart from `npm` and `node`, to run this code you need
[node-amqp](https://github.com/postwait/node-amqp) version 0.1.X. To
pull the dependency from `npm` run:

    npm install amqp


## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    node send.js
    node receive.js


[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    node new_task.js "A very hard task which takes two seconds.."
    node worker.js


[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html):

    node receive_logs.js
    node emit_log.js "info: This is the log message"

# Perl code for RabbitMQ tutorials

Here you can find Perl code examples from [RabbitMQ
tutorials](http://www.rabbitmq.com/getstarted.html).

To successfully use the examples you will need a running RabbitMQ server.

## Requirements

To run this code you need to install Net::RabbitFoot.

    cpan -i Net::RabbitFoot

For tutorial six UUID::Tiny needs to be installed.

    cpan -i UUID::Tiny

There are known problems with the the Net::RabbitFoot module:

* The MooseX::AttributeHelpers dependency has been deprecated and no longer builds on Perl 5.18
* The library tests fail on 32bit systems

On Ubuntu:

    sudo apt-get install make libclass-data-inheritable-perl libtest-deep-perl libmoosex-app-cmd-perl libcoro-perl libjson-xs-perl libxml-libxml-perl libconfig-any-perl libmoosex-attributehelpers-perl libmoosex-configfromfile-perl libtest-exception-perl libfile-sharedir-perl libreadonly-xs-perl libuuid-tiny-perl
    sudo cpan -i Net::RabbitFoot

## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    perl send.pl
    perl receive.pl


[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    perl new_task.pl "A very hard task which takes two seconds.."
    perl worker.pl


[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html):

    perl receive_logs.pl
    perl emit_log.pl "info: This is the log message"


[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-python.html):

    perl receive_logs_direct.pl info
    perl emit_log_direct.pl info "The message"


[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-python.html):

    perl receive_logs_topic.pl "*.rabbit"
    perl emit_log_topic.pl red.rabbit Hello


[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-python.html):

    perl rpc_server.pl
    perl rpc_client.pl

# PHP code for RabbitMQ tutorials

Here you can find PHP code examples from [RabbitMQ
tutorials](http://www.rabbitmq.com/getstarted.html).

To successfully use the examples you will need a running RabbitMQ server.

## Requirements

Additionally you need `PHP 5.3` and `php-amqplib`. To get these
dependencies on Ubuntu type:

    sudo apt-get install git-core php5-cli

Then you can install `php-amqplib` using [Composer](http://getcomposer.org).

To do that install Composer and add it to your path, then run the following command
inside this project folder:

    composer.phar install

## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-php.html):

    php send.php
    php receive.php


[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-php.html):

    php new_task.php "A very hard task which takes two seconds.."
    php worker.php


[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-php.html)

    php receive_logs.php
    php emit_log.php "info: This is the log message"

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-php.html):

    php receive_logs_direct.php info
    php emit_log_direct.php info "The message"


[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-php.html):

    php receive_logs_topic.php "*.rabbit"
    php emit_log_topic.php red.rabbit Hello

[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-php.html):

    php rpc_server.php
    php rpc_client.php

# Python code for RabbitMQ tutorials

Here you can find Python code examples from [RabbitMQ
tutorials](http://www.rabbitmq.com/getstarted.html).

To successfully use the examples you will need a running RabbitMQ server.

## Requirements

To run this code you need `pika` library version 0.9.5. To install it run

    pip install pika==0.9.5

You may first need to run

    easy_install pip


## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    python send.py
    python receive.py


[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    python new_task.py "A very hard task which takes two seconds.."
    python worker.py


[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html):

    python receive_logs.py
    python emit_log.py "info: This is the log message"


[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-python.html):

    python receive_logs_direct.py info
    python emit_log_direct.py info "The message"


[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-python.html):

    python receive_logs_topic.py "*.rabbit"
    python emit_log_topic.py red.rabbit Hello


[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-python.html):

    python rpc_server.py
    python rpc_client.py

# Python-Puka code for RabbitMQ tutorials

Here you can find code examples from
[RabbitMQ tutorials](http://www.rabbitmq.com/getstarted.html) adapted
to [Puka](https://github.com/majek/puka) Python library.


## Requirements

Now you can install `puka` using Pip:

      pip install puka

You may need to install `pip` first:

  * On Ubuntu:

        sudo apt-get install python-pip

  * On Debian:

        sudo apt-get install python-setuptools
        sudo easy_install pip


## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    python send.py
    python receive.py

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    python new_task.py
    python worker.py

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html):

    python receive_logs.py
    python emit_log.py

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-python.html):

    python receive_logs_direct.py
    python emit_log_direct.py

[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-python.html):

    python receive_logs_topic.py
    python emit_log_topic.py

[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-python.html):

    python rpc_server.py
    python rpc_client.py

# RabbitMQ tutorials

This project contains code for [RabbitMQ tutorials](http://www.rabbitmq.com/getstarted.html).

## Languages

The following ports are available:

 * [C#](./dotnet)
 * [Clojure](./clojure)
 * [Erlang](./erlang)
 * [Go](./go)
 * [Haskell](./haskell)
 * [JavaScript (with Node and node-amqp)](./javascript-nodejs)
 * [Java](./java)
 * [PHP](./php)
 * [Perl](./perl)
 * [Python (with Pika)](./python)
 * [Python (with Puka)](./python-puka)
 * [Ruby (with Bunny)](./ruby)
 * [Ruby (with amqp gem)](./ruby-amqp)

# Ruby code for RabbitMQ tutorials

Here you can find Ruby code examples from
[RabbitMQ tutorials](http://www.rabbitmq.com/getstarted.html).

## Requirements

To run this code you need [Bunny 0.9+](http://rubybunny.info).

You can install it via RubyGems:

    gem install bunny --version ">= 0.9.1"

Bunny supports Ruby 2.0, 1.9, JRuby, Rubinius 2.0, and Ruby 1.8.7.

## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-ruby.html):

    ruby send.rb
    ruby receive.rb

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-ruby.html):

    ruby new_task.rb
    ruby worker.rb

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-ruby.html)

    ruby receive_logs.rb
    ruby emit_log.rb

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-ruby.html)

    ruby receive_logs_direct.rb
    ruby emit_log_direct.rb

[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-ruby.html)

    ruby receive_logs_topic.rb
    ruby emit_log_topic.rb

[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-ruby.html)

    ruby rpc_server.rb
    ruby rpc_client.rb

To learn more, visit [Bunny documentation](http://rubybunny.info) site.

# Ruby (amqp gem) code for RabbitMQ tutorials

Here you can find Ruby code examples from
[RabbitMQ tutorials](http://www.rabbitmq.com/getstarted.html).

## Requirements

If you use Microsoft Windows, we highly recommend you to use [JRuby](http://jruby.org).

To run this code you need [amqp gem](http://rubyamqp.info).

You can install it via RubyGems. On Linux, Mac OS X and *BSD systems:

    gem install amqp --version ">= 1.0.2"

On Windows:

    jruby.exe --1.9 -S gem install amqp --version ">= 1.0.2"

## Code

[Tutorial one: "Hello World!"](http://www.rabbitmq.com/tutorial-one-python.html):

    ruby send.rb
    ruby receive.rb

[Tutorial two: Work Queues](http://www.rabbitmq.com/tutorial-two-python.html):

    ruby new_task.rb
    ruby worker.rb

[Tutorial three: Publish/Subscribe](http://www.rabbitmq.com/tutorial-three-python.html)

    ruby receive_logs.rb
    ruby emit_log.rb

[Tutorial four: Routing](http://www.rabbitmq.com/tutorial-four-python.html)

    ruby receive_logs_direct.rb
    ruby emit_log_direct.rb

[Tutorial five: Topics](http://www.rabbitmq.com/tutorial-five-python.html)

    ruby receive_logs_topic.rb
    ruby emit_log_topic.rb

[Tutorial six: RPC](http://www.rabbitmq.com/tutorial-six-python.html)

    ruby rpc_server.rb
    ruby rpc_client.rb

To learn more, visit [Ruby AMQP gem documentation](http://rubyamqp.info) site.

