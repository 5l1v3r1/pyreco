Development Lead
----------------

- Santiago Perez De Rosso (sperezde at csail.mit.edu)


Contributors
------------

- Jesse Sharps

Copyright (C) 2013  Santiago Perez De Rosso

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Gitless
=======

[![PyPI version](https://badge.fury.io/py/gitless.png)](
    http://badge.fury.io/py/gitless)
[![Build Status](https://travis-ci.org/sdg-mit/gitless.png?branch=develop)](
    https://travis-ci.org/sdg-mit/gitless)

Gitless is an experimental version control system built on top of Git. Many
people complain that Git is hard to use. We think the problem lies deeper than
the user interface, in the concepts underlying Git. Gitless is an experiment to
see what happens if you put a simple veneer on an app that changes the
underlying concepts. Because Gitless is implemented on top of Git (could be
considered what Git pros call a 'porcelain' of Git), you can always fall
back on Git. And of course your coworkers you share a repo with need never know
that you're not a Git aficionado.

More info, downloads and documentation @ [Gitless's website](
    http://gitless.com "Gitless's website").

Questions or comments about Gitless can be sent to the [
  Gitless users mailing list](
      https://groups.google.com/forum/#!forum/gl-users
      "Gitless users mailing list").


Install
-------

Note that the installation **won't interfere** with your Git installation in any
way, you can keep using Git, and switch between Git and Gitless seamleslly.

You need to have Python and Git installed. If you don't, search for their
official websites, install them and come back.

The easiest way to install Gitless is using the Python Package Manager `pip`. If
you don't have `pip`, just search the web for it, and you'll find installation
instructions on their website. Now, once you have `pip` installed just do:

    $> pip install gitless

You should now be able to start executing the `gl` command.



Contribute
----------

There are several ways you can contribute to the project:

- Design: if you have any feedback about Gitless's design we would love to
hear from you. You can create an issue in the project with your
feedback/questions/suggestions or shoot us an email.
- Reporting bugs: did you find a bug? create an issue for it and we'll fix it
ASAP.
- Code: you can browse through the open issues and see if there's something
there you would like to hack on. Is something missing? feel free to propose it!

After you've contributed you can send us a pull request adding yourself to the
AUTHORS file if you want to.

If you're planning on submitting code here are some useful things to know:

- We only have two branches, `master` and `develop`. We code in `develop` and
merge the changes onto `master` when the changes are stable and we're ready to
cut a new release. So you'll find on `develop` the latest changes.

- We follow (to some extent) the [Google Python Style Guide](
    http://google-styleguide.googlecode.com/svn/trunk/pyguide.html
    "Google Python Style Guide").
Before submitting code, take a few seconds to look at the style guide and the
Gitless's code so that your edits are consistent with the codebase.

- Finally, if you don't want [Travis](
    https://travis-ci.org/sdg-mit/gitless "Travis") to
be mad at you, check that the tests pass in python 2.6, 2.7, 3.2 and 3.3 and
that you don't have any pylint *errors* (warnings and refactor suggestions are
ok).

Gitless's Release Notes
=======================


25th Mar 2014 - kendall.0.6.1
-----------------------------

* Bug fix in installation.


25th Mar 2014 - kendall.0.6
---------------------------

* Added stats to `gl diff` (# of additions and deletions).
* Unset upstream support (`gl branch -uu`).
* Better `gl history`.
* Colored output.
* Bug fixes.


3rd Feb 2014 - kendall.0.5
--------------------------

* Now Gitless works with python 2.6, 3.2 and 3.3 (in addition to 2.7).
* A new (simpler, more consistent) `gl remote`
* Show error if user tries to `gl init` from an unreachable remote.
* When initing from a remote create a local equivalent for each remote branch.
* Bug fixes + tests + performance improvements.


16th Jan 2014 - kendall.0.4.4
-----------------------------

* More performance improvements in status.
* Bug fixes in `gl resolve`.


15th Jan 2014 - kendall.0.4.3
-----------------------------

* Fixed bug that occured when trying to commit after a conflicted rebase/merge.
* Fixed bug that caused error msgs when a commit fails to be incorrect.


15th Jan 2014 - kendall.0.4.2
-----------------------------

* Performance improvements in status (updated to using gitpylib 0.4.2).
* `gl history` is piped to less (updated to using gitpylib 0.4.2).
* Output an error msg if the user provides a directory to file related ops.
* Sort the files outputted by `gl status` so that it looks nicer.
* Bug fixes.


6th Dec 2013 - kendall.0.4.1
----------------------------

* Bug fixes (in diff and PyPI setup).


23rd Nov 2013 - kendall.0.4
---------------------------

* Revamped `gl diff`.


28th Oct 2013 - kendall.0.3
---------------------------

* General bug fixes.
* UI improvements (made some messages more clear, consistent).
* Allow the user to branch out from certain commit point.
* Improvements in `gl diff`: now it outputs a message if the file is ignored or
  if there are no diffs to show.
* pre-commit hooks now work fine.


4th Sept 2013 - kendall.0.2.1
-----------------------------

* Bug fixes.


4th Sept 2013 - kendall.0.2
---------------------------

* Support for files with spaces.
* General improvements in the `gl checkout` command:
    * Now the commit point is passed with the `-cp` flag (defaults to `HEAD`).
    * Fixed bug that made it impossible to checkout a file without specifying
      its full repo path.
    * Ask for confirmation by the user if there are uncommitted changes that
      could be overwritten by checkout.
* General improvements in the `gl diff` command:
    * Fixed bug that made it impossible to diff a deleted file.
    * Now if no arguments are given all tracked files with modifications are
      diffed.
* Removed the `gl rm` command.
* Now `gl` is the only command (in retrospect, having a "suite of commands" was
  over-engineering, code is much simpler now).
* Massive re-org of project.


16th July 2013 - kendall.0.1
----------------------------

* Minor improvements in output of commands.
* Improvements in Makefile and added Python version checks.
* Made case-sensitiveness consistent with FS.
* Fixed bug that made it impossible to `gl-track` files under directories
  without cd'ing first to that dir.
* Better support for evil branch names.
* Before defaulting to using vim we now check to see if the user specified a
  value for Git's 'core.editor' config option or if the EDITOR env variable is
  set.
* Added a 'Requirements' section to the installation instructions.
* Changed shebang lines to /usr/bin/env python2.7 instead of harcoding the
  Python binary at /usr/bin/python.


3rd July 2013 - kendall.0.0
---------------------------

First Gitless's release.

