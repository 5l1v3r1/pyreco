## Iconic is an open source icon set in raster, vector and font formats

### Iconic aims to be the most forward-thinking icon set around based on its support of forward facing display/deployment methods. Icons should not just be clear and attractive, they should be easy and flexible to work with. [Learn more about Iconic](http://somerandomdude.com/work/iconic/)

## Using Iconic

* SVG files can be found in the _vector/_ folder
* PNG files in all sizes and one color (black) can be found in the _raster/_ folder
* Fonts in two weights (stroke and fill) as well as demo HTML and CSS files can be found in the _font/_ folder
* Illustrator symbols can be found in the _etc/illustrator symbols_ folder
* Omnigraffle stencils can be found in the _etc/omnigraffle stencil_ folder

## Building Iconic

### Designing New Icons

All icons within the set are built around a strict grid. If you want to design new icons for the set, you can use the grid as your guide at _source/Template.ai_ (CS5 format). In addition, all the icons are available for reference and/or modification at _source/Iconic_all.ai_ (CS5 format).

### Generating Fonts

There are Python scripts to generate the Iconic font files (including demo HTML/CSS files) at _scripts/font creation/_. The scripts [require FontForge](http://fontforge.sourceforge.net/) and I have only been able to get them to run on Linux at this point.

### Generating PNGs

Iconic has two different JSX ExtendScripts for generating transparent PNGs. The scripts are run in Adobe Illustrator [Learn more here](http://help.adobe.com/en_US/illustrator/cs/using/WS714a382cdf7d304e7e07d0100196cbc5f-62a3a.html). To generate all icons at all sizes and colors, use _scripts/raster creation/SaveLayersAsPNG.jsx_ (this script will take a long time). To generate icons at a custom color and/or a subset of sizes use _scripts/raster creation/SaveLayersAsCustomPNG.jsx_

### Generating SVGs

You can also generate SVGs automatically with a JSX ExtendScript. The script can be found at _scripts/vector creation/SaveLayersAsSVG.jsx_ The SVG files are all generated at 32 pixels in black. 

### Generating a SWC (Depreciated)

All AS3 files and ANT build scripts can be found at  _scripts/swc creation/_

*This feature is no longer actively updated by me (feel free to fork and update)*

##Licensing 

###Icons
All icons (located in the _vector/_, _raster/_, _source/_ and _etc/_ directories) are licensed under the [Creative Commons Attribution-ShareAlike 3.0 Unported License](http://creativecommons.org/licenses/by-sa/3.0/). If you use these icons, please add a link to Iconic [(http://somerandomdude.com/work/iconic/)](http://somerandomdude.com/work/iconic/) somewhere on your site or in your app.

###Fonts
All fonts (located in the _fonts/_ directory) are licensed under the [SIL Open Font License](http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL)

###Scripts
All scripts (located in the _scripts/_ directory) are licensed under the [GNU Public License](http://www.gnu.org/licenses/gpl.html)




Iconic CSS Sprite Sheet
===

A CSS + PNG Sprite Sheet generator for [Iconic](http://www.somerandomdude.com/work/iconic/) iconset, by P.J. Onori


Requirements
---

 - [ImageMagick 6.6+](http://www.imagemagick.org)
 - [pngnq](http://pngnq.sourceforge.net/) (optional)

Instructions
---

Run rake with your preferred color / size, like that:

    rake white:24x24 output=iconic-white-24x24
    rake black:24x24 output=iconic-white-24x24

Supported browsers
---

  * Google Chrome 16.0.912.63 beta
  * Safari 5.1.1
  * Firefox 8.0.1
  * Internet Explorer 7+

Special thanks
---

Special thanks to Microsoft Internet Explorer, without him this project would never exist. Webfonts are just great.


License
---

This project is released under the MIT License. Please read the LICENSE file.

[Iconic](http://www.somerandomdude.com/work/iconic/) is licensed under Creative Commons Attribution-ShareAlike 3.0 Unported.

This build requries the ant-contrib library.
Copy the ant-contrib jar to your [ant]/lib folder.
--

If java runs out of memory when compiling add the following to your Environment Variables...

name: ANT_OPTS
value: -Xms512m -Xmx512m
The Iconic class's package is com.somerandomdude.iconic - to import the class, use the code below:

import com.somerandomdude.iconic.Iconic

All icons are embedded SVGs, so they will be treated as SpriteAsset objects. To add a icon (such as the check icon) to an object's display list, use the code below:

addChild(new Iconic.check() as SpriteAsset)

The SWC has been tested in FlexBuilder 3.
Scour
=====

Scour is a Python module that takes an input SVG and outputs a cleaner, 
more concise SVG file.  The goal is that authors will use this script after
editing the file in a GUI editor such as Inkscape or Adobe Illustrator.

Scour was started as a vehicle for me to learn Python.  In addition, the goal
is to reduce the amount of time I spend in cleaning up files I find on sites
such as openclipart.org

Ideas are pulled from three places:

- my head
- Sam Ruby's SVG Tidy script: http://intertwingly.net/code/svgtidy/svgtidy.rb
- Inkscape's proposal for a 'cleaned SVG': http://wiki.inkscape.org/wiki/index.php/Save_Cleaned_SVG

Regards,

Jeff Schiller
2009-04-06
codedread@gmail.com
http://blog.codedread.com/

