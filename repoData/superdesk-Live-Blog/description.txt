Installing Superdesk
============================

+ [prerequisites](#prerequisites)
    - [debian/ubuntu](#debian-7-or-ubuntu-1204-1210)
    - [redhat/centos/sles](#redhatcentossles)
    - [arch/manjaro](#archlinux-or-manjaro)
+ [Installing Superdesk](#installing-superdesk)
+ [Configuring Superdesk](#configuring-superdesk)
+ [Running Superdesk](#running-superdesk)


## Prerequisites

### Debian 7 or Ubuntu 12.04, 12.10

1. Install necessary software:

        $ sudo apt-get install exiv2 ffmpeg graphicsmagick python3 python3-pip python-virtualenv

### Newer versions of ubuntu/debian which are not shipped with python 3.2

1. Install necessary software:

        $ sudo apt-get install exiv2 ffmpeg graphicsmagick python3-pip python-virtualenv

2. Add ubuntu PPA

        $ sudo apt-add-repository ppa:fkrull/deadsnakes
        $ sudo apt-get update
        $ sudo apt-get install python3.2

2. OR build and install python 3.2

        $ cd /tmp
        $ wget http://www.python.org/ftp/python/3.2/Python-3.2.tgz
        $ tar xf ./Python-3.2.tgz
        $ cd ./Python-3.2
        $ ./configure --prefix=/opt/python32
        $ make && sudo make install

### Redhat/Centos/sles


1. Add repositories for ffmpeg and GraphicsMagick:

        # rpm -Uvh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm 
        # rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
        # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
        # rpm --import https://fedoraproject.org/static/0608B895.txt

2. Install necessary software:

        # yum groupinstall "Development tools"
        # yum install exiv2 ffmpeg GraphicsMagick zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel

3. Build and install python 3.2

        $ cd /tmp
        $ wget http://www.python.org/ftp/python/3.2/Python-3.2.tgz
        $ tar xf ./Python-3.2.tgz
        $ cd ./Python-3.2
        $ ./configure --prefix=/opt/python32
        $ make && sudo make install

4. Build and install distribute

        $ cd /tmp
        $ wget http://pypi.python.org/packages/source/d/distribute/distribute-0.6.35.tar.gz --no-check-certificate
        $ tar xf distribute-0.6.35.tar.gz
        $ cd distribute-0.6.35
        $ /opt/python32/bin/python3.2 setup.py install
        $ /opt/python32/bin/easy_install-3.2 pip virtualenv

### Archlinux or Manjaro

1. Install necessary software:

        $ yaourt -S exiv2 ffmpeg graphicsmagick python32 python-pip python-virtualenv

## Installing Superdesk


1. Add the Superdesk user

        $ sudo useradd superdesk -b /opt -m
        $ sudo su superdesk

2. Change to `/opt/superdesk` and unzip `liveblog.zip`

        $ cd /opt/superdesk/
        $ unzip liveblog.zip

3. Create a python virtual environment using one of the following methods:

    If your distro has python 3.2:

        $ virtualenv -p python3.2 env

    If you installed Python 3.2 manually in the ``opt`` folder:

        $ virtualenv -p /opt/python32/bin/python3.2 env

    If you installed `virtualenv` manually in the `opt` folder:
 
        $ ../python32/bin/virtualenv-3.2 -p /opt/python32/bin/python3.2 env 
             

4. Activate the python virtual environment and install the requirements

        $ source env/bin/activate
        $ cd ./liveblog
        $ pip install -r requirements.txt

## Configuring Superdesk

1. Create a configuration file

        $ python application.py -dump
        $ cp -f plugins-linux.properties plugins.properties

2. Edit the configuration file and change the IP address


## Running Superdesk

1. Run `application.py`

        $ python application.py

2. Open the following URL in your browser

        http://localhost:8080/content/lib/core/start.html

Sourcefabric's Live Blog is an open source web app that lets you create and
update live blogs in seconds.

Breaking news situations and major scheduled events like a football match
require immediate and ongoing reporting. Your readers want to receive
minute-by-minute updates, sometimes using their mobile phone as a second
screen while watching events. Sourcefabric's Live Blog is an open source
web app built for this purpose. It lets you create and update live blogs
in seconds with videos, images, and audio from your reporters, newswires
and the social web. Live Blog integrates effortlessly with your existing
CMS. You can customise its design to match your website. And because it's
an open source tool, you will always have complete control over the software
code and your content.

COPYRIGHT
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 3
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, see <http://www.gnu.org/licenses/>.

============================================
 ``docutils/parsers/rst/include`` Directory
============================================

This directory contains standard data files intended for inclusion in
reStructuredText documents.  To access these files, use the "include"
directive with the special syntax for standard "include" data files,
angle brackets around the file name::

    .. include:: <isonum.txt>

See the documentation for the `"include" directive`__ and
`reStructuredText Standard Substitution Definition Sets`__ for
details.

__ http://docutils.sf.net/docs/ref/rst/directives.html#include
__ http://docutils.sf.net/docs/ref/rst/substitutions.html

Except where otherwise noted (default/iepngfix.htc), all files in this
directory have been released into the Public Domain.

These files are based on files from S5 1.1, released into the Public
Domain by Eric Meyer.  For further details, please see
http://www.meyerweb.com/eric/tools/s5/credits.html.

Installing LiveBlog
============================

+ [prerequisites](#prerequisites)
    - [debian/ubuntu](#debian-7-or-ubuntu-1204-1210)
    - [redhat/centos](#redhatcentos)
    - [arch/manjaro](#archlinux-or-manjaro)
    - [win7/win8](#win7-or-win8)    
+ [Installing LiveBlog](#installing-liveblog-1)
+ [Configuring LiveBlog](#configuring-liveblog)
+ [Running LiveBlog](#running-liveblog)


The officially supported platform is Ubuntu and Python3.2. However the application can be installed on other OSs and below are provided the install instructions.

## Prerequisites


### Debian 7 or Ubuntu 12.04, 12.10

1. Install necessary software:

        $ sudo apt-get install exiv2 ffmpeg graphicsmagick python3 git

        
### Newer versions of ubuntu/debian which are not shipped with python 3.2

1. Install necessary software:

        $ sudo apt-get install exiv2 ffmpeg graphicsmagick git

2. Build and install python 3.2 (better create a package if you know how)

        $ cd /tmp
        $ wget http://www.python.org/ftp/python/3.2/Python-3.2.tgz
        $ tar xf ./Python-3.2.tgz
        $ cd ./Python-3.2
        $ ./configure --prefix=/opt/python32
        $ make
        $ sudo make install  # or 'sudo checkinstall' to automatically generate a package
        
        
### Redhat/Centos

1. Add repositories for ffmpeg and GraphicsMagick:

        # rpm -Uvh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm 
        # rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
        # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
        # rpm --import https://fedoraproject.org/static/0608B895.txt

2. Install necessary software:

        # yum groupinstall "Development tools"
        # yum install exiv2 ffmpeg GraphicsMagick zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel

3. Build and install python 3.2

        $ cd /tmp
        $ wget http://www.python.org/ftp/python/3.2/Python-3.2.tgz
        $ tar xf ./Python-3.2.tgz
        $ cd ./Python-3.2
        $ ./configure --prefix=/opt/python32
        $ make
        $ sudo make install  # or 'sudo checkinstall' to automatically generate a package

        
        
### Archlinux or Manjaro

1. Install necessary software:

        $ yaourt -S exiv2 ffmpeg graphicsmagick python32 git

        
        
### Win

1. Install necessary software
   Download and install the tools from the following addresses:

        ffmpeg: http://www.ffmpeg.org/download.html
        exiv2: http://www.exiv2.org/download.html
        gm: http://www.graphicsmagick.org/INSTALL-windows.html
        
2. Install python 3.2
   Download and install the right version from the following address:

        https://www.python.org/download/releases/3.2


        
## Installing LiveBlog
The folowing installation steps in generally are applicable to all OSs and any exception is specified.

1. Change to the directory you choose to install the application and clone Ally-Py's master branch there.

        git clone https://github.com/sourcefabric/Ally-Py.git -b master ally-py
        
   Note: 
        Depending by your OS you can choose a different location to install the application like /opt, c:\, etc.
        
2. Change to ally-py directory and clone LiveBlog's master branch there.

        cd ally-py
        git clone https://github.com/superdesk/Live-Blog.git -b master live-blog

3. Change to live-blog directory and build eggs by running the following command:

        cd live-blog
        ./build-eggs 
        (build-eggs.bat for win7/8)

4. Change to distribution directory and create the configuration files by running the following command:

        cd distribution
        python3.2 application.py -dump

5. Update the full paths to ffmpeg/exiv2/gm tools in plugins.properties configuration file.
   Here are the properties that should be changes and default values:
   
        thumbnailProcessor.ThumbnailProcessorGM.gm_path: /usr/bin/gm
        imageDataHandler.metadata_extractor_path: /usr/bin/exiv2
        audioDataHandler.ffmpeg_path: /usr/bin/ffmpeg
        videoDataHandler.ffmpeg_path: /usr/bin/ffmpeg
        
        

## Configuring LiveBlog

#### Access from the Internet
In order to access the application from other machines the following changes need to be done:

1. Edit the application.properties file, search for
   the property 'server_host' and change it to '0.0.0.0'

   E.g.: server_host: 0.0.0.0

2. Edit the plugins.properties configuration file, search for the
   properties 'server_url' and 'embed_server_url' and change them to
   '[machine_name_or_ip]:8080

   E.g.: server_url: my.machine.domain.com:8080



## Running LiveBlog
The folowing steps in generally are applicable to all OSs and any exception is specified.

1. Run Ally-Py REST server:

        python3.2 application.py
        
   As a developer you can run the application from sources by running the following command:
        
        cd ..
        python3.2 distribution/application.py -s sources.ini
        
   From distribution/plugins delete the egg(s) for the plugins you are working on. 
   
   If you are working with the liveblog embed (livedesk-embed plugin) make sure that plugins/livedesk-embed/gui-resources/scripts/js/core.min.js is empty.
        

2. Log in to following URL in your browser using credentials `admin/a`:

        http://localhost:8080/content/lib/core/start.html

   And here is an embed example:

        http://localhost:8080/content/lib/livedesk-embed/index.html?theme=default&id=1

<section class="title-page">
	<header>
	<a class="pull-right collapse-button" href="javascript:void(0)"><i class="icon-chevron-down"></i><span class="button-text">_('Collapse')</span></a>	
	<h2>{title}</h2>
	<p class="article-info">
		Reported by <a href="#" class="live-blog-author">Davis Elison</a>, <time>{date}March 01, 2012</time><span class="update-time">last updated <time>{time}21:26:14</time></span>
	</p>
	
	</header>
	<article id="blog-intro">
		{description}
		<figure class="blog-image">
		<img width="294" height="186" alt="French elections" src="pictures/french_elections_1.png">
		</figure>
		<h4>Massa magnis, et tempor, ultrices arcu ridiculus ultricies, integer. Etiam! In a in montes, integer eros, diam proin!</h4>
		<p>
			Sed et placerat rhoncus? Vel porta amet lorem, amet in phasellus pid aliquam aenean amet cras. Eros, ut turpis nec! Augue mid adipiscing. Non augue! Adipiscing magnis amet elit, cras integer! Nunc cum est dis, lectus magna rhoncus elit, ut risus elementum arcu, mus ac est scelerisque, magna nunc cursus mauris porta pulvinar dictumst, ut penatibus dis, turpis etiam! Velit integer mus in, facilisis velit? Lacus tincidunt lundium sociis!
		</p>
	</article>
</section>
Live Blog
=========

Sourcefabric's Live Blog is an open source web app that enables journalists to provide immediate and ongoing coverage on evolving news events. Find out more here: https://www.sourcefabric.org/en/superdesk/liveblog/.

See an example of Live Blog in action here: http://www.zeit.de/politik/deutschland/2013-09/bundestagswahl-2013-live

*License*: [AGPLv3](http://www.gnu.org/licenses/agpl-3.0.txt)

*Copyright*: [Sourcefabric z.ú.](http://www.sourcefabric.org)

## Features

- Access to sources: Drag and drop search results from social media and other content networks into your Live Blog timeline.
- Themes: Customise Live Blog to match your site’s design and make it look great on mobile and tablet.
- User roles: Build a team workﬂow for multiple collaborators with appropriate sign-offs and permissions.
- Easy embedding: Simply copy and paste an embed code from the Live Blog interface and start spreading the news.
- Blog chaining: Connect several blogs to syndicate your content to other media outlets.
- SEO solution: With our new embed plugin you can integrate an html version of the blogs into your website: https://github.com/liveblog/plugin-liveblog-embed-server/tree/master

## Installation

Please check the installation guide: https://github.com/superdesk/Live-Blog/blob/master/INSTALL.md

## Documentation

- Live Blog RESTful API documentation: http://docs.sourcefabric.org/projects/live-blog-restful-api/en/latest/

## Manuals and Tutorials

- Manual for journalists: http://sourcefabric.booktype.pro/live-blog-20-for-journalists/what-is-live-blog/
- How to create your own themes: http://www.sourcefabric.org/en/community/blog/2097/Building-themes-for-Live-Blog.htm

## Superdesk

Live Blog is based on [Superdesk technology](https://www.sourcefabric.org/en/superdesk/).

## How To Contribute

### Commit messages

Every commit has to have a meaningful commit message in the form:

```
[JIRA ref] [JIRA Title] or [Title]
<empty line>
[Description]
```

Where [JIRA ref](https://confluence.atlassian.com/display/FISHEYE/Using+smart+commits) is the Issue code eg. ```LB-13```.

For trivial changes you can ommit JIRA ref or Description or both eg. ```Add travis.yml files```

### Pull requests
Every pull request has to have a meaningful message and if not specified in the commits, a good description of what has been done.

