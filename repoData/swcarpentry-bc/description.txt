---
layout: lesson
root: .
title: Recommended Reading
---
## Books

Susan A. Ambrose, Michael W. Bridges, Michele DiPietro, Marsha C. Lovett, and Marie K. Norman: *[How Learning Works: Seven Research-Based Principles for Smart Teaching](http://www.amazon.com/How-Learning-Works-Research-Based-Principles/dp/0470484101/)*. Jossey-Bass, 2010, 978-0470484104.
:   The best single-volume guide to evidence-based practices in education around.

Chris Fehily: *SQL: Visual QuickStart Guide* (3rd ed). Peachpit Press, 0321553578, 2002.
:   Describes the 5% of SQL that covers 95% of real-world needs.

Karl Fogel: *Producing Open Source Software: How to Run a Successful Free Software Project*. O'Reilly Media, 0596007590, 2005.
:   An guide to how open source projects actually work, full of practical advice on how to earn commit privileges on a project, get it more attention, or fork it in case of irreconcilable differences.

Steve Haddock and Casey Dunn: *Practical Computing for Biologists*. Sinauer, 0878933913, 2010.
:   An excellent general introduction to "the other 90%" of scientific computing.

Andy Oram and Greg Wilson (eds): *Making Software: What Really Works, and Why We Believe It*. O'Reilly, 0596808321, 2010.
:   Leading software engineering researchers take a chapter each to describe key empirical results and the evidence behind them. Topics range from the impact of programming languages on programmers' productivity to whether we can predict software faults using statistical techniques.

Deborah S. Ray and Eric J. Ray: *Unix and Linux: Visual QuickStart Guide*. Peachpit Press, 0321636783, 2009.
:   A gentle introduction to Unix, with many examples.

## Papers

Paul F. Dubois: "Maintaining Correctness in Scientific Programs". *Computing in Science & Engineering*, May–June 2005.
:   Shows how several good programming practices fit together to create defense in depth, so that errors missed by one will be caught by another.

Matthew Gentzkow and Jesse M. Shapiro. 2014: "Code and Data for the Social Sciences: A Practitioner’s Guide". University of Chicago mimeo, http://faculty.chicagobooth.edu/matthew.gentzkow/research/CodeAndData.pdf, last updated January 2014.
:   An excellent description of how to move from doing data analysis with SAS and Excel to using maintainable scripts on well-organized data files in a reproducible way.

Jo Erskine Hannay, Hans Petter Langtangen, Carolyn MacLeod, Dietmar Pfahl, Janice Singer, and Greg Wilson: "How Do Scientists Develop and Use Scientific Software?" *Proc. 2009 ICSE Workshop on Software Engineering for Computational Science and Engineering*, 2009.
:   The largest study survey done of how scientists use computers in their research and how much time they spend doing so.

William Stafford Noble: "A Quick Guide to Organizing Computational Biology Projects". *PLoS Computational Biology*, 5(7), 2009.
:   How and why one scientist organizes his data and scripts.

Ethan P. White, Elita Baldridge, Zachary T. Brym, Kenneth J. Locey, Daniel J. McGlinn, and Sarah R. Supp: "Nine Simple Ways to Make It Easier to (Re)use Your Data." *PeerJ PrePrints*, 1:e7v2, 2012.
:   Delivers exactly what the title promises: a straightforward set of practices that will make it easier for other scientists to use your data.

Greg Wilson, D. A. Aruliah, C. Titus Brown, Neil P. Chue Hong, Matt Davis, Richard T. Guy, Steven H. D. Haddock, Katy Huff, Ian M. Mitchell, Mark Plumbley, Ben Waugh, Ethan P. White, and Paul Wilson: "Best Practices for Scientific Computing". *PLoS Biology*, 12(1), 2014.
:   Describes a set of best practices for scientific software development that have solid foundations in research and experience, and that improve scientists' productivity and the reliability of their software.

Greg Wilson: "Software Carpentry: Lessons Learned". *F1000 Research*, 3(62), 2014, [doi:10.12688/f1000research.3-62.v1](doi:10.12688/f1000research.3-62.v1).
:   Describes what we've learned about how to teach programming to scientists over the last 15 years.

---
layout: lesson
root: .
title: Lessons (Version 5.0 Beta)
---
We are currently updating our lessons
to incorporate what we've learned from our learners
in the last four years.

## For Novices

*   [Introduction](intro.html)
*   [The Unix Shell](novice/shell/index.html)
*   [Version Control with Git](novice/git/index.html)
*   [Programming with Python](novice/python/index.html)
*   [Using Databases and SQL](novice/sql/index.html)
*   [A Few Extras](novice/extras/index.html)
*   [Instructor's Guide](novice/teaching/index.html)

## For the More Experienced

Under development.

## Other Materials

*   [Setup Instructions](setup.html)
*   [Recommended Reading](bib.html)
*   [Glossary](gloss.html)
*   [Our Team](team.html)

Contributing New Material
=========================

Software Carpentry is an open source project,
and we welcome contributions of all kinds:
new and improved lessons,
bug reports,
and small fixes to existing material are all useful.

By contributing,
you are agreeing that Software Carpentry may redistribute your work under
[these licenses](LICENSE.md).

Before beginning anything major,
read the [README.md](README.md) file in this directory.
It explains how this repository is used to create websites for bootcamps.
We also recommend that you open an issue in the `swcarpentry/bc` Issue Tracker
to get feedback on your ideas and coordinate with other developers.

**Table of Contents**

*   [Working With GitHub](#working-with-github)  
*   [Locations and Formats](#locations-and-formats)
*   [Sample Files](#sample-files)
*   [Previewing](#previewing)
*   [FAQ](#faq)

Working With GitHub
-------------------

1.  Fork the `swcarpentry/bc` repository on GitHub.

2.  Clone that repository to your own machine.

3.  Create a branch from `master` for your changes.
    Give your branch a meaningful name,
    such as `fixing-typos-in-novice-shell-lesson`
    or `adding-tutorial-on-visualization`.

4.  Make your changes, commit them, and push them to your repository on GitHub.

5.  Send a pull request to the `master` branch of `[swcarpentry/bc](http://github.com/swcarpentry/bc)`.

If it is easier for you to send them to us some other way,
please mail us at
[admin@software-carpentry.org](mailto:admin@software-carpentry.org).
Given a choice between you creating content or wrestling with Git,
we'd rather have you doing the former.

Locations and Formats
---------------------

Every subject has a sub-directory of its own,
while individual topics are files in that directory.
For example,
the `novice/git` directory holding our introduction to Git for newcomers
contains the files
`00-intro.md`,
`01-backup.md`,
and so on.
(We use two digits followed by a one-word topic key
to ensure files appear in the right order when listed.)

Lessons may be written in Markdown,
as IPython Notebooks,
or in other formats.
However,
as explained in [the README file](README.md),
Jekyll (the tool GitHub uses to create websites)
only knows how to handle Markdown and HTML.
if some other format is used,
the author of the lesson must
add the generated Markdown to the repository.
This ensures that people who *aren't* familiar with some format
don't have to install the tools needed to work with it
(e.g.,
R programmers don't have to install the IPython Notebook).

> If a lesson is in a format we don't already handle,
> the author must also add something to the Makefile
> to re-create the Markdown from the source.
> Please check with us if you plan to do this.

Sample Files
------------

The directory `misc` contains files that can be used as starting points for lessons.
These files explain how to format titles,
objectives,
exercises,
key points,
and code fragments.
In addition,
the IPython Notebook file has metadata in various cells
to ensure that the generated HTML pages have the right style.
If you are creating a new lesson,
please copy one of these files to use as a starting point.

Previewing
----------

To preview changes before committing,
run the command `make site`.
This runs Jekyll with the same flags that GitHub uses when things are committed to the `gh-pages` branch.
Jekyll's output is stored in a directory called `_site`.

Other useful commands in the main Makefile are:

*   `make commands` (or just `make` on its own): list available commands.
*   `make check`: check that the repository's `index.html` file is properly formatted.
*   `make clean`: remove editor backup files and the `_site` directory.
*   `make fixme`: list uses of the word `FIXME` in source files.

The commands to convert IPython Notebooks to Markdown
are stored in a separate Makefile called `ipynb.mk`
to simplify maintenance
and ensure that the main Makefile only does what Jekyll on GitHub will do.
To re-do conversion of notebooks to Markdown files,
use `make ipynb`.

FAQ
---

*   *Where can I get help?*
    <br/>
    Mail us at [admin@software-carpentry.org](mailto:admin@software-carpentry.org),
    come chat with us on [our IRC channel](irc://moznet/sciencelab),
    or join our [discussion list](http://software-carpentry.org/contrib/discuss.html)
    and ask for help there.

---
layout: lesson
root: ../..
---

## Working With Climate Data


<div class="">
<p>To pull everything together, we'll analyze some climate data to find out whether some parts of the world are getting drier faster than others.</p>
</div>


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Write Python programs to download data sets using simple REST APIs.</li>
<li>Explain what CSV is, and read CSV data sets.</li>
<li>Write simple tests for functions.</li>
</ul>
</div>

### Step 1: Finding the Data


<div class="">
<p>A growing number of organizations make data sets available on the web in a style called <a href="../../gloss.html#rest">REST</a>, which stands for REpresentational State Transfer. The details (and ideology) aren't important; what matters is that when REST is used, every data set is identified by a URL.</p>
<p>For this example, we'll use data generated by 15 global circulation models that is provided through the World Bank's <a href="http://data.worldbank.org/developers/climate-data-api">Climate Data API</a>. According to the API's home page, the data sets containing yearly averages for various values are identified by URLs of the form:</p>
<pre>
http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/<em><strong>var</strong></em>/year/<em><strong>iso3</strong></em>.<em><strong>ext</strong></em>
</pre>

<p>where:</p>
<ul>
<li><em><strong>var</strong></em> is either <code>pr</code> (for precipitation) or <code>tas</code> (for &quot;temperature at surface&quot;);</li>
<li><em><strong>iso3</strong></em> is the International Standards Organization (ISO) <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-3">3-letter code for a specific country</a>, such as &quot;CAN&quot; for Canada or &quot;BRA&quot; for Brazil; and</li>
<li><em><strong>ext</strong></em> (short for &quot;extension&quot;) specifies the format we want the data in. There are several choices for format, but the simplest is <a href="../../gloss.html#csv">comma-separated values</a> (CSV), in which each record is a row, and the values in each row are separated by commas. (CSV is frequently used for spreadsheet data.)</li>
</ul>
<p>For example, if we want the average annual temperature in Canada as a CSV file, the URL is:</p>
<pre>
http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/CAN.csv
</pre>

<p>If we paste that URL into a browser, it displays:</p>
<pre><code>year,data
1901,-7.67241907119751
1902,-7.862711429595947
1903,-7.910782814025879
...
2007,-6.819293975830078
2008,-7.2008957862854
2009,-6.997011661529541</code></pre>
<blockquote>
<h4>Behind the Scenes</h4>
<p>This particular data set might be stored in a file on the server, or the server might do this:</p>
<ol style="list-style-type: decimal">
<li>Receive our URL.</li>
<li>Break it into pieces.</li>
<li>Extract the three key fields (the variable, the country code, and the desired format).</li>
<li>Fetch the desired data from a database.</li>
<li>Format the data as CSV.</li>
<li>Send that to our browser.</li>
</ol>
<p>As long as the World Bank doesn't change its URLs, it can switch back and forth between these approaches without breaking our programs.</p>
</blockquote>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Read the <a href="http://data.worldbank.org/developers/climate-data-api">documentation</a> for the Climate Data API, and then write URLs to find the annual average temperature for Afghanistan between 1980 and 1999.</li>
</ol>
</div>

### Step 2: Getting the Data


<div>
<p>If we only wanted to look at data for two or three countries, we could just download those files one by one. But we want to compare data for many different pairs of countries, which means we should write a program.</p>
<p>Python has a library called <code>urllib2</code> for working with URLs. It is clumsy to use, though, so many people (including us) prefer a third-party library called <a href="http://docs.python-requests.org/en/latest/">Requests</a>. To install it, run the command:</p>
</div>


<div class="in">
<pre>!pip install requests</pre>
</div>

<div class="out">
<pre>Requirement already satisfied (use --upgrade to upgrade): requests in /Users/gwilson/anaconda/lib/python2.7/site-packages
Cleaning up...
</pre>
</div>


<div>
<p>(We get this message because we already have it installed; if you don't, you'll see a different message.) We can now get the data we want like this:</p>
</div>


<div class="in">
<pre>import requests
url = &#39;http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/CAN.csv&#39;
response = requests.get(url)
if response.status_code != 200:
    print &#39;Failed to get data:&#39;, response.status_code
else:
    print &#39;First 100 characters of data are&#39;
    print response.text[:100]</pre>
</div>

<div class="out">
<pre>First 100 characters of data are
year,data
1901,-7.67241907119751
1902,-7.862711429595947
1903,-7.910782814025879
1904,-8.15572929382
</pre>
</div>


<div>
<p>The first line imports the <code>requests</code> library. The second defines the URL for the data we want; we could just pass this URL as an argument to the <code>requests.get</code> call on the third line, but assigning it to a variable makes it easier to find.</p>
<p><code>requests.get</code> actually gets our data. More specifically, it:</p>
<ol style="list-style-type: decimal">
<li>creates a connection to the <code>climatedataapi.worldbank.org</code> server;</li>
<li>sends it the URL <code>/climateweb/rest/v1/country/cru/tas/year/CAN.csv</code>;</li>
<li>creates an object in memory on our computer to hold the response;</li>
<li>assigns a number to the object's <code>status_code</code> member variable to tell us whether the request succeeded or not; and</li>
<li>assigns the data sent back by the web server to the object's <code>text</code> member variable.</li>
</ol>
<p>The server can return many different <a href="../../gloss.html#http-status-code">status codes</a>; the most common are:</p>
<table>
  <tr><td>
200
</td><td>
OK
</td><td>
The request has succeeded.
</td></tr>
  <tr><td>
204
</td><td>
No Content
</td><td>
The server has completed the request, but doesn't need to return any data.
</td></tr>
  <tr><td>
400
</td><td>
Bad Request
</td><td>
The request is badly formatted.
</td></tr>
  <tr><td>
401
</td><td>
Unauthorized
</td><td>
The request requires authentication.
</td></tr>
  <tr><td>
404
</td><td>
Not Found
</td><td>
The requested resource could not be found.
</td></tr>
  <tr><td>
408
</td><td>
Timeout
</td><td>
The server gave up waiting for the client.
</td></tr>
  <tr><td>
418
</td><td>
I'm a teapot
</td><td>
No, really...
</td></tr>
  <tr><td>
500
</td><td>
Internal Server Error
</td><td>
An error occurred in the server.
</td></tr>
</table>

<p>Of these, 200 is the only one we really care about: if we get anything else, the response probably doesn't contain actual data (though it might contain an error message).</p>
<blockquote>
<h4>Some People Don't Follow the Rules</h4>
<p>Unfortunately, some sites don't return a meaningful status code. Instead, they return 200 for <em>everything</em>, then put an error message (if appropriate) in the text of the response. This works when the result is being displayed to a human being, but fails miserably when the &quot;reader&quot; is a program that can't actually read.</p>
</blockquote>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Modify the URL in the program above so that it asks for data from a non-existent country and see what the status code is.</li>
</ol>
</div>

### Step 3: Parsing the Data


<div>
<p>Our little program gets the data we want, but returns it as one long character string rather than as a list of numbers. There are two ways we could convert the former to the latter:</p>
<ol style="list-style-type: decimal">
<li>Write a function to split that string on newline characters to create lines, then split the lines on commas and convert the second part of each to a number.</li>
<li>Use a couple of Python libraries to do this for us.</li>
</ol>
<p>Most experienced programmers would say that the second approach is easier, but &quot;easy&quot; is relative: using standard libraries is only more effective in practice if we know those libraries exist, and know enough about them to think about our problem in terms of what they can do.</p>
<p>Let's give both methods a try. Here's a small program to test the first approach:</p>
</div>


<div class="in">
<pre>input_data = &#39;&#39;&#39;1901,12.3
1902,45.6
1903,78.9&#39;&#39;&#39;

as_lines = input_data.split(&#39;\n&#39;)
print &#39;input data as lines:&#39;
print as_lines

for line in as_lines:
    fields = line.split(&#39;,&#39;) # turn &#39;1901,12.3&#39; into [&#39;1901&#39;, &#39;12.3&#39;]
    year = int(fields[0])    # turn the text &#39;1901&#39; into the integer 1901
    value = float(fields[1]) # turn the text &#39;12.3&#39; into the number 12.3
    print year, &#39;:&#39;, value</pre>
</div>

<div class="out">
<pre>input data as lines:
[&#39;1901,12.3&#39;, &#39;1902,45.6&#39;, &#39;1903,78.9&#39;]
1901 : 12.3
1902 : 45.6
1903 : 78.9
</pre>
</div>


<div>
<p>We start by defining a string in our program to use as input data so that we can easily check the correctness of our output. The first three lines of code turn this one multi-line string into a list of strings by splitting on the newline characters (which are written <code>\n</code> in our program). The <code>for</code> loop then extracts the year and value from each line by splitting the line on the comma and converting the digits to numbers.</p>
<blockquote>
<h4>Escape Sequences</h4>
<p>Programmers need a way to put quotes, double quotes, and other special characters in strings. To do this, they use <a href="../../gloss.html#escape-sequence">escape sequences</a>: <code>\'</code> for a single quote, <code>\&quot;</code> for a double quote, <code>\n</code> for a newline, and so on. This means that: <sub>~</sub> 'This can't bewithout&quot;escape sequences&quot;.' <sub>~</sub> prints as: <sub>~</sub> This can't be written without &quot;escape sequences&quot;. <sub>~</sub></p>
</blockquote>
<p>Now let's have a look at how we could parse the data using a couple of standard Python libraries. The first, called <code>cStringIO</code>, lets Python treat a string as if it was an input file:</p>
</div>


<div class="in">
<pre>import cStringIO

data = &#39;&#39;&#39;first
second
third&#39;&#39;&#39;

reader = cStringIO.StringIO(data)
for line in reader:
    print line</pre>
</div>

<div class="out">
<pre>first

second

third
</pre>
</div>


<div>
<p>The <code>cStringIO.StringIO</code> object that we assign to <code>reader</code> is an object that behaves like a file, but reads characters from a string instead of from something on our hard drive. As we'll see in the exercises, we can also write to a <code>StringIO</code> object, which is very useful when we're testing programs.</p>
<blockquote>
<h3>Why the 'c'?</h3>
<p>The 'c' at the start of <code>cStringIO</code>'s name comes from the fact that it is a rewrite in C of an older and slower library called <code>StringIO</code>.</p>
</blockquote>
<p>The second library we'll use is called <code>csv</code>. It doesn't read data itself: instead, it takes the lines read by something else and turns them into lists of values by splitting on commas:</p>
</div>


<div class="in">
<pre>import csv

data = &#39;&#39;&#39;first,FIRST
second,SECOND
third,THIRD&#39;&#39;&#39;
reader = cStringIO.StringIO(data)
wrapper = csv.reader(reader)
for record in wrapper:
    print record</pre>
</div>

<div class="out">
<pre>[&#39;first&#39;, &#39;FIRST&#39;]
[&#39;second&#39;, &#39;SECOND&#39;]
[&#39;third&#39;, &#39;THIRD&#39;]
</pre>
</div>


<div>
<p>Putting it all together, we can get data for Canada like this:</p>
</div>


<div class="in">
<pre>url = &#39;http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/CAN.csv&#39;
response = requests.get(url)
if response.status_code != 200:
    print &#39;Failed to get data:&#39;, response.status_code
else:
    reader = cStringIO.StringIO(response.text)
    wrapper = csv.reader(reader)
    for record in wrapper:
        year = int(record[0])
        value = float(record[1])
        print year, &#39;:&#39;, value</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-6-da21db395042&gt; in &lt;module&gt;()
      7     wrapper = csv.reader(reader)
      8     for record in wrapper:
----&gt; 9         year = int(record[0])
     10         value = float(record[1])
     11         print year, &#39;:&#39;, value

ValueError: invalid literal for int() with base 10: &#39;year&#39;</pre>
</div>


<div>
<p>That error occurs because the first line of data is:</p>
<pre><code>year,data</code></pre>
<p>When we try to convert the string <code>'year'</code> to an integer, Python quite rightly complains. The fix is straightforward: we just need to ignore lines that start with the word <code>year</code>. And while we're at it, we'll put our results into a list instead of just printing them:</p>
</div>


<div class="in">
<pre>url = &#39;http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/CAN.csv&#39;
response = requests.get(url)
if response.status_code != 200:
    print &#39;Failed to get data:&#39;, response.status_code
else:
    reader = cStringIO.StringIO(response.text)
    wrapper = csv.reader(reader)
    results = []
    for record in wrapper:
        if record[0] != &#39;year&#39;:
            year = int(record[0])
            value = float(record[1])
            results.append([year, value])
    print &#39;first five results&#39;
    print results[:5]</pre>
</div>

<div class="out">
<pre>first five results
[[1901, -7.67241907119751], [1902, -7.862711429595947], [1903, -7.910782814025879], [1904, -8.155729293823242], [1905, -7.547311305999756]]
</pre>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><code>StringIO</code> can also be used for output. Use this to write a test that the function <code>print_count</code> does the right thing: <sub>~</sub> def print_count(output, num): for i in range(num): print &gt;&gt; output, num <sub>~</sub></li>
</ol>
</div>

### Step 4: Making a Reusable Function


<div>
<p>Now that we know how to get the data for Canada, let's create a function that will do the same thing for an arbitrary country. The steps are simple: copy the code we've written into a function that takes a 3-letter country code as a parameter, and insert that country code into the URL at the appropriate place:</p>
</div>


<div class="in">
<pre>def get_annual_mean_temp_by_country(country):
    &#39;&#39;&#39;Get the annual mean temperature for a country given its 3-letter ISO code (such as &#34;CAN&#34;).&#39;&#39;&#39;
    url = &#39;http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/&#39; + country + &#39;.csv&#39;
    response = requests.get(url)
    if response.status_code != 200:
        print &#39;Failed to get data:&#39;, response.status_code
    else:
        reader = cStringIO.StringIO(response.text)
        wrapper = csv.reader(reader)
        results = []
        for record in wrapper:
            if record[0] != &#39;year&#39;:
                year = int(record[0])
                value = float(record[1])
                results.append([year, value])
        return results</pre>
</div>


<div>
<p>This works:</p>
</div>


<div class="in">
<pre>canada = get_annual_mean_temp_by_country(&#39;CAN&#39;)
print &#39;first five entries for Canada:&#39;, canada[:5]</pre>
</div>

<div class="out">
<pre>first five entries for Canada: [[1901, -7.67241907119751], [1902, -7.862711429595947], [1903, -7.910782814025879], [1904, -8.155729293823242], [1905, -7.547311305999756]]
</pre>
</div>


<div>
<p>but there's a problem. Look what happens when we pass in an invalid country identifier:</p>
</div>


<div class="in">
<pre>latveria = get_annual_mean_temp_by_country(&#39;LTV&#39;)
print &#39;first five entries for Latveria:&#39;, latveria[:5]</pre>
</div>

<div class="out">
<pre>first five entries for Latveria: []
</pre>
</div>


<div>
<p>Latveria doesn't exist, so why is our function returning an empty list rather than printing an error message? The non-appearance of an error message must mean that the response code was 200; if so, we would have gone into the <code>else</code> branch, assigned an empty list to <code>results</code>, and then... hm... All right, if the response code was 200 and there was no data, that would explain what we're seeing.</p>
<blockquote>
<h4>Editing vs. Copying</h4>
<p>If we were writing this function in order to use it for real data analysis, we would go back and change it in place. Since we want to show both the flawed version and its replacement, we've copied it instead.</p>
</blockquote>
</div>


<div class="in">
<pre>def get_annual_mean_temp_by_country(country):
    &#39;&#39;&#39;Get the annual mean temperature for a country given its 3-letter ISO code (such as &#34;CAN&#34;).&#39;&#39;&#39;
    url = &#39;http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/&#39; + country + &#39;.csv&#39;
    print &#39;url used is&#39;, url
    response = requests.get(url)
    print &#39;response code:&#39;, response.status_code
    print &#39;length of data:&#39;, len(response.text)
    if response.status_code != 200:
        print &#39;Failed to get data:&#39;, response.status_code
    else:
        reader = cStringIO.StringIO(response.text)
        wrapper = csv.reader(reader)
        results = []
        for record in wrapper:
            if record[0] != &#39;year&#39;:
                year = int(record[0])
                value = float(record[1])
                results.append([year, value])
        return results

latveria = get_annual_mean_temp_by_country(&#39;LTV&#39;)
print &#39;number of records for Latveria:&#39;, len(latveria)</pre>
</div>

<div class="out">
<pre>url used is http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/LTV.csv
response code: 200
length of data: 0
number of records for Latveria: 0
</pre>
</div>


<div>
<p>Great: after a bit more experimenting, we discover that the site <em>always</em> returns a 200 status code. The only way to tell if there's real data or not will be to check if <code>response.text</code> is empty. Here's the updated function:</p>
</div>


<div class="in">
<pre>def get_annual_mean_temp_by_country(country):
    &#39;&#39;&#39;
    Get the annual mean temperature for a country given its 3-letter ISO code (such as &#34;CAN&#34;).
    Returns an empty list if the country code is invalid.
    &#39;&#39;&#39;
    url = &#39;http://climatedataapi.worldbank.org/climateweb/rest/v1/country/cru/tas/year/&#39; + country + &#39;.csv&#39;
    response = requests.get(url)
    results = []
    if len(response.text) &gt; 0:
        reader = cStringIO.StringIO(response.text)
        wrapper = csv.reader(reader)
        for record in wrapper:
            if record[0] != &#39;year&#39;:
                year = int(record[0])
                value = float(record[1])
                results.append([year, value])
    return results

print &#39;number of records for Canada:&#39;, len(get_annual_mean_temp_by_country(&#39;CAN&#39;))
print &#39;number of records for Latveria:&#39;, len(get_annual_mean_temp_by_country(&#39;LTV&#39;))</pre>
</div>

<div class="out">
<pre>number of records for Canada: 109
number of records for Latveria: 0
</pre>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Should this function print an error mesage when it doesn't get data? Why or why not?</li>
</ol>
</div>

### Step 5: Comparing Countries


<div>
<p>Now that we can get surface temperatures for different countries, we can write a function to compare those values. (We'll jump straight into writing a function because by now it's clear that's what we're eventually going to do anyway.) Here's our first cut:</p>
</div>


<div class="in">
<pre>def diff_records(left, right):
    &#39;&#39;&#39;Given lists of [year, value] pairs, return list of [year, difference] pairs.&#39;&#39;&#39;
    num_years = len(left)
    results = []
    for i in range(num_years):
        left_year, left_value = left[i]
        right_year, right_value = right[i]
        difference = left_value - right_value
        results.append([left_year, difference])
    return results</pre>
</div>


<div>
<p>Here, we're using the number of entries in <code>left</code> (which we find with <code>len(left)</code>) to control our loop. The expression:</p>
<pre><code>for i in range(num_years):</code></pre>
<p>runs <code>i</code> from 0 to <code>num_years-1</code>, which corresponds exactly to the legal indices of <code>left</code>. Inside the loop we unpack the left and right years and values from the list entries, then append a pair containing a year and a difference to <code>results</code>, which we return at the end.</p>
<p>To see if this function works, we can run a couple of tests on made-up data:</p>
</div>


<div class="in">
<pre>print &#39;one record:&#39;, diff_records([[1900, 1.0]],
                                  [[1900, 2.0]])
print &#39;two records:&#39;, diff_records([[1900, 1.0], [1901, 10.0]],
                                   [[1900, 2.0], [1901, 20.0]])</pre>
</div>

<div class="out">
<pre>one record: [[1900, -1.0]]
two records: [[1900, -1.0], [1901, -10.0]]
</pre>
</div>


<div>
<p>That looks pretty good—but what about these cases?</p>
</div>


<div class="in">
<pre>print &#39;mis-matched years:&#39;, diff_records([[1900, 1.0]],
                                         [[1999, 2.0]])
print &#39;left is shorter&#39;, diff_records([[1900, 1.0]],
                                      [[1900, 10.0], [1901, 20.0]])
print &#39;right is shorter&#39;, diff_records([[1900, 1.0], [1901, 2.0]],
                                       [[1900, 10.0]])</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
&lt;ipython-input-15-7582f56db8bf&gt; in &lt;module&gt;()
      4                                       [[1900, 10.0], [1901, 20.0]])
      5 print &#39;right is shorter&#39;, diff_records([[1900, 1.0], [1901, 2.0]],
----&gt; 6                                        [[1900, 10.0]])

&lt;ipython-input-13-67464343fd99&gt; in diff_records(left, right)
      5     for i in range(num_years):
      6         left_year, left_value = left[i]
----&gt; 7         right_year, right_value = right[i]
      8         difference = left_value - right_value
      9         results.append([left_year, difference])

IndexError: list index out of rangemis-matched years: [[1900, -1.0]]
left is shorter [[1900, -9.0]]
right is shorter</pre>
</div>


<div>
<p>The first test gives us an answer even though the years didn't match: we get a result, but it's meaningless. The second case gives us a partial result, again without telling us there's a problem, while the third crashes because we're using <code>left</code> to determine the number of records, but <code>right</code> doesn't have that many.</p>
<p>The first two problems are actually worse than the third because they are <a href="../../gloss.html#silent-failure">silent failures</a>: the function does the wrong thing, but doesn't indicate that in any way. Let's fix that:</p>
</div>


<div class="in">
<pre>def diff_records(left, right):
    &#39;&#39;&#39;
    Given lists of [year, value] pairs, return list of [year, difference] pairs.
    Fails if the inputs are not for exactly corresponding years.
    &#39;&#39;&#39;
    assert len(left) == len(right), \
           &#39;Inputs have different lengths.&#39;
    num_years = len(left)
    results = []
    for i in range(num_years):
        left_year, left_value = left[i]
        right_year, right_value = right[i]
        assert left_year == right_year, \
               &#39;Record {0} is for different years: {1} vs {2}&#39;.format(i, left_year, right_year)
        difference = left_value - right_value
        results.append([left_year, difference])
    return results</pre>
</div>

<div class="out">
<pre>
</pre>
</div>


<div>
<p>Do our &quot;good&quot; tests pass?</p>
</div>


<div class="in">
<pre>print &#39;one record:&#39;, diff_records([[1900, 1.0]],
                                  [[1900, 2.0]])
print &#39;two records:&#39;, diff_records([[1900, 1.0], [1901, 10.0]],
                                   [[1900, 2.0], [1901, 20.0]])</pre>
</div>

<div class="out">
<pre>one record: [[1900, -1.0]]
two records: [[1900, -1.0], [1901, -10.0]]
</pre>
</div>


<div>
<p>What about our the three tests that we now expect to fail?</p>
</div>


<div class="in">
<pre>print &#39;mis-matched years:&#39;, diff_records([[1900, 1.0]],
                                         [[1999, 2.0]])</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-18-c101917a748e&gt; in &lt;module&gt;()
      1 print &#39;mis-matched years:&#39;, diff_records([[1900, 1.0]],
----&gt; 2                                          [[1999, 2.0]])

&lt;ipython-input-16-d41327791c15&gt; in diff_records(left, right)
     10         left_year, left_value = left[i]
     11         right_year, right_value = right[i]
---&gt; 12         assert left_year == right_year,                &#39;Record {0} is for different years: {1} vs {2}&#39;.format(i, left_year, right_year)
     13         difference = left_value - right_value
     14         results.append([left_year, difference])

AssertionError: Record 0 is for different years: 1900 vs 1999mis-matched years:</pre>
</div>


<div class="in">
<pre>print &#39;left is shorter&#39;, diff_records([[1900, 1.0]],
                                      [[1900, 10.0], [1901, 20.0]])</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-19-682d448d921e&gt; in &lt;module&gt;()
      1 print &#39;left is shorter&#39;, diff_records([[1900, 1.0]],
----&gt; 2                                       [[1900, 10.0], [1901, 20.0]])

&lt;ipython-input-16-d41327791c15&gt; in diff_records(left, right)
      4     Fails if the inputs are not for exactly corresponding years.
      5     &#39;&#39;&#39;
----&gt; 6     assert len(left) == len(right),            &#39;Inputs have different lengths.&#39;
      7     num_years = len(left)
      8     results = []

AssertionError: Inputs have different lengths. left is shorter</pre>
</div>


<div class="in">
<pre>print &#39;right is shorter&#39;, diff_records([[1900, 1.0], [1901, 2.0]],
                                       [[1900, 10.0]])</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-20-a475e608dd70&gt; in &lt;module&gt;()
      1 print &#39;right is shorter&#39;, diff_records([[1900, 1.0], [1901, 2.0]],
----&gt; 2                                        [[1900, 10.0]])

&lt;ipython-input-16-d41327791c15&gt; in diff_records(left, right)
      4     Fails if the inputs are not for exactly corresponding years.
      5     &#39;&#39;&#39;
----&gt; 6     assert len(left) == len(right),            &#39;Inputs have different lengths.&#39;
      7     num_years = len(left)
      8     results = []

AssertionError: Inputs have different lengths. right is shorter</pre>
</div>


<div>
<p>Excellent: the assertions we've added will now alert us if we try to work with badly-formatted or inconsistent data.</p>
<blockquote>
<h4>There's a Better Way to Do It</h4>
<p>We had to run each test in a cell of its own because Python stops executing the code in a cell as soon as an assertion fails, and we want to make sure all three tests actually run. A <a href="../../gloss.html#unit-testing">unit testing</a> library would handle this for us, and do much else as well; we cover unit testing libraries in our intermediate lesson on Python.</p>
</blockquote>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Should <code>get_annual_mean_temp_by_country</code> use an assertion to fail if it doesn't get data? Why or why not?</p></li>
<li><p>Python includes a function called <code>enumerate</code> that's often used in <code>for</code> loops. This loop: <sub>~</sub> for (i, c) in enumerate('abc'): print i, '=', c <sub>~</sub> prints: <sub>~</sub> 0 = a 1 = b 2 = c <sub>~</sub> Rewrite <code>diff_records</code> to use <code>enumerate</code>.</p></li>
</ol>
</div>

### Step 6: Putting It All Together


<div>
<p>We now have all the tools we need to visualize the temperature differences between countries:</p>
</div>


<div class="in">
<pre>%matplotlib inline

from matplotlib import pyplot as plt

australia = get_annual_mean_temp_by_country(&#39;AUS&#39;)
canada = get_annual_mean_temp_by_country(&#39;CAN&#39;)
diff = diff_records(australia, canada)
plt.plot(diff)
plt.show()</pre>
</div>

<div class="out">
<pre>
</pre>
</div>


<div>
<p>That's not what we want: the library has interpreted our list of pairs as two corresponding curves rather than as the (x,y) coordinates for one curve. Let's convert our list of (year, difference) pairs into a NumPy array:</p>
</div>


<div class="in">
<pre>import numpy as np
d = np.array(diff)</pre>
</div>


<div>
<p>and then plot the first column against the second:</p>
</div>


<div class="in">
<pre>plt.plot(d[:, 0], d[:, 1])
plt.show()</pre>
</div>

<div class="out">
<pre></pre>
</div>


<div>
<p>It looks like the difference is slowly decreasing, but the signal is very noisy. At this point, if we wanted a real answer, it would be time to break out a curve-fitting library.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Modify the plotting commands so that the Y-axis scale runs from 0 to 32. Do you think this gives you a more accurate or less accurate view of this data?</li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Many sites make data available for download via URLs that are formatted in specific ways.</li>
<li>Use the <code>requests</code> library to download data in Python programs.</li>
<li>Use the <code>cStringIO</code> library to treat text as input or output files.</li>
<li>Use the <code>csv</code> library to read comma-separated values.</li>
<li>Write tests.</li>
</ul>
</div>

# Data visualization with ggplot2







## Review

Remember an earlier lesson where we introduced basic plotting commands using built-in data and base plotting tools. For example, we made a few plots using Edgar Anderson's famous iris dataset, which measured petal and sepal length and width for several different species of flower.


```coffee
# Load some data and look at the first few lines
data(iris)
head(iris)
```

```
##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
```

```coffee

# Make a basic scatter plot
with(iris, plot(Sepal.Length, Petal.Length))
```

![plot of chunk irisbase](figure/irisbase.png) 


When we call `plot` in this way, we are using built-in, or **base** graphics. R's base graphics are powerful and nearly infinitely customizable. 

## ggplot2 

### The Diamonds dataset

Now let's look at a bigger dataset. We're going to be using a data visualization package called **ggplot2** for drawing the plots, and the **ggplot2** package comes with some data we're going to use for this example. 

Recall how to install and load packages. Install the package if you haven't already:


```coffee
# Only need to do this once
install.packages("ggplot2")
```


Then load it:


```coffee
library(ggplot2)
```


Now let's load the diamonds dataset and take a look at the first few rows and it's structure with commands we learned previously. To learn more about this dataset you can also run `?diamonds`. 


```coffee
data(diamonds)
head(diamonds)
```

```
##   carat       cut color clarity depth table price    x    y    z
## 1  0.23     Ideal     E     SI2  61.5    55   326 3.95 3.98 2.43
## 2  0.21   Premium     E     SI1  59.8    61   326 3.89 3.84 2.31
## 3  0.23      Good     E     VS1  56.9    65   327 4.05 4.07 2.31
## 4  0.29   Premium     I     VS2  62.4    58   334 4.20 4.23 2.63
## 5  0.31      Good     J     SI2  63.3    58   335 4.34 4.35 2.75
## 6  0.24 Very Good     J    VVS2  62.8    57   336 3.94 3.96 2.48
```

```coffee
str(diamonds)
```

```
## 'data.frame':	53940 obs. of  10 variables:
##  $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...
##  $ cut    : Ord.factor w/ 5 levels "Fair"<"Good"<..: 5 4 2 4 2 3 3 3 1 3 ...
##  $ color  : Ord.factor w/ 7 levels "D"<"E"<"F"<"G"<..: 2 2 2 6 7 7 6 5 2 5 ...
##  $ clarity: Ord.factor w/ 8 levels "I1"<"SI2"<"SI1"<..: 2 3 5 4 2 6 7 3 4 5 ...
##  $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...
##  $ table  : num  55 61 65 58 58 57 57 55 61 61 ...
##  $ price  : int  326 326 327 334 335 336 336 337 337 338 ...
##  $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...
##  $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...
##  $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...
```


From this we can see this dataset has prices of nearly 54,000 diamonds along with various features about the diamonds, such as the weight, the quality of the cut, the color, the clarity, and measurements of various dimensions. 

### Plotting with ggplot2 using `qplot`

If we wanted to do some exploratory data analysis we might start by plotting the price versus the weight of the diamond.


```coffee
with(diamonds, plot(carat, price))
```

![plot of chunk basediamond](figure/basediamond.png) 


As we would expect there is definitely a relationship between the size of the diamond and its cost, but how do the other variables (cut, color, clarity) affect the price? We could examine the interrelationships of all these variables using base R graphics, but it could become extremely cumbersome. 

**ggplot2** is a widely used R package that extends R's visualization capabilities. It takes the hassle out of things like creating legends, mapping other variables to scales like color, or faceting plots into small multiples. We'll learn about what all these things mean shortly. To start with, let's produce the same plot as before, but this time using **ggplot2**'s `qplot` function. The `qplot` function is a quick and dirty convenience function to use **ggplot2**, and its syntax will be familiar if you're used to the base `plot` function. We'll cover advanced usage with the `ggplot` function later on.


```coffee
qplot(carat, price, data = diamonds)
```

![plot of chunk qplot1](figure/qplot1.png) 


The syntax is very similar to R's base graphics where you specify what's on the x and y axes, then give it the name of the data frame you want to use. We see again the strong relationship between the size of the diamond and its price, but the relationship doesn't appear linear. How does the diamond's clarity affect the weight-price relationship? 

#### Faceting and scaling

One option we could use is to color-code the points by their clarity. Here, we pass another `col=` argument with the variable we'd like to use for color-coding:


```coffee
qplot(carat, price, data = diamonds, col = clarity)
```

![plot of chunk clarcolor](figure/clarcolor.png) 


Examining the plot you can see that poor-clarity diamonds (included, small inclusions, etc) fetch a lower price per carat relative to more clear diamonds (very small inclusions, internally flawless, etc). We can see that **ggplot2** color-codes the points using a sensible default color scheme, and automatically draws a legend on the side for us. This requires a good deal of extra error-prone coding using base graphics.

However, with 54,000 points on this plot, there is a good deal of overplotting that obscures how clarity affects the nature of the weight-price relationship. How else might we visualize this data? This is where a *series of small multiples* is helpful. The idea of *small multiples* was popularized by data visualization expert Edward Tufte. The idea is that you create a large grid of small plots, where each plot shows a particular *facet* of the data. Here, each plot in the grid might be price vs. carat for each particular clarity level. You explain to your audience the axes and how to interpret each plot only once, and the audience will immediately understand the rest of the plots.

This can be accomplished easily using **ggplot2**:


```coffee
qplot(carat, price, data = diamonds, facets = ~clarity)
```

![plot of chunk facetclar](figure/facetclar.png) 


Here, the `facets` argument expects a forumla object that's constructed with the `~` operator. Here, we've plotted the price vs. weight separately for each level of clarity. We can see what we suspected before. With dirty diamonds (included, and perhaps small inclusions), the weight-price relationship is linear or slightly quadratic. Large diamonds can be purchased rather cheaply. But for very clear diamonds (internally flawless), the relationship is quadratic or even exponential.

Let's examine the weight-price relationship for various color ratings:


```coffee
qplot(carat, price, data = diamonds, facets = ~color)
```

![plot of chunk facetcol](figure/facetcol.png) 


Here we see that for whiter diamonds (D, E, F) the price rises more quickly with increasing weight than for yellower diamonds (H, I, J).

We can further facet the plot across two different categorical variables using the same syntax:


```coffee
qplot(carat, price, data = diamonds, facets = clarity ~ color)
```

![plot of chunk facetclarcol](figure/facetclarcol.png) 


Here we see that the price per carat rises very steeply for very white, very clear diamonds, while the relationship is nearly linear for yellower, more flawed diamonds. We can see that a perfect white diamond averages around $15,000 while a yellow included diamond can be had for only around $2,000.

Finally, we can combind both color-coding and faceting in the same plot. Let's use the same faceting scheme as last time, but color the points by the quality of the diamond's cut.


```coffee
qplot(carat, price, data = diamonds, facets = clarity ~ color, col = cut)
```

![plot of chunk facetclarcol_colcut](figure/facetclarcol_colcut.png) 


This color-coding reveals that clearer, whiter diamonds *generally* have higher quality cuts, but the relationship doesn't appear strong, visually. Looking down the plot toward clearer diamonds you start to see more "Ideal" cuts than at the top, which are the more included diamonds. 

What we've done here in addition to faceting is map a feature of the data (here, the cut quality) onto a scale (here, color). This behavior will work differently depending on whether you're looking at categorical or continuous variables. We can also map features to other *scales* such as `size=`, `shape=`, `linetype=`, or even transparency using `alpha=`. All of these different scales can be combined with each other or with facets, and give you an extremely powerful and easy-to-use graphical toolbox for exploratory data analysis. 

#### Exercise

FIXME: Now, install the `xx` package, and load the `xx` dataset. Using the techniques we've learned here, use faceting and scaling options to explore how xx, xx, and xx affect the relationship between xx and xx.

***Note:** This is where the *Teaching Software Carpentry* exercise ends, and where the future expansion begins.*

### ggplot2 and the *Grammar of Graphics*

The **ggplot2** package provides an R implementation of Leland Wilkinson's *Grammar of Graphics* (1999). The *Grammar of Graphics* challenges data analysts to think beyond the garden variety plot types (e.g. scatter-plot, barplot) and the consider the components that make up a plot or graphic, such as how data are represented on the plot (as lines, points, etc.), how variables are mapped to coordinates or plotting shape or colour, what transformation or statistical summary is required, and so on. Specifically, **ggplot2** allows users to build a plot layer-by-layer by specifying:

 * a *geom**, which specifies how the data are represented on the plot (points, lines, bars, etc.),
 * *aesthetics* that map variables in the data to axes on the plot or to plotting size, shape, color, etc.,
 * a *stat*, a statistical transformation or summary of the data applied prior to plotting,
 * *facets*, which we've already seen above, that allow the data to be divided into chunks on the basis of other categorical or continuous variables and the same plot drawn for each chunk.

Because **ggplot2** implements a *layered* grammar of graphics, data points and additional information (scatterplot smoothers, confidence bands, etc.) can be added to the plot via additional layers, each of which utilize further geoms, aesthetics, and stats.

To make the best use of **ggplot2** it helps to understand the grammar and how it affects how plots are produced. In addition, it is important to note that **ggplot2** is not a general-purpose plotting tool-kit; you may not be able to achieve certain plots or additions to a figure of they do not map onto concepts included in the layered grammar.

In the examples above, we used **ggplot2**'s convenience function, `qplot`, because it's syntax should be familiar if you've already used base graphics. The `qplot` function did a lot of stuff for us: it created the plot object, added layers, plotted geoms, mapped features to aesthetics, created facets, and displayed the result. From here out, we'll use the `ggplot` function to build everything ourselves. 

The `ggplot` function has two required arguments: the *data* used for creating the plot, and an *aesthetic* mapping to describe how variables in said data are mapped to things we can see on the plot. Let's use `ggplot` to recreate some of the same plots we produced above. First, the simple scatterplot:


```coffee
# Using the qplot convenience function: qplot(carat, price, data = diamonds)

# Using ggplot:
ggplot(diamonds, aes(carat, price)) + geom_point()
```

![plot of chunk ggdiamonds](figure/ggdiamonds.png) 


Here, we've built our plot in layers. First, we create a canvas for plotting layers to come using the `ggplot` function, specifying which **data** to use (here, the *diamonds* data frame), and an **aesthetic mapping** of *carat* to the x-axis and *price* to the y-axis. We next add a layer to the plot, specifying a **geom**, or a way of visually representing the aesthetic mapping. Here we're using a point. Instead of using a point, we could use a different geom. Here, let's use [hexagonal binning](http://cran.r-project.org/web/packages/hexbin/vignettes/hexagon_binning.pdf) instead of a point.


```coffee
ggplot(diamonds, aes(carat, price)) + geom_hex()
```

![plot of chunk gghexbin](figure/gghexbin.png) 


Here, each bin represents a segment of the plotting surface with lighter blue colors representing more density in that segment. The number of bins can be adjusted as an argument to the `geom_hex()` function. This is one method of solving the overplotting problem we have in this plot without doing any faceting. Another method, here using points again, is to lower the opacity of each point. Here, `alpha=1/5` sets the opacity of each point to 20%. In other words, 5 points would have to overlap to result in a completely solid point. Note that in this case we're not *mapping* the alpha level aesthetic to some other variable as we did above with color -- we're setting it to a static value of 0.20 for all points in the layer.


```coffee
ggplot(diamonds, aes(carat, price)) + geom_point(alpha = 1/5)
```

![plot of chunk gghexbin2](figure/gghexbin2.png) 


We can easily add more layers to the plot. For instance, we could add another layer displaying a smoothed conditional mean using the `geom_smooth()` function.


```coffee
ggplot(diamonds, aes(carat, price)) + geom_point() + geom_smooth()
```

![plot of chunk smoothgam](figure/smoothgam.png) 


We'll get a message telling us that because we have >1,000 observations we will default to using a generalized additive model. We could easily plot a straight line by specifying that we want a linear model (`method="lm"`) instead of a generalized additive model, the default for large datasets.


```coffee
ggplot(diamonds, aes(carat, price)) + geom_point() + geom_smooth(method = "lm")
```

![plot of chunk smoothlinear](figure/smoothlinear.png) 


Getting back to our examples above, using the `ggplot` syntax we can map the color of the points (an aesthetic) onto one of the variables in our dataset.


```coffee
# Using the qplot convenience function: qplot(carat, price, data = diamonds,
# col = clarity) Using ggplot:
ggplot(diamonds, aes(carat, price, col = clarity)) + geom_point()
```

![plot of chunk ggclarcol](figure/ggclarcol.png) 


We can also create a faceted plot as we did above using the `ggplot` function adding another layer with `facet_grid`.


```coffee
# Using the qplot convenience function: qplot(carat, price, data = diamonds,
# facets = clarity ~ color) Using ggplot:
ggplot(diamonds, aes(carat, price)) + geom_point() + facet_grid(clarity ~ color)
```

![plot of chunk ggfacet](figure/ggfacet.png) 


By combining multiple layers with aesthetic mappings to different scales, **ggplot2** provides a foundation for producing a wide range of statistical graphics beyond simple "named" plots like scatter plots, histograms, bar plots, etc.

How about a stacked histogram, mapping the fill color of the stacked histogram to levels of the *clarity* variable:


```coffee
ggplot(diamonds, aes(price, fill = clarity)) + geom_histogram(position = "fill", 
    binwidth = 200)
```

![plot of chunk ggfillhisto](figure/ggfillhisto.png) 


Or what about box plots of the price grouped separately by the quality of the cut, color-coded by the color of the diamond, with the price on the y-axis being on the log (base 10) scale? Simple:


```coffee
ggplot(diamonds, aes(cut, price)) + geom_boxplot(aes(fill = color)) + scale_y_log10()
```

![plot of chunk ggboxplots](figure/ggboxplots.png) 


Or what about a kernel density plot (think about a smooth histogram) of the diamond's table depth in different semitransparent curves with the color fill mapped to each level of *cut*, all on the same facet limited to depths between 55 and 70, with a title and a proper axis labels? This also shows the syntax of building up a plot one step at a time. We first initialize the plot with `ggplot`, giving it the data we're working with, and aesthetic mappings. We then add a `geom_density` layer, limit the x-axis displayed, and finally give it a title and axis labels. The plot is in the **g** object here; we can simply enter `g` and the plot will be displayed.


```coffee
g <- ggplot(diamonds, aes(depth, fill = cut))
g <- g + geom_density(alpha = 1/4)
g <- g + xlim(55, 70)
g <- g + ggtitle("Table Depths by Cut Quality")
g <- g + xlab("Table Depth") + ylab("Density")
g
```

![plot of chunk ggdepthdensity](figure/ggdepthdensity.png) 


Finally, we can save the plot created using the `ggsave` function:


```coffee
ggsave(filename = "~/Desktop/table-depth-density.png", plot = g)
```


There are endless ways to combine aesthetic mappings with different geoms and multiple layers. Read about other **geom**s, mappings, scales, and other layer options at the links below.

## Further **ggplot2** resources

* <http://docs.ggplot2.org/current/>: The official **ggplot2** documentation.
* <http://www.amazon.com/o/ASIN/0387981403/ref=nosim/gettgenedone-20>: The **ggplot2** book, by the developer, Hadley Wickham.
* <https://groups.google.com/forum/#!forum/ggplot2>: The **ggplot2** Google Group (mailing list, discussion forum).
* <https://github.com/swcarpentry/bc/tree/master/intermediate/r/data-visualization>: Intermediate Software Carpentry lesson on data visualization with **ggplot2**.
* <http://learnr.wordpress.com/>: A blog with a good number of posts describing how to reproduce various kind of plots using **ggplot2**.
* <http://stackoverflow.com/questions/tagged/ggplot2>: Thousands of questions and answers tagged with "ggplot2" on Stack Overflow, a programming Q&A site.

---
layout: lesson
root: ../..
title: Data visualization with ggplot2
level: misc
---

This lesson contains an Rmd file with code and documentation for an introduction to the **ggplot2** package for data visualization. Upon completing this lesson, learners will be able to use ggplot2 to explore high-dimensional data by faceting and scaling scatter plots in small multiples.

The first half of the lesson uses the `qplot` convenience function, as it will be intuitive for learners already familiar with **base** graphics. Furthermore, when searching for help with **ggplot2**, learners will inevitably encounter examples using `qplot`.

The second half of the lesson introduces the grammar of graphics and the more comprehensive `ggplot` function for creating plots layer-by-layer. It introduces learners to the philosophy of `ggplot`, recreates several of the examples in the first half of the lesson using `ggplot`, and demonstrates creating other types of plots with `ggplot`.

The lesson should take approximately 30 minutes. Learners should already have a basic introduction to R, including:

* Installing and loading packages
* Loading built-in data with the `data()` function
* Inspecting data frames with `head()`, `str()`, etc.
* Basic plotting using base graphics

---

* FIXME: add more examples of novel types of visualization using `ggplot` other than "named" plots like scatter plots, histograms, etc.
* FIXME: Populate the exercise under the `qplot` section.
* FIXME: Add another exercise at the (current) end of the `ggplot` lesson.

---
layout: lesson
root: .
title: Glossary
---
**<a name="absolute-error">absolute error</a>**:
The absolute value of the difference between a mathematical value
and its finite approximation in a computer.

**<a name="absolute-path">absolute path</a>**:
A [path](#path) that refers to a particular location in a file system.
Absolute paths are usually written with respect to the file system's
[root directory](#root-directory),
and begin with either "/" (on Unix) or "\\" (on Microsoft Windows).
See also: [relative path](#relative-path).

**<a name="access-control-list">access control list</a>** (ACL):
A list of permissions attached to a file or directory
that specifies who can do what with it.

**<a name="additive-color-model">additive color model</a>**:
A way to represent colors as the sum of contributions from primary colors
such as [red, green, and blue](#rgb).

**<a name="aggregation-function">aggregation function</a>**:
A function such as `sum` or `max` that combines many values to produce a single result.

**<a name="alias-library">alias</a>** (a library):
To give a [library](#library) a nickname while importing it.

**<a name="argument">argument</a>**:
A value given to a function or program when it runs.
The term is often used interchangeably (and inconsistently) with [parameter](#parameter).

**<a name="assertion">assertion</a>**:
An expression which is supposed to be true at a particular point in a program.
Programmers typically put assertions in their code to check for errors;
if the assertion fails (i.e., if the expression evaluates as false),
the program halts and produces an error message.
See also: [invariant](#invariant), [precondition](#precondition), [postcondition](#postcondition).

**<a name="assignment">assignment</a>**:
To give a value a name by associating a variable with it.

**<a name="atomic-value">atomic value</a>**:
A value that cannot be decomposed into smaller pieces.
For example,
the number 12 is usually considered atomic
(unless we are teaching addition to school children,
in which case we might decompose it into tens and ones).

**<a name="branch">branch</a>**:
A "parallel universe" in a [version control](#version-control) [repository](#repository).
Programmers typically use branches to isolate different sets of changes from one another during development
so that they can concentrate on one problem at a time.
See also: [merge](#repository-merge).

**<a name="call-stack">call stack</a>**:
A data structure inside a running program that keeps track of active function calls.
Each call's variables are stored in a [stack frame](#stack-frame);
a new stack frame is put on top of the stack for each call,
and discarded when the call is finished.

**<a name="cascading-delete">cascading delete</a>**:
The practice of automatically deleting things in a database
that depend on a record
when that record is deleted.
See also: [referential integrity](#referential-integrity).

**<a name="case-insensitive">case insensitive</a>**:
Treating text as if upper and lower case characters were the same.
See also: [case sensitive](#case-sensitive).

**<a name="catch-exception">catch</a>** (an exception):
To handle an [exception](#exception) that has been [raised](#raise-exception)
somewhere else in a program.

**<a name="change-set">change set</a>**:
A group of changes to one or more files
that are [committed](#commit) to a [version control](#version-control) [repository](#repository)
in a single operation.

**<a name="repository-clone">clone</a>** (a repository):
To make a local copy of a [version control repository](#repository).
See also: [fork](#repository-fork).

**<a name="code-review">code review</a>**:
A systematic peer review of a piece of software,
or of changes to a piece of software.
Peer review is often conducted on [pull requests](#pull-request)
before they are [merged](#repository-merge) into a [repository](#repository).

**<a name="csv">comma-separated values</a>** (CSV):
A common textual representation for tables
in which the values in each row are separated by commas.

**<a name="cli">command-line interface</a>** (CLI):
An interface based on typing commands,
usually at a [REPL](#repl).
See also: [graphical user interface](#gui).

**<a name="comment">comment</a>**:
A remark in a program that is intended to help human readers understand what is going on,
but is ignored by the computer.
Comments in Python, R, and the Unix shell start with a `#` character and run to the end of the line;
comments in SQL start with `--`,
and other languages have other conventions.

**<a name="conditional-statement">conditional statement</a>**:
A statement in a program that might or might not be executed
depending on whether a test is true or false.

**<a name="conflict">conflict</a>**:
A change made by one user of a [version control system](#version-control)
that is incompatible with changes made by other users.
Helping users [resolve](#resolve) conflicts
is one of version control's major tasks.

**<a name="cross-product">cross product</a>**:
A pairing of all elements of one set with all elements of another.

**<a name="current-working-directory">current working directory</a>**:
The directory that [relative paths](#relative-path) are calculated from;
equivalently,
the place where files referenced by name only are searched for.
Every [process](#process) has a current working directory.
The current working directory is usually referred to using the shorthand notation `.` (pronounced "dot").

**<a name="cursor">cursor</a>**:
A pointer into a database that keeps track of outstanding operations.

**<a name="data-type">data type</a>**:
A kind of data value,
such as [integer](#integer) or [character string](#string).

**<a name="database-manager">database manager</a>**:
A program that manages a [relational database](#relational-database).

**<a name="default-parameter-value">default parameter value</a>**:
A value to use for a [parameter](#parameter) if nothing is specified explicitly.

**<a name="defensive-programming">defensive programming</a>**:
The practice of writing programs that check their own operation to catch errors as early as possible.

**<a name="delimiter">delimiter</a>**:
A character or characters used to separate individual values,
such as the commas between columns in a [CSV](#csv) file.

**<a name="docstring">docstring</a>**:
Short for "documentation string",
this refers to textual documentation embedded in Python programs.
Unlike comments,
docstrings are preserved in the running program
and can be examined in interactive sessions.

**<a name="documentation">documentation</a>**:
Human-language text written to explain what software does,
how it works,
or how to use it.

**<a name="dotted-notation">dotted notation</a>**:
A two-part notation used in many programming languages
in which `thing.component` refers to the `component` belonging to `thing`.

**<a name="empty-string">empty string</a>**:
A character string containing no characters,
often thought of as the "zero" of text.

**<a name="encapsulation">encapsulation</a>**:
The practice of hiding something's implementation details
so that the rest of a program can worry about *what* it does
rather than *how* it does it.

**<a name="exception">exception</a>**:
An event that disrupts the normal or expected execution of a program.
Most modern languages record information about what went wrong
in a piece of data (also called an exception).
See also: [catch](#catch-exception), [raise](#raise-exception).

**<a name="field-database">field</a>** (of a database):
A set of data values of a particular type,
one for each [record](#record-database) in a [table](#table-database).

**<a name="filename-extension">filename extension</a>**:
The portion of a file's name that comes after the final "." character.
By convention this identifies the file's type:
`.txt` means "text file",
`.png` means "Portable Network Graphics file",
and so on.
These conventions are not enforced by most operating systems:
it is perfectly possible to name an MP3 sound file `homepage.html`.
Since many applications use filename extensions to identify the [MIME type](#mime-type) of the file,
misnaming files may cause those applications to fail.

**<a name="filesystem">filesystem</a>**:
A set of files, directories, and I/O devices (such as keyboards and screens).
A filesystem may be spread across many physical devices,
or many filesystems may be stored on a single physical device;
the [operating system](#operating-system) manages access.

**<a name="filter">filter</a>**:
A program that transforms a stream of data.
Many Unix command-line tools are written as filters:
they read data from [standard input](#standard-input),
process it,
and write the result to [standard output](#standard-output).

**<a name="command-line-flag">flag</a>**:
A terse way to specify an option or setting to a command-line program.
By convention Unix applications use a dash followed by a single letter,
such as `-v`,
or two dashes followed by a word,
such as `--verbose`,
while DOS applications use a slash,
such as `/V`.
Depending on the application, a flag may be followed by a single argument, as in `-o /tmp/output.txt`.

**<a name="float">floating point number</a>** (float):
A number containing a fractional part and an exponent.
See also: [integer](#integer).

**<a name="for-loop">for loop</a>**:
A loop that is executed once for each value in some kind of set, list, or range.
See also: [while loop](#while-loop).

**<a name="foreign-key">foreign key</a>**:
One or more values in a [database table](#table-database)
that identify a [records](#record-database) in another table.

**<a name="repository-fork">fork</a>**:
To [clone](#repository-clone) a [version control](#version-control) [repository](#repository)
on a server.

**<a name="function-body">function body</a>**:
The statements that are executed inside a function.

**<a name="function-call">function call</a>**:
A use of a function in another piece of software.

**<a name="function-composition">function composition</a>**:
The immediate application of one function to the result of another,
such as `f(g(x))`.

**<a name="gui">graphical user interface</a>** (GUI):
A graphical user interface,
usually controlled by using a mouse.
See also: [command-line interface](#cli).

**<a name="home-directory">home directory</a>**:
The default directory associated with an account on a computer system.
By convention, all of a user's files are stored in or below her home directory.

**<a name="http">HTTP</a>**:
The Hypertext Transfer [Protocol](#protocol) used for sharing web pages and other data
on the World Wide Web.

**<a name="immutable">immutable</a>**:
Unchangeable.
The value of immutable data cannot be altered after it has been created.
See also: [mutable](#mutable).

**<a name="import">import</a>**:
To load a [library](#library) into a program.

**<a name="in-place-operator">in-place operator</a>**:
An operator such as `+=` that provides a shorthand notation for
the common case in which the variable being assigned to
is also an operand on the right hand side of the assignment.
For example,
the statement `x += 3` means the same thing as `x = x + 3`.

**<a name="index">index</a>**:
A subscript that specifies the location of a single value in a collection,
such as a single pixel in an image.

**<a name="infective-license">infective license</a>**:
A license such as the [GPL](http://opensource.org/licenses/GPL-3.0)
that compels people who incorporate material into their own work
to place similar sharing requirements on it.

**<a name="inner-loop">inner loop</a>**:
A loop that is inside another loop.
See also: [outer loop](#outer-loop).

**<a name="integer">integer</a>**:
A whole number, such as -12343.
See also: [floating-point number](#float).

**<a name="invariant">invariant</a>**:
An expression whose value doesn't change during the execution of a program,
typically used in an [assertion](#assertion).
See also: [precondition](#precondition), [postcondition](#postcondition).

**<a name="library">library</a>**:
A family of code units (functions, classes, variables) that implement a set of
related tasks.

**<a name="loop-body">loop body</a>**:
The set of statements or commands that are repeated inside a [for loop](#for-loop)
or [while loop](#while-loop).

**<a name="loop-variable">loop variable</a>**:
The variable that keeps track of the progress of the loop.

**<a name="member">member</a>**:
A variable contained within an [object](#object).

**<a name="repository-merge">merge</a>** (a repository):
To reconcile two sets of change to a [repository](#repository).

**<a name="method">method</a>**:
A function which is tied to a particular [object](#object).
Each of an object's methods typically implements one of the things it can do,
or one of the questions it can answer.

**<a name="mutable">mutable</a>**:
Changeable.
The value of mutable data can be updated in place.
See also: [immutable](#immutable).

**<a name="notional-machine">notional machine</a>**:
An abstraction of a computer used to think about what it can and will do.

**<a name="orthogonal">orthogonal</a>**:
To have meanings or behaviors that are independent of each other.
If a set of concepts or tools are orthogonal,
they can be combined in any way.

**<a name="outer-loop">outer loop</a>**:
A loop that contains another loop.
See also: [inner loop](#inner-loop).

**<a name="parameter">parameter</a>**:
A variable named in the function's declaration that is used to hold a value passed into the call.
The term is often used interchangeably (and inconsistently) with [argument](#argument).

**<a name="parent-directory">parent directory</a>**:
The directory that "contains" the one in question.
Every directory in a file system except the [root directory](#root-directory) has a parent.
A directory's parent is usually referred to using the shorthand notation `..` (pronounced "dot dot").

**<a name="pipe">pipe</a>**:
A connection from the output of one program to the input of another.
When two or more programs are connected in this way, they are called a "pipeline".

**<a name="pipe-and-filter">pipe and filter</a>**:
A model of programming in which [filters](#filter) that process [streams](#stream) of data
are connected end-to-end.
The pipe and filter model is used extensively in the Unix [shell](#shell).

**<a name="postcondition">postcondition</a>**:
A condition that a function (or other block of code) guarantees is true
once it has finished running.
Postconditions are often represented using [assertions](#assertion).

**<a name="precondition">precondition</a>**:
A condition that must be true in order for a function (or other block of code) to run correctly.

**<a name="prepared-statement">prepared statement</a>**:
A template for an [SQL](#sql) query in which some values can be filled in.

**<a name="primary-key">primary key</a>**:
One or more [fields](#field-database) in a [database table](#table-database)
whose values are guaranteed to be unique for each [record](#record-database),
i.e.,
whose values uniquely identify the entry.

**<a name="process">process</a>**:
A running instance of a program,
containing code,
variable values,
open files and network connections,
and so on.
Processes are the "actors" that the [operating system](#operating-system) manages;
it typically runs each process for a few milliseconds at a time
to give the impression that they are executing simultaneously.

**<a name="prompt">prompt</a>**:
A character or characters display by a [REPL](#repl) to show that
it is waiting for its next command.

**<a name="protocol">protocol</a>**:
A set of rules that define how one computer communicates with another.
Common protocols on the Internet include [HTTP](#http) and [SSH](#ssh).

**<a name="pull-request">pull request</a>**:
A set of changes created in one [version control](#version-control) [repository](#repository)
that is being offered to another for [merging](#repository-merge).

**<a name="query">query</a>**:
A database operation that reads values but does not modify anything.
Queries are expressed in a special-purpose language called [SQL](#sql).

**<a name="shell-quoting">quoting</a>** (in the shell):
Using quotation marks of various kinds to prevent the shell from interpreting special characters.
For example,
to pass the string `*.txt` to a program,
it is usually necessary to write it as `'*.txt'` (with single quotes)
so that the shell will not try to expand the `*` wildcard.

**<a name="raise-exception">raise</a>** (an exception):
To explicitly signal that an [exception](#exception) has occured in a program.
See also: [catch](#catch-exception).

**<a name="repl">read-eval-print loop</a>** (REPL):
A [command-line interface](#cli) that reads a command from the user,
executes it,
prints the result,
and waits for another command.

**<a name="record-database">record</a>** (in a database):
A set of related values making up a single entry in a [database table](#table-database),
typically shown as a row.
See also: [field](#field-database).

**<a name="redirect">redirect</a>**:
To send a command's output to a file rather than to the screen or another command,
or equivalently to read a command's input from a file.

**<a name="referential-integrity">referential integrity</a>**:
The internal consistency of values in a database.
If an entry in one table contains a [foreign key](#foreign-key),
but the corresponding [records](#record-database) don't exist,
referential integrity has been violated.

**<a name="regression">regression</a>**:
To re-introduce a bug that was once fixed.

**<a name="regular-expression">regular expressions</a>** (RE):
A pattern that specifies a set of character strings.
REs are most often used to find sequences of characters in strings.

**<a name="relational-database">relational database</a>**:
A collection of data organized into [tables](#table-database).

**<a name="relative-error">relative error</a>**:
The ratio of the [absolute error](#absolute-error) in an approximation of a value
to the value being approximated.

**<a name="relative-path">relative path</a>**:
A [path](#path) that specifies the location of a file or directory
with respect to the [current working directory](#current-working-directory).
Any path that does not begin with a separator character ("/" or "\\") is a relative path.
See also: [absolute path](#absolute-path).

**<a name="remote-login">remote login</a>**:
To connect to a computer over a network,
e.g., to run a [shell](#shell) on it.
See also: [SSH](#ssh).

**<a name="repository-remote">remote repository</a>**:
A version control [repository](#repository) other than the current one
that the current one is somehow connected to or mirroring.

**<a name="repository">repository</a>**:
A storage area where a [version control](#version-control) system
stores old [revisions](#revision) of files
and information about who changed what, when.

**<a name="resolve">resolve</a>**:
To eliminate the [conflicts](#conflict) between two or more incompatible changes to a file or set of files
being managed by a [version control](#version-control) system.

**<a name="return-statement">return statement</a>**:
A statement that causes a function to stop executing and return a value to its caller immediately.

**<a name="revision">revision</a>**:
A recorded state of a [version control](#version-control) [repository](#repository).

**<a name="rgb">RGB</a>** (red-green-blue):
An [additive model](#additive-color-model)
that represents colors as combinations of red, green, and blue.
Each color's value is typically in the range 0..255
(i.e., a one-byte integer).

**<a name="root-directory">root directory</a>**:
The top-most directory in a [filesystem](#filesystem).
Its name is "/" on Unix (including Linux and Mac OS X) and "\\" on Microsoft Windows.

**<a name="search-path">search path</a>**:
The list of directories in which the [shell](#shell) searches for programs when they are run.

**<a name="sentinel-value">sentinel value</a>**:
A value in a collection that has a special meaning,
such as 999 to mean "age unknown".

**<a name="shape">shape</a>** (of an array):
An array's dimensions, represented as a vector.
For example, a 5&times;3 array's shape is `(5,3)`.

**<a name="shell">shell</a>**:
A [command-line interface](#cli)
such as Bash (the Bourne-Again Shell)
or the Microsoft Windows DOS shell
that allows a user to interact with the [operating system](#operating-system).

**<a name="shell-script">shell script</a>**:
A set of [shell](#shell) commands stored in a file for re-use.
A shell script is a program executed by the shell;
the name "script" is used for historical reasons.

**<a name="sign-and-magnitude">sign and magnitude</a>**:
A scheme for representing numbers in which one bit indicates the sign (positive or negative)
and the other bits store the number's absolute value.
See also: [two's complement](#twos-complement).

**<a name="silent-failure">silent failure</a>**:
Failing without producing any warning messages.
Silent failures are hard to detect and debug.

**<a name="slice">slice</a>**:
A regular subsequence of a larger sequence,
such as the first five elements or every second element.

**<a name="sql">SQL</a>** (Structured Query Language):
A special-purpose language for describing operations on [relational databases](#relational-database).

**<a name="sql-injection-attack">SQL injection attack</a>**:
An attack on a program in which the user's input contains malicious SQL statements.
If this text is copied directly into an SQL statement,
it will be executed in the database.

**<a name="ssh">SSH</a>**:
The Secure Shell [protocol](#protocol) used for secure communication between computers.
SSH is often used for [remote login](#remote-login) between computers.

**<a name="ssh-key">SSH key</a>**:
A digital key that identifies one computer or user to another.

**<a name="stack-frame">stack frame</a>**:
A data structure that provides storage for a function's local variables.
Each time a function is called,
a new stack frame is created
and put on the top of the [call stack](#call-stack).
When the function returns,
the stack frame is discarded.

**<a name="standard-input">standard input</a>** (stdin):
A process's default input stream.
In interactive command-line applications,
it is typically connected to the keyboard;;
in a [pipe](#pipe),
it receives data from the [standard output](#standard-output) of the preceding process.

**<a name="standard-output">standard output</a>** (stdout):
A process's default output stream.
In interactive command-line applications,
data sent to standard output is displayed on the screen;
in a [pipe](#pipe),
it is passed to the [standard input](#standard-input) of the next process.

**<a name="stride">stride</a>**:
The offset between successive elements of a [slice](#slice).

**<a name="string">string</a>**:
Short for "character string",
a [sequence](#sequence) of zero or more characters.

**<a name="sub-directory">sub-directory</a>**:
A directory contained within another directory.

**<a name="tab-completion">tab completion</a>**:
A feature provided by many interactive systems in which
pressing the Tab key triggers automatic completion of the current word or command.

**<a name="table-database">table</a>** (in a database):
A set of data in a [relational database](#relational-database)
organized into a set of [records](#record-database),
each having the same named [fields](#field-database).

**<a name="test-oracle">test oracle</a>**:
A program, device, data set, or human being
against which the results of a test can be compared.

**<a name="test-driven-development">test-driven development</a>** (TDD):
The practice of writing unit tests *before* writing the code they test.

**<a name="timestamp">timestamp</a>**:
A record of when a particular event occurred.

**<a name="tuple">tuple</a>**:
An [immutable](#immutable) [sequence](#sequence) of values.

**<a name="twos-complement">two's complement</a>**:
A scheme for representing numbers which wraps around like an odometer
so that 111...111 represents -1.
See also: [sign and magnitude](#sign-and-magnitude).

**<a name="user-group">user group</a>**:
A set of users on a computer system.

**<a name="user-group-id">user group ID</a>**:
A numerical ID that specifies a [user group](#user-group).

**<a name="user-group-name">user group name</a>**:
A textual name for a [user group](#user-group).

**<a name="user-id">user ID</a>**:
A numerical ID that specifies an individual user on a computer system.
See also: [user name](#user-name).

**<a name="user-name">user name</a>**:
A textual name for a user on a computer system.
See also: [user ID](#user-id).

**<a name="variable">variable</a>**:
A name in a program that is associated with a value or a collection of values.

**<a name="version-control">version control</a>**:
A tool for managing changes to a set of files.
Each set of changes creates a new [revision](#revision) of the files;
the version control system allows users to recover old revisions reliably,
and helps manage conflicting changes made by different users.

**<a name="while-loop">while loop</a>**:
A loop that keeps executing as long as some condition is true.
See also: [for loop](#for-loop).

**<a name="wildcard">wildcard</a>**:
A character used in pattern matching.
In the Unix shell,
the wildcard "*" matches zero or more characters,
so that `*.txt` matches all files whose names end in `.txt`.

---
layout: lesson
root: ../..
---

## Automating Tasks With "doit"


<div>
<p>We're starting a project where we need to do some analysis of climate data. This analysis is going to require a number of steps, which all have to be carried out in the correct order. Our data is also updating all the time with new readings, so we don't want to have to keep track of which steps we have or have not remembered to re-run every time we update the source data.</p>
<p>In order to do this, we're going to use a python library called <a href="http://pydoit.org/">doit</a>. This lesson will cover the basics of doit, but doit has excellent <a href="http://pydoit.org/contents.html">documentation</a> for those who are interested in more advanced usage.</p>
</div>

### Objectives:


<div>
<ul>
<li>Explain the difference between a dependency and a target</li>
<li>Determine the order in which doit will execute a series of tasks</li>
<li>Explain how automatic variables can reduce repetition in doit task definitions</li>
<li>Write a simple doit task configuration file</li>
</ul>
</div>

## Basic doit files


<div>
<p>Let's start by looking at the raw data we have to work with. There are two files containing data on monthly mean temperature and monthly total sunshine hours:</p>
</div>


<div class="in">
<pre>!ls *.txt</pre>
</div>

<div class="out">
<pre>UK_Sunshine_data.txt  UK_Tmean_data.txt
</pre>
</div>


<div>
<p>Now let's peek inside the mean temperatures file using head:</p>
</div>


<div class="in">
<pre>!head UK_Tmean_data.txt</pre>
</div>

<div class="out">
<pre>UK Mean Temperature (Degrees C)
Areal series, starting from 1910
Allowances have been made for topographic, coastal and urban effects where relationships are found to exist.
Seasons: Winter=Dec-Feb, Spring=Mar-May, Summer=June-Aug, Autumn=Sept-Nov. (Winter: Year refers to Jan/Feb).
Monthly values are ranked and displayed to 1 dp and seasonal/annual values to 2 dp. Where values are equal, rankings are based in order of year descending.
Data are provisional from January 2012 &amp; Winter 2012 Last updated 01/12/2012

	JAN	Year	FEB	Year	MAR	Year	APR	Year	MAY	Year	JUN	Year	JUL	Year	AUG	Year	SEP	Year	OCT	Year	NOV	Year	DEC	Year	WIN	Year	SPR	Year	SUM	Year	AUT	Year	ANN	Year
	6.3	1916	6.8	1998	8	1938	10.7	2011	12.2	2008	15	1976	17.8	2006	17.3	1995	15.2	2006	12.2	2001	8.8	1994	6.9	1934	5.81	1989	9.15	2011	15.78	2006	11.39	2006	9.73	2006
	5.9	2007	5.9	1990	7.9	1957	10.2	2007	12	1992	14.9	1940	17.3	1983	17.1	1997	14.6	1949	11.8	1969	8.7	2011	6.6	1988	5.56	2007	9.05	2007	15.77	2003	11.26	2011	9.64	2011
</pre>
</div>


<div>
<p>The data in this file is organized in a pretty terrible way. There are seven lines at the beginning of the file which explain the structure of the data, which is helpful (although it would be even better if they started with a comment character like #).</p>
<p>Essentially, there are two columns per month. The first column contains the mean temperature for that month and the second contains the year of the measurements. Every column is ordered by increasing temperature.</p>
<p>Thankfully, an old grad student left us a python script that can massage this data into a more useful format. Let's have a look at what this does:</p>
</div>


<div class="in">
<pre>!python reformat_weather_data.py UK_Tmean_data.txt | head</pre>
</div>

<div class="out">
<pre>month,value
1910-01-01,2.6
1910-02-01,2.6
1910-03-01,4.0
1910-04-01,6.4
1910-05-01,9.5
1910-06-01,12.3
1910-07-01,14.0
1910-08-01,13.8
1910-09-01,11.8
</pre>
</div>


<div>
<p>Much better. The first task in our analysis pipeline is to run this python script on the file <code>UK_Tmean_data.txt</code> and save it as a new file, <code>UK_Tmean_data.reformatted.txt</code>. We want to use the &quot;doit&quot; library for python to automatically perform this reformatting every time the raw data is updated.</p>
<p>First make sure doit is installed:</p>
</div>


<div class="in">
<pre>!pip install doit</pre>
</div>

<div class="out">
<pre>Requirement already satisfied (use --upgrade to upgrade): doit in /usr/local/lib/python2.7/dist-packages
Requirement already satisfied (use --upgrade to upgrade): six in /usr/local/lib/python2.7/dist-packages (from doit)
Requirement already satisfied (use --upgrade to upgrade): pyinotify in /usr/lib/python2.7/dist-packages (from doit)
Cleaning up...
</pre>
</div>


<div>
<p>Normally, we make a file containing the details of all our tasks inside of a python file. If you have had some experience of make, this file is the equivalent of a makefile. If we then run the command <code>doit</code> in our terminal, doit will look for a configuration file called dodo.py in the current directory, read the tasks from the file and execute out those which are out of date. We can also use <code>doit -f &lt;name_of_task_file.py&gt;</code> to get doit to read a file which is not called dodo.py.</p>
<p>For the sake of convenience in this lesson, I'll be using some iPython magic to run doit code from the iPython notebook. In each case, the contents of the cell corresponds to what you would put in your <code>dodo.py</code> file.</p>
</div>


<div class="in">
<pre>%load_ext doitmagic</pre>
</div>


<div>
<p>Here is our first doit file, containing just one task:</p>
</div>


<div class="in">
<pre>%%doit

# one_task.py

def task_reformat_temperature_data():
    &#34;&#34;&#34;Reformats the raw temperature data file for easier analysis&#34;&#34;&#34;
    
    return {
        &#39;file_dep&#39;: [&#39;UK_Tmean_data.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Tmean_data.reformatted.txt&#39;],
        &#39;actions&#39;: [&#39;python reformat_weather_data.py UK_Tmean_data.txt &gt; UK_Tmean_data.reformatted.txt&#39;],
    }
</pre>
</div>

<div class="out">
<pre>.  reformat_temperature_data
</pre>
</div>


<div>
<p>The python function defines a single task that we want doit to carry out. All the function does is return a dictionary containing the configuration for this task. Lets look in more detail at the components of this configuration:</p>
<p>The task has one file dependency, or <code>file_dep</code> - this tells doit that the task depends on the <code>UK_Tmean_data.txt</code> file, so if that file has changed we need to re-run the task.</p>
<p>It also has one <code>target</code> - this tells doit that the task creates the <code>UK_Tmean_data.reformatted.txt</code> file. If the <code>UK_Tmean_data.reformatted.txt</code> file doesn't exist, we need to run this task to create it.</p>
<p>Finally, the task has one <code>action</code>. The <code>actions</code> part of the task definition is a list of commands to run when doit determines that the task is not up to date.</p>
<p>Now let's look at doit's output. Doit shows the name of each task on a seperate line, and since we only gave it one task we only get one line. Since we didn't explicitly give our task a name, doit guesses the name from the function name. The dot (<code>.</code>) before the task name means that doit determined that the task was actually run. We can run that cell again and see what changes.</p>
<p>Now the task name is preceded by two dashes (<code>--</code>), which means that doit found our task, but since the <code>UK_Tmean_data.reformatted.txt</code> file already exists and the <code>UK_Tmean_data.txt</code> file hasn't changed, it didn't run the task again.</p>
<p>We should check the new file to make sure that the task we wrote does what we want:</p>
</div>


<div class="in">
<pre>!head UK_Tmean_data.reformatted.txt</pre>
</div>

<div class="out">
<pre>month,value
1910-01-01,2.6
1910-02-01,2.6
1910-03-01,4.0
1910-04-01,6.4
1910-05-01,9.5
1910-06-01,12.3
1910-07-01,14.0
1910-08-01,13.8
1910-09-01,11.8
</pre>
</div>


<div>
<p>If we were only allowed one rule per file, this wouldn't be any simpler than typing commands by hand or putting them in little shell scripts. Luckily, doit allows us to put any number of rules in a single configuration file.</p>
<p>Here is another doit file called two_tasks.py with rules to reformat both <code>UK_Tmean_data.txt</code> and <code>UK_Sunshine_data.txt</code>. These rules are identical except for the &quot;Tmean&quot; or &quot;Sunshine&quot; in the filenames; we'll see later how to combine these rules into one.</p>
</div>


<div class="in">
<pre>%%doit

# two_tasks.py

def task_reformat_temperature_data():
    &#34;&#34;&#34;Reformats the raw temperature data file for easier analysis&#34;&#34;&#34;
        
    return {
        &#39;file_dep&#39;: [&#39;UK_Tmean_data.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Tmean_data.reformatted.txt&#39;],
        &#39;actions&#39;: [&#39;python reformat_weather_data.py UK_Tmean_data.txt &gt; UK_Tmean_data.reformatted.txt&#39;],
}

def task_reformat_sunshine_data():
    &#34;&#34;&#34;Reformats the raw sunshine data file for easier analysis&#34;&#34;&#34;

    return {
        &#39;file_dep&#39;: [&#39;UK_Sunshine_data.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Sunshine_data.reformatted.txt&#39;],
        &#39;actions&#39;: [&#39;python reformat_weather_data.py UK_Sunshine_data.txt &gt; UK_Sunshine_data.reformatted.txt&#39;],
    }</pre>
</div>

<div class="out">
<pre>-- reformat_temperature_data
.  reformat_sunshine_data
</pre>
</div>


<div>
<p>Now we see that doit found both of our tasks. It determined that it didn't need to run the task that reformats the temperature data, but it did run our new task that reformats the sunshine data.</p>
<p>If we run the cell again, we should see that now doit decides it doesn't need to run either task.</p>
<p>One thing to note is that if there is no dependency to satisfy between the tasks then doit executes them in the order they are defined. It could also execute them in parallel if it had more than one processor to use - we'll return to this idea later.</p>
<p>Something else this example shows us is that a single thing can be a target in one rule, and a prerequisite in others. The dependencies between the files mentioned in the dodo.py make up a directed graph. In order for doit to run, this graph must not contain any cycles. For example, if X depends on Y, Y depends on Z, and Z depends on X, everything depends on something else, so there is nothing doit can execute first. If it detects a cycle in between tasks, doit will print an error message and stop.</p>
<p>As we noted earlier, there is a lot of redundancy in this file. Firstly, the file names are repeated in the task definition and the task's action. Luckily, doit gives us access to some variables when we are writing our tasks actions.</p>
<p>Doit uses python's <code>%</code> formatter to substitute a task's dependencies and targets in the string which defines the action. It works like this:</p>
</div>


<div class="in">
<pre>%%doit

# automatic_variables.py

def task_reformat_temperature_data():
    &#34;&#34;&#34;Reformats the raw temperature data file for easier analysis&#34;&#34;&#34;
    
    return {
        &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
        &#39;file_dep&#39;: [&#39;UK_Tmean_data.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Tmean_data.reformatted.txt&#39;],
    }

def task_reformat_sunshine_data():
    &#34;&#34;&#34;Reformats the raw sunshine data file for easier analysis&#34;&#34;&#34;
    
    return {
        &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
        &#39;file_dep&#39;: [&#39;UK_Sunshine_data.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Sunshine_data.reformatted.txt&#39;],
    }</pre>
</div>

<div class="out">
<pre>-- reformat_temperature_data
-- reformat_sunshine_data
</pre>
</div>


<div>
<p>This is better, but now the action is identical between the two tasks. Only the dependency and the target are different.</p>
<p>We'll remove the rest of the redundancy in the next section.</p>
</div>

### Challenges:


<div>
<ol style="list-style-type: decimal">
<li>Write a task that uses the unix &quot;echo&quot; command to create a new file called hello.txt, containing the text &quot;Hello world!&quot;</li>
<li>Given the following task configuration file, in what order would doit execute the tasks:</li>
</ol>
</div>


<div class="in">
<pre>def task_giraffe():
    
    return {
            &#39;targets&#39; : [&#39;giraffe.txt&#39;],
            &#39;actions&#39; : [&#39;touch %(targets)s&#39;]
           }

def task_zebra():
    
    return {
            &#39;targets&#39; : [&#39;zebra.txt&#39;],
            &#39;file_dep&#39;: [&#39;lion.txt&#39;],
            &#39;actions&#39; : [&#39;touch %(targets)s&#39;]
           }

def task_lion():
    
    return {
            &#39;targets&#39; : [&#39;lion.txt&#39;],
            &#39;actions&#39; : [&#39;touch %(targets)s&#39;]
           }</pre>
</div>

---
layout: lesson
root: ../..
---

## Using sub-tasks to define a group of similar tasks

## Objectives:


<div>
<ul>
<li>Explain how to create a group of sub-tasks</li>
<li>Explain what extra configuration a sub-task definition requires</li>
<li>Adapt an existing task to turn it into a sub-task generator</li>
</ul>
</div>


<div>
<p>Lets have another look at the doit file we had created at the end of the last lesson:</p>
</div>


<div class="in">
<pre>%load_ext doitmagic</pre>
</div>


<div class="in">
<pre>%%doit

# automatic_variables.py

def task_reformat_temperature_data():
    &#34;&#34;&#34;Reformats the raw temperature data file for easier analysis&#34;&#34;&#34;
    
    return {
        &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
        &#39;file_dep&#39;: [&#39;UK_Tmean_data.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Tmean_data.reformatted.txt&#39;],
    }

def task_reformat_sunshine_data():
    &#34;&#34;&#34;Reformats the raw sunshine data file for easier analysis&#34;&#34;&#34;
    
    return {
        &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
        &#39;file_dep&#39;: [&#39;UK_Sunshine_data.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Sunshine_data.reformatted.txt&#39;],
    }</pre>
</div>

<div class="out">
<pre>-- reformat_temperature_data
-- reformat_sunshine_data
</pre>
</div>


<div>
<p>We noticed that our two tasks share the same action, and only have different dependencies and targets.</p>
<p>When we want to run a large number of very similar tasks, we can make use of a doit feature called 'sub-tasks':</p>
</div>


<div class="in">
<pre>%%doit

# sub_tasks.py

data_sets = [&#39;Tmean&#39;, &#39;Sunshine&#39;]

def task_reformat_data():
    &#34;&#34;&#34;Reformats all raw files for easier analysis&#34;&#34;&#34;

    for data_type in data_sets:
        yield {
            &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
            &#39;file_dep&#39;: [&#39;UK_{}_data.txt&#39;.format(data_type)],
            &#39;targets&#39;: [&#39;UK_{}_data.reformatted.txt&#39;.format(data_type)],
            &#39;name&#39;: &#39;UK_{}_data.txt&#39;.format(data_type),
        }
    </pre>
</div>

<div class="out">
<pre>-- reformat_data:UK_Sunshine_data.txt
.  reformat_data:UK_Tmean_data.txt
</pre>
</div>


<div>
<p>In this example, the function defining the task doesn't return a single task. Instead it returns a python generator object, which then returns a number of sub-tasks. Has anyone heard of generators in python?</p>
<p>If not, here is a small demonstration:</p>
</div>


<div class="in">
<pre>def not_a_generator():
    for i in range(5):
        return i
    
not_a_generator()</pre>
</div>

<div class="out">
<pre>0</pre>
</div>


<div class="in">
<pre>def is_a_generator():
    for i in range(5):
        yield i
        
is_a_generator()</pre>
</div>

<div class="out">
<pre>&lt;generator object is_a_generator at 0x3052780&gt;</pre>
</div>


<div class="in">
<pre>def is_a_generator():
    for i in range(5):
        yield i
        
g = is_a_generator()

for x in g:
    print x</pre>
</div>

<div class="out">
<pre>0
1
2
3
4
</pre>
</div>


<div>
<p>I'm not going to go into lots of detail about generators in this lesson, but the essential thing to remember is that a function uses <code>return</code> to return a single output, whilst a generator uses <code>yield</code> to return a sequence of outputs in order. When doit finds a generator that yields task dictionaries, it creates a series of sub-tasks.</p>
<p>Take a look at the output of our file again. All the tasks generated by our new generator start with the same name: <code>reformat_data</code>, which is taken from the name of the generator. After this part, which is called the <code>basename</code>, comes a colon followed by the sub-task name. Notice that we explicitly gave each sub-task a name by setting the <code>name</code> key in the task dictionary.</p>
<p>What would happen if we didn't set sub-task names?</p>
</div>


<div class="in">
<pre>%%doit

# sub_tasks_no_name.py

data_sets = [&#39;Tmean&#39;, &#39;Sunshine&#39;]

def task_reformat_data():
    &#34;&#34;&#34;Reformats all raw files for easier analysis&#34;&#34;&#34;

    for data_type in data_sets:
        yield {
            &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
            &#39;file_dep&#39;: [&#39;UK_{}_data.txt&#39;.format(data_type)],
            &#39;targets&#39;: [&#39;UK_{}_data.reformatted.txt&#39;.format(data_type)],
        }
    </pre>
</div>

<div class="out">
<pre>ERROR: Task &#39;reformat_data&#39; must contain field &#39;name&#39; or &#39;basename&#39;. {&#39;file_dep&#39;: [&#39;UK_Tmean_data.txt&#39;], &#39;targets&#39;: [&#39;UK_Tmean_data.reformatted.txt&#39;], &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;]}
</pre>
</div>


<div>
<p>Doit tells us that the task must define a name. This is because tasks can depend directly on other tasks, so each task must have a unique name by which it can be referenced as a dependency.</p>
<p>Now look at the reformatted data:</p>
</div>


<div class="in">
<pre>!tail UK_Tmean_data.reformatted.txt</pre>
</div>

<div class="out">
<pre>2012-03-01,6.4
2012-04-01,8.3
2012-05-01,11.3
2012-06-01,13.7
2012-07-01,15.7
2012-08-01,15.7
2012-09-01,13.3
2012-10-01,10.5
2012-11-01,7.0
2012-12-01,5.3
</pre>
</div>


<div>
<p>The last data point in the file is from December 2012, so we probably ought to re-download our raw data. This is a task we will probably end up doing rather a lot, so we should let doit take care of it:</p>
</div>


<div class="in">
<pre>%%doit

# download_temp_data.py

import datetime
from doit.tools import timeout 

data_sets = [&#39;Tmean&#39;, &#39;Sunshine&#39;]

def task_get_temp_data():
    &#34;&#34;&#34;Downloads the raw temperature data from the Met Office&#34;&#34;&#34;

    return {
        &#39;actions&#39;: [&#39;wget -O %(targets)s http://www.metoffice.gov.uk/climate/uk/datasets/Tmean/ranked/UK.txt&#39;],
        &#39;targets&#39;: [&#39;UK_Tmean_data.txt&#39;],
    }

def task_reformat_data():
    &#34;&#34;&#34;Reformats all raw files for easier analysis&#34;&#34;&#34;

    for data_type in data_sets:
        yield {
            &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
            &#39;file_dep&#39;: [&#39;UK_{}_data.txt&#39;.format(data_type)],
            &#39;targets&#39;: [&#39;UK_{}_data.reformatted.txt&#39;.format(data_type)],
            &#39;name&#39;: &#39;UK_{}_data.txt&#39;.format(data_type),
        }</pre>
</div>

<div class="out">
<pre>.  get_temp_data
-- reformat_data:UK_Sunshine_data.txt
.  reformat_data:UK_Tmean_data.txt
--2014-04-05 12:08:16--  http://www.metoffice.gov.uk/climate/uk/datasets/Tmean/ranked/UK.txt
Resolving www.metoffice.gov.uk (www.metoffice.gov.uk)... 23.63.99.234, 23.63.99.216
Connecting to www.metoffice.gov.uk (www.metoffice.gov.uk)|23.63.99.234|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 25576 (25K) [text/plain]
Saving to: ‘UK_Tmean_data.txt’

     0K .......... .......... ....                            100% 2.15M=0.01s

2014-04-05 12:08:16 (2.15 MB/s) - ‘UK_Tmean_data.txt’ saved [25576/25576]

</pre>
</div>


<div>
<p>We've added a new task that downloads the latest version of the temperature data from the UK Met Office website, so doit followed our instructions and downloaded the file. It then went on to our reformat_data task. Since the sunshine hours data hasn't changed, it isn't reformatted. However, there is now a new version of the mean temperature file, so doit automatically recreated the <code>UK_Tmean_data.reformatted.txt</code> file:</p>
</div>


<div class="in">
<pre>!tail UK_Tmean_data.reformatted.txt</pre>
</div>

<div class="out">
<pre>2013-03-01,5.1
2013-04-01,7.0
2013-05-01,10.0
2013-06-01,12.8
2013-07-01,14.5
2013-08-01,14.4
2013-09-01,12.4
2013-10-01,9.2
2013-11-01,5.7
2013-12-01,3.9
</pre>
</div>


<div>
<p>Which now contains all the data from 2013.</p>
</div>

### Challenge:


<div>
<p>Edit the download_temp_data.py file and make use of sub-tasks to download both the temperature and the sunlight data.</p>
</div>


<div class="in">
<pre></pre>
</div>

---
layout: lesson
root: ../..
---

## Determining if doit needs to run a task

### Objectives:


<div>
<ul>
<li>Explain how doit decides if a task is up to date when that task depends on another file</li>
<li>Explain how this is decided if a task does not have any dependencies</li>
<li>Explain how we configure a task to change the way doit will decide if it is up to date</li>
<li>Explain how doit decides which functions are tasks, and which are not</li>
</ul>
</div>


<div>
<p>Here is one version of the script, which now downloads both the raw data files. The download_data task was a bit long, so I refactored the part which calculates all the correct file names into a new python function.</p>
</div>


<div class="in">
<pre>%load_ext doitmagic</pre>
</div>


<div class="in">
<pre>%%doit

# download_all_data.py

data_sets = [&#39;Tmean&#39;, &#39;Sunshine&#39;]

def get_data_file_parameters(data_type):
    &#34;&#34;&#34;Takes a string describing the type of climate data, returns url and file name for that data&#34;&#34;&#34;
    
    base_url = &#39;http://www.metoffice.gov.uk/climate/uk/datasets/{0}/ranked/UK.txt&#39;
    data_url = base_url.format(data_type)
    data_target = &#39;UK_{0}_data.txt&#39;.format(data_type)
    return data_url, data_target

def task_download_data():
    &#34;&#34;&#34;Downloads all raw data files from the Met Office website&#34;&#34;&#34;

    for data_type in data_sets:
        data_url, data_target = get_data_file_parameters(data_type)
        yield {
            &#39;actions&#39;: [&#39;wget -O %(targets)s {0}&#39;.format(data_url)],
            &#39;targets&#39;: [ data_target ],
            &#39;name&#39; : data_type,
        }

def task_reformat_data():
    &#34;&#34;&#34;Reformats all raw files for easier analysis&#34;&#34;&#34;

    for data_type in data_sets:
        yield {
            &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
            &#39;file_dep&#39;: [&#39;UK_{}_data.txt&#39;.format(data_type)],
            &#39;targets&#39;: [&#39;UK_{}_data.reformatted.txt&#39;.format(data_type)],
            &#39;name&#39;: &#39;UK_{}_data.txt&#39;.format(data_type),
        }</pre>
</div>

<div class="out">
<pre>.  download_data:Tmean
.  download_data:Sunshine
-- reformat_data:UK_Sunshine_data.txt
-- reformat_data:UK_Tmean_data.txt
--2014-04-05 12:08:57--  http://www.metoffice.gov.uk/climate/uk/datasets/Tmean/ranked/UK.txt
Resolving www.metoffice.gov.uk (www.metoffice.gov.uk)... 23.63.99.234, 23.63.99.216
Connecting to www.metoffice.gov.uk (www.metoffice.gov.uk)|23.63.99.234|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 25576 (25K) [text/plain]
Saving to: ‘UK_Tmean_data.txt’

     0K .......... .......... ....                            100% 1.51M=0.02s

2014-04-05 12:08:57 (1.51 MB/s) - ‘UK_Tmean_data.txt’ saved [25576/25576]

--2014-04-05 12:08:57--  http://www.metoffice.gov.uk/climate/uk/datasets/Sunshine/ranked/UK.txt
Resolving www.metoffice.gov.uk (www.metoffice.gov.uk)... 23.63.99.216, 23.63.99.234
Connecting to www.metoffice.gov.uk (www.metoffice.gov.uk)|23.63.99.216|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 20986 (20K) [text/plain]
Saving to: ‘UK_Sunshine_data.txt’

     0K .......... ..........                                 100% 6.48M=0.003s

2014-04-05 12:08:57 (6.48 MB/s) - ‘UK_Sunshine_data.txt’ saved [20986/20986]

</pre>
</div>


<div>
<p>There are two things to notice here. Firstly, my new python function <code>get_data_file_parameters</code> doesn't start with <code>task_</code>, so doit doesn't try to run it as a task.</p>
<p>Secondly, no matter how many times we run this script, doit always re-downloads the data files. Since they don't depend on anything, doit doesn't know how to check that they are up to date. This is why it always re-downloads them.</p>
<p>If we were trying to do all these tasks ourselves, we would probably want to update our monthly temperature data every month. Doit lets us define another parameter in our task configuration dictionary, called <code>uptodate</code>. This should define a python function which will tell doit whether our task needs to be re-run.</p>
<p>This is one of the big advantages of doit: any python you can write is valid. In fact, even using task generators to create sub-tasks is just a convention. Any python script you can write to make your task configuration dictionaries can be made to work with doit.</p>
<p>Back to our problem about keeping our raw data files fresh. You could write your own function that checks how old the raw data files are, but thankfully doit comes with a utility function for doing just this. Lets set our data files to expire after four weeks:</p>
</div>


<div class="in">
<pre>%%doit

# monthly_raw_data_update.py

import datetime
from doit.tools import timeout 

data_sets = [&#39;Tmean&#39;, &#39;Sunshine&#39;]

def get_data_file_parameters(data_type):
    &#34;&#34;&#34;Takes a string describing the type of climate data, returns url and file name for that data&#34;&#34;&#34;

    base_url = &#39;http://www.metoffice.gov.uk/climate/uk/datasets/{0}/ranked/UK.txt&#39;
    data_url = base_url.format(data_type)
    data_target = &#39;UK_{0}_data.txt&#39;.format(data_type)
    return data_url, data_target

def task_download_data():
    &#34;&#34;&#34;Downloads all raw data files from the Met Office website&#34;&#34;&#34;

    for data_type in data_sets:
        data_url, data_target = get_data_file_parameters(data_type)
        yield {
            &#39;actions&#39;: [&#39;wget -O %(targets)s {0}&#39;.format(data_url)],
            &#39;targets&#39;: [ data_target ],
            &#39;name&#39; : data_type,
            &#39;uptodate&#39;: [timeout(datetime.timedelta(weeks=4))],

        }

def task_reformat_data():
    &#34;&#34;&#34;Reformats all raw files for easier analysis&#34;&#34;&#34;

    for data_type in data_sets:
        yield {
            &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
            &#39;file_dep&#39;: [&#39;UK_{}_data.txt&#39;.format(data_type)],
            &#39;targets&#39;: [&#39;UK_{}_data.reformatted.txt&#39;.format(data_type)],
            &#39;name&#39;: &#39;UK_{}_data.txt&#39;.format(data_type),
        }</pre>
</div>

<div class="out">
<pre>.  download_data:Tmean
.  download_data:Sunshine
-- reformat_data:UK_Sunshine_data.txt
-- reformat_data:UK_Tmean_data.txt
--2014-04-05 12:08:57--  http://www.metoffice.gov.uk/climate/uk/datasets/Tmean/ranked/UK.txt
Resolving www.metoffice.gov.uk (www.metoffice.gov.uk)... 23.63.99.234, 23.63.99.216
Connecting to www.metoffice.gov.uk (www.metoffice.gov.uk)|23.63.99.234|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 25576 (25K) [text/plain]
Saving to: ‘UK_Tmean_data.txt’

     0K .......... .......... ....                            100% 1.87M=0.01s

2014-04-05 12:08:57 (1.87 MB/s) - ‘UK_Tmean_data.txt’ saved [25576/25576]

--2014-04-05 12:08:57--  http://www.metoffice.gov.uk/climate/uk/datasets/Sunshine/ranked/UK.txt
Resolving www.metoffice.gov.uk (www.metoffice.gov.uk)... 23.63.99.216, 23.63.99.234
Connecting to www.metoffice.gov.uk (www.metoffice.gov.uk)|23.63.99.216|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 20986 (20K) [text/plain]
Saving to: ‘UK_Sunshine_data.txt’

     0K .......... ..........                                 100% 6.86M=0.003s

2014-04-05 12:08:57 (6.86 MB/s) - ‘UK_Sunshine_data.txt’ saved [20986/20986]

</pre>
</div>


<div>
<p>When we run this new script for the second time, doit knows that the raw data files are less than four weeks old, so it doesn't download them again.</p>
<p>The big advantage of defining all our tasks in this way, is that it becomes much easier to add a new dataset. Lets download some rainfall data by adding <code>Rainfall</code> to our list of datasets:</p>
</div>


<div class="in">
<pre>%%doit

# rainfall_data.py

import datetime
from doit.tools import timeout 

data_sets = [&#39;Tmean&#39;, &#39;Sunshine&#39;, &#39;Rainfall&#39;]

def get_data_file_parameters(data_type):
    &#34;&#34;&#34;Takes a string describing the type of climate data, returns url and file name for that data&#34;&#34;&#34;

    base_url = &#39;http://www.metoffice.gov.uk/climate/uk/datasets/{0}/ranked/UK.txt&#39;
    data_url = base_url.format(data_type)
    data_target = &#39;UK_{0}_data.txt&#39;.format(data_type)
    return data_url, data_target

def task_download_data():
    &#34;&#34;&#34;Downloads all raw data files from the Met Office website&#34;&#34;&#34;

    for data_type in data_sets:
        data_url, data_target = get_data_file_parameters(data_type)
        yield {
            &#39;actions&#39;: [&#39;wget -O %(targets)s {0}&#39;.format(data_url)],
            &#39;targets&#39;: [ data_target ],
            &#39;name&#39; : data_type,
            &#39;uptodate&#39;: [timeout(datetime.timedelta(weeks=4))],

        }

def task_reformat_data():
    &#34;&#34;&#34;Reformats all raw files for easier analysis&#34;&#34;&#34;

    for data_type in data_sets:
        yield {
            &#39;actions&#39;: [&#39;python reformat_weather_data.py %(dependencies)s &gt; %(targets)s&#39;],
            &#39;file_dep&#39;: [&#39;UK_{}_data.txt&#39;.format(data_type)],
            &#39;targets&#39;: [&#39;UK_{}_data.reformatted.txt&#39;.format(data_type)],
            &#39;name&#39;: &#39;UK_{}_data.txt&#39;.format(data_type),
        }</pre>
</div>

<div class="out">
<pre>.  download_data:Rainfall
-- download_data:Tmean
-- download_data:Sunshine
.  reformat_data:UK_Rainfall_data.txt
-- reformat_data:UK_Sunshine_data.txt
-- reformat_data:UK_Tmean_data.txt
--2014-04-05 12:08:58--  http://www.metoffice.gov.uk/climate/uk/datasets/Rainfall/ranked/UK.txt
Resolving www.metoffice.gov.uk (www.metoffice.gov.uk)... 23.63.99.234, 23.63.99.216
Connecting to www.metoffice.gov.uk (www.metoffice.gov.uk)|23.63.99.234|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 25518 (25K) [text/plain]
Saving to: ‘UK_Rainfall_data.txt’

     0K .......... .......... ....                            100% 1.68M=0.01s

2014-04-05 12:08:58 (1.68 MB/s) - ‘UK_Rainfall_data.txt’ saved [25518/25518]

</pre>
</div>


<div>
<p>Now we have some shiny new rainfall data, properly formatted for further analysis:</p>
</div>


<div class="in">
<pre>!head UK_Rainfall_data.reformatted.txt</pre>
</div>

<div class="out">
<pre>month,value
1910-01-01,111.4
1910-02-01,79.5
1910-03-01,75.5
1910-04-01,69.1
1910-05-01,66.4
1910-06-01,65.3
1910-07-01,81.6
1910-08-01,90.3
1910-09-01,92.0
</pre>
</div>

### Challenges:


<div>
<ul>
<li>Edit the rainfall_data.py file so that doit downloads the raw data files if they are older than 20 seconds</li>
<li>What will happen if we move the 'uptodate' configuration line from the download_data task to the reformat_data task?</li>
<li>Try it out and see if you were right!</li>
</ul>
</div>

---
layout: lesson
root: ../..
title: Automating an analysis pipeline using doit
level: intermediate
---

This lesson series covers the automation of analysis pipeline's using
python's doit library. You should be familiar with functions, libraries
and dictionaries in python. Additionally, knowledge of python generators
would be very helpful.

Complex data analysis often involves a series of steps that all have 
to be carried out in a specific order, and may also require the
creation of a number of intermediate files. These types of pipelines
are well suited to automation using a class of software tools called
"build tools". Although this lesson covers one specific tool, many
of the key concepts should apply to other build tools. If you aren't 
a big python fan, there will almost certainly be tools available in
the language of your choice.

The most popular build tool is Make. For a specific comparison between
Make and doit, see [Make vs. doit](make-vs-doit.html).

<div class="toc" markdown="1">

1.  [Getting started with doit](01-doit_basics.html)
2.  [Sub-tasks](02-sub_tasks.html)
3.  [Checking whether analyses are up to date](03-uptodate.html)

</div>

---
layout: lesson
root: ../..
title: A comparison of Make and doit
level: intermediate
---

## Why learn doit and not Make?

Software Carpentry has lessons covering two different build
tools: Make and doit. Which should you choose when starting
to automate your data analysis pipelines? This page is intended
to give a brief overview of the benefits and drawbacks of each
tool.

### 1. Popularity

Make is by far the most popular build tool currently in use. This
is probably it's greatest advantage. Learning how to write 
Makefiles will help you to reuse some pipelines written by other
people. It will also be a big help if and when you need to
install software from source code in a compiled language. If you
have ever installed something by typing some combination of
`./configure; make; make install` then you have already been
using Makefiles without knowing. Doit, on the other hand,
has a much smaller user base. If you learn doit, you may have
more difficulty finding examples, and less people will be able
to help you on forums or sites like Stack Overflow.

### 2. Availability

Make is available by default on most unix machines (i.e. linux 
and mac). Doit, on the other hand, is highly unlikely to be
pre-installed on any machine you might use. Doit is fairly
easy to install if you have root privileges, but suffers from 
all the problems of python packaging if you do not. On the other
hand, if you are a windows user, neither doit nor Make will
be available by default and doit may well be considerably easier
to install.

### 3. Readability

Doit is much more verbose and readable than Make. Make has a lot
of non-obvious automatic variables such as $^ and $@, whereas
automatic variables in doit are probably clearer, the equivalents
being %(dependencies)s and %(targets)s. Any if/then control flow
or parameters that you may wish to add are also likely to be
much more readable in doit/python than in make - especially if
the person reading does not know either language.

### 4. Self-Documentation

Doit implements a `list` command, which will list all the
available targets on the command line. If you write docstrings
for your tasks, doit will also expose these as help pages for
each target. By default, neither Make nor doit does a good job
of listing possible parameters. However, with a little work
doit can be combined with other python libraries such as
argparse, which allows for a much more usable and self-
documenting user interface

### 5. Dry Runs

Make can be run in "dry run" mode, where it won't actually do
anything, but will instead simply print out the commands
that would be executed. Doit does not have an equivalent of
this command.

### 6. Python

If you already know python, learning doit ought to be much
quicker than learning Make. Additionally, if you work mainly
in python, automating your pipelines with doit would reduce
the cognitive overload associated with switching between
programming languages.

### 7. Debugging

Doit can make use of any of the available python debuggers.
You can also run doit with the --pdb option to automatically
drop into a pdb shell when any errors occur. There are 
debuggers available for Make, but they are not especially 
easy to use.

### 8. Extensibility

Doit is very lightweight, and very extensible. You can easily
add your own commands, your own ways of determining whether
tasks should be re-run, your own ways to report the results
of a pipeline run, and much more.

### 9. The doit Database

Make decides whether a file has changed if the timestamp
on a dependency is newer than the timestamp on a target.
Doit decides a file has changed if it detects a change
in the files MD5 hash (i.e. only if the actual contents
of the file changes). This eliminates un-needed re-
calculation of some target files. On the other hand, in
order to do this doit needs to store file MD5 hashes in
a database file. If you accidentally delete this file,
or if you run doit in such a way that it can no longer
find the database file, it will be unable to tell which files 
have changed, and will default to re-running all of your 
tasks.


---
layout: lesson
root: ../..
title: Automating an analysis pipeline using doit
level: intermediate
---

The aim of this lesson series is to replicate the material covered by the current 'make' lessons, but showing how to accomplish similar things with the doit library for python.

There are currently three lessons of approximately 10 minutes each. Each lesson has a set of challenges that should take around 5 minutes in total.

The lessons assume that learners have all of the python knowledge covered in our novice lessons, plus additional knowledge of python dictionaries. Knowledge of python generators would also be very beneficial - there is some coverage of generators in these lessons but it might need to be expanded depending on the audience.

---

# Resources

* `doit_examples/*.py`: successive versions of the doit file built up during the lessons.
* `reformat_weather_data.py`: python script forming part of the analysis pipeline to be automated
* `sync_doit_examples.py`: python script for creating the files in doit_examples/ from the notebooks
* `UK_*_data.txt`: data files used in the lesson
* `clean_directory.sh`: Utility script used to reset the lesson directory to it's original state

---
layout: lesson
root: ../..
title: Introducing Distributed Version Control, and Introducing Yourself to Git
level: intermediate
---

## Introducing Distributed Version Control

Barbara Biologist and Candace Cosmologist have been hired by Universal Missions
(a space services spinoff from Euphoric State University)
to figure out where the company should send its next planetary lander.
Since their coupled biocosmology simulation software is still being developed,
they need to coordinate the changes between
Barbara's biology code and Candace's new cosmology simulations.
Barbara and Candace are developing more than just a report;
their reproducible analysis will include data, code, figures, and text.
New online writing collaboration tools
such as writeLaTeX, Google Docs, and Microsoft SkyDrive
can support their distributed authoring process,
but so far they've relied on email and Dropbox
to coordinate the rest of their development.

Although they want to be able to work on the report at the same time,
they have run into problems doing this in the past.
If they take turns,
each one will spend a lot of time waiting for the other to finish,
but if they work on their own copies and email changes back and forth,
things will be lost, overwritten, or duplicated.
Barbara and Candace also worry
this process of communicating changes
to code, data, figures, and text
won't scale as they add more scientists to their team.
A final concern,
is that the text and graphics in their report,
might fall out of sync with the code that generated them,
and that they might accidentally publish a chart
their code can't reproduce
and that they can no longer explain.

Barbara and Candace decide to use distributed version control
to manage their workflow.
Distributed version control is better than mailing files back and forth or cloud-based syncing services because:

*   Nothing that is committed to version control is ever lost.
    This means it can be used like the "undo" feature in an editor,
    and since all old versions of files are saved
    it's always possible to go back in time to see exactly who wrote what on a particular day,
    or what version of a program was used to generate a particular set of results.
*   It keeps a record of who made what changes when,
    so that if people have questions later on,
    they know who to ask.
*   It's hard (but not impossible) to accidentally overlook or overwrite someone's changes,
    because the version control system highlights them automatically.
*   Authors can checkpoint their work, even when they're not connected to the Internet.
    This means that Barbara can experimentally try out new predator-prey models
    without worrying about changing the main simulation,
    and that Candace can checkpoint her work on the report at any time,
    even when her cable provider's Internet connection
    mysteriously fails in the middle of the day.

This lesson shows how to use
a popular open source distributed version control system called Git.
It is more complex than some alternatives,
but it is widely used,
and is further augmented by a free hosting sites such as
[BitBucket](http://bitbucket.org) and [GitHub](http://github.com).
No matter which distributed version control system you use,
the most important thing to learn is not the details of their more obscure commands,
but the fundamentals of how they work,
and the workflow that they encourage.

## Introducing Yourself to Git

The first time you use Git on a new machine,
you need to run commands to configure a few things.

First, you need to tell Git
your preferred name and email address.
We usually prefer a permanent email address
so that our authorship
is still asserted in the future.

~~~
$ git config --global user.name "Barbara Biologist"
$ git config --global user.email "barbara@biologist.net"
~~~

Why does Git need your name and email?
It turns out that email addresses
are an excellent unique identifier and communication mechanism
for distributed teams.
Every change you make in the version control repository
is automatically labeled with your name and email address.
This helps others to keep track of your work,
when you choose to share it with them.

Next, you need to tell Git
that you are using a modern terminal
and prefer colored output.
(UI stands for user interface).

~~~
$ git config --global color.ui "auto"
~~~

In newer versions of Git,
this option has already been set for you.

Finally, Git wants to know how you like to edit files.
For now, we'll use `nano`,
but feel free to change this
if you prefer a different editor.

$ git config --global core.editor "nano"

Git commands are written `git verb`,
where `verb` is a command you want Git to do.
Using the `config` command, you have told Git:

*   your name and email address,
*   to colorize output,
*   what your favorite text editor is, and
*   that you want to use these settings globally (i.e., for every project),

The four commands above only need to be run once:
Git will remember the settings until you change them.
Once Git is configured,
you can start using Git.

---
layout: lesson
root: ../..
title: Conversational Git
level: intermediate
---

When you travel to a country
where you don't speak the native language,
frequently there is no time,
to properly learn it.
If you are to accomplish anything on your own,
you need to know
a few essential words and phrases.
The same is true for Git.
This lesson won't teach you to become a Git expert.
Instead, we want you to be able to
understand some of the vocabulary,
and communicate:
your desires to Git,
and your actions to others.
Along the way,
we'll introduce a few Git concepts (nouns),
commands (verbs), and command line arguments (adverbs).
In most cases,
the English meaning of the word
will help you recall its meaning to Git.
Please keep in mind, though,
that Git uses some of its verbs and nouns
very differently from other revision control systems.

## Objectives

After this lesson, students should be able to:

* Participate in collaborative development by copying Git repositories
  using the `git clone` command.
* View historical changes in their Git repositories using `git log`.
* Navigate the history of their Git repositories using `git reflog` and
  `git checkout`.
* Restore saved versions of files using `git checkout`.

## Copying Repositories (git clone)

The first concept we introduce
is the [repository](../../gloss.html#repository).
The repository contains a directory of files and folders
and their revisions going back to its creation.

We will start with a small repository
with only a few commits
that has been created for you to practice with.

We will copy the `bio-pipeline` repository from GitHub user `ahmadia`
using our second Git command, the *clone* command.

When we execute `git clone`,
the command makes a perfect copy of another repository.
By default, it creates a Git repository of the same name
in the same directory you entered the command.
The command (and its successful output)
should look similar to this:

~~~
$ git clone https://github.com/ahmadia/bio-pipeline.git
Cloning into 'bio-pipeline'...
remote: Counting objects: 41, done.
remote: Compressing objects: 100% (36/36), done.
remote: Total 41 (delta 19), reused 23 (delta 4)
Unpacking objects: 100% (41/41), done.
Checking connectivity... done
~~~
You can now enter the repository
(which is also a directory on your file system)
by typing:

~~~
$ cd bio-pipeline
~~~

If we now type `ls`,
we see that the repository
has some code
and a few data files.

~~~
$ ls
2013-05-24-2760-2763.txt Lumi.2761.csv            Lumi.2763.csv
Lumi.2760.csv            Lumi.2762.csv            python_pipeline.ipy
~~~

If we add the `-a` flag to show everything,
we can see that Git has created a hidden directory called `.git`:

~~~
$ ls -a
.                        2013-05-24-2760-2763.txt Lumi.2762.csv
..                       Lumi.2760.csv            Lumi.2763.csv
.git                     Lumi.2761.csv            python_pipeline.ipy
~~~

Git stores information about the project
in this special sub-directory.
If we ever delete it,
we will lose our local copy of the project's history,
and any changes or commits
we had not published yet.

## Viewing History (git log)

We are looking
at the latest *revision*,
also referred to in the Git documentation as a *commit*,
of the `bio-pipeline` repository.
If we want to see the name of this revision,
we use the `log` command.
By default, when we execute `git log`, it gives us
information about this revision
and every other revision
made before it.
We use the the command-line argument, `--max count 1`,
to inform Git that we only want to see the current one.

~~~
$ git log --max-count 1
commit 61fd2bcece2126cdd8ee24f40a04c18d39403022
Author: Aron Ahmadia <aron@ahmadia.net>
Date:   Tue Jun 4 10:59:21 2013 -0400

	Made fixes to Python pipeline
~~~

Our fingers are starting to get sore from all of this typing.
Luckily, `-n` is a common shortcut for *number of things*
in programming and at the command line.
To save a few keystrokes, we will instead type:

~~~
$ git log -n 1
~~~

which is equivalent to the previous command.

The output of the command
provides a summary of the revision
Aron Ahmadia committed to the repository on June 4, 2013.
The line: `Made fixes to Python pipeline`
is Aron's *commit message*.

The alphabet soup of digits and letters
starting with `61fd2` is called a *hash*.
The hash uniquely identifies this revision,
and was automatically generated by Git
as the final step of the commit process.
We can think of the hash as an identifier
permanently affixed to this exact version
of the code and data.

### Revision Ancestry

Each revision's *parent* is the previous version of the code and data,
and immediately precedes it in history.
We can see each revision's parents
as output from `git log`
by adding the `--parents` flag.

~~~
$❯ git log --parents -n 1
commit 61fd2bcece2126cdd8ee24f40a04c18d39403022 8595b710e3be4b2bf01d51a1c55842510b82ff87
Author: Aron Ahmadia <aron@ahmadia.net>
Date:   Tue Jun 4 10:59:21 2013 -0400

	Made fixes to Python pipeline
~~~

Notice that the parent revision is referred to only by its hash.
Since the hash uniquely identifies this revision,
this is the only information we need
to look up the state of the repository
when the parent revision was created.

Usually, we are interested in
how a revision differs from its *parent*.
We can also see this output
by adding the `-p` flag (or  `--patch`),
to the `git log` command.

After you enter this command,
you will see the changes in this revision
presented in *diff* format.
Since the output does not fit in the screen,
Git will pipe the output into a pager (by default, less).
You can scroll up and down
through the log
by using the up and down arrow keys.
When you are done,
just press `q`.

~~~
$ git log -n 1 -p
commit 61fd2bcece2126cdd8ee24f40a04c18d39403022
Author: Aron Ahmadia <aron@ahmadia.net>
Date:   Tue Jun 4 10:59:21 2013 -0400

	Made fixes to Python pipeline

diff --git a/python_pipeline.ipy b/python_pipeline.ipy
new file mode 100644
index 0000000..ab9e62b
--- /dev/null
+++ b/python_pipeline.ipy
@@ -0,0 +1,44 @@
+%pylab
+import numpy as np
+
+f = open('Lumi.2760.csv')
+g = f.readlines()
+f.close()
...
~~~

The output is slightly cryptic
because it is intended to be read by machines
in addition to humans.
The differences, also known as the *diff*,
tells you how each file was changed
from its previous version to this one.

In general, lines starting with a single ‘+’ were added,
and lines starting with a single ‘-’ were removed.”.
Lines without the initial ‘+’ or ‘-’ are present in both versions,
and are provided as helpful context
so you can understand the changes. 

The diff headers in the output:

~~~
diff --git a/python_pipeline.ipy b/python_pipeline.ipy
new file mode 100644
index 0000000..ab9e62b
--- /dev/null
+++ b/python_pipeline.ipy
~~~

summarize the differences
between the previous version of the file
and its new version.

Since `python_pipeline.ipy` was a file new to the repository,
we see this special line:

~~~
--- /dev/null
~~~

This indicates that there was no previous file,
and this file is new.
The following line:

~~~
+++ b/python_pipeline.ipy
~~~

Tells you that the new file was named `python_pipeline.ipy`.

The numbers between the `@@` markers informs you which lines were changed,

~~~
@@ -0,0 +1,44 @@
~~~

In this case,
Aron created a new file
and added lines 1-44.

The lines following,
preceded by a `+`,
are the contents of the new file he added,
`python_pipeline.ipy`.

Here are two more useful arguments to `git log`:

* `--oneline` - Prints only the first few characters of the hash
  and the first line of the commit message in each revision.
* `--stat` - Prints out a summary of files changed in each revision.

If we use them together,
we see a nice text summary
of how the repository has changed
since it was created.

~~~
$ git log --stat --oneline
61fd2bc Made fixes to Python pipeline
 python_pipeline.ipy | 44 ++++++++++++++++++++++++++++++++++++++++++++
 python_pipeline.py  | 49 -------------------------------------------------
 2 files changed, 44 insertions(+), 49 deletions(-)
8595b71 first pass at making a pipeline
 python_pipeline.py | 49 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)
d7c2a9d Merge branch 'add_2763'
a396b40 added Lumi 2763
 Lumi.2763.csv | 10 ++++++++++
 1 file changed, 10 insertions(+)
ef023fe added Lumi 2762
 Lumi.2762.csv | 10 ++++++++++
 1 file changed, 10 insertions(+)
779f888 Added Lumi 2761
 Lumi.2761.csv | 10 ++++++++++
 1 file changed, 10 insertions(+)
cbd6ff5 Added data file
 2013-05-24-2760-2763.txt | 50 ++++++++++++++++++++++++++++++++++++++++++++++++++
 Lumi.2760.csv            | 10 ++++++++++
 2 files changed, 60 insertions(+)
~~~

## Time travel (git checkout)

Git can't really travel through time,
but it does allow us to inspect its repositories
as they looked in the past.
Imagine that Git
automatically prints out all of your code, prose, and data,
(the contents of your repository),
and binds them into a complete book,
any time you want it to.
Imagine also that instead of a friendly librarian,
you have to ask Git
to retrieve revisions of your book for you.
Git happily does this
when you tell it to `checkout` your revisions.

Let's see what the repository looked like
when it was first created,
by giving `git checkout` the first four digits
of the oldest commit in our history:

~~~
$ git checkout cbd6
Note: checking out 'cbd6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using `-b` with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cbd6ff5... Added data file
$ ls
2013-05-24-2760-2763.txt Lumi.2760.csv
~~~

We'll explain the `detached HEAD` message in the next section.
For now, note that the contents of the directory have changed.

Let's restore the original revision
by finding the right hash
in `git log`.

~~~
$ git log --oneline
cbd6ff5 Added data file
~~~

Uh-oh.  `git log`, by default,
only tells us the history of our current revision.

Don't worry, we only need to add
the `--all` flag,
to see all of a repository's available history:

~~~
$ git log --oneline --all
61fd2bc Made fixes to Python pipeline
8595b71 first pass at making a pipeline
d7c2a9d Merge branch 'add_2763'
a396b40 added Lumi 2763
ef023fe added Lumi 2762
779f888 Added Lumi 2761
cbd6ff5 Added data file
~~~

This is enough to go back to where we were,
but let's use this as an opportunity
to introduce another Git feature.

### Reflog

We'd like to go back to (or, *check out*)
the most recent revision.
We could use the output of `git log --all`,
but there is a better Git command
for navigating project history,
the reference log, or *reflog*.

Git keeps a reference log for you
that includes the revisions you have checked out.
The currently checked out revision
is referred to as,
for no particularly great reason,
the HEAD.
Every time you use `git checkout`,
HEAD moves to the new commit,
and the reflog gets another entry.

We can use the `git reflog` command
to access this history and
see where we are,
and where we've been
in the history of our repository.

~~~
$ git reflog
cbd6ff5 HEAD@{0}: checkout: moving from master to cbd6
61fd2bc HEAD@{1}: clone: from https://github.com/ahmadia/bio-pipeline.git
~~~

By default, `git reflog` outputs one line of text
for each time HEAD has moved.
The last move was caused by our checkout command,
and moved us to the revision identified by `cbd6ff5`.
We are interested in the first column of output,
which tells us which revision we were on
before we called `git checkout`.

Since `git reflog` reports our actions
going backwards in time,
the first row contains our current revision,
and the second row is one checkout back,
where we started.

Lets we go back to the revision we started at.

~~~
$ git checkout 61fd
Previous HEAD position was cbd6ff5... Added data file
HEAD is now at 61fd2bc... Made fixes to Python pipeline
~~~

### Checkpoint 1

* **[1A]** Explain the the two lines of output from `git checkout` to
  your neighbor.
* **[1B]** Predict the output of `git reflog` if you call it now.  Try it.
* **[1C]** Try calling the command `git checkout -`.  Can you explain what it
  does to your neighbor?  (You may need to call it multiple times and
  inspect the reflog each time).

### Checkpoint 2

At some point in the project's history,
Aron replaced the file `python_pipeline.py`
with `python_pipeline.ipy`.

* **[2A]** See if you can identify the commit
where Aron added `python_pipeline.py`
* **[2B]** Check out that commit and view `python_pipeline.py` in an editor.

## Undoing Mistakes (git checkout)

`git checkout` is Git's Swiss Army Knife.
It does slightly different things,
depending on how it's called.

We just showed you
how to restore the entire directory to a previous state,
but `git checkout` also allows us
to just restore a specific file.

Let's practice by doing something dangerous.
First, let's make sure you're on the most recent revision.

~~~
$ git checkout 61fd
~~~

Then, go ahead and remove Lumi.2763.csv.

~~~
$ rm Lumi.2763.csv
$ ls Lumi.2763.csv                                                                            ✖
ls: Lumi.2763.csv: No such file or directory
~~~

There are a number of ways
to accidentally corrupt, modify, overwrite, or destroy files.
Here, we use the `rm` command,
to simulate a catastrophic deletion
of our valuable data.

Fortunately, since our copy of `Lumi.2763.csv`
was committed to the repository,
it is as easy as pie to restore it.

~~~
$ git checkout Lumi.2763.csv
$ ls Lumi.2763.csv
Lumi.2763.csv
~~~

In fact, so long as an undamaged copy of our Git repository
exists *somewhere*,
we will always be able to recover lost or damaged files.

### Checkpoint 3

* **[3A]** Modify a file, save the changes, then use `git checkout`
to recover the version stored in history.
* **[3B]** Explain to your neighbor which version of `foo.txt`
is recovered when the user types `git checkout foo.txt` in a Git
repository.

---
layout: lesson
root: ../..
title: Basic Relational Structure of Git Repositories
level: intermediate
---

##The Bones of Git

In earlier lessons, we've explored some of the basic procedures for creating and navigating a git repository; in this lesson, we'll start learning about the formal structure of a git repo, so that we can understand some of git's more advanced uses when we come to them in later lessons.

As you've already seen, the basic building block of a git repo is a **revision**, each of which has a unique **revision hash** - that long string of random-seeming characters associated with each revision visible when you do a `git log`.  If all git did was create these snapshots of our code, it would still be pretty helpful - but git's true power comes from how it organizes these revisions, in a relational structure.

Git's relational structure is essentially one of inheritance - each revision is a child of at least one parent whose content is merged into the child revision (except of course the very first revision; it's created as the starting point of this little family tree).  For now, let's start thinking about the simplest example of this structure: a simple chain of revisions, where each revision only inherits from the revision that came immediately before it, and is only inherited by the next revision after it:

```
[Rev 0]-----[Rev 1]-----[Rev 2]
```

In earlier lessons, this is exactly the structure you were building; every time you did `git commit`, another revision was getting tacked onto the chain.  In git parlance, this chain is called a **branch**; in later lessons, as the name suggests, we'll explore how these branches can spit up and merge together, like the branches of a plant.  But for now, we're just going to deal with one simple, linear chain of commits.  For the curious, in a new git repo, try doing `git branch`; it should return `* master`, which indicates you are in a branch called `master` - that's the name git creates by default for our first chain of commits.  This is just a curiosity for now, but it'll be useful to understand later.

Git has more structure than just the chain of commits, too.  Every project has something called the `HEAD`, which is a term you've already encountered.  In our simple single linear branch, `HEAD` is a pointer to whatever revision git thinks is supposed to be the parent of the revision that's going to come next.  By default, it always points at the most recent revision in the chain:

```
[Rev 0]-----[Rev 1]-----[Rev 2]
                           ^
                           |
               HEAD---------
```

You've already seen the first simple use of git's relational structure by way of `HEAD` - in the above diagram, asking for `HEAD~1` refers to `[Rev 1]`, and `HEAD~2` refers to `[Rev 0]`; we can simply count backwards from `HEAD` in order to ask for earlier revisions.

As we saw in earlier lessons, just firing off a `git commit` at any old time won't actually do anything if you haven't done a `git add` on anything first.  Every time we do `git add`, we're taking the current state of a file, and adding it to something called the **index**.  The index is like a staging area where git keeps track of the files to be added to the next revision, and we can think of it as living at the end of our chain of revisions, sticking off of whatever revision `HEAD` is pointing at:

```
[Rev 0]-----[Rev 1]-----[Rev 2]-----(Index)
                           ^
                           |
               HEAD---------
``` 

The final piece of structure to git is called the **working tree**, which is actually just a fancy name for whatever you've saved in the directory containing your project.  Every time you change a file and save it, you've modified the working tree.  We can think of it as a box of stuff that lives alongside your git project:

```
[Rev 0]-----[Rev 1]-----[Rev 2]-----(Index)        ----------------------
                           ^                       |    working tree    |
                           |                       ----------------------
               HEAD---------
``` 

Every time you do `git add myFile.txt`, you're taking the current state of `myFile.txt` and adding it to the index, ready to be part of the next revision; every time you do `git commit -m 'my message'`, you're packaging up the contents of the index into the next revision in the chain, and moving `HEAD` to point at that new revision.

Let's step through an imaginary work cycle like you've done before, but now looking at exactly what's going on inside git at each step.  Say you started with just one file in your project, `main.txt`; I'll list it inside the revision boxes like so:

```
[Rev 0: main.txt]-----[Rev 1: main.txt]-----[Rev 2: main.txt]-----(Index)        ----------------------
                                                         ^                       |    working tree    |
                                                         |                       |    main.txt        |
                                                         |                       ----------------------
                                             HEAD---------
``` 

At each revision, you did some changes to `main.txt` and committed them, as usual.  Note some version of `main.txt` is hanging out in the working tree too - it may or may not be different from its earlier versions.  Now let's say you create a new file, `new.txt`, and save it in your project directory.  That means it's just in the working tree, and not in your repo yet:

```
[Rev 0: main.txt]-----[Rev 1: main.txt]-----[Rev 2: main.txt]-----(Index)        ----------------------
                                                         ^                       |    working tree    |
                                                         |                       |    main.txt        |
                                                         |                       |    new.txt         |
                                                         |                       ----------------------
                                             HEAD---------
``` 

Now let's add it to the index with `git add new.txt`:

```
[Rev 0: main.txt]-----[Rev 1: main.txt]-----[Rev 2: main.txt]-----(Index: new.txt)        ----------------------
                                                         ^                                |    working tree    |
                                                         |                                |    main.txt        |
                                                         |                                |    new.txt         |
                                                         |                                ----------------------
                                             HEAD---------
```

And finally, let's commit that as a new revision, with `git commit -m 'a great new work'`

```
[Rev 0: main.txt]-----[Rev 1: main.txt]-----[Rev 2: main.txt]-----[Rev 3: main.txt -----(Index)
                                                                          new.txt]                     ----------------------
                                                                            ^                          |    working tree    |
                                                                            |                          |    main.txt        |
                                                                            |                          |    new.txt         |
                                                                            |                          ----------------------
                                                                HEAD---------
```

A new revision has been created which records the changes you staged to new.txt (in this case, 'changes' being the creation of the file), the index has been emptied, and `HEAD` now points at the latest revision, `[Rev 3]`.  That's all there is to it!  That's what git is doing under the hood when you use the basic tools you've learned up to this point.

Now that we understand this basic relational structure, we're ready to learn about a new tool for walking around our chain of commits: `git reset`.

##`git reset`

Let's suppose that in the course of our work, we make some kind of mistake, and we want to rewind the project to an earlier point - `git reset` might be the right tool for the job; think of it as git's big 'undo' button.  `git reset` has three options to choose from: `--hard`, `--mixed`, or `--soft`.  The simplest to understand is the most drastic: `git reset --hard HEAD` will empty the index, change everything in the working tree to match the version recorded at `HEAD`, and move the `HEAD` pointer to point at whatever revision we pointed at (which in the example of `git reset --hard HEAD` of course doesn't move `HEAD` at all, but it would if we did something like `git reset --hard HEAD~1`, or used an earlier revision hash instead of `HEAD`).  So continuing our example from the last section, if we did `git reset --hard HEAD~1`, our repo would look something like:

```
[Rev 0: main.txt]-----[Rev 1: main.txt]-----[Rev 2: main.txt]-----[Rev 3: main.txt -----(Index)
                                                    ^                     new.txt]                     ----------------------
                                                    |                                                  |    working tree    |
                                                    |                                                  |    main.txt        |
                                                    |                                                  ______________________
                                                    |                                                 
                                        HEAD---------
```

Notice something very crucial about `git reset --hard`: `new.txt` has vanished from the working tree (and, though it's harder to depict, any changes made to `main.txt` in `[Rev 3]` are undone in the working tree, too); this means that **reset --hard can destroy work if you're not careful!**  Luckily for us, we committed `new.txt` in `[Rev 3]` before we reset, and `[Rev 3]` still exists; we could do `git reset --hard <Rev 3's hash>` to go back to `[Rev 3]`; `reset` can go forward as well as backwards, if we have the hash around to tell it where to go.  Finally, note that `HEAD` is now pointing at the revision we reset to; this means that if we start committing again from this point, our chain is going to carry on from `[Rev 2]`, with `[Rev 3]` now out of the sequence traversed by `HEAD~1`, `HEAD~2`... : 

```
[Rev 0: main.txt]-----[Rev 1: main.txt]-----[Rev 2: main.txt]-----[Rev 3: main.txt
                                                    |                     new.txt]                     ----------------------
                                                    |                                                  |    working tree    |
                                                    |                                                  |    main.txt        |
                                                    |-----[Rev 4: main.txt]-----(Index)                ______________________
                                                                 ^
                                                                 |                                                 
                                                     HEAD---------
```

As promised, there are less drastic things you can do than `git reset --hard`.  Next up is `git reset --mixed <revision>`, which empties the index and moves `HEAD` to point at `<revision>` just like `reset --hard`, but doesn't touch the working tree - that way, your working tree is totally safe and no work living there will be destroyed.  A common use for this would be `git reset --mixed HEAD`, which doesn't move the `HEAD` pointer, but just empties the index so you can commit things differently.

The final and most tame option for reset is `git reset --soft <revision>`.  The `--soft` flag tells reset to leave the working tree *and* the index alone, and just move the `HEAD` pointer to `<revision>`, so we can use an earlier commit as the parent for our next one.  Notice that `git reset --soft HEAD` actually does nothing - this one only makes sense for revisions other than `HEAD`.  A common use for the `--soft` flag is if you've just made a commit, and realize you want to change the commit message; just go `git reset --soft HEAD~1`, and then recommit with a new message.

To summarize all the flavours of commit and their popular uses, here's a table:

| Command             | Effect                                         | Common Use                                 |
|---------------------|------------------------------------------------|--------------------------------------------|
| `git reset --soft`  | No changes to working tree or index            |Change the commit message you just made     |
| `git reset --mixed` | Remove staged changes from index               |Change what's going into the next commit    |
| `git reset --hard`  | Remove changed files in index and working tree |Completely abandon everything and go back   |

---
layout: lesson
root: ../..
title: Version Control with Git
level: intermediate
---
Version control is the lab notebook of the digital world:
it's what professionals use to keep track of what they've done
and to collaborate with other people.
Every large software development project relies on it,
and most programmers use it for their small jobs as well.
And it isn't just for software:
books (like this one),
papers,
small data sets,
and anything that changes over time or needs to be shared
can and should be stored in a version control system.

Topics
------
* [Introducing Distributed Version Control, and Introducing
Yourself to Git](00-intro.html)
* [Conversational Git](01-conversational-git.html)
* [The Git Development Workflow](02-developing.html)
* [Collaborating with Git and GitHub](03-collaborating.html)

---
layout: lesson
root: ../..
title: Version Control with Git
level: intermediate
---
FIXME: to be written.

---
layout: lesson
root: ../..
title: Introduction
level: intermediate
---
Here's a typical working day for our robot.
The first thing it wants to do when it sits down in the morning is re-draw Figure 8 for the paper it's writing.
In order to do that, it needs to re-calculate the data (since it has some new numbers from a colleague back home).
In order to do *that*, it needs to recompile its statistics program, because it found and fixed a bug yesterday afternoon.
Oh, and it needs to update the version of Java installed on the machine it's using:
it has the right one on its laptop, but not on the machine it's using in the lab.
And it needs to re-install the graph-drawing tool that turns its data into a nicely-formatted chart suitable for publication.
That also requires a Java update, and it'll have to free up some disk space, too,
since *someone*'s MP3 collection is taking up 99.8% of available space.

And so it goes: everything it wants to do seems to require something else to be done first.
Until eventually, it finds himiself saying, "Right, so I need to shave the yak..."
We won't go that far with him, though&mdash;not today.

Instead, here's that set of jobs once again.
We can think of this set as a [graph](../../gloss.html#graph).

The things he needs to do&mdash;the [tasks](../../gloss.html#task)&mdash;are the graph's nodes.
The [dependencies](../../gloss.html#dependency) between the tasks are the graph's edges.
Since the robot can only do one thing at a time,
it needs to find an ordering on these tasks such that everything a given task depends on is done before it.

This pattern arises over and over again.
Each time we collect new data, we need to recalculate our summary statistics.
Each time our source files change, we need to recompile our program
(if, that is, we're using a compiled language like Java, C++, or Fortran).
And when someone writes a new paper, or receives an award, we need to update our research group's web site.
If there are more than a dozen or so tasks, it can be hard or impossible to manually keep track of what depends on what,
and what is up-to-date and what isn't, i.e., what's been done and what still needs to be done.

This is where tools like Make come in.
One of the fundametal rules of computing is that anything worth repeating is worth automating.
If we need to do the same tasks over and over again,
we should use a [build manager](../../gloss.html#build-manager) to handle the details.

We describe dependencies in a [build file](../../gloss.html#build-file),
which is usually just a plain text file in some specialized format.
We also describe how to update things,
i.e., what commands to run when something's dependencies have been satisfied and it's ready to be refreshed itself.
And that's all: the build manager handles everything else.
In particular, it keeps track of what's up to date, and what's ready to be updated.

The most widely used build manager on Unix and its derivatives is called Make.
And note that we said "most widely used", not "most popular".
Make was invented by a summer intern at Bell Labs in 1975.
(He went on to become a vice president at IBM and Google, which shows you how far a good program can take you.)
Over 35 years, Make has grown into a little programming language.
A very cryptic little language, without a debugger, whose conventions and rules only make sense if you understand the Unix shell.

The good news is, GNU Make (the de facto standard version of Make) is fast, free, and well-documented.
And many other tools know how to work with Make.
In particular, many integrated development environments can manage Make's build files more or less automatically,
shielding users from the ugly details.

In this chapter, we'll look at Make's basic features, and a few of its advanced facilities as well.
A companion lecture to this one explores a newer build manager called SCons.
It is more powerful and more flexible than Make, but isn't nearly as widely used (yet).
Java users should also look at Apache Ant, the standard build manager for Java.
It hides many of the platform-specific details that bedevil Make, but requires users to write XML files to get things done.

---
layout: lesson
root: ../..
title: Basic Tasks
level: intermediate
---
To illustrate how Make works, here's the dependency tree for the paper that the robot is working on.
`paper.pdf` depends on `paper.wdp` (the raw word processor file),
and on `figure-1.svg` and `figure-2.svg`.
`figure-1.svg` depends on `summary-1.dat`,
which in turn depends on `data-1-1.dat`, `data-1-2.dat`, and so on,
while `figure-2.svg` depends on files with similar names.

In order to create `paper.pdf`, we have to run the command `wdp2pdf paper.wdp`.
For the purpose of this lecture, it doesn't matter what `wdp2pdf` actually does.
All we need to know is that if `paper.wdp` or either of the figure SVG's change, we need to re-run this command.

To create `figure-1.svg`, we run `sgr -N -r summary-1.dat` and send the output to `figure-1.svg`.
Again, it doesn't matter for now what the `sgr` command actually is.
What matters is that we need to run it whenever `figure-1.svg` is out of date,
i.e., whenever it is older than the `summary-1.dat` file it depends on.
Finally, in order to update `summary-1.dat`, we need to run our own little script, `stats.py`,
with all the files named `data-1-something.dat` as input.
We don't know in advance how many of these there will be: we could conceivably have dozens or hundreds of raw data files to summarize.

That little program `stats.py` adds one more wrinkle to our example problem.
We're constantly updating it as we think of new ways to process our raw data files.
We're also finding and fixing bugs more often than we'd like.
Each time it changes, we should probably update `summary-1.dat`,
just in case a new feature or bug fix changes the summary values.
We should therefore include `stats.py` in the list of things `summary-1.dat` depends on,
so that changes to `stats.py` will trigger recalculation of `summary-1.dat`.

This is all a bit much to digest at once, so let's look at the simplest piece.
How can we get Make to re-create `figure-1.svg` automatically whenever `summary-1.dat` changes?

Let's start by going into the directory containing the files we're using in the paper,
and use the `ls` command to get a listing of what's there.
The `-t` flag to `ls` tells it to list things by age, with the youngest file first and the oldest last:

    $ ls -t *.dat *.svg
    summary-1.dat    figure-1.svg

This listing tells us that our data file `summary-1.dat` is newer than the SVG file that depends on it,
so the SVG file needs to be re-created.
Using our favorite editor, let's create a file called `hello.mk` and put these three lines in it.

    # hello.mk
    figure-1.svg : summary-1.dat
            sgr -N -r summary-1.dat > figure-1.svg 

A configuration file for Make like this one is called a [Makefile](../../gloss.html#makefile).
The first line, starting with `#`, is a comment.
(Our comments should be more meaningful than just the name of the file.)
The second and third lines are a [rule](../../gloss.html#rule) that tell Make what we want to do.

The filename on the left of the colon in the first line is the [target](../../gloss.html#target) of the rule.
The rule tells Make how to update or re-create this file.
The target's [prerequisites](../../gloss.html#prerequisite)&mdash;the things it depends on&mdash;are listed to the right of the colon.
In our case, `figure-1.svg` only has one prerequisite, `summary-1.dat`.

The second line of the rule is its [action](../../gloss.html#action).
This tells Make what shell command or commands to run to bring the target up to date if it is older than any of its prerequisites.
This rule only has one command, but a rule can contain any number.

One thing to note is that the actions in rules *must* be indented with a single tab character.
Make will not accept spaces, or mixes of spaces and tabs.
(As we said in the introduction, it was written by a summer intern in 1975, and sometimes that shows.)

Now that we've created our Makefile, we can tell Make to obey its instructions by running `gmake` from the command line:

    $ gmake -f hello.mk
    sgr -N -r summary-1.dat > figure-1.svg

Many systems make `make` an alias for `gmake`,
so if the latter doesn't work for you, try the former name as well.
The arguments `-f hello.mk` tell Make that we want it to use the commands in the file `hello.mk`.
If we don't tell it what file to look in,
it looks for a file called `Makefile` in the current directory and uses that if it exists.

Make's output shows us that it has run the command we wanted it to.
It did this because at least one prerequisite for `figure-1.svg` was newer than `figure-1.svg` itself.
By default, Make uses the time a file was last modified as its age.
(Opening a file in an editor to view it doesn't change this timestamp, but any change to its contents will.)
Since `summary-1.dat`'s timestamp was younger than `figure-1.svg`'s,
Make ran the shell command we gave it and created a new version of `figure-1.svg`.

Let's run Make again:

    $ gmake -f hello.mk

This time, it doesn't execute any commands.
This happened&mdash;or didn't&mdash;because the target is newer than its prerequisites.
Since there's nothing to bring up to date, Make doesn't change anything.

If we were only allowed one rule per file,
Make wouldn't be any simpler than typing commands by hand or putting them in little shell scripts.
Luckily, Make allows us to put any number of rules in a single configuration file.
Here is another Makefile called `double.mk` with rules to re-create
both `figure-1.svg` and `figure-2.svg`.
These rules are identical except for the 1's and 2's in the filenames; we'll see later how to combine these rules into one.

    # double.mk
    figure-1.svg : summary-1.dat
            sgr -N -r summary-1.dat > figure-1.svg

    figure-2.svg : summary-2.dat
            sgr -N -r summary-2.dat > figure-2.svg

Let's pretend we've just updated our data files by running `touch *.dat`.
(The Unix `touch` command doesn't change the contents of files, but updates their timestamps as if they had been modified.)
Now, when we run Make, it re-creates `figure-1.svg` again&mdash;and then stops:

    $ touch *.dat
    $ gmake -f double.mk
    sgr -N -r summary-1.dat > figure-1.svg

Why wasn't `figure-2.svg` re-created?
The answer is that Make uses the first rule in the Makefile as its [default rule](../../gloss.html#default-rule).
Unless it's told otherwise, it only executes this rule.
If we want Make to rebuild `figure-2.svg`, we have to tell it so explicitly.
We use `-f double.mk` to tell Make what Makefile to use,
and then give it the name of the target we want it to handle:

    $ gmake -f double.mk figure-2.svg
    sgr -N -r summary-2.dat > figure-2.svg

Again, building things one at a time like this is slightly better than typing individual commands, but only slightly.
To get Make to build everything at once, we have to introduce a [phony target](../../gloss.html#phony-target).
This is just a target name that doesn't correspond to any actual file.
Since it doesn't actually exist, it can't ever be up to date, but other things can still depend on it.
Here's our third Makefile, `phony.mk`:

    # phony.mk

    all : figure-1.svg figure-2.svg

    figure-1.svg : summary-1.dat
            sgr -N -r summary-1.dat > figure-1.svg

    figure-2.svg : summary-2.dat
            sgr -N -r summary-2.dat > figure-2.svg

We've introduced a phony target called `all`, which depends on `figure-1.svg` and `figure-2.svg`.
Since there's no file called `all` in the current directory,
if we type `make all`,
Make will decide that the `all` target is out of date.
And since `all` depends on `figure-1.svg` and `figure-2.svg`,
Make will go and update them both, which is exactly what we want.

Let's `touch` our data files again, and run `make -f phony.mk all`.
Sure enough, Make runs the `sgr` command twice to re-create both figures:

    $ touch *.dat
    $ gmake -f phony.mk
    sgr -N -r summary-1.dat > figure-1.svg
    sgr -N -r summary-2.dat > figure-2.svg

One thing to note is that the order in which commands are executed is arbitrary.
Make could decide to update `figure-2.svg` first, rather than `figure-1.svg`,
because there's no dependency to respect between the two.
Make could also update them in parallel if it had more than one processor to use&mdash;we'll return to this idea later.

Something else this example shows us is that a single thing can be a target in one rule, and a prerequisite in others.
The dependencies between the files mentioned in the Makefile make up a directed graph.
In order for Make to run, this graph must not contain any cycles.
For example, if X depends on Y, Y depends on Z, and Z depends on X,
everything depends on something else, so there is nothing Make can build first.
If it detects a cycle in a Makefile, Make will print an error message and stop.
Unfortunately, whether or not a cycle exists depends on which files exist,
and Make's error message is usually not particularly informative.

---
layout: lesson
root: ../..
title: Patterns
level: intermediate
---
Let's go back to our paper and look at another part of our dependency graph.
`summary-1.dat` depends on all of the files `data-1-1.dat`, `data-1-2.dat`, and so on.
The number of files isn't fixed: there could be one, a dozen, or a thousand.
Writing a rule for exactly three files is easy&mdash;we just have one target and multiple prerequisites on a single line:

    # multiple.mk

    summary-1.dat : data-1-1.dat data-1-2.dat data-1-3.dat
            stats.py summary-1.dat data-1-1.dat data-1-2.dat data-1-3.dat

But how do we generalize that to any number of files?
And how can we get rid of the repeated filenames?
Writing `data-1-1.dat data-1-2.dat data-1-3.dat` twice is just asking for trouble:
sooner or later, we'll add a file to one line but forget to update the other.
We need a way to express the idea, "All the files named `data-1-something.dat`,"
even when we don't know in advance how many of these there will be.
We'd also like to figure out what to do about `figure-2.svg` and the files it depends on.
The rules are exactly the same as those for `figure-1.svg` and its prerequisites;
duplicating them is just asking for trouble.

Let's start with the case of three files `data-1-1.dat`, `data-1-2.dat`, and `data-1-3.dat`.
As we have seen,
it's easy to write a Make rule to update `summary-1.dat` whenever any of these or the `stats.py` script change.

We'd like to do better, though, so let's replace the action in the rule:

    # target-variable.mk

    summary-1.dat : data-1-1.dat data-1-2.dat data-1-3.dat
            stats.py $@ data-1-1.dat data-1-2.dat data-1-3.dat

Instead of naming `summary-1.dat` in the rule's action, we use the rather cryptic shorthand `$@`.
This is one of Make's [automatic variables](../../gloss.html#automatic-variable),
and it means "the target of the current rule".
In this rule, for example, it means `summary-1.dat`.
(And no, there isn't a more readable long form of the name: it's just another of Make's many warts.)

Using `$@` instead of repeating the target's name shortens our rule somewhat,
but writing the many prerequisite filenames twice is still redundant.
Let's fix that by replacing our shortened rule command like this:

    # variables.mk

    summary-1.dat : data-1-1.dat data-1-2.dat data-1-3.dat
            stats.py $@ $^

`$^` is another automatic variable: it means "all the prerequisites of this rule".
In this case it's the three raw data files,
so when Make expands the variables in `stats.py $@ $^`,
we get back our original command.

There are other automatic variables as well:
for example, `$<` means "the first prerequisite in the list",
and `$?` means "all prerequisites that are out of date".
Don't worry if you can't remember them:
everyone except the most passionate Make user writes them on a sticky note and puts it on their terminal.

Using the automatic variables `$@` and `$^` eliminates the redundancy in our rule,
but doesn't solve the problem of handling an arbitrary number of prerequisite filenames.
We expect to have more than three data files before this project is done, and as we said before,
we don't want to have to rewrite our Makefile each time we run our experiment.
What we really want is something like the shell's `*` wildcard, which matches any number of characters:

    # wildcard.mk

    summary-1.dat : data-1-*.dat
            stats.py $@ $^

This actually works:
if use `data-1-*.dat` as the rule's prerequisite, it behaves just like the corresponding shell wildcard.
When we do this, we *must* use `$^` to refer to the rule's prerequisites in the action:
we don't know exactly what filenames will match,
so we have to rely on Make to put them in an automatic variable for us on a rule-by-rule basis.

Here are our dependency tree and our entire Makefile so far:

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf $<

    figure-1.svg : summary-1.dat
            sgr -N -r $@ $^

    figure-2.svg : summary-2.dat
            sgr -N -r $@ $^

    summary-1.dat : data-1-*.dat
            stats.py $@ $^

    summary-2.dat : data-2-*.dat
            stats.py $@ $^

There is still some redundancy:
we have exactly the same logical rules for our two data series,
but have to write them down separately because the '1' and '2' in their names are different.

We'll see how to fix this in the next section.
Before then, though, we have one more problem to address.
Our existing Makefile doesn't capture the fact that `summary-1.dat` and `summary-2.dat`
depend on `stats.py` as well as on their corresponding raw data files.
We could try to fix this by adding `stats.py` to their prerequisite lists:

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf $<

    figure-1.svg : summary-1.dat
            sgr -N -r $@ $^

    figure-2.svg : summary-2.dat
            sgr -N -r $@ $^

    summary-1.dat : stats.py data-1-*.dat
            stats.py $@ $^

    summary-2.dat : stats.py data-2-*.dat
            stats.py $@ $^

If we do this, though, `stats.py` will appear in the value of the automatic variable `$^` for those two rules.
This means that when we run `stats.py`,
our command line will be `stats.py summary-1.dat stats.py data-1-1.dat data-1-2.dat` and so on,
i.e., we'll be telling `stats.py` to process itself as a data file, which is almost certainly a bad idea.
We could "fix" this by having `stats.py` ignore files that end in `.py`, but it would be an ugly hack.

A second option would be to move the dependency down, and pretend that the raw data files depend on `stats.py`:

    figure-2.svg : summary-2.dat
            sgr -N -r $@ $^

    summary-1.dat : data-1-*.dat
            stats.py $@ $^

    summary-2.dat : data-2-*.dat
            stats.py $@ $^

    data-1-1.dat : stats.py
            touch $@

    data-1-2.dat : stats.py
            touch $@

This is called a [false dependency](../../gloss.html#false-dependency).
The raw data files don't really have to be updated when `stats.py` is changed,
but with this false dependency in our Makefile,
Make will update the timestamps on the raw data files when `stats.py` changes,
which will in turn trigger an update of the summary files.

False dependencies do solve some problems, but not this one:
if we go down this road, we have to list all our raw data files explicitly once again, which is what we're trying to avoid.
Our third option is
to add additional rules for `summary-1.dat` and `summary-2.dat`
that add `stats.py` as a prerequisite,
but don't have any actions:

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf $<

    figure-1.svg : summary-1.dat
            sgr -N -r $@ $^

    figure-2.svg : summary-2.dat
            sgr -N -r $@ $^

    summary-1.dat : data-1-*.dat
            stats.py $@ $^

    summary-2.dat : data-2-*.dat
            stats.py $@ $^

    summary-1.dat : stats.py
    summary-2.dat : stats.py

When Make sees multiple rules for the same target,
it uses the union of all those rules' prerequisites as the target's actual set of prerequisites.
However, the automatic variable `$^` in the rule is still just that rule's prerequisite list.
It's a bit of a hack, but it means that our command line has exactly what we want it to have.

---
layout: lesson
root: ../..
title: Rules
level: intermediate
---
Our Makefile is better than it was, but still contains a lot of redundancy.
The rules for `figure-1.svg` and `figure-2.svg` are identical except for the '1' and '2' in their names,
as are the rules for `summary-1.dat` and `summary-2.dat`.

We'd like to "fold" the rules for the figures together for two reasons.
First, if we add a third figure, we don't want to have to duplicate rules a third time.
Second, if we ever want to change the way we generate figures, we'd like to make that change once, in one place:
if we have to make it in several places, the odds are good we'll forget one,
and then waste time trying to figure out why some of our commands aren't running.

The way to do this in Make is to use a [pattern rule](../../gloss.html#pattern-rule) to capture the common idea.
Here's our Makefile rewritten to use such a rule:

    # pattern-rule.mk

    figure-%.svg : summary-%.dat
            sgr -N -r $@ $^

    summary-1.dat : data-1-*.dat
            stats.py $@ $^

    summary-2.dat : data-2-*.dat
            stats.py $@ $^

    summary-1.dat : stats.py
    summary-2.dat : stats.py

In this rule, `%` is a wildcard.
When it is expanded, it has the same value on both sides of the rule:
if it matches '1' on the left, it must match '1' on the right as well.
`%` only means something to Make, though.
It doesn't have a value in the rule's action, which is handed off to the shell for execution.
So in the action, we have to use the automatic variables `$@` and `$^` as before.

Let's try running our modified Makefile:

    $ make -f pattern-rule.mk
    stats.py summary-1.dat data-1-1.dat data-1-2.dat data-1-3.dat

`summary-1.dat` is updated, but not `summary-2.dat` or either of the figure files.
The reason the other commands didn't run is that pattern rules don't create dependencies:
they just tell Make what to do *if* there's a dependency.
In other words, *if* Make decides it wants to create `figure-1.svg`, it can use our pattern rule,
but we still have to tell Make to care about `figure-1.svg`.
Let's do this by putting the rule for `paper.pdf` back in our Makefile:

    # use-pattern.mk

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf $<

    figure-%.svg : summary-%.dat
            sgr -N -r $@ $^

    summary-1.dat : data-1-*.dat
            stats.py $@ $^

    summary-2.dat : data-2-*.dat
            stats.py $@ $^

    summary-1.dat : stats.py
    summary-2.dat : stats.py

Here, `paper.pdf` depends on `figure-1.svg` and `figure-2.svg`.
Make now knows that it needs these figures.
Since there aren't specific rules for them, it uses the pattern rule instead.

It's tempting to go one step further, and make `paper.pdf` depend on `figure-*.svg`:

    paper.pdf : paper.wdp figure-*.svg
            wdp2pdf $<

This doesn't work, though.
The reason is that the figure files may not exist when Make starts to run&mdash;after all, Make creates them.
In that case, `figure-*.svg` will expand to nothing,
so Make would mistakenly believe that `paper.pdf` depended only on `paper.wdp`.
This kind of bug can be very hard to figure out,
and while Make does have a debugger called [GMD](http://gmd.sourceforge.net/),
it's not an easy tool for beginners to use.

Our raw data files *do* always exist, though, so we can get rid of some more redundancy by folding these two rules into one
using the `*` wildcard:

    # all-patterns.mk

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf $<

    figure-%.svg : summary-%.dat
            sgr -N -r $@ $^

    summary-%.dat : data-%-*.dat
            stats.py $@ $^

    summary-1.dat : stats.py
    summary-2.dat : stats.py

It's safe to do this because Make isn't responsible for creating `data-1-whatever.dat` and `data-2-whatever.dat`:
there's no possibility of the `*` missing things because it's evaluated when Make starts running.

Just as a reminder, the `%` is a Make wildcard:
it matches the same thing on the left and right side of a pattern rule.
`*` is a shell wildcard:
it matches zero or more characters in a filename when it's evaluated.

We cannot get rid of the last bit of redundancy by making `summary-%.dat` depend on `stats.py`.
Even with this pattern rule, the summary files only depend on the corresponding raw data files, not on `stats.py`.
The reason is that when Make sees two or more pattern rules that could match a filename,
it uses the first and ignores the other.
It's another wart, and another source of hard-to-find headaches in Makefiles.

If we really want to avoid making `summary-1.dat` and `summary-2.dat` depend on `stats.py` separately,
the only way is to go back to using false dependencies.
This Makefile tells Make to update the timestamps on the raw data files using `touch` whenever `stats.py` changes.
Doing this indirectly triggers the re-creation of the summary files&mdash;it does what we want, just in a roundabout way.

    # false-dependencies.mk

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf $<

    figure-%.svg : summary-%.dat
            sgr -N -r $@ $^

    summary-%.dat : data-%-*.dat
            stats.py $@ $^

    data-*-*.dat : stats.py
            touch $@

---
layout: lesson
root: ../..
title: Macros
level: intermediate
---
Just when we thought we were done writing our Makefile,
our supervisor reminded us that all papers must conform to the university's new style rules.
That means that `paper.pdf` has one more dependency: the official university style file `euphoric.wps`.
Unfortunately, on our laptop, that file lives in `C:\papers`,
but on the machine we use in the lab, it's in `/lib/styles`.

We could create a directory called `/lib/styles` on our laptop,
and put a copy of `euphoric.wps` there,
but the university also has a style guide for diagrams, which is in a file called `euphoric.fig`.
Once again, on our laptop, it's installed in `C:\papers`,
but it's in `/lib/styles` in the lab.
How should we handle this difference?

If we start with the Makefile we've written so far,
the brute-force approach is to just add the style files to our commands:

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf --style c:/papers/euphoric.wps $<

    figure-%.svg : summary-%.dat
            sgr -N -r -s c:/papers/euphoric.fig $@ $^

    summary-%.dat : data-%-*.dat
            stats.py $@ $^

    data-*-*.dat : stats.py
            touch $@

There's some redundancy here, though: we are specifying the same directory twice.
And notice that we haven't explicitly listed `euphoric.wps` or `euphoric.fig`
as prerequisites of `paper.pdf`,
or of the two figure we're generating.
Some people would include them, just to be safe,
but it's more common not to list dependencies on "system" files
like libraries, style files, and so on.

Now, how do we handle the fact that these two paths need to be different when we're re-creating our paper in the lab?
The first option is to use copy and paste, and write two completely separate Makefiles.
What we really mean, though, is write *and maintain*, and that's why this is a bad idea.
As soon as we have two of anything, we'll eventually update one but forget to update the other.
Makefiles are already hard enough to debug;
any "solution" that adds more complexity and risk isn't really a solution at all.

Our second option is to put everything in one Makefile, and then to comment out the bits intended for the machine we *aren't* on,
but this is also problematic.
First, we have to make sure we always comment and uncomment lines consistently.
If we uncomment the line for creating the paper on our laptop, for example, but forget to uncomment the line for building the figures,
we're going to have another debugging headache.

Commenting and uncommenting lines also makes life more difficult for our version control system.
If we update our Makefile from version control, then change the commenting on a few lines,
the version control system will want to save those changes in the repository the next time we commit.
We probably don't actually want to do that, since it would mean that the next time we updated on the other machine,
its Makefile would be overwritten.

The third option&mdash;the right one&mdash;is to refactor our Makefile to make the problem go away entirely.
We can do this by defining a [macro](../../gloss.html#macro), just as we would define a constant or variable in a program.
Here's our Makefile with a macro defined and used:

    # with-macro.mk

    STYLE_DIR=c:/papers/

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf --style ${STYLE_DIR}/euphoric.wps $<

    figure-%.svg : summary-%.dat
            sgr -N -r -s ${STYLE_DIR}/euphoric.fig $@ $^

    summary-%.dat : data-%-*.dat
            stats.py $@ $^

    data-*-*.dat : stats.py
            touch $@

The definition looks like definitions in most programming languages:
the macro is called `STYLE_DIR`, and its value is `c:/papers/`.
To use the macro, we put a dollar sign in front of it (just as we would do in the shell) and wrap its name in curly brackets.
This tells Make to insert the macro's value, so that these two directory paths are what we want on our laptop.

This is certainly a step forward:
now, when we want to move our Makefile from one machine to another, we only have to change one definition in one place.
However, while we no longer have to worry about consistency,
we're still making changes to a file that's under version control that we *don't* want written back to the repository.

> ### Parenthesizing Macros in Make
>
> We have to put curly brackets or parentheses around a macro's name when we use it&mdash;we can't just write `$MACRO`.
> If we do, Make will interpret it as `$M` (a reference to the macro `M`) followed by "ACRO".
> Since we probably don't have a macro called `M`, `$M` will expand to the empty string,
> so `$MACRO` without parentheses will just be "ACRO".
> Why?
> To make a long story short, it's another wart left over from its history.
> Almost everyone trips over it occasionally, and as with other bugs, it can be very hard to track down.

It's common practice to use macros to define all the flags that tools need,
so that if a tool is invoked in two or more actions,
it's passed a consistent set of flags.
Here, for example, we're defining `STYLE_DIR` to point to the directory holding our style files,
then using that definition in two other macros:

    # with-lots-of-macros.mk

    STYLE_DIR=c:/papers/
    WDP2PDF_FLAGS=--style ${STYLE_DIR}/euphoric.wps
    SGR_FLAGS=-N -r -s ${STYLE_DIR}/euphoric.fig

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf ${WDP2PDF_FLAGS} $<

    figure-%.svg : summary-%.dat
            sgr ${SGR_FLAGS} $@ $^

    summary-%.dat : data-%-*.dat
            stats.py $@ $^

    data-*-*.dat : stats.py
            touch $@

The first, `WPD2PDF_FLAGS`,
is the single flag and argument we want to pass to the tool that turns our word processor file into a PDF.
The second, `SGR_FLAGS`, combines `STYLE_DIR` with a couple of other flags
to build the arguments for the tool that turns data files into SVG diagrams.

We are now ready to solve our original problem.
Let's move the definition of `STYLE_DIR`&mdash;the macro that changes from machine to machine&mdash;out of our main Makefile,
and into a Makefile of its own called `config.mk`:

    # config.mk

    STYLE_DIR=c:/papers/

We can then include that file in our main Makefile using Make's `include` command.
Our other macros and commands can then use the definition of `STYLE_DIR` just as if it had been defined in the main Makefile:

    # with-include.mk
    include config.mk

    WDP2PDF_FLAGS=--style ${STYLE_DIR}/euphoric.wps
    SGR_FLAGS=-N -r -s ${STYLE_DIR}/euphoric.fig

    paper.pdf : paper.wdp figure-1.svg figure-2.svg
            wdp2pdf ${WDP2PDF_FLAGS} $<

    figure-%.svg : summary-%.dat
            sgr ${SGR_FLAGS} $@ $^

    summary-%.dat : data-%-*.dat
            stats.py $@ $^

    data-*-*.dat : stats.py
            touch $@

Once we've tested this to make sure it works, we can copy `config.mk` to create two files that we'll put in version control.
The first, `config-home.mk`, defines `STYLE_DIR` for use on our laptop.
The second, `config-lab.mk`, defines it for use in the lab.
These two files are only changed when they need to be (i.e., when the style files move, or their names change).
We then copy one or the other on the machine we're using to create the file `config.mk`
that our main Makefile actually includes.

FIXME: only need to do this once per machine when things change

For example, here's what we have in the `paper` directory on our home machine when we do a fresh checkout from version control.
Along with our data files and the word processor file, we have our main Makefile and the two machine-specific configuration makefiles.
So we copy `config-home.mk` to create `config.mk`.
Meanwhile, when we check out in the lab, we copy `config-lab.mk` to create `config.mk`.
Our main Makefile is now happy in both cases because the file it's including now exists,
and has the right definition of `STYLE_DIR`.

We can also solve this problem by defining `STYLE_DIR` on the command line each time we run Make.
To do this, we set the variable on the command line when invoking `make`:

    $ make STYLE_DIR=/lib/styles -f Makefile

This is almost always a bad idea, though.
We have to remember to type the definition each time,
and we have to type it *correctly* each time.
This isn't too bad with just one definition, but is infeasible when there are half a dozen.
There's also no record in the Makefile itself of the flag,
which makes life harder for other people who want to re-create our paper:
how do they know what to type?

---
layout: lesson
root: ../..
title: Instructor's Guide
level: intermediate
---
FIXME

---
layout: lesson
root: ../..
title: Automating Tasks with Make
level: intermediate
---
FIXME: introduction

Topics
------
*   [Introduction](00-intro.html)
*   [Basic Tasks](01-basics.html)
*   [Patterns](02-patterns.html)
*   [Rules](03-rules.html)
*   [Macros](04-macros.html)

See Also
--------
*   [Instructor's Guide](guide.html)
*   [Reference](ref.html)

Resources
---------
*   \*.mk: Makefiles used as examples in notes.

---
layout: lesson
root: ../..
title: Make Reference
level: Intermediate
---
FIXME

---
layout: lesson
root: ../..
---

# Introduction


<div>
<p>This material assumes that you have programmed before. This first lecture provides a quick introduction to programming in Python for those who either haven't used Python before or need a quick refresher.</p>
<p>Let's start with a hypothetical problem we want to solve. We are interested in understanding the relationship between the weather and the number of mosquitos occuring in a particular year so that we can plan mosquito control measures accordingly. Since we want to apply these mosquito control measures at a number of different sites we need to understand both the relationship at a particular site and whether or not it is consistent across sites. The data we have to address this problem comes from the local government and are stored in tables in comma-separated values (CSV) files. Each file holds the data for a single location, each row holds the information for a single year at that location, and the columns hold the data on both mosquito numbers and the average temperature and rainfall from the beginning of mosquito breeding season. The first few rows of our first file look like:</p>
<pre><code>year,temperature,rainfall,mosquitos
2001,87,222,198
2002,72,103,105
2003,77,176,166</code></pre>
</div>

## Objectives


<div>
<ul>
<li>Conduct variable assignment, looping, and conditionals in Python</li>
<li>Use an external Python library</li>
<li>Read tabular data from a file</li>
<li>Subset and perform analysis on data</li>
<li>Display simple graphs</li>
</ul>
</div>

## Loading Data


<div>
<p>In order to load the data, we need to import a library called Pandas that knows how to operate on tables of data.</p>
</div>


<div class="in">
<pre>import pandas</pre>
</div>


<div>
<p>We can now use Pandas to read our data file.</p>
</div>


<div class="in">
<pre>pandas.read_csv(&#39;mosquito_data_A1.csv&#39;)</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
0  2001           87       222        198
1  2002           72       103        105
2  2003           77       176        166
3  2004           89       236        210
4  2005           88       283        242
5  2006           89       151        147
6  2007           71       121        117
7  2008           88       267        232
8  2009           85       211        191
9  2010           75       101        106</pre>
</div>


<div>
<p>The <code>read_csv()</code> function belongs to the <code>pandas</code> library. In order to run it we need to tell Python that it is part of <code>pandas</code> and we do this using the dot notation, which is used everywhere in Python to refer to parts of larger things.</p>
<p>When we are finished typing and press Shift+Enter, the notebook runs our command and shows us its output. In this case, the output is the data we just loaded.</p>
<p>Our call to <code>pandas.read_csv()</code> read data into memory, but didn't save it anywhere. To do that, we need to assign the array to a variable. In Python we use <code>=</code> to assign a new value to a variable like this:</p>
</div>


<div class="in">
<pre>data = pandas.read_csv(&#39;mosquito_data_A1.csv&#39;)</pre>
</div>


<div>
<p>This statement doesn't produce any output because assignment doesn't display anything. If we want to check that our data has been loaded, we can print the variable's value:</p>
</div>


<div class="in">
<pre>print data</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
0  2001           87       222        198
1  2002           72       103        105
2  2003           77       176        166
3  2004           89       236        210
4  2005           88       283        242
5  2006           89       151        147
6  2007           71       121        117
7  2008           88       267        232
8  2009           85       211        191
9  2010           75       101        106
</pre>
</div>


<div>
<p><code>print data</code> tells Python to display the text. Alternatively we could just include <code>data</code> as the last value in a code cell:</p>
</div>


<div class="in">
<pre>data</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
0  2001           87       222        198
1  2002           72       103        105
2  2003           77       176        166
3  2004           89       236        210
4  2005           88       283        242
5  2006           89       151        147
6  2007           71       121        117
7  2008           88       267        232
8  2009           85       211        191
9  2010           75       101        106</pre>
</div>


<div>
<p>This tells the IPython Notebook to display the <code>data</code> object, which is why we see a pretty formated table.</p>
</div>

## Manipulating data


<div>
<p>Once we have imported the data we can start doing things with it. First, let's ask what type of thing <code>data</code> refers to:</p>
</div>


<div class="in">
<pre>print type(data)</pre>
</div>

<div class="out">
<pre>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
</pre>
</div>


<div>
<p>The data is stored in a data structure called a DataFrame. There are other kinds of data structures that are also commonly used in scientific computing including Numpy arrays, and Numpy matrices, which can be used for doing linear algebra.</p>
</div>


<div>
<p>We can select an individual column of data using its name:</p>
</div>


<div class="in">
<pre>print data[&#39;year&#39;]</pre>
</div>

<div class="out">
<pre>0    2001
1    2002
2    2003
3    2004
4    2005
5    2006
6    2007
7    2008
8    2009
9    2010
Name: year, dtype: int64
</pre>
</div>


<div>
<p>Or we can select several columns of data at once:</p>
</div>


<div class="in">
<pre>print data[[&#39;rainfall&#39;, &#39;temperature&#39;]]</pre>
</div>

<div class="out">
<pre>   rainfall  temperature
0       222           87
1       103           72
2       176           77
3       236           89
4       283           88
5       151           89
6       121           71
7       267           88
8       211           85
9       101           75
</pre>
</div>


<div>
<p>We can also select subsets of rows using slicing. Say we just want the first two rows of data:</p>
</div>


<div class="in">
<pre>print data[0:2]</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
0  2001           87       222        198
1  2002           72       103        105
</pre>
</div>


<div>
<p>There are a couple of important things to note here. First, Python indexing starts at zero. In contrast, programming languages like R and MATLAB start counting at 1, because that's what human beings have done for thousands of years. Languages in the C family (including C++, Java, Perl, and Python) count from 0 because that's simpler for computers to do. This means that if we have 5 things in Python they are numbered 0, 1, 2, 3, 4, and the first row in a data frame is always row 0.</p>
<p>The other thing to note is that the subset of rows starts at the first value and goes up to, but does not include, the second value. Again, the up-to-but-not-including takes a bit of getting used to, but the rule is that the difference between the upper and lower bounds is the number of values in the slice.</p>
</div>


<div>
<p>One thing that we can't do with this syntax is directly ask for the data from a single row:</p>
</div>


<div class="in">
<pre>data[1]</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
&lt;ipython-input-10-c805864c0d75&gt; in &lt;module&gt;()
----&gt; 1 data[1]

/usr/lib/python2.7/dist-packages/pandas/core/frame.pyc in __getitem__(self, key)
   2001             # get column
   2002             if self.columns.is_unique:
-&gt; 2003                 return self._get_item_cache(key)
   2004 
   2005             # duplicate columns

/usr/lib/python2.7/dist-packages/pandas/core/generic.pyc in _get_item_cache(self, item)
    665             return cache[item]
    666         except Exception:
--&gt; 667             values = self._data.get(item)
    668             res = self._box_item_values(item, values)
    669             cache[item] = res

/usr/lib/python2.7/dist-packages/pandas/core/internals.pyc in get(self, item)
   1653     def get(self, item):
   1654         if self.items.is_unique:
-&gt; 1655             _, block = self._find_block(item)
   1656             return block.get(item)
   1657         else:

/usr/lib/python2.7/dist-packages/pandas/core/internals.pyc in _find_block(self, item)
   1933 
   1934     def _find_block(self, item):
-&gt; 1935         self._check_have(item)
   1936         for i, block in enumerate(self.blocks):
   1937             if item in block:

/usr/lib/python2.7/dist-packages/pandas/core/internals.pyc in _check_have(self, item)
   1940     def _check_have(self, item):
   1941         if item not in self.items:
-&gt; 1942             raise KeyError(&#39;no item named %s&#39; % com.pprint_thing(item))
   1943 
   1944     def reindex_axis(self, new_axis, method=None, axis=0, copy=True):

KeyError: u&#39;no item named 1&#39;</pre>
</div>


<div>
<p>This is because there are several things that we could mean by <code>data[1]</code> so if we want a single row we can either take a slice that returns a single row:</p>
</div>


<div class="in">
<pre>print data[1:2]</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
1  2002           72       103        105
</pre>
</div>


<div>
<p>or use the <code>.iloc</code> method, which stands for &quot;integer location&quot; since we are looking up the row based on its integer index.</p>
</div>


<div class="in">
<pre>print data.iloc[1]</pre>
</div>

<div class="out">
<pre>year           2002
temperature      72
rainfall        103
mosquitos       105
Name: 1, dtype: int64
</pre>
</div>


<div>
<p>We can also use this same syntax for getting larger subsets of rows:</p>
</div>


<div class="in">
<pre>print data.iloc[1:3]</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
1  2002           72       103        105
2  2003           77       176        166
</pre>
</div>


<div>
<p>We can also subset the data based on the value of other rows:</p>
</div>


<div class="in">
<pre>print data[&#39;temperature&#39;][data[&#39;year&#39;] &gt; 2005]</pre>
</div>

<div class="out">
<pre>5    89
6    71
7    88
8    85
9    75
Name: temperature, dtype: int64
</pre>
</div>


<div>
<p>Data frames also know how to perform common mathematical operations on their values. If we want to find the average value for each variable, we can just ask the data frame for its mean values</p>
</div>


<div class="in">
<pre>print data.mean()</pre>
</div>

<div class="out">
<pre>year           2005.5
temperature      82.1
rainfall        187.1
mosquitos       171.4
dtype: float64
</pre>
</div>


<div>
<p>Data frames have lots of useful methods:</p>
</div>


<div class="in">
<pre>print data.max()</pre>
</div>

<div class="out">
<pre>year           2010
temperature      89
rainfall        283
mosquitos       242
dtype: int64
</pre>
</div>


<div class="in">
<pre>print data[&#39;temperature&#39;].min()</pre>
</div>

<div class="out">
<pre>71
</pre>
</div>


<div class="in">
<pre>print data[&#39;mosquitos&#39;][1:3].std()</pre>
</div>

<div class="out">
<pre>43.1335136524
</pre>
</div>

### Challenge


<div>
<p>Import the data from <code>mosquito_data_A2.csv</code>, create a new variable that holds a data frame with only the weather data, and print the means and standard deviations for the weather variables.</p>
</div>

## Loops


<div>
<p>Once we have some data we often want to be able to loop over it to perform the same operation repeatedly. A <code>for</code> loop in Python takes the general form</p>
<pre><code>for item in list:
    do_something</code></pre>
<p>So if we want to loop over the temperatures and print out there values in degrees Celcius (instead of Farenheit) we can use:</p>
</div>


<div class="in">
<pre>temps = data[&#39;temperature&#39;]
for temp_in_f in temps:
    temp_in_c = (temp_in_f - 32) * 5 / 9.0
    print temp_in_c</pre>
</div>

<div class="out">
<pre>30.5555555556
22.2222222222
25.0
31.6666666667
31.1111111111
31.6666666667
21.6666666667
31.1111111111
29.4444444444
23.8888888889
</pre>
</div>


<div>
<p>That looks good, but why did we use 9.0 instead of 9? The reason is that computers store integers and numbers with decimals as different types: integers and floating point numbers (or floats). Addition, subtraction and multiplication work on both as we'd expect, but division works differently. If we divide one integer by another, we get the quotient without the remainder:</p>
</div>


<div class="in">
<pre>print &#39;10/3 is:&#39;, 10 / 3</pre>
</div>

<div class="out">
<pre>10/3 is: 3
</pre>
</div>


<div>
<p>If either part of the division is a float, on the other hand, the computer creates a floating-point answer:</p>
</div>


<div class="in">
<pre>print &#39;10/3.0 is:&#39;, 10 / 3.0</pre>
</div>

<div class="out">
<pre>10/3.0 is: 3.33333333333
</pre>
</div>


<div>
<p>The computer does this for historical reasons: integer operations were much faster on early machines, and this behavior is actually useful in a lot of situations. However, it's still confusing, so Python 3 produces a floating-point answer when dividing integers if it needs to. We're still using Python 2.7 in this class, so if we want 5/9 to give us the right answer, we have to write it as 5.0/9, 5/9.0, or some other variation.</p>
</div>

## Conditionals


<div>
<p>The other standard thing we need to know how to do in Python is conditionals, or if/then/else statements. In Python the basic syntax is:</p>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">if</span> condition:
    do_something</code></pre>
<p>So if we want to loop over the temperatures and print out only those temperatures that are greater than 80 degrees we would use:</p>
</div>


<div class="in">
<pre>temp = data[&#39;temperature&#39;][0]
if temp &gt; 80:
    print &#34;The temperature is greater than 80&#34;</pre>
</div>

<div class="out">
<pre>The temperature is greater than 80
</pre>
</div>


<div>
<p>We can also use <code>==</code> for equality, <code>&lt;=</code> for less than or equal to, <code>&gt;=</code> for greater than or equal to, and <code>!=</code> for not equal to.</p>
<p>Additional conditions can be handled using <code>elif</code> and <code>else</code>:</p>
</div>


<div class="in">
<pre>temp = data[&#39;temperature&#39;][0]
if temp &lt; 87:
    print &#34;The temperature is &lt; 87&#34;
elif temp &gt; 87:
    print &#34;The temperature is &gt; 87&#34;
else:
    print &#34; The temperature is equal to 87&#34;</pre>
</div>

<div class="out">
<pre> The temperature is equal to 87
</pre>
</div>

### Challenge


<div>
<p>Import the data from <code>mosquito_data_A2.csv</code>, determine the mean temperate, and loop over the temperature values. For each value print out whether it is greater than the mean, less than the mean, or equal to the mean.</p>
</div>

## Plotting


<div>
<p>The mathematician Richard Hamming once said, &quot;The purpose of computing is insight, not numbers,&quot; and the best way to develop insight is often to visualize data. The main plotting library in Python is <code>matplotlib</code>. To get started, let's tell the IPython Notebook that we want our plots displayed inline, rather than in a separate viewing window:</p>
</div>


<div class="in">
<pre>%matplotlib inline</pre>
</div>


<div>
<p>The <code>%</code> at the start of the line signals that this is a command for the notebook, rather than a statement in Python. Next, we will import the <code>pyplot</code> module from <code>matplotlib</code>, but since <code>pyplot</code> is a fairly long name to type repeatedly let's give it an alias.</p>
</div>


<div class="in">
<pre>from matplotlib import pyplot as plt</pre>
</div>


<div>
<p>This import statement shows two new things. First, we can import part of a library by using the <code>from library import submodule</code> syntax. Second, we can use a different name to refer to the imported library by using <code>as newname</code>.</p>
<p>Now, let's make a simple plot showing how the number of mosquitos varies over time. We'll use the site you've been doing exercises with since it has a longer time-series.</p>
</div>


<div class="in">
<pre>data = pandas.read_csv(&#39;mosquito_data_A2.csv&#39;)
plt.plot(data[&#39;year&#39;], data[&#39;mosquitos&#39;])</pre>
</div>

<div class="out">
<pre>[&lt;matplotlib.lines.Line2D at 0x4a88590&gt;]
<img src="../../intermediate/python/01-intro-python_files/intermediate/python/01-intro-python_66_1.png">
</pre>
</div>


<div>
<p>More complicated plots can be created by adding a little additional information. Let's say we want to look at how the different weather variables vary over time.</p>
</div>


<div class="in">
<pre>plt.figure(figsize=(10.0, 3.0))

plt.subplot(1, 2, 1)
plt.plot(data[&#39;year&#39;], data[&#39;temperature&#39;], &#39;ro-&#39;)
plt.xlabel(&#39;Year&#39;)
plt.ylabel(&#39;Temperature&#39;)

plt.subplot(1, 2, 2)
plt.plot(data[&#39;year&#39;], data[&#39;rainfall&#39;], &#39;bs-&#39;)
plt.xlabel(&#39;Year&#39;)
plt.ylabel(&#39;Rain Fall&#39;)
plt.show()</pre>
</div>

<div class="out">
<pre>
<img src="../../intermediate/python/01-intro-python_files/intermediate/python/01-intro-python_68_0.png">
</pre>
</div>

### Challenge


<div>
<p>Using the data in <code>mosquito_data_A2.csv</code> plot the relationship between the number of mosquitos and temperature and the number of mosquitos and rainfall.</p>
</div>

### Key Points


<div>
<ul>
<li>Import a library into a program using <code>import libraryname</code>.</li>
<li>Use the <code>pandas</code> library to work with data tables in Python.</li>
<li>Use <code>variable = value</code> to assign a value to a variable.</li>
<li>Use <code>print something</code> to display the value of <code>something</code>.</li>
<li>Use <code>dataframe['columnname']</code> to select a column of data.</li>
<li>Use <code>dataframe[start_row:stop_row]</code> to select rows from a data frame.</li>
<li>Indices start at 0, not 1.</li>
<li>Use <code>dataframe.mean()</code>, <code>dataframe.max()</code>, and <code>dataframe.min()</code> to calculate simple statistics.</li>
<li>Use <code>for x in list:</code> to loop over values</li>
<li>Use <code>if condition:</code> to make conditional decisions</li>
<li>Use the <code>pyplot</code> library from <code>matplotlib</code> for creating simple visualizations.</li>
</ul>
</div>

## Next steps


<div>
<p>With the requisite Python background out of the way, now we're ready to dig in to analyzing our data, and along the way learn how to write better code, more efficiently, that is more likely to be correct.</p>
</div>

---
layout: lesson
root: ../..
---

# Modularization and Documentation


<div>
<p>Now that we've covered some of the basic syntax and libraries in Python we can start to tackle our data analysis problem. We are interested in understanding the relationship between the weather and the number of mosquitos so that we can plan mosquito control measures. Since we want to apply these mosquito control measures at a number of different sites we need to understand how the relationship varies across sites. Remember that we have a series of CSV files with each file containing the data for a single location.</p>
</div>

## Objectives


<div>
<ul>
<li>Write code for people, not computers</li>
<li>Break a program into chunks</li>
<li>Write and use functions in Python</li>
<li>Write useful documentation</li>
</ul>
</div>

## Starting small


<div>
<p>When approaching computational tasks like this one it is typically best to start small, check each piece of code as you go, and make incremental changes. This helps avoid marathon debugging sessions because it's much easier to debug one small piece of the code at a time than to write 100 lines of code and then try to figure out all of the different bugs in it.</p>
<p>Let's start by reading in the data from a single file and conducting a simple regression analysis on it. In fact, I would actually start by just importing the data and making sure that everything is coming in OK.</p>
</div>


<div class="in">
<pre>import pandas as pd

d = pd.read_csv(&#39;A2_mosquito_data.csv&#39;)
print d</pre>
</div>

<div class="out">
<pre>    year  temperature  rainfall  mosquitos
0   1960           82       200        180
1   1961           70       227        194
2   1962           89       231        207
3   1963           74       114        121
4   1964           78       147        140
5   1965           85       151        148
6   1966           86       172        162
7   1967           75       106        112
8   1968           70       276        230
9   1969           86       165        162
10  1970           83       222        198
11  1971           78       297        247
12  1972           87       288        248
13  1973           76       286        239
14  1974           86       231        202
15  1975           90       284        243
16  1976           76       190        175
17  1977           87       257        225
18  1978           88       128        133
19  1979           87       218        199
20  1980           81       206        184
21  1981           74       175        160
22  1982           85       202        187
23  1983           71       130        126
24  1984           80       225        200
25  1985           72       196        173
26  1986           76       261        222
27  1987           85       111        121
28  1988           83       247        210
29  1989           86       137        142
30  1990           82       159        152
31  1991           77       172        160
32  1992           74       280        231
33  1993           70       291        238
34  1994           77       126        125
35  1995           89       191        178
36  1996           83       298        248
37  1997           80       282        237
38  1998           86       219        195
39  1999           72       143        134
40  2000           79       262        221
41  2001           85       189        175
42  2002           86       205        186
43  2003           72       195        173
44  2004           78       148        146
45  2005           71       262        219
46  2006           88       255        226
47  2007           79       262        221
48  2008           73       198        176
49  2009           86       215        187
50  2010           87       127        129
</pre>
</div>


<div>
<p>The import seems to be working properly, so that's good news, but does anyone have anyone see anything about the code that they don't like?</p>
<p>That's right. The variable name I've chosen for the data doesn't really communicate any information to anyone about what it's holding, which means that when I come back to my code next month to change something I'm going to have a more difficult time understanding what the code is actually doing. This brings us to one of our first major lessons for the morning, which is that in order to understand what our code is doing so that we can quickly make changes in the future, we need to <em>write code for people, not computers</em>, and an important first step is to <em>use meaningful varible names</em>.</p>
</div>


<div class="in">
<pre>import pandas as pd

data = pd.read_csv(&#39;A2_mosquito_data.csv&#39;)
print data.head()</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
0  1960           82       200        180
1  1961           70       227        194
2  1962           89       231        207
3  1963           74       114        121
4  1964           78       147        140
</pre>
</div>


<div>
<p>The <code>.head()</code> method lets us just look at the first few rows of the data. A method is a function attached to an object that operates on that object. So in this case we can think of it as being equivalent to <code>head(data)</code>.</p>
<p>Everything looks good, but either global warming has gotten <em>really</em> out of control or the temperatures are in degrees Fahrenheit. Let's convert them to Celcius before we get started.</p>
<p>We don't need to reimport the data in our new cell because all of the executed cells in IPython Notebook share the same workspace. However, it's worth noting that if we close the notebook and then open it again it is necessary to rerun all of the individual blocks of code that a code block relies on before continuing. To rerun all of the cells in a notebook you can select <code>Cell -&gt; Run All</code> from the menu.</p>
</div>


<div class="in">
<pre>data[&#39;temperature&#39;] = (data[&#39;temperature&#39;] - 32) * 5 / 9.0
print data.head()</pre>
</div>

<div class="out">
<pre>   year  temperature  rainfall  mosquitos
0  1960    27.777778       200        180
1  1961    21.111111       227        194
2  1962    31.666667       231        207
3  1963    23.333333       114        121
4  1964    25.555556       147        140
</pre>
</div>


<div>
<p>That's better. Now let's go ahead and conduct a regression on the data. We'll use the <code>statsmodels</code> library to conduct the regression.</p>
</div>


<div class="in">
<pre>import statsmodels.api as sm

regr_results = sm.OLS.from_formula(&#39;mosquitos ~ temperature + rainfall&#39;, data).fit()
regr_results.summary()</pre>
</div>

<div class="out">
<pre>&lt;class &#39;statsmodels.iolib.summary.Summary&#39;&gt;
&#34;&#34;&#34;
                            OLS Regression Results                            
==============================================================================
Dep. Variable:              mosquitos   R-squared:                       0.997
Model:                            OLS   Adj. R-squared:                  0.997
Method:                 Least Squares   F-statistic:                     7889.
Date:                Sat, 18 Jan 2014   Prob (F-statistic):           3.68e-61
Time:                        13:10:18   Log-Likelihood:                -111.54
No. Observations:                  51   AIC:                             229.1
Df Residuals:                      48   BIC:                             234.9
Df Model:                           2                                         
===============================================================================
                  coef    std err          t      P&gt;|t|      [95.0% Conf. Int.]
-------------------------------------------------------------------------------
Intercept      17.5457      2.767      6.341      0.000        11.983    23.109
temperature     0.8719      0.092      9.457      0.000         0.687     1.057
rainfall        0.6967      0.006    125.385      0.000         0.686     0.708
==============================================================================
Omnibus:                        1.651   Durbin-Watson:                   1.872
Prob(Omnibus):                  0.438   Jarque-Bera (JB):                0.906
Skew:                          -0.278   Prob(JB):                        0.636
Kurtosis:                       3.343   Cond. No.                     1.92e+03
==============================================================================

Warnings:
[1] The condition number is large, 1.92e+03. This might indicate that there are
strong multicollinearity or other numerical problems.
&#34;&#34;&#34;</pre>
</div>


<div>
<p>As you can see <code>statsmodels</code> lets us use the names of the columns in our dataframe to clearly specify the form of the statistical model we want to fit. This also makes the code more readable since the model we are fitting is written in a nice, human readable, manner. The <code>summary</code> method gives us a visual representation of the results. This summary is nice to look at, but it isn't really useful for doing more computation, so we can look up particular values related to the regression using the <code>regr_results</code> attributes. These are variables that are attached to <code>regr_results</code>.</p>
</div>


<div class="in">
<pre>print regr_results.params
print regr_results.rsquared</pre>
</div>

<div class="out">
<pre>Intercept      17.545739
temperature     0.871943
rainfall        0.696717
dtype: float64
0.996966873691
</pre>
</div>


<div>
<p>If we want to hold onto these values for later we can assign them to variables:</p>
</div>


<div class="in">
<pre>parameters = regr_results.params
rsquared = regr_results.rsquared</pre>
</div>


<div>
<p>And then we can plot the observed data against the values predicted by our regression to visualize the results. First, remember to tell the notebook that we want our plots to appear in the notebook itself.</p>
</div>


<div class="in">
<pre>%matplotlib inline</pre>
</div>


<div class="in">
<pre>import matplotlib.pyplot as plt

predicted = parameters[0] + parameters[1] * data[&#39;temperature&#39;] + parameters[2] * data[&#39;rainfall&#39;]
plt.plot(predicted, data[&#39;mosquitos&#39;], &#39;ro&#39;)
min_mosquitos, max_mosquitos = min(data[&#39;mosquitos&#39;]), max(data[&#39;mosquitos&#39;])
plt.plot([min_mosquitos, max_mosquitos], [min_mosquitos, max_mosquitos], &#39;k-&#39;)</pre>
</div>

<div class="out">
<pre>[&lt;matplotlib.lines.Line2D at 0x56eb950&gt;]
<img src="../../intermediate/python/02-modularization-documentation_files/intermediate/python/02-modularization-documentation_19_1.png">
</pre>
</div>


<div>
<p>OK, great. So putting this all together we now have a piece of code that imports the modules we need, loads the data into memory, fits a regression to the data, and stores the parameters and fit of data.</p>
</div>


<div class="in">
<pre>import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt

data = pd.read_csv(&#39;A2_mosquito_data.csv&#39;)
data[&#39;temperature&#39;] = (data[&#39;temperature&#39;] - 32) * 5 / 9.0
regr_results = sm.OLS.from_formula(&#39;mosquitos ~ temperature + rainfall&#39;, data).fit()
parameters = regr_results.params
rsquared = regr_results.rsquared
predicted = parameters[0] + parameters[1] * data[&#39;temperature&#39;] + parameters[2] * data[&#39;rainfall&#39;]
plt.plot(predicted, data[&#39;mosquitos&#39;], &#39;ro&#39;)
min_mosquitos, max_mosquitos = min(data[&#39;mosquitos&#39;]), max(data[&#39;mosquitos&#39;])
plt.plot([min_mosquitos, max_mosquitos], [min_mosquitos, max_mosquitos], &#39;k-&#39;)
print parameters
print &#34;R^2 = &#34;, rsquared</pre>
</div>

<div class="out">
<pre>Intercept      17.545739
temperature     0.871943
rainfall        0.696717
dtype: float64
R^2 =  0.996966873691

<img src="../../intermediate/python/02-modularization-documentation_files/intermediate/python/02-modularization-documentation_21_1.png">
</pre>
</div>

## Functions


<div>
<p>The next thing we need to do is loop over all of the possible data files, but in order to do that we're going to need to grow our code some more. Since our brain can only easily hold 5-7 pieces of information at once, and our code already has more than that many pieces, we need to start breaking our code into manageable sized chunks. This will let us read and understand the code more easily and make it easier to reuse pieces of our code. We'll do this using functions.</p>
<p>Functions in Python take the general form</p>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> function_name(inputs):
    do stuff
    <span class="kw">return</span> output</code></pre>
<p>So, if we want to write a function that returns the value of a number squared we could use:</p>
</div>


<div class="in">
<pre>def square(x):
    x_squared = x ** 2
    return x_squared

print &#34;Four squared is&#34;, square(4)
print &#34;Five squared is&#34;, square(5)</pre>
</div>

<div class="out">
<pre>Four squared is 16
Five squared is 25
</pre>
</div>


<div>
<p>We can also just return the desired value directly.</p>
</div>


<div class="in">
<pre>def square(x):
    return x ** 2

print square(3)</pre>
</div>

<div class="out">
<pre>9
</pre>
</div>


<div>
<p>And remember, if we want to use the result of the function later we need to store it somewhere.</p>
</div>


<div class="in">
<pre>two_squared = square(2)
print two_squared</pre>
</div>

<div class="out">
<pre>4
</pre>
</div>

### Challenges


<div>
<p>1. Write a function that converts temperature from Fahrenheit to Celcius and use it to replace</p>
<pre class="sourceCode python"><code class="sourceCode python">data[<span class="st">&#39;temperature&#39;</span>] = (data[<span class="st">&#39;temperature&#39;</span>] - <span class="dv">32</span>) * <span class="dv">5</span> / <span class="fl">9.0</span></code></pre>
<p>in our program.</p>
<p>2. Write a function called <code>analyze()</code> that takes <code>data</code> as an input, performs the regression, makes the observed-predicted plot, and returns <code>parameters</code>.</p>
<p><em>Walk through someone's result. When discussing talk about different names. E.g., fahr_to_celcius is better than temp_to_celcius since it is explicit both the input and the output. Talk about the fact that even though this doesn't save us any lines of code it's still easier to read.</em></p>
</div>

## The call stack


<div>
<p>Let's take a closer look at what happens when we call fahr_to_celsius(32.0). To make things clearer, we'll start by putting the initial value 32.0 in a variable and store the final result in one as well:</p>
</div>


<div class="in">
<pre>def fahr_to_celsius(tempF):
    tempC = (tempF - 32) * 5 / 9.0
    return tempC

original = 32.0
final = fahr_to_celsius(original)</pre>
</div>


<div>
<h4 id="call-stack-initial-state">Call Stack (Initial State)</h4>
<p>When the first three lines of this function are executed the function is created, but nothing happens. The function is like a recipe, it contains the information about how to do something, but it doesn't do so until you explicitly ask it to. We then create the variable <code>original</code> and assign the value 32.0 to it. The values <code>tempF</code> and <code>tempC</code> don't currently exist.</p>
<h4 id="call-stack-immediately-after-function-call">Call Stack Immediately After Function Call</h4>
<p>When we call <code>fahr_to_celsius</code>, Python creates another stack frame to hold fahr_to_celsius's variables. Upon creation this stack frame only includes the inputs being passed to the function, so in our case <code>tempF</code>. As the function is executed variables created by the function are stored in the functions stack frame, so <code>tempC</code> is created in the <code>fahr_to_celsius</code> stack frame.</p>
<h4 id="call-stack-at-end-of-function-call">Call Stack At End Of Function Call</h4>
<p>When the call to <code>fahr_to_celsius</code> returns a value, Python throws away <code>fahr_to_celsius</code>'s stack frame, including all of the variables it contains, and creates a new variable in the original stack frame to hold the temperature in Celsius.</p>
<h4 id="call-stack-after-end">Call Stack After End</h4>
<p>This final stack frame is always there; it holds the variables we defined outside the functions in our code. What it doesn't hold is the variables that were in the other stack frames. If we try to get the value of <code>tempF</code> or <code>tempC</code> after our functions have finished running, Python tells us that there's no such thing:</p>
</div>


<div class="in">
<pre>print tempC</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
&lt;ipython-input-14-3054d7679e45&gt; in &lt;module&gt;()
----&gt; 1 print tempC

NameError: name &#39;tempC&#39; is not defined</pre>
</div>


<div>
<p>The reason for this is encapsulation, and it's one of the key to writing correct, comprehensible programs. A function's job is to turn several operations into one so that we can think about a single function call instead of a dozen or a hundred statements each time we want to do something. That only works if functions don't interfere with each other by potentially changing the same variables; if they do, we have to pay attention to the details once again, which quickly overloads our short-term memory.</p>
</div>

## Testing Functions


<div class="">
<p>Once we start putting things into functions so that we can re-use them, we need to start testing that those functions are working correctly. The most basic thing we can do is some informal testing to make sure the function is doing what it is supposed to do. To see how to do this, let's write a function to center the values in a dataset prior to conducting statistical analysis. Centering means setting the mean of each variable to be the same value, typically zero.</p>
</div>


<div class="in">
<pre>def center(data):
    return data - data.mean()</pre>
</div>


<div class="">
<p>We could test this on our actual data, but since we don't know what the values ought to be, it will be hard to tell if the result was correct. Instead, let's create a made up data frame where we know what the result should look like.</p>
</div>


<div class="in">
<pre>import pandas as pd

test_data = pd.DataFrame([[1, 1], [1, 2]])
print test_data</pre>
</div>

<div class="out">
<pre>   0  1
0  1  1
1  1  2
</pre>
</div>


<div>
<p>Now that we've made some test data we need to figure out what we think the result should be and we need to do this <em>before</em> we run the test. This is important because we are biased to believe that any result we get back is correct, and we want to avoid that bias. This also helps make sure that we are confident in what we want the code to do. So, what should the result of running <code>center(data)</code> be?</p>
<p>OK, let's go ahead and run the function.</p>
</div>


<div class="in">
<pre>print center(test_data)</pre>
</div>

<div class="out">
<pre>   0    1
0  0 -0.5
1  0  0.5
</pre>
</div>


<div class="">
<p>That looks right, so let's try <code>center</code> on our real data:</p>
</div>


<div class="in">
<pre>data = pd.read_csv(&#39;A2_mosquito_data.csv&#39;)
print center(data)</pre>
</div>

<div class="out">
<pre>    year  temperature    rainfall  mosquitos
0    -25     1.607843   -7.039216  -5.235294
1    -24   -10.392157   19.960784   8.764706
2    -23     8.607843   23.960784  21.764706
3    -22    -6.392157  -93.039216 -64.235294
4    -21    -2.392157  -60.039216 -45.235294
5    -20     4.607843  -56.039216 -37.235294
6    -19     5.607843  -35.039216 -23.235294
7    -18    -5.392157 -101.039216 -73.235294
8    -17   -10.392157   68.960784  44.764706
9    -16     5.607843  -42.039216 -23.235294
10   -15     2.607843   14.960784  12.764706
11   -14    -2.392157   89.960784  61.764706
12   -13     6.607843   80.960784  62.764706
13   -12    -4.392157   78.960784  53.764706
14   -11     5.607843   23.960784  16.764706
15   -10     9.607843   76.960784  57.764706
16    -9    -4.392157  -17.039216 -10.235294
17    -8     6.607843   49.960784  39.764706
18    -7     7.607843  -79.039216 -52.235294
19    -6     6.607843   10.960784  13.764706
20    -5     0.607843   -1.039216  -1.235294
21    -4    -6.392157  -32.039216 -25.235294
22    -3     4.607843   -5.039216   1.764706
23    -2    -9.392157  -77.039216 -59.235294
24    -1    -0.392157   17.960784  14.764706
25     0    -8.392157  -11.039216 -12.235294
26     1    -4.392157   53.960784  36.764706
27     2     4.607843  -96.039216 -64.235294
28     3     2.607843   39.960784  24.764706
29     4     5.607843  -70.039216 -43.235294
30     5     1.607843  -48.039216 -33.235294
31     6    -3.392157  -35.039216 -25.235294
32     7    -6.392157   72.960784  45.764706
33     8   -10.392157   83.960784  52.764706
34     9    -3.392157  -81.039216 -60.235294
35    10     8.607843  -16.039216  -7.235294
36    11     2.607843   90.960784  62.764706
37    12    -0.392157   74.960784  51.764706
38    13     5.607843   11.960784   9.764706
39    14    -8.392157  -64.039216 -51.235294
40    15    -1.392157   54.960784  35.764706
41    16     4.607843  -18.039216 -10.235294
42    17     5.607843   -2.039216   0.764706
43    18    -8.392157  -12.039216 -12.235294
44    19    -2.392157  -59.039216 -39.235294
45    20    -9.392157   54.960784  33.764706
46    21     7.607843   47.960784  40.764706
47    22    -1.392157   54.960784  35.764706
48    23    -7.392157   -9.039216  -9.235294
49    24     5.607843    7.960784   1.764706
50    25     6.607843  -80.039216 -56.235294
</pre>
</div>


<div class="">
<p>It's hard to tell from the default output whether the result is correct, but there are a few simple tests that will reassure us:</p>
</div>


<div class="in">
<pre>print &#39;original mean:&#39;
print data.mean()
centered = center(data)
print
print &#39;mean of centered data:&#39;
centered.mean()</pre>
</div>

<div class="out">
<pre>original mean:
year           1985.000000
temperature      80.392157
rainfall        207.039216
mosquitos       185.235294
dtype: float64

mean of centered data:
year           0.000000e+00
temperature    1.393221e-15
rainfall       6.687461e-15
mosquitos     -1.337492e-14
dtype: float64</pre>
</div>


<div class="">
<p>The mean of the centered data is very close to zero; it's not quite zero because of floating point precision issues. We can even go further and check that the standard deviation hasn't changed (which it shouldn't if we've just centered the data):</p>
</div>


<div class="in">
<pre>print &#39;std dev before and after:&#39;
print data.std()
print
print centered.std()</pre>
</div>

<div class="out">
<pre>std dev before and after:
year           14.866069
temperature     6.135400
rainfall       56.560396
mosquitos      39.531551
dtype: float64

year           14.866069
temperature     6.135400
rainfall       56.560396
mosquitos      39.531551
dtype: float64
</pre>
</div>


<div class="">
<p>The standard deviations look the same. It's still possible that our function is wrong, but it seems unlikely enough that we we're probably in good shape for now.</p>
</div>

## Documentation


<div>
<p>OK, the <code>center</code> function seems to be working fine. Does anyone else see anything that's missing before we move on?</p>
<p>Yes, we should write some <a href="../../gloss.html#documentation">documentation</a> to remind ourselves later what it's for and how to use it. This function may be fairly straightforward, but in most cases it won't be so easy to remember exactly what a function is doing in a few months. Just imagine looking at our <code>analyze</code> function a few months in the future and trying to remember exactly what it was doing just based on the code.</p>
<p>The usual way to put documentation in code is to add <a href="../../gloss.html#comment">comments</a> like this:</p>
</div>


<div class="in">
<pre># center(data): return a new DataFrame containing the original data centered around zero.
def center(data, desired):
    return data - data.mean()</pre>
</div>


<div class="">
<p>There's a better way to do this in Python. If the first thing in a function is a string that isn't assigned to a variable, that string is attached to the function as its documentation:</p>
</div>


<div class="in">
<pre>def center(data, desired):
    &#34;&#34;&#34;Return a new DataFrame containing the original data centered around zero.&#34;&#34;&#34;
    return data - data.mean()</pre>
</div>


<div class="">
<p>This is better because we can now ask Python's built-in help system to show us the documentation for the function.</p>
</div>


<div class="in">
<pre>help(center)</pre>
</div>

<div class="out">
<pre>Help on function center in module __main__:

center(data, desired)
    Return a new DataFrame containing the original data centered around zero.

</pre>
</div>


<div class="">
<p>A string like this is called a <a href="../../gloss.html#docstring">docstring</a> and there are also automatic documentation generators that use these docstrings to produce documentation for users. We use triple quotes because it allows us to include multiple lines of text and because it is considered good Python style.</p>
</div>


<div class="in">
<pre>def center(data):
    &#34;&#34;&#34;Return a new array containing the original data centered on zero
    
    Example:
    &gt;&gt;&gt; import pandas
    &gt;&gt;&gt; data = pandas.DataFrame([[0, 1], [0, 2])
    &gt;&gt;&gt; center(data)
       0    1
    0  0 -0.5
    1  0  0.5

     
    &#34;&#34;&#34;
    return data - data.mean()

help(center)</pre>
</div>

<div class="out">
<pre>Help on function center in module __main__:

center(data)
    Return a new array containing the original data centered on zero
    
    Example:
    &gt;&gt;&gt; import pandas
    &gt;&gt;&gt; data = pandas.DataFrame([[0, 1], [0, 2])
    &gt;&gt;&gt; center(data)
       0    1
    0  0 -0.5
    1  0  0.5

</pre>
</div>

### Challenge


<div>
<ol style="list-style-type: decimal">
<li>Test your temperature conversion function to make sure it's working (think about some temperatures that you easily know the conversion for).</li>
<li>Add documentation to both the temperature conversation function and the analysis function.</li>
</ol>
</div>

## Looping over files


<div>
<p>So now our code looks something like this:</p>
</div>


<div class="in">
<pre>import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt

def fahr_to_celsius(tempF):
    &#34;&#34;&#34;Convert fahrenheit to celsius&#34;&#34;&#34;
    tempC = (tempF - 32) * 5 / 9.0
    return tempC

def analyze(data):
    &#34;&#34;&#34;Perform regression analysis on mosquito data
    
    Takes a dataframe as input that includes columns named &#39;temperature&#39;,
    &#39;rainfall&#39;, and &#39;mosquitos&#39;.
    
    Performs a multiple regression to predict the number of mosquitos.
    Creates an observed-predicted plot of the result and
    returns the parameters of the regression.
    
    &#34;&#34;&#34;
    regr_results = sm.OLS.from_formula(&#39;mosquitos ~ temperature + rainfall&#39;, data).fit()
    parameters = regr_results.params
    predicted = parameters[0] + parameters[1] * data[&#39;temperature&#39;] + parameters[2] * data[&#39;rainfall&#39;]
    plt.figure()
    plt.plot(predicted, data[&#39;mosquitos&#39;], &#39;ro&#39;)
    min_mosquitos, max_mosquitos = min(data[&#39;mosquitos&#39;]), max(data[&#39;mosquitos&#39;])
    plt.plot([min_mosquitos, max_mosquitos], [min_mosquitos, max_mosquitos], &#39;k-&#39;)
    return parameters

data = pd.read_csv(&#39;A2_mosquito_data.csv&#39;)
data[&#39;temperature&#39;] = fahr_to_celsius(data[&#39;temperature&#39;])
regr_results = analyze(data)
print parameters</pre>
</div>

<div class="out">
<pre>Intercept      17.545739
temperature     0.871943
rainfall        0.696717
dtype: float64

<img src="../../intermediate/python/02-modularization-documentation_files/intermediate/python/02-modularization-documentation_64_1.png">
</pre>
</div>


<div>
<p>Now we want to loop over all of the possible data files, and to do that we need to know their names. If we only had a dozen files we could write them all down, but if we have hundreds of files or the filenames change then that won't really work. Fortunately Python has a built in library to help us find the files we want to work with called <code>glob</code>.</p>
</div>


<div class="in">
<pre>import glob

filenames = glob.glob(&#39;*.csv&#39;)
print filenames</pre>
</div>

<div class="out">
<pre>[&#39;A1_mosquito_data.csv&#39;, &#39;B2_mosquito_data.csv&#39;, &#39;A3_mosquito_data.csv&#39;, &#39;B1_mosquito_data.csv&#39;, &#39;A2_mosquito_data.csv&#39;]
</pre>
</div>


<div>
<p>The object returned by <code>glob</code> is a list of strings. A list is a Python data type that holds a group of potentially heterogenous values. That means it can hold pretty much anything, including functions.</p>
</div>


<div class="in">
<pre>mylist = [1, &#39;a&#39;, center]
print mylist</pre>
</div>

<div class="out">
<pre>[1, &#39;a&#39;, &lt;function center at 0x5c63b18&gt;]
</pre>
</div>


<div>
<p>In this case all of the values are strings that contain the names of all of the files that match the expression given to <code>glob</code>, so in this case all of the files with the <code>.csv</code> extension.</p>
<p>Let's restrict the filenames a little more finely, so that we don't accidentally get any data we don't want, and print out the filenames one at a time.</p>
</div>


<div class="in">
<pre>filenames =glob.glob(&#39;*data.csv&#39;)
for filename in filenames:
    print filename</pre>
</div>

<div class="out">
<pre>A1_mosquito_data.csv
B2_mosquito_data.csv
A3_mosquito_data.csv
B1_mosquito_data.csv
A2_mosquito_data.csv
</pre>
</div>

### Challenge


<div>
<p>Modify your code to loop over all of the files in your directory, making an observed-predicted plot for each file and printing the parameters.</p>
</div>

---
layout: lesson
root: ../..
---

# Getting the Right Answer


<div>
<p>Our previous lessons have introduced the basic tools of programming: variables and lists, file I/O, loops, conditionals, and most importantly, functions. What they haven't done is show us how to tell if a program is getting the right answer. For the sake of argument, if each line we write has a 99% chance of being right, then a 70-line program will be wrong more than half the time. We need to do better than that, which means we need to:</p>
<ul>
<li>write programs that check their own operation; and</li>
<li>write tests to catch the mistakes those self-checks miss.</li>
</ul>
<p>Along the way, we will learn:</p>
<ul>
<li>how Python reports and handles errors;</li>
<li>how to use a unit testing framework;</li>
<li>when it's useful to write tests <em>before</em> writing code.</li>
</ul>
</div>

## Defensive Programming


<div>
<p>We made several mistakes while writing the programs in our first few lessons. How can we be sure that there aren't still errors lurking in the code we have? And how can we guard against introducing new errors in code as we modify it?</p>
<p>The first step is to use <a href="../../gloss.html#defensive_programming">defensive programming</a>, i.e., to assume that mistakes <em>will</em> happen and to guard against them. One way to do this is to add <a href="../../gloss.html#assertion">assertions</a> to our code so that it checks itself as it runs. An assertion is simply a statement that something must be true at a certain point in a program. When Python sees one, it checks that the assertion's condition. If it's true, Python does nothing, but if it's false, Python halts the program immediately and prints the error message provided. For example, this piece of code halts as soon as the loop encounters a value that isn't positive:</p>
</div>


<div class="in">
<pre>numbers = [1.5, 2.3, 0.7, -0.001, 4.4]
total = 0.0
for n in numbers:
    assert n &gt;= 0.0, &#39;Data should only contain positive values&#39;
    total += n
print &#39;total is:&#39;, total</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-1-33d87ea29ae4&gt; in &lt;module&gt;()
      2 total = 0.0
      3 for n in numbers:
----&gt; 4     assert n &gt;= 0.0, &#39;Data should only contain positive values&#39;
      5     total += n
      6 print &#39;total is:&#39;, total

AssertionError: Data should only contain positive values</pre>
</div>


<div>
<p>Programs like the Firefox browser are littered with assertions: 10-20% of the code they contain are there to check that the other 80-90% are working correctly. Broadly speaking, assertions fall into three categories:</p>
<ul>
<li>A <a href="../../gloss.html#precondition">precondition</a> is something that must be true at the start of a function in order for it to work correctly.</li>
<li>A <a href="../../gloss.html#postcondition">postcondition</a> is something that the function guarantees is true when it finishes.</li>
<li>An <a href="../../gloss.html#invariant">invariant</a> is something that is always true at a particular point inside a piece of code.</li>
</ul>
<p>For example, suppose we are representing rectangles using a tuple of four coordinates <code>(x0, y0, x1, y1)</code>. In order to do some calculations, we need to normalize the rectangle so that it is at the origin and 1.0 units long on its longest axis. This function does that, but checks that its input is correctly formatted and that its result makes sense:</p>
</div>


<div class="in">
<pre>def normalize_rectangle(rect):
    assert len(rect) == 4, &#39;Rectangles must contain 4 coordinates&#39;
    x0, y0, x1, y1 = rect
    assert x0 &lt; x1, &#39;Invalid X coordinates&#39;
    assert y0 &lt; y1, &#39;Invalid Y coordinates&#39;

    dx = x1 - x0
    dy = y1 - y0
    if dx &gt; dy:
        scaled = float(dx) / dy
        upper_x, upper_y = 1.0, scaled
    else:
        scaled = float(dx) / dy
        upper_x, upper_y = scaled, 1.0

    assert 0 &lt; upper_x &lt;= 1.0, &#39;Calculated upper X coordinate invalid&#39;
    assert 0 &lt; upper_y &lt;= 1.0, &#39;Calculated upper Y coordinate invalid&#39;

    return (0, 0, upper_x, upper_y)</pre>
</div>


<div>
<p>The preconditions on lines 2, 4, and 5 catch invalid inputs:</p>
</div>


<div class="in">
<pre>print normalize_rectangle( (0.0, 1.0, 2.0) ) # missing the fourth coordinate</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-22-3a97b1dcab70&gt; in &lt;module&gt;()
----&gt; 1 print normalize_rectangle( (0.0, 1.0, 2.0) ) # missing the fourth coordinate

&lt;ipython-input-21-fdb49ef456c2&gt; in normalize_rectangle(rect)
      1 def normalize_rectangle(rect):
----&gt; 2     assert len(rect) == 4, &#39;Rectangles must contain 4 coordinates&#39;
      3     x0, y0, x1, y1 = rect
      4     assert x0 &lt; x1, &#39;Invalid X coordinates&#39;
      5     assert y0 &lt; y1, &#39;Invalid Y coordinates&#39;

AssertionError: Rectangles must contain 4 coordinates</pre>
</div>


<div class="in">
<pre>print normalize_rectangle( (4.0, 2.0, 1.0, 5.0) ) # X axis inverted</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-23-f05ae7878a45&gt; in &lt;module&gt;()
----&gt; 1 print normalize_rectangle( (4.0, 2.0, 1.0, 5.0) ) # X axis inverted

&lt;ipython-input-21-fdb49ef456c2&gt; in normalize_rectangle(rect)
      2     assert len(rect) == 4, &#39;Rectangles must contain 4 coordinates&#39;
      3     x0, y0, x1, y1 = rect
----&gt; 4     assert x0 &lt; x1, &#39;Invalid X coordinates&#39;
      5     assert y0 &lt; y1, &#39;Invalid Y coordinates&#39;
      6 

AssertionError: Invalid X coordinates</pre>
</div>


<div>
<p>The post-conditions help us catch bugs by telling us when our calculations cannot have been correct. For example, if we normalize a rectangle that is taller than it is wide everything seems OK:</p>
</div>


<div class="in">
<pre>print normalize_rectangle( (0.0, 0.0, 1.0, 5.0) )</pre>
</div>

<div class="out">
<pre>(0, 0, 0.2, 1.0)
</pre>
</div>


<div>
<p>but if we normalize one that's wider than it is tall, the assertion is triggered:</p>
</div>


<div class="in">
<pre>print normalize_rectangle( (0.0, 0.0, 5.0, 1.0) )</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-27-5f0ef7954aeb&gt; in &lt;module&gt;()
----&gt; 1 print normalize_rectangle( (0.0, 0.0, 5.0, 1.0) )

&lt;ipython-input-21-fdb49ef456c2&gt; in normalize_rectangle(rect)
     15 
     16     assert 0 &lt; upper_x &lt;= 1.0, &#39;Calculated upper X coordinate invalid&#39;
---&gt; 17     assert 0 &lt; upper_y &lt;= 1.0, &#39;Calculated upper Y coordinate invalid&#39;
     18 
     19     return (0, 0, upper_x, upper_y)

AssertionError: Calculated upper Y coordinate invalid</pre>
</div>


<div>
<p>Re-reading our function, we realize that line 10 should divide <code>dy</code> by <code>dx</code> rather than <code>dx</code> by <code>dy</code>. (You can display line numbers by typing Ctrl-M, then L.) If we had left out the assertion at the end of the function, we would have created and returned something that looked like a valid answer, but wasn't; detecting and debugging that would almost certainly have taken more time in the long run than writing the assertion.</p>
<p>But assertions aren't just about catching errors: they also help people understand programs. Each assertion gives the person reading the program a chance to check (consciously or otherwise) that their understanding matches what the code is doing.</p>
<p>Most good programmers follow two rules when adding assertions to their code. The first is, &quot;<a href="../../rules.html#fail-early-fail-often">fail early, fail often</a>&quot;. The greater the distance between when and where an error occurs and when it's noticed, the harder the error will be to debug, so good code catches mistakes as early as possible.</p>
<p>The second rule is, &quot;<a href="../../rules.html#turn-bugs-into-assertions-or-tests">turns bugs into assertions or tests</a>&quot;. If you made a mistake in a piece of code, the odds are good that you have made other mistakes nearby, or will make the same mistake (or a related one) the next time you change it. Writing assertions to check that you haven't <a href="../../gloss.html#regression">regressed</a> (i.e., haven't re-introduced an old problem) can save a lot of time in the long run, and helps to warn people who are reading the code (including your future self) that this bit is tricky.</p>
</div>


<div>
<h3 id="challenges">Challenges</h3>
<ol style="list-style-type: decimal">
<li><p>Suppose you are writing a function called <code>average</code> that calculates the average of the numbers in a list. What pre-conditions and post-conditions would you write for it? Compare your answer to your neighbor's: can you think of a function that will past your tests but not hers or vice versa?</p></li>
<li><p>Explain in words what the assertions in this code check, and for each one, give an example of input that will make that assertion fail.</p>
<pre><code>def running(values):
    assert len(values) &gt; 0
    result = [values[0]]
    for v in values[1:]:
        assert result[-1] &gt;= 0
        result.append(result[-1] + v)
    assert result[-1] &gt;= result[0]
    return result</code></pre></li>
</ol>
</div>

## Exceptions


<div>
<p>Assertions help us catch errors in our code, but things can go wrong for other reasons, like missing or badly-formatted files. Most modern programming languages allow programmers to use <a href="../../gloss.html#exception">exceptions</a> to separate what the program should do if everything goes right from what it should do if something goes wrong. Doing this makes both cases easier to read and understand.</p>
<p>For example, here's a small piece of code that tries to read parameters and a grid from two separate files, and reports an error if either goes wrong:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">try</span>:
    params = read_params(param_file)
    grid = read_grid(grid_file)
<span class="kw">except</span>:
    log.error(<span class="st">&#39;Failed to read input file(s)&#39;</span>)
    sys.exit(ERROR)</code></pre>
</div>


<div>
<p>We join the normal case and the error-handling code using the keywords <code>try</code> and <code>except</code>. These work together like <code>if</code> and <code>else</code>: the statements under the <code>try</code> are what should happen if everything works, while the statements under <code>except</code> are what the program should do if something goes wrong.</p>
<p>We have actually seen exceptions before without knowing it, since by default, when an exception occurs, Python prints it out and halts our program. For example, trying to open a nonexistent file triggers a type of exception called an <code>IOError</code>, while an out-of-bounds index to a list triggers an <code>IndexError</code>:</p>
</div>


<div class="in">
<pre>open(&#39;nonexistent-file.txt&#39;, &#39;r&#39;)</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
IOError                                   Traceback (most recent call last)
&lt;ipython-input-13-58cbde3dd63c&gt; in &lt;module&gt;()
----&gt; 1 open(&#39;nonexistent-file.txt&#39;, &#39;r&#39;)

IOError: [Errno 2] No such file or directory: &#39;nonexistent-file.txt&#39;</pre>
</div>


<div class="in">
<pre>values = [0, 1, 2]
print values[999]</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
&lt;ipython-input-14-7fed13afc650&gt; in &lt;module&gt;()
      1 values = [0, 1, 2]
----&gt; 2 print values[999]

IndexError: list index out of range</pre>
</div>


<div>
<p>We can use <code>try</code> and <code>except</code> to deal with these errors ourselves if we don't want the program simply to fall over:</p>
</div>


<div class="in">
<pre>try:
    reader = open(&#39;nonexistent-file.txt&#39;, &#39;r&#39;)
except IOError:
    print &#39;Whoops!&#39;</pre>
</div>

<div class="out">
<pre>Whoops!
</pre>
</div>


<div>
<p>When Python executes this code, it runs the statement inside the <code>try</code>. If that works, it skips over the <code>except</code> block without running it. If an exception occurs inside the <code>try</code> block, though, Python compares the type of the exception to the type specified by the <code>except</code>. If they match, it executes the code in the <code>except</code> block.</p>
<p><code>IOError</code> is the particular kind of exception Python raises when there is a problem related to input and output, such as files not existing or the program not having the permissions it needs to read them. We can put as many lines of code in a <code>try</code> block as we want, just as we can put many statements under an <code>if</code>. We can also handle several different kinds of errors afterward. For example, here's some code to calculate the entropy at each point in a grid:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">try</span>:
    params = read_params(param_file)
    grid = read_grid(grid_file)
    entropy = lee_entropy(params, grid)
    write_entropy(entropy_file, entropy)
<span class="kw">except</span> <span class="ot">IOError</span>:
    report_error_and_exit(<span class="st">&#39;IO error&#39;</span>)
<span class="kw">except</span> <span class="ot">ArithmeticError</span>:
    report_error_and_exit(<span class="st">&#39;Arithmetic error&#39;</span>)</code></pre>
</div>


<div>
<p>Python tries to run the four functions inside the <code>try</code> as normal. If an error occurs in any of them, Python immediately jumps down and tries to find an <code>except</code> of the corresponding type: if the exception is an <code>IOError</code>, Python jumps into the first error handler, while if it's an <code>ArithmeticError</code>, Python jumps into the second handler instead. It will only execute one of these, just as it will only execute one branch of a series of <code>if</code>/<code>elif</code>/<code>else</code> statements.</p>
<p>This layout has made the code easier to read, but we've lost something important: the message printed out by the <code>IOError</code> branch doesn't tell us which file caused the problem. We can do better if we capture and hang on to the object that Python creates to record information about the error:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">try</span>:
    params = read_params(param_file)
    grid = read_grid(grid_file)
    entropy = lee_entropy(params, grid)
    write_entropy(entropy_file, entropy)
<span class="kw">except</span> <span class="ot">IOError</span> <span class="ch">as</span> err:
    report_error_and_exit(<span class="st">&#39;Cannot read/write&#39;</span> + err.filename)
<span class="kw">except</span> <span class="ot">ArithmeticError</span> <span class="ch">as</span> err:
    report_error_and_exit(err.message)</code></pre>
</div>


<div>
<p>If something goes wrong in the <code>try</code>, Python creates an exception object, fills it with information, and assigns it to the variable <code>err</code>. (There's nothing special about this variable name—we can use anything we want.) Exactly what information is recorded depends on what kind of error occurred; Python's documentation describes the properties of each type of error in detail, but we can always just print the exception object. In the case of an I/O error, we print out the name of the file that caused the problem. And in the case of an arithmetic error, printing out the message embedded in the exception object is what Python would have done anyway.</p>
<p>So much for how exceptions work: how should they be used? Some programmers use <code>try</code> and <code>except</code> to give their programs default behaviors. For example, if this code can't read the grid file that the user has asked for, it creates a default grid instead:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">try</span>:
    grid = read_grid(grid_file)
<span class="kw">except</span> <span class="ot">IOError</span>:
    grid = default_grid()</code></pre>
</div>


<div>
<p>Other programmers would explicitly test for the grid file, and use <code>if</code> and <code>else</code> for control flow:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">if</span> file_exists(grid_file):
    grid = read_grid(grid_file)
<span class="kw">else</span>:
    grid = default_grid()</code></pre>
</div>


<div>
<p>It's mostly a matter of taste, but we prefer the second style. As a rule, exceptions should only be used to handle exceptional cases. If the program knows how to fall back to a default grid, that's not an unexpected event. Using <code>if</code> and <code>else</code> instead of <code>try</code> and <code>except</code> sends different signals to anyone reading our code, even if they do the same thing.</p>
<p>Novices often ask another question about exception handling style as well, but before we address it, there's something in our example that you might not have noticed. Exceptions can actually be thrown a long way: they don't have to be handled immediately. Take another look at this code:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">try</span>:
    params = read_params(param_file)
    grid = read_grid(grid_file)
    entropy = lee_entropy(params, grid)
    write_entropy(entropy_file, entropy)
<span class="kw">except</span> <span class="ot">IOError</span> <span class="ch">as</span> err:
    report_error_and_exit(<span class="st">&#39;Cannot read/write&#39;</span> + err.filename)
<span class="kw">except</span> <span class="ot">ArithmeticError</span> <span class="ch">as</span> err:
    report_error_and_exit(err.message)</code></pre>
</div>


<div>
<p>The four lines in the <code>try</code> block are all function calls. They might catch and handle exceptions themselves, but if an exception occurs in one of them that <em>isn't</em> handled internally, Python looks in the calling code for a matching <code>except</code>. If it doesn't find one there, it looks in that function's caller, and so on. If we get all the way back to the main program without finding an exception handler, Python's default behavior is to print an error message like the ones we've been seeing all along.</p>
<p>This rule is the origin of the rule &quot;Throw Low, Catch High.&quot; There are many places in our program where an error might occur. There are only a few, though, where errors can sensibly be handled. For example, a linear algebra library doesn't know whether it's being called directly from the Python interpreter, or whether it's being used as a component in a larger program. In the latter case, the library doesn't know if the program that's calling it is being run from the command line or from a GUI. The library therefore shouldn't try to handle or report errors itself, because it has no way of knowing what the right way to do this is. It should instead just raise an exception, and let its caller figure out how best to handle it.</p>
<p>Finally, we can raise exceptions ourselves if we want to. In fact, we <em>should</em> do this, since it's the standard way in Python to signal that something has gone wrong. Here, for example, is a function that reads a grid and checks its consistency:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> read_grid(grid_file):
    <span class="co">&#39;&#39;&#39;Read grid, checking consistency.&#39;&#39;&#39;</span>

    data = read_raw_data(grid_file)
    <span class="kw">if</span> not grid_consistent(data):
        <span class="kw">raise</span> <span class="ot">Exception</span>(<span class="st">&#39;Inconsistent grid: &#39;</span> + grid_file)
    result = normalize_grid(data)

    <span class="kw">return</span> result</code></pre>
</div>


<div>
<p>The <code>raise</code> statement creates a new exception with a meaningful error message. Since <code>read_grid</code> itself doesn't contain a <code>try</code>/<code>except</code> block, this exception will always be thrown up and out of the function, to be caught and handled by whoever is calling <code>read_grid</code>. We can define new types of exceptions if we want to. And we should, so that errors in our code can be distinguished from errors in other people's code. However, this involves classes and objects, which is outside the scope of these lessons.</p>
</div>


<div>
<h3 id="challenges">Challenges</h3>
<ol style="list-style-type: decimal">
<li>Modify the program below so that it prints three lines of output. <code>try:         for number in [-1, 0, 1]:             print 1.0/number     except ZeroDivisionError:         print 'whoops'</code></li>
</ol>
</div>

## The Limits to Testing


<div>
<p>Like any other piece of experimental apparatus, a complex program requires a much higher investment in testing than a simple one. Putting it another way, a small script that is only going to be used once, to produce one figure, probably doesn't need separate testing: its output is either correct or not. A linear algebra library that will be used by thousands of people in twice that number of applications over the course of a decade, on the other hand, definitely does.</p>
<p>Unfortunately, it's practically impossible to prove that a program will always do what it's supposed to. To see why, consider a function that checks whether a character strings contains only the letters 'A', 'C', 'G', and 'T'. These four tests clearly aren't sufficient:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">assert</span> is_all_bases(<span class="st">&#39;A&#39;</span>)
<span class="kw">assert</span> is_all_bases(<span class="st">&#39;C&#39;</span>)
<span class="kw">assert</span> is_all_bases(<span class="st">&#39;G&#39;</span>)
<span class="kw">assert</span> is_all_bases(<span class="st">&#39;T&#39;</span>)</code></pre>
</div>


<div>
<p>because this version of <code>is_all_bases</code> passes them:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> is_all_bases(bases):
    <span class="kw">return</span> <span class="ot">True</span></code></pre>
</div>


<div>
<p>Adding these tests isn't enough:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">assert</span> not is_all_bases(<span class="st">&#39;X&#39;</span>)
<span class="kw">assert</span> not is_all_bases(<span class="st">&#39;Y&#39;</span>)
<span class="kw">assert</span> not is_all_bases(<span class="st">&#39;Z&#39;</span>)</code></pre>
</div>


<div>
<p>because this version still passes:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> is_all_bases(bases):
    <span class="kw">return</span> bases[<span class="dv">0</span>] in <span class="st">&#39;ACGT&#39;</span></code></pre>
</div>


<div>
<p>We can add yet more tests:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">assert</span> is_all_bases(<span class="st">&#39;ACGCGA&#39;</span>)
<span class="kw">assert</span> not is_all_bases(<span class="st">&#39;CGAZ&#39;</span>)</code></pre>
</div>


<div>
<p>but no matter how many we have, we can always write a function that passes them, but does the wrong thing in other cases. And as we add more tests, we have to start worrying about whether the tests themselves are correct, and about whether we can afford the time needed to write them. After all, if we really want to check that the square root function is correct for all values between 0.0 and 1.0, we need to write over a billion test cases; that's a lot of typing, and the chances of us getting every one right are effectively zero.</p>
<p>Testing is still worth doing, though: it's one of those things that doesn't work in theory, but is surprisingly effective in practice. If we choose our tests carefully, we can demonstrate that our software is as likely to be correct as a mathematical proof or a physical experiment.</p>
<p>Ensuring that we have the right answer is only one reason to to software. The other is that it speeds up development by reducing the amount of re-work we have to do. Even small programs can be quite complex, and changing one thing can all too easily break something else. If we test changes as we make them, and automatically re-test things we've already done, we can catch and fix errors while the changes are still fresh in our minds.</p>
</div>

## Unit Testing


<div>
<p>Most people don't enjoy writing tests, so if we want them to actually do it, it must be easy to:</p>
<ul>
<li>add or change tests,</li>
<li>understand the tests that have already been written,</li>
<li>run those tests, and</li>
<li>understand those tests' results.</li>
</ul>
<p>Test results must also be reliable. If a testing tool says that code is working when it's not, or reports problems when there actually aren't any, people will lose faith in it and stop using it.</p>
<p>The simplest kind of test is a <a href="../../gloss.html#unit_test">unit test</a> that checks the behavior of one component of a program. As an example, suppose we're testing a function called <code>rectangle_area</code> that returns the area of an <code>(x0, y0, x1, y1)</code> rectangle. We'll start by testing our code directly using <code>assert</code>. Here, we call the function three times with different arguments, checking that the right value is returned each time.</p>
</div>


<div class="in">
<pre>from rectangle import rectangle_area

assert rectangle_area([0, 0, 1, 1]) == 1.0
assert rectangle_area([1, 1, 4, 4]) == 9.0
assert rectangle_area([0, 1, 4, 7]) == 24.0</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-16-ebf7f5f1c120&gt; in &lt;module&gt;()
      3 assert rectangle_area([0, 0, 1, 1]) == 1.0
      4 assert rectangle_area([1, 1, 4, 4]) == 9.0
----&gt; 5 assert rectangle_area([0, 1, 4, 7]) == 24.0

AssertionError: </pre>
</div>


<div>
<p>This result is used, in the sense that we know something's wrong, but look closely at what happens if we run the tests in a different order:</p>
</div>


<div class="in">
<pre>assert rectangle_area([0, 1, 4, 7]) == 24.0
assert rectangle_area([1, 1, 4, 4]) == 9.0
assert rectangle_area([0, 0, 1, 1]) == 1.0</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-17-548f3f32c981&gt; in &lt;module&gt;()
----&gt; 1 assert rectangle_area([0, 1, 4, 7]) == 24.0
      2 assert rectangle_area([1, 1, 4, 4]) == 9.0
      3 assert rectangle_area([0, 0, 1, 1]) == 1.0

AssertionError: </pre>
</div>


<div>
<p>Python halts at the first failed assertion, so the second and third tests aren't run at all. It would be more helpful if we could get data from all of our tests every time they're run, since the more information we have, the faster we're likely to be able to track down bugs. It would also be helpful to have some kind of summary report: if our <a href="../../gloss.html#test_suite">test suite</a> includes thirty or forty tests (as it well might for a complex function or library that's widely used), we'd like to know how many passed or failed.</p>
<p>Here's a different approach. First, let's put each test in a function with a meaningful name:</p>
</div>


<div class="in">
<pre>def test_unit_square():
    assert rectangle_area([0, 0, 1, 1]) == 1.0

def test_large_square():
    assert rectangle_area([1, 1, 4, 4]) == 9.0

def test_actual_rectangle():
    assert rectangle_area([0, 1, 4, 7]) == 24.0</pre>
</div>


<div>
<p>Next, import a library called <code>ears</code> and ask it to run our tests for us:</p>
</div>


<div class="in">
<pre>import ears
ears.run()</pre>
</div>

<div class="out">
<pre>..f
2 pass, 1 fail, 0 error
----------------------------------------
fail: test_actual_rectangle
Traceback (most recent call last):
  File &#34;ears.py&#34;, line 45, in run
    test()
  File &#34;&lt;ipython-input-18-643689ad0a0f&gt;&#34;, line 8, in test_actual_rectangle
    assert rectangle_area([0, 1, 4, 7]) == 24.0
AssertionError

</pre>
</div>


<div>
<p><code>ears.run</code> looks in the calling program for functions whose names start with the letters <code>'test_'</code> and runs each one. If the function complete without an assertion being triggered, we count the test as a <a href="../../gloss.html#test_success">success</a>. If an assertion fails, we count the test as a <a href="../../gloss.html#test_failure">failure</a>, but if any other exception occurs, we count it as an <a href="../../gloss.html#test_error">error</a> because the odds are that the test itself is broken.</p>
<p><code>ears</code> is an <a href="../../gloss.html#xUnit">xUnit testing library</a>. The name &quot;xUnit&quot; comes from the fact that many of them are imitations of a Java testing library called JUnit. The <a href="http://en.wikipedia.org/wiki/List_of_unit_testing_frameworks">Wikipedia page</a> on the subject lists dozens of similar frameworks in almost as many languages, all of which have a similar structure: each test is a single function that follows some naming convention (e.g., starts with <code>'test_'</code>), and the framework runs them in some order and reports how many passed, failed, or were broken.</p>
</div>


<div>
<h3 id="challenges">Challenges</h3>
<ol style="list-style-type: decimal">
<li><p>A colleague of yours has written a function that calculates the running total of the values in a list, e.g., <code>running([0, 1, 2])</code> produces the list <code>[0, 1, 3]</code>. Load this function into your notebook using <code>from running import running</code>, and then write some unit tests for it using the <code>ears</code> library to see what bugs you can find.</p></li>
<li><p>Some programmers put assertions in their programs to catch errors when they occur; others prefer to write unit tests to check that the program is behaving properly. Which do you think makes programs easier to read? Which do you think makes them easier to maintain as they change over time?</p></li>
</ol>
</div>

## Test-Driven Development


<div>
<p>Libraries like <code>ear</code> can't think of test cases for us. We still have to decide what to test and how many tests to run. Our best guide here is economics: we want the tests that are most likely to give us useful information that we don't already have. For example, if <code>rectangle_area([0, 0, 1, 1])</code> works, there's probably not much point testing <code>rectangle_area((0, 0, 2, 2))</code>, since it's hard to think of a bug that would show up in one case but not in the other.</p>
<p>We should therefore try to choose tests that are as different from each other as possible, so that we force the code we're testing to execute in all the different ways it can. Another way of thinking about this is that we should try to find <a href="../../gloss.html#boundary_case">boundary cases</a>. If a function works for zero, one, and a million values, it will probably work for eighteen values.</p>
<p>Using boundary values as tests has another advantage: it can help us design our software. To see how, consider this test case for our rectangle area function:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> test_inverted_rectangle():
    <span class="kw">assert</span> rectangle_area([<span class="dv">1</span>, <span class="dv">5</span>, <span class="dv">5</span>, <span class="dv">2</span>]) == -<span class="fl">12.0</span></code></pre>
</div>


<div>
<p>Is that test correct? I.e., are rectangles with <code>x1&lt;x0</code> or <code>y1&lt;y0</code> legal, and do they have negative area? Or should the test be:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> test_inverted_rectangle():
    <span class="kw">try</span>:
        rectangle_area([<span class="dv">1</span>, <span class="dv">5</span>, <span class="dv">5</span>, <span class="dv">2</span>])
        <span class="kw">assert</span> <span class="ot">False</span>, <span class="st">&#39;Function did not raise exception for invalid rectangle&#39;</span>
    <span class="kw">except</span> <span class="ot">ValueError</span>:
        <span class="kw">pass</span> <span class="co"># rectangle_area failed with the expected kind of exception</span>
    <span class="kw">except</span> <span class="ot">Exception</span>:
        <span class="kw">assert</span> <span class="ot">False</span>, <span class="st">&#39;Function did not raise correct kind of exception for invalid rectangle&#39;</span></code></pre>
</div>


<div>
<p>The logic in this second version may take a moment to work out, but the idea is straightforward: we want to check that <code>rectangle_area</code> raises a <code>ValueError</code> exception if it's given a rectangle whose upper edge is below or to the left of its lower edge.</p>
<p>Here's another test case that can help us design our software:</p>
</div>


<div>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">def</span> test_zero_width():
    <span class="kw">assert</span> rectangle_area([<span class="dv">2</span>, <span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">8</span>]) == <span class="dv">0</span></code></pre>
</div>


<div>
<p>We might decide that rectangles with negative areas aren't allowed, but what about rectangles with zero area, i.e., rectangles that are actually lines? Any actual implementation of <code>rectangle_area</code> will do <em>something</em> with one of these; writing unit tests for boundary cases is a good way to specify exactly what that something is.</p>
<p>Unit tests are actually such a good way to define how functions ought to behave that many programmers use a practice called <a href="glossary.html#test_driven_development">test-driven development</a> (TDD). Instead of writing code, then figuring out how to test it, these programmers:</p>
<ol style="list-style-type: decimal">
<li>write some unit tests for a function that doesn't exist yet,</li>
<li>write that function,</li>
<li>modify it until it passes all of the tests, then</li>
<li>clean up the function, i.e., make it more readable or more efficient without breaking any of the tests.</li>
</ol>
<p>The mantra often used during TDD is &quot;<a href="../../rules.html#red-green-refactor">red, green, refactor</a>&quot;: get a red light (i.e., some failing tests), make it turn green (i.e., get something working), and then clean it up by refactoring. This cycle should take anywhere from a couple of minutes to an hour or so. If it takes longer than that, the change being made is probably too large, and should be broken down into smaller (and more comprehensible) steps.</p>
<p>TDD's proponents argue that it helps people produce better code for two reasons. First, it encourages them to write code in small, self-contained chunks, and to actually write tests for those chunks. Second, it frees them from <a href="../../gloss.html#confirmation_bias">confirmation bias</a>: since they haven't written their function yet, their subconscious cannot steer their testing toward proving it correct rather than finding errors.</p>
<p>Empirical studies of TDD have had mixed results: some have found it beneficial, while others have found no effect. But even if you don't use it day to day, trying it a few times helps you learn how to design functions and programs that are easier to test.</p>
</div>


<div>
<h3 id="challenges">Challenges</h3>
<ol style="list-style-type: decimal">
<li><p>Write a function called <code>something</code> that passes the following unit tests: ``` def test_empty(): assert something([]) == []</p>
<p>def test_single_value(): assert something(['a']) == []</p>
<p>def test_two_values(): assert something(['a', 'b']) == [('a', 'b')]</p>
<p>def test_three_values(): assert something(['a', 'b', 'c']) == [('a', 'b'), ('a', 'c'), ('b', 'c')] ```</p></li>
</ol>
</div>

## Next Steps


<div>
<p>We have now seen the basics of building and testing Python code in the IPython Notebook. The last thing we need to learn is how to build command-line programs that we can use in pipelines and shell scripts, so that we can integrate our tools with other people's work. This will be the subject of our next and final lesson.</p>
</div>

---
layout: lesson
root: ../..
---

# Parallel programming with Python's multiprocessing library

In this lesson, you will learn how to write programs that perform
several tasks in parallel using Python's built-in <a
href="https://docs.python.org/2.7/library/multiprocessing.html"
target="_blank">multiprocessing</a> library. You are encouraged to
consult the <a
href="https://docs.python.org/2.7/library/multiprocessing.html"
target="_blank">documentation</a> to learn more, or to answer any
detailed questions as we will only cover a small subset of the
library's functionality.

This lesson assumes you have completed the [Programming with
Python](../../novice/python/index.html) lessons or have some
familiarity with using functions, loops, conditionals, command line
argument processing, NumPy, and matplotlib (though don't worry if you
don't know NumPy and matplotlib well).

> The code in this lesson was written against Python 2.7, but should work 
> with little or no modification under Python 3.

## Objectives

- Understand the major parallel programming models
- Learn how to implement simple multiprocessor parallelization
- Evaluate the performance speedup gained from parallelization

## Parallel programming models

Parallel programming has been important to scientific computing for
decades as a way to decrease program run times, making more complex
analyses possible (e.g. climate modeling, gene sequencing,
pharmaceutical development, aircraft design).

One of the motivations for parallel programming has been the
diminishing marginal increases in single CPU performance with each new
generation of CPU (see <a
href="http://www.gotw.ca/publications/concurrency-ddj.htm"
target="_blank">The Free Lunch is over</a>).  In response, computer
makers have introduced multi-core processors that contain more than
one processing core.  It's not uncommon for desktop, laptop, and even
tablets and smart phones to have two or more CPU cores.

### GPU and heterogeneous computing

In addition to multi-core CPUs, Graphics Processing Units (GPU) have
become more powerful recently (often having hundreds of parallel
execution units). GPUs are increasingly being use not just for drawing
graphics to the screen, but for general purpose computation.  GPUs can
even be used in conjunction with CPUs to boost parallel computing
performance (this is known as heterogeneous computing).  GPUs are best
suited to applying the same computation over arrays of data, while
CPUs are better suited to algorithms that include conditional branches
of execution (e.g. different paths through the code based on if
statements). Emerging tools, such as <a
href="http://en.wikipedia.org/wiki/OpenCL" target="_blank">OpenCL</a>
help coordinate parallel execution across heterogeneous computer
platforms that contain differing CPU and GPU resources.

### CPU multi-processing / Distributed-memory parallelism

Unfortunately, most computer programs cannot take advantage of
performance increases offered by GPUs or multi-core CPUs unless we
modify these programs.  In this lesson we will develop an example
program that uses the Python multiprocessing library to simultaneously
execute tasks on a multi-core CPU, decreasing the overall program run
time.

Multi-processing is one way to execute tasks in parallel on a
multi-core CPU, or across multiple computers in a computing cluster.
In multi-processing, each task runs in its own process; each program
running on your computer is represented by one or more processes. For
example, if you are running a web browser, a text editor, and an
e-mail client, you are running at least three processes (and likely
many more background processes). On modern operating systems, each
process gets its own portion of your computer's memory, ensuring that
no process can interfere with the execution of another (though tools
like <a href="http://en.wikipedia.org/wiki/Message_Passing_Interface"
target="_blank">MPI</a> and even Python's multiprocessing library can
be used to share data between processes running locally or in
distributed computing environments).

### CPU multi-threading (shared memory parallelism)

Multi-processing is not to be confused with multi-threading, or
shared-memory parallelism. In modern operating systems, each process
contains one or more threads of execution.  These threads share the
same portion of memory assigned to their parent process; each thread
can run in parallel if the computer has more than one CPU core. For
certain algorithms, multi-threading can be more efficient than
multi-processing (though multi-processing solutions such as MPI often
scale better to larger problem sizes).  However, multi-threading is
more error-prone to program and is generally only done directly by
expert systems programmers.  Tools such as <a
href="http://openmp.org/" target="_blank">OpenMP</a> should in general
be used for multi-threading in scientific computing.

## Example application

In our example application, we'll show how to parallelize the plotting
of randomly generated data using multiple processors.  You can find
the complete solution <a href="plot_rand_mp.py"
target="_blank">here</a>.  Key portions of the code will be discussed
below.  

Due to the design of the multiprocessing library, the code portions
generally will not work in interactive interpreters such as IPython.
Consult the <a
href="https://docs.python.org/2.7/library/multiprocessing.html"
target="_blank">documentation</a> for details. To run the example
application, download it <a href="plot_rand_mp.py"
target="_blank">here</a>, and then, from your command line interface,
type:

    python plot_rand_mp.py --help

for usage instructions. We suggest you create an output directory
called "temp" to store the plots in (to make deletion easier).

### Defining the work to be done

Before running code in parallel, we need to define the work to be
done. In multiprocessing, this work is defined as a *callable* object,
usually a Python function.  Here is the function we'll use:

    def plotData(outputDir, plotNum):
        outFilename = "plot_%d.pdf" % (plotNum,)
        outFilepath = os.path.join(outputDir, outFilename)
        
        # Plot some random data
        # Adapted from: http://matplotlib.org/examples/shapes_and_collections/scatter_demo.html
        N = 500
        # First we need to re-initialize the random number generator for each worker
        # See: https://groups.google.com/forum/#!topic/briansupport/9ErDidIBBFM
        np.random.seed( int( time() ) + plotNum )
        x = np.random.rand(N)
        y = np.random.rand(N)
        area = np.pi * (15 * np.random.rand(N))**2 # 0 to 15 point radiuses

        print("\tMaking plot %d" % (plotNum,) )
        plt.scatter(x, y, s=area, alpha=0.5)
        plt.savefig(outFilepath)
        # Clear figure so that the next plot this worker makes will not contain
        # data from previous plots
        plt.clf() 
        
        return (plotNum, outFilepath)

This function takes as input the path of the output directory to which
plots should be saved, and the unique identifier of the plot we are
creating; the function returns the path of the PDF file to which the
plotted data were written, as well as the plot identifier.  The reason
for returning the plot identifier will be described below.

Don't worry if you are not familiar with NumPy or matplotlib.  All
we're doing here is making a scatter plot of random data.  As is, this
is not a very useful task, however it could easily be extended to plot
actual data.

**The key thing to note about this function is that when executing code
in parallel environments, weird behavior can result unless special
care is taken in your code** (even when doing multi-processing
programming where each process has its own memory space).  In this
case, there are two special things we must do.

First, we must force NumPy's random number generator to
re-initialize for each call of the parallel function, this is
accomplished by:

    np.random.seed( int( time() ) + plotNum )

Where we use the current system time and the plot identifier as a *seed*
for the random number generator.  If we don't do this, each worker
process will use the same random number generator as it makes the
plots it is responsible for.  Thus, all plots made by Worker 1 would
contain the same sequence of "random" data.

Second, we need to tell matplotlib to clear the current figure
context after each plot is generated:

    plt.clf()

Otherwise, each plot made by Worker 1 would contain the data from all
previous plots created by Worker 1.

### Creating a pool of workers

Now that we have defined the work to be done, we can write the code to
execute in tasks in parallel.  There are several ways to use Python's
multiprocessing library to execute tasks in parallel.  In this lesson
we'll use a <a
href="https://docs.python.org/2.7/library/multiprocessing.html#using-a-pool-of-workers"
target="_blank">pool of worker processes</a>.

Assuming we import the multiprocessing library as follows:

    import multiprocessing

we can create a pool by:

    pool = multiprocessing.Pool( args.numProcessors )

In our example, we're passing in the number of processors to use via
an optional command line argument called `numProcessors`.  If the user
doesn't specify the number of processors on the command line, the
default value is determined using the cpu_count() method of
multiprocessing:

    multiprocessing.cpu_count()

> We're using the <a
> href="https://docs.python.org/2.7/library/argparse.html"
> target="_blank">argparse</a> library, a standard part of Python 2.7
> and later, to manage command line arguments.

### Build a list of tasks

Okay.  We have a pool of workers, and a we have a description of how
workers should perform a task in the abstract.  Before we can run any
tasks we need to make a list of specific tasks to be performed
(i.e. plots to be created).  We do this as follows:

    tasks = []
    plotNum = 0
    while plotNum < args.numPlots:
        plotNum += 1
        tasks.append( (args.outputDir, plotNum, ) )

Each task is simply a tuple of the path where plot PDF files should be
saved and as well as the current plot identifier.  We store these
tuples in a list called `tasks`, thus our tasks are described as a
list of tuples.

### Run tasks in parallel

To run our tasks in parallel across all workers, we use the
[`apply_async`](https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.pool.multiprocessing.Pool.apply_async)
method of the worker pool class:

    results = [pool.apply_async( plotData, t ) for t in tasks]

here we call `apply_async` from a list comprehension for convenience, but
you could also iterate over the tasks:

    results = []
    for t in tasks:
        results.append( pool.apply_async( plotData, t) )

In either case, we pass our `plotData` function as well as the
individual task tuple to `plot_async`.  The multiprocessing library
will take care of dispatching our tasks to each worker so that the
tasks can be performed in parallel.

### Getting results

Once we've dispatched all tasks we'll want to get the results returned
by each task and do something with those results:

    for result in results:
        (plotNum, plotFilename) = result.get()
        print("Result: plot %d written to %s" % (plotNum, plotFilename) )

We get the results for each task by calling the `get` method on that
task's result object.  Calls to `get` will wait until there are
results available (this is called "blocking").  You can optionally set
a timeout after which an exception will be raised if a result is not
returned (this is useful if your task involves network activity).

Remember that our task function `plotData` returns a tuple of the plot
identifier as well as the filename of the plot generated.  You might
be asking yourself why would we need to return the plot identifier
when the plot identifier was passed into the worker function, and did
not change in the worker function.  This is necessary because the
worker pool makes no guarantee that workers will complete their tasks
in any particular order.  Indeed, in a more realistic application, each
tasks' workload may vary, so there is no way to know how long each task
will take to complete.

In our example we simply print out the plot identifier and the name of
file produced.  If the worker function were performing a numerical
computation, we could instead do something with that result, such as
adding the result to the results obtained from other tasks.

## Typical output

Here is the output that our example program should produce:

    $ ./plot_rand_mp.py -o temp -n 4
    Making 4 plots of random data using 8 processors...
           Making plot 1
           Making plot 2
           Making plot 3
           Making plot 4
    Result: plot 1 written to temp/plot_1.pdf
    Result: plot 2 written to temp/plot_2.pdf
    Result: plot 3 written to temp/plot_3.pdf
    Result: plot 4 written to temp/plot_4.pdf


## Speedup

Whenever we decide to parallelize a task, it is important to evaluate
the runtime savings and efficiency of our parallel program.  <a
href="http://en.wikipedia.org/wiki/Speedup" target="_blank">Speedup
and efficiency</a> are common ways of doing this.

> Before decided parallelize or otherwise optimize a program, you
> should first use a <a
> href="http://en.wikipedia.org/wiki/Profiling_(computer_programming)"
> target="_blank">profiler</a> to identify what proportion of runtime
> your program is spending in each function or component. This will
> help you to prioritize optimization or parallelization to maximize
> runtime reductions.

Speedup (Sp) is defined as the ratio of runtime for a sequential
algorithm (T1) to runtime for a parallel algorithm with *p* processors
(Tp). That is, Sp = T1 / Tp. Ideal speedup results when Sp = p.
Speedup is formally derived from <a
href="http://en.wikipedia.org/wiki/Amdahl's_law"
target="_blank">Amdahl's law</a>, which considers the portion of a
program that is serial vs. the portion that is parallel when
calculating speedup.

Efficiency (Ep) is defined as the ratio of speedup for p processors (Sp) to
the number of processors p, or Ep = Sp / p.

Below is a graph comparing the speedup and efficiency that resulted when
running the example program to create 64 plots using a range of
processors on computer with a 4-core processor (each data point
represents the average of three runs).
![Speedup plot](speedup.png "Plot of speedup and efficiency of example parallel program")

> Note that the comparison here is not quite fair because a sequential
> version of the program was not written.  The runtime for the
> sequential version were approximated by running the parallel version
> using a single processor.  The single processor runtime was likely
> longer than that of a sequential version of the same program due to
> the overhead needed to create the worker pool and dispatch a single
> task to a worker.  Thus these results slightly overstate the
> parallel speedup and efficiency.

First note that the slope of the speedup curve is low, and grows
farther away from the ideal speedup line as the number of processors
increases.  Some divergence between actual and ideal speedup is
typical.  However our example program isn't strictly computational and
involves input/output (I/O) to the filesystem (i.e. writing the plot).
I/O-bound tasks do not typically parallelize well because I/O
resources (e.g. disks, network, memory) are shared across processors,
and because I/O operations, especially to disk, usually take orders of
magnitude more time to complete than computational operations.
However, even I/O-bound tasks can see moderate speedup due to the
effects of "pipelining" (see <a
href="http://en.wikipedia.org/wiki/Pipeline_(computing)"
target="_blank">here</a>).

Efficiency, which ranges from 0 to 1, is a bit easier to interpret
than speedup. With two processors, efficiency was over 90% (i.e. our
two workers were 90% utilized, doing useful work far more than they
were waiting for I/O). As processors were added to the worker pool,
the efficiency dropped, which is expected for a task dependent on I/O.
However, the speedup continued increasing up to and including eight
processors; that is, runtimes continued to drop until we added more
than eight workers.  Thus, even though efficiency was decreasing, we
were still able to save time by adding more workers, up to a point.
Efficiency is especially important in enterprise computing
environments, where concerns like providing equitable access shared
resources and reducing energy consumption may dictate the use of fewer
processors to maintain higher processor utilization.

> Despite our computer having only 4-cores, why did runtime continue
> to decrease between four and eight processors?  This was in part
> because the computer we ran the tests on had a feature call
> "HyperThreading."  HyperThreading is the marketing name of a
> technology that enables each physical core of a CPU to appear as two
> virtual cores to your operating system.  These virtual cores can
> improve performance, but are rarely as effective as additional
> physical cores.

## Communication between the processes

Running a computation in multiple processes requires some
communication between these processes. One of the nice aspects of
multiprocessing in Python is that most of the time you do not need to
know *how* this communication is handled: it just works. However, it
is useful to understand the basics of this mechanism in order to
figure out how to solve two kinds of problems: unexpected errors, and
bad performance.

Communication between processes takes the form of streams of bytes
that travel through specific communication channels. To send an object
from one process to another, Python has to convert it to a stream of
bytes, and assemble the object back at the receiving end.  Python's
mechanism for doing these conversions was originally designed for
storing objects in files and is implemented in the <a
href="https://docs.python.org/2.7/library/pickle.html"
target="_blank">pickle</a> module. Every argument that is passed to a
Python function running in another process is pickled and then
unpickled. The result of the function undergoes the same process on
its way back.

There are two things you need to know about pickle in the context of
multiprocessing. First, most objects can be pickled but some cannot.
Second, pickling and unpickling take time and can sometimes add
considerable overhead to your multiprocessing.

The objects that cannot be pickled come in two varieties: those for
which pickling does not make sense, and those for which it has simply
not been implemented. A good example for the first category is file
objects. The second category contains mainly object types defined in
extension modules whose authors didn't implement pickling. If you use
an old release of NumPy, you may discover that its array-aware
functions are not picklable, making it impossible to use such a
function directly as a task in multiprocessing. For Python's built-in
objects, there is one important restriction that is due to the
implementation details of pickle: functions and classes can only be
pickled if they are defined at the top level of a module. This means,
for example, that if you define a function inside another function,
you cannot pickle it and thus not pass it to a multiprocessing task.

The performance implications of pickling are rather obvious: you
should try to pass as few arguments as possible to your tasks, and
make sure you pass no more data than you really need to.  For example,
rather than passing a huge list and the index of the item that your
taks is supposed to process, you should pass only that item.

## Challenge

Run the <a href="plot_rand_mp.py" target="_blank">example
application</a> on your computer several times.  Each time, vary the
number of processors to use and note how the computation efficiency
varies.  You can use the Unix `time` program to measure execution
times.

## Key Points

- CPU multi-processing is a parallel programming technique that can
  harness the power of modern computers to help you perform more
  analyses more quickly.

- The Python multiprocessing library allows you to create a pool of
  workers to carry out tasks in parallel

- Tasks are easy to describe using Python functions

- Care needs to be taken when executing code in parallel environments
  to avoid strange program behavior and wrong computations

- You can combine results from individual tasks allowing each worker
  to share in the computational load

- It is important to use profiling before optimizing computer programs

- Metrics such as speedup and efficiency aid in evaluating the
  performance and utility of parallel programs

## Next steps

Using the <a href="plot_rand_mp.py" target="_blank">example
program</a> as a starting point, you should be able to create your own
parallel program that will save you time and help you to get more
performance out of your existing computer hardware (which you've
already paid for!).

---
layout: lesson
root: ../..
title: Programming with Python
---
This lesson assumes that you already understand basic programming concepts
and are either familiar with,
or can quickly master,
the basic elements of Python.

<div class="toc" markdown="1">

1.  [Introduction](01-intro-python.html)
2.  [Modularization and Documentation](02-modularization-documentation.html)
3.  [Getting the Right Answer](03-qa.html)
4.  [Parallel programming with the multiprocessing library](04-multiprocessing.html)

</div>


# Exercise 02

1. Take the `iris` dataset. Using `Species` as the indicator variable, convert the wide dataset to long such that it appears as below:

```
  Species     variable value
1  setosa Sepal.Length   5.1
2  setosa Sepal.Length   4.9
3  setosa Sepal.Length   4.7
4  setosa Sepal.Length   4.6
5  setosa Sepal.Length   5.0
6  setosa Sepal.Length   5.4
```

2.  Save this dataset to disk as `"species1.csv"`. Duplicate the previous function call and save it again as `"species2.csv"``

Write code that does the following:

Create a list of length two containing "species1.csv" and "species2.csv". 
Now write a `lapply` function to read both csv files using write.csv into a list.

__Advanced version__
* Reads all file names in your working directory with a `.csv` extension.  
* Treating that as a list, run the `read.csv` function on each item so you get a list of size 2 that contains all the data.

*Note: If this is a hard problem. Work with your neighbor*

3. With the list from the previous result, write a `lappy or llply` function call that will retrieve row number 1 from each dataset and return that back to a list.

4. Read the `gapminderDataFiveYear.txt` dataset in the data folder into an object. Split the data by continent and country, find the year with the highest life expectancy for each combination and return those results back into a data.frame. 

Hint: You will write a anonymous function (an unnamed function) that will exist only inside one of plyr's function call. 

e.g. 
```
ddply(iris, .(Species), function(x) {
    x[1, ]
})
# This trivial function returns the first row of each species. Note that I did not name this function.
```

You will have to:
    split by continent and country
    Inside your anonymous function find the year with the highest life expectancy
    return that record back.

Advanced version of this question: Also return the year with highest population and highest per capita gdp. So you'll return 3 rows per country. 


5. Read the `mammals.csv` file into a data.frame. Use `ddply` to split the dataset by limb morphology, then write each file to a separate text file named by limb.

Hints: Use `unique` inside your anoynymous function to get a unique name.
Use `paste` to create a filename. e.g. `paste(unique(x$Limb_morphology), ".csv", sep="")`

Pass this variable to the `file` argument in `write.csv`





# Section 03 - Data manipulation in R  

In this section we will work with a couple more example datasets and use it to clean the data, build summaries, and learn the basic of writing functions. 

| Topic | exercise |
| ------ | --------|
| File I/O in R | exercise |
| The apply family of functions | exercise |
| Using plyr and reshape to restructure your data | exercise |





# Data visualization exercises

See `PDF` for exercises 1 and 2.

3. Write a function to take the following inputs:
    - iris species
    - plot type (scatter plot, or barplot)

Then read that species dataset from the csv folder, create the appropriate ggplot and return that object.

If a different species is input, return an error.

**Bonus:** Add plot title as a function argument. Include a default.


# Data visualization with ggplot2

Author: [Karthik Ram](mailto:karthik.ram+ggplot2@gmail.com), [Naupaka Zimmerman](naupaka@gmail.com) 

These slides will cover the introductory material for the workshop. Please open the `ggplot.pdf` in this folder. All the R code in the slides are in the `ggplot.R` file. 


[![slides](slides.png)](https://raw.github.com/karthik/esa_data_viz/master/introduction/slides.png)


----

Slides based on a talk [originally run on Berkeley campus](https://github.com/karthik/ggplot-lecture) on April 7th. If you'd like to generate this presentation locally, first install the lastest version of `knitr`

```coffee
install.packages("knitr")
```

Then Run

```coffee
make slides
```  

Note: You'll need to have LaTex setup locally. See [additional_software] page in the root of this repository.
 
# License  
<a rel="license" href="http://creativecommons.org/licenses/by/2.0/">Creative Commons Attribution 2.0 Generic License</a>.


# Functions exercise.

1. Write a function which takes a numeric vector as argument and calculates the mean of the vector.

2. Write a function which takes a single numeric value X as argument and returns a logical value which is TRUE if X is larger than 15, or FALSE otherwise.

3. Extend the previous function by including an extra argument which sets the threshold (i.e. 15 in the previous question).

4. Create a vector with values between 1:100. Take the function from question 1 and use it in an `sapply` (If I haven't covered `sapply` yet, wait till the next section to do this) and elements larger than 72 in the vector.

*Reminder: use the red sticky if you're stuck or need other help*
---

# Functions and control structures

In this section we'll learn how to write functions and deal with various types of control flows.

* Control structures
* Introduction to writing functions
* Basics of writing functions in R
* Scoping rules


---
layout: lesson
root: ../..
title: Programming with R
level: intermediate
---
This lesson contains a Rmd file with code for and descriptions of several useful features of the `data.table` library, which is much much faster than base R for a range of data processing tasks. 

The lesson should take around **15 minutes** to work though, more if there is discussion of the special `data.table` syntax.  For a similar library, also useful to speed up table calculations, students may also want to check out Hadley Wickam's recently released [dplyr library](http://blog.rstudio.org/2014/01/17/introducing-dplyr/).


## Additional software to install

**Make** *installation necessary only for Windows*

Linux and Mac users already have Make pre-installed. Windows users will need to install Make separately to work with Gitbash. Please follow these instructions below if you have a windows laptop. If you run into trouble please ask one of the helpers to assist you.

[Installing Make with mysysgit (also known as GitBash)](http://msysgit.github.io/)

**Pandoc** *Installation required for everyone*

Depending on time and progress on the proposed schedule, we may get to converting parsed markdown documents from markdown to publication ready pdfs. To acheive this you'll need to have a Latex interpreter installed on your laptop.

* To convert documents to PDF you'll need LaTex installed. 

**Latex** *Only for Windows and Mac users*

[For Mac users](http://www.tug.org/mactex/morepackages.html) For today please just install [BasicTex](http://mirror.ctan.org/systems/mac/mactex/mactex-basic.pkg)  
[For Windows users](http://miktex.org/download) ~ 155 mb

Note: These are very large files and not something we can install on the limited internet we will have during the workshop. Please install on a faster connection (preferably at the end of the first day). 

Once Tex is installed, download `Pandoc` to use as a commmand-line tool for document conversion.




# Exercise for session 01

1. What is wrong with this code example?

```coffee
df <- data.frame(id = c("Jason","Paul","Mary", "Robert","Toby","Nina","Robin","James"), x = 1:10, y = rnorm(10))
```

2. Fix each of the following common data frame subsetting errors:

```coffee
mtcars[mtcars$cyl = 4, ]
# Exclude only rows 1 through 4
mtcars[-1:4, ]
# Return only rows for cylinders less than 5
mtcars[mtcars$cyl <= 5]
# Return only rows for cylinders that are 4 or 6.
mtcars[mtcars$cyl == 4 | 6, ]
```

3. Why does `mtcars[1:20]` return a error? How does it differ from the similar `mtcars[1:20, ]`?


4. Load the `ggplot2` package. There should be a dataset called `diamonds`. You can verify that by typing in `data(diamonds)`

* How big is this dataset (number of rows and columns)?
* Create a new data frame called `small_diamonds` that only contains rows 1 through 9 and 19 through 23. You can do this in one or two steps.

5. Given a linear model

```coffee
mod <- lm(mpg ~ wt, data = mtcars)
```

extract the residual degrees of freedom.


----


# Introduction to the R language and R ecosystem

For the first hour (or perhaps a little longer), we'll go over some of the fundamentals of the R language. Some or all of these topics might be a refresher for you depending on your experience. 

* [Basics of R]
* [Data types and structures in R]
* [Subsetting data]
* [Best practices for using R]
* [Seeking help in R]
* [A walk through of using RStudio] *Not covered but use as a reference*.






---
layout: lesson
root: ../..
title: Programming with R
level: intermediate
---

This README is meant for Software Carpentry instructors planning to teach a intermediate level R bootcamp. Do not commit this readme as-is without editing.

This `master` set is based on material from a [2-day bootcamp](https://github.com/swcarpentry/2013-10-09-canberra) ([@karthik](https://github.com/karthik)) ran in Canberra, Australia in October 2013. The material is meant to cover the full range of topics typically covered in a regular Python bootcamp. 

Shell and Git are intentionally missing from this set. Please consult other lesson folders for those topics.

| Topic | Materials |
| ------ | -------- |
| Basics | Introduction to R, data types, best practices, seeking help, Using the RStudio IDE |
| Functions | Basics of control flow, scoping rules and functions in R |
| Data Manipulation | A full introduction to the apply family, dealing with IO in R, and a full hands on example of cleaning messy data in R |
| Data Visualization | A complete introduction to `ggplot2` |
| Testing | Documentation with `roxygen2`, Unit testing with `testthat`|
| Reproducible Research | knitr, make |

## Complete list of lessons
| Topic | Material |
| ----  | ------  |
| __R Basics__ |  [01-basics-of-R.Rmd](R-basics/01-basics-of-R.Rmd) <br> [02-data-structures.Rmd](R-basics/02-data-structures.Rmd) <br> [03-best-practices.Rmd](R-basics/03-best-practices.Rmd) <br> [04-seeking-help.Rmd](R-basics/04-seeking-help.Rmd) <br> [05-subsetting.Rmd](R-basics/05-subsetting.Rmd) <br> [06-vectorization.Rmd](R-basics/06-vectorization.Rmd) <br> [best-practices.Rmd](R-basics/best-practices.Rmd) <br> [rstudio-basics.Rmd](R-basics/rstudio-basics.Rmd) |
| __Data Manipulation__ | [00-messy_data.Rmd](data-manipulation/00-messy_data.Rmd) <br> [01-input-output.Rmd](data-manipulation/01-input-output.Rmd) <br> [02-apply-family.Rmd](data-manipulation/02-apply-family.Rmd) <br> [03-split-apply.Rmd](data-manipulation/03-split-apply.Rmd) <br>  |
| __Functions and Control Structures__ |  [01-functions.Rmd](functions/01-functions.Rmd) <br> [02-control_structures.Rmd](functions/02-control_structures.Rmd) <br> [03-scoping_rules.Rmd](functions/03-scoping_rules.Rmd) <br>  |
| __Data Visualization__ <br> _If you make changes, only edit the `.Rnw` file. <br>Then knit and tagle to generate other two files_ |  [ggplot.R](data-visualization/ggplot.R) (tangled code from source)  <br> [ggplot.Rnw](data-visualization/ggplot.Rnw) (source) <br> [ggplot.pdf](data-visualization/ggplot.pdf) (rendered) <br>  |
| __Reproducible Research__ |  [knitr.Rmd](reproducible-research/knitr.md) <br> [make.md](reproducible-research/make.md) <br> [markdown.md](reproducible-research/markdown.md) <br>  |
| __Testing and Documentation__ | [documentation.md](testing-documentation/documentation.md) <br> [testing.Rmd](testing-documentation/testing.Rmd) <br>   |

__Note:__ _You will not be able to teach all topics in 2 days, especially since the above table does not include Git or Shell. So you will have to drop Reproducible research or Testing/documentation (or both) depending on audience skill level and interest._


## Package installation

Participants will require the following packages. Please transfer these instructions to your installation instructions page.

```coffee
install.packages("devtools")
# You'll need other non-R dependencies before you can install devtools. Please see the additional_software.md page for more instructions.
install.packages(c("reshape2", "plyr", "ggplot2", "knitr", "testthat", "assertthat", "stringr", "pander"))
```

## Notes for instructor teaching with this material.

* Please pull from the `bc` repo and decide what topics within R you would like to cover. Then retain the necessary folders and delete the rest. It might also help to number section folders in the order in which you might cover the material.

* Next, knit all of the `Rmd` files in each folder to make sure they parse correctly. Please avoid doing this the night before you teach in case any material needs to be updated to keep up with package changes.

* Commit the rendered files to your repo (NOT `bc`) so you have material to show on the projector while you teach. You might also consider doing a sed replacement for **```r** to  **coffee** for better syntax highlighting. 

* If you decide to teach Make in the context of `knitr`, please ensure that Make is correctly installed on all computers (see additional software under R-basics) section. Also keep in mind that the material here is intentionally sparse. There will be material in other lesson folders with more details that you might want to pull in.


# `knitr` and `make` exercise


# Literate programming in R using `knitr`

It's easy to generate reports dynamically in `R`. Literate programming is a paradigm that originally came from Donald Knuth (Knuth, 1984).

**Basic idea:** Write **data** + **software** + **documentation** (or in this case manuscripts, reports) together.

Analysis code can be divided into text and code "chunks". Doing so allows us to extract the code for machine readable documents (technically referred to as a `tangle`) or produce a human-readable document (also called `weave`).

Literate programming involves three main steps:  

1. Separate the narrative from the code
2. Execute source code and return the results.
3. Combine the results from the source code with the original narratives to produce a final document.

## Why this is important?
Results from scientific research have to be easy to reproduce so others can verify results making them trustworthy. Otherwise we risk producing one off results that no one outside the original research group can reproduce. In this lesson we will learn reproducible research, which is one of the by products of dynamics report generation. However, this process alone will not always guarantee reproducibility. 


## Installing `knitr`

```coffee
# Installing knitr is quite easy. 
install.packages("knitr", dependencies = TRUE)
install.packages("pander") # Pander is a useful package for formatting tables in markdown.
```

Knitr supports a variety of documentation formats including `markdown`, `html` and `LaTeX`. It also allows for easy export to `PDF` and `HTML`.

## What is markdown?

Markdown is an incredibly simple semantic file format, not too dissimilar from .doc, .rtf, or .txt. Markdown makes it easy for even those without significant knowledge of markup languages like html or LaTex to write any sort of text (including with links, lists, bullets, etc.) and have it parsed into a variety of formats. To learn more about the basics of markdown, peruse this [short tutorial on the format](markdown.md).

* [Markdown cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)
* [Original markdown reference](http://daringfireball.net/projects/markdown/basics)


## When to implement reproducibility via literate programming?

* You can do this anytime but it is always best to do this at the beginning of a project. Much like writing unit tests, waiting till after a project is completed is a bad idea. 
* Best used alongside version control like Git. 
* Use software like R where instructions are scripted.
* Never save the output (only raw dataset with pre-processing code. Even cleaned datasets can be discarded but it might help to save them temporarily during intermediate steps).
* Finally, store the data in a non-proporietary format (e.g. `csv` over `xls`). This will ensure that your data will be readable long into the future. 


---

**Good and Bad Practices**

Related: See [best practices](../R-basics/best-practices.Rmd) in the [R-basics folder](../R-basics/).


## Creating a basic knitr document

In RStudio, choose new R Markdown file (easiest way)
or you can create a new text file and save it with extension `.Rmd`.

A basic code chunk looks like this:

<pre><code>```{r}
# some R code
```
</code></pre>
---

You can knit this document using the knit button or do it programmatically using the `knit()` function.

```
library(knitr)
knit("file.Rmd")
```

**What just happened?**

knitr read the Rmd file, then located and ran all the code chunks identified by the backticks, and replaced it with the output of R function calls. If figures are generated from any such calls, they will be included in markdown syntax.  


## Chunk labels

You can also name your code chunks. This allows you to keep all the code in a separate script and just refer to code chunks using meaningful names (e.g. data-processing, analysis, model-fitting, visualization, figures, tables)


```
{r, chunk_name}
```


__Some rules on naming chunks__
* Chunk labels are supposed to be unique id’s in a document.  
* knitr will throw an error if two chunks have the same name.  
* If no chunk names are given, knitr will simply increment from chunk 1, 2,3 etc.

In addition to naming chunks within the curly braces, you can also add a bunch of other options on how that particular code chunk should behave. 

**Other options you can add to the tag**

| Option | Description |
| ------ | ------------ |
| **echo** =   TRUE or FALSE |  to show or hide code.  |
| **eval** =   TRUE or FALSE | to run or skip the code.  |
| **warning** =   TRUE or FALSE | to show or hide function warnings.  |
| **message** =  TRUE or FALSE | to show or hide function R messages.  |
| **results** = "hide"  | will hide results. They will still be executed |
| **fig.height** = | Height of figure  |
| **fig.width** =  | width of figure  |

Once your output markdown files (`.md`) files are generated, you should never edit them because they are automatically generated. Next time you knit the original `.Rmd` files, all the changes in the `.md` file will get wiped out. 

**Write sentences in text with inline output**

```
Include some text `r mean(1:5)`. 
```

**Summarizing output from models.**

<pre><code>```{r fit_model}
library(datasets)
data(airquality)
fit = lm(Ozone ~ Wind + Temp + Solar.R, data = airquality)
```

## Including formatted tables in markdown

```{r showtable, results="asis", echo = FALSE, message = FALSE, eval = FALSE, warning = FALSE}
library(pandoc)
pander(fit)
```</code></pre>

## Global options

Global options are shared across all the following chunks after the location in which the options are set, and local options in the chunk header can override global options.

<pre><code>```{r setoptions, eval = FALSE, echo = FALSE}
options(width = 60, show.signif.stars = FALSE)
opts_chunk$set(echo = FALSE, 
            results = "asis", 
            warning = FALSE, 
            message = FALSE, 
            fig.width = 5, 
            fig.height = 4, 
            tidy = TRUE, 
            fig.align = 'center')
```</code></pre>


## Other Options
**Dealing with long running process**

By adding `cache = TRUE` to a code block definition. After the first run, results will be cached. We'll discuss better ways to acheive the same thing using `Make` in the next section.


## Quick reporting

Generating reports in knitr doesn't always have to involve a laborious `.Rmd ` file where scripts need to be broken down into smaller chunks. Sometimes a user might need a simple report generated very quickly from an existing script. The function `stitch()` in knitr makes it possible to generate nicely formatted reports from R scripts. 

knitr provides a template of the source document with default settings which  allows the user to simply pass any R script into this template (consider this one giant code chunk). knitr will  then compile the template to a report. The package currently has build in support for a range of templates from LateX, html, and markdown. To stitch a report:

```
library(knitr) 
stitch("your-script.R")
```
## Additional chunk options

Chunks are extremely flexible and more options (beyond the ones listed in the table above) can be included in the header. These look exactly like the kinds of arguments that one might pass to standard R functions. In the example below, the chunk will only be executed if the condition (in this case x less than 5) is satisfied. 

```
{r chunk_name, eval = if (x < 5) TRUE else FALSE}
```
This allows your document to be dynamic allowing certain chunks to be executed only when specific conditions are met.



## Error handling

By default `knitr` will not stop execution if it encounters an error. It will continue through to the end of the document and include any errors that arise within chunks. The reason for this behavior is that knitr treats the code as if it were fed directly into the R console. Any errors get printed to the screen and the remaining commands are executed. 

To stop knitr as soon as it encounters an error, one can set an option explicitly:

```coffee
opts_knit$set(stop_on_error = 2L)
```

__Possible options for error handling__

| Option | What it does | 
| ------ | ------------ | 
| * **0L** | do not stop on errors, continue on as if code was pasted into R console  |
| * **1L** | when an error occurs, return the results up to this point, ignore the rest of the code within that particular chunk without reporting any further errors. |
| * **2L** | Completely stop upon encountering the first error. |


## Working with graphics in `knitr`

If you use `ggplot2` from the data visualization section, you can have that easily parsed into your document.

```
library(ggplot2)
p <- qplot(carat, price, data = diamonds) + geom_hex()
p 
# no need to explicitly print(p)
```

---

## Code Externalization

Sometimes it can be rather tedious to include dozens of lines of code in the same file as the narrative. In such cases, one can improve readability by externalizing the code into a separate script and simply calling the chunks at the appropriate locations in a document. The code will get read in and executed at those points. There are two steps to making this happen.

First, read the script using `read_chunk()` at the top of any `.Rmd` file
```
read_chunk("source_code.R")
```

This is usually done in an early chunk such as the first chunk of a document, and we can use the chunk `data-processing` later in the source document:


```
{r, data-processing}
```

Then simply call any chunk as needed simply by using its label. You do not have to include any code between the backticks. 

```
## @knitr data-processing
```

Be sure to leave a blank line between chunks.

--- 

## Pandoc
Pandoc (http://johnmacfarlane.net/pandoc) is a universal document converter. In particular, Pandoc can convert Markdown to many other document formats, including LATEX, HTML, Rich Text Format (*.rtf), E- Book (*.epub), Microsoft Word (*.docx) and OpenDocument Text (*.odt), etc.
Pandoc is a command line tool. Linux users should be fine with it; for Windows users, the command window can be accessed via the Start menu, then Run cmd. Once we have opened a command window (or terminal), we can type commands like this to convert a Markdown file, say, test.md, to other formats:

```
pandoc test.md -o test.html
pandoc test.md -o test.odt
pandoc test.md -o test.rtf
pandoc test.md -o test.docx
pandoc test.md -o test.pdf
```

You can add more options to the basic Pandoc call. To see a full list of options

```
pandoc --help
```

A commonly used option is to add margins using the `-V` argument (in this case 1 inch):

```
pandoc -V geometry:margin=1in test.md -o test.pdf
```

You can use `Make` to automate much of this process. For example, by setting up a series of dependencies, you can have a new document knitted if the underlying data or code changes but not otherwise. 

# Make - automate document writing

`Make` is a simple but powerful tool for managing a build process in a language-independent manner. 

`Make` is a domain-specific language for encoding a dependence graph.

By writing a make file you are instructing the program make to synthesize files from dependencies.

`Make` is widely available in many platforms and can easily be installed in others where it's not available as default (e.g. Windows).

---

# Basic idea of make

file-to-generate : dependency (or dependencies)
    instruction on how to generate the file

Note: The instructions should be indented by a single `<tab>`.


# Process multiple files at once
`$<` are the input files. I.e the .md file in a pandoc command
`$@` is the output file.


# Example make files

* [Makefile from Ethan White's paper](https://github.com/weecology/data-sharing-paper/blob/master/makefile)

## References

* Some notes from [here](http://matt.might.net/articles/intro-to-make/)

# Markdown

An incredibly simple semantic file format, not too dissimilar from .doc, .rtf or .txt. Markdown makes it easy for even those without a web-publishing background to write prose (including with links, lists, bullets, etc.) and have it displayed like a website. 

* [Markdown cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)
* [Original markdown reference](http://daringfireball.net/projects/markdown/basics)

# Reproducible research and make

**Installing**

*knitr*  
```coffee
install.packages("knitr", dependencies = TRUE)  
install.packages("pander")
```

For Make and Pandoc installation instructions please see the [additional-software](../additional_software.md) file.

# Document your code and generate man files with `roxygen2`

**Why document your code?**

Without clear and concise documentation, it becomes impossible for anyone (including yourself after some time) to make sense of what your code does. It's always good practice to write plenty of comments in your functions. In addition to inline comments (anything to the right of a `#`), the package `roxygen2` provides an easy way to document your functions right inside a script and use it to generate help files.

Inline documentation makes it easy to keep everything up-to-date as you work through your code.

![](inline_documentation.png)

After this markup has been processed by `roxygen2` you get a file with the same name and extension `.Rd` (R documentation) in the `man/` folder.

![](what_roxygen_generates.png)

Once you build your package, the final help files that you see when you run `?function_name` look like this.

![](rendered_documentation.png)


---

roxygen2 documentation always begins with this syntax:

```
#'
```

| `roxygen2` document tags | What they mean |
| ------------------  | -------------  |
|  `@title`           | Function title | 
|  `@description`     | A clear yet concise description fo what your package does | 
|  `@details`           | A longer description (optional) | 
|  `@param`           | An arugment that a function takes as input. Usage is `@param arg description` | 
|  `@keywords`           | Any keywords that your function might take | 
|  `@export`           | Adding this tag will make a function visible outside the package. Otherwise it will only be available internally | 
|  `@seealso`           | List any other related functions here. You can also link to them using `\link[package]{function}` | 
|  `@import`           | Import any other packages whose functions you might require here | 
|  `@importFrom`           | Import only specific functions to use | 
|  `@return`           | Type of object that the function returns | 
|  `@examples`           | Simple yet clear examples demonstrating how someone might use your function | 
|  `@docType`           | Function, data or method | 
|  `@name`           | Name of package, method or dataset | 
|  `@author`         | Add authors in this format →  `Firstname Lastname <email@@address.com>` | 

**Additional notes**
* Leave blank lines between sections with an empty `#'`
* Use `\code{text}` to highlight code.
* Use `\strong{text}` to bold any text.
* Use `\emph{text}` to italicize text.
* Links outside your documentation: `\email{email_address}`, `\url{url}`, `\href{url}{text}`

**Example**
A trivial function with documentation.

```coffee
#'addNums
#'
#' Adds two numbers
#' @param x First number. Must be \code{numeric} or \code{integer}
#' @param  y Second number. Must also be \code{numeric} or \code{integer}
#' @param  ... Optional additional arguments
#' @export
#' @keywords addition
#' @seealso subtractNums
#' @return integer or numeric
#' @examples \dontrun{
#' addNums(1, 4)
#' addNums(1.2 , 4.5)
#'}
addNums <- function(x, y, ...) {
    return(x + y)
```



## Exercise:

Please take the next 20 minutes to document the functions we've written so far. We'll discuss this as a group as soon as you are done. 
*Please place a green post-it on your laptop when you're done.*




# Testing exercise

1. Add tests for the functions you've created in this bootcamp.
2. create a folder called `inst/tests` in the package root
3. save tests into a single R script with the word `test` in the title or split them over multiple test. 
4. Group tests where necessary.
5. Run tests from the R prompt using `test_dir()` or `test_file()` from the `test_that` package.
6. Break your code and run the tests again. How do the tests behave now?

*Place your green sticky on your laptop once finished*

---
layout: lesson
root: ../..
title: Permissions
level: intermediate
---
<div class="objectives" markdown="1">
## Objectives
*   FIXME
</div>

## Lesson

<div class="keypoints" markdown="1">
## Key Points
*   FIXME
</div>

<div class="challenges" markdown="1">
## Challenges

1.  FIXME
</div>

---
layout: lesson
root: ../..
title: Working Remotely
level: intermediate
---
<div class="objectives" markdown="1">
## Objectives
*   FIXME
</div>

## Lesson

Let's take a closer look at what happens when we use a desktop or laptop
computer. The first step is to log in so that the operating system knows
who we are and what we're allowed to do. We do this by typing our
username and password; the operating system checks those values against
its records, and if they match, runs a shell for us.

As we type commands, the 1's and 0's that represent the characters we're
typing are sent from the keyboard to the shell. The shell displays those
characters on the screen to represent what we type, and then, if what we
typed was a command, the shell executes it and displays its output (if
any).

<img src="img/direct-shell-usage.png" alt="Direct Shell Usage" />

What if we want to run some commands on another machine, such as the
server in the basement that manages our database of experimental
results? To do this, we have to first log in to that machine. We call
this a [remote login](gloss.html#remote-login), and the other computer a
remote computer. Once we do this, everything we type is passed to a
shell running on the remote computer. That shell interacts runs those
commands on our behalf, just as a local shell would, then sends back
output for our computer to display:

<img src="img/remote-shell-usage.png" alt="Remote Shell Usage" />

The tool we use to log in remotely is the [secure
shell](gloss.html#secure-shell), or SSH. In particular, the command
`ssh username@computer` runs SSH and connects to the remote computer we
have specified. After we log in, we can use the remote shell to use the
remote computer's files and directories. Typing `exit` or Control-D
terminates the remote shell and returns us to our previous shell. In the
example below, we use highlighting to show our interaction with the
remote shell. We can also see that the remote machine's command prompt
is `moon>` instead of just `$`, and that it took Vlad a couple of tries
to remember his password:

~~~
$ pwd
/users/vlad

$ ssh vlad@moon
Password: ***
Access denied
Password: ********
moon> pwd
/home/vlad
moon> ls -F
bin/     cheese.txt   dark_side/   rocks.cfg
moon> exit

$ pwd
/users/vlad
~~~

The secure shell is called "secure" to contrast it with an older program
called `rsh`, which stood for "remote shell". Back in the day, when
everyone trusted each other and knew every chip in their computer by its
first name, people didn't encrypt anything except the most sensitive
information when sending it over a network. However, that meant that
villains could watch network traffic, steal usernames and passwords, and
use them for all manner of nefarious purposes. SSH was invented to
prevent this (or at least slow it down). It uses several sophisticated,
and heavily tested, encryption protocols to ensure that outsiders can't
see what's in the messages going back and forth between different
computers. A [later chapter](security.html) will talk about how this
works, and how secure it really is.

`ssh` has a companion program called `scp`, which stands for "secure
copy". It allows us to copy files to or from a remote computer using the
same kind of connection as SSH. The syntax is a simple mix of `cp`'s and
`ssh`'s. To copy a file, we specify the source and destination paths,
either of which may include computer names. If we leave out a computer
name, `scp` assumes we mean the machine we're running on. For example,
this command copies our latest results to the backup server in the
basement, printing out its progress as it does so:

~~~
$ scp results.dat vlad@backupserver:backups/results-2011-11-11.dat
Password: ********
results.dat              100%  9  1.0 MB/s 00:00
~~~

Copying a whole directory is similar: we just use the `-r` option to
signal that we want copying to be recursive. For example, this command
copies all of our results from the backup server to our laptop:

~~~
$ scp -r vlad@backupserver:backups ./backups
Password: ********
results-2011-09-18.dat              100%  7  1.0 MB/s 00:00
results-2011-10-04.dat              100%  9  1.0 MB/s 00:00
results-2011-10-28.dat              100%  8  1.0 MB/s 00:00
results-2011-11-11.dat              100%  9  1.0 MB/s 00:00
~~~

Now suppose we want to check whether we have already created the file
`backups/results-2011-11-12.dat` on the backup server. Instead of
logging in and then typing `ls`, we could do this:

~~~
$ ssh vlad@backupserver ls results
Password: ********
results-2011-09-18.dat  results-2011-10-28.dat
results-2011-10-04.dat  results-2011-11-11.dat
~~~

SSH has taken the arguments after our username and the name of the
computer we want to run on and passed them to the shell on the remote
computer. Since those arguments are a legal command, the remote shell
has run `ls results` for us and sent the output back to our local shell
for display.

### Creating and Managing Keys

Typing in our password every time we want to access a remote machine is
more than a minor annoyance. Imagine what would happen if we wanted to
run a program on a remote machine for all combinations of three
different parameters. We want to do something like this:

~~~
for density in {20..29}
do
  for viscosity in 0.70 0.71 0.72 0.73 0.74
  do
    for temperature in 0.001 0.002 0.003 0.004 0.005
    do
      ssh vlad@fastmachine ./simulation -x -d $density -v $viscosity -v $temperature
    done
  done
done
~~~

If we actually try to do this, though, we will have to sit at our
keyboard and type in our password 250 times. What we want is a way to
authenticate ourselves to the remote computer automatically.

We can do this using a technique borrowed from [public key
cryptography](gloss.html#public-key-cryptography). More specifically, we
will create a [key pair](gloss.html#key-pair) consisting of a [public
key](gloss.html#public-key) and a [private key](gloss.html#private-key).
These keys have two interesting properties:

1.  Anything that one encrypts, the other can decrypt. For example, if
    we encrypt our password with the private key, only the public key
    can decrypt it, while if we encrypt the contents of a file with the
    public key, only the private key can decrypt it.
2.  Given one key, it is practically impossible to find the other, where
    "practically impossible" means "can't be done in the expected
    lifetime of the universe using any computer we can conceive of"
    (though quantum computing may one day change that—consult your
    nearest wild-eyed physicist for details).

Once we have created a key pair, we can put the public key on the remote
machine we want access to, and keep the private key on our local
machine. So long as they are where SSH expects them to be, it will use
them instead of asking us for a password.

The first step is to create the key pair, which we do using
`ssh-keygen`:

~~~
$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/users/vlad/.ssh/id_rsa): ↵
Enter passphrase (empty for no passphrase): ↵
Your identification has been saved in /users/vlad/.ssh/id_rsa.
Your public key has been saved in /users/vlad/.ssh/id_rsa.pub.
The key fingerprint is: d3:1a:27:38:aa:54:e8:a5:03:db:79:2f:b2:c3:c9:3d
~~~

The `-t rsa` option tells `ssh-keygen` to create an RSA key; there are
other types, but this one is the most commonly used. The "↵" character
indicates a carriage return: we want to put the key in the default
location so that SSH will know where to find it, and we don't want a
passphrase (since the whole point is to be able to log in without typing
a password), so we just type enter in response to both questions.

Let's look in the `.ssh` directory under our home directory:

~~~
$ cd
$ ls .ssh
id_rsa  id_rsa.pub
~~~

The first file, `id_rsa`, contains our private key. Never put this on a
remote machine, send it by email, or share it with anyone (unless you
really want them to be able to impersonate you). The other file,
`id_rsa.pub`, contains the matching public key. Let's copy it onto the
remote machine we want to access:

~~~
$ scp .ssh/id_rsa.pub vlad@fastmachine:id_rsa.pub
Password: ********
id_rsa.pub              100%  1  1.0 MB/s 00:00
~~~

We still have to type our password because the public key isn't in the
right place on the remote machine when we run `scp`. Let's take care of
that by logging into the remote machine and creating a `.ssh` directory
there:

~~~
$ ssh vlad@fastmachine
Password: ********

$ mkdir .ssh
~~~

The next step is to copy the public key into a file in the `.ssh`
directory called `authorized_keys`:

~~~
$ cp id_rsa.pub .ssh/authorized_keys
~~~

The final step is to make sure that permissions are set properly on
`.ssh` and `authorized_keys`. This is an extra security measure: if
anyone but us can read or modify them, SSH will assume that they aren't
secure any longer. The right permissions are:

*   owner has read, write, and execute for the `.ssh` directory;
*   owner has read and write for `.ssh/authorized_keys`; and
*   nobody has anything else.

The correct commands are:

~~~
$ chmod u=rwx,g=,o= .ssh
$ chmod u=rw,g=,o= .ssh/authorized_keys
~~~

We're all set. Let's exit from the remote shell and try running a
command to see if everything is working:

~~~
$ exit
$ ssh vlad@fastmachine pwd
/home/vlad
~~~

Here is what is on both machines after we created and installed the
keys:

<img src="img/public-private-keys.png" alt="Public/Private Keys" />

We can now run `ssh` (and `scp`) from our local machine to the remote
machine without having to authenticate every time. This only works one
way, though: having the public key installed in the remote machine's
`authorized_keys` file does *not* give that machine permission to log in
to our local machine. If we wanted to do that, we would have to generate
a key pair on the remote machine and copy its `id_rsa.pub` to our local
`authorized_keys` file.

What if we want to connect to a machine from several other machines? For
example, suppose we want to be able to copy files to and from the backup
server from our laptop, our desktop computer, and the machine in the
lab. To handle this, we add each machine's `id_rsa.pub` file to the
remote machine's `.ssh/authorized_keys` file. We can do this with an
editor, or more simply use `cat` and `>>` to append one file to another:

~~~
$ scp id_rsa.pub vlad@backupserver
Password: ********

$ ssh vlad@backupserver
Password: ********

$ cat id_rsa.pub >> .ssh/authorized_keys

$ rm id_rsa.pub

$ exit
~~~

<div class="keypoints" markdown="1">
## Key Points
*   FIXME
</div>

<div class="challenges" markdown="1">
## Challenges

1.  FIXME
</div>

---
layout: lesson
root: ../..
title: Variables
level: intermediate
---
<div class="objectives" markdown="1">
## Objectives
*   FIXME
</div>

## Lesson

The shell is just a program, and like other programs, it has variables.
Those variables control its execution, and by changing their values, you
can change how the shell and other programs behave.

Let's start by running the command `set` and looking at some of the
variables in a typical shell session:

~~~
$ set
COMPUTERNAME=TURING
HOME=/home/vlad
HOMEDRIVE=C:
HOSTNAME=TURING
HOSTTYPE=i686
NUMBER_OF_PROCESSORS=4
OS=Windows_NT
PATH=/usr/local/bin:/usr/bin:/bin:/cygdrive/c/Windows/system32:/cygdrive/c/Windows:/cygdrive/c/bin:/cygdrive/c/Python27
PWD=/home/vlad
UID=1000
USERNAME=vlad
...
~~~

As you can see, there are quite a few—in fact, four or five times more
than what's shown on this slide. And yes, using `set` to *show* things
might seem a little strange, even for Unix, but if you don't give it any
arguments, it might as well show you things you *could* set.

Every variable has a name. By convention, variables that are always
present are given upper-case names. All shell variables' values are
strings, even those (like `UID`) that look like numbers. it's up to
programs to convert these strings to other types when necessary. For
example, if a program wanted to find out how many processors the
computer had, it would convert the value of the `NUMBER_OF_PROCESSORS`
variable from a string to an integer.

Similarly, some variables (like `PATH`) store lists of values. In this
case, the convention is to use a colon ':' as a separator. If a program
wants the individual elements of such a list, it's the program's
responsibility to split the variable's string value into pieces.

Let's have a closer look at that `PATH` variable. Its value defines the
shell's [search path](glossary.html#search-path), i.e., the directories
that the shell looks in for runnable programs. If you recall, when we
type a command like `./analyze` that has a specific directory in the
path, the shell runs the program that path specifies. Similarly, if we
type `/bin/analyze`, the shell runs that specific program: we've
provided a specific path, so it knows what to do. But which one should
the shell do if we just type `analyze`?

The rule is simple: the shell checks each directory in the `PATH`
variable in turn, looking for a program with the requested name in that
directory. As soon as it finds a match, it stops searching and runs the
program.

To show how this works, here are the components of `PATH` broken out one
per line:

~~~
/usr/local/bin
/usr/bin
/bin
/cygdrive/c/Windows/system32
/cygdrive/c/Windows
/cygdrive/c/bin
/cygdrive/c/Python27
~~~

On our computer, there are actually three programs called `analyze` in
three different directories: `/bin/analyze`, `/usr/local/bin/analyze`,
and `/users/vlad/analyze`. Since the shell searches the directories in
order, it finds the one in `/bin`, not either of the others. Notice that
it will *never* find the program `/users/vlad/analyze`, since the
directory `/users/vlad` isn't in our path.

Before we explore variables any further, let's introduce one more
command: `echo`. All it does is print out its arguments. This doesn't
sound very exciting, but we can use it to show variables' values. First,
let's make sure it works:

~~~
$ echo hello transylvania!
hello transylvania!
~~~

Now let's try to show the value of the variable `HOME`:

~~~
$ echo HOME
HOME
~~~

That just prints "HOME", which isn't what we wanted. Let's try this
instead: `echo $HOME`:

~~~
$ echo $HOME
/home/vlad
~~~

The dollar sign tells the shell to replace the variable's name with its
value. This works just like wildcards: the shell does the replacement
*before* running the program we've asked for. Thanks to this expansion,
what we actually run is `echo /home/vlad`, which displays the right
thing.

Creating a variable is easy: just assign a value to a name using "=":

~~~
$ SECRET_IDENTITY=Dracula

$ echo $SECRET_IDENTITY
Dracula
~~~

To change the value, just assign a new one:

~~~
$ SECRET_IDENTITY=Camilla

$ echo $SECRET_IDENTITY
Camilla
~~~

Now for the complicated bit. Assignment only changes a variable's value
in the current shell, not in any other shells that are currently
running, or in any shells that are started later. To see what this
means, let's go back and set our secret identity once again:

~~~
$ SECRET_IDENTITY=Dracula

$ echo $SECRET_IDENTITY
Dracula
~~~

Once it's set, let's run a fresh copy of the shell by typing the command
`bash`. Remember, the shell is just another program: asking it to run a
fresh instance of itself in a new process is no different from asking it
to run `ls`, `ps`, or anything else.

~~~
$ bash
~~~

Nothing seems to have happened, but we now have two copies of the shell
running. We don't see anything signalling this on the screen because the
new shell prints the same prompt as the old one, but our keyboard input
and screen output are now tied to the child shell.

<img src="img/shell-on-shell.png" alt="Running a Shell from the Shell" />

If we `echo $SECRET_IDENTITY` in the child shell, nothing is printed,
because the variable doesn't have a value in the child shell: it was
only set in the original shell. But if we exit the child shell and
return to the original, we can see that yes, the variable does exist.
Here's the whole sequence of commands with the ones executed in the
child shell highlighted:

~~~
$ SECRET_IDENTITY=Dracula

$ echo $SECRET_IDENTITY
Dracula

$ bash

$ echo $SECRET_IDENTITY

$ exit

$ echo $SECRET_IDENTITY
Dracula
~~~

If we really want the shell to pass a variable to the processes it
creates, we must use the `export` command. Let's try the secret identity
example again. After giving `SECRET_IDENTITY` a value, we give the shell
the command `export SECRET_IDENTITY`:

~~~
$ SECRET_IDENTITY=Dracula

$ export SECRET_IDENTITY
~~~

Note that it's *not* `export $SECRET_IDENTITY` with a dollar sign: if we
typed that, the shell would expand `SECRET_IDENTITY`, and our `export`
command would actually be `export Dracula`, which would do nothing,
because there's no variable called `Dracula`.

Now let's run a new shell, and type `echo $SECRET_IDENTITY`. There's our
variable. And of course, exiting brings us back to our original shell.

~~~
$ bash

$ echo $SECRET_IDENTITY
Dracula

$ exit
~~~

If we want to set some variables' values automatically every time we run
a shell, we can put the command to do this in a file called `.bashrc` in
our home directory. (The '.' character at the front prevents `ls` from
listing this file unless we specifically ask it to using `-a`: we
normally don't want to worry about it. The "rc" at the end is an
abbreviation for "run control", which meant something really important
decades ago, and is now just a convention everyone follows without
understanding why.) For example, here are two lines in Vlad's `.bashrc`
file, which is in `/home/vlad/.bashrc`:

~~~
export SECRET_IDENTITY=Dracula
export TEMP_DIR=/tmp
export BACKUP_DIR=$TEMP_DIR/backup
~~~

These two lines create the variables `SECRET_IDENTITY` and `BACKUP_DIR`,
give them values, and export them so that any programs the shell runs
can see them as well. Notice that `BACKUP_DIR`'s definition relies on
the value of `TEMP_DIR`, so that if we change where we put temporary
files, our backups will be relocated automatically.

While we're here, it's also common to use the `alias` command to create
shortcuts for things we frequently type. For example, we can define the
alias `backup` to run `/bin/zback` with a specific set of arguments:

~~~
alias backup=/bin/zback -v --nostir -R 20000 $HOME $BACKUP_DIR
~~~

As you can see, aliases can save us a lot of typing, and hence a lot of
typing mistakes.

<div class="keypoints" markdown="1">
## Key Points
*   FIXME
</div>

<div class="challenges" markdown="1">
## Challenges

1.  FIXME
</div>

---
layout: lesson
root: ../..
title: Job Control
level: intermediate
---
<div class="objectives" markdown="1">
## Objectives
*   FIXME
</div>

## Lesson

Our next topic is how to control programs *once they're running*. This
is called [job control](glossary.html#job-control), and while it's less
important today than it was back in the Dark Ages, it is coming back
into its own as more people begin to leverage the power of computer
networks.

When we talk about controlling programs, what we really mean is
controlling *processes*. As we said earlier, a process is just a program
that's in memory and executing. Some of the processes on your computer
are yours: they're running programs you explicitly asked for, like your
web browser. Many others belong to the operating system that manages
your computer for you, or, if you're on a shared machine, to other
users. You can use the `ps` command to list them, just as you use `ls`
to list files and directories:

~~~
$ ps
PID    PPID   PGID   TTY   UID     STIME   COMMAND
2152      1   2152   con  1000  13:19:07   /usr/bin/bash
2276   2152   2276   con  1000  14:53:48   /usr/bin/ps
~~~

Every process has a unique process id (PID). Remember, this is a
property of the process, not of the program that process is executing:
if you are running three instances of your browser at once, each will
have its own process ID.

The second column in this listing, PPID, shows the ID of each process's
parent. Every process on a computer is spawned by another, which is its
parent (except, of course, for the bootstrap process that runs
automatically when the computer starts up).

The third column (labelled PGID) is the ID of the *process group* this
process belongs to. We won't discuss process groups in this lecture, but
they're often used to manage sets of related processes. Column 4 shows
the ID of the terminal this process is running in. Once upon a time,
this really would have been a terminal connected to a central timeshared
computer. It isn't as important these days, except that if a process is
a system service, such as a network monitor, `ps` will display a
question mark for its terminal, since it doesn't actually have one.

Column 5 is more interesting: it's the user ID of the user this process
is being run by. This is the user ID the computer uses when checking
permissions: the process is allowed to access exactly the same things as
the user, no more, no less.

Finally, Column 6 shows when the process started running, and Column 7
shows what program the process is executing. Your version of `ps` may
show more or fewer columns, or may show them in a different order, but
the same information is generally available everywhere.

The shell provides several commands for stopping, pausing, and resuming
processes. To see them in action, let's run our `analyze` program on our
latest data files. After a few minutes go by, we realize that this is
going to take a while to finish. Being impatient, we kill the process by
typing Control-C. This stops the currently-executing program right away.
Any results it had calculated, but not written to disk, are lost.

~~~
$ ./analyze results*.dat
...a few minutes pass...
^C
~~~

Let's run that same command again, with an ampersand `&` at the end of
the line to tell the shell we want it to run in the
[background](glossary.html#background):

~~~
$ ./analyze results*.dat &
~~~

When we do this, the shell launches the program as before. Instead of
leaving our keyboard and screen connected to the program's standard
input and output, though, the shell hangs onto them. This means the
shell can give us a fresh command prompt, and start running other
commands, right away. Here, for example, we're putting some parameters
for the next run of the program in a file:

~~~
$ cat > params.txt
density: 22.0
viscosity: 0.75
^D
~~~

(Remember, \^D is the shell's way of showing Control-D, which means "end
of input".) Now let's run the `jobs` command, which tells us what
processes are currently running in the background:

~~~
$ jobs
[1] ./analyze results01.dat results02.dat results03.dat
~~~

Since we're about to go and get coffee, we might as well use the
foreground command, `fg`, to bring our background job into the
foreground:

~~~
$ fg
...a few minutes pass...
~~~

When `analyze` finishes running, the shell gives us a fresh prompt as
usual. If we had several jobs running in the background, we could
control which one we brought to the foreground using `fg %1`, `fg %2`,
and so on. The IDs are *not* the process IDs. Instead, they are the job
IDs displayed by the `jobs` command.

The shell gives us one more tool for job control: if a process is
already running in the foreground, Control-Z will pause it and return
control to the shell. We can then use `fg` to resume it in the
foreground, or `bg` to resume it as a background job. For example, let's
run `analyze` again, and then type Control-Z. The shell immediately
tells us that our program has been stopped, and gives us its job number:

~~~
$ ./analyze results01.dat
^Z
[1]  Stopped   ./analyze results01.dat
~~~

If we type `bg %1`, the shell starts the process running again, but in
the background. We can check that it's running using `jobs`, and kill it
while it's still in the background using `kill` and the job number. This
has the same effect as bringing it to the foreground and then typing
Control-C:

~~~
$ bg %1

$ jobs
[1] ./analyze results01.dat

$ kill %1
~~~

Job control was important when users only had one terminal window at a
time. It's less important now: if we want to run another program, it's
easy enough to open another window and run it there. However, these
ideas and tools are making a comeback, as they're often the easiest way
to run and control programs on remote computers elsewhere on the
network. We'll look at how to do this [later in this chapter](#s:ssh).

<div class="keypoints" markdown="1">
## Key Points
*   FIXME
</div>

<div class="challenges" markdown="1">
## Challenges

1.  FIXME
</div>

---
layout: lesson
root: ../..
title: Instructor's Guide
level: intermediate
---
FIXME
---
layout: lesson
root: ../..
title: More Unix Shell
level: Intermediate
---
FIXME: intro

Topics
------
1.  [Permissions](01-perm.html)
2.  [Working Remotely](02-ssh.html)
3.  [Variables](03-var.html)
4.  [Job Control](04-job.html)

See Also
--------
*   [Instructor's Guide](guide.html)
*   [Reference](reference.html)

Resources
---------
*   FIXME

---
layout: lesson
root: ../..
title: The Unix Shell
level: intermediate
---
FIXME: to be written.

---
layout: lesson
root: ../..
title: Using Databases and SQL
level: intermediate
---
FIXME: to be written.

---
layout: lesson
root: .
title: Introduction
---

Here's the dream:

> Computers have revolutionized research, and that revolution is only
> beginning. Every day, scientists and engineers all over the world use
> them to study things that are too big, too small, too fast, too slow,
> too expensive, too dangerous, or just too hard to study any other way.

Now here's the reality:

> Every day, scientists and engineers all over the world waste time
> wrestling with computers. Tasks that should take a few moments take
> hours or days, and many things never work at all. And even when things
> *do* work, most scientists have no idea how reliable their results
> are.

Most of the pain that researchers feel stems from not knowing how to
develop software systematically, how to tell if their programs are
working correctly, how to share their work with others (except by
mailing files to one another), or how to keep track of what they've
done. This sorry state of affairs persists for four reasons:

*   *No room, no time.*
    Everybody's curriculum is full—there's simply not space to add more
    about computing without dropping something else.
*   *No standards.*
    Reviewers and granting agencies don't check whether software is
    correct, ask how long it took to write, or count it toward tenure,
    so there's no incentive for scientists to do better.
*   *The blind leading the blind.*
    Senior researchers can't teach the next generation how to do things
    that they don't know how to do themselves.
*   *The cult of big iron.*
    Attention and funding mostly goes to things that politicians and
    university presidents can brag about on opening day, rather than
    to the basic skills that almost everyone uses.

Our goal is to show scientists and engineers how to do more in less
time and with less pain.  Our lessons have been used by more than four
thousand learners in over a hundred two-day workshops since the spring
of 2010.  Here's how they can help:

*   If you've ever overwritten the wrong file,
    we'll show you how to use version control.
*   If you've ever spent hours typing the same commands over and over again,
    we'll show you how to automate those tasks using simple scripts.
*   If you've ever spent an afternoon trying to figure out what the program you wrote last week actually does,
    we'll show you how to break your code into modules that you can read, debug, and improve piece by piece.
*   If you've ever spent days copying and pasting data in text files and spreadsheets,
    we'll show you how a database can do the work for you.

### About Us

Software Carpentry is an open source project.
Our instructors are volunteers,
and all of our lessons are freely available under the
[Creative Commons - Attribution License](http://creativecommons.org/licenses/by/3.0/),
so you can re-use and re-mix them however you want
so long as you cite us as the original source.

Like all volunteer projects,
Software Carpentry needs your help to grow.
If you find a bug,
please file a report in [our GitHub repo](https://github.com/swcarpentry/bc/).
If you would like to host a workshop,
please [get in touch](mailto:admin@software-carpentry.org);
if you'd like to teach,
we run an [instructor training course](http://teaching.software-carpentry.org);
and if you'd like to write lessons or exercises,
please [let us know](mailto:admin@software-carpentry.org).

To find out more,
please visit the [http://software-carpentry.org](Software Carpentry web site)
or read
[these](http://www.plosbiology.org/article/info%3Adoi%2F10.1371%2Fjournal.pbio.1001745)
[papers](http://arxiv.org/abs/1307.5448)
or [our most popular blog posts](http://software-carpentry.org/blog/index.html#popular).

### Acknowledgments

Software Carpentry has been made possible by the generous support of:

*   [Continuum Analytics](http://continuum.io/)
*   [Indiana University](http://www.indiana.edu)
*   [Lawrence Berkeley National Laboratory](http://www.lbl.gov)
*   [Los Alamos National Laboratory](http://www.lanl.gov)
*   [MathWorks](http://www.mathworks.com)
*   [Michigan State University](http://www.msu.edu)
*   [Microsoft](http://www.microsoft.com)
*   [MITACS](http://www.mitacs.ca)
*   [The Mozilla Foundation](http://mozillafoundation.org)
*   [The Python Software Foundation](http://www.python.org/psf/)
*   [Queen Mary University of London](http://www.qmul.ac.uk)
*   [Scimatic Software](http://www.scimatic.com)
*   [SciNet](http://www.scinet.utoronto.ca)
*   [SHARCNET](http://www.sharcnet.ca)
*   [The Alfred P. Sloan Foundation](http://www.sloan.org)
*   [The Space Telescope Science Institute](http://www.stsci.edu)
*   [The UK Meteorological Office](http://www.metoffice.gov.uk)
*   [The University of Alberta](http://www.ualberta.ca)
*   [The University Consortium for Atmospheric Research](http://www.ucar.edu)
*   [The University of Toronto](http://www.utoronto.ca)

Special thanks go to Brent Gorda,
who helped build and teach the first version of this course.

<div align="center" markdown="1">
This book is dedicated to
[Betty Jennings](http://en.wikipedia.org/wiki/Jean_Bartik),
[Betty Snyder](http://en.wikipedia.org/wiki/Betty_Holberton),
[Fran Bilas](http://en.wikipedia.org/wiki/Frances_Spence),
[Kay McNulty](http://en.wikipedia.org/wiki/Kathleen_Antonelli),
[Marlyn Wescoff](http://en.wikipedia.org/wiki/Marlyn_Meltzer),
and [Ruth Lichterman](http://en.wikipedia.org/wiki/Ruth_Teitelbaum),
<br/>
the original programmers of the [ENIAC](http://en.wikipedia.org/wiki/ENIAC).
</div>

---
layout: lesson
root: .
title: Licenses
---
### Instructional Material

All Software Carpentry instructional material is made available under
the Creative Commons Attribution license. You are free:

* to **Share**---to copy, distribute and transmit the work
* to **Remix**---to adapt the work

Under the following conditions:

* **Attribution**---You must attribute the work using "Copyright (c)
  Software Carpentry" (but not in any way that suggests that we
  endorse you or your use of the work).  Where practical, you must
  also include a hyperlink to http://software-carpentry.org.

With the understanding that:

* **Waiver**---Any of the above conditions can be waived if you get
  permission from the copyright holder.
* **Other Rights**---In no way are any of the following rights
  affected by the license:
    * Your fair dealing or fair use rights;
    * The author's moral rights;
    * Rights other persons may have either in the work itself or in
      how the work is used, such as publicity or privacy rights.  *
* **Notice**---For any reuse or distribution, you must make clear to
  others the license terms of this work. The best way to do this is
  with a link to
  [http://creativecommons.org/licenses/by/3.0/](http://creativecommons.org/licenses/by/3.0/).

For the full legal text of this license, please see
[http://creativecommons.org/licenses/by/3.0/legalcode](http://creativecommons.org/licenses/by/3.0/legalcode).

### Software

Except where otherwise noted, the example programs and other software
provided by Software Carpentry are made available under the
[OSI](http://opensource.org)-approved
[MIT license](http://opensource.org/licenses/mit-license.html).

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

### Trademark

"Software Carpentry" and the Software Carpentry logo are registered
trademarks of Software Carpentry, Ltd.

---
layout: lesson
root: ../..
title: Title of Lesson
---
<div class="objectives" markdown="1">

#### Objectives
*   Describe the lesson's objectives in observable ways.
*   Not "understand X" (which isn't observable) but "Write a program that does X".
*   Aim for 3-6 points.
*   The `<div>` with `class="objectives"` gives this block the right style (and makes it findable),
    the `markdown="1"` attribute tells Jekyll to process the content of the `div` as Markdown
    rather than HTML.
*   Keep the blank lines between the opening `<div ...>` and the closing `</div>` and these bullet points.

</div>

Write paragraphs of text here.
When you need to show input, output, and errors,
put a triple tilde `~~~` before and after like this:

~~~
content of data file
second line of data file
yup, more data
~~~

If the block is input, output, or error text,
add a class specifier as shown below:

~~~
$ this is the input
~~~
{:class="in"}
~~~
this is the output
~~~
{:class="out"}
~~~
error message
~~~
{:class="err"}

We use these classes to be consistent with the HTML we produce for IPython Notebooks,
and because novices find examples much easier to read
when they can clearly distinguish input from output.

> #### Callout Boxes
> 
> Use a quoted block like this with a level-4 heading to write side notes.
> 
> These notes can span multiple paragraphs and include code blocks,
> but please try to keep them short.

Whenever you define a term,
include a [link](../../gloss.html#link)
to the `gloss.html` file in the root directory.
Note that this file doesn't exist in the repository:
it is produced during website compilation from `gloss.md`.

Images should be stored in the `img` directory below the lesson directory.
Please use SVG for diagrams,
since it scales better than raster formats like PNG or JPEG.
Please also include alternate text for accessibility aids and search engines:

~~~
<img src="img/filesystem.svg" alt="The Filesystem" />
~~~

<div class="keypoints" markdown="1">

#### Key Points
*   Every lesson should end with a summary of key points.
*   We will stitch these together to create reference guides for learners.
*   As with objectives, wrap this block in a `div` with the right style and `markdown="1"`.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Include a list of challenge exercises for learners at the end of the lesson.

2.  Put blank lines between the items so that the challenges will be spaced out in the final HTML document.

</div>

---
layout: lesson
root: ../..
title: Branching in Git
---
Here's where we are right now:

~~~
$ git log
~~~
{:class="in"}
~~~
commit 005937fbe2a98fb83f0ade869025dc2636b4dad5
Author: Vlad Dracula <vlad@tran.sylvan.ia>
Date:   Thu Aug 22 10:14:07 2013 -0400

    Thoughts about the climate

commit 34961b159c27df3b475cfe4415d94a6d1fcd064d
Author: Vlad Dracula <vlad@tran.sylvan.ia>
Date:   Thu Aug 22 10:07:21 2013 -0400

    Concerns about Mars's moons on my furry friend

commit f22b25e3233b4645dabd0d81e651fe074bd8e73b
Author: Vlad Dracula <vlad@tran.sylvan.ia>
Date:   Thu Aug 22 09:51:46 2013 -0400

    Starting to think about Mars

$ cat mars.txt
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

We can draw the history of the repository like this
(we'll see in a second why there's a box called `master`):

<img src="img/git-branching-01.svg" alt="Initial State of Repository" />

Let's run this command:

~~~
$ git branch moons
~~~
{:class="in"}

It appears to do nothing,
but behind the scenes it has created a new [branch](../../gloss.html#branch) called `moons`:

~~~
$ git branch
~~~
{:class="in"}
~~~
* master
  moons
~~~
{:class="out"}

<img src="img/git-branching-02.svg" alt="Immediately After Creating Branch" />

Git is now maintaining two named bookmarks in our history:
`master`,
which was created automatically when we set up the repository,
and `moons`,
which we just made.
They both point to the same revision right now,
but we can change that.
Let's make `moons` the active branch:

~~~
$ git checkout moons
~~~
{:class="in"}
~~~
Switched to branch 'moons'
~~~
{:class="out"}
~~~
$ git branch
~~~
{:class="in"}
~~~
  master
* moons
~~~
{:class="out"}

<img src="img/git-branching-03.svg" alt="After Switching to Branch" />

Our file looks the same:

~~~
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

because it *is* the same:
Let's add another line to it:

~~~
$ echo "Maybe we should put the base on one of the moons instead?" >> mars.txt
~~~
{:class="in"}

and add an entirely new file:

~~~
$ echo "Phobos is larger than Deimos" > moons.txt
$ ls
~~~
{:class="in"}
~~~
mars.txt    moons.txt
~~~
{:class="out"}

Git now tells us that we have one changed file and one new file:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch moons
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#    modified:   mars.txt
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#    moons.txt
no changes added to commit (use "git add" and/or "git commit -a")
~~~
{:class="out"}

Let's add and commit those changes
(the `-A` flag to `git commit` means "add everything"):

~~~
$ git add -A
$ git status
~~~
{:class="in"}
~~~
# On branch moons
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#    modified:   mars.txt
#    new file:   moons.txt
#
~~~
{:class="out"}
~~~
$ git commit -m "Thinking about the moons"
~~~
{:class="in"}
~~~
[moons 62e7791] Thinking about the moons
 2 files changed, 2 insertions(+)
 create mode 100644 moons.txt
~~~
{:class="out"}

Our repository is now in the state shown below:

<img src="img/git-branching-04.svg" alt="After Committing on Moons Branch" />

The `moons` branch has advanced to record the changes we just made,
but `master` is still where it was.
If we switch back to `master`:

~~~
$ git checkout master
~~~
{:class="in"}

our changes seem to disappear:

~~~
$ ls
~~~
{:class="in"}
~~~
mars.txt
~~~
{:class="out"}
~~~
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

They're still in the repository&mdash;they're just not in
the revision that `master` is currently pointing to.
In essence,
we've created a parallel timeline that shares some history with the original one before diverging.

Let's make some changes in the `master` branch to further illustrate this point:

~~~
$ echo "Should we go with a classical name like Ares Base?" > names.txt
$ git status
~~~
{:class="in"}
~~~
# On branch master
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#    names.txt
nothing added to commit but untracked files present (use "git add" to track)
~~~
{:class="out"}
~~~
$ git add names.txt
$ git commit -m "We will need a cool name for our secret base"
~~~
{:class="in"}
~~~
[master dfcf908] We will need a cool name for our secret base
 1 file changed, 1 insertion(+)
 create mode 100644 names.txt
~~~
{:class="out"}

Our repository is now in this state:

<img src="img/git-branching-05.svg" alt="After Committing on Master Branch" />

`master` and `moons` have both moved on from their original common state,
but in different ways.
They could continue independent existence indefinitely,
but at some point we'll probably want to [merge](../../gloss.html#repository-merge) our changes.
Let's do that now:

~~~
$ git branch
~~~
{:class="in"}
~~~
* master
  moons
~~~
{:class="out"}
~~~
$ git merge moons
~~~
{:class="in"}

When we run the `git merge` command,
Git opens an editor to let us write a log entry about what we're doing.
The editor session initially contains this:

<div class="file" markdown="1">
~~~
Merge branch 'moons'

# Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#
# Lines starting with '#' will be ignored, and an empty message aborts
# the commit.
~~~
</div>

If we notice that something is wrong and decide not to complete the merge,
we must delete everything in the file&mdash;Git interprets an empty log message to mean,
"Don't proceed."
Otherwise,
everything that isn't marked as a comment with `#` will be saved to the log.
In this case,
we'll stick with the default log message.
When we save the file and exit the editor, Git displays this:

~~~
Merge made by the 'recursive' strategy.
 mars.txt  | 1 +
 moons.txt | 1 +
 2 files changed, 2 insertions(+)
 create mode 100644 moons.txt
~~~
{:class="out"}

We now have all of our changes in one place:

~~~
$ ls
~~~
{:class="in"}
~~~
mars.txt    moons.txt    names.txt
~~~
{:class="out"}

and our repository looks like this:

<img src="img/git-branching-06.svg" alt="After Merging" />

We can ask Git to draw a diagram of the repository's history with this command:

~~~
$ git log --oneline --topo-order --graph
~~~
{:class="in"}
~~~
*   e0cf8ab Merge branch 'moons'
|\
| * 62e7791 Thinking about the moons
* | dfcf908 We will need a cool name for our secret base
|/
* 005937f Thoughts about the climate
* 34961b1 Concerns about Mars's moons on my furry friend
* f22b25e Starting to think about Mars
~~~
{:class="out"}

This ASCII art is fine for small sets of changes,
but for anything significant,
it's much better to use a GUI
that can draw graphs using lines instead of characters.

Branching strikes most newcomers as unnecessary complexity,
particularly for single-author projects.
After all,
if we need to make some changes to a project,
what do we gain by creating parallel universes?

The answer is that branching makes it easy for us to concentrate on one thing at a time.
Suppose we are part-way through rewriting a function that calculates spatial correlations
when we realize that the task would be easier if our file I/O routines always stored things as complex numbers.
Most people would put the spatial correlation changes aside,
change the file I/O,
then (hopefully) come back to the original task.

The problem with this is that we have to remember what we were doing,
even if we realize halfway through rewriting file I/O that we should also rewrite our error handling.
It's quite common to wind up with half a dozen tasks stacked on top of one another,
and quite hard to them all straight.
Branching allows us to put what we're doing in a safe place,
solve the new problem,
then resume our earlier work.

In practice,
most developers never make changes directly in the `master` branch.
Instead,
they create a new branch from it for every change they want to make,
then merge those branches back to `master` when the work is complete.
Returning to our hypothetical example,
we would:

1.  create a branch called something like `better-spatial-correlation` for those changes;
2.  go back to master and create another branch called `file-input-produces-complex-values` for *those* changes;
3.  merge `file-input-produces-complex-values` into `master`;
4.  merge `master` into `better-spatial-correlation`; and
5.  finish work on the spatial correlation function and merge it all back into `master`.

And if,
partway through this process,
our supervisor asked us to change the graph-plotting routines to conform to the university's new style guide,
we would simply switch back to `master`,
create a branch for that,
make the changes,
produce the desired graphs,
and leave the changes parked in that branch until we were ready to merge them.

---
layout: lesson
root: ../..
title: Code Review
---
The model shown in the [main lesson](../git/02-collab.html)
in which everyone pushes and pulls from a single repository,
is perfectly usable,
but there's one thing it *doesn't* let us do:
[code review](../../gloss.html#code-review).
Suppose Dracula wants to be able to look at Wolfman's changes before merging them into the master copy on GitHub,
just as he would review Wolfman's paper before publishing it
(or perhaps even before submitting it for publication).
We need to arrange things so that Wolfman can commit his changes and Dracula can compare them with the master copy;
in fact,
we want Wolfman to be able to commit many times,
so that he can incorporate Dracula's feedback and get further review as often as necessary.

To allow code review,
most programmers take a slightly more roundabout route to merging.
When the project starts,
Dracula creates a repository on GitHub
in exactly the same way as [we created the `planets` repository](../git/02-collab.html)
and then [clones](../../gloss.html#repository-clone) it to his desktop:

~~~
$ git clone https://github.com/vlad/undersea.git
~~~
{:class="in"}
~~~
Cloning into 'undersea'...
warning: You appear to have cloned an empty repository.
~~~
{:class="out"}

`git clone` automatically adds the original repository on GitHub
as a remote of the local repository called `origin`&mdash;this is why
we chose `origin` as a remote name in our previous example:

~~~
$ cd undersea
$ git remote -v
~~~
{:class="in"}
~~~
origin https://github.com/vlad/undersea.git (fetch)
origin https://github.com/vlad/undersea.git (push)
~~~
{:class="out"}

Dracula can now push and pull changes just as before.

Wolfman doesn't clone Dracula's GitHub repository directly.
Instead,
he [forks](../../gloss.html#repository-fork) it,
i.e., clones it on GitHub. He does this using the GitHub web interface:

<img src="img/git-fork-ui.png" alt="The Fork Button" />

He then clones his own GitHub repository,
not Dracula's,
to give himself a desktop copy:

<img src="img/git-forking-01.svg" alt="After Forking on GitHub" />

This may seem like unnecessary work,
but it allows Wolfman and Dracula to collaborate much more effectively.
Suppose Wolfman makes a change to the project.
He commits it to his local repository,
then uses `git push` to copy those changes to GitHub:

<img src="img/git-forking-02.svg" alt="After Pushing to Fork" />

He then creates a [pull request](../../gloss.html#pull-request),
which notifies Dracula that Wolfman wants to merge some changes into Dracula's repository:

<img src="img/git-forking-03.svg" alt="After Creating Pull Request" />

A pull request is a merge waiting to happen.
When Dracula views it online,
he can see and comment on the changes Wolfman wants to make.
Commenting is the crucial step here,
and half the reason Wolfman went to the trouble of forking the repository on GitHub.
Dracula,
or anyone else involved in the project,
can now give Wolfman feedback on what he is trying to do:
this function is too long,
that one contains a bug,
there's a special case that isn't being handled anywhere,
and so on.
Wolfman can then update his code,
commit locally,
and push those changes to GitHub to update the pull request.

This process is exactly like peer review of papers, though usually much faster.
In large open source projects like Firefox,
it's very common for a pull request to be updated several times before finally being accepted and merged.
Working this way not only helps maintain the quality of the code,
it is also a very effective way to transfer knowledge.

If Wolfman wants to do more work while he's waiting for Dracula to review his first modification,
he creates a new branch in his local repository,
pushes it to GitHub, and then issues a pull request from that.
We can now see why Git, Mercurial, and other modern version control systems use branching so much:
it helps people work together,
but on their own time.
It might take Dracula several days to get around to reviewing Wolfman's changes.
Rather than being stalled until then,
Wolfman can just switch to another branch and work on something else,
then switch back when Dracula's review finally comes in.
Once the changes in a particular branch have been accepted,
Wolfman can delete it; provided it has been merged into `master` (or some other branch),
the only thing that will be lost is the pointer with the branch name,
not the changes themselves.

We said above that code review is half the reason every developer should have their own repository on GitHub
(or whatever service is being used).
The other reason is that working this way allows people to explore ideas
without needing permission from any central authority.
If you want to change this tutorial,
you can fork the [Software Carpentry repository on GitHub](https://github.com/swcarpentry/bc)
and start rewriting things in your repository.
You can send us a pull request if you want to share you changes with us,
but you don't have to.
And if other people like your version better than ours,
they can start forking your repository and sending pull requests to you instead of to us.

If this sounds familiar, it's because it is the way science itself works.
When someone publishes a new method or result,
other scientists can immediately start building on top of it&mdash;essentially,
they can create their own fork of the work and start committing changes to it.
If the first scientist likes the second's work,
she can incorporate those findings into her next paper,
which is analogous to merging a pull request.
If she doesn't,
then it's up to other scientists to decide whose work to build on,
or whether to try to combine both approaches.

---
layout: lesson
root: ../..
title: Manual Pages
---
We can get help for any Unix command with the `man`
(short for manual) command.
For example,
here is the command to look up information on `cp`:

~~~
$ man cp
~~~
{:class="in"}

The output displayed is referred to as the "man page".

The man page will be displayed in the default file viewer for our shell,
which usually a program called `more`.
When `more` displays a colon ':',
we can press the space bar to get the next page,
the letter 'h' to get help,
or the letter 'q' to quit.

`man`'s output is typically complete but concise,
as it is designed to be used as a reference rather than a tutorial.
Most man pages are divided into sections:

*   NAME:
    gives the name of the command and a brief description
*   SYNOPSIS:
    how to run the command, including optional and mandatory parameters.
    (We will explain the syntax later.)
*   DESCRIPTION:
    a fuller description than the synopsis,
    including a description of all the options to the command.
    This section may also include example usage
    or details about how the command works.
*   EXAMPLES:
    self-explanatory.
*   SEE ALSO:
    list other commands that we might find useful
    or other sources of information that might help us.

Other sections we might see include
AUTHOR, REPORTING BUGS, COPYRIGHT, HISTORY, (known) BUGS, and COMPATIBILITY.

#### How to Read the Synopsis

Here is the is synopsis for the `cp` command on Ubuntu Linux:

~~~
SYNOPSIS
   cp [OPTION]... [-T] SOURCE DEST
   cp [OPTION]... SOURCE... DIRECTORY
   cp [OPTION]... -t DIRECTORY SOURCE...
~~~
{:class="out"}

This tells the reader that there are three ways to use the command.
Let's look at the first usage:

~~~
cp [OPTION]... [-T] SOURCE DEST
~~~
{:class="out"}

`[OPTION]` means the `cp` command can be followed by
one or more optional [flags](../../gloss.html#command-line-flag).
We can tell they're optional because of the square brackets,
and we can tell that one or more are welcome because of the ellipsis (...).
For example,
the fact that `[-T]` is in square brackets,
but after the ellipsis,
means that it's optional,
but if it's used,
it must come after all the other options.

`SOURCE` refers to the source file or directory,
and `DEST` to the destination file or directory.
Their precise meanings are explained at the top of the `DESCRIPTION` section.

The other two usage examples can be read in similar ways.
Note that to use the last one, the `-t` option is mandatory
(because it isn't shown in square brackets).

The `DESCRIPTION` section starts with a few paragraphs explaining the command and its use,
then expands on the possible options one by one:

~~~
     The following options are available:

     -a    Same as -pPR options. Preserves structure and attributes of
           files but not directory structure.

     -f    If the destination file cannot be opened, remove it and create
           a new file, without prompting for confirmation regardless of
           its permissions.  (The -f option overrides any previous -n
           option.)

           The target file is not unlinked before the copy.  Thus, any
           existing access rights will be retained.

      ...  ...
~~~
{:class="out"}

#### Finding Help on Specific Options

If we want to skip ahead to the option you're interested in,
we can search for it using the slash key '/'.
(This isn't part of the `man` command:
it's a feature of `more`.)
For example,
to find out about `-t`,
we can type `/-t` and press return.
After that,
we can use the 'n' key to navigate to the next match
until we find the detailed information we need:

~~~
-t, --target-directory=DIRECTORY
     copy all SOURCE arguments into DIRECTORY
~~~
{:class="out"}

This means that this option has the short form `-t` and the long form `--target-directory`
and that it takes an argument.
Its meaning is to copy all the SOURCE arguments into DIRECTORY.
Thus,
we can give the destination explicitly instead of relying on having to place the directory at the end.

#### Limitations of Man Pages

Man pages can be useful for a quick confirmation of how to run a command,
but they are not famous for being readable.
If you can't find what you need in the man page&mdash;or you can't understand what you've found&mdash;try
entering "unix command copy file" into your favorite search engine:
it will often produce more helpful results.

> #### You May Also Enjoy...
>
> The [explainshell.com](http://explainshell.com/) site
> does a great job of breaking complex Unix commands into parts
> and explaining what each does.
> Sadly,
> it doesn't work in reverse...
---
layout: lesson
root: ../..
title: Permissions
---
Unix controls who can read, modify, and run files using *permissions*.
We'll discuss how Windows handles permissions at the end of the section:
the concepts are similar,
but the rules are different.

Let's start with Nelle.
She has a unique [user name](../../gloss.html#user-name),
`nnemo`,
and a [user ID](../../gloss.html#user-id),
1404.

> #### Why Integer IDs?
>
> Why integers for IDs?
> Again, the answer goes back to the early 1970s.
> Character strings like `alan.turing` are of varying length,
> and comparing one to another takes many instructions.
> Integers,
> on the other hand,
> use a fairly small amount of storage (typically four characters),
> and can be compared with a single instruction.
> To make operations fast and simple,
> programmers often keep track of things internally using integers,
> then use a lookup table of some kind
> to translate those integers into user-friendly text for presentation.
> Of course,
> programmers being programmers,
> they will often skip the user-friendly string part
> and just use the integers,
> in the same way that someone working in a lab might talk about Experiment 28
> instead of "the chronotypical alpha-response trials on anacondas".

Users can belong to any number of [groups](../../gloss.html#user-group),
each of which has a unique [group name](../../gloss.html#user-group-name)
and numeric [group ID](../../gloss.html#user-group-id).
The list of who's in what group is usually stored in the file `/etc/group`.
(If you're in front of a Unix machine right now,
try running `cat /etc/group` to look at that file.)

Now let's look at files and directories.
Every file and directory on a Unix computer belongs to one owner and one group.
Along with each file's content,
the operating system stores the numeric IDs of the user and group that own it.

The user-and-group model means that
for each file
every user on the system falls into one of three categories:
the owner of the file,
someone in the file's group,
and everyone else.

For each of these three categories,
the computer keeps track of
whether people in that category can read the file,
write to the file,
or execute the file
(i.e., run it if it is a program).

For example, if a file had the following set of permissions:

<table class="table table-striped">
<tr><td></td><th>user</th><th>group</th><th>all</th></tr>
<tr><th>read</th><td>yes</td><td>yes</td><td>no</td></tr>
<tr><th>write</th><td>yes</td><td>no</td><td>no</td></tr>
<tr><th>execute</th><td>no</td><td>no</td><td>no</td></tr>
</table>

it would mean that:

*   the file's owner can read and write it, but not run it;
*   other people in the file's group can read it, but not modify it or run it; and
*   everybody else can do nothing with it at all.

Let's look at this model in action.
If we `cd` into the `labs` directory and run `ls -F`,
it puts a `*` at the end of `setup`'s name.
This is its way of telling us that `setup` is executable,
i.e.,
that it's (probably) something the computer can run.

~~~
$ cd labs
$ ls -F
~~~
{:class="in"}
~~~
safety.txt    setup*     waiver.txt
~~~
{:class="out"}

> #### Necessary But Not Sufficient
> 
> The fact that something is marked as executable
> doesn't actually mean it contains a program of some kind.
> We could easily mark this HTML file as executable
> using the commands that are introduced below.
> Depending on the operating system we're using,
> trying to "run" it will either fail
> (because it doesn't contain instructions the computer recognizes)
> or cause the operating system to open the file
> with whatever application usually handles it
> (such as a web browser).

Now let's run the command `ls -l`:

~~~
$ ls -l
~~~
{:class="in"}
~~~
-rw-rw-r-- 1 vlad bio  1158  2010-07-11 08:22 safety.txt
-rwxr-xr-x 1 vlad bio 31988  2010-07-23 20:04 setup
-rw-rw-r-- 1 vlad bio  2312  2010-07-11 08:23 waiver.txt
~~~
{:class="out"}

The `-l` flag tells `ls` to give us a long-form listing.
It's a lot of information, so let's go through the columns in turn.

On the right side, we have the files'  names.
Next to them,
moving left,
are the times and dates they were last modified.
Backup systems and other tools use this information in a variety of ways, 
but you can use it to tell when you (or anyone else with permission) 
last changed a file.

Next to the modification time is the file's size in bytes
and the names of the user and group that owns it
(in this case, `vlad` and `bio` respectively).
We'll skip over the second column for now
(the one showing `1` for each file)
because it's the first column that we care about most.
This shows the file's permissions, i.e., who can read, write, or execute it.

Let's have a closer look at one of those permission strings:
`-rwxr-xr-x`.
The first character tells us what type of thing this is:
'-' means it's a regular file,
while 'd' means it's a directory,
and other characters mean more esoteric things.

The next three characters tell us what permissions the file's owner has.
Here, the owner can read, write, and execute the file: `rwx`.
The middle triplet shows us the group's permissions.
If the permission is turned off, we see a dash, so `r-x` means "read and execute, but not write".
The final triplet shows us what everyone who isn't the file's owner, or in the file's group, can do.
In this case, it's 'r-x' again, so everyone on the system can look at the file's contents and run it.

To change permissions, we use the `chmod` command
(whose name stands for "change mode").
Here's a long-form listing showing the permissions on the final grades in the course Vlad is teaching:

~~~
$ ls -l final.grd
~~~
{:class="in"}
~~~
-rwxrwxrwx 1 vlad bio  4215  2010-08-29 22:30 final.grd
~~~
{:class="out"}

Whoops: everyone in the world can read it&mdash;and what's worse, 
modify it!
(They could also try to run the grades file as a program,
which would almost certainly not work.)

The command to change the owner's permissions to `rw-` is:

~~~
$ chmod u=rw final.grd
~~~
{:class="in"}

The 'u' signals that we're changing the privileges 
of the user (i.e., the file's owner),
and `rw` is the new set of permissions.
A quick `ls -l` shows us that it worked,
because the owner's permissions are now set to read and write:

~~~
$ ls -l final.grd
~~~
{:class="in"}
~~~
-rw-rwxrwx 1 vlad bio  4215  2010-08-30 08:19 final.grd
~~~
{:class="out"}

Let's run `chmod` again to give the group read-only permission:

~~~
$ chmod g=r final.grd
$ ls -l final.grd
~~~
{:class="in"}
~~~
-rw-r--rw- 1 vlad bio  4215  2010-08-30 08:19 final.grd
~~~
{:class="out"}

And finally,
let's give "all" (everyone on the system who isn't the file's owner or in its group) no permissions at all:

~~~
$ chmod a= final.grd
$ ls -l final.grd
~~~
{:class="in"}
~~~
-rw-r----- 1 vlad bio  4215  2010-08-30 08:20 final.grd
~~~
{:class="out"}

Here,
the 'a' signals that we're changing permissions for "all",
and since there's nothing on the right of the "=",
"all"'s new permissions are empty.

We can search by permissions, too.
Here, for example, we can use `-type f -perm -u=x` to find files
that the user can execute:

~~~
$ find . -type f -perm -u=x
~~~
{:class="in"}
~~~
./tools/format
./tools/stats
~~~
{:class="out"}

Before we go any further,
let's run `ls -a -l`
to get a long-form listing that includes directory entries that are normally hidden:

~~~
$ ls -a -l
~~~
{:class="in"}
~~~
drwxr-xr-x 1 vlad bio     0  2010-08-14 09:55 .
drwxr-xr-x 1 vlad bio  8192  2010-08-27 23:11 ..
-rw-rw-r-- 1 vlad bio  1158  2010-07-11 08:22 safety.txt
-rwxr-xr-x 1 vlad bio 31988  2010-07-23 20:04 setup
-rw-rw-r-- 1 vlad bio  2312  2010-07-11 08:23 waiver.txt
~~~
{:class="out"}

The permissions for `.` and `..` (this directory and its parent) start with a 'd'.
But look at the rest of their permissions:
the 'x' means that "execute" is turned on.
What does that mean?
A directory isn't a program&mdash;how can we "run" it?

In fact, 'x' means something different for directories.
It gives someone the right to *traverse* the directory, but not to look at its contents.
The distinction is subtle, so let's have a look at an example.
Vlad's home directory has three subdirectories called `venus`, `mars`, and `pluto`:

<img src="img/x-for-directories.svg" alt="Execute Permission for Directories" />

Each of these has a subdirectory in turn called `notes`,
and those sub-subdirectories contain various files.
If a user's permissions on `venus` are 'r-x',
then if she tries to see the contents of `venus` and `venus/notes` using `ls`,
the computer lets her see both.
If her permissions on `mars` are just 'r--',
then she is allowed to read the contents of both `mars` and `mars/notes`.
But if her permissions on `pluto` are only '--x',
she cannot see what's in the `pluto` directory:
`ls pluto` will tell her she doesn't have permission to view its contents.
If she tries to look in `pluto/notes`, though, the computer will let her do that.
She's allowed to go through `pluto`, but not to look at what's there.
This trick gives people a way to make some of their directories visible to the world as a whole
without opening up everything else.

#### What about Windows?

Those are the basics of permissions on Unix.
As we said at the outset, though, things work differently on Windows.
There, permissions are defined by [access control lists](../../gloss.html#access-control-list),
or ACLs.
An ACL is a list of pairs, each of which combines a "who" with a "what".
For example,
you could give the Mummy permission to append data to a file without giving him permission to read or delete it,
and give Frankenstein permission to delete a file without being able to see what it contains.

This is more flexible that the Unix model,
but it's also more complex to administer and understand on small systems.
(If you have a large computer system,
*nothing* is easy to administer or understand.)
Some modern variants of Unix support ACLs as well as the older read-write-execute permissions,
but hardly anyone uses them.

---
layout: lesson
root: ../..
title: Shell Variables
---
The shell is just a program, and like other programs, it has variables.
Those variables control its execution,
so by changing their values
you can change how the shell and other programs behave.

Let's start by running the command `set` and looking at some of the variables in a typical shell session:

~~~
$ set
~~~
{:class="in"}
~~~
COMPUTERNAME=TURING
HOME=/home/vlad
HOMEDRIVE=C:
HOSTNAME=TURING
HOSTTYPE=i686
NUMBER_OF_PROCESSORS=4
OS=Windows_NT
PATH=/Users/vlad/bin:/usr/local/git/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin
PWD=/home/vlad
UID=1000
USERNAME=vlad
...
~~~
{:class="out"}

As you can see, there are quite a few&mdash;in fact, four or five times more than what's shown here.
And yes,
using `set` to *show* things might seem a little strange,
even for Unix,
but if you don't give it any arguments,
it might as well show you things you *could* set.

Every variable has a name.
By convention, variables that are always present are given upper-case names.
All shell variables' values are strings, even those (like `UID`) that look like numbers.
It's up to programs to convert these strings to other types when necessary.
For example, if a program wanted to find out how many processors the computer had,
it would convert the value of the `NUMBER_OF_PROCESSORS` variable from a string to an integer.

Similarly, some variables (like `PATH`) store lists of values.
In this case, the convention is to use a colon ':' as a separator.
If a program wants the individual elements of such a list,
it's the program's responsibility to split the variable's string value into pieces.

#### The `PATH` Variable

Let's have a closer look at that `PATH` variable.
Its value defines the shell's [search path](../../gloss.html#search-path),
i.e., the list of directories that the shell looks in for runnable programs
when you type in a program name without specifying what directory it is in.

For example,
when we type a command like `analyze`,
the shell needs to decide whether to run `./analyze` or `/bin/analyze`.
The rule it uses is simple:
the shell checks each directory in the `PATH` variable in turn,
looking for a program with the requested name in that directory.
As soon as it finds a match, it stops searching and runs the program.

To show how this works,
here are the components of `PATH` listed one per line:

~~~
/Users/vlad/bin
/usr/local/git/bin
/usr/bin
/bin
/usr/sbin
/sbin
/usr/local/bin
~~~
{:class="out"}

On our computer,
there are actually three programs called `analyze`
in three different directories:
`/bin/analyze`,
`/usr/local/bin/analyze`,
and `/users/vlad/analyze`.
Since the shell searches the directories in the order they're listed in `PATH`,
it finds `/bin/analyze` first and runs that.
Notice that it will *never* find the program `/users/vlad/analyze`
unless we type in the full path to the program,
since the directory `/users/vlad` isn't in `PATH`.

#### Showing the Value of a Variable

Let's show the value of the variable `HOME`:

~~~
$ echo HOME
~~~
{:class="in"}
~~~
HOME
~~~
{:class="out"}

That just prints "HOME", which isn't what we wanted
(though it is what we actually asked for).
Let's try this instead:

~~~
$ echo $HOME
~~~
{:class="in"}
~~~
/home/vlad
~~~
{:class="out"}

The dollar sign tells the shell that we want the *value* of the variable
rather than its name.
This works just like wildcards:
the shell does the replacement *before* running the program we've asked for.
Thanks to this expansion, what we actually run is `echo /home/vlad`,
which displays the right thing.

#### Creating and Changing Variables

Creating a variable is easy&mdash;we just assign a value to a name using "=":

~~~
$ SECRET_IDENTITY=Dracula
$ echo $SECRET_IDENTITY
~~~
{:class="in"}
~~~
Dracula
~~~
{:class="out"}

To change the value, just assign a new one:

~~~
$ SECRET_IDENTITY=Camilla
$ echo $SECRET_IDENTITY
~~~
{:class="in"}
~~~
Camilla
~~~
{:class="out"}

If we want to set some variables automatically every time we run a shell,
we can put commands to do this in a file called `.bashrc` in our home directory.
(The '.' character at the front prevents `ls` from listing this file
unless we specifically ask it to using `-a`:
we normally don't want to worry about it.
The "rc" at the end is an abbreviation for "run control",
which meant something really important decades ago,
and is now just a convention everyone follows without understanding why.)

For example,
here are two lines in `/home/vlad/.bashrc`:

<div class="file" markdown="1">
~~~
export SECRET_IDENTITY=Dracula
export TEMP_DIR=/tmp
export BACKUP_DIR=$TEMP_DIR/backup
~~~
</div>

These three lines create the variables `SECRET_IDENTITY`,
`TEMP_DIR`,
and `BACKUP_DIR`,
and export them so that any programs the shell runs can see them as well.
Notice that `BACKUP_DIR`'s definition relies on the value of `TEMP_DIR`,
so that if we change where we put temporary files,
our backups will be relocated automatically.

While we're here,
it's also common to use the `alias` command to create shortcuts for things we frequently type.
For example, we can define the alias `backup`
to run `/bin/zback` with a specific set of arguments:

<div class="file" markdown="1">
~~~
alias backup=/bin/zback -v --nostir -R 20000 $HOME $BACKUP_DIR
~~~
</div>

As you can see,
aliases can save us a lot of typing, and hence a lot of typing mistakes.
You can find interesting suggestions for other aliases 
and other bash tricks by searching for "sample bashrc" 
in your favorite search engine.

---
layout: lesson
root: ../..
title: Working Remotely
---
Let's take a closer look at what happens when we use the shell
on a desktop or laptop computer.
The first step is to log in
so that the operating system knows who we are and what we're allowed to do.
We do this by typing our username and password;
the operating system checks those values against its records,
and if they match,
runs a shell for us.

As we type commands,
the 1's and 0's that represent the characters we're typing are sent from the keyboard to the shell.
The shell displays those characters on the screen to represent what we type,
and then,
if what we typed was a command,
the shell executes it and displays its output (if any).

What if we want to run some commands on another machine,
such as the server in the basement that manages our database of experimental results?
To do this,
we have to first log in to that machine.
We call this a [remote login](../../gloss.html#remote-login),
and the other computer a remote computer.
Once we do this,
everything we type is passed to a shell running on the remote computer.
That shell runs those commands on our behalf,
just as a local shell would,
then sends back output for our computer to display.

The tool we use to log in remotely is the [secure shell)(../../gloss.html#secure-shell),
or SSH.
In particular, the command `ssh username@computer`
runs SSH and connects to the remote computer we have specified.
After we log in,
we can use the remote shell to use the remote computer's files and directories.
Typing `exit` or Control-D
terminates the remote shell and returns us to our previous shell.

In the example below,
the remote machine's command prompt is `moon>`
instead of just `$`.
To make it clearer which machine is doing what,
we'll indent the commands sent to the remote machine
and their output.

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad
~~~
{:class="out"}
~~~
$ ssh vlad@moon.euphoric.edu
Password: ********
~~~
{:class="in"}
~~~
    moon> hostname
~~~
{:class="in"}
~~~
    moon
~~~
{:class="out"}
~~~
    moon> pwd
~~~
{:class="in"}
~~~
    /home/vlad
~~~
{:class="out"}
~~~
    moon> ls -F
~~~
{:class="in"}
~~~
    bin/     cheese.txt   dark_side/   rocks.cfg
~~~
{:class="out"}
~~~
    moon> exit
~~~
{:class="in"}
~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad
~~~
{:class="out"}

The secure shell is called "secure" to contrast it with an older program called `rsh`,
which stood for "remote shell".
Back in the day,
when everyone trusted each other and knew every chip in their computer by its first name,
people didn't encrypt anything except the most sensitive information when sending it over a network.
However,
that meant that villains could watch network traffic,
steal usernames and passwords,
and use them for all manner of nefarious purposes.
SSH was invented to prevent this (or at least slow it down).
It uses several sophisticated, and heavily tested, encryption protocols
to ensure that outsiders can't see what's in the messages
going back and forth between different computers.

`ssh` has a companion program called `scp`,
which stands for "secure copy".
It allows us to copy files to or from a remote computer using the same kind of connection as SSH.
The command's name combines `cp`'s and `ssh`'s,
and so does its operation.
To copy a file,
we specify the source and destination paths,
either of which may include computer names.
If we leave out a computer name,
`scp` assumes we mean the machine we're running on.
For example,
this command copies our latest results to the backup server in the basement,
printing out its progress as it does so:

~~~
$ scp results.dat vlad@backupserver:backups/results-2011-11-11.dat
Password: ********
~~~
{:class="in"}
~~~
results.dat              100%  9  1.0 MB/s 00:00
~~~
{:class="out"}

Copying a whole directory is similar:
we just use the `-r` option to signal that we want copying to be recursive.
For example,
this command copies all of our results from the backup server to our laptop:

~~~
$ scp -r vlad@backupserver:backups ./backups
Password: ********
~~~
{:class="in"}
~~~
results-2011-09-18.dat              100%  7  1.0 MB/s 00:00
results-2011-10-04.dat              100%  9  1.0 MB/s 00:00
results-2011-10-28.dat              100%  8  1.0 MB/s 00:00
results-2011-11-11.dat              100%  9  1.0 MB/s 00:00
~~~
{:class="out"}

Here's one more thing SSH can do for us.
Suppose we want to check whether we have already created the file
`backups/results-2011-11-12.dat` on the backup server.
Instead of logging in and then typing `ls`,
we could do this:

~~~
$ ssh vlad@backupserver "ls results"
Password: ********
~~~
{:class="in"}
~~~
results-2011-09-18.dat  results-2011-10-28.dat
results-2011-10-04.dat  results-2011-11-11.dat
~~~
{:class="out"}

SSH takes the argument after our remote username
and passes them to the shell on the remote computer.
(We have to put quotes around it to make it look like a single argument.)
Since those arguments are a legal command,
the remote shell runs `ls results` for us
and sends the output back to our local shell for display.

> #### All Those Passwords
>
> Typing our password over and over again is annoying,
> especially if the commands we want to run remotely are in a loop.
> To remove the need to do this,
> we can create an [SSH key](../../gloss.html#ssh-key)
> to tell the remote machine
> that it should always trust us.
> We discuss SSH keys in our intermediate lessons.

---
layout: lesson
root: ../..
title: Exceptions
---
Assertions help us catch errors in our code,
but things can go wrong for other reasons,
like missing or badly-formatted files.
Most modern programming languages allow programmers to use
[exceptions](../../gloss.html#exception) to separate
what the program should do if everything goes right
from what it should do if something goes wrong.
Doing this makes both cases easier to read and understand.

For example,
here's a small piece of code that tries to read parameters and a grid from two
separate files,
and reports an error if either goes wrong:

~~~
try:
    params = read_params(param_file)
    grid = read_grid(grid_file)
except:
    log.error('Failed to read input file(s)')
    sys.exit(ERROR)
~~~
{:class="in"}

We join the normal case and the error-handling code using the keywords `try` and
`except`.
These work together like `if` and `else`:
the statements under the `try` are what should happen if everything works,
while the statements under `except` are what the program should do if something
goes wrong.

We have actually seen exceptions before without knowing it,
since by default,
when an exception occurs,
Python prints it out and halts our program.
For example,
trying to open a nonexistent file triggers a type of exception called an
`IOError`,
while trying to access a list element that doesn't exist
causes an `IndexError`:

~~~
open('nonexistent-file.txt', 'r')
~~~
{:class="in"}
~~~
---------------------------------------------------------------------------
IOError                                   Traceback (most recent call last)

<ipython-input-13-58cbde3dd63c> in <module>()
----> 1 open('nonexistent-file.txt', 'r')

IOError: [Errno 2] No such file or directory: 'nonexistent-file.txt'
~~~
{:class="err"}
~~~
values = [0, 1, 2]
print values[999]
~~~
{:class="in"}
~~~
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)

<ipython-input-14-7fed13afc650> in <module>()
1 values = [0, 1, 2]
----> 2 print values[999]

IndexError: list index out of range
~~~
{:class="err"}

We can use `try` and `except` to deal with these errors ourselves
if we don't want the program simply to fall over:

~~~
try:
    reader = open('nonexistent-file.txt', 'r')
except IOError:
    print 'Whoops!'
~~~
{:class="in"}
~~~
Whoops!
~~~
{:class="err"}

When Python executes this code,
it runs the statement inside the `try`.
If that works, it skips over the `except` block without running it.
If an exception occurs inside the `try` block,
though,
Python compares the type of the exception to the type specified by the `except`.
If they match, it executes the code in the `except` block.

`IOError` is the particular kind of exception Python uses
when there is a problem related to input and output,
such as files not existing
or the program not having the permissions it needs to read them.
We can put as many lines of code in a `try` block as we want,
just as we can put many statements under an `if`.
We can also handle several different kinds of errors afterward.
For example,
here's some code to calculate the entropy at each point in a grid:

~~~
try:
    params = read_params(param_file)
    grid = read_grid(grid_file)
    entropy = lee_entropy(params, grid)
    write_entropy(entropy_file, entropy)
except IOError:
    report_error_and_exit('IO error')
except ArithmeticError:
    report_error_and_exit('Arithmetic error')
~~~
{:class="in"}

Python tries to run the four functions inside the `try` as normal.
If an error occurs in any of them,
Python immediately jumps down
and tries to find an `except` of the corresponding type:
if the exception is an `IOError`,
Python jumps into the first error handler,
while if it's an `ArithmeticError`,
Python jumps into the second handler instead.
It will only execute one of these,
just as it will only execute one branch
of a series of `if`/`elif`/`else` statements.

This layout has made the code easier to read,
but we've lost something important:
the message printed out by the `IOError` branch doesn't tell us
which file caused the problem.
We can do better if we capture and hang on to the object that Python creates
to record information about the error:

~~~
try:
    params = read_params(param_file)
    grid = read_grid(grid_file)
    entropy = lee_entropy(params, grid)
    write_entropy(entropy_file, entropy)
except IOError as err:
    report_error_and_exit('Cannot read/write' + err.filename)
except ArithmeticError as err:
    report_error_and_exit(err.message)
~~~
{:class="in"}

If something goes wrong in the `try`,
Python creates an exception object,
fills it with information,
and assigns it to the variable `err`.
(There's nothing special about this variable name&mdash;we can use anything we
want.)
Exactly what information is recorded depends on what kind of error occurred;
Python's documentation describes the properties of each type of error in detail,
but we can always just print the exception object.
In the case of an I/O error,
we print out the name of the file that caused the problem.
And in the case of an arithmetic error,
printing out the message embedded in the exception object is what Python would
have done anyway.

So much for how exceptions work:
how should they be used?
Some programmers use `try` and `except` to give their programs default
behaviors.
For example,
if this code can't read the grid file that the user has asked for,
it creates a default grid instead:

~~~
try:
    grid = read_grid(grid_file)
except IOError:
    grid = default_grid()
~~~
{:class="in"}

Other programmers would explicitly test for the grid file,
and use `if` and `else` for control flow:

~~~
if file_exists(grid_file):
    grid = read_grid(grid_file)
else:
    grid = default_grid()
~~~
{:class="in"}

It's mostly a matter of taste,
but we prefer the second style.
As a rule,
exceptions should only be used to handle exceptional cases.
If the program knows how to fall back to a default grid,
that's not an unexpected event.
Using `if` and `else`
instead of `try` and `except`
sends different signals to anyone reading our code,
even if they do the same thing.

Novices often ask another question about exception handling style,
but before we address it,
there's something in our example that you might not have noticed.
Exceptions can actually be thrown a long way:
they don't have to be handled immediately.
Take another look at this code:

~~~
try:
    params = read_params(param_file)
    grid = read_grid(grid_file)
    entropy = lee_entropy(params, grid)
    write_entropy(entropy_file, entropy)
except IOError as err:
    report_error_and_exit('Cannot read/write' + err.filename)
except ArithmeticError as err:
    report_error_and_exit(err.message)
~~~
{:class="in"}

The four lines in the `try` block are all function calls.
They might catch and handle exceptions themselves,
but if an exception occurs in one of them that *isn't* handled internally,
Python looks in the calling code for a matching `except`.
If it doesn't find one there,
it looks in that function's caller,
and so on.
If we get all the way back to the main program without finding an exception
handler,
Python's default behavior is to print an error message like the ones we've been
seeing all along.

This rule is the origin of the rule
[throw low, catch high](../rules.html#throw-low-catch-high).
There are many places in our program where an error might occur.
There are only a few, though, where errors can sensibly be handled.
For example,
a linear algebra library doesn't know whether it's being called directly from
the Python interpreter,
or whether it's being used as a component in a larger program.
In the latter case,
the library doesn't know if the program that's calling it is being run from the
command line or from a GUI.
The library therefore shouldn't try to handle or report errors itself,
because it has no way of knowing what the right way to do this is.
It should instead just [raise](../../gloss.html#raise-exception) an exception,
and let its caller figure out how best to handle it.

Finally,
we can raise exceptions ourselves if we want to.
In fact,
we *should* do this,
since it's the standard way in Python to signal that something has gone wrong.
Here,
for example,
is a function that reads a grid and checks its consistency:

~~~
def read_grid(grid_file):
    data = read_raw_data(grid_file)
    if not grid_consistent(data):
        raise Exception('Inconsistent grid: ' + grid_file)
    result = normalize_grid(data)
    return result
~~~
{:class="in"}

The `raise` statement creates a new exception with a meaningful error message.
Since `read_grid` itself doesn't contain a `try`/`except` block,
this exception will always be thrown up and out of the function,
to be caught and handled by whoever is calling `read_grid`.
We can define new types of exceptions if we want to.
And we should,
so that errors in our code can be distinguished from errors in other people's
code.
However,
this involves classes and objects,
which is outside the scope of these lessons.

---
layout: lesson
root: ../..
title: Numbers
---
Let's start by looking at how numbers are stored.
If we only have the two digits 0 and 1,
the natural way to store a positive integer is to use base 2,
so 1001<sub>2</sub> is
(1&times;2<sup>3</sup>)+(0&times;2<sup>2</sup>)+(0&times;2<sup>1</sup>)+(1&times;2<sup>0</sup>) = 9<sub>10</sub>.
It's equally natural to extend this scheme to negative numbers by reserving one bit for the sign.
If, for example, we use 0 for positive numbers and 1 for those that are negative,
+9<sub>10</sub> would be 01001<sub>2</sub> and -9<sub>10</sub> would be 11001<sub>10</sub>.

There are two problems with this.
The first is that this scheme gives us two representations for zero (00000<sub>2</sub> and 10000<sub>2</sub>).
This isn't necessarily fatal,
but any claims this scheme has to being "natural" disappear when we have to write code like:

~~~
if (length != +0) and (length != -0)
~~~
{:class="in"}

As for the other problem,
it turns out that the circuits needed to do addition and other arithmetic on this
[sign and magnitude representation](../../gloss.html#sign-and-magnitude)
are more complicated than the hardware needed for another called
[two's complement](../../gloss.html#twos-complement).
Instead of mirroring positive values,
two's complement rolls over when going below zero,
just like a car's odometer.
If we're using four bits per number,
so that 0<sub>10</sub> is 0000<sub>2</sub>,
then -1<sub>10</sub> is 1111<sub>2</sub>.
-2<sub>10</sub> is 1110<sub>2</sub>,
-3<sub>10</sub> is 1101<sub>2</sub>,
and so on until we reach the most negative number we can represent,
1000<sub>2</sub>, which is -8.
Our representation then wraps around again, so that 0111<sub>2</sub> is 7<sub>10</sub>.

This scheme isn't intuitive,
but it solves sign and magnitude's "double zero" problem,
and the hardware to handle it is faster and cheaper.
As a bonus,
we can still tell whether a number is positive or negative by looking at the first bit:
negative numbers have a 1, positives have a 0.
The only odd thing is its asymmetry:
because 0 counts as a positive number,
numbers go from -8 to 7, or -16 to 15, and so on.
As a result, even if `x` is a valid number, `-x` may not be.

Finding a good representation for real numbers
(called [floating point numbers](../../gloss.html#float),
since the decimal point can move around)
is a much harder problem.
The root of the problem is that
we cannot represent an infinite number of real values with a finite set of bit patterns.
And unlike integers,
no matter what values we *do* represent,
there will be an infinite number of values between each of them that we can't.

Floating point numbers are usually represented using sign, magnitude, and an exponent.
In a 32-bit word,
the IEEE 754 standard calls for 1 bit of sign,
23 bits for the magnitude (or *mantissa*),
and 8 bits for the exponent.
To illustrate the problems with floating point,
we'll use a much dumber representation:
we'll only worry about positive values without fractional parts,
and we'll only use 3 for the magnitude and 2 for the exponent.

<table class="table table-striped">
<tr><th></th>        <th>   </th><th colspan="4" align="center">Exponent</th></tr>
<tr><th></th>        <th>   </th><th>00</th><th>01</th><th>10</th><th>11</th></tr>
<tr><th></th>        <th>000</th><td> 0</td><td> 0</td><td> 0</td><td> 0</td></tr>
<tr><th></th>        <th>001</th><td> 1</td><td> 2</td><td> 4</td><td> 8</td></tr>
<tr><th></th>        <th>010</th><td> 2</td><td> 4</td><td> 8</td><td>16</td></tr>
<tr><th>Mantissa</th><th>011</th><td> 3</td><td> 6</td><td>12</td><td>24</td></tr>
<tr><th></th>        <th>100</th><td> 4</td><td> 8</td><td>16</td><td>32</td></tr>
<tr><th></th>        <th>101</th><td> 5</td><td>10</td><td>20</td><td>40</td></tr>
<tr><th></th>        <th>110</th><td> 6</td><td>12</td><td>24</td><td>48</td></tr>
<tr><th></th>        <th>111</th><td> 7</td><td>14</td><td>28</td><td>56</td></tr>
</table>

The table above
shows the values that we can represent this way.
Each one is the mantissa times two to the exponent.
For example, the decimal values 48 is binary 110 times 2 to the binary 11 power,
which is 6 times 2 to the third,
or 6 times 8.
(Note that real floating point representations like the IEEE 754 standard
don't have the redundancy shown in this table,
but that doesn't affect our argument.)

The first thing you should notice is that there are a lot of values we *can't* store.
We can do 8 and 10, for example, but not 9.
This is exactly like the problems hand calculators have with fractions like 1/3:
in decimal, we have to round that to 0.3333 or 0.3334.

But if this scheme has no representation for 9,
then 8+1 must be stored as either 8 or 10.
This raises an interesting question:
if 8+1 is 8, what is 8+1+1?
If we add from the left, 8+1 is 8, plus another 1 is 8 again.
If we add from the right, though, 1+1 is 2, and 2+8 is 10.
Changing the order of operations can make the difference between right and wrong.
There's no randomness involved&mdash;a particular order of operations
will always produce the same result&mdash;but
as the number of steps increases,
so too does the difficulty of figuring out what the best order is.

This is the sort of problem that numerical analysts spend their time on.
In this case, if we sort the values we're adding, then add from smallest to largest,
it gives us a better chance of getting the best possible answer.
In other situations,
like inverting a matrix,
the rules are much more complicated.

Here's another observation about our uneven number line:
the spacing between the values we can represent is uneven,
but the relative spacing between each set of values stays the same,
i.e., the first group is separated by 1, then the separation becomes 2, then 4, then 8,
so that the ratio of the spacing to the values stays roughly constant.
This happens because we're multiplying the same fixed set of mantissas by ever-larger exponents,
and it points us at a couple of useful definitions.

The [absolute error](../../gloss.html#absolute-error) in some approximation
is simply the absolute value of the difference between the actual value and the approximation.
The [relative error](../../gloss.html#relative-error),
on the other hand,
is the ratio of the absolute error to the value we're approximating.
For example, if we're off by 1 in approximating 8+1 and 56+1,
the absolute error is the same in both cases,
but the relative error in the first case is 1/9 = 11%,
while the relative error in the second case is only 1/57 = 1.7%.
When we're thinking about floating point numbers,
relative error is almost always more useful than absolute error.
After all,
it makes little sense to say that we're off by a hundredth when the value in question is a billionth.

To see why this matters, let's have a look at a little program:

~~~
nines = []
sums = []
current = 0.0
for i in range(1, 10):
    num = 9.0 / (10.0 ** i)
    nines.append(num)
    current += num
    sums.append(current)

for i in range(len(nines)):
    print '%.18f %.18f' % (nines[i], sums[i])
~~~
{:class="in"}

The loop runs over the integers from 1 to 9 inclusive.
Using those values, we create the numbers 0.9, 0.09, 0.009, and so on, and put them in the list `vals`.
We then calculate the sum of those numbers.
Clearly, this should be 0.9, 0.99, 0.999, and so on.
But is it?

<table class="table table-striped">
<tr><td>1</td><td>0.900000000000000022</td><td>0.900000000000000022</td></tr>
<tr><td>2</td><td>0.089999999999999997</td><td>0.989999999999999991</td></tr>
<tr><td>3</td><td>0.008999999999999999</td><td>0.998999999999999999</td></tr>
<tr><td>4</td><td>0.000900000000000000</td><td>0.999900000000000011</td></tr>
<tr><td>5</td><td>0.000090000000000000</td><td>0.999990000000000046</td></tr>
<tr><td>6</td><td>0.000009000000000000</td><td>0.999999000000000082</td></tr>
<tr><td>7</td><td>0.000000900000000000</td><td>0.999999900000000053</td></tr>
<tr><td>8</td><td>0.000000090000000000</td><td>0.999999990000000061</td></tr>
<tr><td>9</td><td>0.000000009000000000</td><td>0.999999999000000028</td></tr>
</table>

Here are our answers.
The first column is the loop index;
the second, what we actually got when we tried to calculate 0.9, 0.09, and so on,
and the third is the cumulative sum.

The first thing you should notice is that the very first value contributing to our sum is already slightly off.
Even with 23 bits for a mantissa,
we cannot exactly represent 0.9 in base 2,
any more than we can exactly represent 1/3 in base 10.
Doubling the size of the mantissa would reduce the error,
but we can't ever eliminate it.

The second thing to notice is that our approximation to 0.0009 actually appears accurate,
as do all of the approximations after that.
This may be misleading, though:
after all,
we've only printed things out to 18 decimal places.
As for the errors in the last few digits of the sums,
there doesn't appear to be any regular pattern in the way they increase and decrease.

This phenomenon is one of the things that makes testing scientific programs hard.
If a function uses floating point numbers,
what do we compare its result to
if we want to check that it's working correctly?
If we compared the sum of the first few numbers in `vals` to what it's supposed to be,
the answer could be `False`,
even if we're initializing the list with the right values,
and calculating the sum correctly.
This is a genuinely hard problem,
and no one has a good generic answer.
The root of our problem is that we're using approximations,
and each approximation has to be judged on its own merits.

There are things you can do, though.
The first rule is,
compare what you get to analytic solutions whenever you can.
For example,
if you're looking at the behavior of drops of liquid helium,
start by checking your program's output on a stationary spherical drop in zero gravity.
You should be able to calculate the right answer in that case,
and if your program doesn't work for that,
it probably won't work for anything else.

The second rule is to compare more complex versions of your code to simpler ones.
If you're about to replace a simple algorithm for calculating heat transfer with one that's more complex,
but hopefully faster,
don't throw the old code away.
Instead,
use its output as a check on the correctness of the new code.
And if you bump into someone at a conference who has a program that can calculate some of the same results as yours,
swap data sets:
it'll help you both.

The third rule is, never use `==` (or `!=`) on floating point numbers,
because two numbers calculated in different ways will probably not have exactly the same bits.
Instead,
check to see whether two values are within some tolerance,
and if they are,
treat them as equal.
Doing this forces you to make your tolerances explicit,
which is useful in its own right
(just as putting error bars on experimental results is useful).

---
layout: lesson
root: ../..
title: Why I Teach
---
This is my daughter Madeline:

<img src="img/madeleine.jpg" alt="Madeleine" />

Several independent studies have confirmed that she is the cutest
child on the planet (plus or minus 5%, 19 times out of 20).  She means
the world to me, but by the time she's grown, the world is going to be
dealing with the consequences of our generation's short-sightedness.
Climate change, resource shortages, drug-resistant diseases&mdash;the
list is a long one, and the only things that will save us are more
science and more courage.

That's why I teach.  I teach because I need your help to make this
world fit for her to live in.  I teach because I need you to discover
more and invent faster so that the world she inherits from you will be
better than the one you're inheriting from my generation.  Science is
not just the greatest adventure of our time: it is, quite literally, a
matter of life and death, and I hope that what we have taught you will
help you do it better.

Thank you for your time: may you always see the world through the eyes
of a child.

---
layout: lesson
root: ../..
title: A Few Extras
---
A few things come up in our classes
that don't fit naturally into the flow of our lessons.
We have gathered several of them here.

<div class="toc" markdown="1">

1.  [Branching in Git](01-branching.html)
2.  [Code Review](02-review.html)
3.  [Manual Pages](03-man.html)
4.  [Permissions](04-permissions.html)
5.  [Shell Variables](05-shellvar.html)
6.  [Working Remotely](06-ssh.html)
7.  [Exceptions](07-exceptions.html)
8.  [Numbers](08-numbers.html)
9. [Why I Teach](09-why.html)

</div>

---
layout: lesson
root: ../..
title: Introducing Version Control
---
Wolfman and Dracula have been hired by Universal Missions
(a space services spinoff from Euphoric State University)
to figure out where the company should send its next planetary lander.
They want to be able to work on the plans at the same time,
but they have run into problems doing this in the past.
If they take turns,
each one will spend a lot of time waiting for the other to finish,
but if they work on their own copies and email changes back and forth
things will be lost, overwritten, or duplicated.

The right solution is to use [version control](../../gloss.html#version-control)
to manage their work.
Version control is better than mailing files back and forth because:

*   Nothing that is committed to version control is ever lost.
    This means it can be used like the "undo" feature in an editor,
    and since all old versions of files are saved
    it's always possible to go back in time to see exactly who wrote what on a particular day,
    or what version of a program was used to generate a particular set of results.
*   It keeps a record of who made what changes when,
    so that if people have questions later on,
    they know who to ask.
*   It's hard (but not impossible) to accidentally overlook or overwrite someone's changes:
    the version control system automatically notifies users
    whenever there's a conflict between one person's work and another's.

This lesson shows how to use
a popular open source version control system called Git.
It is more complex than some alternatives,
but it is widely used,
both because it's easy to set up
and because of a hosting site called [GitHub](http://github.com).
No matter which version control system you use,
the most important thing to learn is not the details of their more obscure commands,
but the workflow that they encourage.

---
layout: lesson
root: ../..
title: A Better Kind of Backup
---
<div class="objectives" markdown="1">

#### Objectives
*   Explain which initialization and configuration steps are required once per machine,
    and which are required once per repository.
*   Go through the modify-add-commit cycle for single and multiple files
    and explain where information is stored at each stage.
*   Identify and use Git revision numbers.
*   Compare files with old versions of themselves.
*   Restore old versions of files.
*   Configure Git to ignore specific files,
    and explain why it is sometimes useful to do so.

</div>

We'll start by exploring how version control can be used
to keep track of what one person did and when.
Even if you aren't collaborating with other people,
version control is much better for this than this:

<div>
  <a href="http://www.phdcomics.com"><img src="img/phd101212s.gif" alt="Piled Higher and Deeper by Jorge Cham, http://www.phdcomics.com" /></a>
  <p>"Piled Higher and Deeper" by Jorge Cham, http://www.phdcomics.com</p>
</div>

#### Setting Up

The first time we use Git on a new machine,
we need to configure a few things.
Here's how Dracula sets up his new laptop:

~~~
$ git config --global user.name "Vlad Dracula"
$ git config --global user.email "vlad@tran.sylvan.ia"
$ git config --global color.ui "auto"
$ git config --global core.editor "nano"
~~~
{:class="in"}

(Please use your own name and email address instead of Dracula's,
and please make sure you choose an editor that's actually on your system,
such as `notepad` on Windows.)

Git commands are written `git verb`,
where `verb` is what we actually want it to do.
In this case,
we're telling Git:

*   our name and email address,
*   to colorize output,
*   what our favorite text editor is, and
*   that we want to use these settings globally (i.e., for every project),

The four commands above only need to be run once:
the flag `--global` tells Git to use the settings for every project on this machine.

#### Creating a Repository

Once Git is configured,
we can start using it.
Let's create a directory for our work:

~~~
$ mkdir planets
$ cd planets
~~~
{:class="in"}

and tell Git to make it a [repository](../../gloss.html#repository)&mdash;a place where
Git can store old versions of our files:

~~~
$ git init
~~~
{:class="in"}

If we use `ls` to show the directory's contents,
it appears that nothing has changed:

~~~
$ ls
~~~
{:class="in"}

But if we add the `-a` flag to show everything,
we can see that Git has created a hidden directory called `.git`:

~~~
$ ls -a
~~~
{:class="in"}
~~~
.	..	.git
~~~
{:class="out"}

Git stores information about the project in this special sub-directory.
If we ever delete it,
we will lose the project's history.

We can check that everything is set up correctly
by asking Git to tell us the status of our project:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
#
# Initial commit
#
nothing to commit (create/copy files and use "git add" to track)
~~~
{:class="out"}

#### Tracking Changes to Files

Let's create a file called `mars.txt` that contains some notes
about the Red Planet's suitability as a base.
(We'll use `nano` to edit the file;
you can use whatever editor you like.
In particular, this does not have to be the core.editor you set globally earlier.)

~~~
$ nano mars.txt
~~~
{:class="in"}

Type the text below into the `mars.txt` file:

~~~
Cold and dry, but everything is my favorite color
~~~
{:class="in"}

`mars.txt` now contains a single line:

~~~
$ ls
~~~
{:class="in"}
~~~
mars.txt
~~~
{:class="out"}
~~~
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
~~~
{:class="out"}

If we check the status of our project again,
Git tells us that it's noticed the new file:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	mars.txt
nothing added to commit but untracked files present (use "git add" to track)
~~~
{:class="out"}

The "untracked files" message means that there's a file in the directory
that Git isn't keeping track of.
We can tell Git that it should do so using `git add`:

~~~
$ git add mars.txt
~~~
{:class="in"}

and then check that the right thing happened:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#	new file:   mars.txt
#
~~~
{:class="out"}

Git now knows that it's supposed to keep track of `mars.txt`,
but it hasn't yet recorded any changes for posterity as a commit.
To get it to do that,
we need to run one more command:

~~~
$ git commit -m "Starting to think about Mars"
~~~
{:class="in"}
~~~
[master (root-commit) f22b25e] Starting to think about Mars
 1 file changed, 1 insertion(+)
 create mode 100644 mars.txt
~~~
{:class="out"}

When we run `git commit`,
Git takes everything we have told it to save by using `git add`
and stores a copy permanently inside the special `.git` directory.
This permanent copy is called a [revision](../../gloss.html#revision)
and its short identifier is `f22b25e`.
(Your revision may have another identifier.)

We use the `-m` flag (for "message")
to record a comment that will help us remember later on what we did and why.
If we just run `git commit` without the `-m` option,
Git will launch `nano` (or whatever other editor we configured at the start)
so that we can write a longer message.

If we run `git status` now:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
nothing to commit, working directory clean
~~~
{:class="out"}

it tells us everything is up to date.
If we want to know what we've done recently,
we can ask Git to show us the project's history using `git log`:

~~~
$ git log
~~~
{:class="in"}
~~~
commit f22b25e3233b4645dabd0d81e651fe074bd8e73b
Author: Vlad Dracula <vlad@tran.sylvan.ia>
Date:   Thu Aug 22 09:51:46 2013 -0400

    Starting to think about Mars
~~~
{:class="out"}

`git log` lists all revisions  made to a repository in reverse chronological order.
The listing for each revision includes
the revision's full identifier
(which starts with the same characters as
the short identifier printed by the `git commit` command earlier),
the revision's author,
when it was created,
and the log message Git was given when the revision was created.

> #### Where Are My Changes?
>
> If we run `ls` at this point, we will still see just one file called `mars.txt`.
> That's because Git saves information about files' history
> in the special `.git` directory mentioned earlier
> so that our filesystem doesn't become cluttered
> (and so that we can't accidentally edit or delete an old version).

#### Changing a File

Now suppose Dracula adds more information to the file.
(Again, we'll edit with `nano` and then `cat` the file to show its contents;
you may use a different editor, and don't need to `cat`.)

~~~
$ nano mars.txt
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
~~~
{:class="out"}

When we run `git status` now,
it tells us that a file it already knows about has been modified:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   mars.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
~~~
{:class="out"}

The last line is the key phrase:
"no changes added to commit".
We have changed this file,
but we haven't told Git we will want to save those changes
(which we do with `git add`)
much less actually saved them.
Let's double-check our work using `git diff`,
which shows us the differences between
the current state of the file
and the most recently saved version:

~~~
$ git diff
~~~
{:class="in"}
~~~
diff --git a/mars.txt b/mars.txt
index df0654a..315bf3a 100644
--- a/mars.txt
+++ b/mars.txt
@@ -1 +1,2 @@
 Cold and dry, but everything is my favorite color
+The two moons may be a problem for Wolfman
~~~
{:class="out"}

The output is cryptic because
it is actually a series of commands for tools like editors and `patch`
telling them how to reconstruct one file given the other.
If we can break it down into pieces:

1.  The first line tells us that Git is using the Unix `diff` command
    to compare the old and new versions of the file.
2.  The second line tells exactly which [revisions](../../gloss.html#revision) of the file
    Git is comparing;
    `df0654a` and `315bf3a` are unique computer-generated labels for those revisions.
3.  The remaining lines show us the actual differences
    and the lines on which they occur.
    In particular,
    the `+` markers in the first column show where we are adding lines.

Let's commit our change:

~~~
$ git commit -m "Concerns about Mars's moons on my furry friend"
~~~
{:class="in"}
~~~
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   mars.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
~~~
{:class="out"}

Whoops:
Git won't commit because we didn't use `git add` first.
Let's fix that:

~~~
$ git add mars.txt
$ git commit -m "Concerns about Mars's moons on my furry friend"
~~~
{:class="in"}
~~~
[master 34961b1] Concerns about Mars's moons on my furry friend
 1 file changed, 1 insertion(+)
~~~
{:class="out"}

Git insists that we add files to the set we want to commit
before actually committing anything
because we may not want to commit everything at once.
For example,
suppose we're adding a few citations to our supervisor's work
to our thesis.
We might want to commit those additions,
and the corresponding addition to the bibliography,
but *not* commit the work we're doing on the conclusion
(which we haven't finished yet).

To allow for this,
Git has a special staging area
where it keeps track of things that have been added to
the current [change set](../../gloss.html#change-set)
but not yet committed.
`git add` puts things in this area,
and `git commit` then copies them to long-term storage (as a commit):

<img src="img/git-staging-area.svg" alt="The Git Staging Area" />

Let's watch as our changes to a file move from our editor
to the staging area
and into long-term storage.
First,
we'll add another line to the file:

~~~
$ nano mars.txt
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}
~~~
$ git diff
~~~
{:class="in"}
~~~
diff --git a/mars.txt b/mars.txt
index 315bf3a..b36abfd 100644
--- a/mars.txt
+++ b/mars.txt
@@ -1,2 +1,3 @@
 Cold and dry, but everything is my favorite color
 The two moons may be a problem for Wolfman
+But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

So far, so good:
we've added one line to the end of the file
(shown with a `+` in the first column).
Now let's put that change in the staging area
and see what `git diff` reports:

~~~
$ git add mars.txt
$ git diff
~~~
{:class="in"}

There is no output:
as far as Git can tell,
there's no difference between what it's been asked to save permanently
and what's currently in the directory.
However,
if we do this:

~~~
$ git diff --staged
~~~
{:class="in"}
~~~
diff --git a/mars.txt b/mars.txt
index 315bf3a..b36abfd 100644
--- a/mars.txt
+++ b/mars.txt
@@ -1,2 +1,3 @@
 Cold and dry, but everything is my favorite color
 The two moons may be a problem for Wolfman
+But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

it shows us the difference between
the last committed change
and what's in the staging area.
Let's save our changes:

~~~
$ git commit -m "Thoughts about the climate"
~~~
{:class="in"}
~~~
[master 005937f] Thoughts about the climate
 1 file changed, 1 insertion(+)
~~~
{:class="out"}

check our status:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
nothing to commit, working directory clean
~~~
{:class="out"}

and look at the history of what we've done so far:

~~~
$ git log
~~~
{:class="in"}
~~~
commit 005937fbe2a98fb83f0ade869025dc2636b4dad5
Author: Vlad Dracula <vlad@tran.sylvan.ia>
Date:   Thu Aug 22 10:14:07 2013 -0400

    Thoughts about the climate

commit 34961b159c27df3b475cfe4415d94a6d1fcd064d
Author: Vlad Dracula <vlad@tran.sylvan.ia>
Date:   Thu Aug 22 10:07:21 2013 -0400

    Concerns about Mars's moons on my furry friend

commit f22b25e3233b4645dabd0d81e651fe074bd8e73b
Author: Vlad Dracula <vlad@tran.sylvan.ia>
Date:   Thu Aug 22 09:51:46 2013 -0400

    Starting to think about Mars
~~~
{:class="out"}

#### Exploring History

If we want to see what we changed when,
we use `git diff` again,
but refer to old versions
using the notation `HEAD~1`, `HEAD~2`, and so on:

~~~
$ git diff HEAD~1 mars.txt
~~~
{:class="in"}
~~~
diff --git a/mars.txt b/mars.txt
index 315bf3a..b36abfd 100644
--- a/mars.txt
+++ b/mars.txt
@@ -1,2 +1,3 @@
 Cold and dry, but everything is my favorite color
 The two moons may be a problem for Wolfman
+But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}
~~~
$ git diff HEAD~2 mars.txt
~~~
{:class="in"}
~~~
diff --git a/mars.txt b/mars.txt
index df0654a..b36abfd 100644
--- a/mars.txt
+++ b/mars.txt
@@ -1 +1,3 @@
 Cold and dry, but everything is my favorite color
+The two moons may be a problem for Wolfman
+But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

In this way,
we build up a chain of revisions.
The most recent end of the chain is referred to as `HEAD`;
we can refer to previous revisions using the `~` notation,
so `HEAD~1` (pronounced "head minus one")
means "the previous revision",
while `HEAD~123` goes back 123 revisions from where we are now.

We can also refer to revisions using
those long strings of digits and letters
that `git log` displays.
These are unique IDs for the changes,
and "unique" really does mean unique:
every change to any set of files on any machine
has a unique 40-character identifier.
Our first commit was given the ID
f22b25e3233b4645dabd0d81e651fe074bd8e73b,
so let's try this:

~~~
$ git diff f22b25e3233b4645dabd0d81e651fe074bd8e73b mars.txt
~~~
{:class="in"}
~~~
diff --git a/mars.txt b/mars.txt
index df0654a..b36abfd 100644
--- a/mars.txt
+++ b/mars.txt
@@ -1 +1,3 @@
 Cold and dry, but everything is my favorite color
+The two moons may be a problem for Wolfman
+But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

That's the right answer,
but typing random 40-character strings is annoying,
so Git lets us use just the first few:

~~~
$ git diff f22b25e mars.txt
~~~
{:class="in"}
~~~
diff --git a/mars.txt b/mars.txt
index df0654a..b36abfd 100644
--- a/mars.txt
+++ b/mars.txt
@@ -1 +1,3 @@
 Cold and dry, but everything is my favorite color
+The two moons may be a problem for Wolfman
+But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

#### Recovering Old Versions

All right:
we can save changes to files and see what we've changed---how
can we restore older versions of things?
Let's suppose we accidentally overwrite our file:

~~~
$ nano mars.txt
$ cat mars.txt
~~~
{:class="in"}
~~~
We will need to manufacture our own oxygen
~~~
{:class="out"}

`git status` now tells us that the file has been changed,
but those changes haven't been staged:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   mars.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
~~~
{:class="out"}

We can put things back the way they were
by using `git checkout`:

~~~
$ git checkout HEAD mars.txt
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

As you might guess from its name,
`git checkout` checks out (i.e., restores) an old version of a file.
In this case,
we're telling Git that we want to recover the version of the file recorded in `HEAD`,
which is the last saved revision.
If we want to go back even further,
we can use a revision identifier instead:

~~~
$ git checkout f22b25e mars.txt
~~~
{:class="in"}

It's important to remember that
we must use the revision number that identifies the state of the repository
*before* the change we're trying to undo.
A common mistake is to use the revision number of
the commit in which we made the change we're trying to get rid of:

<img src="img/git-when-revisions-updated.svg" alt="When Git Updates Revision Numbers" />

> #### Simplifying the Common Case
>
> If you read the output of `git status` carefully,
> you'll see that it includes this hint:
>
> ~~~
> (use "git checkout -- <file>..." to discard changes in working directory)
> ~~~
> {:class="in"}
>
> As it says,
> `git checkout` without a version identifier restores files to the state saved in `HEAD`.
> The double dash `--` is needed to separate the names of the files being recovered
> from the command itself:
> without it,
> Git would try to use the name of the file as the revision identifier.

The fact that files can be reverted one by one
tends to change the way people organize their work.
If everything is in one large document,
it's hard (but not impossible) to undo changes to the introduction
without also undoing changes made later to the conclusion.
If the introduction and conclusion are stored in separate files,
on the other hand,
moving backward and forward in time becomes much easier.

#### Ignoring Things

What if we have files that we do not want Git to track for us,
like backup files created by our editor
or intermediate files created during data analysis.
Let's create a few dummy files:

~~~
$ mkdir results
$ touch a.dat b.dat c.dat results/a.out results/b.out
~~~
{:class="in"}

and see what Git says:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	a.dat
#	b.dat
#	c.dat
#	results/
nothing added to commit but untracked files present (use "git add" to track)
~~~
{:class="out"}

Putting these files under version control would be a waste of disk space.
What's worse,
having them all listed could distract us from changes that actually matter,
so let's tell Git to ignore them.

We do this by creating a file in the root directory of our project called `.gitignore`.

~~~
$ nano .gitignore
$ cat .gitignore
~~~
{:class="in"}
~~~
*.dat
results/
~~~
{:class="out"}

These patterns tell Git to ignore any file whose name ends in `.dat`
and everything in the `results` directory.
(If any of these files were already being tracked,
Git would continue to track them.)

Once we have created this file,
the output of `git status` is much cleaner:

~~~
$ git status
~~~
{:class="in"}
~~~
# On branch master
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	.gitignore
nothing added to commit but untracked files present (use "git add" to track)
~~~
{:class="out"}

The only thing Git notices now is the newly-created `.gitignore` file.
You might think we wouldn't want to track it,
but everyone we're sharing our repository with will probably want to ignore
the same things that we're ignoring.
Let's add and commit `.gitignore`:

~~~
$ git add .gitignore
$ git commit -m "Add the ignore file"
$ git status
~~~
{:class="in"}
~~~
# On branch master
nothing to commit, working directory clean
~~~
{:class="out"}

As a bonus,
using `.gitignore` helps us avoid accidentally adding files to the repository that we don't want.

~~~
$ git add a.dat
~~~
{:class="in"}
~~~
The following paths are ignored by one of your .gitignore files:
a.dat
Use -f if you really want to add them.
fatal: no files added
~~~
{:class="out"}

If we really want to override our ignore settings,
we can use `git add -f` to force Git to add something.
We can also always see the status of ignored files if we want:

~~~
$ git status --ignored
~~~
{:class="in"}
~~~
# On branch master
# Ignored files:
#  (use "git add -f <file>..." to include in what will be committed)
#
#        a.dat
#        b.dat
#        c.dat
#        results/

nothing to commit, working directory clean
~~~
{:class="out"}

<div class="keypoints" markdown="1">

#### Key Points
*   Use `git config` to configure a user name, email address, editor, and other preferences once per machine.
*   `git init` initializes a repository.
*   `git status` shows the status of a repository.
*   Files can be stored in a project's working directory (which users see),
    the staging area (where the next commit is being built up)
    and the local repository (where snapshots are permanently recorded).
*   `git add` puts files in the staging area.
*   `git commit` creates a snapshot of the staging area in the local repository.
*   Always write a log message when committing changes.
*   `git diff` displays differences between revisions.
*   `git checkout` recovers old versions of files.
*   The `.gitignore` file tells Git what files to ignore.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Create a new Git repository on your computer called `bio`.
    Write a three-line biography for yourself in a file called `me.txt`,
    commit your changes,
    then modify one line and add a fourth and display the differences
    between its updated state and its original state.

2.  The following sequence of commands creates one Git repository inside another:

    ~~~
    cd           # return to home directory
    mkdir alpha  # make a new directory alpha
    cd alpha     # go into alpha
    git init     # make the alpha directory a Git repository
    mkdir beta   # make a sub-directory alpha/beta
    cd beta      # go into alpha/beta
    git init     # make the beta sub-directory a Git repository
    ~~~
    {:class="in"}

    Why is it a bad idea to do this?

</div>

---
layout: lesson
root: ../..
title: Collaborating
---
<div class="objectives" markdown="1">

#### Objectives
*   Explain what remote repositories are and why they are useful.
*   Explain what happens when a remote repository is cloned.
*   Explain what happens when changes are pushed to or pulled from a remote repository.

</div>

Version control really comes into its own
when we begin to collaborate with other people.
We already have most of the machinery we need to do this;
the only thing missing is to copy changes from one repository to another.

Systems like Git allow us to move work between any two repositories.
In practice,
though,
it's easiest to use one copy as a central hub,
and to keep it on the web rather than on someone's laptop.
Most programmers use hosting services like [GitHub](http://github.com) or [BitBucket](http://bitbucket.org)
to hold those master copies;
we'll explore the pros and cons of this in the final section of this lesson.

Let's start by sharing the changes we've made to our current project with the world.
Log in to GitHub,
then click on the icon in the top right corner to create a new repository called `planets`:

<img src="img/github-create-repo-01.png" alt="Creating a Repository on GitHub (Step 1)" />

Name your repository "planets" and then click "Create Repository":

<img src="img/github-create-repo-02.png" alt="Creating a Repository on GitHub (Step 2)" />

As soon as the repository is created,
GitHub displays a page with a URL and some information on how to configure your local repository:

<img src="img/github-create-repo-03.png" alt="Creating a Repository on GitHub (Step 3)" />

This effectively does the following on GitHub's servers:

~~~
$ mkdir planets
$ cd planets
$ git init
~~~
{:class="in"}

Our local repository still contains our earlier work on `mars.txt`,
but the remote repository on GitHub doesn't contain any files yet:

<img src="img/git-freshly-made-github-repo.svg" alt="Freshly-Made GitHub Repository" />

The next step is to connect the two repositories.
We do this by making the GitHub repository a [remote](../../gloss.html#repository-remote)
for the local repository.
The home page of the repository on GitHub includes
the string we need to identify it:

<img src="img/github-find-repo-string.png" alt="Where to Find Repository URL on GitHub" />

Click on the 'HTTPS' link to change the [protocol](../../gloss.html#protocol) from SSH to HTTPS.
It's slightly less convenient for day-to-day use,
but much less work for beginners to set up:

<img src="img/github-change-repo-string.png" alt="Changing the Repository URL on GitHub" />

Copy that URL from the browser,
go into the local `planets` repository,
and run this command:

~~~
$ git remote add origin https://github.com/vlad/planets
~~~
{:class="in"}

Make sure to use the URL for your repository rather than Vlad's:
the only difference should be your username instead of `vlad`.

We can check that the command has worked by running `git remote -v`:

~~~
$ git remote -v
~~~
{:class="in"}
~~~
origin   https://github.com/vlad/planets.git (push)
origin   https://github.com/vlad/planets.git (fetch)
~~~
{:class="out"}

The name `origin` is a local nickname for your remote repository:
we could use something else if we wanted to,
but `origin` is by far the most common choice.

Once the nickname `origin` is set up,
this command will push the changes from our local repository
to the repository on GitHub:

~~~
$ git push origin master
~~~
{:class="in"}
~~~
Counting objects: 9, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (9/9), 821 bytes, done.
Total 9 (delta 2), reused 0 (delta 0)
To https://github.com/vlad/planets
 * [new branch]      master -> master
Branch master set up to track remote branch master from origin.
~~~
{:class="out"}

Our local and remote repositories are now in this state:

<img src="img/github-repo-after-first-push.svg" alt="GitHub Repository After First Push" />

> #### The '-u' Flag
>
> You may see a `-u` option used with `git push` in some documentation.
> It is related to concepts we cover in our intermediate lesson,
> and can safely be ignored for now.

We can pull changes from the remote repository to the local one as well:

~~~
$ git pull origin master
~~~
{:class="in"}
~~~
From https://github.com/vlad/planets
 * branch            master     -> FETCH_HEAD
Already up-to-date.
~~~
{:class="out"}

Pulling has no effect in this case
because the two repositories are already synchronized.
If someone else had pushed some changes to the repository on GitHub,
though,
this command would download them to our local repository.

We can simulate working with a collaborator using another copy of the repository on our local machine.
To do this,
`cd` to the directory `/tmp`.
(Note the absolute path:
don't make `tmp` a subdirectory of the existing repository).
Instead of creating a new repository here with `git init`,
we will [clone](../../gloss.html#repository-clone) the existing repository from GitHub:

~~~
$ cd /tmp
$ git clone https://github.com/vlad/planets.git
~~~
{:class="in"}

`git clone` creates a fresh local copy of a remote repository.
(We did it in `/tmp` or some other directory so that we don't overwrite our existing `planets` directory.)
Our computer now has two copies of the repository:

<img src="img/git-after-duplicate-clone.svg" alt="After Creating Duplicate Clone of Repository" />

Let's make a change in the copy in `/tmp/planets`:

~~~
$ cd /tmp/planets
$ nano pluto.txt
$ cat pluto.txt
~~~
{:class="in"}
~~~
It is so a planet!
~~~
{:class="out"}
~~~
$ git add pluto.txt
$ git commit -m "Some notes about Pluto"
~~~
{:class="in"}
~~~
 1 file changed, 1 insertion(+)
 create mode 100644 pluto.txt
~~~
{:class="out"}

then push the change to GitHub:

~~~
$ git push origin master
~~~
{:class="in"}
~~~
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 306 bytes, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/vlad/planets.git
   9272da5..29aba7c  master -> master
~~~
{:class="out"}

Note that we didn't have to create a remote called `origin`:
Git does this automatically,
using that name,
when we clone a repository.
(This is why `origin` was a sensible choice earlier
when we were setting up remotes by hand.)

Our three repositories now look like this:

<img src="img/git-after-change-to-duplicate-repo.svg" alt="After Pushing Change from Duplicate Repository" />

We can now download changes into the original repository on our machine:

~~~
$ cd ~/planets
$ git pull origin master
~~~
{:class="in"}
~~~
remote: Counting objects: 4, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0)
Unpacking objects: 100% (3/3), done.
From https://github.com/vlad/planets
 * branch            master     -> FETCH_HEAD
Updating 9272da5..29aba7c
Fast-forward
 pluto.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 pluto.txt
~~~
{:class="out"}

which gives us this:

<img src="img/git-after-pulling-to-local-repo.svg" alt="After Pulling Change to Local Repository" />

In practice,
we would probably never have two copies of the same remote repository
on our laptop at once.
Instead,
one of those copies would be on our laptop,
and the other on a lab machine,
or on someone else's computer.
Pushing and pulling changes gives us a reliable way
to share work between different people and machines.

<div class="keypoints" markdown="1">

#### Key Points
*   A local Git repository can be connected to one or more remote repositories.
*   Use the HTTPS protocol to connect to remote repositories until you have learned how to set up SSH.
*   `git push` copies changes from a local repository to a remote repository.
*   `git pull` copies changes from a remote repository to a local repository.
*   `git clone` copies a remote repository to create a local repository with a remote called `origin` automatically set up.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Create a repository on GitHub,
    clone it,
    add a file,
    push those changes to GitHub,
    and then look at the [timestamp](../../gloss.html#timestamp) of the change on GitHub.
    How does GitHub record times, and why?

</div>

---
layout: lesson
root: ../..
title: Conflicts
---
<div class="objectives" markdown="1">

#### Objectives
*   Explain what conflicts are and when they can occur.
*   Resolve conflicts resulting from a merge.

</div>

As soon as people can work in parallel,
someone's going to step on someone else's toes.
This will even happen with a single person:
if we are working on a piece of software on both our laptop and a server in the lab,
we could make different changes to each copy.
Version control helps us manage these [conflicts](../../gloss.html#conflict)
by giving us tools to [resolve](../../gloss.html#resolve) overlapping changes.

To see how we can resolve conflicts,
we must first create one.
The file `mars.txt` currently looks like this
in both local copies of our `planets` repository
(the one in our home directory and the one in `/tmp`):

~~~
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
~~~
{:class="out"}

Let's add a line to the copy under our home directory:

~~~
$ nano mars.txt
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
This line added to our home copy
~~~
{:class="out"}

and then push the change to GitHub:

~~~
$ git add mars.txt
$ git commit -m "Adding a line in our home copy"
~~~
{:class="in"}
~~~
[master 5ae9631] Adding a line in our home copy
 1 file changed, 1 insertion(+)
~~~
{:class="out"}
~~~
$ git push origin master
~~~
{:class="in"}
~~~
Counting objects: 5, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 352 bytes, done.
Total 3 (delta 1), reused 0 (delta 0)
To https://github.com/vlad/planets
   29aba7c..dabb4c8  master -> master
~~~
{:class="out"}

Our repositories are now in this state:

<img src="img/git-after-first-conflicting-change.svg" alt="After Making First Change" />

Now let's switch to the copy under `/tmp`
and make a different change there
*without* updating from GitHub:

~~~
$ cd /tmp/planets
$ nano mars.txt
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
We added a different line in the temporary copy
~~~
{:class="out"}

We can commit the change locally:

~~~
$ git add mars.txt
$ git commit -m "Adding a line in the temporary copy"
~~~
{:class="in"}
~~~
[master 07ebc69] Adding a line in the temporary copy
 1 file changed, 1 insertion(+)
~~~
{:class="out"}

but Git won't let us push it to GitHub:

~~~
$ git push origin master
~~~
{:class="in"}
~~~
To https://github.com/vlad/planets.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'https://github.com/vlad/planets.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
~~~
{:class="out"}

Git detects that the changes made in one copy overlap with those made in the other
and stops us from trampling on our previous work.
What we have to do is pull the changes from GitHub,
[merge](../../gloss.html#repository-merge) them into the copy we're currently working in,
and then push that.
Let's start by pulling:

~~~
$ git pull origin master
~~~
{:class="in"}
~~~
remote: Counting objects: 5, done.        
remote: Compressing objects: 100% (2/2), done.        
remote: Total 3 (delta 1), reused 3 (delta 1)        
Unpacking objects: 100% (3/3), done.
From https://github.com/vlad/planets
 * branch            master     -> FETCH_HEAD
Auto-merging mars.txt
CONFLICT (content): Merge conflict in mars.txt
Automatic merge failed; fix conflicts and then commit the result.
~~~
{:class="out"}

`git pull` tells us there's a conflict,
and marks that conflict in the affected file:

~~~
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
<<<<<<< HEAD
We added a different line in the temporary copy
=======
This line added to our home copy
>>>>>>> dabb4c8c450e8475aee9b14b4383acc99f42af1d
~~~
{:class="out"}

Our change---the one in `HEAD`---is preceded by `<<<<<<<`.
Git has then inserted `=======` as a separator between the conflicting changes
and marked the end of the content downloaded from GitHub with `>>>>>>>`.
(The string of letters and digits after that marker
identifies the revision we've just downloaded.)

It is now up to us to edit this file to remove these markers
and reconcile the changes.
We can do anything we want:
keep the change in this branch,
keep the change made in the other,
write something new to replace both,
or get rid of the change entirely.
Let's replace both so that the file looks like this:

~~~
$ cat mars.txt
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
We removed the conflict on this line
~~~
{:class="out"}

To finish merging,
we add `mars.txt` to the changes being made by the merge
and then commit:

~~~
$ git add mars.txt
$ git status
~~~
{:class="in"}
~~~
# On branch master
# All conflicts fixed but you are still merging.
#   (use "git commit" to conclude merge)
#
# Changes to be committed:
#
#	modified:   mars.txt
#
~~~
{:class="out"}
~~~
$ git commit -m "Merging changes from GitHub"
~~~
{:class="in"}
~~~
[master 2abf2b1] Merging changes from GitHub
~~~
{:class="out"}

Our repositories now look like this:

<img src="img/git-after-second-conflicting-change.svg" alt="After Making Second (Conflicting) Change" />

so we push our changes to GitHub:

~~~
$ git push origin master
~~~
{:class="in"}
~~~
Counting objects: 10, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 697 bytes, done.
Total 6 (delta 2), reused 0 (delta 0)
To https://github.com/vlad/planets.git
   dabb4c8..2abf2b1  master -> master
~~~
{:class="out"}

to get this:

<img src="img/git-after-merging.svg" alt="After Merging Changes Locally" />

Git keeps track of what we've merged with what,
so we don't have to fix things by hand again
if we switch back to the repository in our home directory and pull from GitHub:

~~~
$ cd ~/planets
$ git pull origin master
~~~
{:class="in"}
~~~
remote: Counting objects: 10, done.        
remote: Compressing objects: 100% (4/4), done.        
remote: Total 6 (delta 2), reused 6 (delta 2)        
Unpacking objects: 100% (6/6), done.
From https://github.com/vlad/planets
 * branch            master     -> FETCH_HEAD
Updating dabb4c8..2abf2b1
Fast-forward
 mars.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
~~~
{:class="out"}

we get the merged file:

~~~
$ cat mars.txt 
~~~
{:class="in"}
~~~
Cold and dry, but everything is my favorite color
The two moons may be a problem for Wolfman
But the Mummy will appreciate the lack of humidity
We removed the conflict on this line
~~~
{:class="out"}

We don't need to merge again because GitHub knows someone has already done that.

Version control's ability to merge conflicting changes
is another reason users tend to divide their programs and papers into multiple files
instead of storing everything in one large file.
There's another benefit too:
whenever there are repeated conflicts in a particular file,
the version control system is essentially trying to tell its users
that they ought to clarify who's responsible for what,
or find a way to divide the work up differently.

<div class="keypoints" markdown="1">

#### Key Points
*   Conflicts occur when two or more people change the same file(s) at the same time.
*   The version control system does not allow people to blindly overwrite each other's changes.
    Instead, it highlights conflicts so that they can be resolved.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Clone the repository created by your instructor.
    Add a new file to it,
    and modify an existing file (your instructor will tell you which one).
    When asked by your instructor,
    pull her changes from the repository to create a conflict,
    then resolve it.

2.  What does Git do
    when there is a conflict in an image or some other non-textual file
    that is stored in version control?

</div>

---
layout: lesson
root: ../..
title: Open Science
---
<div class="objectives" markdown="1">

#### Objectives
*   Explain how the GNU Public License (GPL) differs from most other open licenses.
*   Explain the four kinds of restrictions that can be combined in a Creative Commons license.
*   Correctly add licensing and citation information to a project repository.
*   Outline options for hosting code and data and the pros and cons of each.

</div>

<blockquote>
The opposite of "open" isn't "closed".
The opposite of "open" is "broken".
<br/>
&mdash; John Wilbanks
</blockquote>

Free sharing of information might be the ideal in science,
but the reality is often more complicated.
Normal practice today looks something like this:

*   A scientist collects some data and stores it on a machine
    that is occasionally backed up by her department.
*   She then writes or modifies a few small programs
    (which also reside on her machine)
    to analyze that data.
*   Once she has some results,
    she writes them up and submits her paper.
    She might include her data---a growing number of journals require this---but
    she probably doesn't include her code.
*   Time passes.
*   The journal sends her reviews written anonymously by a handful of other people in her field.
    She revises her paper to satisfy them,
    during which time she might also modify the scripts she wrote earlier,
    and resubmits.
*   More time passes.
*   The paper is eventually published.
    It might include a link to an online copy of her data,
    but the paper itself will be behind a paywall:
    only people who have personal or institutional access
    will be able to read it.

For a growing number of scientists,
though,
the process looks like this:

*   The data that the scientist collects is stored in an open access repository
    like [figshare](http://figshare.com/) or [Dryad](http://datadryad.org/)
    as soon as it's collected,
    and given its own DOI.
*   The scientist creates a new repository on GitHub to hold her work.
*   As she does her analysis,
    she pushes changes to her scripts
    (and possibly some output files)
    to that repository.
    She also uses the repository for her paper;
    that repository is then the hub for collaboration with her colleagues.
*   When she's happy with the state of her paper,
    she posts a version to [arXiv](http://arxiv.org/)
    or some other preprint server
    to invite feedback from peers.
*   Based on that feedback,
    she may post several revisions
    before finally submitting her paper to a journal.
*   The published paper includes links to her preprint
    and to her code and data repositories,
    which  makes it much easier for other scientists
    to use her work as starting point for their own research.

This open model accelerates discovery:
the more open work is,
the more widely it is cited and re-used.
However,
people who want to work this way need to make some decisions
about what exactly "open" means in practice.

#### Licensing

The first question is licensing.
Broadly speaking,
there are two kinds of open license for software,
and half a dozen for data and publications.
For software,
people can choose between the [GNU Public License](http://opensource.org/licenses/GPL-3.0) (GPL) on the one hand,
and licenses like the [MIT](http://opensource.org/licenses/MIT)
and [BSD](http://opensource.org/licenses/BSD-2-Clause) licenses on the other.
All of these licenses allow unrestricted sharing and modification of programs,
but the GPL is [infective](../../gloss.html#infective-license):
anyone who distributes a modified version of the code
(or anything that includes GPL'd code)
must make *their* code freely available as well.

Proponents of the GPL argue that this requirement is needed
to ensure that people who are benefiting from freely-available code
are also contributing back to the community.
Opponents counter that many open source projects have had long and successful lives
without this condition,
and that the GPL makes it more difficult to combine code from different sources.
At the end of the day,
what matters most is that:

1.   every project have a file in its home directory
     called something like `LICENSE` or `LICENSE.txt`
     that clearly states what the license is, and
2.   people use existing licenses rather than writing new ones.

The second point is as important as the first:
most scientists are not lawyers,
so wording that may seem sensible to a layperson
may have unintended gaps or consequences.
The [Open Source Initiative](http://opensource.org/)
maintains a list of open source licenses,
and [tl;drLegal](http://www.tldrlegal.com/) explains many of them in plain English.

When it comes to data, publications, and the like,
scientists have many more options to choose from.
The good news is that an organization called [Creative Commons](http://creativecommons.org/)
has prepared a set of licenses using combinations of four basic restrictions:

*   Attribution: derived works must give the original author credit for their work.
*   No Derivatives: people may copy the work, but must pass it along unchanged.
*   Share Alike: derivative works must license their work under the same terms as the original.
*   Noncommercial: free use is allowed, but commercial use is not.

These four restrictions are abbreviated "BY", "ND", "SA", and "NC" respectively,
so "CC-BY-ND" means,
"People can re-use the work both for free and commercially,
but cannot make changes and must cite the original."
These [short descriptions](http://creativecommons.org/licenses/)
summarize the six CC licenses in plain language,
and include links to their full legal formulations.

There is one other important license that doesn't fit into this categorization.
Scientists (and other people) can choose to put material in the public domain,
which is often abbreviated "PD".
In this case,
anyone can do anything they want with it,
without needing to cite the original
or restrict further re-use.
The table below shows how the six Creative Commons licenses and PD relate to one another:

<table border="1">
  <tr>
    <td></td>
    <td colspan="7" align="center">Licenses that can be used for derivative work or adaptation</td>
  </tr>
  <tr>
    <td>Original work</td> <td>by</td> <td>by-nc</td> <td>by-nc-nd</td> <td>by-nc-sa</td> <td>by-nd</td> <td>by-sa</td> <td>pd</td>
  </tr>
  <tr>
    <td>by</td>       <td>X</td> <td>X</td> <td>X</td> <td>X</td> <td>X</td> <td>X</td> <td> </td>
  </tr>
  <tr>
    <td>by-nc</td>    <td> </td> <td>X</td> <td>X</td> <td>X</td> <td> </td> <td> </td> <td> </td>
  </tr>
  <tr>
    <td>by-nc-nd</td> <td> </td> <td> </td> <td> </td> <td> </td> <td> </td> <td> </td> <td> </td>
  </tr>
  <tr>
    <td>by-nc-sa</td> <td> </td> <td> </td> <td> </td> <td>X</td> <td> </td> <td> </td> <td> </td>
  </tr>
  <tr>
    <td>by-nd</td>    <td> </td> <td> </td> <td> </td> <td> </td> <td> </td> <td> </td> <td> </td>
  </tr>
  <tr>
    <td>by-sa</td>    <td> </td> <td> </td> <td> </td> <td> </td> <td> </td> <td>X</td> <td> </td>
  </tr>
  <tr>
    <td>pd</td>       <td>X</td> <td>X</td> <td>X</td> <td>X</td> <td>X</td> <td>X</td> <td>X</td>
  </tr>
</table>

[Software Carpentry](http://software-carpentry.org/license.html)
uses CC-BY for its lessons and the MIT License for its code
in order to encourage the widest possible re-use.
Again,
the most important thing is for the `LICENSE` file in the root directory of your project
to state clearly what your license is.
You may also want to include a file called `CITATION` or `CITATION.txt`
that describes how to reference your project;
the one for Software Carpentry states:

<div class="file" markdown="1">
~~~
To reference Software Carpentry in publications, please cite both of the following:

Greg Wilson: "Software Carpentry: Lessons Learned". arXiv:1307.5448, July 2013.

@online{wilson-software-carpentry-2013,
  author      = {Greg Wilson},
  title       = {Software Carpentry: Lessons Learned},
  version     = {1},
  date        = {2013-07-20},
  eprinttype  = {arxiv},
  eprint      = {1307.5448}
}
~~~
</div>

#### Hosting

The second big question for groups that want to open up their work
is where to host their code and data.
One option is for the lab, the department, or the university to provide a server,
manage accounts and backups,
and so on.
The main benefit of this is that it clarifies who owns what,
which is particularly important if any of the material is sensitive
(i.e.,
relates to experiments involving human subjects
or may be used in a patent application).
The main drawbacks are the cost of providing the service and its longevity:
a scientist who has spent ten years collecting data
would like to be sure that data will still be available ten years from now,
but that's well beyond the lifespan of most of the grants that fund academic infrastructure.

Another option is to purchase a domain
and pay an Internet service provider (ISP) to host it.
This gives the individual or group more control,
and sidesteps problems that can arise when moving from one institution to another,
but requires more time and effort to set up than either
the option above or the option below.

The third option is to use a public hosting service like [GitHub](http://github.com),
[BitBucket](http://bitbucket.org),
[Google Code](http://code.google.com),
or [SourceForge](http://sourceforge.net).
All of these allow people to create repositories through a web interface,
and also provide mailing lists,
ways to keep track of who's doing what,
and so on.
They all benefit from economies of scale and network effects:
it's easier to run one large service well
than to run many smaller services to the same standard,
and it's also easier for people to collaborate if they're using the same service,
not least because it gives them fewer passwords to remember.

However,
all of these services place some constraints on people's work.
In particular,
most give users a choice:
if they're willing to share their work with others,
it will be hosted for free,
but if they want privacy,
they may have to pay.
Sharing might seem like the only valid choice for science,
but many institutions may not allow researchers to do this,
either because they want to protect future patent applications
or simply because what's new is often also frightening.

<div class="keypoints" markdown="1">

#### Key Points
*   Open scientific work is more useful and more highly cited than closed.
*   People who incorporate GPL'd software into theirs must make theirs open;
    most other open licenses do not require this.
*   The Creative Commons family of licenses allow people to mix and match
    requirements and restrictions on attribution,
    creation of derivative works,
    further sharing,
    and commercialization.
*   People who are not lawyers should not try to write licenses from scratch.
*   Projects can be hosted on university servers,
    on personal domains,
    or on public forges.
*   Rules regarding intellectual property and storage of sensitive information apply
    no matter where code and data are hosted.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Find out whether you are allowed to apply an open license to your software.
    Can you do this unilaterally,
    or do you need permission from someone in your institution?
    If so, who?

2.  Find out whether you are allowed to host your work openly on a public forge.
    Can you do this unilaterally,
    or do you need permission from someone in your institution?
    If so, who?

</div>

---
layout: lesson
root: ../..
title: Version Control with Git
---
Version control is the lab notebook of the digital world:
it's what professionals use to keep track of what they've done
and to collaborate with other people.
Every large software development project relies on it,
and most programmers use it for their small jobs as well.
And it isn't just for software:
books (like this one),
papers,
small data sets,
and anything that changes over time or needs to be shared
can and should be stored in a version control system.

<div class="toc" markdown="1">

1.  [Introducing Version Control](00-intro.html)
2.  [A Better Kind of Backup](01-backup.html)
3.  [Collaborating](02-collab.html)
4.  [Conflicts](03-conflict.html)
5.  [Open Science](04-open.html)

</div>

# Resources

*   `img`: images used in lessons

---
layout: lesson
root: ../..
---

## Analyzing Patient Data


<div class="">
<p>We are studying inflammation in patients who have been given a new treatment for arthritis, and need to analyze the first dozen data sets. The data sets are stored in <a href="../../gloss.html#csv">comma-separated values</a> (CSV) format: each row holds information for a single patient, and the columns represent successive days. The first few rows of our first file look like this:</p>
<pre><code>0,0,1,3,1,2,4,7,8,3,3,3,10,5,7,4,7,7,12,18,6,13,11,11,7,7,4,6,8,8,4,4,5,7,3,4,2,3,0,0
0,1,2,1,2,1,3,2,2,6,10,11,5,9,4,4,7,16,8,6,18,4,12,5,12,7,11,5,11,3,3,5,4,4,5,5,1,1,0,1
0,1,1,3,3,2,6,2,5,9,5,7,4,5,4,15,5,11,9,10,19,14,12,17,7,12,11,7,4,2,10,5,4,2,2,3,2,2,1,1
0,0,2,0,4,2,2,1,6,7,10,7,9,13,8,8,15,10,10,7,17,4,4,7,6,15,6,4,9,11,3,5,6,3,3,4,2,3,2,1
0,1,1,3,3,1,3,5,2,4,4,7,6,5,3,10,8,10,6,17,9,14,9,7,13,9,12,6,7,7,9,6,3,2,2,4,2,0,1,1</code></pre>
</div>


<div class="">
<p>We want to:</p>
<ul>
<li>load that data into memory,</li>
<li>calculate the average inflammation per day across all patients, and</li>
<li>plot the result.</li>
</ul>
<p>To do all that, we'll have to learn a little bit about programming.</p>
</div>


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Explain what a library is, and what libraries are used for.</li>
<li>Load a Python library and use the things it contains.</li>
<li>Read tabular data from a file into a program.</li>
<li>Assign values to variables.</li>
<li>Select individual values and subsections from data.</li>
<li>Perform operations on arrays of data.</li>
<li>Display simple graphs.</li>
</ul>
</div>

### Loading Data


<div class="">
<p>Words are useful, but what's more useful are the sentences and stories we use them to build. Similarly, while a lot of powerful tools are built into languages like Python, even more lives in the <a href="../../gloss.html#library">libraries</a> they are used to build.</p>
<p>In order to load our inflammation data, we need to <a href="../../gloss.html#import">import</a> a library called NumPy that knows how to operate on matrices:</p>
</div>


<div class="in">
<pre>import numpy</pre>
</div>


<div class="">
<p>Importing a library is like getting a piece of lab equipment out of a storage locker and setting it up on the bench. Once it's done, we can ask the library to read our data file for us:</p>
</div>


<div class="in">
<pre>numpy.loadtxt(fname=&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)</pre>
</div>

<div class="out">
<pre>array([[ 0.,  0.,  1., ...,  3.,  0.,  0.],
       [ 0.,  1.,  2., ...,  1.,  0.,  1.],
       [ 0.,  1.,  1., ...,  2.,  1.,  1.],
       ..., 
       [ 0.,  1.,  1., ...,  1.,  1.,  1.],
       [ 0.,  0.,  0., ...,  0.,  2.,  0.],
       [ 0.,  0.,  1., ...,  1.,  1.,  0.]])</pre>
</div>


<div class="">
<p>The expression <code>numpy.loadtxt(...)</code> is a <a href="../../gloss.html#function-call">function call</a> that asks Python to run the function <code>loadtxt</code> that belongs to the <code>numpy</code> library. This <a href="../../gloss.html#dotted-notation">dotted notation</a> is used everywhere in Python to refer to the parts of things as <code>whole.part</code>.</p>
<p><code>numpy.loadtxt</code> has two <a href="../../gloss.html#parameter">parameters</a>: the name of the file we want to read, and the <a href="../../gloss.html#delimiter">delimiter</a> that separates values on a line. These both need to be character strings (or <a href="../../gloss.html#string">strings</a> for short), so we put them in quotes.</p>
<p>When we are finished typing and press Shift+Enter, the notebook runs our command. Since we haven't told it to do anything else with the function's output, the notebook displays it. In this case, that output is the data we just loaded. By default, only a few rows and columns are shown (with <code>...</code> displayed to mark missing data). To save space, Python displays numbers as <code>1.</code> instead of <code>1.0</code> when there's nothing interesting after the decimal point.</p>
</div>


<div class="">
<p>Our call to <code>numpy.loadtxt</code> read our file, but didn't save the data in memory. To do that, we need to <a href="../../gloss.html#assignment">assign</a> the array to a <a href="../../gloss.html#variable">variable</a>. A variable is just a name for a value, such as <code>x</code>, <code>current_temperature</code>, or <code>subject_id</code>. We can create a new variable simply by assigning a value to it using <code>=</code>:</p>
</div>


<div class="in">
<pre>weight_kg = 55</pre>
</div>


<div class="">
<p>Once a variable has a value, we can print it:</p>
</div>


<div class="in">
<pre>print weight_kg</pre>
</div>

<div class="out">
<pre>55
</pre>
</div>


<div class="">
<p>and do arithmetic with it:</p>
</div>


<div class="in">
<pre>print &#39;weight in pounds:&#39;, 2.2 * weight_kg</pre>
</div>

<div class="out">
<pre>weight in pounds: 121.0
</pre>
</div>


<div class="">
<p>We can also change a variable's value by assigning it a new one:</p>
</div>


<div class="in">
<pre>weight_kg = 57.5
print &#39;weight in kilograms is now:&#39;, weight_kg</pre>
</div>

<div class="out">
<pre>weight in kilograms is now: 57.5
</pre>
</div>


<div class="">
<p>As the example above shows, we can print several things at once by separating them with commas.</p>
<p>If we imagine the variable as a sticky note with a name written on it, assignment is like putting the sticky note on a particular value:</p>
</div>


<div class="">
<p><img src="img/python-sticky-note-variables-01.svg" alt="Variables as Sticky Notes" /></p>
</div>


<div class="">
<p>This means that assigning a value to one variable does <em>not</em> change the values of other variables. For example, let's store the subject's weight in pounds in a variable:</p>
</div>


<div class="in">
<pre>weight_lb = 2.2 * weight_kg
print &#39;weight in kilograms:&#39;, weight_kg, &#39;and in pounds:&#39;, weight_lb</pre>
</div>

<div class="out">
<pre>weight in kilograms: 57.5 and in pounds: 126.5
</pre>
</div>


<div>
<p><img src="img/python-sticky-note-variables-02.svg" alt="Creating Another Variable" /></p>
</div>


<div class="">
<p>and then change <code>weight_kg</code>:</p>
</div>


<div class="in">
<pre>weight_kg = 100.0
print &#39;weight in kilograms is now:&#39;, weight_kg, &#39;and weight in pounds is still:&#39;, weight_lb</pre>
</div>

<div class="out">
<pre>weight in kilograms is now: 100.0 and weight in pounds is still: 126.5
</pre>
</div>


<div>
<p><img src="img/python-sticky-note-variables-03.svg" alt="Updating a Variable" /></p>
</div>


<div class="">
<p>Since <code>weight_lb</code> doesn't &quot;remember&quot; where its value came from, it isn't automatically updated when <code>weight_kg</code> changes. This is different from the way spreadsheets work.</p>
<p>Now that we know how to assign things to variables, let's re-run <code>numpy.loadtxt</code> and save its result:</p>
</div>


<div class="in">
<pre>data = numpy.loadtxt(fname=&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)</pre>
</div>


<div class="">
<p>This statement doesn't produce any output because assignment doesn't display anything. If we want to check that our data has been loaded, we can print the variable's value:</p>
</div>


<div class="in">
<pre>print data</pre>
</div>

<div class="out">
<pre>[[ 0.  0.  1. ...,  3.  0.  0.]
 [ 0.  1.  2. ...,  1.  0.  1.]
 [ 0.  1.  1. ...,  2.  1.  1.]
 ..., 
 [ 0.  1.  1. ...,  1.  1.  1.]
 [ 0.  0.  0. ...,  0.  2.  0.]
 [ 0.  0.  1. ...,  1.  1.  0.]]
</pre>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Draw diagrams showing what variables refer to what values after each statement in the following program:</p>
<pre class="sourceCode python"><code class="sourceCode python">mass = <span class="fl">47.5</span>
age = <span class="dv">122</span>
mass = mass * <span class="fl">2.0</span>
age = age - <span class="dv">20</span></code></pre></li>
<li><p>What does the following program print out?</p>
<pre class="sourceCode python"><code class="sourceCode python">first, second = <span class="st">&#39;Grace&#39;</span>, <span class="st">&#39;Hopper&#39;</span>
third, fourth = second, first
<span class="dt">print</span> third, fourth</code></pre></li>
</ol>
</div>

### Manipulating Data


<div class="">
<p>Now that our data is in memory, we can start doing things with it. First, let's ask what <a href="../../gloss.html#data-type">type</a> of thing <code>data</code> refers to:</p>
</div>


<div class="in">
<pre>print type(data)</pre>
</div>

<div class="out">
<pre>&lt;type &#39;numpy.ndarray&#39;&gt;
</pre>
</div>


<div class="">
<p>The output tells us that <code>data</code> currently refers to an N-dimensional array created by the NumPy library. We can see what its <a href="../../gloss.html#shape">shape</a> is like this:</p>
</div>


<div class="in">
<pre>print data.shape</pre>
</div>

<div class="out">
<pre>(60, 40)
</pre>
</div>


<div class="">
<p>This tells us that <code>data</code> has 60 rows and 40 columns. <code>data.shape</code> is a <a href="../../gloss.html#member">member</a> of <code>data</code>, i.e., a value that is stored as part of a larger value. We use the same dotted notation for the members of values that we use for the functions in libraries because they have the same part-and-whole relationship.</p>
</div>


<div class="">
<p>If we want to get a single value from the matrix, we must provide an <a href="../../gloss.html#index">index</a> in square brackets, just as we do in math:</p>
</div>


<div class="in">
<pre>print &#39;first value in data:&#39;, data[0, 0]</pre>
</div>

<div class="out">
<pre>first value in data: 0.0
</pre>
</div>


<div class="in">
<pre>print &#39;middle value in data:&#39;, data[30, 20]</pre>
</div>

<div class="out">
<pre>middle value in data: 13.0
</pre>
</div>


<div class="">
<p>The expression <code>data[30, 20]</code> may not surprise you, but <code>data[0, 0]</code> might. Programming languages like Fortran and MATLAB start counting at 1, because that's what human beings have done for thousands of years. Languages in the C family (including C++, Java, Perl, and Python) count from 0 because that's simpler for computers to do. As a result, if we have an M×N array in Python, its indices go from 0 to M-1 on the first axis and 0 to N-1 on the second. It takes a bit of getting used to, but one way to remember the rule is that the index is how many steps we have to take from the start to get the item we want.</p>
<blockquote>
<h4>In the Corner</h4>
<p>What may also surprise you is that when Python displays an array, it shows the element with index <code>[0, 0]</code> in the upper left corner rather than the lower left. This is consistent with the way mathematicians draw matrices, but different from the Cartesian coordinates. The indices are (row, column) instead of (column, row) for the same reason.</p>
</blockquote>
</div>


<div class="">
<p>An index like <code>[30, 20]</code> selects a single element of an array, but we can select whole sections as well. For example, we can select the first ten days (columns) of values for the first four (rows) patients like this:</p>
</div>


<div class="in">
<pre>print data[0:4, 0:10]</pre>
</div>

<div class="out">
<pre>[[ 0.  0.  1.  3.  1.  2.  4.  7.  8.  3.]
 [ 0.  1.  2.  1.  2.  1.  3.  2.  2.  6.]
 [ 0.  1.  1.  3.  3.  2.  6.  2.  5.  9.]
 [ 0.  0.  2.  0.  4.  2.  2.  1.  6.  7.]]
</pre>
</div>


<div class="">
<p>The <a href="../../gloss.html#slice">slice</a> <code>0:4</code> means, &quot;Start at index 0 and go up to, but not including, index 4.&quot; Again, the up-to-but-not-including takes a bit of getting used to, but the rule is that the difference between the upper and lower bounds is the number of values in the slice.</p>
<p>We don't have to start slices at 0:</p>
</div>


<div class="in">
<pre>print data[5:10, 0:10]</pre>
</div>

<div class="out">
<pre>[[ 0.  0.  1.  2.  2.  4.  2.  1.  6.  4.]
 [ 0.  0.  2.  2.  4.  2.  2.  5.  5.  8.]
 [ 0.  0.  1.  2.  3.  1.  2.  3.  5.  3.]
 [ 0.  0.  0.  3.  1.  5.  6.  5.  5.  8.]
 [ 0.  1.  1.  2.  1.  3.  5.  3.  5.  8.]]
</pre>
</div>


<div class="">
<p>and we don't have to take all the values in the slice---if we provide a <a href="../../gloss.html#stride">stride</a>, Python takes values spaced that far apart:</p>
</div>


<div class="in">
<pre>print data[0:10:3, 0:10:2]</pre>
</div>

<div class="out">
<pre>[[ 0.  1.  1.  4.  8.]
 [ 0.  2.  4.  2.  6.]
 [ 0.  2.  4.  2.  5.]
 [ 0.  1.  1.  5.  5.]]
</pre>
</div>


<div class="">
<p>Here, we have taken rows 0, 3, 6, and 9, and columns 0, 2, 4, 6, and 8. (Again, we always include the lower bound, but stop when we reach or cross the upper bound.)</p>
</div>


<div class="">
<p>We also don't have to include the upper and lower bound on the slice. If we don't include the lower bound, Python uses 0 by default; if we don't include the upper, the slice runs to the end of the axis, and if we don't include either (i.e., if we just use ':' on its own), the slice includes everything:</p>
</div>


<div class="in">
<pre>small = data[:3, 36:]
print &#39;small is:&#39;
print small</pre>
</div>

<div class="out">
<pre>small is:
[[ 2.  3.  0.  0.]
 [ 1.  1.  0.  1.]
 [ 2.  2.  1.  1.]]
</pre>
</div>


<div class="">
<p>Arrays also know how to perform common mathematical operations on their values. If we want to find the average inflammation for all patients on all days, for example, we can just ask the array for its mean value</p>
</div>


<div class="in">
<pre>print data.mean()</pre>
</div>

<div class="out">
<pre>6.14875
</pre>
</div>


<div class="">
<p><code>mean</code> is a <a href="../../gloss.html#method">method</a> of the array, i.e., a function that belongs to it in the same way that the member <code>shape</code> does. If variables are nouns, methods are verbs: they are what the thing in question knows how to do. This is why <code>data.shape</code> doesn't need to be called (it's just a thing) but <code>data.mean()</code> does (it's an action). It is also why we need empty parentheses for <code>data.mean()</code>: even when we're not passing in any parameters, parentheses are how we tell Python to go and do something for us.</p>
<p>NumPy arrays have lots of useful methods:</p>
</div>


<div class="in">
<pre>print &#39;maximum inflammation:&#39;, data.max()
print &#39;minimum inflammation:&#39;, data.min()
print &#39;standard deviation:&#39;, data.std()</pre>
</div>

<div class="out">
<pre>maximum inflammation: 20.0
minimum inflammation: 0.0
standard deviation: 4.61383319712
</pre>
</div>


<div class="">
<p>When analyzing data, though, we often want to look at partial statistics, such as the maximum value per patient or the average value per day. One way to do this is to select the data we want to create a new temporary array, then ask it to do the calculation:</p>
</div>


<div class="in">
<pre>patient_0 = data[0, :] # 0 on the first axis, everything on the second
print &#39;maximum inflammation for patient 0:&#39;, patient_0.max()</pre>
</div>

<div class="out">
<pre>maximum inflammation for patient 0: 18.0
</pre>
</div>


<div class="">
<p>We don't actually need to store the row in a variable of its own. Instead, we can combine the selection and the method call:</p>
</div>


<div class="in">
<pre>print &#39;maximum inflammation for patient 2:&#39;, data[2, :].max()</pre>
</div>

<div class="out">
<pre>maximum inflammation for patient 2: 19.0
</pre>
</div>


<div class="">
<p>What if we need the maximum inflammation for <em>all</em> patients, or the average for each day? As the diagram below shows, we want to perform the operation across an axis:</p>
</div>


<div class="">
<p><img src="img/python-operations-across-axes.svg" alt="Operations Across Axes" /></p>
</div>


<div class="">
<p>To support this, most array methods allow us to specify the axis we want to work on. If we ask for the average across axis 0, we get:</p>
</div>


<div class="in">
<pre>print data.mean(axis=0)</pre>
</div>

<div class="out">
<pre>[  0.           0.45         1.11666667   1.75         2.43333333   3.15
   3.8          3.88333333   5.23333333   5.51666667   5.95         5.9
   8.35         7.73333333   8.36666667   9.5          9.58333333
  10.63333333  11.56666667  12.35        13.25        11.96666667
  11.03333333  10.16666667  10.           8.66666667   9.15         7.25
   7.33333333   6.58333333   6.06666667   5.95         5.11666667   3.6
   3.3          3.56666667   2.48333333   1.5          1.13333333
   0.56666667]
</pre>
</div>


<div class="">
<p>As a quick check, we can ask this array what its shape is:</p>
</div>


<div class="in">
<pre>print data.mean(axis=0).shape</pre>
</div>

<div class="out">
<pre>(40,)
</pre>
</div>


<div class="">
<p>The expression <code>(40,)</code> tells us we have an N×1 vector, so this is the average inflammation per day for all patients. If we average across axis 1, we get:</p>
</div>


<div class="in">
<pre>print data.mean(axis=1)</pre>
</div>

<div class="out">
<pre>[ 5.45   5.425  6.1    5.9    5.55   6.225  5.975  6.65   6.625  6.525
  6.775  5.8    6.225  5.75   5.225  6.3    6.55   5.7    5.85   6.55
  5.775  5.825  6.175  6.1    5.8    6.425  6.05   6.025  6.175  6.55
  6.175  6.35   6.725  6.125  7.075  5.725  5.925  6.15   6.075  5.75
  5.975  5.725  6.3    5.9    6.75   5.925  7.225  6.15   5.95   6.275  5.7
  6.1    6.825  5.975  6.725  5.7    6.25   6.4    7.05   5.9  ]
</pre>
</div>


<div class="">
<p>which is the average inflammation per patient across all days.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<p>A subsection of an array is called a <a href="../../gloss.html#slice">slice</a>. We can take slices of character strings as well:</p>
</div>


<div class="in">
<pre>element = &#39;oxygen&#39;
print &#39;first three characters:&#39;, element[0:3]
print &#39;last three characters:&#39;, element[3:6]</pre>
</div>

<div class="out">
<pre>first three characters: oxy
last three characters: gen
</pre>
</div>


<div class="challenges">
<ol style="list-style-type: decimal">
<li><p>What is the value of <code>element[:4]</code>? What about <code>element[4:]</code>? Or <code>element[:]</code>?</p></li>
<li><p>What is <code>element[-1]</code>? What is <code>element[-2]</code>? Given those answers, explain what <code>element[1:-1]</code> does.</p></li>
<li><p>The expression <code>element[3:3]</code> produces an <a href="../../gloss.html#empty-string">empty string</a>, i.e., a string that contains no characters. If <code>data</code> holds our array of patient data, what does <code>data[3:3, 4:4]</code> produce? What about <code>data[3:3, :]</code>?</p></li>
</ol>
</div>

### Plotting


<div class="">
<p>The mathematician Richard Hamming once said, &quot;The purpose of computing is insight, not numbers,&quot; and the best way to develop insight is often to visualize data. Visualization deserves an entire lecture (or course) of its own, but we can explore a few features of Python's <code>matplotlib</code> here. First, let's tell the IPython Notebook that we want our plots displayed inline, rather than in a separate viewing window:</p>
</div>


<div class="in">
<pre>%matplotlib inline</pre>
</div>


<div class="">
<p>The <code>%</code> at the start of the line signals that this is a command for the notebook, rather than a statement in Python. Next, we will import the <code>pyplot</code> module from <code>matplotlib</code> and use two of its functions to create and display a heat map of our data:</p>
</div>


<div class="in">
<pre>from matplotlib import pyplot
pyplot.imshow(data)
pyplot.show()</pre>
</div>

<div class="out">
<pre>
<img src="../../novice/python/01-numpy_files/novice/python/01-numpy_74_0.png">
</pre>
</div>


<div class="">
<p>Blue regions in this heat map are low values, while red shows high values. As we can see, inflammation rises and falls over a 40-day period. Let's take a look at the average inflammation over time:</p>
</div>


<div class="in">
<pre>ave_inflammation = data.mean(axis=0)
pyplot.plot(ave_inflammation)
pyplot.show()</pre>
</div>

<div class="out">
<pre>
<img src="../../novice/python/01-numpy_files/novice/python/01-numpy_76_0.png">
</pre>
</div>


<div class="">
<p>Here, we have put the average per day across all patients in the variable <code>ave_inflammation</code>, then asked <code>pyplot</code> to create and display a line graph of those values. The result is roughly a linear rise and fall, which is suspicious: based on other studies, we expect a sharper rise and slower fall. Let's have a look at two other statistics:</p>
</div>


<div class="in">
<pre>print &#39;maximum inflammation per day&#39;
pyplot.plot(data.max(axis=0))
pyplot.show()

print &#39;minimum inflammation per day&#39;
pyplot.plot(data.min(axis=0))
pyplot.show()</pre>
</div>

<div class="out">
<pre>maximum inflammation per day

<img src="../../novice/python/01-numpy_files/novice/python/01-numpy_78_1.png">
minimum inflammation per day

<img src="../../novice/python/01-numpy_files/novice/python/01-numpy_78_3.png">
</pre>
</div>


<div class="">
<p>The maximum value rises and falls perfectly smoothly, while the minimum seems to be a step function. Neither result seems particularly likely, so either there's a mistake in our calculations or something is wrong with our data.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Why do all of our plots stop just short of the upper end of our graph? Why are the vertical lines in our plot of the minimum inflammation per day not vertical?</p></li>
<li><p>Create a plot showing the standard deviation of the inflammation data for each day across all patients.</p></li>
</ol>
</div>

### Wrapping Up


<div class="">
<p>It's very common to create an <a href="../../gloss.html#alias-library">alias</a> for a library when importing it in order to reduce the amount of typing we have to do. Here are our three plots side by side using aliases for <code>numpy</code> and <code>pyplot</code>:</p>
</div>


<div class="in">
<pre>import numpy as np
from matplotlib import pyplot as plt

data = np.loadtxt(fname=&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)

plt.figure(figsize=(10.0, 3.0))

plt.subplot(1, 3, 1)
plt.ylabel(&#39;average&#39;)
plt.plot(data.mean(0))

plt.subplot(1, 3, 2)
plt.ylabel(&#39;max&#39;)
plt.plot(data.max(0))

plt.subplot(1, 3, 3)
plt.ylabel(&#39;min&#39;)
plt.plot(data.min(0))

plt.tight_layout()
plt.show()</pre>
</div>

<div class="out">
<pre>
<img src="../../novice/python/01-numpy_files/novice/python/01-numpy_83_0.png">
</pre>
</div>


<div class="">
<p>The first two lines re-load our libraries as <code>np</code> and <code>plt</code>, which are the aliases most Python programmers use. The call to <code>loadtxt</code> reads our data, and the rest of the program tells the plotting library how large we want the figure to be, that we're creating three sub-plots, what to draw for each one, and that we want a tight layout. (Perversely, if we leave out that call to <code>plt.tight_layout()</code>, the graphs will actually be squeezed together more closely.)</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Modify the program to display the three plots on top of one another instead of side by side.</li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Import a library into a program using <code>import libraryname</code>.</li>
<li>Use the <code>numpy</code> library to work with arrays in Python.</li>
<li>Use <code>variable = value</code> to assign a value to a variable in order to record it in memory.</li>
<li>Variables are created on demand whenever a value is assigned to them.</li>
<li>Use <code>print something</code> to display the value of <code>something</code>.</li>
<li>The expression <code>array.shape</code> gives the shape of an array.</li>
<li>Use <code>array[x, y]</code> to select a single element from an array.</li>
<li>Array indices start at 0, not 1.</li>
<li>Use <code>low:high</code> to specify a slice that includes the indices from <code>low</code> to <code>high-1</code>.</li>
<li>All the indexing and slicing that works on arrays also works on strings.</li>
<li>Use <code># some kind of explanation</code> to add comments to programs.</li>
<li>Use <code>array.mean()</code>, <code>array.max()</code>, and <code>array.min()</code> to calculate simple statistics.</li>
<li>Use <code>array.mean(axis=0)</code> or <code>array.mean(axis=1)</code> to calculate statistics across the specified axis.</li>
<li>Use the <code>pyplot</code> library from <code>matplotlib</code> for creating simple visualizations.</li>
</ul>
</div>


<div class="">
<h4 id="next-steps">Next Steps</h4>
<p>Our work so far has convinced us that something's wrong with our first data file. We would like to check the other 11 the same way, but typing in the same commands repeatedly is tedious and error-prone. Since computers don't get bored (that we know of), we should create a way to do a complete analysis with a single command, and then figure out how to repeat that step once for each file. These operations are the subjects of the next two lessons.</p>
</div>

---
layout: lesson
root: ../..
---

## Creating Functions


<div class="">
<p>If we only had one data set to analyze, it would probably be faster to load the file into a spreadsheet and use that to plot some simple statistics. But we have twelve files to check, and may have more in future. In this lesson, we'll learn how to write a function so that we can repeat several operations with a single command.</p>
</div>


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Define a function that takes parameters.</li>
<li>Return a value from a function.</li>
<li>Test and debug a function.</li>
<li>Explain what a call stack is, and trace changes to the call stack as functions are called.</li>
<li>Set default values for function parameters.</li>
<li>Explain why we should divide programs into small, single-purpose functions.</li>
</ul>
</div>

### Defining a Function


<div class="">
<p>Let's start by defining a function <code>fahr_to_kelvin</code> that converts temperatures from Fahrenheit to Kelvin:</p>
</div>


<div class="in">
<pre>def fahr_to_kelvin(temp):
    return ((temp - 32) * (5/9)) + 273.15</pre>
</div>


<div class="">
<p>The definition opens with the word <code>def</code>, which is followed by the name of the function and a parenthesized list of parameter names. The <a href="../../gloss.html#function-body">body</a> of the function—the statements that are executed when it runs—is indented below the definition line, typically by four spaces.</p>
<p>When we call the function, the values we pass to it are assigned to those variables so that we can use them inside the function. Inside the function, we use a <a href="../../gloss.html#return-statement">return statement</a> to send a result back to whoever asked for it.</p>
<p>Let's try running our function. Calling our own function is no different from calling any other function:</p>
</div>


<div class="in">
<pre>print &#39;freezing point of water:&#39;, fahr_to_kelvin(32)
print &#39;boiling point of water:&#39;, fahr_to_kelvin(212)</pre>
</div>

<div class="out">
<pre>freezing point of water: 273.15
boiling point of water: 273.15
</pre>
</div>


<div>
<p>We've successfully called the function that we defined, and we have access to the value that we returned. Unfortunately, the value returned doesn't look right. What went wrong?</p>
</div>

### Debugging a Function


<div>
<p><em>Debugging</em> is when we fix a piece of code that we know is working incorrectly. In this case, we know that <code>fahr_to_kelvin</code> is giving us the wrong answer, so let's find out why.</p>
<p>For big pieces of code, there are tools called <em>debuggers</em> that aid in this process.</p>
<p>We just have a short function, so we'll debug by choosing some parameter value, breaking our function into small parts, and printing out the value of each part.</p>
</div>


<div class="in">
<pre># We&#39;ll use temp = 212, the boiling point of water, which was incorrect
print &#34;212 - 32:&#34;, 212 - 32</pre>
</div>

<div class="out">
<pre>212 - 32: 180
</pre>
</div>


<div class="in">
<pre>print &#34;(212 - 32) * (5/9):&#34;, (212 - 32) * (5/9)</pre>
</div>

<div class="out">
<pre>(212 - 32) * (5/9): 0
</pre>
</div>


<div>
<p>Aha! The problem comes when we multiply by <code>5/9</code>. This is because <code>5/9</code> is actually 0.</p>
</div>


<div class="in">
<pre>5/9</pre>
</div>

<div class="out">
<pre>0</pre>
</div>


<div class="">
<p>Computers store numbers in one of two ways: as <a href="../../gloss.html#integer">integers</a> or as <a href="../../gloss.html#float">floating-point numbers</a> (or floats). The first are the numbers we usually count with; the second have fractional parts. Addition, subtraction and multiplication work on both as we'd expect, but division works differently. If we divide one integer by another, we get the quotient without the remainder:</p>
</div>


<div class="in">
<pre>print &#39;10/3 is:&#39;, 10/3</pre>
</div>

<div class="out">
<pre>10/3 is: 3
</pre>
</div>


<div class="">
<p>If either part of the division is a float, on the other hand, the computer creates a floating-point answer:</p>
</div>


<div class="in">
<pre>print &#39;10.0/3 is:&#39;, 10.0/3</pre>
</div>

<div class="out">
<pre>10.0/3 is: 3.33333333333
</pre>
</div>


<div class="">
<p>The computer does this for historical reasons: integer operations were much faster on early machines, and this behavior is actually useful in a lot of situations. It's still confusing, though, so Python 3 produces a floating-point answer when dividing integers if it needs to. We're still using Python 2.7 in this class, though, so if we want <code>5/9</code> to give us the right answer, we have to write it as <code>5.0/9</code>, <code>5/9.0</code>, or some other variation.</p>
</div>


<div>
<p>Let's fix our <code>fahr_to_kelvin</code> function with this new knowledge.</p>
</div>


<div class="in">
<pre>def fahr_to_kelvin(temp):
    return ((temp - 32) * (5.0/9.0)) + 273.15

print &#39;freezing point of water:&#39;, fahr_to_kelvin(32)
print &#39;boiling point of water:&#39;, fahr_to_kelvin(212)</pre>
</div>

<div class="out">
<pre>freezing point of water: 273.15
boiling point of water: 373.15
</pre>
</div>


<div class="">
<p>It works!</p>
</div>

### Composing Functions


<div>
<p>Now that we've seen how to turn Fahrenheit into Kelvin, it's easy to turn Kelvin into Celsius:</p>
</div>


<div class="in">
<pre>def kelvin_to_celsius(temp):
    return temp - 273.15

print &#39;absolute zero in Celsius:&#39;, kelvin_to_celsius(0.0)</pre>
</div>

<div class="out">
<pre>absolute zero in Celsius: -273.15
</pre>
</div>


<div class="">
<p>What about converting Fahrenheit to Celsius? We could write out the formula, but we don't need to. Instead, we can <a href="../../gloss.html#function-composition">compose</a> the two functions we have already created:</p>
</div>


<div class="in">
<pre>def fahr_to_celsius(temp):
    temp_k = fahr_to_kelvin(temp)
    result = kelvin_to_celsius(temp_k)
    return result

print &#39;freezing point of water in Celsius:&#39;, fahr_to_celsius(32.0)</pre>
</div>

<div class="out">
<pre>freezing point of water in Celsius: 0.0
</pre>
</div>


<div class="">
<p>This is our first taste of how larger programs are built: we define basic operations, then combine them in ever-large chunks to get the effect we want. Real-life functions will usually be larger than the ones shown here—typically half a dozen to a few dozen lines—but they shouldn't ever be much longer than that, or the next person who reads it won't be able to understand what's going on.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>&quot;Adding&quot; two strings produces their concatention: <code>'a' + 'b'</code> is <code>'ab'</code>. Write a function called <code>fence</code> that takes two parameters called <code>original</code> and <code>wrapper</code> and returns a new string that has the wrapper character at the beginning and end of the original:</p>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">print</span> fence(<span class="st">&#39;name&#39;</span>, <span class="st">&#39;*&#39;</span>)
*name*</code></pre></li>
<li><p>If the variable <code>s</code> refers to a string, then <code>s[0]</code> is the string's first character and <code>s[-1]</code> is its last. Write a function called <code>outer</code> that returns a string made up of just the first and last characters of its input:</p>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">print</span> outer(<span class="st">&#39;helium&#39;</span>)
hm</code></pre></li>
</ol>
</div>

### The Call Stack


<div class="">
<p>Let's take a closer look at what happens when we call <code>fahr_to_celsius(32.0)</code>. To make things clearer, we'll start by putting the initial value 32.0 in a variable and store the final result in one as well:</p>
</div>


<div class="in">
<pre>original = 32.0
final = fahr_to_celsius(original)</pre>
</div>


<div class="">
<p>The diagram below shows what memory looks like after the first line has been executed:</p>
</div>


<div class="">
<p><img src="img/python-call-stack-01.svg" alt="Call Stack (Initial State)" /></p>
</div>


<div class="">
<p>When we call <code>fahr_to_celsius</code>, Python <em>doesn't</em> create the variable <code>temp</code> right away. Instead, it creates something called a <a href="../../gloss.html#stack-frame">stack frame</a> to keep track of the variables defined by <code>fahr_to_kelvin</code>. Initially, this stack frame only holds the value of <code>temp</code>:</p>
</div>


<div class="">
<p><img src="img/python-call-stack-02.svg" alt="Call Stack Immediately After First Function Call" /></p>
</div>


<div class="">
<p>When we call <code>fahr_to_kelvin</code> inside <code>fahr_to_celsius</code>, Python creates another stack frame to hold <code>fahr_to_kelvin</code>'s variables:</p>
</div>


<div class="">
<p><img src="img/python-call-stack-03.svg" alt="Call Stack During First Nested Function Call" /></p>
</div>


<div class="">
<p>It does this because there are now two variables in play called <code>temp</code>: the parameter to <code>fahr_to_celsius</code>, and the parameter to <code>fahr_to_kelvin</code>. Having two variables with the same name in the same part of the program would be ambiguous, so Python (and every other modern programming language) creates a new stack frame for each function call to keep that function's variables separate from those defined by other functions.</p>
<p>When the call to <code>fahr_to_kelvin</code> returns a value, Python throws away <code>fahr_to_kelvin</code>'s stack frame and creates a new variable in the stack frame for <code>fahr_to_celsius</code> to hold the temperature in Kelvin:</p>
</div>


<div class="">
<p><img src="img/python-call-stack-04.svg" alt="Call Stack After Return From First Nested Function Call" /></p>
</div>


<div class="">
<p>It then calls <code>kelvin_to_celsius</code>, which means it creates a stack frame to hold that function's variables:</p>
</div>


<div class="">
<p><img src="img/python-call-stack-05.svg" alt="Call Stack During Call to Second Nested Function" /></p>
</div>


<div class="">
<p>Once again, Python throws away that stack frame when <code>kelvin_to_celsius</code> is done and creates the variable <code>result</code> in the stack frame for <code>fahr_to_celsius</code>:</p>
</div>


<div class="">
<p><img src="img/python-call-stack-06.svg" alt="Call Stack After Second Nested Function Returns" /></p>
</div>


<div class="">
<p>Finally, when <code>fahr_to_celsius</code> is done, Python throws away <em>its</em> stack frame and puts its result in a new variable called <code>final</code> that lives in the stack frame we started with:</p>
</div>


<div class="">
<p><img src="img/python-call-stack-07.svg" alt="Call Stack After All Functions Have Finished" /></p>
</div>


<div class="">
<p>This final stack frame is always there; it holds the variables we defined outside the functions in our code. What it <em>doesn't</em> hold is the variables that were in the various stack frames. If we try to get the value of <code>temp</code> after our functions have finished running, Python tells us that there's no such thing:</p>
</div>


<div class="in">
<pre>print &#39;final value of temp after all function calls:&#39;, temp</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
&lt;ipython-input-12-ffd9b4dbd5f1&gt; in &lt;module&gt;()
----&gt; 1 print &#39;final value of temp after all function calls:&#39;, temp

NameError: name &#39;temp&#39; is not definedfinal value of temp after all function calls:</pre>
</div>


<div class="">
<p>Why go to all this trouble? Well, here's a function called <code>span</code> that calculates the difference between the mininum and maximum values in an array:</p>
</div>


<div class="in">
<pre>import numpy

def span(a):
    diff = a.max() - a.min()
    return diff

data = numpy.loadtxt(fname=&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)
print &#39;span of data&#39;, span(data)</pre>
</div>

<div class="out">
<pre> span of data 20.0
</pre>
</div>


<div class="">
<p>Notice that <code>span</code> assigns a value to a variable called <code>diff</code>. We might very well use a variable with the same name to hold data:</p>
</div>


<div class="in">
<pre>diff = numpy.loadtxt(fname=&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)
print &#39;span of data:&#39;, span(diff)</pre>
</div>

<div class="out">
<pre>span of data: 20.0
</pre>
</div>


<div class="">
<p>We don&#39;t expect <code>diff</code> to have the value 20.0 after this function call,
so the name <code>diff</code> cannot refer to the same thing inside <code>span</code> as it does in the main body of our program.
And yes,
we could probably choose a different name than <code>diff</code> in our main program in this case,
but we don&#39;t want to have to read every line of NumPy to see what variable names its functions use
before calling any of those functions,
just in case they change the values of our variables.</p>
</div>


<div class="">
<p>The big idea here is <a href="../../gloss.html#encapsulation">encapsulation</a>,
and it&#39;s the key to writing correct, comprehensible programs.
A function&#39;s job is to turn several operations into one
so that we can think about a single function call
instead of a dozen or a hundred statements
each time we want to do something.
That only works if functions don&#39;t interfere with each other;
if they do,
we have to pay attention to the details once again,
which quickly overloads our short-term memory.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol>
<li><p>We previously wrote functions called <code>fence</code> and <code>outer</code>.
Draw a diagram showing how the call stack changes when we run the following:</p>
<pre><code class="language-python"><span class="keyword">print</span> outer(fence(<span class="string">'carbon'</span>, <span class="string">'+'</span>))
</code></pre>
</li>
</ol>
</div>

### Testing and Documenting


<div class="">
<p>Once we start putting things in functions so that we can re-use them, we need to start testing that those functions are working correctly. To see how to do this, let's write a function to center a dataset around a particular value:</p>
</div>


<div class="in">
<pre>def center(data, desired):
    return (data - data.mean()) + desired</pre>
</div>


<div class="">
<p>We could test this on our actual data, but since we don't know what the values ought to be, it will be hard to tell if the result was correct. Instead, let's use NumPy to create a matrix of 0's and then center that around 3:</p>
</div>


<div class="in">
<pre>z = numpy.zeros((2,2))
print center(z, 3)</pre>
</div>

<div class="out">
<pre>[[ 3.  3.]
 [ 3.  3.]]
</pre>
</div>


<div class="">
<p>That looks right, so let's try <code>center</code> on our real data:</p>
</div>


<div class="in">
<pre>data = numpy.loadtxt(fname=&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)
print center(data, 0)</pre>
</div>

<div class="out">
<pre>[[-6.14875 -6.14875 -5.14875 ..., -3.14875 -6.14875 -6.14875]
 [-6.14875 -5.14875 -4.14875 ..., -5.14875 -6.14875 -5.14875]
 [-6.14875 -5.14875 -5.14875 ..., -4.14875 -5.14875 -5.14875]
 ..., 
 [-6.14875 -5.14875 -5.14875 ..., -5.14875 -5.14875 -5.14875]
 [-6.14875 -6.14875 -6.14875 ..., -6.14875 -4.14875 -6.14875]
 [-6.14875 -6.14875 -5.14875 ..., -5.14875 -5.14875 -6.14875]]
</pre>
</div>


<div class="">
<p>It's hard to tell from the default output whether the result is correct, but there are a few simple tests that will reassure us:</p>
</div>


<div class="in">
<pre>print &#39;original min, mean, and max are:&#39;, data.min(), data.mean(), data.max()
centered = center(data, 0)
print &#39;min, mean, and and max of centered data are:&#39;, centered.min(), centered.mean(), centered.max()</pre>
</div>

<div class="out">
<pre>original min, mean, and max are: 0.0 6.14875 20.0
min, mean, and and max of centered data are: -6.14875 -3.49054118942e-15 13.85125
</pre>
</div>


<div class="">
<p>That seems almost right: the original mean was about 6.1, so the lower bound from zero is how about -6.1. The mean of the centered data isn't quite zero—we'll explore why not in the challenges—but it's pretty close. We can even go further and check that the standard deviation hasn't changed:</p>
</div>


<div class="in">
<pre>print &#39;std dev before and after:&#39;, data.std(), centered.std()</pre>
</div>

<div class="out">
<pre>std dev before and after: 4.61383319712 4.61383319712
</pre>
</div>


<div class="">
<p>Those values look the same, but we probably wouldn't notice if they were different in the sixth decimal place. Let's do this instead:</p>
</div>


<div class="in">
<pre>print &#39;difference in standard deviations before and after:&#39;, data.std() - centered.std()</pre>
</div>

<div class="out">
<pre>difference in standard deviations before and after: -3.5527136788e-15
</pre>
</div>


<div class="">
<p>Again, the difference is very small. It's still possible that our function is wrong, but it seems unlikely enough that we should probably get back to doing our analysis. We have one more task first, though: we should write some <a href="../../gloss.html#documentation">documentation</a> for our function to remind ourselves later what it's for and how to use it.</p>
<p>The usual way to put documentation in software is to add <a href="../../gloss.html#comment">comments</a> like this:</p>
</div>


<div class="in">
<pre># center(data, desired): return a new array containing the original data centered around the desired value.
def center(data, desired):
    return (data - data.mean()) + desired</pre>
</div>


<div class="">
<p>There's a better way, though. If the first thing in a function is a string that isn't assigned to a variable, that string is attached to the function as its documentation:</p>
</div>


<div class="in">
<pre>def center(data, desired):
    &#39;&#39;&#39;Return a new array containing the original data centered around the desired value.&#39;&#39;&#39;
    return (data - data.mean()) + desired</pre>
</div>


<div class="">
<p>This is better because we can now ask Python's built-in help system to show us the documentation for the function:</p>
</div>


<div class="in">
<pre>help(center)</pre>
</div>

<div class="out">
<pre>Help on function center in module __main__:

center(data, desired)
    Return a new array containing the original data centered around the desired value.

</pre>
</div>


<div class="">
<p>A string like this is called a <a href="../../gloss.html#docstring">docstring</a>. We don't need to use triple quotes when we write one, but if we do, we can break the string across multiple lines:</p>
</div>


<div class="in">
<pre>def center(data, desired):
    &#39;&#39;&#39;Return a new array containing the original data centered around the desired value.
    Example: center([1, 2, 3], 0) =&gt; [-1, 0, 1]&#39;&#39;&#39;
    return (data - data.mean()) + desired

help(center)</pre>
</div>

<div class="out">
<pre>Help on function center in module __main__:

center(data, desired)
    Return a new array containing the original data centered around the desired value.
    Example: center([1, 2, 3], 0) =&gt; [-1, 0, 1]

</pre>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Write a function called <code>analyze</code> that takes a filename as a parameter and displays the three graphs produced in the <a href="01-numpy.ipynb">previous lesson</a>, i.e., <code>analyze('inflammation-01.csv')</code> should produce the graphs already shown, while <code>analyze('inflammation-02.csv')</code> should produce corresponding graphs for the second data set. Be sure to give your function a docstring.</p></li>
<li><p>Write a function <code>rescale</code> that takes an array as input and returns a corresponding array of values scaled to lie in the range 0.0 to 1.0. (If <span class="math">\(L\)</span> and <span class="math">\(H\)</span> are the lowest and highest values in the original array, then the replacement for a value <span class="math">\(v\)</span> should be <span class="math">\((v-L) / (H-L)\)</span>.) Be sure to give the function a docstring.</p></li>
<li><p>Run the commands <code>help(numpy.arange)</code> and <code>help(numpy.linspace)</code> to see how to use these functions to generate regularly-spaced values, then use those values to test your <code>rescale</code> function.</p></li>
</ol>
</div>

### Defining Defaults


<div class="">
<p>We have passed parameters to functions in two ways: directly, as in <code>span(data)</code>, and by name, as in <code>numpy.loadtxt(fname='something.csv', delimiter=',')</code>. In fact, we can pass the filename to <code>loadtxt</code> without the <code>fname=</code>:</p>
</div>


<div class="in">
<pre>numpy.loadtxt(&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)</pre>
</div>

<div class="out">
<pre>array([[ 0.,  0.,  1., ...,  3.,  0.,  0.],
       [ 0.,  1.,  2., ...,  1.,  0.,  1.],
       [ 0.,  1.,  1., ...,  2.,  1.,  1.],
       ..., 
       [ 0.,  1.,  1., ...,  1.,  1.,  1.],
       [ 0.,  0.,  0., ...,  0.,  2.,  0.],
       [ 0.,  0.,  1., ...,  1.,  1.,  0.]])</pre>
</div>


<div class="">
<p>but we still need to say <code>delimiter=</code>:</p>
</div>


<div class="in">
<pre>numpy.loadtxt(&#39;inflammation-01.csv&#39;, &#39;,&#39;)</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-26-e3bc6cf4fd6a&gt; in &lt;module&gt;()
----&gt; 1 numpy.loadtxt(&#39;inflammation-01.csv&#39;, &#39;,&#39;)

/Users/gwilson/anaconda/lib/python2.7/site-packages/numpy/lib/npyio.pyc in loadtxt(fname, dtype, comments, delimiter, converters, skiprows, usecols, unpack, ndmin)
    775     try:
    776         # Make sure we&#39;re dealing with a proper dtype
--&gt; 777         dtype = np.dtype(dtype)
    778         defconv = _getconv(dtype)
    779 

TypeError: data type &#34;,&#34; not understood</pre>
</div>


<div class="">
<p>To understand what's going on, and make our own functions easier to use, let's re-define our <code>center</code> function like this:</p>
</div>


<div class="in">
<pre>def center(data, desired=0.0):
    &#39;&#39;&#39;Return a new array containing the original data centered around the desired value (0 by default).
    Example: center([1, 2, 3], 0) =&gt; [-1, 0, 1]&#39;&#39;&#39;
    return (data - data.mean()) + desired</pre>
</div>


<div class="">
<p>The key change is that the second parameter is now written <code>desired=0.0</code> instead of just <code>desired</code>. If we call the function with two arguments, it works as it did before:</p>
</div>


<div class="in">
<pre>test_data = numpy.zeros((2, 2))
print center(test_data, 3)</pre>
</div>

<div class="out">
<pre>[[ 3.  3.]
 [ 3.  3.]]
</pre>
</div>


<div class="">
<p>But we can also now call it with just one parameter, in which case <code>desired</code> is automatically assigned the <a href="../../gloss.html#default-parameter-value">default value</a> of 0.0:</p>
</div>


<div class="in">
<pre>more_data = 5 + numpy.zeros((2, 2))
print &#39;data before centering:&#39;, more_data
print &#39;centered data:&#39;, center(more_data)</pre>
</div>

<div class="out">
<pre>data before centering: [[ 5.  5.]
 [ 5.  5.]]
centered data: [[ 0.  0.]
 [ 0.  0.]]
</pre>
</div>


<div class="">
<p>This is handy: if we usually want a function to work one way, but occasionally need it to do something else, we can allow people to pass a parameter when they need to but provide a default to make the normal case easier. The example below shows how Python matches values to parameters:</p>
</div>


<div class="in">
<pre>def display(a=1, b=2, c=3):
    print &#39;a:&#39;, a, &#39;b:&#39;, b, &#39;c:&#39;, c

print &#39;no parameters:&#39;
display()
print &#39;one parameter:&#39;
display(55)
print &#39;two parameters:&#39;
display(55, 66)</pre>
</div>

<div class="out">
<pre>no parameters:
a: 1 b: 2 c: 3
one parameter:
a: 55 b: 2 c: 3
two parameters:
a: 55 b: 66 c: 3
</pre>
</div>


<div class="">
<p>As this example shows, parameters are matched up from left to right, and any that haven't been given a value explicitly get their default value. We can override this behavior by naming the value as we pass it in:</p>
</div>


<div class="in">
<pre>print &#39;only setting the value of c&#39;
display(c=77)</pre>
</div>

<div class="out">
<pre>only setting the value of c
a: 1 b: 2 c: 77
</pre>
</div>


<div class="">
<p>With that in hand, let's look at the help for <code>numpy.loadtxt</code>:</p>
</div>


<div class="in">
<pre>help(numpy.loadtxt)</pre>
</div>

<div class="out">
<pre>Help on function loadtxt in module numpy.lib.npyio:

loadtxt(fname, dtype=&lt;type &#39;float&#39;&gt;, comments=&#39;#&#39;, delimiter=None, converters=None, skiprows=0, usecols=None, unpack=False, ndmin=0)
    Load data from a text file.
    
    Each row in the text file must have the same number of values.
    
    Parameters
    ----------
    fname : file or str
        File, filename, or generator to read.  If the filename extension is
        ``.gz`` or ``.bz2``, the file is first decompressed. Note that
        generators should return byte strings for Python 3k.
    dtype : data-type, optional
        Data-type of the resulting array; default: float.  If this is a
        record data-type, the resulting array will be 1-dimensional, and
        each row will be interpreted as an element of the array.  In this
        case, the number of columns used must match the number of fields in
        the data-type.
    comments : str, optional
        The character used to indicate the start of a comment;
        default: &#39;#&#39;.
    delimiter : str, optional
        The string used to separate values.  By default, this is any
        whitespace.
    converters : dict, optional
        A dictionary mapping column number to a function that will convert
        that column to a float.  E.g., if column 0 is a date string:
        ``converters = {0: datestr2num}``.  Converters can also be used to
        provide a default value for missing data (but see also `genfromtxt`):
        ``converters = {3: lambda s: float(s.strip() or 0)}``.  Default: None.
    skiprows : int, optional
        Skip the first `skiprows` lines; default: 0.
    usecols : sequence, optional
        Which columns to read, with 0 being the first.  For example,
        ``usecols = (1,4,5)`` will extract the 2nd, 5th and 6th columns.
        The default, None, results in all columns being read.
    unpack : bool, optional
        If True, the returned array is transposed, so that arguments may be
        unpacked using ``x, y, z = loadtxt(...)``.  When used with a record
        data-type, arrays are returned for each field.  Default is False.
    ndmin : int, optional
        The returned array will have at least `ndmin` dimensions.
        Otherwise mono-dimensional axes will be squeezed.
        Legal values: 0 (default), 1 or 2.
        .. versionadded:: 1.6.0
    
    Returns
    -------
    out : ndarray
        Data read from the text file.
    
    See Also
    --------
    load, fromstring, fromregex
    genfromtxt : Load data with missing values handled as specified.
    scipy.io.loadmat : reads MATLAB data files
    
    Notes
    -----
    This function aims to be a fast reader for simply formatted files.  The
    `genfromtxt` function provides more sophisticated handling of, e.g.,
    lines with missing values.
    
    Examples
    --------
    &gt;&gt;&gt; from StringIO import StringIO   # StringIO behaves like a file object
    &gt;&gt;&gt; c = StringIO(&#34;0 1\n2 3&#34;)
    &gt;&gt;&gt; np.loadtxt(c)
    array([[ 0.,  1.],
           [ 2.,  3.]])
    
    &gt;&gt;&gt; d = StringIO(&#34;M 21 72\nF 35 58&#34;)
    &gt;&gt;&gt; np.loadtxt(d, dtype={&#39;names&#39;: (&#39;gender&#39;, &#39;age&#39;, &#39;weight&#39;),
    ...                      &#39;formats&#39;: (&#39;S1&#39;, &#39;i4&#39;, &#39;f4&#39;)})
    array([(&#39;M&#39;, 21, 72.0), (&#39;F&#39;, 35, 58.0)],
          dtype=[(&#39;gender&#39;, &#39;|S1&#39;), (&#39;age&#39;, &#39;&lt;i4&#39;), (&#39;weight&#39;, &#39;&lt;f4&#39;)])
    
    &gt;&gt;&gt; c = StringIO(&#34;1,0,2\n3,0,4&#34;)
    &gt;&gt;&gt; x, y = np.loadtxt(c, delimiter=&#39;,&#39;, usecols=(0, 2), unpack=True)
    &gt;&gt;&gt; x
    array([ 1.,  3.])
    &gt;&gt;&gt; y
    array([ 2.,  4.])

</pre>
</div>


<div class="">
<p>There's a lot of information here, but the most important part is the first couple of lines:</p>
<pre class="sourceCode python"><code class="sourceCode python">loadtxt(fname, dtype=&lt;<span class="dt">type</span> <span class="st">&#39;float&#39;</span>&gt;, comments=<span class="st">&#39;#&#39;</span>, delimiter=<span class="ot">None</span>, converters=<span class="ot">None</span>, skiprows=<span class="dv">0</span>, usecols=<span class="ot">None</span>,
        unpack=<span class="ot">False</span>, ndmin=<span class="dv">0</span>)</code></pre>
<p>This tells us that <code>loadtxt</code> has one parameter called <code>fname</code> that doesn't have a default value, and eight others that do. If we call the function like this:</p>
<pre class="sourceCode python"><code class="sourceCode python">numpy.loadtxt(<span class="st">&#39;inflammation-01.csv&#39;</span>, <span class="st">&#39;,&#39;</span>)</code></pre>
<p>then the filename is assigned to <code>fname</code> (which is what we want), but the delimiter string <code>','</code> is assigned to <code>dtype</code> rather than <code>delimiter</code>, because <code>dtype</code> is the second parameter in the list. That's why we don't have to provide <code>fname=</code> for the filename, but <em>do</em> have to provide <code>delimiter=</code> for the second parameter.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Rewrite the <code>normalize</code> function so that it scales data to lie between 0.0 and 1.0 by default, but will allow the caller to specify lower and upper bounds if they want. Compare your implementation to your neighbor's: do the two functions always behave the same way?</li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Define a function using <code>def name(...params...)</code>.</li>
<li>The body of a function must be indented.</li>
<li>Call a function using <code>name(...values...)</code>.</li>
<li>Numbers are stored as integers or floating-point numbers.</li>
<li>Integer division produces the whole part of the answer (not the fractional part).</li>
<li>Each time a function is called, a new stack frame is created on the <a href="../../gloss.html#call-stack">call stack</a> to hold its parameters and local variables.</li>
<li>Python looks for variables in the current stack frame before looking for them at the top level.</li>
<li>Use <code>help(thing)</code> to view help for something.</li>
<li>Put docstrings in functions to provide help for that function.</li>
<li>Specify default values for parameters when defining a function using <code>name=value</code> in the parameter list.</li>
<li>Parameters can be passed by matching based on name, by position, or by omitting them (in which case the default value is used).</li>
</ul>
</div>


<div class="">
<h4 id="next-steps">Next Steps</h4>
<p>We now have a function called <code>analyze</code> to visualize a single data set. We could use it to explore all 12 of our current data sets like this:</p>
<pre class="sourceCode python"><code class="sourceCode python">analyze(<span class="st">&#39;inflammation-01.csv&#39;</span>)
analyze(<span class="st">&#39;inflammation-02.csv&#39;</span>)
...
analyze(<span class="st">&#39;inflammation-12.csv&#39;</span>)</code></pre>
<p>but the chances of us typing all 12 filenames correctly aren't great, and we'll be even worse off if we get another hundred files. What we need is a way to tell Python to do something once for each file, and that will be the subject of the next lesson.</p>
</div>

---
layout: lesson
root: ../..
---

## Analyzing Multiple Data Sets


<div class="">
<p>We have created a function called <code>analyze</code> that creates graphs of the minimum, average, and maximum daily inflammation rates for a single data set:</p>
</div>


<div class="in">
<pre>%matplotlib inline

import numpy as np
from matplotlib import pyplot as plt

def analyze(filename):
    data = np.loadtxt(fname=filename, delimiter=&#39;,&#39;)
    
    plt.figure(figsize=(10.0, 3.0))
    
    plt.subplot(1, 3, 1)
    plt.ylabel(&#39;average&#39;)
    plt.plot(data.mean(0))
    
    plt.subplot(1, 3, 2)
    plt.ylabel(&#39;max&#39;)
    plt.plot(data.max(0))
    
    plt.subplot(1, 3, 3)
    plt.ylabel(&#39;min&#39;)
    plt.plot(data.min(0))
    
    plt.tight_layout()
    plt.show()

analyze(&#39;inflammation-01.csv&#39;)</pre>
</div>

<div class="out">
<pre>
<img src="../../novice/python/03-loop_files/novice/python/03-loop_2_0.png">
</pre>
</div>


<div class="">
<p>We can use it to analyze other data sets one by one:</p>
</div>


<div class="in">
<pre>analyze(&#39;inflammation-02.csv&#39;)</pre>
</div>

<div class="out">
<pre>
<img src="../../novice/python/03-loop_files/novice/python/03-loop_4_0.png">
</pre>
</div>


<div class="">
<p>but we have a dozen data sets right now and more on the way. We want to create plots for all our data sets with a single statement. To do that, we'll have to teach the computer how to repeat things.</p>
</div>


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Explain what a for loop does.</li>
<li>Correctly write for loops to repeat simple calculations.</li>
<li>Trace changes to a loop variable as the loop runs.</li>
<li>Trace changes to other variables as they are updated by a for loop.</li>
<li>Explain what a list is.</li>
<li>Create and index lists of simple values.</li>
<li>Use a library function to get a list of filenames that match a simple wildcard pattern.</li>
<li>Use a for loop to process multiple files.</li>
</ul>
</div>

### For Loops


<div class="">
<p>Suppose we want to print each character in the word &quot;lead&quot; on a line of its own. One way is to use four <code>print</code> statements:</p>
</div>


<div class="in">
<pre>def print_characters(element):
    print element[0]
    print element[1]
    print element[2]
    print element[3]

print_characters(&#39;lead&#39;)</pre>
</div>

<div class="out">
<pre>l
e
a
d
</pre>
</div>


<div class="">
<p>but that's a bad approach for two reasons:</p>
<ol style="list-style-type: decimal">
<li><p>It doesn't scale: if we want to print the characters in a string that's hundreds of letters long, we'd be better off just typing them in.</p></li>
<li><p>It's fragile: if we give it a longer string, it only prints part of the data, and if we give it a shorter one, it produces an error because we're asking for characters that don't exist.</p></li>
</ol>
</div>


<div class="in">
<pre>print_characters(&#39;tin&#39;)</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
&lt;ipython-input-13-5bc7311e0bf3&gt; in &lt;module&gt;()
----&gt; 1 print_characters(&#39;tin&#39;)

&lt;ipython-input-12-11460561ea56&gt; in print_characters(element)
      3     print element[1]
      4     print element[2]
----&gt; 5     print element[3]
      6 
      7 print_characters(&#39;lead&#39;)

IndexError: string index out of ranget
i
n
</pre>
</div>


<div>
<p>Here's a better approach:</p>
</div>


<div class="in">
<pre>def print_characters(element):
    for char in element:
        print char

print_characters(&#39;lead&#39;)</pre>
</div>


<div class="">
<p>This is shorter---certainly shorter than something that prints every character in a hundred-letter string---and more robust as well:</p>
</div>


<div class="in">
<pre>print_characters(&#39;oxygen&#39;)</pre>
</div>


<div class="">
<p>The improved version of <code>print_characters</code> uses a <a href="../../gloss.html#for-loop">for loop</a> to repeat an operation---in this case, printing---once for each thing in a collection. The general form of a loop is:</p>
<pre>
<strong>for</strong> <em>variable</em> <strong>in</strong> <em>collection</em><strong>:</strong>
    <em>do things with variable</em>
</pre>

</div>


<div class="">
<p>We can call the <a href="../../gloss.html#loop-variable">loop variable</a> anything we like, but there must be a colon at the end of the line starting the loop, and we must indent the body of the loop.</p>
<p>Here's another loop that repeatedly updates a variable:</p>
</div>


<div class="in">
<pre>length = 0
for vowel in &#39;aeiou&#39;:
    length = length + 1
print &#39;There are&#39;, length, &#39;vowels&#39;</pre>
</div>


<div class="">
<p>It's worth tracing the execution of this little program step by step. Since there are five characters in <code>'aeiou'</code>, the statement on line 3 will be executed five times. The first time around, <code>length</code> is zero (the value assigned to it on line 1) and <code>vowel</code> is <code>'a'</code>. The statement adds 1 to the old value of <code>length</code>, producing 1, and updates <code>length</code> to refer to that new value. The next time around, <code>vowel</code> is <code>'e'</code> and <code>length</code> is 1, so <code>length</code> is updated to be 2. After three more updates, <code>length</code> is 5; since there is nothing left in <code>'aeiou'</code> for Python to process, the loop finishes and the <code>print</code> statement on line 4 tells us our final answer.</p>
<p>Note that a loop variable is just a variable that's being used to record progress in a loop. It still exists after the loop is over, and we can re-use variables previously defined as loop variables as well:</p>
</div>


<div class="in">
<pre>letter = &#39;z&#39;
for letter in &#39;abc&#39;:
    print letter
print &#39;after the loop, letter is&#39;, letter</pre>
</div>


<div class="">
<p>Note also that finding the length of a string is such a common operation that Python actually has a built-in function to do it called <code>len</code>:</p>
</div>


<div class="in">
<pre>print len(&#39;aeiou&#39;)</pre>
</div>


<div class="">
<p><code>len</code> is much faster than any function we could write ourselves, and much easier to read than a two-line loop; it will also give us the length of many other things that we haven't met yet, so we should always use it when we can.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol>
<li><p>Python has a built-in function called <code>range</code> that creates a list of numbers:
<code>range(3)</code> produces <code>[0, 1, 2]</code>, <code>range(2, 5)</code> produces <code>[2, 3, 4]</code>, and <code>range(2, 10, 3)</code> produces <code>[2, 5, 8]</code>.
Using <code>range</code>,
write a function that prints the $N$ natural numbers:</p>
<pre><code class="language-python">print_N(<span class="number">3</span>)
<span class="number">1</span>
<span class="number">2</span>
<span class="number">3</span>
</code></pre>
</li>
<li><p>Exponentiation is built into Python:</p>
<pre><code class="language-python"><span class="keyword">print</span> <span class="number">2</span>**<span class="number">4</span>
<span class="number">16</span>
</code></pre>
<p>It also has a function called <code>pow</code> that calculates the same value.
Write a function called <code>expo</code> that uses a loop to calculate the same result.</p>
</li>
<li><p>Python&#39;s strings have methods, just like NumPy&#39;s arrays.
One of these is called <code>reverse</code>:</p>
<pre><code class="language-python"><span class="keyword">print</span> <span class="string">'Newton'</span>.reverse()
notweN
</code></pre>
<p>Write a function called <code>rev</code> that does the same thing:</p>
<pre><code class="language-python"><span class="keyword">print</span> rev(<span class="string">'Newton'</span>)
notweN
</code></pre>
<p>As always, be sure to include a docstring.</p>
</li>
</ol>
</div>

### Lists


<div class="">
<p>Just as a <code>for</code> loop is a way to do operations many times, a list is a way to store many values. Unlike NumPy arrays, there are built into the language. We create a list by putting values inside square brackets:</p>
</div>


<div class="in">
<pre>odds = [1, 3, 5, 7]
print &#39;odds are:&#39;, odds</pre>
</div>


<div class="">
<p>We select individual elements from lists by indexing them:</p>
</div>


<div class="in">
<pre>print &#39;first and last:&#39;, odds[0], odds[-1]</pre>
</div>


<div class="">
<p>and if we loop over a list, the loop variable is assigned elements one at a time:</p>
</div>


<div class="in">
<pre>for number in odds:
    print number</pre>
</div>


<div class="">
<p>There is one important difference between lists and strings: we can change the values in a list, but we cannot change the characters in a string. For example:</p>
</div>


<div class="in">
<pre>names = [&#39;Newton&#39;, &#39;Darwing&#39;, &#39;Turing&#39;] # typo in Darwin&#39;s name
print &#39;names is originally:&#39;, names
names[1] = &#39;Darwin&#39; # correct the name
print &#39;final value of names:&#39;, names</pre>
</div>


<div class="">
<p>works, but:</p>
</div>


<div class="in">
<pre>name = &#39;Bell&#39;
name[0] = &#39;b&#39;</pre>
</div>


<div class="">
<p>does not.</p>
<blockquote>
<h4>Ch-Ch-Ch-Changes</h4>
<p>Data that can be changed is called <a href="../../gloss.html#mutable">mutable</a>, while data that cannot be is called <a href="../../gloss.html#immutable">immutable</a>. Like strings, numbers are immutable: there's no way to make the number 0 have the value 1 or vice versa (at least, not in Python—there actually <em>are</em> languages that will let people do this, with predictably confusing results). Lists and arrays, on the other hand, are mutable: both can be modified after they have been created.</p>
<p>Programs that modify data in place can be harder to understand than ones that don't because readers may have to mentally sum up many lines of code in order to figure out what the value of something actually is. On the other hand, programs that modify data in place instead of creating copies that are almost identical to the original every time they want to make a small change are much more efficient.</p>
</blockquote>
<p>There are many ways to change the contents of in lists besides assigning to elements:</p>
</div>


<div class="in">
<pre>odds.append(11)
print &#39;odds after adding a value:&#39;, odds</pre>
</div>


<div class="in">
<pre>del odds[0]
print &#39;odds after removing the first element:&#39;, odds</pre>
</div>


<div class="in">
<pre>odds.reverse()
print &#39;odds after reversing:&#39;, odds</pre>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Write a function called <code>total</code> that calculates the sum of the values in a list. (Python has a built-in function called <code>sum</code> that does this for you. Please don't use it for this exercise.)</li>
</ol>
</div>

### Processing Multiple Files


<div class="">
<p>We now have almost everything we need to process all our data files. The only thing that's missing is a library with a rather unpleasant name:</p>
</div>


<div class="in">
<pre>import glob</pre>
</div>


<div class="">
<p>The <code>glob</code> library contains a single function, also called <code>glob</code>, that finds files whose names match a pattern. We provide those patterns as strings: the character <code>*</code> matches zero or more characters, while <code>?</code> matches any one character. We can use this to get the names of all the IPython Notebooks we have created so far:</p>
</div>


<div class="in">
<pre>print glob.glob(&#39;*.ipynb&#39;)</pre>
</div>

<div class="out">
<pre>[&#39;01-numpy.ipynb&#39;, &#39;02-func.ipynb&#39;, &#39;03-loop.ipynb&#39;, &#39;04-cond.ipynb&#39;, &#39;05-defensive.ipynb&#39;, &#39;06-cmdline.ipynb&#39;, &#39;spatial-intro.ipynb&#39;]
</pre>
</div>


<div class="">
<p>or to get the names of all our CSV data files:</p>
</div>


<div class="in">
<pre>print glob.glob(&#39;*.csv&#39;)</pre>
</div>

<div class="out">
<pre>[&#39;inflammation-01.csv&#39;, &#39;inflammation-02.csv&#39;, &#39;inflammation-03.csv&#39;, &#39;inflammation-04.csv&#39;, &#39;inflammation-05.csv&#39;, &#39;inflammation-06.csv&#39;, &#39;inflammation-07.csv&#39;, &#39;inflammation-08.csv&#39;, &#39;inflammation-09.csv&#39;, &#39;inflammation-10.csv&#39;, &#39;inflammation-11.csv&#39;, &#39;inflammation-12.csv&#39;, &#39;small-01.csv&#39;, &#39;small-02.csv&#39;, &#39;small-03.csv&#39;, &#39;swc_bc_coords.csv&#39;]
</pre>
</div>


<div class="">
<p>As these examples show, <code>glob.glob</code>'s result is a list of strings, which means we can loop over it to do something with each filename in turn. In our case, the &quot;something&quot; we want is our <code>analyze</code> function. Let's test it by analyzing the first three files in the list:</p>
</div>


<div class="in">
<pre>filenames = glob.glob(&#39;*.csv&#39;)
filenames = filenames[0:3]
for f in filenames:
    print f
    analyze(f)</pre>
</div>

<div class="out">
<pre>inflammation-01.csv

<img src="../../novice/python/03-loop_files/novice/python/03-loop_49_1.png">
inflammation-02.csv

<img src="../../novice/python/03-loop_files/novice/python/03-loop_49_3.png">
inflammation-03.csv

<img src="../../novice/python/03-loop_files/novice/python/03-loop_49_5.png">
</pre>
</div>


<div class="">
<p>Sure enough, the maxima of these data sets show exactly the same ramp as the first, and their minima show the same staircase structure.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Write a function called <code>analyze_all</code> that takes a filename pattern as its sole argument and runs <code>analyze</code> for each file whose name matches the pattern.</li>
</ol>
</div>


<div class="">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Use <code>for variable in collection</code> to process the elements of a collection one at a time.</li>
<li>The body of a for loop must be indented.</li>
<li>Use <code>len(thing)</code> to determine the length of something that contains other values.</li>
<li><code>[value1, value2, value3, ...]</code> creates a list.</li>
<li>Lists are indexed and sliced in the same way as strings and arrays.</li>
<li>Lists are mutable (i.e., their values can be changed in place).</li>
<li>Strings are immutable (i.e., the characters in them cannot be changed).</li>
<li>Use <code>glob.glob(pattern)</code> to create a list of files whose names match a pattern.</li>
<li>Use <code>*</code> in a pattern to match zero or more characters, and <code>?</code> to match any single character.</li>
</ul>
</div>


<div class="">
<h4 id="next-steps">Next Steps</h4>
<p>We have now solved our original problem: we can analyze any number of data files with a single command. More importantly, we have met two of the most important ideas in programming:</p>
<ol style="list-style-type: decimal">
<li>Use functions to make code easier to re-use and easier to understand.</li>
<li>Use lists and arrays to store related values, and loops to repeat operations on them.</li>
</ol>
<p>We have one more big idea to introduce, and then we will be able to go back and create a heat map like the one we initially used to display our first data set.</p>
</div>

---
layout: lesson
root: ../..
---

## Making Choices


<div class="">
<p>Our previous lessons have shown us how to manipulate data, define our own functions, and repeat things. However, the programs we have written so far always do the same things, regardless of what data they're given. We want programs to make choices based on the values they are manipulating. To help us see what decisions they're making, we'll start by looking at how computers manipulate images.</p>
</div>


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Create a simple &quot;image&quot; made out of colored blocks.</li>
<li>Explain how the RGB model represents colors.</li>
<li>Explain the similarities and differences between tuples and lists.</li>
<li>Write conditional statements including <code>if</code>, <code>elif</code>, and <code>else</code> branches.</li>
<li>Correctly evaluate expressions containing <code>and</code> and <code>or</code>.</li>
<li>Correctly write and interpret code containing nested loops and conditionals.</li>
<li>Explain the advantages of putting frequently-modified code in a function.</li>
</ul>
</div>

### Image Grids


<div class="">
<p>Let's start by creating some simple heat maps of our own using a library called <code>ipythonblocks</code>. The first step is to create our own &quot;image&quot;:</p>
</div>


<div class="in">
<pre>from ipythonblocks import ImageGrid</pre>
</div>


<div>
<p>Unlike the <code>import</code> statements we have seen earlier, this one doesn't load the entire <code>ipythonblocks</code> library. Instead, it just loads <code>ImageGrid</code> from that library, since that's the only thing we need (for now).</p>
<p>Once we have <code>ImageGrid</code> loaded, we can use it to create a very simple grid of colored cells:</p>
</div>


<div class="in">
<pre>grid = ImageGrid(5, 3)
grid.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocks84e827e4-60f2-4e82-b41a-c95955a972aa td {border: 1px solid white;}</style><table id="blocks84e827e4-60f2-4e82-b41a-c95955a972aa" class="blockgrid"><tbody><tr><td title="Index: [0, 2]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [1, 2]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [2, 2]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [3, 2]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [4, 2]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [1, 1]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [2, 1]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [3, 1]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [4, 1]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [1, 0]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [2, 0]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [3, 0]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [4, 0]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>Just like a NumPy array, an <code>ImageGrid</code> has some properties that hold information about it:</p>
</div>


<div class="in">
<pre>print &#39;grid width:&#39;, grid.width
print &#39;grid height:&#39;, grid.height
print &#39;grid lines on:&#39;, grid.lines_on</pre>
</div>

<div class="out">
<pre>grid width: 5
grid height: 3
grid lines on: True
</pre>
</div>


<div class="">
<p>The obvious thing to do with a grid like this is color in its cells, but in order to do that, we need to know how computers represent color. The most common schemes are <a href="../../gloss.html#rgb">RGB</a>, which is short for &quot;red, green, blue&quot;. RGB is an <a href="../../gloss.html#additive-color-model">additive color model</a>: every shade is some combination of red, green, and blue intensities. We can think of these three values as being the axes in a cube:</p>
<p><img src="img/color-cube.png" alt="RGB Color Cube" /></p>
<p>An RGB color is an example of a multi-part value: like a Cartesian coordinate, it is one thing with several parts. We can represent such a value in Python using a <a href="../../gloss.html#tuple">tuple</a>, which we write using parentheses instead of the square brackets used for a list:</p>
</div>


<div class="in">
<pre>position = (12.3, 45.6)
print &#39;position is:&#39;, position
color = (10, 20, 30)
print &#39;color is:&#39;, color</pre>
</div>

<div class="out">
<pre>position is: (12.3, 45.6)
color is: (10, 20, 30)
</pre>
</div>


<div class="">
<p>We can select elements from tuples using indexing, just as we do with lists and arrays:</p>
</div>


<div class="in">
<pre>print &#39;first element of color is:&#39;, color[0]</pre>
</div>

<div class="out">
<pre>first element of color is: 10
</pre>
</div>


<div class="">
<p>Unlike lists and arrays, though, tuples cannot be changed after they are created—in technical terms, they are <a href="../../gloss.html#immutable">immutable</a>:</p>
</div>


<div class="in">
<pre>color[0] = 40
print &#39;first element of color after change:&#39;, color[0]</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-11-9c3dd30a4e52&gt; in &lt;module&gt;()
----&gt; 1 color[0] = 40
      2 print &#39;first element of color after change:&#39;, color[0]

TypeError: &#39;tuple&#39; object does not support item assignment</pre>
</div>


<div class="">
<p>If a tuple represents an RGB color, its red, green, and blue components can take on values between 0 and 255. The upper bound may seem odd, but it's the largest number that can be represented in an 8-bit byte (i.e., 2<sup>8</sup>-1). This makes it easy for computers to manipulate colors, while providing fine enough gradations to fool most human eyes, most of the time.</p>
<p>Let's see what a few RGB colors actually look like:</p>
</div>


<div class="in">
<pre>row = ImageGrid(8, 1)
row[0, 0] = (0, 0, 0)   # no color =&gt; black
row[1, 0] = (255, 255, 255) # all colors =&gt; white
row[2, 0] = (255, 0, 0) # all red
row[3, 0] = (0, 255, 0) # all green
row[4, 0] = (0, 0, 255) # all blue
row[5, 0] = (255, 255, 0) # red and green
row[6, 0] = (255, 0, 255) # red and blue
row[7, 0] = (0, 255, 255) # green and blue
row.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocks9d1f4bb1-553c-4074-aec0-dc48fde66e06 td {border: 1px solid white;}</style><table id="blocks9d1f4bb1-553c-4074-aec0-dc48fde66e06" class="blockgrid"><tbody><tr><td title="Index: [0, 0]&#10;Color: (0, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 0);"></td><td title="Index: [1, 0]&#10;Color: (255, 255, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 255, 255);"></td><td title="Index: [2, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 0]&#10;Color: (0, 255, 0)" style="width: 20px; height: 20px;background-color: rgb(0, 255, 0);"></td><td title="Index: [4, 0]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 0]&#10;Color: (255, 255, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 255, 0);"></td><td title="Index: [6, 0]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 0]&#10;Color: (0, 255, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 255, 255);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>Simple color values like <code>(0,255,0)</code> are easy enough to decipher with a bit of practice, but what color is <code>(214,90,127)</code>? To help us, <code>ipythonblocks</code> provides a function called <code>show_color</code>:</p>
</div>


<div class="in">
<pre>from ipythonblocks import show_color
show_color(214, 90, 127)</pre>
</div>

<div class="out">
<pre><div style="height: 60px; min-width: 200px; background-color: rgb(214, 90, 127)"></div></pre>
</div>


<div class="">
<p>It also provides a table of standard colors:</p>
</div>


<div class="in">
<pre>from ipythonblocks import colors
c = ImageGrid(3, 2)
c[0, 0] = colors[&#39;Fuchsia&#39;]
c[0, 1] = colors[&#39;Salmon&#39;]
c[1, 0] = colors[&#39;Orchid&#39;]
c[1, 1] = colors[&#39;Lavender&#39;]
c[2, 0] = colors[&#39;LimeGreen&#39;]
c[2, 1] = colors[&#39;HotPink&#39;]
c.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocksb8c954b3-f908-4ab1-8013-65bf49ec1b2f td {border: 1px solid white;}</style><table id="blocksb8c954b3-f908-4ab1-8013-65bf49ec1b2f" class="blockgrid"><tbody><tr><td title="Index: [0, 1]&#10;Color: (250, 128, 114)" style="width: 20px; height: 20px;background-color: rgb(250, 128, 114);"></td><td title="Index: [1, 1]&#10;Color: (230, 230, 250)" style="width: 20px; height: 20px;background-color: rgb(230, 230, 250);"></td><td title="Index: [2, 1]&#10;Color: (255, 105, 180)" style="width: 20px; height: 20px;background-color: rgb(255, 105, 180);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [1, 0]&#10;Color: (218, 112, 214)" style="width: 20px; height: 20px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 0]&#10;Color: (50, 205, 50)" style="width: 20px; height: 20px;background-color: rgb(50, 205, 50);"></td></tr></tbody></table></pre>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Fill in the <code>____</code> in the code below to create a bar that changes color from dark blue to black.</p>
<pre class="sourceCode python"><code class="sourceCode python">bar = ImageGrid(<span class="dv">10</span>, <span class="dv">1</span>)
<span class="kw">for</span> x in <span class="dt">range</span>(<span class="dv">10</span>):
    bar[x, <span class="dv">0</span>] = (<span class="dv">0</span>, <span class="dv">0</span>, ____)
bar.show()</code></pre></li>
<li><p>Why do computers use red, green, and blue as their primary colors?</p></li>
</ol>
</div>

### Conditionals


<div class="">
<p>The other thing we need in order to create a heat map of our own is a way to pick a color based on a data value. The tool Python gives us for doing this is called a <a href="../../gloss.html#conditional-statement">conditional statement</a>, and looks like this:</p>
</div>


<div class="in">
<pre>num = 37
if num &gt; 100:
    print &#39;greater&#39;
else:
    print &#39;not greater&#39;
print &#39;done&#39;</pre>
</div>

<div class="out">
<pre>not greater
done
</pre>
</div>


<div class="">
<p>The second line of this code uses the keyword <code>if</code> to tell Python that we want to make a choice. If the test that follows it is true, the body of the <code>if</code> (i.e., the lines indented underneath it) are executed. If the test is false, the body of the <code>else</code> is executed instead. Only one or the other is ever executed:</p>
</div>


<div class="">
<p><img src="img/python-flowchart-conditional.svg" alt="Executing a Conditional" /></p>
</div>


<div class="">
<p>Conditional statements don't have to include an <code>else</code>. If there isn't one, Python simply does nothing if the test is false:</p>
</div>


<div class="in">
<pre>num = 53
print &#39;before conditional...&#39;
if num &gt; 100:
    print &#39;53 is greater than 100&#39;
print &#39;...after conditional&#39;</pre>
</div>

<div class="out">
<pre>before conditional...
...after conditional
</pre>
</div>


<div class="">
<p>We can also chain several tests together using <code>elif</code>, which is short for &quot;else if&quot;. This makes it simple to write a function that returns the sign of a number:</p>
</div>


<div class="in">
<pre>def sign(num):
    if num &gt; 0:
        return 1
    elif num == 0:
        return 0
    else:
        return -1

print &#39;sign of -3:&#39;, sign(-3)</pre>
</div>

<div class="out">
<pre>sign of -3: -1
</pre>
</div>


<div class="">
<p>One important thing to notice the code above is that we use a double equals sign <code>==</code> to test for equality rather than a single equals sign because the latter is used to mean assignment. This convention was inherited from C, and while many other programming languages work the same way, it does take a bit of getting used to...</p>
<p>We can also combine tests using <code>and</code> and <code>or</code>. <code>and</code> is only true if both parts are true:</p>
</div>


<div class="in">
<pre>if (1 &gt; 0) and (-1 &gt; 0):
    print &#39;both parts are true&#39;
else:
    print &#39;one part is not true&#39;</pre>
</div>

<div class="out">
<pre>one part is not true
</pre>
</div>


<div class="">
<p>while <code>or</code> is true if either part is true:</p>
</div>


<div class="in">
<pre>if (1 &lt; 0) or (&#39;left&#39; &lt; &#39;right&#39;):
    print &#39;at least one test is true&#39;</pre>
</div>

<div class="out">
<pre>at least one test is true
</pre>
</div>


<div class="">
<p>In this case, &quot;either&quot; means &quot;either or both&quot;, not &quot;either one or the other but not both&quot;.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p><code>True</code> and <code>False</code> aren't the only values in Python that are true and false. In fact, <em>any</em> value can be used in an <code>if</code> or <code>elif</code>. After reading and running the code below, explain what the rule is for which values are considered true and which are considered false. (Note that if the body of a conditional is a single statement, we can write it on the same line as the <code>if</code>.)</p>
<pre class="sourceCode python"><code class="sourceCode python"><span class="kw">if</span> <span class="st">&#39;&#39;</span>: <span class="kw">print</span> <span class="st">&#39;empty string is true&#39;</span>
<span class="kw">if</span> <span class="st">&#39;word&#39;</span>: <span class="kw">print</span> <span class="st">&#39;word is true&#39;</span>
<span class="kw">if</span> []: <span class="kw">print</span> <span class="st">&#39;empty list is true&#39;</span>
<span class="kw">if</span> [<span class="dv">1</span>, <span class="dv">2</span>, <span class="dv">3</span>]: <span class="kw">print</span> <span class="st">&#39;non-empty list is true&#39;</span>
<span class="kw">if</span> <span class="dv">0</span>: <span class="kw">print</span> <span class="st">&#39;zero is true&#39;</span>
<span class="kw">if</span> <span class="dv">1</span>: <span class="kw">print</span> <span class="st">&#39;one is true&#39;</span></code></pre></li>
<li><p>Write a function called <code>near</code> that returns <code>True</code> if its first parameter is within 10% of its second and <code>False</code> otherwise. Compare your implementation with your partner's: do you return the same answer for all possible pairs of numbers?</p></li>
</ol>
</div>

### Nesting


<div class="">
<p>Another thing to realize is that <code>if</code> statements can be combined with loops just as easily as they can be combined with functions. For example, if we want to sum the positive numbers in a list, we can write this:</p>
</div>


<div class="in">
<pre>numbers = [-5, 3, 2, -1, 9, 6]
total = 0
for n in numbers:
    if n &gt;= 0:
        total = total + n
print &#39;sum of positive values:&#39;, total</pre>
</div>

<div class="out">
<pre>sum of positive values: 20
</pre>
</div>


<div class="">
<p>We could equally well calculate the positive and negative sums in a single loop:</p>
</div>


<div class="in">
<pre>pos_total = 0
neg_total = 0
for n in numbers:
    if n &gt;= 0:
        pos_total = pos_total + n
    else:
        neg_total = neg_total + n
print &#39;negative and positive sums are:&#39;, neg_total, pos_total</pre>
</div>

<div class="out">
<pre>negative and positive sums are: -6 20
</pre>
</div>


<div class="">
<p>We can even put one loop inside another:</p>
</div>


<div class="in">
<pre>for consonant in &#39;bcd&#39;:
    for vowel in &#39;ae&#39;:
        print consonant + vowel</pre>
</div>

<div class="out">
<pre>ba
be
ca
ce
da
de
</pre>
</div>


<div class="">
<p>As the diagram below shows, the <a href="../../gloss.html#inner-loop">inner loop</a> runs from start to finish each time the <a href="../../gloss.html#outer-loop">outer loop</a> runs once:</p>
</div>


<div class="">
<p><img src="img/python-flowchart-nested-loops.svg" alt="Execution of Nested Loops" /></p>
</div>


<div class="">
<p>We can combine nesting and conditionals to create patterns in an image:</p>
</div>


<div class="in">
<pre>square = ImageGrid(5, 5)
for x in range(square.width):
    for y in range(square.height):
        if x &lt; y:
            square[x, y] = colors[&#39;Fuchsia&#39;]
        elif x == y:
            square[x, y] = colors[&#39;Olive&#39;]
        else:
            square[x, y] = colors[&#39;SlateGray&#39;]
square.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocksa391625e-64d4-47e1-a54a-2953c1aea09c td {border: 1px solid white;}</style><table id="blocksa391625e-64d4-47e1-a54a-2953c1aea09c" class="blockgrid"><tbody><tr><td title="Index: [0, 4]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [1, 4]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [2, 4]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [3, 4]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [4, 4]&#10;Color: (128, 128, 0)" style="width: 20px; height: 20px;background-color: rgb(128, 128, 0);"></td></tr><tr><td title="Index: [0, 3]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [1, 3]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [2, 3]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [3, 3]&#10;Color: (128, 128, 0)" style="width: 20px; height: 20px;background-color: rgb(128, 128, 0);"></td><td title="Index: [4, 3]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td></tr><tr><td title="Index: [0, 2]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [1, 2]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [2, 2]&#10;Color: (128, 128, 0)" style="width: 20px; height: 20px;background-color: rgb(128, 128, 0);"></td><td title="Index: [3, 2]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td><td title="Index: [4, 2]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (255, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 255);"></td><td title="Index: [1, 1]&#10;Color: (128, 128, 0)" style="width: 20px; height: 20px;background-color: rgb(128, 128, 0);"></td><td title="Index: [2, 1]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td><td title="Index: [3, 1]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td><td title="Index: [4, 1]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (128, 128, 0)" style="width: 20px; height: 20px;background-color: rgb(128, 128, 0);"></td><td title="Index: [1, 0]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td><td title="Index: [2, 0]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td><td title="Index: [3, 0]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td><td title="Index: [4, 0]&#10;Color: (112, 128, 144)" style="width: 20px; height: 20px;background-color: rgb(112, 128, 144);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>This is our first hand-made data visualization: the colors show where <code>x</code> is less than, equal to, or greater than <code>y</code>.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Will changing the nesting of the loops in the code above—i.e., wrapping the Y-axis loop around the X-axis loop—change the final image? Why or why not?</p></li>
<li><p>Python (and most other languages in the C family) provides <a href="../../gloss.html#in-place-operator">in-place operators</a> that work like this:</p>
<pre class="sourceCode python"><code class="sourceCode python">x = <span class="dv">1</span>  <span class="co"># original value</span>
x += <span class="dv">1</span> <span class="co"># add one to x, assigning result back to x</span>
x *= <span class="dv">3</span> <span class="co"># multiply x by 3</span>
<span class="kw">print</span> x
<span class="dv">6</span></code></pre>
<p>Rewrite the code that sums the positive and negative numbers in a list using in-place operators. Do you think the result is more or less readable than the original?</p></li>
</ol>
</div>

### Creating a Heat Map


<div class="">
<p>The last step is to turn our data into something we can see. As in previous lessons, the first step is to get the data into memory:</p>
</div>


<div class="in">
<pre>import numpy as np
data = np.loadtxt(fname=&#39;inflammation-01.csv&#39;, delimiter=&#39;,&#39;)
print &#39;data shape:&#39;, data.shape</pre>
</div>

<div class="out">
<pre>data shape: (60, 40)
</pre>
</div>


<div class="">
<p>The second is to create an image grid that is the same size as the data:</p>
</div>


<div class="in">
<pre>width, height = data.shape
heatmap = ImageGrid(width, height)</pre>
</div>


<div class="">
<p>(The first line of the code above takes advantage of a neat trick: we can unpack the values in a tuple by assigning it to as many variables as it has entries.)</p>
<p>The third step is to decide <em>how</em> we are going to color the cells in the heat map. To keep things simple, we will use red, green, and blue as our colors, and compare data values to the data set's mean. Here's the code:</p>
</div>


<div class="in">
<pre>for x in range(width):
    for y in range(height):
        if data[x, y] &lt; data.mean():
            heatmap[x, y] = colors[&#39;Red&#39;]
        elif data[x, y] == data.mean():
            heatmap[x, y] = colors[&#39;Green&#39;]
        else:
            heatmap[x, y] = colors[&#39;Blue&#39;]
heatmap.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocks1cdd8344-bb95-4b16-bc13-b4fb6f13235a td {border: 1px solid white;}</style><table id="blocks1cdd8344-bb95-4b16-bc13-b4fb6f13235a" class="blockgrid"><tbody><tr><td title="Index: [0, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 39]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 38]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 37]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 36]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 35]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 34]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 33]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 33]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 33]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 33]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 32]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 32]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 31]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 31]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 30]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 30]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 29]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 29]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 28]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 28]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 27]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 27]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 26]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 26]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 25]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 25]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 24]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 24]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 23]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 23]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 22]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 22]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 21]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 21]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 20]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 20]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 20]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 20]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 20]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 20]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 19]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 19]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 18]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 18]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 17]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 17]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 16]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 16]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 15]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 15]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [14, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [58, 14]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 14]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [37, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [41, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 13]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 13]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [15, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 12]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 12]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [5, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [11, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [28, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [35, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [38, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 11]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 11]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [2, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [6, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [8, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [16, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [24, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [25, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [36, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [45, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [51, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [52, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [53, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [55, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 10]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 10]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [3, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [4, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [7, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [9, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [10, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [13, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [18, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [20, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [22, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [27, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [32, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [33, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [39, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [40, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [43, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [47, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [56, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 9]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 9]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [17, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [19, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [21, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [29, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [30, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [31, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [42, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [44, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [46, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [48, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [49, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 8]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [59, 8]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td></tr><tr><td title="Index: [0, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [1, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [12, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [23, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [26, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [34, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [50, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [54, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 7]&#10;Color: (0, 0, 255)" style="width: 20px; height: 20px;background-color: rgb(0, 0, 255);"></td><td title="Index: [57, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 7]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 6]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 5]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 4]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 3]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 2]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 1]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [1, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [2, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [3, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [4, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [5, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [6, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [7, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [8, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [9, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [10, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [11, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [12, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [13, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [14, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [15, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [16, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [17, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [18, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [19, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [20, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [21, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [22, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [23, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [24, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [25, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [26, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [27, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [28, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [29, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [30, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [31, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [32, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [33, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [34, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [35, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [36, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [37, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [38, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [39, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [40, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [41, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [42, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [43, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [44, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [45, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [46, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [47, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [48, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [49, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [50, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [51, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [52, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [53, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [54, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [55, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [56, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [57, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [58, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td><td title="Index: [59, 0]&#10;Color: (255, 0, 0)" style="width: 20px; height: 20px;background-color: rgb(255, 0, 0);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>This may be what we asked for, but both the image and the code are hideous:</p>
<ol style="list-style-type: decimal">
<li>It's too large for us to view the whole thing at once on a small laptop screen.</li>
<li>Our first heatmap had time along the X axis; this seems to have time along the Y axis.</li>
<li>Red against blue is pretty hard on the eyes.</li>
<li>The heatmap only shows two colors because none of the (integer) measurements has exactly the same value as the (fractional) mean.</li>
<li>We are calculating the mean of <code>data</code> either once or twice each time we go through the loop. That means that on a 40×60 data set, we are performing the same calculation 2400 times.</li>
</ol>
<p>Here's how we can improve it:</p>
<ol style="list-style-type: decimal">
<li>We can give <code>ImageGrid</code> an optional parameter <code>block_size</code> to set the size of each block.</li>
<li>We can transpose our data before creating the grid.</li>
<li>We can pick better colors (I'm personally fond of orchid, fuchsia, and hot pink).</li>
<li>Instead of checking if values are exactly equal to the mean, we can see if they are close to it.</li>
<li>We can calculate the mean once, before we start our loops, and use that value over and over.</li>
</ol>
<p>Our modified code looks like this:</p>
</div>


<div class="in">
<pre>flipped = data.transpose()
width, height = flipped.shape
heatmap = ImageGrid(width, height, block_size=5)
center = flipped.mean()
for x in range(width):
    for y in range(height):
        if flipped[x, y] &lt; (0.8 * center):
            heatmap[x, y] = colors[&#39;Orchid&#39;]
        elif flipped[x, y] &gt; (1.2 * center):
            heatmap[x, y] = colors[&#39;HotPink&#39;]
        else:
            heatmap[x, y] = colors[&#39;Fuchsia&#39;]
heatmap.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocksa46f17da-750a-4616-8173-7dfb16227fb8 td {border: 1px solid white;}</style><table id="blocksa46f17da-750a-4616-8173-7dfb16227fb8" class="blockgrid"><tbody><tr><td title="Index: [0, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [23, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [23, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>That's a bit better—but now the contrast between the colors isn't great enough. And there still aren't very many fuchsia cells: we may want to widen the band around the mean that gets that color.</p>
<p>We could rewrite our loop a third time, but the right thing to do is to put our code in a function so that we can experiment with bands and colors more easily.</p>
</div>


<div class="in">
<pre>def make_heatmap(values, low_color, mid_color, high_color, low_band, high_band, block_size):
    &#39;&#39;&#39;Make a 3-colored heatmap from a 2D array of data.&#39;&#39;&#39;
    width, height = values.shape
    result = ImageGrid(width, height, block_size=block_size)
    center = values.mean()
    for x in range(width):
        for y in range(height):
            if values[x, y] &lt; low_band * center:
                result[x, y] = low_color
            elif values[x, y] &gt; high_band * center:
                result[x, y] = high_color
            else:
                result[x, y] = mid_color
    return result</pre>
</div>


<div class="">
<p>To test this function, we'll run it with the settings we just used:</p>
</div>


<div class="in">
<pre>h = make_heatmap(flipped, colors[&#39;Orchid&#39;], colors[&#39;Fuchsia&#39;], colors[&#39;HotPink&#39;], 0.8, 1.2, 5)
h.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocks01f46f8f-ce3d-4e60-810e-14913fdd0249 td {border: 1px solid white;}</style><table id="blocks01f46f8f-ce3d-4e60-810e-14913fdd0249" class="blockgrid"><tbody><tr><td title="Index: [0, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 59]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 59]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 59]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 58]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 58]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 58]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 57]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 57]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 57]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 56]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 56]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 56]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 55]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 55]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 55]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 54]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 54]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 54]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 53]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 53]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 53]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 52]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 52]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 52]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 51]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 51]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 51]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 50]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 50]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 50]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 49]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 49]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 49]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 48]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 48]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 48]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 47]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 47]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 47]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 46]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 46]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 46]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 45]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 45]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 45]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 44]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 44]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 44]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 43]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 43]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 43]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 42]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 42]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 42]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [23, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 41]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 41]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 41]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 40]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 40]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 40]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 39]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 39]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 39]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 38]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 38]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 38]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 37]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 37]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 37]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 36]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 36]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 36]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 35]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 35]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 35]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 34]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 34]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 34]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 33]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 33]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 33]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 32]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 32]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 32]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 31]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 31]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 31]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 30]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 30]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 30]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 29]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 29]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 29]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 28]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 28]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 28]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 27]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 27]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 27]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 26]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 26]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 26]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 25]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 25]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 25]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 24]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 24]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 24]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 23]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 23]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 23]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [14, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 22]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [33, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 22]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 22]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 21]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 21]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 21]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 20]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 20]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 20]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 19]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 19]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 19]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 18]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 18]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 18]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 17]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 17]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 17]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 16]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 16]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 16]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 15]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 15]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 15]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 14]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 14]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 14]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [24, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 13]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 13]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 13]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [25, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 12]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [31, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 12]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 12]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 11]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 11]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 11]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 10]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 10]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 10]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [16, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 9]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 9]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 9]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [6, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 8]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 8]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 8]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [23, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [28, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 7]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 7]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 7]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 6]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [32, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 6]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 6]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [17, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [22, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [26, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 5]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 5]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 5]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [19, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [29, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [30, 4]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 4]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 4]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [15, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [17, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [23, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [27, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [28, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 3]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 3]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 3]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [7, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [9, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [10, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [11, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [12, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [13, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [16, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [26, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [29, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 2]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [31, 2]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 2]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [8, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [9, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [10, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [11, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [12, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [13, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [14, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [15, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [18, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [20, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [21, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [22, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [24, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [25, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [27, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 1]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [30, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [32, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [33, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [34, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [35, 1]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [36, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 1]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [1, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [2, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [3, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [4, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [5, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [6, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [7, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [8, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [9, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [10, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [11, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [12, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [13, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [14, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [15, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [16, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [17, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [18, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [19, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [20, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [21, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [22, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [23, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [24, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [25, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [26, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [27, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [28, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [29, 0]&#10;Color: (255, 105, 180)" style="width: 5px; height: 5px;background-color: rgb(255, 105, 180);"></td><td title="Index: [30, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [31, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [32, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [33, 0]&#10;Color: (255, 0, 255)" style="width: 5px; height: 5px;background-color: rgb(255, 0, 255);"></td><td title="Index: [34, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [35, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [36, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [37, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [38, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td><td title="Index: [39, 0]&#10;Color: (218, 112, 214)" style="width: 5px; height: 5px;background-color: rgb(218, 112, 214);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>That seems right, so let's widen the band and use more dramatic colors:</p>
</div>


<div class="in">
<pre>h = make_heatmap(flipped, colors[&#39;Gray&#39;], colors[&#39;YellowGreen&#39;], colors[&#39;SpringGreen&#39;], 0.5, 1.5, 5)
h.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocks934bdfbe-fa39-46bc-951f-e504b83c5ed2 td {border: 1px solid white;}</style><table id="blocks934bdfbe-fa39-46bc-951f-e504b83c5ed2" class="blockgrid"><tbody><tr><td title="Index: [0, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [27, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [16, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [27, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [28, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [16, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [28, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [16, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [27, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [28, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>We'll probably want to experiment a bit more before publishing, but writing a function has made experimenting easy. We can make it even easier by re-defining our function one more time to give the parameters default values. While we're at it, let's put the low and high bands at the front, since they're more likely to change than our color choices:</p>
</div>


<div class="in">
<pre>def make_heatmap(values,
                 low_band=0.5, high_band=1.5,
                 low_color=colors[&#39;Gray&#39;], mid_color=colors[&#39;YellowGreen&#39;], high_color=colors[&#39;SpringGreen&#39;],
                 block_size=5):
    &#39;&#39;&#39;Make a 3-colored heatmap from a 2D array of data.
    Default color scheme is gray to green.&#39;&#39;&#39;
    width, height = values.shape
    result = ImageGrid(width, height, block_size=block_size)
    center = values.mean()
    for x in range(width):
        for y in range(height):
            if values[x, y] &lt; low_band * center:
                result[x, y] = low_color
            elif values[x, y] &gt; high_band * center:
                result[x, y] = high_color
            else:
                result[x, y] = mid_color
    return result</pre>
</div>


<div class="">
<p>Once default values are added, the function's first line is too long to fit comfortably on our screen. Rather than breaking it wherever it hits the right edge of the screen, we have divided the parameters into logical groups to make it more readable.</p>
<p>Again, our first test is to re-run it with the same values as before (which we give it in a different order, since we've changed the order of parameters):</p>
</div>


<div class="in">
<pre>h = make_heatmap(flipped, 0.5, 1.5, colors[&#39;Gray&#39;], colors[&#39;YellowGreen&#39;], colors[&#39;SpringGreen&#39;], 5)
h.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocks68bc8298-2807-40bb-8077-cb6a6c133f91 td {border: 1px solid white;}</style><table id="blocks68bc8298-2807-40bb-8077-cb6a6c133f91" class="blockgrid"><tbody><tr><td title="Index: [0, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [27, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [16, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [14, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [27, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [28, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [29, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [16, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [13, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [28, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [16, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [27, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [26, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [28, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [15, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>We can now leave out everything except the data being visualized, or provide the data and the bands and re-use the default colors and block size:</p>
</div>


<div class="in">
<pre>h = make_heatmap(flipped, 0.4, 1.6)
h.show()</pre>
</div>

<div class="out">
<pre><style type="text/css">table.blockgrid {border: none;} .blockgrid tr {border: none;} .blockgrid td {padding: 0px;} #blocks3a6cb5f4-cba3-448a-b130-320fed0e64e4 td {border: 1px solid white;}</style><table id="blocks3a6cb5f4-cba3-448a-b130-320fed0e64e4" class="blockgrid"><tbody><tr><td title="Index: [0, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 59]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 59]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 59]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 58]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 58]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 58]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 57]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 57]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 57]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 56]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 56]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 56]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 55]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 55]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 55]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 54]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 54]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 54]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 53]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 53]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 53]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 52]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 52]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 52]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 51]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 51]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 51]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 50]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 50]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 50]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 49]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 49]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 49]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 48]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 48]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 48]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 47]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 47]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 47]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 46]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 46]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 46]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 45]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 45]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 45]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 44]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 44]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 44]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 43]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 43]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 43]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 42]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 42]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 42]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 41]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 41]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 41]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 40]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 40]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 40]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 39]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 39]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 39]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 38]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 38]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 38]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 37]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 37]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 37]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 36]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 36]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 36]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 35]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 35]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 35]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 34]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 34]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 34]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 33]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 33]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 33]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 32]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 32]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 32]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 31]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 31]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 31]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 30]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 30]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 30]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 29]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 29]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 29]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 28]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 28]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 28]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 27]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 27]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 27]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 26]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 26]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 26]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 25]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 25]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 25]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 24]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 24]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 24]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 23]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 23]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 23]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 22]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 22]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 22]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 21]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 21]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 21]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 20]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 20]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 20]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 19]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 19]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 19]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 18]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 18]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [33, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 18]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 17]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 17]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 17]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [12, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 16]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [36, 16]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 16]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 15]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 15]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 15]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [10, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 14]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [32, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 14]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 14]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 13]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 13]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 13]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 12]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 12]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 12]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 11]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 11]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 11]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 10]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 10]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 10]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 9]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [31, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 9]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 9]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [11, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 8]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 8]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 8]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [15, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 7]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [28, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 7]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 7]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 6]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 6]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 6]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [6, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 5]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [37, 5]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 5]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 4]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 4]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 4]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [7, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [14, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [17, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [23, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 3]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [30, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 3]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 3]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [5, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [16, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [26, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [30, 2]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [31, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [34, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [35, 2]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 2]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [4, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [8, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [9, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [11, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [12, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [13, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [18, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [19, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [20, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [21, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [22, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [24, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [25, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [27, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 1]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [29, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 1]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [38, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 1]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr><tr><td title="Index: [0, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [1, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [2, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [3, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [4, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [5, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [6, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [7, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [8, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [9, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [10, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [11, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [12, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [13, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [14, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [15, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [16, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [17, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [18, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [19, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [20, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [21, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [22, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [23, 0]&#10;Color: (0, 255, 127)" style="width: 5px; height: 5px;background-color: rgb(0, 255, 127);"></td><td title="Index: [24, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [25, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [26, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [27, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [28, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [29, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [30, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [31, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [32, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [33, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [34, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [35, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [36, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [37, 0]&#10;Color: (154, 205, 50)" style="width: 5px; height: 5px;background-color: rgb(154, 205, 50);"></td><td title="Index: [38, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td><td title="Index: [39, 0]&#10;Color: (128, 128, 128)" style="width: 5px; height: 5px;background-color: rgb(128, 128, 128);"></td></tr></tbody></table></pre>
</div>


<div class="">
<p>We can now explore our data with just a few keystrokes,
which means we can concentrate on our science
and not on our programming.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol>
<li><p>Why did we transpose our data outside our heat map function?
Why not have the function perform the transpose?</p>
</li>
<li><p>Why does the heat map function return the grid rather than displaying it immediately?
Do you think this is a good or bad design choice?</p>
</li>
<li><p>Explain what the overall effect of this code is:</p>
<pre><code>temp = left
left = right
right = temp
</code></pre><p>Compare it to:</p>
<pre><code>left, right = right, left
</code></pre><p>Do they always do the same thing?
Which do you find easier to read?</p>
</li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Use the <code>ImageGrid</code> class from the <code>ipythonblocks</code> library to create simple &quot;images&quot; made of colored blocks.</li>
<li>Specify colors use (red, green, blue) triples, each component of which is an integer in the range 0..255.</li>
<li>Use <code>if condition</code> to start a conditional statement, <code>elif condition</code> to provide additional tests, and <code>else</code> to provide a default.</li>
<li>The bodies of the branches of conditional statements must be indented.</li>
<li>Use <code>==</code> to test for equality.</li>
<li><code>X and Y</code> is only true if both X and Y are true.</li>
<li><code>X or Y</code> is true if either X or Y, or both, are true.</li>
<li>Zero, the empty string, and the empty list are considered false; all other numbers, strings, and lists are considered true.</li>
<li>Nest loops to operate on multi-dimensional data.</li>
<li>Put code whose parameters change frequently in a function, then call it with different parameter values to customize its behavior.</li>
</ul>
</div>


<div class="">
<h4 id="next-steps">Next Steps</h4>
<p>Our final heatmap function is 17 lines long, which means that if there's a 95% chance of each line being correct, the odds of the whole function being right are only 41%. Before we go any further, we need to learn how to test whether our code is doing what we want it to do, and that will be the subject of the next lesson.</p>
</div>

---
layout: lesson
root: ../..
---

## Defensive Programming


<div class="">
<p>Our previous lessons have introduced the basic tools of programming: variables and lists, file I/O, loops, conditionals, and functions. What they <em>haven't</em> done is show us how to tell whether a program is getting the right answer, and how to tell if it's <em>still</em> getting the right answer as we make changes to it.</p>
<p>To achieve that, we need to:</p>
<ul>
<li>write programs that check their own operation,</li>
<li>write and run tests for widely-used functions, and</li>
<li>make sure we know what &quot;correct&quot; actually means.</li>
</ul>
<p>The good news is, doing these things will speed up our programming, not slow it down. As in real carpentry—the kind done with lumber—the time saved by measuring carefully before cutting a piece of wood is much greater than the time that measuring takes.</p>
</div>


<div class="">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Explain what an assertion is.</li>
<li>Add assertions to programs that correctly check the program's state.</li>
<li>Correctly add precondition and postcondition assertions to functions.</li>
<li>Explain what test-driven development is, and use it when creating new functions.</li>
<li>Explain why variables should be initialized using actual data values rather than arbitrary constants.</li>
<li>Debug code containing an error systematically.</li>
</ul>
</div>

### Assertions


<div class="">
<p>The first step toward getting the right answers from our programs is to assume that mistakes <em>will</em> happen and to guard against them. This is called <a href="../../gloss.html#defensive-programming">defensive programming</a>, and the most common way to do it is to add <a href="../../gloss.html#assertion">assertions</a> to our code so that it checks itself as it runs. An assertion is simply a statement that something must be true at a certain point in a program. When Python sees one, it checks that the assertion's condition. If it's true, Python does nothing, but if it's false, Python halts the program immediately and prints the error message provided. For example, this piece of code halts as soon as the loop encounters a value that isn't positive:</p>
</div>


<div class="in">
<pre>numbers = [1.5, 2.3, 0.7, -0.001, 4.4]
total = 0.0
for n in numbers:
    assert n &gt;= 0.0, &#39;Data should only contain positive values&#39;
    total += n
print &#39;total is:&#39;, total</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-3-33d87ea29ae4&gt; in &lt;module&gt;()
      2 total = 0.0
      3 for n in numbers:
----&gt; 4     assert n &gt;= 0.0, &#39;Data should only contain positive values&#39;
      5     total += n
      6 print &#39;total is:&#39;, total

AssertionError: Data should only contain positive values</pre>
</div>


<div class="">
<p>Programs like the Firefox browser are full of assertions: 10-20% of the code they contain are there to check that the other 80-90% are working correctly. Broadly speaking, assertions fall into three categories:</p>
<ul>
<li>A <a href="../../gloss.html#precondition">precondition</a> is something that must be true at the start of a function in order for it to work correctly.</li>
<li>A <a href="../../gloss.html#postcondition">postcondition</a> is something that the function guarantees is true when it finishes.</li>
<li>An <a href="../../gloss.html#invariant">invariant</a> is something that is always true at a particular point inside a piece of code.</li>
</ul>
<p>For example, suppose we are representing rectangles using a tuple of four coordinates <code>(x0, y0, x1, y1)</code>. In order to do some calculations, we need to normalize the rectangle so that it is at the origin and 1.0 units long on its longest axis. This function does that, but checks that its input is correctly formatted and that its result makes sense:</p>
</div>


<div class="in">
<pre>def normalize_rectangle(rect):
    &#39;&#39;&#39;Normalizes a rectangle so that it is at the origin and 1.0 units long on its longest axis.&#39;&#39;&#39;
    assert len(rect) == 4, &#39;Rectangles must contain 4 coordinates&#39;
    x0, y0, x1, y1 = rect
    assert x0 &lt; x1, &#39;Invalid X coordinates&#39;
    assert y0 &lt; y1, &#39;Invalid Y coordinates&#39;

    dx = x1 - x0
    dy = y1 - y0
    if dx &gt; dy:
        scaled = float(dx) / dy
        upper_x, upper_y = 1.0, scaled
    else:
        scaled = float(dx) / dy
        upper_x, upper_y = scaled, 1.0

    assert 0 &lt; upper_x &lt;= 1.0, &#39;Calculated upper X coordinate invalid&#39;
    assert 0 &lt; upper_y &lt;= 1.0, &#39;Calculated upper Y coordinate invalid&#39;

    return (0, 0, upper_x, upper_y)</pre>
</div>


<div class="">
<p>The preconditions on lines 2, 4, and 5 catch invalid inputs:</p>
</div>


<div class="in">
<pre>print normalize_rectangle( (0.0, 1.0, 2.0) ) # missing the fourth coordinate</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-5-3a97b1dcab70&gt; in &lt;module&gt;()
----&gt; 1 print normalize_rectangle( (0.0, 1.0, 2.0) ) # missing the fourth coordinate

&lt;ipython-input-4-9f8adbfdcfc9&gt; in normalize_rectangle(rect)
      1 def normalize_rectangle(rect):
      2     &#39;&#39;&#39;Normalizes a rectangle so that it is at the origin and 1.0 units long on its longest axis.&#39;&#39;&#39;
----&gt; 3     assert len(rect) == 4, &#39;Rectangles must contain 4 coordinates&#39;
      4     x0, y0, x1, y1 = rect
      5     assert x0 &lt; x1, &#39;Invalid X coordinates&#39;

AssertionError: Rectangles must contain 4 coordinates</pre>
</div>


<div class="in">
<pre>print normalize_rectangle( (4.0, 2.0, 1.0, 5.0) ) # X axis inverted</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-6-f05ae7878a45&gt; in &lt;module&gt;()
----&gt; 1 print normalize_rectangle( (4.0, 2.0, 1.0, 5.0) ) # X axis inverted

&lt;ipython-input-4-9f8adbfdcfc9&gt; in normalize_rectangle(rect)
      3     assert len(rect) == 4, &#39;Rectangles must contain 4 coordinates&#39;
      4     x0, y0, x1, y1 = rect
----&gt; 5     assert x0 &lt; x1, &#39;Invalid X coordinates&#39;
      6     assert y0 &lt; y1, &#39;Invalid Y coordinates&#39;
      7 

AssertionError: Invalid X coordinates</pre>
</div>


<div class="">
<p>The post-conditions help us catch bugs by telling us when our calculations cannot have been correct. For example, if we normalize a rectangle that is taller than it is wide everything seems OK:</p>
</div>


<div class="in">
<pre>print normalize_rectangle( (0.0, 0.0, 1.0, 5.0) )</pre>
</div>

<div class="out">
<pre>(0, 0, 0.2, 1.0)
</pre>
</div>


<div class="">
<p>but if we normalize one that's wider than it is tall, the assertion is triggered:</p>
</div>


<div class="in">
<pre>print normalize_rectangle( (0.0, 0.0, 5.0, 1.0) )</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-8-5f0ef7954aeb&gt; in &lt;module&gt;()
----&gt; 1 print normalize_rectangle( (0.0, 0.0, 5.0, 1.0) )

&lt;ipython-input-4-9f8adbfdcfc9&gt; in normalize_rectangle(rect)
     16 
     17     assert 0 &lt; upper_x &lt;= 1.0, &#39;Calculated upper X coordinate invalid&#39;
---&gt; 18     assert 0 &lt; upper_y &lt;= 1.0, &#39;Calculated upper Y coordinate invalid&#39;
     19 
     20     return (0, 0, upper_x, upper_y)

AssertionError: Calculated upper Y coordinate invalid</pre>
</div>


<div class="">
<p>Re-reading our function, we realize that line 10 should divide <code>dy</code> by <code>dx</code> rather than <code>dx</code> by <code>dy</code>. (You can display line numbers by typing Ctrl-M, then L.) If we had left out the assertion at the end of the function, we would have created and returned something that had the right shape as a valid answer, but wasn't. Detecting and debugging that would almost certainly have taken more time in the long run than writing the assertion.</p>
<p>But assertions aren't just about catching errors: they also help people understand programs. Each assertion gives the person reading the program a chance to check (consciously or otherwise) that their understanding matches what the code is doing.</p>
<p>Most good programmers follow two rules when adding assertions to their code. The first is, &quot;<a href="../../rules.html#fail-early-fail-often">fail early, fail often</a>&quot;. The greater the distance between when and where an error occurs and when it's noticed, the harder the error will be to debug, so good code catches mistakes as early as possible.</p>
<p>The second rule is, &quot;<a href="../../rules.html#turn-bugs-into-assertions-or-tests">turn bugs into assertions or tests</a>&quot;. If you made a mistake in a piece of code, the odds are good that you have made other mistakes nearby, or will make the same mistake (or a related one) the next time you change it. Writing assertions to check that you haven't <a href="../../gloss.html#regression">regressed</a> (i.e., haven't re-introduced an old problem) can save a lot of time in the long run, and helps to warn people who are reading the code (including your future self) that this bit is tricky.</p>
</div>


<div class="">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Suppose you are writing a function called <code>average</code> that calculates the average of the numbers in a list. What pre-conditions and post-conditions would you write for it? Compare your answer to your neighbor's: can you think of a function that will past your tests but not hers or vice versa?</p></li>
<li><p>Explain in words what the assertions in this code check, and for each one, give an example of input that will make that assertion fail.</p>
<pre><code>def running(values):
    assert len(values) &gt; 0
    result = [values[0]]
    for v in values[1:]:
        assert result[-1] &gt;= 0
        result.append(result[-1] + v)
    assert result[-1] &gt;= result[0]
    return result</code></pre></li>
</ol>
</div>

### Test-Driven Development


<div class="">
<p>An assertion checks that something is true at a particular point in the program. The next step is to check the overall behavior of a piece of code, i.e., to make sure that it produces the right output when it's given a particular input. For example, suppose we need to find where two or more time series overlap. The range of each time series is represented as a pair of numbers, which are the time the interval started and ended. The output is the largest range that they all include:</p>
</div>


<div class="">
<p><img src="img/python-overlapping-ranges.svg" alt="Overlapping Ranges" /></p>
</div>


<div class="">
<p>Most novice programmers would solve this problem like this:</p>
<ol style="list-style-type: decimal">
<li>Write a function <code>range_overlap</code>.</li>
<li>Call it interactively on two or three different inputs.</li>
<li>If it produces the wrong answer, fix the function and re-run that test.</li>
</ol>
<p>This clearly works—after all, thousands of scientists are doing it right now—but there's a better way:</p>
<ol style="list-style-type: decimal">
<li>Write a short function for each test.</li>
<li>Write a <code>range_overlap</code> function that should pass those tests.</li>
<li>If <code>range_overlap</code> produces any wrong answers, fix it and re-run the test functions.</li>
</ol>
<p>Writing the tests <em>before</em> writing the function they exercise is called <a href="../../gloss.html#test-driven-development">test-driven development</a> (TDD). Its advocates believe it produces better code faster because:</p>
<ol style="list-style-type: decimal">
<li>If people write tests after writing the thing to be tested, they are subject to confirmation bias, i.e., they subconsciously write tests to show that their code is correct, rather than to find errors.</li>
<li>Writing tests helps programmers figure out what the function is actually supposed to do.</li>
</ol>
<p>Here are three test functions for <code>range_overlap</code>:</p>
</div>


<div class="in">
<pre>assert range_overlap([ (0.0, 1.0) ]) == (0.0, 1.0)
assert range_overlap([ (0.0, 1.0), (0.0, 2.0) ]) == (0.0, 1.0)
assert range_overlap([ (0.0, 1.0), (0.0, 2.0), (-1.0, 1.0) ]) == (0.0, 1.0)</pre>
</div>


<div class="">
<p>The error is actually reassuring: we haven't written <code>range_overlap</code> yet, so if the tests passed, it would be a sign that someone else had and that we were accidentally using their function.</p>
<p>And as a bonus of writing these tests, we've implicitly defined what our input and output look like: we expect a list of pairs as input, and produce a single pair as output.</p>
<p>Something important is missing, though. We don't have any tests for the case where the ranges don't overlap at all:</p>
<pre><code>assert range_overlap([ (0.0, 1.0), (5.0, 6.0) ]) == ???</code></pre>
<p>What should <code>range_overlap</code> do in this case: fail with an error message, produce a special value like <code>(0.0, 0.0)</code> to signal that there's no overlap, or something else? Any actual implementation of the function will do one of these things; writing the tests first helps us figure out which is best <em>before</em> we're emotionally invested in whatever we happened to write before we realized there was an issue.</p>
<p>And what about this case?</p>
<pre><code>assert range_overlap([ (0.0, 1.0), (1.0, 2.0) ]) == ???</code></pre>
<p>Do two segments that touch at their endpoints overlap or not? Mathematicians usually say &quot;yes&quot;, but engineers usually say &quot;no&quot;. The best answer is &quot;whatever is most useful in the rest of our program&quot;, but again, any actual implementation of <code>range_overlap</code> is going to do <em>something</em>, and whatever it is ought to be consistent with what it does when there's no overlap at all.</p>
<p>Since we're planning to use the range this function returns as the X axis in a time series chart, we decide that:</p>
<ol style="list-style-type: decimal">
<li>every overlap has to have non-zero width, and</li>
<li>we will return the special value <code>None</code> when there's no overlap.</li>
</ol>
<p><code>None</code> is built into Python, and means &quot;nothing here&quot;. (Other languages often call the equivalent value <code>null</code> or <code>nil</code>). With that decision made, we can finish writing our last two tests:</p>
</div>


<div class="in">
<pre>assert range_overlap([ (0.0, 1.0), (5.0, 6.0) ]) == None
assert range_overlap([ (0.0, 1.0), (1.0, 2.0) ]) == None</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-10-d877ef460ba2&gt; in &lt;module&gt;()
----&gt; 1 assert range_overlap([ (0.0, 1.0), (5.0, 6.0) ]) == None
      2 assert range_overlap([ (0.0, 1.0), (1.0, 2.0) ]) == None

AssertionError: </pre>
</div>


<div class="">
<p>Again, we get an error because we haven't written our function, but we're now ready to do so:</p>
</div>


<div class="in">
<pre>def range_overlap(ranges):
    &#39;&#39;&#39;Return common overlap among a set of [low, high] ranges.&#39;&#39;&#39;
    lowest = 0.0
    highest = 1.0
    for (low, high) in ranges:
        lowest = max(lowest, low)
        highest = min(highest, high)
    return (lowest, highest)</pre>
</div>


<div class="">
<p>(Take a moment to think about why we use <code>max</code> to raise <code>lowest</code> and <code>min</code> to lower <code>highest</code>.) We'd now like to re-run our tests, but they're scattered across three different cells. To make running them easier, let's put them all in a function:</p>
</div>


<div class="in">
<pre>def test_range_overlap():
    assert range_overlap([ (0.0, 1.0) ]) == (0.0, 1.0)
    assert range_overlap([ (0.0, 1.0), (0.0, 2.0) ]) == (0.0, 1.0)
    assert range_overlap([ (0.0, 1.0), (0.0, 2.0), (-1.0, 1.0) ]) == (0.0, 1.0)
    assert range_overlap([ (0.0, 1.0), (5.0, 6.0) ]) == None
    assert range_overlap([ (0.0, 1.0), (1.0, 2.0) ]) == None</pre>
</div>


<div class="">
<p>We can now test <code>range_overlap</code> with a single function call:</p>
</div>


<div class="in">
<pre>test_range_overlap()</pre>
</div>

<div class="out">
<pre>---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
&lt;ipython-input-13-cf9215c96457&gt; in &lt;module&gt;()
----&gt; 1 test_range_overlap()

&lt;ipython-input-12-34c3659163fc&gt; in test_range_overlap()
      3     assert range_overlap([ (0.0, 1.0), (0.0, 2.0) ]) == (0.0, 1.0)
      4     assert range_overlap([ (0.0, 1.0), (0.0, 2.0), (-1.0, 1.0) ]) == (0.0, 1.0)
----&gt; 5     assert range_overlap([ (0.0, 1.0), (5.0, 6.0) ]) == None
      6     assert range_overlap([ (0.0, 1.0), (1.0, 2.0) ]) == None

AssertionError: </pre>
</div>


<div class="">
<p>The first of the tests that was supposed to produce <code>None</code> fails, so we know there's something wrong with our function. What we <em>don't</em> know, though, is whether the last of our five tests passed or failed, because Python halted the program as soon as it spotted the first error. Still, some information is better than none, and if we trace the behavior of the function with that input, we realize that we're initializing <code>lowest</code> and <code>highest</code> to 0.0 and 1.0 respectively, regardless of the input values. This violates another important rule of programming: &quot;<a href="../../rules.html#always-initialize-from-data">always initialize from data</a>&quot;. We'll leave it as an exercise to fix <code>range_overlap</code>.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Fix <code>range_overlap</code>. Re-run <code>test_range_overlap</code> after each change you make.</li>
</ol>
</div>

### Debugging


<div class="">
<p>Once testing has uncovered problems, the next step is to fix them. Many novices do this by making more-or-less random changes to their code until it seems to produce the right answer, but that's very inefficient (and the result is usually only correct for the one case they're testing). The more experienced a programmer is, the more systematically they debug, and most follow some variation on the rules explained below.</p>
<h4 id="know-what-its-supposed-to-do">Know What It's Supposed to Do</h4>
<p>The first step in debugging something is to <a href="../../rules.html#know-what-its-supposed-to-do">know what it's supposed to do</a>. &quot;My program doesn't work&quot; isn't good enough: in order to diagnose and fix problems, we need to be able to tell correct output from incorrect. If we can write a test case for the failing case—i.e., if we can assert that with <em>these</em> inputs, the function should produce <em>that</em> result— then we're ready to start debugging. If we can't, then we need to figure out how we're going to know when we've fixed things.</p>
<p>But writing test cases for scientific software is frequently harder than writing test cases for commercial applications, because if we knew what the output of the scientific code was supposed to be, we wouldn't be running the software: we'd be writing up our results and moving on to the next program. In practice, scientists tend to do the following:</p>
<ol style="list-style-type: decimal">
<li><p><em>Test with simplified data.</em> Before doing statistics on a real data set, we should try calculating statistics for a single record, for two identical records, for two records whose values are one step apart, or for some other case where we can calculate the right answer by hand.</p></li>
<li><p><em>Test a simplified case.</em> If our program is supposed to simulate magnetic eddies in rapidly-rotating blobs of supercooled helium, our first test should be a blob of helium that isn't rotating, and isn't being subjected to any external electromagnetic fields. Similarly, if we're looking at the effects of climate change on speciation, our first test should hold temperature, precipitation, and other factors constant.</p></li>
<li><p><em>Compare to an oracle.</em> A <a href="../../gloss.html#test-oracle">test oracle</a> is something—experimental data, an older program whose results are trusted, or even a human expert—against which we can compare the results of our new program. If we have a test oracle, we should store its output for particular cases so that we can compare it with our new results as often as we like without re-running that program.</p></li>
<li><p><em>Check conservation laws.</em> Mass, energy, and other quantitites are conserved in physical systems, so they should be in programs as well. Similarly, if we are analyzing patient data, the number of records should either stay the same or decrease as we move from one analysis to the next (since we might throw away outliers or records with missing values). If &quot;new&quot; patients start appearing out of nowhere as we move through our pipeline, it's probably a sign that something is wrong.</p></li>
<li><p><em>Visualize.</em> Data analysts frequently use simple visualizations to check both the science they're doing and the correctness of their code (just as we did in the <a href="01-numpy.html">opening lesson</a> of this tutorial). This should only be used for debugging as a last resort, though, since it's very hard to compare two visualizations automatically.</p></li>
</ol>
<h4 id="make-it-fail-every-time">Make It Fail Every Time</h4>
<p>We can only debug something when it fails, so the second step is always to find a test case that <a href="../../rules.html#make-it-fail-every-time">makes it fail every time</a>. The &quot;every time&quot; part is important because few things are more frustrating than debugging an intermittent problem: if we have to call a function a dozen times to get a single failure, the odds are good that we'll scroll past the failure when it actually occurs.</p>
<p>As part of this, it's always important to check that our code is &quot;plugged in&quot;, i.e., that we're actually exercising the problem that we think we are. Every programmer has spent hours chasing a bug, only to realize that they were actually calling their code on the wrong data set or with the wrong configuration parameters, or are using the wrong version of the software entirely. Mistakes like these are particularly likely to happen when we're tired, frustrated, and up against a deadline, which is one of the reasons late-night (or overnight) coding sessions are almost never worthwhile.</p>
<h4 id="make-it-fail-fast">Make It Fail Fast</h4>
<p>If it takes 20 minutes for the bug to surface, we can only do three experiments an hour. That doesn't must mean we'll get less data in more time: we're also more likely to be distracted by other things as we wait for our program to fail, which means the time we <em>are</em> spending on the problem is less focused. It's therefore critical to <a href="../../rules.html#make-it-fail-fast">make it fail fast</a>.</p>
<p>As well as making the program fail fast in time, we want to make it fail fast in space, i.e., we want to localize the failure to the smallest possible region of code:</p>
<ol style="list-style-type: decimal">
<li><p>The smaller the gap between cause and effect, the easier the connection is to find. Many programmers therefore use a divide and conquer strategy to find bugs, i.e., if the output of a function is wrong, they check whether things are OK in the middle, then concentrate on either the first or second half, and so on.</p></li>
<li><p>N things can interact in N<sup>2/2</sup> different ways, so every line of code that <em>isn't</em> run as part of a test means more than one thing we don't need to worry about.</p></li>
</ol>
<h4 id="change-one-thing-at-a-time-for-a-reason">Change One Thing at a Time, For a Reason</h4>
<p>Replacing random chunks of code is unlikely to do much good. (After all, if you got it wrong the first time, you'll probably get it wrong the second and third as well.) Good programmers therefore <a href="../../rules.html#change-one-thing-at-a-time">change one thing at a time, for a reason</a> They are either trying to gather more information (&quot;is the bug still there if we change the order of the loops?&quot;) or test a fix (&quot;can we make the bug go away by sorting our data before processing it?&quot;).</p>
<p>Every time we make a change, however small, we should re-run our tests immediately, because the more things we change at once, the harder it is to know what's responsible for what (those N<sup>2</sup> interactions again). And we should re-run <em>all</em> of our tests: more than half of fixes made to code introduce (or re-introduce) bugs, so re-running all of our tests tells us whether we have <a href="../../gloss.html#regression">regressed</a>.</p>
<h4 id="keep-track-of-what-youve-done">Keep Track of What You've Done</h4>
<p>Good scientists keep track of what they've done so that they can reproduce their work, and so that they don't waste time repeating the same experiments or running ones whose results won't be interesting. Similarly, debugging works best when we <a href="../../rules.html#keep-track-of-what-youve-done">keep track of what we've done</a> and how well it worked. If we find ourselves asking, &quot;Did left followed by right with an odd number of lines cause the crash? Or was it right followed by left? Or was I using an even number of lines?&quot; then it's time to step away from the computer, take a deep breath, and start working more systematically.</p>
<p>Records are particularly useful when the time comes to ask for help. People are more likely to listen to us when we can explain clearly what we did, and we're better able to give them the information they need to be useful.</p>
<blockquote>
<h4>Version Control Revisited</h4>
<p>Version control is often used to reset software to a known state during debugging, and to explore recent changes to code that might be responsible for bugs. In particular, most version control systems have a <code>blame</code> command that will show who last changed particular lines of code...</p>
</blockquote>
<h4 id="be-humble">Be Humble</h4>
<p>And speaking of help: if we can't find a bug in 10 minutes, we should <a href="../../rules.html#be-humble">be humble</a> and ask for help. Just explaining the problem aloud is often useful, since hearing what we're thinking helps us spot inconsistencies and hidden assumptions.</p>
<p>Asking for help also helps alleviate confirmation bias. If we have just spent an hour writing a complicated program, we want it to work, so we're likely to keep telling ourselves why it should, rather than searching for the reason it doesn't. People who aren't emotionally invested in the code can be more objective, which is why they're often able to spot the simple mistakes we have overlooked.</p>
<p>Part of being humble is learning from our mistakes. Programmers tend to get the same things wrong over and over: either they don't understand the language and libraries they're working with, or their model of how things work is wrong. In either case, taking note of why the error occurred and checking for it next time quickly turns into not making the mistake at all.</p>
<p>And that is what makes us most productive in the long run. As the saying goes, &quot;<a href="../../rules.html#week-hard-work-hour-thought">A week of hard work can sometimes save you an hour of thought</a>.&quot; If we train ourselves to avoid making some kinds of mistakes, to break our code into modular, testable chunks, and to turn every assumption (or mistake) into an assertion, it will actually take us <em>less</em> time to produce working programs, not more.</p>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Program defensively, i.e., assume that errors are going to arise, and write code to detect them when they do.</li>
<li>Put assertions in programs to check their state as they run, and to help readers understand how those programs are supposed to work.</li>
<li>Use preconditions to check that the inputs to a function are safe to use.</li>
<li>Use postconditions to check that the output from a function is safe to use.</li>
<li>Write tests before writing code in order to help determine exactly what that code is supposed to do.</li>
<li>Know what code is supposed to do <em>before</em> trying to debug it.</li>
<li>Make it fail every time.</li>
<li>Make it fail fast.</li>
<li>Change one thing at a time, and for a reason.</li>
<li>Keep track of what you've done.</li>
<li>Be humble.</li>
</ul>
</div>


<div class="">
<h4 id="next-steps">Next Steps</h4>
<p>We have now seen the basics of building and testing Python code in the IPython Notebook. The last thing we need to learn is how to build command-line programs that we can use in pipelines and shell scripts, so that we can integrate our tools with other people's work. This will be the subject of our next and final lesson.</p>
</div>

---
layout: lesson
root: ../..
---

## Command-Line Programs


<div class="">
<p>The IPython Notebook and other interactive tools are great for prototyping code and exploring data, but sooner or later we will want to use our program in a pipeline or run it in a shell script to process thousands of data files. In order to do that, we need to make our programs work like other Unix command-line tools. For example, we may want a program that reads a data set and prints the average inflammation per patient:</p>
<pre><code>$ python readings.py --mean inflammation-01.csv
5.45
5.425
6.1
...
6.4
7.05
5.9</code></pre>
<p>but we might also want to look at the minimum of the first four lines</p>
<pre><code>$ head -4 inflammation-01.csv | python readings.py --min</code></pre>
<p>or the maximum inflammations in several files one after another:</p>
<pre><code>$ python readings.py --max inflammation-*.csv</code></pre>
<p>Our overall requirements are:</p>
<ol style="list-style-type: decimal">
<li>If no filename is given on the command line, read data from <a href="../../gloss.html#standard-input">standard input</a>.</li>
<li>If one or more filenames are given, read data from them and report statistics for each file separately.</li>
<li>Use the <code>--min</code>, <code>--mean</code>, or <code>--max</code> flag to determine what statistic to print.</li>
</ol>
<p>To make this work, we need to know how to handle command-line arguments in a program, and how to get at standard input. We'll tackle these questions in turn below.</p>
</div>


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Use the values of command-line arguments in a program.</li>
<li>Handle flags and files separately in a command-line program.</li>
<li>Read data from standard input in a program so that it can be used in a pipeline.</li>
</ul>
</div>

### Command-Line Arguments


<div class="">
<p>Using the text editor of your choice, save the following in a text file:</p>
</div>


<div class="in">
<pre>!cat sys-version.py</pre>
</div>

<div class="out">
<pre>import sys
print &#39;version is&#39;, sys.version
</pre>
</div>


<div class="">
<p>The first line imports a library called <code>sys</code>, which is short for &quot;system&quot;. It defines values such as <code>sys.version</code>, which describes which version of Python we are running. We can run this script from within the IPython Notebook like this:</p>
</div>


<div class="in">
<pre>%run sys-version.py</pre>
</div>

<div class="out">
<pre>version is 2.7.5 |Anaconda 1.8.0 (x86_64)| (default, Oct 24 2013, 07:02:20) 
[GCC 4.0.1 (Apple Inc. build 5493)]
</pre>
</div>


<div class="">
<p>or like this:</p>
</div>


<div class="in">
<pre>!ipython sys-version.py</pre>
</div>

<div class="out">
<pre>version is 2.7.5 |Anaconda 1.8.0 (x86_64)| (default, Oct 24 2013, 07:02:20) 
[GCC 4.0.1 (Apple Inc. build 5493)]
</pre>
</div>


<div class="">
<p>The first method, <code>%run</code>, uses a special command in the IPython Notebook to run a program in a <code>.py</code> file. The second method is more general: the exclamation mark <code>!</code> tells the Notebook to run a shell command, and it just so happens that the command we run is <code>ipython</code> with the name of the script.</p>
</div>


<div class="">
<p>Here's another script that does something more interesting:</p>
</div>


<div class="in">
<pre>!cat argv-list.py</pre>
</div>

<div class="out">
<pre>import sys
print &#39;sys.argv is&#39;, sys.argv
</pre>
</div>


<div class="">
<p>The strange name <code>argv</code> stands for &quot;argument values&quot;. Whenever Python runs a program, it takes all of the values given on the command line and puts them in the list <code>sys.argv</code> so that the program can determine what they were. If we run this program with no arguments:</p>
</div>


<div class="in">
<pre>!ipython argv-list.py</pre>
</div>

<div class="out">
<pre>sys.argv is [&#39;/Users/gwilson/s/bc/python/novice/argv-list.py&#39;]
</pre>
</div>


<div class="">
<p>the only thing in the list is the full path to our script, which is always <code>sys.argv[0]</code>. If we run it with a few arguments, however:</p>
</div>


<div class="in">
<pre>!ipython argv-list.py first second third</pre>
</div>

<div class="out">
<pre>sys.argv is [&#39;/Users/gwilson/s/bc/python/novice/argv-list.py&#39;, &#39;first&#39;, &#39;second&#39;, &#39;third&#39;]
</pre>
</div>


<div class="">
<p>then Python adds each of those arguments to that magic list.</p>
</div>


<div class="">
<p>With this in hand, let's build a version of <code>readings.py</code> that always prints the per-patient mean of a single data file. The first step is to write a function that outlines our implementation, and a placeholder for the function that does the actual work. By convention this function is usually called <code>main</code>, though we can call it whatever we want:</p>
</div>


<div class="in">
<pre>!cat readings-01.py</pre>
</div>

<div class="out">
<pre>import sys
import numpy as np

def main():
    script = sys.argv[0]
    filename = sys.argv[1]
    data = np.loadtxt(filename, delimiter=&#39;,&#39;)
    for m in data.mean(axis=1):
        print m
</pre>
</div>


<div class="">
<p>This function gets the name of the script from <code>sys.argv[0]</code>, because that's where it's always put, and the name of the file to process from <code>sys.argv[1]</code>. Here's a simple test:</p>
</div>


<div class="in">
<pre>%run readings-01.py inflammation-01.csv</pre>
</div>


<div class="">
<p>There is no output because we have defined a function, but haven't actually called it. Let's add a call to <code>main</code>:</p>
</div>


<div class="in">
<pre>!cat readings-02.py</pre>
</div>

<div class="out">
<pre>import sys
import numpy as np

def main():
    script = sys.argv[0]
    filename = sys.argv[1]
    data = np.loadtxt(filename, delimiter=&#39;,&#39;)
    for m in data.mean(axis=1):
        print m

main()
</pre>
</div>


<div class="">
<p>and run that:</p>
</div>


<div class="in">
<pre>%run readings-02.py inflammation-01.csv</pre>
</div>

<div class="out">
<pre>5.45
5.425
6.1
5.9
5.55
6.225
5.975
6.65
6.625
6.525
6.775
5.8
6.225
5.75
5.225
6.3
6.55
5.7
5.85
6.55
5.775
5.825
6.175
6.1
5.8
6.425
6.05
6.025
6.175
6.55
6.175
6.35
6.725
6.125
7.075
5.725
5.925
6.15
6.075
5.75
5.975
5.725
6.3
5.9
6.75
5.925
7.225
6.15
5.95
6.275
5.7
6.1
6.825
5.975
6.725
5.7
6.25
6.4
7.05
5.9
</pre>
</div>


<div>
<blockquote>
<h4 id="the-right-way-to-do-it">The Right Way to Do It</h4>
<p>If our programs can take complex parameters or multiple filenames,
we shouldn&#39;t handle <code>sys.argv</code> directly.
Instead,
we should use Python&#39;s <code>argparse</code> library,
which handles common cases in a systematic way,
and also makes it easy for us to provide sensible error messages for our users.</p>
</blockquote>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol>
<li><p>Write a command-line program that does addition and subtraction:</p>
<pre><code>$ python arith.py 1 + 2
3
</code></pre><pre><code>$ python arith.py 3 - 4
-1
</code></pre><p>What goes wrong if you try to add multiplication using &#39;*&#39; to the program?</p>
</li>
<li><p>Using the <code>glob</code> module introduced <a href="earlier">03-loop.ipynb</a>,
write a simple version of <code>ls</code> that shows files in the current directory with a particular suffix:</p>
<pre><code>$ python my_ls.py py
left.py
right.py
zero.py
</code></pre></li>
</ol>
</div>

### Handling Multiple Files


<div class="">
<p>The next step is to teach our program how to handle multiple files. Since 60 lines of output per file is a lot to page through, we'll start by creating three smaller files, each of which has three days of data for two patients:</p>
</div>


<div class="in">
<pre>!ls small-*.csv</pre>
</div>

<div class="out">
<pre>small-01.csv small-02.csv small-03.csv
</pre>
</div>


<div class="in">
<pre>!cat small-01.csv</pre>
</div>

<div class="out">
<pre>0,0,1
0,1,2
</pre>
</div>


<div class="in">
<pre>%run readings-02.py small-01.csv</pre>
</div>

<div class="out">
<pre>0.333333333333
1.0
</pre>
</div>


<div class="">
<p>Using small data files as input also allows us to check our results more easily: here, for example, we can see that our program is calculating the mean correctly for each line, whereas we were really taking it on faith before. This is yet another rule of programming: &quot;<a href="../../rules.html#test-simple-first">test the simple things first</a>&quot;.</p>
<p>We want our program to process each file separately, so we need a looop that executes once for each filename. If we specify the files on the command line, the filenames will be in <code>sys.argv</code>, but we need to be careful: <code>sys.argv[0]</code> will always be the name of our script, rather than the name of a file. We also need to handle an unknown number of filenames, since our program could be run for any number of files.</p>
<p>The solution to both problems is to loop over the contents of <code>sys.argv[1:]</code>. The '1' tells Python to start the slice at location 1, so the program's name isn't included; since we've left off the upper bound, the slice runs to the end of the list, and includes all the filenames. Here's our changed program:</p>
</div>


<div class="in">
<pre>!cat readings-03.py</pre>
</div>

<div class="out">
<pre>import sys
import numpy as np

def main():
    script = sys.argv[0]
    for filename in sys.argv[1:]:
        data = np.loadtxt(filename, delimiter=&#39;,&#39;)
        for m in data.mean(axis=1):
            print m

main()
</pre>
</div>


<div class="">
<p>and here it is in action:</p>
</div>


<div class="in">
<pre>%run readings-03.py small-01.csv small-02.csv</pre>
</div>

<div class="out">
<pre>0.333333333333
1.0
13.6666666667
11.0
</pre>
</div>


<div class="">
<p>Note: at this point, we have created three versions of our script called <code>readings-01.py</code>, <code>readings-02.py</code>, and <code>readings-03.py</code>. We wouldn't do this in real life: instead, we would have one file called <code>readings.py</code> that we committed to version control every time we got an enhancement working. For teaching, though, we need all the successive versions side by side.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Write a program called <code>check.py</code> that takes the names of one or more inflammation data files as arguments and checks that all the files have the same number of rows and columns. What is the best way to test your program?</li>
</ol>
</div>

### Handling Command-Line Flags


<div class="">
<p>The next step is to teach our program to pay attention to the <code>--min</code>, <code>--mean</code>, and <code>--max</code> flags. These always appear before the names of the files, so we could just do this:</p>
</div>


<div class="in">
<pre>!cat readings-04.py</pre>
</div>

<div class="out">
<pre>import sys
import numpy as np

def main():
    script = sys.argv[0]
    action = sys.argv[1]
    filenames = sys.argv[2:]

    for f in filenames:
        data = np.loadtxt(f, delimiter=&#39;,&#39;)

        if action == &#39;--min&#39;:
            values = data.min(axis=1)
        elif action == &#39;--mean&#39;:
            values = data.mean(axis=1)
        elif action == &#39;--max&#39;:
            values = data.max(axis=1)

        for m in values:
            print m

main()
</pre>
</div>


<div class="">
<p>This works:</p>
</div>


<div class="in">
<pre>%run readings-04.py --max small-01.csv</pre>
</div>

<div class="out">
<pre>1.0
2.0
</pre>
</div>


<div class="">
<p>but there are seveal things wrong with it:</p>
<ol style="list-style-type: decimal">
<li><p><code>main</code> is too large to read comfortably.</p></li>
<li><p>If <code>action</code> isn't one of the three recognized flags, the program loads each file but does nothing with it (because none of the branches in the conditional match). <a href="../../gloss.html#silent-failure">Silent failures</a> like this are always hard to debug.</p></li>
</ol>
<p>This version pulls the processing of each file out of the loop into a function of its own. It also checks that <code>action</code> is one of the allowed flags before doing any processing, so that the program fails fast:</p>
</div>


<div class="in">
<pre>!cat readings-05.py</pre>
</div>

<div class="out">
<pre>import sys
import numpy as np

def main():
    script = sys.argv[0]
    action = sys.argv[1]
    filenames = sys.argv[2:]
    assert action in [&#39;--min&#39;, &#39;--mean&#39;, &#39;--max&#39;], \
           &#39;Action is not one of --min, --mean, or --max: &#39; + action
    for f in filenames:
        process(f, action)

def process(filename, action):
    data = np.loadtxt(filename, delimiter=&#39;,&#39;)

    if action == &#39;--min&#39;:
        values = data.min(axis=1)
    elif action == &#39;--mean&#39;:
        values = data.mean(axis=1)
    elif action == &#39;--max&#39;:
        values = data.max(axis=1)

    for m in values:
        print m

main()
</pre>
</div>


<div class="">
<p>This is four lines longer than its predecessor, but broken into more digestible chunks of 8 and 12 lines.</p>
</div>


<div>
<p>Python has a module named <a href="http://docs.python.org/dev/library/argparse.html">argparse</a> that helps handle complex command-line flags. We will not cover this module in this lesson but you can go to Tshepang Lekhonkhobe's <a href="http://docs.python.org/dev/howto/argparse.html">Argparse tutorial</a> that is part of Python's Official Documentation.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Rewrite this program so that it uses <code>-n</code>, <code>-m</code>, and <code>-x</code> instead of <code>--min</code>, <code>--mean</code>, and <code>--max</code> respectively. Is the code easier to read? Is the program easier to understand?</p></li>
<li><p>Separately, modify the program so that if no parameters are given (i.e., no action is specified and no filenames are given), it prints a message explaining how it should be used.</p></li>
<li><p>Separately, modify the program so that if no action is given it displays the means of the data.</p></li>
</ol>
</div>

### Handling Standard Input


<div class="">
<p>The next thing our program has to do is read data from standard input if no filenames are given so that we can put it in a pipeline, redirect input to it, and so on. Let's experiment in another script:</p>
</div>


<div class="in">
<pre>!cat count-stdin.py</pre>
</div>

<div class="out">
<pre>import sys

count = 0
for line in sys.stdin:
    count += 1

print count, &#39;lines in standard input&#39;
</pre>
</div>


<div class="">
<p>This little program reads lines from a special &quot;file&quot; called <code>sys.stdin</code>, which is automatically connected to the program's standard input. We don't have to open it—Python and the operating system take care of that when the program starts up— but we can do almost anything with it that we could do to a regular file. Let's try running it as if it were a regular command-line program:</p>
</div>


<div class="in">
<pre>!ipython count-stdin.py &lt; small-01.csv</pre>
</div>

<div class="out">
<pre>2 lines in standard input
</pre>
</div>


<div class="">
<p>What if we run it using <code>%run</code>?</p>
</div>


<div class="in">
<pre>%run count-stdin.py &lt; fractal_1.txt</pre>
</div>

<div class="out">
<pre>0 lines in standard input
</pre>
</div>


<div class="">
<p>As you can see, <code>%run</code> doesn't understand file redirection: that's a shell thing.</p>
<p>A common mistake is to try to run something that reads from standard input like this:</p>
<pre><code>!ipython count_stdin.py fractal_1.txt</code></pre>
<p>i.e., to forget the <code>&lt;</code> character that redirect the file to standard input. In this case, there's nothing in standard input, so the program waits at the start of the loop for someone to type something on the keyboard. Since there's no way for us to do this, our program is stuck, and we have to halt it using the <code>Interrupt</code> option from the <code>Kernel</code> menu in the Notebook.</p>
<p>We now need to rewrite the program so that it loads data from <code>sys.stdin</code> if no filenames are provided. Luckily, <code>numpy.loadtxt</code> can handle either a filename or an open file as its first parameter, so we don't actually need to change <code>process</code>. That leaves <code>main</code>:</p>
</div>


<div class="">
<pre><code>def main():
    script = sys.argv[0]
    action = sys.argv[1]
    filenames = sys.argv[2:]
    assert action in [&#39;--min&#39;, &#39;--mean&#39;, &#39;--max&#39;], \
           &#39;Action is not one of --min, --mean, or --max: &#39; + action
    if len(filenames) == 0:
        process(sys.stdin, action)
    else:
        for f in filenames:
            process(f, action)</code></pre>
</div>


<div class="">
<p>Let's try it out (we'll see in a moment why we send the output through <code>head</code>):</p>
</div>


<div class="in">
<pre>!ipython readings-06.py --mean &lt; small-01.csv | head -10</pre>
</div>

<div class="out">
<pre>[TerminalIPythonApp] CRITICAL | Bad config encountered during initialization:
[TerminalIPythonApp] CRITICAL | Unrecognized flag: &#39;--mean&#39;
=========
 IPython
=========

Tools for Interactive Computing in Python
=========================================

    A Python shell with automatic history (input and output), dynamic object
    introspection, easier configuration, command completion, access to the
    system shell and more.  IPython can also be embedded in running programs.
</pre>
</div>


<div class="">
<p>Whoops: why are we getting IPython's help rather than the line-by-line average of our data? The answer is that IPython has a hard time telling which command-line arguments are meant for it, and which are meant for the program it's running. To make our meaning clear, we have to use <code>--</code> (a double dash) to separate the two:</p>
</div>


<div class="in">
<pre>!ipython readings-06.py -- --mean &lt; small-01.csv</pre>
</div>

<div class="out">
<pre>0.333333333333
1.0
</pre>
</div>


<div class="">
<p>That's better. In fact, that's done: the program now does everything we set out to do.</p>
</div>


<div class="challenges">
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Write a program called <code>line-count.py</code> that works like the Unix <code>wc</code> command:
<ul>
<li>If no filenames are given, it reports the number of lines in standard input.</li>
<li>If one or more filenames are given, it reports the number of lines in each, followed by the total number of lines.</li>
</ul></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>The <code>sys</code> library connects a Python program to the system it is running on.</li>
<li>The list <code>sys.argv</code> contains the command-line arguments that a program was run with.</li>
<li>Avoid silent failures.</li>
<li>The &quot;file&quot; <code>sys.stdin</code> connects to a program's standard input.</li>
<li>The &quot;file&quot; <code>sys.stdout</code> connects to a program's standard output.</li>
</ul>
</div>

---
layout: lesson
root: ../..
title: Programming with Python
---
The best way to learn how to program is to do something useful,
so this introduction to Python is built around a common scientific task:
data analysis.

Our real goal isn't to teach you Python,
but to teach you the basic concepts that all programming depends on.
We use Python in our lessons because:

1.  we have to use *something* for examples;
2.  it's free, well-documented, and runs almost everywhere;
3.  it has a large (and growing) user base among scientists; and
4.  experience shows that it's easier for novices to pick up than most other languages.

But the two most important things are
to use whatever language your colleagues are using,
so that you can share you work with them easily,
and to use that language *well*.

<div class="toc" markdown="1">

1.  [Analyzing Patient Data](01-numpy.html)
2.  [Creating Functions](02-func.html)
3.  [Analyzing Multiple Data Sets](03-loop.html)
4.  [Making Choices](04-cond.html)
5.  [Defensive Programming](05-defensive.html)
6.  [Command-Line Programs](06-cmdline.html)

</div>

# Resources

*   `inflammation-*.csv`: data files used in notebooks.
*   `readings-*.py`: successive versions of command-line script.
*   `small-*.csv`: small data files used to test command-line script.
*   `argv-list.py`: example command-line script.
*   `count-stdin.py`: example command-line script.
*   `sys-version.py`: example command-line script.
*   `img/*`: images used in notebooks

---
layout: lesson
root: ../..
---

## A note to students and instructors

This lesson requires the [Basemap](http://matplotlib.org/basemap) toolkit for
Matplotlib. This library is not distributed with Matplotlib directly. If you are
using Continuum's Anaconda distribution, you can obtain the library using:

    conda install basemap

If you are using Enthought Canopy and have the full version or an academic
license, Basemap should already be installed on your system. Otherwise, you will
need to follow the [installation
instructions](http://matplotlib.org/basemap/users/installing.html) on the
Basemap documentation. Using one of the two scientific distributions is
preferred in most instances.

## Visualizing spatial data

Original materials by <a href="https://github.com/synapticarbors">Joshua
Adelman</a>; modified by <a href="http://www.randalolson.com/">Randy Olson</a>

We are examining some simple spatial coordinate data, specifically the location
of all of the previous Software Carpentry bootcamps. The data set is stored in
[comma-separated values](../../gloss.html#csv) (CSV) format. After the header
line (marked with a `#`), each row contains the latitude and longitude for each
bootcamp, separated by a comma.

    # Latitude, Longitude
    43.661476,-79.395189
    39.332604,-76.623190
    45.703255, 13.718013
    43.661476,-79.395189
    39.166381,-86.526621
    ...

We want to:

* Load the data into our analysis environment
* Inspect the data
* Visualize it in a meaningful context

To do this, we'll begin to delve into working with Python and do a bit of
programming.

## Objectives

*   Explain what a library is, and what libraries are used for.
*   Load a Python library and use the things it contains.
*   Read tabular data from a file into a program.
*   Display simple visualizations of the data

### Loading the data

In order to work with the coordinates stored in the file, we need to
[import](../../gloss.html#import) a library called NumPy that is designed to
easily handle arrays of data.


    import numpy as np

It's very common to create an [alias](../../gloss.html#alias-library) for a
library when importing it
in order to reduce the amount of typing we have to do. We can now refer to this
library in the code as `np` instead of typing out `numpy` each time we want to
use it.

We can now ask numpy to read our data file:


    lat, lon = np.loadtxt('swc_bc_coords.csv', delimiter=',', unpack=True)

The expression `np.loadtxt(...)` means,
"Run the function `loadtxt` that belongs to the `numpy` library."
This [dotted notation](../../gloss.html#dotted-notation) is used everywhere in
Python
to refer to the parts of larger things.

`np.loadtxt` has three [parameters](../../gloss.html#parameter):
the name of the file we want to read,
and the [delimiter](../../gloss.html#delimiter) that separates values on a line.
These both need to be character strings (or [strings](../../gloss.html#string)
for short),
so we put them in quotes.
Finally, passing the `unpack` paramter the boolean value, `True` tells
`np.loadtxt` to take the first and second column of data and
[assign](../../gloss.html#assignment) them to the
[variables](../../gloss.html#variable)  `lat` and `lon`, respectively.
A variable is just a name for some data.
Also note that `np.loadtxt` automatically skipped the line with the header
information, since it recognizes that
this line is a [comment](../../gloss.html#comment) and does not contain
numerical data.

When we are finished typing and press Shift+Enter,
the notebook runs our command.

`lat` and `lon` now contain our data, which we can inspect by just executing a
cell with the name of a variable:


    lat




    array([ 43.661476,  39.332604,  45.703255,  43.661476,  39.166381,
            36.802151,  37.808381,  41.790113,  41.744949,  51.559882,
            42.727288,  54.980095,  53.523454,  49.261715,  39.32758 ,
            48.831673,  42.359133,  43.47013 ,  44.632261,  43.783551,
            53.948193,  59.939959,  40.808078,  40.428267,  37.875928,
            49.261715,  37.8695  ,  54.980095,  34.141411,  38.831513,
            51.757137,  43.261328,  38.648056,  32.89533 ,  34.227425,
            21.300662,  55.945328,  30.283599,  49.261715,  41.790113,
            45.417417,  43.469128,  49.261715,  48.264934,  43.647118,
            48.53698 ,  40.808078,  37.228384,  49.261715, -33.773636,
           -37.825328,  47.655965,  37.875928,  38.031441,  33.900058,
            41.744949,  22.3101  ,  32.236358,  51.524789, -33.929492,
            53.467102,  37.8695  ,  53.478349,  48.82629 ,  39.291389,
            43.07718 ,  52.33399 ,  54.32707 ,  39.07141 ,  37.42949 ,
            37.875928,  43.64712 ,  51.759865,  38.54926 ,  36.00803 ,
            50.060833,  36.00283 ,  40.03131 ,  42.388889,  53.52345 ,
            50.937716,  42.35076 ,  41.789722,  49.276765,  32.887151,
            41.790113,  42.3625  ,  30.283599, -43.523333,  35.20859 ,
            59.939959,  30.538978,  39.166381,  51.377743,  37.228384,
            41.7408  ,  41.70522 ,  47.655   ,  40.443322,  44.968657,
            38.958455,  32.30192 ,  43.07718 ,  41.66293 ,  51.457971,
            43.468889,  42.724085, -34.919159,  49.261111, -37.9083  ,
            34.052778,  41.526667])



## Visualizing the data

The array is a type of container defined by numpy to hold values. We will
discuss how to manipulate arrays in more detail in another lesson.
For now let's just make a simple plot of the data. For this, we will use another
library called `matplotlib`. First, let's tell the IPython Notebook that we want
our plots displayed inline, rather than in a separate viewing window:


    %matplotlib inline

The `%` at the start of the line signals that this is a command for the
notebook,
rather than a statement in Python.
Next,
we will import the `pyplot` module from `matplotlib` and use one of the commands
it defines to make plot a point for each latitude, longitude pair of data.


    from matplotlib import pyplot
    pyplot.plot(lon, lat, 'o')




    [<matplotlib.lines.Line2D at 0x10690d490>]




![png](spatial-intro_files/spatial-intro_17_1.png)


### Exercise 1

Plot the dots with a different color according to the continent they would be
on.


    

While matplotlib provides a simple facility for visualizing numerical data in a
variety of ways, we will use a supplementary toolkit called *Basemap* that
enhances matplotlib to specifically deal with spatial data. We need to import
this library and can do so using:


    from mpl_toolkits.basemap import Basemap

Now let's create a Basemap object that will allow us to project the coordinates
onto map. For this example we are going to use a [Robinson
Projection](http://en.wikipedia.org/wiki/Robinson_projection).


    basemap_graph = Basemap(projection='robin', lat_0=0.0, lon_0=0.0)

The parameters `lat_0` and `lon_0` define the center of the map. Now let's add
some features to our map using methods defined by the `bm` object. We will also
use the object itself to get the coordinates of the bootcamps in the projection
given our original longitudes and latitudes. We will also tell pyplot to make
the figure 12 inches by 12 inches to make it more legible.


    pyplot.figure(figsize=(12,12))
    basemap_graph.drawcoastlines()
    basemap_graph.drawcountries()
    basemap_graph.fillcontinents()
    basemap_graph.drawmeridians(np.arange(-180,180,20))
    basemap_graph.drawparallels(np.arange(-90,90,20))
    
    x, y = basemap_graph(lon, lat)
    basemap_graph.plot(x, y, 'o', markersize=4, color='red')




    [<matplotlib.lines.Line2D at 0x107f94d90>]




![png](spatial-intro_files/spatial-intro_26_1.png)


The final line of the above code cell mimics matplotlib's built-in `plot` method
to plot our projected coordinates onto the map.

With just a handful of lines of code, you see that we can create a rich
visualization of our data.

### Exercise 2

1. Integrate the coloring scheme from Exercise 1 into the Basemap projection.
2. Try out a different projection that better shows the boot camp locations in
North America. Here is the list of projections in Basemap:
http://matplotlib.org/basemap/users/mapsetup.html


    

---
layout: lesson
root: ../..
---




# Novice R materials - following Python examples
--------------------------------------------------

* Draw concept map of where we are headed towards best scientific practices, and reproducibility.
* Its really important that you know what you did. More journals/grants/etc. are also making it important for them to know what you did.
* A lot of scientific code is *not* reproducible.
* If you keep a lab notebook, why are we not as careful with our code? 
* We edit each others manuscripts, but we don't edit each other's code. 
* If you write your code with "future you" in mind, you will save yourself and others a lot of time.

# Very basics of R

R is a versatile, open source programming language that was specifically designed for data analysis. As such R is extremely useful both for statistics and data science. Inspired by the programming language S.  

* Open source software under GPL.  
* Superior (if not just comparable) to commercial alternatives. R has over 5,000 user contributed packages at this time. It's widely used both in academia and industry.  
* Available on all platforms.  
* Not just for statistics, but also general purpose programming.  
* Is (sort of) object oriented and functional.  
* Large and growing community of peers.  

Some of the same commands we learned from the command line can be used in R.
List objects in your current environment


```r
ls()
```

```
##  [1] "a"                 "abbrev"            "age"              
##  [4] "analyze"           "analyze2"          "analyze3"         
##  [7] "avg_inflammation"  "avg2"              "avg3"             
## [10] "b"                 "center"            "centered"         
## [13] "d.summary"         "dat"               "diff"             
## [16] "display"           "f"                 "fahr_to_celsius"  
## [19] "fahr_to_kelvin"    "fence"             "filenames"        
## [22] "final"             "hello"             "i"                
## [25] "kelvin_to_celsius" "len"               "letter"           
## [28] "m"                 "mass"              "mat"              
## [31] "max_inflammation"  "mdat"              "min_inflammation" 
## [34] "more_data"         "odds"              "original"         
## [37] "out"               "pangram"           "patient_1"        
## [40] "print_numbers"     "print_words"       "res"              
## [43] "res2"              "span"              "temp"             
## [46] "tempo"             "test_data"         "total"            
## [49] "vowel"             "weight_kg"         "weight_lb"        
## [52] "weights"           "words"             "x"                
## [55] "xlist"             "y"                 "z"
```


Remove objects from your current environment.  


```r
x <- 5
rm(x)
```


Remove all objects from your current environment. Typing `x` on the console will give you an error.


```r
rm(list = ls())
```


Notice that we have _nested_ one function inside of another.  

Use `#` signs to comment. Comment liberally in your R scripts. Anything to the right of a `#` is ignored by R.  

### Assignment operator

`<-` is the assignment operator. Assigns values on the right to objects on the left. Mostly similar to `=` but not always. Learn to use `<-` as it is good programming practice. Using `=` in place of `<-` can lead to issues down the line.

### Package management

`install.packages("package-name")` will download a package from one of the CRAN mirrors assuming that a binary is available for your operating system. If you have not set a preferred CRAN mirror in your `options()`, then a menu will pop up asking you to choose a location. To set it permanently, add the CRAN mirror in your `~/.Rprofile`


```r
local({
    r <- getOption("repos")
    r["CRAN"] <- "http://cran.rstudio.com/"  # hard code the RStudio mirror
    options(repos = r)
})
```


Use `old.packages()` to list all your locally-installed packages that are now out of date. `update.packages()` will update all packages in the known libraries interactively. This can take a while if you haven't done it recently. To update everything without any user intervention, use the `ask = FALSE` argument.


```r
update.packages(ask = FALSE)
```


## Introduction to R and RStudio

Let's start by learning about our tool.  

_Point out the different windows in RStudio._ 
* Console, Scripts, Environments, Plots
* Avoid using shortcuts. 
* Code and workflow is more reproducible if we can document everything that we do.
* Our end goal is not just to "do stuff" but to do it in a way that anyone can easily and exactly replicate our workflow and results.

You can get output from R simply by typing in math
	

```r
3 + 5
```

```
## [1] 8
```

```r
12/7
```

```
## [1] 1.714
```


or by typing words, with the command `writeLines()`


```r
writeLines("hello world")
```

```
## hello world
```


We can assign our results to an object, if we give it a name


```r
a <- 60 * 60
hours <- 365 * 24
```

The *result* of the operation on the right hand side of `<-` is *assigned* to an object with the name specified on the left hand side of `<-`. The *result* could be any type of R object, including your own functions.

## Data types and structures

### Understanding basic data types in R

To make the best of the R language, you'll need a strong understanding of the basic data types and data structures and how to operate on those.

Very important to understand because these are the objects you will manipulate on a day-to-day basis in R. Dealing with object conversions is one of the most common sources of frustration for beginners.

**Everything** in R is an object.

R has 6 (although we will not discuss the raw class for this workshop) atomic vector types.

* character
* numeric (real or decimal)
* integer
* logical
* complex

By *atomic*, we mean the vector only holds data of a single type.

* **character**: `"a"`, `"swc"`
* **numeric**: `2`, `15.5`
* **integer**: `2L` (the `L` tells R to store this as an integer)
* **logical**: `TRUE`, `FALSE`
* **complex**: `1+4i` (complex numbers with real and imaginary parts)

R provides many functions to examine features of vectors and other objects, for example

* `typeof()` - what is it?  
* `length()` - how long is it? What about two dimensional objects?  
* `attributes()` - does it have any metadata?  


```r
# Example
x <- "dataset"
typeof(x)
```

```
## [1] "character"
```

```r
attributes(x)
```

```
## NULL
```

```r

y <- 1:10
y
```

```
##  [1]  1  2  3  4  5  6  7  8  9 10
```

```r
typeof(y)
```

```
## [1] "integer"
```

```r
length(y)
```

```
## [1] 10
```

```r

z <- as.numeric(y)
z
```

```
##  [1]  1  2  3  4  5  6  7  8  9 10
```

```r
typeof(z)
```

```
## [1] "double"
```


R has many __data structures__. These include

* atomic vector
* list
* matrix
* data frame
* factors

### Vectors

A vector is the most common and basic data structure in R and is pretty much the workhorse of R. Technically, vectors can be one of two types:

* atomic vectors
* lists

although the term "vector" most commonly refers to the atomic types not to lists.


#### Atomic Vectors

A vector is a collection of elements that are most commonly `character`, `logical`, `integer` or `numeric`.

You can create an empty vector with `vector()`. (By default the mode is `logical`. You can be more explicit as shown in the examples below.) It is more common to use direct constructors such as `character()`, `numeric()`, etc.


```r
x <- vector()
# with a length and type
vector("character", length = 10)
```

```
##  [1] "" "" "" "" "" "" "" "" "" ""
```

```r
character(5)  ## character vector of length 5
```

```
## [1] "" "" "" "" ""
```

```r
numeric(5)
```

```
## [1] 0 0 0 0 0
```

```r
logical(5)
```

```
## [1] FALSE FALSE FALSE FALSE FALSE
```


Various examples:


```r
x <- c(1, 2, 3)
x
```

```
## [1] 1 2 3
```

```r
length(x)
```

```
## [1] 3
```


`x` is a numeric vector. These are the most common kind. They are numeric objects and are treated as double precision real numbers. To explicitly create integers, add an `L` to each (or *coerce* to the integer type using `as.integer()`.


```r
x1 <- c(1L, 2L, 3L)
```


You can also have logical vectors. 


```r
y <- c(TRUE, TRUE, FALSE, FALSE)
```


Finally you can have character vectors:


```r
z <- c("Sarah", "Tracy", "Jon")
```


**Examine your vector**  


```r
typeof(z)
```

```
## [1] "character"
```

```r
length(z)
```

```
## [1] 3
```

```r
class(z)
```

```
## [1] "character"
```

```r
str(z)
```

```
##  chr [1:3] "Sarah" "Tracy" "Jon"
```


Question: Do you see a property that's common to all these vectors above?

**Add elements**


```r
z <- c(z, "Annette")
z
```

```
## [1] "Sarah"   "Tracy"   "Jon"     "Annette"
```


More examples of vectors


```r
x <- c(0.5, 0.7)
x <- c(TRUE, FALSE)
x <- c("a", "b", "c", "d", "e")
x <- 9:100
x <- c(1 + (0+0i), 2 + (0+4i))
```


You can also create vectors as a sequence of numbers


```r
series <- 1:10
seq(10)
```

```
##  [1]  1  2  3  4  5  6  7  8  9 10
```

```r
seq(from = 1, to = 10, by = 0.1)
```

```
##  [1]  1.0  1.1  1.2  1.3  1.4  1.5  1.6  1.7  1.8  1.9  2.0  2.1  2.2  2.3
## [15]  2.4  2.5  2.6  2.7  2.8  2.9  3.0  3.1  3.2  3.3  3.4  3.5  3.6  3.7
## [29]  3.8  3.9  4.0  4.1  4.2  4.3  4.4  4.5  4.6  4.7  4.8  4.9  5.0  5.1
## [43]  5.2  5.3  5.4  5.5  5.6  5.7  5.8  5.9  6.0  6.1  6.2  6.3  6.4  6.5
## [57]  6.6  6.7  6.8  6.9  7.0  7.1  7.2  7.3  7.4  7.5  7.6  7.7  7.8  7.9
## [71]  8.0  8.1  8.2  8.3  8.4  8.5  8.6  8.7  8.8  8.9  9.0  9.1  9.2  9.3
## [85]  9.4  9.5  9.6  9.7  9.8  9.9 10.0
```


`Inf` is infinity. You can have either positive or negative infinity.


```r
1/0
```

```
## [1] Inf
```


`NaN` means Not a Number. It's an undefined value.


```r
0/0
```

```
## [1] NaN
```


Objects can have __attributes__. Attribues are part of the object. These include:

* names
* dimnames
* dim
* class
* attributes (contain metadata)

You can also glean other attribute-like information such as length (works on vectors and lists) or number of characters (for character strings).


```r
length(1:10)
```

```
## [1] 10
```

```r
nchar("Software Carpentry")
```

```
## [1] 18
```


**What happens when you mix types?**

R will create a resulting vector that is the least common denominator. The coercion will move towards the one that's easiest to __coerce__ to.

Guess what the following do without running them first


```r
xx <- c(1.7, "a")
xx <- c(TRUE, 2)
xx <- c("a", TRUE)
```


This is called implicit coercion. You can also coerce vectors explicitly using the `as.<class_name>`. Example


```r
as.numeric("1")
```

```
## [1] 1
```

```r
as.character(1:2)
```

```
## [1] "1" "2"
```


### Matrix

In R matrices are an extension of the numeric or character vectors. They are not a separate type of object but simply an atomic vector with dimensions; the number of rows and columns.


```r
m <- matrix(nrow = 2, ncol = 2)
m
```

```
##      [,1] [,2]
## [1,]   NA   NA
## [2,]   NA   NA
```

```r
dim(m)
```

```
## [1] 2 2
```


Matrices in R are filled column-wise.


```r
m <- matrix(1:6, nrow = 2, ncol = 3)
```


Other ways to construct a matrix


```r
m <- 1:10
dim(m) <- c(2, 5)
```


This takes a vector and transform into a matrix with 2 rows and 5 columns.

Another way is to bind columns or rows using `cbind()` and `rbind()`.


```r
x <- 1:3
y <- 10:12
cbind(x, y)
```

```
##      x  y
## [1,] 1 10
## [2,] 2 11
## [3,] 3 12
```

```r
rbind(x, y)
```

```
##   [,1] [,2] [,3]
## x    1    2    3
## y   10   11   12
```


You can also use the `byrow` argument to specify how the matrix is filled. From R's own documentation:


```r
mdat <- matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE)
mdat
```

```
##      [,1] [,2] [,3]
## [1,]    1    2    3
## [2,]   11   12   13
```


### List

In R lists act as containers. Unlike atomic vectors, the contents of a list are not restricted to a single mode and can encompass any mixture of data types. Lists are sometimes called generic vectors, because the elements of a list can by of any type of R object, even lists containing further lists. This property makes them fundamentally different from atomic vectors.

A list is a special type of vector. Each element can be a different type.

Create lists using `list()` or coerce other objects using `as.list()`. An empty list of the required length can be created using `vector()`


```r
x <- list(1, "a", TRUE, 1 + (0+4i))
x
```

```
## [[1]]
## [1] 1
## 
## [[2]]
## [1] "a"
## 
## [[3]]
## [1] TRUE
## 
## [[4]]
## [1] 1+4i
```

```r

x <- vector("list", length = 5)  ## empty list
length(x)
```

```
## [1] 5
```

```r
x[[1]]
```

```
## NULL
```

```r

x <- 1:10
x <- as.list(x)
length(x)
```

```
## [1] 10
```


1. What is the class of `x[1]`?
2. What about `x[[1]]`?


```r
xlist <- list(a = "Karthik Ram", b = 1:10, data = head(iris))
xlist
```

```
## $a
## [1] "Karthik Ram"
## 
## $b
##  [1]  1  2  3  4  5  6  7  8  9 10
## 
## $data
##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
```


1. What is the length of this object? What about its structure?

Lists can be extremely useful inside functions. You can “staple” together lots of different kinds of results into a single object that a function can return.

A list does not print to the console like a vector. Instead, each element of the list starts on a new line.

Elements are indexed by double brackets. Single brackets will still return a(nother) list.


### Factors

Factors are special vectors that represent categorical data. Factors can be ordered or unordered and are important for modelling functions such as `lm()` and `glm()` and also in `plot()` methods.

Once created factors can only contain a pre-defined set values, known as *levels*.

Factors are stored as integers that have labels associated the unique integers. While factors look (and often behave) like character vectors, they are actually integers under the hood, and you need to be careful when treating them like strings. Some string methods will coerce factors to strings, while others will throw an error.

Sometimes factors can be left unordered. Example: male, female.

Other times you might want factors to be ordered (or ranked). Example: low, medium, high.

Underlying it's represented by numbers 1, 2, 3.

They are better than using simple integer labels because factors are what are called self describing. male and female is more descriptive than 1s and 2s. Helpful when there is no additional metadata.

Which is male? 1 or 2? You wouldn't be able to tell with just integer data. Factors have this information built in.

Factors can be created with `factor()`. Input is often a character vector.


```r
x <- factor(c("yes", "no", "no", "yes", "yes"))
x
```

```
## [1] yes no  no  yes yes
## Levels: no yes
```


`table(x)` will return a frequency table counting the number of elements in each level.

If you need to convert a factor to a character vector, simply use


```r
as.character(x)
```

```
## [1] "yes" "no"  "no"  "yes" "yes"
```


To convert a factor to a numeric vector, go via a character. Compare


```r
f <- factor(c(1, 5, 10, 2))
as.numeric(f)  ## wrong!
```

```
## [1] 1 3 4 2
```

```r
as.numeric(as.character(f))
```

```
## [1]  1  5 10  2
```


In modeling functions, it is important to know what the baseline level is. This is the first factor but by default the ordering is determined by alphanumerical order of elements. You can change this by speciying the `levels` (another option is to use the function `relevel()`).


```r
x <- factor(c("yes", "no", "yes"), levels = c("yes", "no"))
x
```

```
## [1] yes no  yes
## Levels: yes no
```


### Data frame

A data frame is a very important data type in R. It's pretty much the *de facto* data structure for most tabular data and what we use for statistics.

A data frame is a special type of list where every element of the list has same length.

Data frames can have additional attributes such as `rownames()`, which can be useful for annotating data, like `subject_id` or `sample_id`. But most of the time they are not used.

Some additional information on data frames:

* Usually created by `read.csv()` and `read.table()`.
* Can convert to matrix with `data.matrix()` (preferred) or `as.matrix()`
* Coercion will be forced and not always what you expect.
* Can also create with `data.frame()` function.
* Find the number of rows and columns with `nrow(dat)` and `ncol(dat)`, respectively.
* Rownames are usually 1, 2, ..., n.

#### Creating data frames by hand


```r
dat <- data.frame(id = letters[1:10], x = 1:10, y = 11:20)
dat
```

```
##    id  x  y
## 1   a  1 11
## 2   b  2 12
## 3   c  3 13
## 4   d  4 14
## 5   e  5 15
## 6   f  6 16
## 7   g  7 17
## 8   h  8 18
## 9   i  9 19
## 10  j 10 20
```


#### Useful data frame functions

* `head()` - shown first 6 rows
* `tail()` - show last 6 rows
* `dim()` - returns the dimensions
* `nrow()` - number of rows
* `ncol()` - number of columns
* `str()` - structure of each column
* `names()` - shows the `names` attribute for a data frame, which gives the column names.

See that it is actually a special list:


```r
is.list(iris)
```

```
## [1] TRUE
```

```r
class(iris)
```

```
## [1] "data.frame"
```


| Dimensions | Homogenous | Heterogeneous |
| ------- | ---- | ---- |
| 1-D | atomic vector | list |
| 2_D | matrix | data frame |

### Indexing

Vectors have positions, these positions are ordered and can be called using `object[index]`


```r
letters[2]
```

```
## [1] "b"
```


### Functions

A function is an R object that takes inputs to perform a task. 
Functions take in information and may return desired outputs.

`output <- name_of_function(inputs)`


```r
x <- 1:10
y <- sum(x)
```


### Help

All functions come with a help screen. 
It is critical that you learn to read the help screens since they provide important information on what the function does, 
how it works, and usually sample examples at the very bottom.

### Get new functions

To install any package use `install.packages()`


```r
install.packages("ggplot2")  ## install the ggplot2 package
```


You can't ever learn all of R, but you can learn how to build a program and how to find help to do the things that you want to do.

Let's get hands-on.

---
layout: lesson
root: ../..
---



# Analyzing Patient Data

We are studying inflammation in patients who have been given a new treatment for arthritis,
and need to analyze the first dozen data sets. 
The data sets are stored in `.csv` each row holds information for a single patient, and the columns represent successive days. 
The first few rows of our first file look like this:

	0,0,1,3,1,2,4,7,8,3,3,3,10,5,7,4,7,7,12,18,6,13,11,11,7,7,4,6,8,8,4,4,5,7,3,4,2,3,0,0
	0,1,2,1,2,1,3,2,2,6,10,11,5,9,4,4,7,16,8,6,18,4,12,5,12,7,11,5,11,3,3,5,4,4,5,5,1,1,0,1
	0,1,1,3,3,2,6,2,5,9,5,7,4,5,4,15,5,11,9,10,19,14,12,17,7,12,11,7,4,2,10,5,4,2,2,3,2,2,1,1
	0,0,2,0,4,2,2,1,6,7,10,7,9,13,8,8,15,10,10,7,17,4,4,7,6,15,6,4,9,11,3,5,6,3,3,4,2,3,2,1
	0,1,1,3,3,1,3,5,2,4,4,7,6,5,3,10,8,10,6,17,9,14,9,7,13,9,12,6,7,7,9,6,3,2,2,4,2,0,1,1`

### We want to:

* load that data into memory,
* calculate the average inflammation per day across all patients, and
* plot the result.
To do all that, we'll have to learn a little bit about programming.

### Objectives
* Explain what a library is, and what libraries are used for.
* Load an R library and use the things it contains.
* Read tabular data from a file into a program.
* Assign values to variables.
* Learn about data types
* Select individual values and subsections from data.
* Perform operations on arrays of data.
* Display simple graphs.

## Loading Data

Words are useful, but what's more useful are the sentences and stories we use them to build. 
Similarly, while a lot of powerful tools are built into languages like R, even more lives in the libraries they are used to build.
Importing a library is like getting a piece of lab equipment out of a storage locker and setting it up on the bench. 
Once it's done, we can ask the library to do things for us.

To load our inflammation data, we need to locate our data.
We will use `setwd()` and `read.csv()`. These are built-in functions in R. Let's check out the help screen.

* download the inflammation file
* put it in your working directory for these exercises

Change the current working directory to the location of the CSV file, e.g.


```r
setwd("pathname")
```

then load the data into R

```r
read.csv("data/inflammation-01.csv", header = FALSE)
```

```
##    V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19 V20
## 1   0  0  1  3  1  2  4  7  8   3   3   3  10   5   7   4   7   7  12  18
## 2   0  1  2  1  2  1  3  2  2   6  10  11   5   9   4   4   7  16   8   6
## 3   0  1  1  3  3  2  6  2  5   9   5   7   4   5   4  15   5  11   9  10
## 4   0  0  2  0  4  2  2  1  6   7  10   7   9  13   8   8  15  10  10   7
## 5   0  1  1  3  3  1  3  5  2   4   4   7   6   5   3  10   8  10   6  17
## 6   0  0  1  2  2  4  2  1  6   4   7   6   6   9   9  15   4  16  18  12
## 7   0  0  2  2  4  2  2  5  5   8   6   5  11   9   4  13   5  12  10   6
## 8   0  0  1  2  3  1  2  3  5   3   7   8   8   5  10   9  15  11  18  19
## 9   0  0  0  3  1  5  6  5  5   8   2   4  11  12  10  11   9  10  17  11
## 10  0  1  1  2  1  3  5  3  5   8   6   8  12   5  13   6  13   8  16   8
## 11  0  1  0  0  4  3  3  5  5   4   5   8   7  10  13   3   7  13  15  18
## 12  0  1  0  0  3  4  2  7  8   5   2   8  11   5   5   8  14  11   6  11
## 13  0  0  2  1  4  3  6  4  6   7   9   9   3  11   6  12   4  17  13  15
## 14  0  0  0  0  1  3  1  6  6   5   5   6   3   6  13   3  10  13   9  16
## 15  0  1  2  1  1  1  4  1  5   2   3   3  10   7  13   5   7  17   6   9
## 16  0  1  1  0  1  2  4  3  6   4   7   5   5   7   5  10   7   8  18  17
## 17  0  0  0  0  2  3  6  5  7   4   3   2  10   7   9  11  12   5  12   9
## 18  0  0  0  1  2  1  4  3  6   7   4   2  12   6  12   4  14   7   8  14
## 19  0  0  2  1  2  5  4  2  7   8   4   7  11   9   8  11  15  17  11  12
## 20  0  1  2  0  1  4  3  2  2   7   3   3  12  13  11  13   6   5   9  16
## 21  0  1  1  3  1  4  4  1  8   2   2   3  12  12  10  15  13   6   5   5
## 22  0  0  2  3  2  3  2  6  3   8   7   4   6   6   9   5  12  12   8   5
## 23  0  0  0  3  4  5  1  7  7   8   2   5  12   4  10  14   5   5  17  13
## 24  0  1  1  1  1  3  3  2  6   3   9   7   8   8   4  13   7  14  11  15
## 25  0  1  1  1  2  3  5  3  6   3   7  10   3   8  12   4  12   9  15   5
## 26  0  0  2  1  3  3  2  7  4   4   3   8  12   9  12   9   5  16   8  17
## 27  0  0  1  2  4  2  2  3  5   7  10   5   5  12   3  13   4  13   7  15
## 28  0  0  1  1  1  5  1  5  2   2   4  10   4   8  14   6  15   6  12  15
## 29  0  0  2  2  3  4  6  3  7   6   4   5   8   4   7   7   6  11  12  19
## 30  0  0  0  1  4  4  6  3  8   6   4  10  12   3   3   6   8   7  17  16
## 31  0  1  1  0  3  2  4  6  8   6   2   3  11   3  14  14  12   8   8  16
## 32  0  0  2  3  3  4  5  3  6   7  10   5  10  13  14   3   8  10   9   9
## 33  0  1  2  2  2  3  6  6  6   7   6   3  11  12  13  15  15  10  14  11
## 34  0  0  2  1  3  5  6  7  5   8   9   3  12  10  12   4  12   9  13  10
## 35  0  0  1  2  4  1  5  5  2   3   4   8   8  12   5  15   9  17   7  19
## 36  0  0  0  3  1  3  6  4  3   4   8   3   4   8   3  11   5   7  10   5
## 37  0  1  2  2  2  5  5  1  4   6   3   6   5   9   6   7   4   7  16   7
## 38  0  1  1  2  3  1  5  1  2   2   5   7   6   6   5  10   6   7  17  13
## 39  0  1  0  3  2  4  1  1  5   9  10   7  12  10   9  15  12  13  13   6
## 40  0  1  1  3  1  1  5  5  3   7   2   2   3  12   4   6   8  15  16  16
## 41  0  0  0  2  2  1  3  4  5   5   6   5   5  12  13   5   7   5  11  15
## 42  0  0  1  3  3  1  2  1  8   9   2   8  10   3   8   6  10  13  11  17
## 43  0  1  1  3  4  5  2  1  3   7   9   6  10   5   8  15  11  12  15   6
## 44  0  0  1  3  1  4  3  6  7   8   5   7  11   3   6  11   6  10   6  19
## 45  0  1  1  3  3  4  4  6  3   4   9   9   7   6   8  15  12  15   6  11
## 46  0  1  2  2  4  3  1  4  8   9   5  10  10   3   4   6   7  11  16   6
## 47  0  0  2  3  4  5  4  6  2   9   7   4   9  10   8  11  16  12  15  17
## 48  0  1  1  3  1  4  6  2  8   2  10   3  11   9  13  15   5  15   6  10
## 49  0  0  1  3  2  5  1  2  7   6   6   3  12   9   4  14   4   6  12   9
## 50  0  0  1  2  3  4  5  7  5   4  10   5  12  12   5   4   7   9  18  16
## 51  0  1  2  1  1  3  5  3  6   3  10  10  11  10  13  10  13   6   6  14
## 52  0  1  2  2  3  5  2  4  5   6   8   3   5   4   3  15  15  12  16   7
## 53  0  0  0  2  4  4  5  3  3   3  10   4   4   4  14  11  15  13  10  14
## 54  0  0  2  1  1  4  4  7  2   9   4  10  12   7   6   6  11  12   9  15
## 55  0  1  2  1  1  4  5  4  4   5   9   7  10   3  13  13   8   9  17  16
## 56  0  0  1  3  2  3  6  4  5   7   2   4  11  11   3   8   8  16   5  13
## 57  0  1  1  2  2  5  1  7  4   2   5   5   4   6   6   4  16  11  14  16
## 58  0  1  1  1  4  1  6  4  6   3   6   5   6   4  14  13  13   9  12  19
## 59  0  0  0  1  4  5  6  3  8   7   9  10   8   6   5  12  15   5  10   5
## 60  0  0  1  0  3  2  5  4  8   2   9   3   3  10  12   9  14  11  13   8
##    V21 V22 V23 V24 V25 V26 V27 V28 V29 V30 V31 V32 V33 V34 V35 V36 V37 V38
## 1    6  13  11  11   7   7   4   6   8   8   4   4   5   7   3   4   2   3
## 2   18   4  12   5  12   7  11   5  11   3   3   5   4   4   5   5   1   1
## 3   19  14  12  17   7  12  11   7   4   2  10   5   4   2   2   3   2   2
## 4   17   4   4   7   6  15   6   4   9  11   3   5   6   3   3   4   2   3
## 5    9  14   9   7  13   9  12   6   7   7   9   6   3   2   2   4   2   0
## 6   12   5  18   9   5   3  10   3  12   7   8   4   7   3   5   4   4   3
## 7    9  17  15   8   9   3  13   7   8   2   8   8   4   2   3   5   4   1
## 8   20   8   5  13  15  10   6  10   6   7   4   9   3   5   2   5   3   2
## 9    6  16  12   6   8  14   6  13  10  11   4   6   4   7   6   3   2   1
## 10  18  15  16  14  12   7   3   8   9  11   2   5   4   5   1   4   1   2
## 11   8  15  15  16  11  14  12   4  10  10   4   3   4   5   5   3   3   2
## 12   9  16  18   6  12   5   4   3   5   7   8   3   5   4   5   5   4   0
## 13  13  12   8   7   4   7  12   9   5   6   5   4   7   3   5   4   2   3
## 14  15   9  11   4   6   4  11  11  12   3   5   8   7   4   6   4   1   3
## 15  12  13  10   4  12   4   6   7   6  10   8   2   5   1   3   4   2   0
## 16   9   8  12  11  11  11  14   6  11   2  10   9   5   6   5   3   4   2
## 17  13  19  14  17   5  13   8  11   5  10   9   8   7   5   3   1   4   0
## 18  13  19   6   9  12   6   4  13   6   7   2   3   6   5   4   2   3   0
## 19   7  12   7   6   7   4  13   5   7   6   6   9   2   1   1   2   2   0
## 20   9  19  16  11   8   9  14  12  11   9   6   6   6   1   1   2   4   3
## 21  18  19   9   6  11  12   7   6   3   6   3   2   4   3   1   5   4   2
## 22  12  10  16   7  14  12   5   4   6   9   8   5   6   6   1   4   3   0
## 23  16  15  13   6  12   9  10   3   3   7   4   4   8   2   6   5   1   0
## 24  14  13   5  13   7  14   9  10   5  11   5   3   5   1   1   4   4   1
## 25  17  16   5  10  10  15   7   5   3  11   5   5   6   1   1   1   1   0
## 26   7  11  14   7  13  11   7  12  12   7   8   5   7   2   2   4   1   1
## 27   9  12  18  14  16  12   3  11   3   2   7   4   8   2   2   1   3   0
## 28  15  13   7  17   4   5  11   4   8   7   9   4   5   3   2   5   4   3
## 29  20  18   9   5   4   7  14   8   4   3   7   7   8   3   5   4   1   3
## 30  14  15  17   4  14  13   4   4  12  11   6   9   5   5   2   5   2   1
## 31  13   7   6   9  15   7   6   4  10   8  10   4   2   6   5   5   2   3
## 32  19  15  15   6   8   8  11   5   5   7   3   6   6   4   5   2   2   3
## 33  11   8   6  12  10   5  12   7   7  11   5   8   5   2   5   5   2   0
## 34  10   6  10  11   4  15  13   7   3   4   2   9   7   2   4   2   1   2
## 35  14  18  12  17  14   4  13  13   8  11   5   6   6   2   3   5   2   1
## 36  15   9  16  17  16   3   8   9   8   3   3   9   5   1   6   5   4   2
## 37  16  13   9  16  12   6   7   9  10   3   6   4   5   4   6   3   4   3
## 38  15  16  17  14   4   4  10  10  10  11   9   9   5   4   4   2   1   0
## 39  19   9  10   6  13   5  13   6   7   2   5   5   2   1   1   1   1   3
## 40  15   4  14   5  13  10   7  10   6   3   2   3   6   3   3   5   4   3
## 41  18   7   9  10  14  12  11   9  10   3   2   9   6   2   2   5   3   0
## 42  19   6   4  11   6  12   7   5   5   4   4   8   2   6   6   4   2   2
## 43  12  16   6   4  14   3  12   9   6  11   5   8   5   5   6   1   2   1
## 44  18  14   6  10   7   9   8   5   8   3  10   2   5   1   5   4   2   1
## 45   6  18   5  14  15  12   9   8   3   6  10   6   8   7   2   5   4   3
## 46  14   9  11  10  10   7  10   8   8   4   5   8   4   4   5   2   4   1
## 47  19  10  18  13  15  11   8   4   7  11   6   7   6   5   1   3   1   0
## 48  10   5  14  15  12   7   4   5  11   4   6   9   5   6   1   1   2   1
## 49  12   7  11   7  16   8  13   6   7   6  10   7   6   3   1   5   4   3
## 50  16  10  15  15  10   4   3   7   5   9   4   6   2   4   1   4   2   2
## 51   5   4   5   5   9   4  12   7   7   4   7   9   3   3   6   3   4   1
## 52  20  15  12   8   9   6  12   5   8   3   8   5   4   1   3   2   1   3
## 53  11  17   9  11  11   7  10  12  10  10  10   8   7   5   2   2   4   1
## 54  15   6   6  13   5  12   9   6   4   7   7   6   5   4   1   4   2   2
## 55  16  15  12  13   5  12  10   9  11   9   4   5   5   2   2   5   1   0
## 56  16   5   8   8   6   9  10  10   9   3   3   5   3   5   4   5   3   3
## 57  14  14   8  17   4  14  13   7   6   3   7   7   5   6   3   4   2   2
## 58   9  10  15  10   9  10  10   7   5   6   8   6   6   4   3   5   2   1
## 59   8  13  18  17  14   9  13   4  10  11  10   8   8   6   5   5   2   0
## 60   6  18  11   9  13  11   8   5   5   2   8   5   3   5   4   1   3   1
##    V39 V40
## 1    0   0
## 2    0   1
## 3    1   1
## 4    2   1
## 5    1   1
## 6    2   1
## 7    1   1
## 8    2   1
## 9    0   0
## 10   0   0
## 11   2   1
## 12   1   1
## 13   0   1
## 14   0   0
## 15   2   0
## 16   2   0
## 17   2   1
## 18   1   0
## 19   1   0
## 20   1   1
## 21   2   0
## 22   2   0
## 23   1   0
## 24   2   0
## 25   2   1
## 26   1   0
## 27   1   1
## 28   2   1
## 29   1   0
## 30   0   1
## 31   2   1
## 32   0   0
## 33   2   1
## 34   1   1
## 35   1   1
## 36   2   0
## 37   2   1
## 38   1   0
## 39   0   1
## 40   2   1
## 41   0   1
## 42   0   0
## 43   2   0
## 44   0   1
## 45   1   1
## 46   1   0
## 47   0   0
## 48   2   1
## 49   0   0
## 50   2   1
## 51   2   0
## 52   1   0
## 53   2   1
## 54   2   1
## 55   0   1
## 56   0   1
## 57   1   1
## 58   1   1
## 59   2   0
## 60   1   0
```


The expression `read.csv()` is a function call that asks R to run the function `read.csv()` that belongs to base R. 

`read.csv()` has many arguments including the name of the file we want to read, and the delimiter that separates values on a line. 

When we are finished typing and press `Control+Enter` on Windows or `Cmd + Return` on Mac, the console runs our command. 
Since we haven't told it to do anything else with the function's output, the console displays it.
In this case, that output is the data we just loaded. 

Our call to `read.csv()` read the file, but didn't save the data as an object. 
To do that, we need to assign the data frame to a variable. 
A variable is just a name for a value, such as `x`, `current_temperature`, or `subject_id`. 
We can create a new variable simply by assigning a value to it using `<-`


```r
weight_kg <- 55
```


Once a variable has a value, we can print it:


```r
weight_kg
```

```
## [1] 55
```


and do arithmetic with it:


```r
2.2 * weight_kg
```

```
## [1] 121
```


We can use the function `paste()` to strings made up from different objects, if we separate them with commas.


```r
paste("weight in pounds:", 2.2 * weight_kg)
```

```
## [1] "weight in pounds: 121"
```


To write lines of text to the screen, we can use `cat()` or `writeLines()`



```r
string <- paste("weight in pounds:", 2.2 * weight_kg)
cat(string)
```

```
## weight in pounds: 121
```

```r
cat(string, "\n")
```

```
## weight in pounds: 121
```

```r
writeLines(string)
```

```
## weight in pounds: 121
```


In normal use however, R will print to the console an object returned by a function or operation *unless* we assign it to a variable. Remember, to view a variable just type the name of the variable and hit return


```r
string
```

```
## [1] "weight in pounds: 121"
```


We can also change an object's value by assigning it a new value:


```r
weight_kg <- 57.5
# weight in kilograms is now
weight_kg
```

```
## [1] 57.5
```


If we imagine the variable as a sticky note with a name written on it, 
assignment is like putting the sticky note on a particular value
This means that assigning a value to one object does not change the values of other variables. 
For example, let's store the subject's weight in pounds in a variable


```r
weight_lb <- 2.2 * weight_kg
# weight in kg...
weight_kg
```

```
## [1] 57.5
```

```r
# ...and in pounds
weight_lb
```

```
## [1] 126.5
```


and then change `weight_kg`:


```r
weight_kg <- 100
# weight in kg now...
weight_kg
```

```
## [1] 100
```

```r
# ...and in weight pounds still
weight_lb
```

```
## [1] 126.5
```


__Updating a Variable__

Since `weight_lb` doesn't "remember" where its value came from, it isn't automatically updated when `weight_kg` changes. 
This is different from the way spreadsheets work.

__Challenges__

Draw diagrams showing what variables refer to what values after each statement in the following program:


```r
mass <- 47.5
age <- 122
mass <- mass * 2
age <- age - 20
```


We can also add to variable that are vectors, and update them by making them longer. 
For example, if we are creating a vector of patient weights, we could update that vector using `c()`. `c()` takes any number of vectors as arguments, and combines or *concatenates* them, in the order supplied, into a single vector.


```r
weights <- 100
weights <- c(weights, 80)
```


What happens here is that we take the original vector weights, and we are adding the second item to the end of the first one. We can do this over and over again to build a vector or a dataset. As we program, this may be useful to autoupdate results that we are collecting or calculating.

Now that we know how to assign things to variables, let's re-run `read.csv` and save its result:


```r
dat <- read.csv("data/inflammation-01.csv", header = FALSE)
```


This statement doesn't produce any output because assignment doesn't display anything. If we want to check that our data has been loaded, we can print the variable's value:


```r
dat
```

```
##    V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19 V20
## 1   0  0  1  3  1  2  4  7  8   3   3   3  10   5   7   4   7   7  12  18
## 2   0  1  2  1  2  1  3  2  2   6  10  11   5   9   4   4   7  16   8   6
## 3   0  1  1  3  3  2  6  2  5   9   5   7   4   5   4  15   5  11   9  10
## 4   0  0  2  0  4  2  2  1  6   7  10   7   9  13   8   8  15  10  10   7
## 5   0  1  1  3  3  1  3  5  2   4   4   7   6   5   3  10   8  10   6  17
## 6   0  0  1  2  2  4  2  1  6   4   7   6   6   9   9  15   4  16  18  12
## 7   0  0  2  2  4  2  2  5  5   8   6   5  11   9   4  13   5  12  10   6
## 8   0  0  1  2  3  1  2  3  5   3   7   8   8   5  10   9  15  11  18  19
## 9   0  0  0  3  1  5  6  5  5   8   2   4  11  12  10  11   9  10  17  11
## 10  0  1  1  2  1  3  5  3  5   8   6   8  12   5  13   6  13   8  16   8
## 11  0  1  0  0  4  3  3  5  5   4   5   8   7  10  13   3   7  13  15  18
## 12  0  1  0  0  3  4  2  7  8   5   2   8  11   5   5   8  14  11   6  11
## 13  0  0  2  1  4  3  6  4  6   7   9   9   3  11   6  12   4  17  13  15
## 14  0  0  0  0  1  3  1  6  6   5   5   6   3   6  13   3  10  13   9  16
## 15  0  1  2  1  1  1  4  1  5   2   3   3  10   7  13   5   7  17   6   9
## 16  0  1  1  0  1  2  4  3  6   4   7   5   5   7   5  10   7   8  18  17
## 17  0  0  0  0  2  3  6  5  7   4   3   2  10   7   9  11  12   5  12   9
## 18  0  0  0  1  2  1  4  3  6   7   4   2  12   6  12   4  14   7   8  14
## 19  0  0  2  1  2  5  4  2  7   8   4   7  11   9   8  11  15  17  11  12
## 20  0  1  2  0  1  4  3  2  2   7   3   3  12  13  11  13   6   5   9  16
## 21  0  1  1  3  1  4  4  1  8   2   2   3  12  12  10  15  13   6   5   5
## 22  0  0  2  3  2  3  2  6  3   8   7   4   6   6   9   5  12  12   8   5
## 23  0  0  0  3  4  5  1  7  7   8   2   5  12   4  10  14   5   5  17  13
## 24  0  1  1  1  1  3  3  2  6   3   9   7   8   8   4  13   7  14  11  15
## 25  0  1  1  1  2  3  5  3  6   3   7  10   3   8  12   4  12   9  15   5
## 26  0  0  2  1  3  3  2  7  4   4   3   8  12   9  12   9   5  16   8  17
## 27  0  0  1  2  4  2  2  3  5   7  10   5   5  12   3  13   4  13   7  15
## 28  0  0  1  1  1  5  1  5  2   2   4  10   4   8  14   6  15   6  12  15
## 29  0  0  2  2  3  4  6  3  7   6   4   5   8   4   7   7   6  11  12  19
## 30  0  0  0  1  4  4  6  3  8   6   4  10  12   3   3   6   8   7  17  16
## 31  0  1  1  0  3  2  4  6  8   6   2   3  11   3  14  14  12   8   8  16
## 32  0  0  2  3  3  4  5  3  6   7  10   5  10  13  14   3   8  10   9   9
## 33  0  1  2  2  2  3  6  6  6   7   6   3  11  12  13  15  15  10  14  11
## 34  0  0  2  1  3  5  6  7  5   8   9   3  12  10  12   4  12   9  13  10
## 35  0  0  1  2  4  1  5  5  2   3   4   8   8  12   5  15   9  17   7  19
## 36  0  0  0  3  1  3  6  4  3   4   8   3   4   8   3  11   5   7  10   5
## 37  0  1  2  2  2  5  5  1  4   6   3   6   5   9   6   7   4   7  16   7
## 38  0  1  1  2  3  1  5  1  2   2   5   7   6   6   5  10   6   7  17  13
## 39  0  1  0  3  2  4  1  1  5   9  10   7  12  10   9  15  12  13  13   6
## 40  0  1  1  3  1  1  5  5  3   7   2   2   3  12   4   6   8  15  16  16
## 41  0  0  0  2  2  1  3  4  5   5   6   5   5  12  13   5   7   5  11  15
## 42  0  0  1  3  3  1  2  1  8   9   2   8  10   3   8   6  10  13  11  17
## 43  0  1  1  3  4  5  2  1  3   7   9   6  10   5   8  15  11  12  15   6
## 44  0  0  1  3  1  4  3  6  7   8   5   7  11   3   6  11   6  10   6  19
## 45  0  1  1  3  3  4  4  6  3   4   9   9   7   6   8  15  12  15   6  11
## 46  0  1  2  2  4  3  1  4  8   9   5  10  10   3   4   6   7  11  16   6
## 47  0  0  2  3  4  5  4  6  2   9   7   4   9  10   8  11  16  12  15  17
## 48  0  1  1  3  1  4  6  2  8   2  10   3  11   9  13  15   5  15   6  10
## 49  0  0  1  3  2  5  1  2  7   6   6   3  12   9   4  14   4   6  12   9
## 50  0  0  1  2  3  4  5  7  5   4  10   5  12  12   5   4   7   9  18  16
## 51  0  1  2  1  1  3  5  3  6   3  10  10  11  10  13  10  13   6   6  14
## 52  0  1  2  2  3  5  2  4  5   6   8   3   5   4   3  15  15  12  16   7
## 53  0  0  0  2  4  4  5  3  3   3  10   4   4   4  14  11  15  13  10  14
## 54  0  0  2  1  1  4  4  7  2   9   4  10  12   7   6   6  11  12   9  15
## 55  0  1  2  1  1  4  5  4  4   5   9   7  10   3  13  13   8   9  17  16
## 56  0  0  1  3  2  3  6  4  5   7   2   4  11  11   3   8   8  16   5  13
## 57  0  1  1  2  2  5  1  7  4   2   5   5   4   6   6   4  16  11  14  16
## 58  0  1  1  1  4  1  6  4  6   3   6   5   6   4  14  13  13   9  12  19
## 59  0  0  0  1  4  5  6  3  8   7   9  10   8   6   5  12  15   5  10   5
## 60  0  0  1  0  3  2  5  4  8   2   9   3   3  10  12   9  14  11  13   8
##    V21 V22 V23 V24 V25 V26 V27 V28 V29 V30 V31 V32 V33 V34 V35 V36 V37 V38
## 1    6  13  11  11   7   7   4   6   8   8   4   4   5   7   3   4   2   3
## 2   18   4  12   5  12   7  11   5  11   3   3   5   4   4   5   5   1   1
## 3   19  14  12  17   7  12  11   7   4   2  10   5   4   2   2   3   2   2
## 4   17   4   4   7   6  15   6   4   9  11   3   5   6   3   3   4   2   3
## 5    9  14   9   7  13   9  12   6   7   7   9   6   3   2   2   4   2   0
## 6   12   5  18   9   5   3  10   3  12   7   8   4   7   3   5   4   4   3
## 7    9  17  15   8   9   3  13   7   8   2   8   8   4   2   3   5   4   1
## 8   20   8   5  13  15  10   6  10   6   7   4   9   3   5   2   5   3   2
## 9    6  16  12   6   8  14   6  13  10  11   4   6   4   7   6   3   2   1
## 10  18  15  16  14  12   7   3   8   9  11   2   5   4   5   1   4   1   2
## 11   8  15  15  16  11  14  12   4  10  10   4   3   4   5   5   3   3   2
## 12   9  16  18   6  12   5   4   3   5   7   8   3   5   4   5   5   4   0
## 13  13  12   8   7   4   7  12   9   5   6   5   4   7   3   5   4   2   3
## 14  15   9  11   4   6   4  11  11  12   3   5   8   7   4   6   4   1   3
## 15  12  13  10   4  12   4   6   7   6  10   8   2   5   1   3   4   2   0
## 16   9   8  12  11  11  11  14   6  11   2  10   9   5   6   5   3   4   2
## 17  13  19  14  17   5  13   8  11   5  10   9   8   7   5   3   1   4   0
## 18  13  19   6   9  12   6   4  13   6   7   2   3   6   5   4   2   3   0
## 19   7  12   7   6   7   4  13   5   7   6   6   9   2   1   1   2   2   0
## 20   9  19  16  11   8   9  14  12  11   9   6   6   6   1   1   2   4   3
## 21  18  19   9   6  11  12   7   6   3   6   3   2   4   3   1   5   4   2
## 22  12  10  16   7  14  12   5   4   6   9   8   5   6   6   1   4   3   0
## 23  16  15  13   6  12   9  10   3   3   7   4   4   8   2   6   5   1   0
## 24  14  13   5  13   7  14   9  10   5  11   5   3   5   1   1   4   4   1
## 25  17  16   5  10  10  15   7   5   3  11   5   5   6   1   1   1   1   0
## 26   7  11  14   7  13  11   7  12  12   7   8   5   7   2   2   4   1   1
## 27   9  12  18  14  16  12   3  11   3   2   7   4   8   2   2   1   3   0
## 28  15  13   7  17   4   5  11   4   8   7   9   4   5   3   2   5   4   3
## 29  20  18   9   5   4   7  14   8   4   3   7   7   8   3   5   4   1   3
## 30  14  15  17   4  14  13   4   4  12  11   6   9   5   5   2   5   2   1
## 31  13   7   6   9  15   7   6   4  10   8  10   4   2   6   5   5   2   3
## 32  19  15  15   6   8   8  11   5   5   7   3   6   6   4   5   2   2   3
## 33  11   8   6  12  10   5  12   7   7  11   5   8   5   2   5   5   2   0
## 34  10   6  10  11   4  15  13   7   3   4   2   9   7   2   4   2   1   2
## 35  14  18  12  17  14   4  13  13   8  11   5   6   6   2   3   5   2   1
## 36  15   9  16  17  16   3   8   9   8   3   3   9   5   1   6   5   4   2
## 37  16  13   9  16  12   6   7   9  10   3   6   4   5   4   6   3   4   3
## 38  15  16  17  14   4   4  10  10  10  11   9   9   5   4   4   2   1   0
## 39  19   9  10   6  13   5  13   6   7   2   5   5   2   1   1   1   1   3
## 40  15   4  14   5  13  10   7  10   6   3   2   3   6   3   3   5   4   3
## 41  18   7   9  10  14  12  11   9  10   3   2   9   6   2   2   5   3   0
## 42  19   6   4  11   6  12   7   5   5   4   4   8   2   6   6   4   2   2
## 43  12  16   6   4  14   3  12   9   6  11   5   8   5   5   6   1   2   1
## 44  18  14   6  10   7   9   8   5   8   3  10   2   5   1   5   4   2   1
## 45   6  18   5  14  15  12   9   8   3   6  10   6   8   7   2   5   4   3
## 46  14   9  11  10  10   7  10   8   8   4   5   8   4   4   5   2   4   1
## 47  19  10  18  13  15  11   8   4   7  11   6   7   6   5   1   3   1   0
## 48  10   5  14  15  12   7   4   5  11   4   6   9   5   6   1   1   2   1
## 49  12   7  11   7  16   8  13   6   7   6  10   7   6   3   1   5   4   3
## 50  16  10  15  15  10   4   3   7   5   9   4   6   2   4   1   4   2   2
## 51   5   4   5   5   9   4  12   7   7   4   7   9   3   3   6   3   4   1
## 52  20  15  12   8   9   6  12   5   8   3   8   5   4   1   3   2   1   3
## 53  11  17   9  11  11   7  10  12  10  10  10   8   7   5   2   2   4   1
## 54  15   6   6  13   5  12   9   6   4   7   7   6   5   4   1   4   2   2
## 55  16  15  12  13   5  12  10   9  11   9   4   5   5   2   2   5   1   0
## 56  16   5   8   8   6   9  10  10   9   3   3   5   3   5   4   5   3   3
## 57  14  14   8  17   4  14  13   7   6   3   7   7   5   6   3   4   2   2
## 58   9  10  15  10   9  10  10   7   5   6   8   6   6   4   3   5   2   1
## 59   8  13  18  17  14   9  13   4  10  11  10   8   8   6   5   5   2   0
## 60   6  18  11   9  13  11   8   5   5   2   8   5   3   5   4   1   3   1
##    V39 V40
## 1    0   0
## 2    0   1
## 3    1   1
## 4    2   1
## 5    1   1
## 6    2   1
## 7    1   1
## 8    2   1
## 9    0   0
## 10   0   0
## 11   2   1
## 12   1   1
## 13   0   1
## 14   0   0
## 15   2   0
## 16   2   0
## 17   2   1
## 18   1   0
## 19   1   0
## 20   1   1
## 21   2   0
## 22   2   0
## 23   1   0
## 24   2   0
## 25   2   1
## 26   1   0
## 27   1   1
## 28   2   1
## 29   1   0
## 30   0   1
## 31   2   1
## 32   0   0
## 33   2   1
## 34   1   1
## 35   1   1
## 36   2   0
## 37   2   1
## 38   1   0
## 39   0   1
## 40   2   1
## 41   0   1
## 42   0   0
## 43   2   0
## 44   0   1
## 45   1   1
## 46   1   0
## 47   0   0
## 48   2   1
## 49   0   0
## 50   2   1
## 51   2   0
## 52   1   0
## 53   2   1
## 54   2   1
## 55   0   1
## 56   0   1
## 57   1   1
## 58   1   1
## 59   2   0
## 60   1   0
```


For large data sets it is convenient to use the `head()` to display the first few rows of data


```r
head(dat)
```

```
##   V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19 V20
## 1  0  0  1  3  1  2  4  7  8   3   3   3  10   5   7   4   7   7  12  18
## 2  0  1  2  1  2  1  3  2  2   6  10  11   5   9   4   4   7  16   8   6
## 3  0  1  1  3  3  2  6  2  5   9   5   7   4   5   4  15   5  11   9  10
## 4  0  0  2  0  4  2  2  1  6   7  10   7   9  13   8   8  15  10  10   7
## 5  0  1  1  3  3  1  3  5  2   4   4   7   6   5   3  10   8  10   6  17
## 6  0  0  1  2  2  4  2  1  6   4   7   6   6   9   9  15   4  16  18  12
##   V21 V22 V23 V24 V25 V26 V27 V28 V29 V30 V31 V32 V33 V34 V35 V36 V37 V38
## 1   6  13  11  11   7   7   4   6   8   8   4   4   5   7   3   4   2   3
## 2  18   4  12   5  12   7  11   5  11   3   3   5   4   4   5   5   1   1
## 3  19  14  12  17   7  12  11   7   4   2  10   5   4   2   2   3   2   2
## 4  17   4   4   7   6  15   6   4   9  11   3   5   6   3   3   4   2   3
## 5   9  14   9   7  13   9  12   6   7   7   9   6   3   2   2   4   2   0
## 6  12   5  18   9   5   3  10   3  12   7   8   4   7   3   5   4   4   3
##   V39 V40
## 1   0   0
## 2   0   1
## 3   1   1
## 4   2   1
## 5   1   1
## 6   2   1
```


__BREAK__
* Make sure everyone has imported the data
* How many rows and columns there are
* What kind of data type is it?

## Manipulating Data

Now that our data is in memory, we can start doing things with it. 
First, let's ask what type of thing `dat` *is*:


```r
class(dat)
```

```
## [1] "data.frame"
```

```r
str(dat)
```

```
## 'data.frame':	60 obs. of  40 variables:
##  $ V1 : int  0 0 0 0 0 0 0 0 0 0 ...
##  $ V2 : int  0 1 1 0 1 0 0 0 0 1 ...
##  $ V3 : int  1 2 1 2 1 1 2 1 0 1 ...
##  $ V4 : int  3 1 3 0 3 2 2 2 3 2 ...
##  $ V5 : int  1 2 3 4 3 2 4 3 1 1 ...
##  $ V6 : int  2 1 2 2 1 4 2 1 5 3 ...
##  $ V7 : int  4 3 6 2 3 2 2 2 6 5 ...
##  $ V8 : int  7 2 2 1 5 1 5 3 5 3 ...
##  $ V9 : int  8 2 5 6 2 6 5 5 5 5 ...
##  $ V10: int  3 6 9 7 4 4 8 3 8 8 ...
##  $ V11: int  3 10 5 10 4 7 6 7 2 6 ...
##  $ V12: int  3 11 7 7 7 6 5 8 4 8 ...
##  $ V13: int  10 5 4 9 6 6 11 8 11 12 ...
##  $ V14: int  5 9 5 13 5 9 9 5 12 5 ...
##  $ V15: int  7 4 4 8 3 9 4 10 10 13 ...
##  $ V16: int  4 4 15 8 10 15 13 9 11 6 ...
##  $ V17: int  7 7 5 15 8 4 5 15 9 13 ...
##  $ V18: int  7 16 11 10 10 16 12 11 10 8 ...
##  $ V19: int  12 8 9 10 6 18 10 18 17 16 ...
##  $ V20: int  18 6 10 7 17 12 6 19 11 8 ...
##  $ V21: int  6 18 19 17 9 12 9 20 6 18 ...
##  $ V22: int  13 4 14 4 14 5 17 8 16 15 ...
##  $ V23: int  11 12 12 4 9 18 15 5 12 16 ...
##  $ V24: int  11 5 17 7 7 9 8 13 6 14 ...
##  $ V25: int  7 12 7 6 13 5 9 15 8 12 ...
##  $ V26: int  7 7 12 15 9 3 3 10 14 7 ...
##  $ V27: int  4 11 11 6 12 10 13 6 6 3 ...
##  $ V28: int  6 5 7 4 6 3 7 10 13 8 ...
##  $ V29: int  8 11 4 9 7 12 8 6 10 9 ...
##  $ V30: int  8 3 2 11 7 7 2 7 11 11 ...
##  $ V31: int  4 3 10 3 9 8 8 4 4 2 ...
##  $ V32: int  4 5 5 5 6 4 8 9 6 5 ...
##  $ V33: int  5 4 4 6 3 7 4 3 4 4 ...
##  $ V34: int  7 4 2 3 2 3 2 5 7 5 ...
##  $ V35: int  3 5 2 3 2 5 3 2 6 1 ...
##  $ V36: int  4 5 3 4 4 4 5 5 3 4 ...
##  $ V37: int  2 1 2 2 2 4 4 3 2 1 ...
##  $ V38: int  3 1 2 3 0 3 1 2 1 2 ...
##  $ V39: int  0 0 1 2 1 2 1 2 0 0 ...
##  $ V40: int  0 1 1 1 1 1 1 1 0 0 ...
```


The output tells us that data currently is a data frame in R. 
This is similar to a spreadsheet in MS Excel, that many of us are familiar with using.

### data frames
<!-- FIXME: Repeats verbatim the 00-first-timers/.Rmd content. Keep? -->
The *de facto* data structure for most tabular data and what we use for statistics.

Data frames can have additional attributes such as `rownames()`, which can be useful for annotating data, like `subject_id` or `sample_id`. But most of the time they are not used.

Some additional information on data frames:

* Usually created by `read.csv()` and `read.table()`.
* Can convert to matrix with `data.matrix()` (preferred) or `as.matrix()`
* Coercion will be forced and not always what you expect.
* Can also create with `data.frame()` function.
* Find the number of rows and columns with `nrow(dat)` and `ncol(dat)`, respectively.
* Rownames are usually 1, 2, ..., n.

#### Useful data frame functions

* `head()` - shown first 6 rows
* `tail()` - show last 6 rows
* `dim()` - returns the dimensions
* `nrow()` - number of rows
* `ncol()` - number of columns
* `str()` - structure of each column
* `names()` - shows the `names` attribute for a data frame, which gives the column names.

`str` output tells us the dimensions and the data types (int is integer) of each column.

We can see what its shape is like this:


```r
dim(dat)
```

```
## [1] 60 40
```

```r
nrow(dat)
```

```
## [1] 60
```

```r
ncol(dat)
```

```
## [1] 40
```


This tells us that data has 60 rows and 40 columns.

### Indexing

If we want to get a single value from the data frame, we must provide an row and column indices for the value we want in square brackets:


```r
# first value in dat
dat[1, 1]
```

```
## [1] 0
```

```r
# middle value in dat
dat[30, 20]
```

```
## [1] 16
```


R indexes starting at 1. Programming languages like Fortran, MATLAB, and R start counting at 1, because that's what human beings have done for thousands of years. 
Languages in the C family (including C++, Java, Perl, and Python) count from 0 because that's simpler for computers to do. 

An index like `[30, 20]` selects a single element of data frame, but we can select whole sections as well. 
For example, we can select the first ten days (columns) of values for the first four patients (rows) like this:


```r
dat[1:4, 1:10]
```

```
##   V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
## 1  0  0  1  3  1  2  4  7  8   3
## 2  0  1  2  1  2  1  3  2  2   6
## 3  0  1  1  3  3  2  6  2  5   9
## 4  0  0  2  0  4  2  2  1  6   7
```


The notation `1:4` means, "Start at index 1 and go to index 4." 
We don't start slices at 0:


```r
dat[5:10, 0:10]
```

```
##    V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
## 5   0  1  1  3  3  1  3  5  2   4
## 6   0  0  1  2  2  4  2  1  6   4
## 7   0  0  2  2  4  2  2  5  5   8
## 8   0  0  1  2  3  1  2  3  5   3
## 9   0  0  0  3  1  5  6  5  5   8
## 10  0  1  1  2  1  3  5  3  5   8
```


and we don't have to take all the values in the slice, we can use `c()` to select certain values or groups of values:


```r
dat[c(1:10, 20:30), c(1:10, 20:30)]
```

```
##    V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V20 V21 V22 V23 V24 V25 V26 V27 V28 V29
## 1   0  0  1  3  1  2  4  7  8   3  18   6  13  11  11   7   7   4   6   8
## 2   0  1  2  1  2  1  3  2  2   6   6  18   4  12   5  12   7  11   5  11
## 3   0  1  1  3  3  2  6  2  5   9  10  19  14  12  17   7  12  11   7   4
## 4   0  0  2  0  4  2  2  1  6   7   7  17   4   4   7   6  15   6   4   9
## 5   0  1  1  3  3  1  3  5  2   4  17   9  14   9   7  13   9  12   6   7
## 6   0  0  1  2  2  4  2  1  6   4  12  12   5  18   9   5   3  10   3  12
## 7   0  0  2  2  4  2  2  5  5   8   6   9  17  15   8   9   3  13   7   8
## 8   0  0  1  2  3  1  2  3  5   3  19  20   8   5  13  15  10   6  10   6
## 9   0  0  0  3  1  5  6  5  5   8  11   6  16  12   6   8  14   6  13  10
## 10  0  1  1  2  1  3  5  3  5   8   8  18  15  16  14  12   7   3   8   9
## 20  0  1  2  0  1  4  3  2  2   7  16   9  19  16  11   8   9  14  12  11
## 21  0  1  1  3  1  4  4  1  8   2   5  18  19   9   6  11  12   7   6   3
## 22  0  0  2  3  2  3  2  6  3   8   5  12  10  16   7  14  12   5   4   6
## 23  0  0  0  3  4  5  1  7  7   8  13  16  15  13   6  12   9  10   3   3
## 24  0  1  1  1  1  3  3  2  6   3  15  14  13   5  13   7  14   9  10   5
## 25  0  1  1  1  2  3  5  3  6   3   5  17  16   5  10  10  15   7   5   3
## 26  0  0  2  1  3  3  2  7  4   4  17   7  11  14   7  13  11   7  12  12
## 27  0  0  1  2  4  2  2  3  5   7  15   9  12  18  14  16  12   3  11   3
## 28  0  0  1  1  1  5  1  5  2   2  15  15  13   7  17   4   5  11   4   8
## 29  0  0  2  2  3  4  6  3  7   6  19  20  18   9   5   4   7  14   8   4
## 30  0  0  0  1  4  4  6  3  8   6  16  14  15  17   4  14  13   4   4  12
##    V30
## 1    8
## 2    3
## 3    2
## 4   11
## 5    7
## 6    7
## 7    2
## 8    7
## 9   11
## 10  11
## 20   9
## 21   6
## 22   9
## 23   7
## 24  11
## 25  11
## 26   7
## 27   2
## 28   7
## 29   3
## 30  11
```


Here we have taken rows and columns 1 through 10 and 20 through 30.


```r
dat[seq(1, 12, 3), seq(1, 20, 3)]
```

```
##    V1 V4 V7 V10 V13 V16 V19
## 1   0  3  4   3  10   4  12
## 4   0  0  2   7   9   8  10
## 7   0  2  2   8  11  13  10
## 10  0  2  5   8  12   6  16
```


Here we have used the built-in function `seq()` to take regularly spaced rows and columns.
For example, we have taken rows 1, 4, 7, and 10, and columns 1, 4, 7, 10, 13, 16, and 19. 
(Again, we always include the lower bound, but stop when we reach or cross the upper bound.).
Remember, `1:10` is shorthand for `seq(from = 1, to = 10, by = 1)`.

If we want to know the average inflammation for all patients on all days, we cannot directly take the mean of a data frame. But we can take it from a matrix.

### Matrix
<!-- FIXME: Repeats verbatim the 00-first-timers/.Rmd content. Keep? -->
Matrices are a special vector in R. They are not a separate type of object but simply an atomic vector with dimensions; the number of rows and columns.


```r
m <- matrix(nrow = 2, ncol = 2)
m
```

```
##      [,1] [,2]
## [1,]   NA   NA
## [2,]   NA   NA
```

```r
dim(m)
```

```
## [1] 2 2
```


Matrices are filled column-wise.


```r
m <- matrix(1:6, nrow = 2, ncol = 3)
```


Other ways to construct a matrix


```r
m <- 1:10
dim(m) <- c(2, 5)
```


This takes a vector and transform into a matrix with 2 rows and 5 columns.

Another way is to bind columns or rows using `cbind()` and `rbind()`.


```r
x <- 1:3
y <- 10:12
cbind(x, y)
```

```
##      x  y
## [1,] 1 10
## [2,] 2 11
## [3,] 3 12
```

```r
rbind(x, y)
```

```
##   [,1] [,2] [,3]
## x    1    2    3
## y   10   11   12
```


You can also use the `byrow` argument to specify how the matrix is filled. From R's own documentation:


```r
mdat <- matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE)
mdat
```

```
##      [,1] [,2] [,3]
## [1,]    1    2    3
## [2,]   11   12   13
```


Lets convert our data frame to a matrix, but give it a new name:


```r
mat <- data.matrix(dat)
```


And then take the mean of all the values:


```r
mean(mat)
```

```
## [1] 6.149
```


There are lots of useful built-in commands that we can use in R:


```r
paste("maximum inflammation:", max(mat))
```

```
## [1] "maximum inflammation: 20"
```

```r
paste("minimum inflammation:", min(mat))
```

```
## [1] "minimum inflammation: 0"
```

```r
paste("standard deviation:", sd(mat))
```

```
## [1] "standard deviation: 4.61479471285207"
```


When analyzing data, though, we often want to look at partial statistics, such as the maximum value per patient or the average value per day. 
One way to do this is to select the data we want to create a new temporary array, then ask it to do the calculation:


```r
patient_1 <- dat[1, ]  # first row, all of the columns
max(patient_1)  # max inflammation for patient 1
```

```
## [1] 18
```


We don't actually need to store the row in a variable of its own. 
Instead, we can combine the selection and the method call:


```r
max(dat[2, ])  # max inflammation for patient 2
```

```
## [1] 18
```


__EXERCISES__

1. If `dat` holds our data frame of patient data, what does `dat[3:3, 4:4]` produce? 
What about `dat[3:3, 4:1]`? Explain the results to the person sitting next to you


## Functions - Operations Across Axes

What if we need the maximum inflammation for all patients, or the average for each day? 
As the diagram below shows, we want to perform the operation across an axis:

<!-- FIXME: needs I presume the rBlocks code here to produce the figure? -->

To support this, in R we can use the `apply()` function:


```r
help(apply)  # r ?apply
```


`apply()` allows us to repeat a function on all of the rows (`MARGIN = 1`), columns (`2`), or both(`1:2`) of a matrix (or higher dimensions of an array).

If each row is a patient, and we want to know each patient's average inflammation, we will need to iterate our method across all of the rows. 
	

```r
avg_inflammation <- apply(dat, 2, mean)
```


Some operations, such as the column-wise means have more efficient alternatives. For example `rowMeans()` and `colMeans()`.

```r
colMeans(dat)
```

```
##      V1      V2      V3      V4      V5      V6      V7      V8      V9 
##  0.0000  0.4500  1.1167  1.7500  2.4333  3.1500  3.8000  3.8833  5.2333 
##     V10     V11     V12     V13     V14     V15     V16     V17     V18 
##  5.5167  5.9500  5.9000  8.3500  7.7333  8.3667  9.5000  9.5833 10.6333 
##     V19     V20     V21     V22     V23     V24     V25     V26     V27 
## 11.5667 12.3500 13.2500 11.9667 11.0333 10.1667 10.0000  8.6667  9.1500 
##     V28     V29     V30     V31     V32     V33     V34     V35     V36 
##  7.2500  7.3333  6.5833  6.0667  5.9500  5.1167  3.6000  3.3000  3.5667 
##     V37     V38     V39     V40 
##  2.4833  1.5000  1.1333  0.5667
```


### Challenge  
1. Find the maximum and minimum values for inflammation at each day (rows are patients, and columns are days).
2. Save these values to a varible.
3. What is the length of your new variable?




We can also create a vector of our study days (the number of columns in data)


```r
tempo <- 1:40
# r
tempo <- 1:ncol(dat)
```


Notice that the object was named `tempo` instead of `time`. `time` is a R built-in function, and as good practice avoid giving existing function names to your objects. 

Now that we have all this summary information, we can put it back together into a data frame that we can use for further analysis and plotting, provided they are the same length.


```r
d.summary <- data.frame(tempo, avg_inflammation, min_inflammation, max_inflammation)
```


## Plotting  
The mathematician Richard Hamming once said

> The purpose of computing is insight, not numbers

and the best way to develop insight is often to visualize data. Visualization deserves an entire lecture (or course) of its own, but we can explore a few features of R's base plotting package. 

Lets use the average inflammation data that we saved and plot it over the study time. 


```r
plot(tempo, avg_inflammation)
```

![plot of chunk plot-avg-inflammation](figure/01-starting-with-data-plot-avg-inflammation.png) 


The result is roughly a linear rise and fall, which is suspicious: based on other studies, we expect a sharper rise and slower fall. Let's have a look at two other statistics:


```r
plot(tempo, max_inflammation)
```

![plot of chunk plot-max-inflammation](figure/01-starting-with-data-plot-max-inflammation.png) 



```r
plot(tempo, min_inflammation)
```

![plot of chunk plot-min-inflammation](figure/01-starting-with-data-plot-min-inflammation.png) 

The maximum value rises and falls perfectly smoothly, while the minimum seems to be a step function. Neither result seems particularly likely, so either there's a mistake in our calculations or something is wrong with our data.

__EXERCISES__

1. Create a plot showing the standard deviation of the inflammation data 
for each day across all patients.

## Key Points

* Import a package into your workspace using `library("pkgname")`.
* The key data types in R?
* Use `variable <- value` to assign a value to a variable in order to record it in memory.
* Objects are created on demand whenever a value is assigned to them.
* Use `print(something)` (or just `something`) to display `something`.
* The expression `dim()` gives the dimensions of a data frame or matrix.
* Use `object[x, y]` to select a single element from an array.
* Object indices start at 1.
* Use `from:to` to specify a sequence that includes the indices from `from` to `to`.
* Use `#` to add comments to programs.
* Use `mean()`, `max()`, `min()` and `sd()` to calculate simple statistics.
* Update vectors using `c()`
<!-- * Write a simple for loop -->
* Use base R to create simple visualizations.

## Next Steps

Our work so far has convinced us that something's wrong with our first data file. We would like to check the other 11 the same way, but typing in the same commands repeatedly is tedious and error-prone. Since computers don't get bored (that we know of), we should create a way to do a complete analysis with a single command, and then figure out how to repeat that step once for each file. These operations are the subjects of the next two lessons.

---
layout: lesson
root: ../..
---




# Creating Functions

If we only had one data set to analyze, it would probably be faster to load the file into a spreadsheet and use that to plot some simple statistics. 
But we have twelve files to check, and may have more in future. In this lesson, we'll learn how to write a function so that we can repeat several operations with a single command.

## Objectives

* Define a function that takes arguments (parameters).
* Return a value from a function.
* Test and debug a function.
* Explain what a call stack is, and trace changes to the call stack as functions are called.
* Set default values for function parameters.
* Explain why we should divide programs into small, single-purpose functions.
* Defining a function

Let's start by defining a function `fahr_to_kelvin()` that converts temperatures from Fahrenheit to Kelvin:


```r
fahr_to_kelvin <- function(temp) {
    kelvin <- ((temp - 32) * (5/9)) + 273.15
    kelvin
}
```


The definition opens with the name of your new function, which is followed by the call to make it a `function()` and a parenthesized list of arguments. You can have as many input parameters as you would like (but too many might be bad style). The body, or implementation, is surrounded by curly braces `{ }`. In many languages, the body of the function - the statements that are executed when it runs - must be indented, typically using 4 spaces. While this is not a mandatory requirement in R coding, we strongly recommend you to adopt this as good practice.

When we call the function, the values we pass to it are assigned to those variables so that we can use them inside the function. The last line within the function is what R will evaluate as a returning value. Remember that the last line has to be a command that will print to the screen, and not an object definition, otherwise the function will return nothing - it will work, but will provide no output. For example, let's try running our function. Calling our own function is no different from calling any other function:


```r
fahr_to_kelvin(32)
```

```
## [1] 273.1
```

```r
paste("boiling point of water:", fahr_to_kelvin(212))
```

```
## [1] "boiling point of water: 373.15"
```


We've successfully called the function that we defined, and we have access to the value that we returned. However, it the function was redefined as follows


```r
fahr_to_kelvin <- function(temp) {
    kelvin <- ((temp - 32) * (5/9)) + 273.15
}
```


Now typing


```r
fahr_to_kelvin(32)
```


Will return nothing. Why?

--> In Python lessons, now would come debugging…
==============================


## Composing Functions

Now that we've seen how to turn Fahrenheit into Kelvin, it's easy to turn Kelvin into Celsius:


```r
kelvin_to_celsius <- function(temp) {
    celsius <- temp - 273.15
    celsius
}

paste("absolute zero in Celsius:", kelvin_to_celsius(0))
```

```
## [1] "absolute zero in Celsius: -273.15"
```


What about converting Fahrenheit to Celsius? We could write out the formula, but we don't need to. Instead, we can compose the two functions we have already created:


```r
fahr_to_celsius <- function(temp) {
    temp_k <- fahr_to_kelvin(temp)
    result <- kelvin_to_celsius(temp_k)
    result
}

paste("freezing point of water in Celsius:", fahr_to_celsius(32))
```

```
## [1] "freezing point of water in Celsius: 0"
```


This is our first taste of how larger programs are built: we define basic operations, then combine them in ever-large chunks to get the effect we want. 
Real-life functions will usually be larger than the ones shown here - typically half a dozen to a few dozen lines - but they shouldn't ever be much longer than that, or the next person who reads it won't be able to understand what's going on. __Modular programming__


### Challenges

As we've seen in our print statements, we can use `paste` to concatenate strings, `paste(a, b, sep = "")` is `ab`. __Note__: the `sep` can be an important value to define! What is the default? What can `sep` be?

1. Write a function called `fence` that takes two arguments called `original` and `wrapper` and returns a new string that has the `wrapper` character at the beginning and end of the `original`:





```r
fence("name", "*")
```

```
## [1] "*name*"
```


## String splits

If the variable s refers to a string, then we can parse the string into its separate components - each of the characters. Base R has a function called `strsplit` that can be used to break up strings, into smaller chunks. 


```r
pangram <- "the quick brown fox jumps over the lazy dog"
strsplit(pangram, " ")
```

```
## [[1]]
## [1] "the"   "quick" "brown" "fox"   "jumps" "over"  "the"   "lazy"  "dog"
```

                
The output from strsplit is in a list. 
Notice that the unusual first line of `strsplit()`’s output consists of `[[1]]`. 
Similar to the way that R displays vectors, `[[1]]` means that R is showing the first element of a list. 
Lists are extremely important concepts in R; they allow you to combine all kinds of variables.
For example, a list can be made up of many elements, and elements could be vectors, data frames, matrices, or further lists. 

In this example, this list has only a single element. Yes, that’s right: The list has one element, but that element is a vector.

To extract an element from a list, you have to use double square brackets: `[[`. 
Split your pangram into words, and assign the first element to a new variable called words, using double-square-brackets `[[]]` subsetting, as follows:


```r
words <- strsplit(pangram, " ")[[1]]
```


We can then pull out the different words using indexing, where `words[1]` is the first element in the vector of `words` and `words[9]` would be the last:


```r
words[2]
```

```
## [1] "quick"
```

```r
words[9]
```

```
## [1] "dog"
```


1. Write a function `out()` that returns a string made up of just the first and last characters of its input.
    a. Outline the steps you need to take to write this function. Discuss with the person sitting next you.
    b. Write part of the code, make sure it works.
    c. Write the next step.
    d. Test your function.
    e. Can your function handle words of different lengths?


```r
out <- function(word) {
    letter <- strsplit(word, "")[[1]]
    abbrev <- paste(letter[1], letter[length(letter)], sep = "")
    abbrev
}

out("helium")
```

```
## [1] "hm"
```


__Making our function work with different inputs__. If we want just the last word, but we can't remember how long our sentence is, we can use `length()`


```r
length(words)
```

```
## [1] 9
```

```r
words[length(words)]
```

```
## [1] "dog"
```


__BREAK__

## Explaining the R Environments

Let's take a closer look at what happens when we call `fahr_to_celsius(32)`. To make things clearer, we'll start by putting the initial value 32 in a variable and store the final result in one as well:


```r
original <- 32
final <- fahr_to_celsius(original)
```


_Discuss and draw a diagram showing what memory looks like after the first line has been executed. Point to the environment_

When we call `fahr_to_celsius()`, R creates a new environment called the *evaluation environment* that is *local* to the function. This environment consists of two things

 1. a *frame*, which contains the symbol-value pairs (the assignment, called *binding*, of a value to a variable),
 2. an *enclosure*, which points to the enclosing environment, i.e. the environment where the function was called.

Initially, the *frame* only holds the object `temp`. Until is is used, `temp` in *unevaluated*; in effect it is a placeholder for whatever value we passed to the `temp` argument, which gets resolved as needed. This is known as *lazy evaluation*.

*Scoping* refers to the rules by which languages look up the value of a variable (symbol). R has two type of scoping rules

 1. *lexically* scoping, and
 2. *dynamic* scoping.

We won't discuss *dynamic* scoping heres. Basically, *lexical* scoping means that R looks up values for variables (symbols) based on how functions were nested when they were *called*. If a name isn't defined inside a function, R will look for the name in in the *parent frame*, the frame in the calling environment that is one where the function was called


```r
a <- 10
f <- function() {
    b <- 5
    a * b
}
f()
```

```
## [1] 50
```

There is no name `a` defined within the body of `f()`. Following lexical scoping rules, R will look in the *parent frame* of `f()` for a name `a`, which is found and has value `10`. As `f()` is defined in the workspace, the enclosing environment of `f()` is the *global environment*. Regardless of how functions are nested when called, R will always look for a name from the inside out until the global environment is reached.

When we nest a call to `fahr_to_kelvin()` inside `fahr_to_celsius()`, R creates another local environment to hold the variables involved in the evaluation of `fahr_to_kelvin()`.

When `fahr_to_celsius()` is called, it in turn calls `fahr_to_kelvin()`. As `temp` is passed to `fahr_to_kelvin()`, R evaluates `temp` to derive its value and this variable is passed to `fahr_to_kelvin()`. Now there are two `temp`s in play

 1. the `temp` local to `fahr_to_kelvin()`, and
 2. the `temp` local to `fahr_to_celcius()`.

As far as `fahr_to_kelvin()` is concerned there is only one `temp`; the `temp` local to it *masks* the other `temp`. That R knows which versions of variables with the same name belong to which function is due to environments.

When the call to `fahr_to_kelvin()` returns a value R throws away `fahr_to_kelvin()`'s frame and creates a new variable `temp_k` in the frame for `fahr_to_celsius()` to hold the temperature in Kelvin.

`kelvin_to_celsius()` is then called and a new environment to hold that function's variables is created.

Once again, R throws away that stack frame when `kelvin_to_celsius()` is done and creates the variable `result` in the frame of `fahr_to_celsius()`

Finally, when `fahr_to_celsius()` returns, R throws away its environment and puts `result` in a new variable called `final` that lives in the *global environment* where we called `fahr_to_celcius()` in the first place.

The summary of this is that the parent frame (the global environment is the parent frame of `fahr_to_celsius()`, the local environment of `fahr_to_celsius()` is the parent frame of `fahr_to_kelvin()`) is the environment where a function was defined (lexical scoping), the parent frame is the frame/environment from which the function was called.

The *global environment* is the final environment/frame and is always present; it holds the variables we defined outside the functions in our code. What it doesn't hold are the variables created during function calls. If we try to get the value of `temp` *after* our functions have finished running, R tells us that there's no such thing:


```r
paste("final value of temp after all function calls:", temp)
```

```
## Error: object 'temp' not found
```


Why go to all this trouble? Well, here's a function called `span()` that calculates the difference between the mininum and maximum values in an array:


```r
span <- function(a) {
    diff <- max(a) - min(a)
    diff
}
```


Notice `span()` assigns a value to variable called `diff`. We might very well use a variable with the same name (`diff`) to hold data:


```r
diff <- c(46, 55, 26, 64, 31, 68, 100, 79, 39, 95)
span(diff)
```

```
## [1] 74
```


We don't expect the variable `diff` to have the value 74 after this function call, so the name `diff` cannot refer to the same variable defined inside `span()` as it does in your workspace (the global environment). And yes, we could probably choose a different name than `diff` for our variable in this case, but we don't want to have to read every line of R code we write that we use to see what variable names its functions use before calling any of those functions, just in case they change the values of our variables.

The big idea here is __encapsulation__, and it's the key to writing correct, comprehensible programs. A function's job is to turn several operations into one so that we can think about a single function call instead of a dozen or a hundred statements each time we want to do something. That only works if functions don't interfere with each other; if they do, we have to pay attention to the details once again, which quickly overloads our short-term memory.

### Challenges

1. We previously wrote functions called `fence()` and `out()`. Walk your neighbor step-by-step through what happens when we call


```r
abbrev <- out(fence("carbon", "+"))
```


Use words or a diagram to explain how the variables change, and how the stack/environment changes. Look at the environment tab in RStudio.

__BREAK__

# Testing and Documenting

Once we start putting things in functions so that we can re-use them, we need to start testing that those functions are working correctly. To see how to do this, let's write a function to center a dataset around a particular value:


```r
center <- function(data, desired) {
    new <- (data - mean(data)) + desired
    new
}
```


We could test this on our actual data, but since we don't know what the values ought to be, it will be hard to tell if the result was correct. Instead, let's create a matrix of 0s and then center that around 3. This will make it simple to see if our function is working as expected:


```r
z <- matrix(nrow = 2, ncol = 2)
center(z, 3)
```

```
##      [,1] [,2]
## [1,]   NA   NA
## [2,]   NA   NA
```


That looks right, so let's try center on our real data:




```r
center(mat, 0)
```


It's hard to tell from the default output whether the result is correct, but there are a few simple tests that will reassure us:


```r
paste("original min, mean, and max are:", min(mat), ",", mean(mat), ",", max(mat))
```

```
## [1] "original min, mean, and max are: 1 , 800.5 , 1600"
```

```r
centered <- center(mat, 0)

paste("original min, mean, and max are:", min(centered), ",", mean(centered), 
    ",", max(centered))
```

```
## [1] "original min, mean, and max are: -799.5 , 0 , 799.5"
```


That seems almost right: the original mean was about 6.1, so the lower bound from zero is how about -6.1. The mean of the centered data isn't quite zero --- we'll explore why not in the challenges --- but it's pretty close. We can even go further and check that the standard deviation hasn't changed:


```r
paste("std dev before and after:", sd(mat), sd(centered))
```

```
## [1] "std dev before and after: 462.024530373298 462.024530373298"
```


Those values look the same, but we probably wouldn't notice if they were different in the sixth decimal place. Let's do this instead:


```r
paste("difference in standard deviations before and after:", sd(mat) - sd(centered))
```

```
## [1] "difference in standard deviations before and after: 0"
```


Sometimes, a very small difference can be detected. This could be due to rounding at very low decimal places. R has a useful function for comparing two objects allowing for rounding errors, `all.equal()`:


```r
all.equal(sd(mat), sd(centered))
```

```
## [1] TRUE
```


It's still possible that our function is wrong, but it seems unlikely enough that we should probably get back to doing our analysis. We have one more task first, though: we should write some documentation for our function to remind ourselves later what it's for and how to use it.

A common way to put documentation in software is to add comments like this:


```r
# return a new matrix containing the original data centered around the
# desired value.
center <- function(data, desired) {
    new <- (data - mean(data)) + desired
    new
}
```


Formal documentation for R functions is written in separate `.Rd` using a markup language similar to LaTeX. The **roxygen2** package allows R coders to write documentation alongside the function code and then process it into the appropriate `.Rd` files.

### Challenges

This next challenge has several steps. Think about how you break down a difficult problem into manageable pieces.

1. Write a function called `analyze()` that takes a filename as a parameter and displays the 3 graphs you made earlier (average, min and max inflammation over time). i.e., `analyze("data/inflammation-01.csv")` should produce the graphs already shown, while `analyze("inflammation-02.csv")` should produce corresponding graphs for the second data set. Be sure to give your function a docstring.

## Defining Defaults

We have passed parameters to functions in two ways: directly, as in `dim(mat)`, and by name, as in `matrix(data = 0, nrow = 2, ncol = 2)`. We can pass arguments to functions without naming them


```r
matrix(0, 2, 2)
```

```
##      [,1] [,2]
## [1,]    0    0
## [2,]    0    0
```


To understand what's going on, and make our own functions easier to use, let's re-define our `center()` function like this:


```r
center <- function(data, desired = 0) {
    # return a new matrix containing the original data centered around the
    # desired value.
    new <- (data - mean(data)) + desired
    new
}
```


The key change is that the second argument is now written `desired = 0` instead of just `desired`. If we call the function with two arguments, it works as it did before:


```r
test_data <- matrix(0, 2, 2)
center(test_data, 3)
```

```
##      [,1] [,2]
## [1,]    3    3
## [2,]    3    3
```


But we can also now call `center()` with just one parameter, in which case `desired` is automatically assigned the default value of `0`:


```r
more_data <- matrix(0, 2, 2) + 5
more_data
```

```
##      [,1] [,2]
## [1,]    5    5
## [2,]    5    5
```

```r
center(more_data)
```

```
##      [,1] [,2]
## [1,]    0    0
## [2,]    0    0
```


This is handy: if we usually want a function to work one way, but occasionally need it to do something else, we can allow people to pass a parameter when they need to but provide a default to make the normal case easier.

R has three ways that arguments supplied by you are matched to the *formal arguments * of the function definition

 1. by complete name, 
 2. by partial name (matching on initial *n* characters of the argument name), and
 3. by position.

Arguments are matched in the manner outlined above in *that order*, by complete name, then by partial matching of names, and finally by position.

The example below shows how R matches values to arguments


```r
display <- function(a = 1, b = 2, c = 3) {
    paste("a:", a, "b:", b, "c:", c)
}

paste("no parameters:", display())
```

```
## [1] "no parameters: a: 1 b: 2 c: 3"
```

```r
paste("one parameter:", display(55))
```

```
## [1] "one parameter: a: 55 b: 2 c: 3"
```

```r
paste("two parameters:", display(55, 66))
```

```
## [1] "two parameters: a: 55 b: 66 c: 3"
```

```r
paste("three parameters:", display(55, 66, 77))
```

```
## [1] "three parameters: a: 55 b: 66 c: 77"
```


As this example shows, arguments are matched from left to right, and any that haven't been given a value explicitly get their default value. We can override this behavior by naming the value as we pass it in:


```r
paste("only setting the value of c", display(c = 77))
```

```
## [1] "only setting the value of c a: 1 b: 2 c: 77"
```


With that in hand, let's look at the help for `read.csv()`:


```r
`?`(read.csv)
```


_walk through the help file, point out important items. How to read the defaults, how to know what you need to specify. Definitions and examples..._

There's a lot of information here, but the most important part is the first couple of lines:


```r
read.csv(file, header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, 
    comment.char = "", ...)
```


This tells us that `read.csv()` has one argument, `file`, that doesn't have a default value, and eight others that do. If we call the function like this:


```r
read.csv("data/inflammation-01.csv", ",")
```

```
## Error: invalid argument type
```


the filename is assigned to`file` (which is what we want), but the delimiter string `","` is assigned to the argument `header` rather than `sep`, because `header` is the second parameter in the list. That's why we don't have to provide `file =` for the filename, but do have to provide `sep =` for the second parameter.


```r
read.csv("data/inflammation-01.csv", sep = ",")
```


### Challenges

Rewrite the `center()` function so that it scales data to lie between 0.0 and 1.0 by default, but will allow the caller to specify lower and upper bounds if they want. Compare your implementation to your neighbor's: do the two functions always behave the same way?

Key Points
===============
* Define a function using `function` name(...params...).
* The body of a function should be indented.
* Call a function using name(...values...).
* Numbers are stored as integers or floating-point numbers.
* Each time a function is called, a new stack frame is created on the call stack to hold its parameters and local variables.
* R looks for variables in the current environment before looking for them at the top level.
* Use help(thing) to view help for something.
* Put docstrings in functions to provide help for that function.
* Annotate your code!
* Specify default values for parameters when defining a function using name=value in the parameter list.
* Parameters can be passed by matching based on name, by position, or by omitting them (in which case the default value is used).

## Next Steps

We now have a function called analyze to visualize a single data set. We could use it to explore all 12 of our current data sets like this:


```r
analyze("data/inflammation-01.csv")
analyze("data/inflammation-02.csv")
# ...
analyze("data/inflammation-12.csv")
```


but the chances of us typing all 12 filenames correctly aren't great, and we'll be even worse off if we get another hundred files. What we need is a way to tell R to do something once for each file, and that will be the subject of the next lesson.

---
layout: lesson
root: ../..
---



# Analyzing Multiple Data Sets

We have created a function called analyze that creates graphs of the minimum, average, and maximum daily inflammation rates for a single data set:


```r
analyze <- function(filename) {
    fdata <- read.csv(filename)
    
    avg_inflammation <- apply(fdata, 2, mean)  ## or colMeans(fdata)
    max_inflammation <- apply(fdata, 2, max)
    min_inflammation <- apply(fdata, 2, min)
    tempo <- seq_len(ncol(fdata))
    
    plot(tempo, avg_inflammation)
    plot(tempo, min_inflammation)
    plot(tempo, max_inflammation)
}

analyze("data/inflammation-01.csv")
```

![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-21.png) ![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-22.png) ![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-23.png) 


We can use it to analyze other data sets one by one:


```r
analyze("data/inflammation-02.csv")
```

![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-31.png) ![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-32.png) ![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-33.png) 


but we have a dozen data sets right now and more on the way. We want to create plots for all our data sets with a single statement. To do that, we'll have to teach the computer how to repeat things.

## Objectives

* Explain what a `for()` loop does.
* Correctly write `for()` loops to repeat simple calculations.
* Trace changes to a loop variable as the loop runs.
* Trace changes to other variables as they are updated by a for loop.
* Explain what a list is.
* Create and index lists of simple values.
* Use a function to get a list of filenames that match a simple wildcard pattern.
* Use a `for` loop to process multiple files.

## For Loops

Suppose we want to print each word in our sentence we defined earlier on a line of its own. One way is to use four print statements:


```r
pangram <- "the quick brown fox jumps over the lazy dog"
words <- words <- strsplit(pangram, " ")[[1]]
```


```r
print_words <- function(sentence) {
    print(sentence[1])
    print(sentence[2])
    print(sentence[3])
    print(sentence[4])
    print(sentence[5])
}

print_words(words)
```

```
## [1] "the"
## [1] "quick"
## [1] "brown"
## [1] "fox"
## [1] "jumps"
```


but that's a bad approach for two reasons:

 1. **It doesn't scale** if we want to print the elements in a vector that's hundreds long, we'd be better off just typing them in.

 2. **It's fragile** if we give it a longer vector, it only prints part of the data, and if we give it a shorter input, it produces an error or returns `NA` values because we're asking for elements that don't exist!


```r
hello <- c("I", "was", "here")
print_words(hello)
```

```
## [1] "I"
## [1] "was"
## [1] "here"
## [1] NA
## [1] NA
```


Here's a better approach:


```r
print_words <- function(sentence) {
    for (i in seq_along(sentence)) {
        print(sentence[i])
    }
}
```


This is shorter---certainly shorter than something that prints every character in a hundred-letter string---and more robust as well!


```r
print_words("oxygen")
```

```
## [1] "oxygen"
```


The improved version of `print_words()` uses a `for()` loop to repeat an operation---in this case, printing---once for each thing in a collection. The general form of a loop is:


```r
for (variable in collection) {
    do things with variable
}
```


We can name the loop variable anything (syntactically valid). `in` is part of the `for()` syntax. Note that the body of the loop is enclosed in braces `{`. For a single-line loop body, as here, the braces aren't needed, but it is good practice to include them as we did.

Here's another loop that repeatedly updates a variable:


```r
len <- 0
for (vowel in seq_len(nchar("aeiou"))) {
    len <- len + 1
    print(paste("There are", len, "vowels"))
}
```

```
## [1] "There are 1 vowels"
## [1] "There are 2 vowels"
## [1] "There are 3 vowels"
## [1] "There are 4 vowels"
## [1] "There are 5 vowels"
```


It's worth tracing the execution of this little program step by step. Since there are five characters in `"aeiou"`, the `print()` statement will be executed five times. The first time around, length is zero (the value assigned to it on line 1) and vowel is `"a"`. The statement adds 1 to the old value of length, producing 1, and updates length to refer to that new value. The next time around, vowel is `"e"` and length is 1, so length is updated to be 2. After three more updates, length is 5; since there is nothing left in `"aeiou"` for R to process, the loop finishes and the `print()` statement tells us our final answer.

Note that a loop variable is just a variable that's being used to record progress in a loop. It still exists after the loop is over, and we can re-use variables previously defined as loop variables as well:


```r
letter <- "z"
for (letter in seq_len(nchar("abc"))) {
    print(substr("abc", letter, letter))
    print(paste("after the loop, letter is", letter))
}
```

```
## [1] "a"
## [1] "after the loop, letter is 1"
## [1] "b"
## [1] "after the loop, letter is 2"
## [1] "c"
## [1] "after the loop, letter is 3"
```


Note also that finding the length of a string is such a common operation that R actually has a built-in function to do it called `nchar()`:


```r
nchar("aeiou")
```

```
## [1] 5
```


`nchar()` is much faster than any R function we could write ourselves, and much easier to read than a two-line loop. We can also use `length()` to tell use the number of elements in a vector, the number of columns in a data frame, or the number of cells in a matrix.

### Challenges

1. R has a built-in function called `seq()` that creates a list of numbers: `seq(3)` produces `[1] 1, 2, 3`, `seq(2, 5)` produces [1] 2, 3, 4, 5, and `seq(2, 10, 3)` produces `[1] 2, 5, 8`. Using `seq()`, write a function that prints the _n_ natural numbers:
    

```r
print_numbers <- function(N) {
    nseq <- seq(N)
    for (i in seq_along(nseq)) {
        print(nseq[i])
    }
}
```


2. Exponentiation is built into R: `2^4`. Write a function called `expo()` that uses a loop to calculate the same result.

3. We can also apply some simple methods to R vectors. One of these is called `sort()`. It works on numbers or letters: 


```r
sort(words)
```

```
## [1] "brown" "dog"   "fox"   "jumps" "lazy"  "over"  "quick" "the"   "the"
```

```r
sort(words, decreasing = TRUE)
```

```
## [1] "the"   "the"   "quick" "over"  "lazy"  "jumps" "fox"   "dog"   "brown"
```


Write a function called `rsort()` that does the same thing. <!-- This seems an odd thing to ask in a section on for loops -->

# Ch-Ch-Ch-Changes

Data that can be changed is called *mutable*, while data that cannot be is called *immutable*. Like strings, numbers are immutable: there's no way to make the number 0 have the value 1 or vice versa (at least, not in R---there actually are languages that will let people do this, with predictably confusing results). Vectors, data frames, and matrices, on the other hand, are mutable: they can be modified after they have been created.

Programs that modify data in place can be harder to understand than ones that don't because readers may have to mentally sum up many lines of code in order to figure out what the value of something actually is. On the other hand, programs that modify data in place instead of creating copies that are almost identical to the original every time they want to make a small change are much more efficient.
There are many ways to change the contents besides assigning to elements:


```r
odds <- c(1, 3, 5, 7, 9)
odds <- append(odds, 13)
odds <- odds + 1
odds <- odds[-1]
odds <- sort(odds, decreasing = TRUE)
```


Challenges
----------

1. Write a function called total that calculates the sum of the values in a vector. (R has a built-in function called `sum()` that does this for you. Please don't use it for this exercise.)


```r
total <- function(vector) {
    # calculates the sum of the values in a vector
    sum <- 0
    for (i in seq_along(vector)) {
        sum <- sum + vector[i]
    }
    sum
}
```


# Processing Multiple Files

We now have almost everything we need to process all our data files. 

What we need is a function that finds files whose names match a pattern. We provide those patterns as strings: the character `*` matches zero or more characters, while `?` matches any one character. We can use this to get the names of all the R files we have created so far:


```r
list.files(pattern = "*.R")
```

```
##  [1] "00-first-timers.Rmd"       "01-starting-with-data.Rmd"
##  [3] "02-func-R.md"              "02-func-R.Rmd"            
##  [5] "03-loops-R.md"             "03-loops-R.Rmd"           
##  [7] "04-cond-colors-R.md"       "04-cond-colors-R.Rmd"     
##  [9] "05-testing-R.md"           "05-testing-R.Rmd"         
## [11] "06-best_practices-R.md"    "06-best_practices-R.Rmd"  
## [13] "07-knitr-R.md"             "07-knitr-R.Rmd"           
## [15] "guide.Rmd"                 "rblocks.R"
```


or to get the names of all our `.csv` data files:


```r
list.files(path = "./data", pattern = "*.csv", recursive = TRUE)
```

```
##  [1] "inflammation-01.csv" "inflammation-02.csv" "inflammation-03.csv"
##  [4] "inflammation-04.csv" "inflammation-05.csv" "inflammation-06.csv"
##  [7] "inflammation-07.csv" "inflammation-08.csv" "inflammation-09.csv"
## [10] "inflammation-10.csv" "inflammation-11.csv" "inflammation-12.csv"
```


As these examples show, `list.files()` result is a list of strings, which means we can loop over it to do *something* with each filename in turn. In our case, the *something* we want is our `analyze()` function. Let's test it by analyzing the first three files in the list:


```r
filenames <- list.files(path = "./data", pattern = "*.csv", recursive = TRUE)[1:3]

for (f in seq_along(filenames)) {
    print(filenames[f])
    analyze(file.path("data", filenames[f]))
}
```

```
## [1] "inflammation-01.csv"
```

![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-191.png) ![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-192.png) ![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-193.png) 

```
## [1] "inflammation-02.csv"
```

![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-194.png) ![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-195.png) ![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-196.png) 

```
## [1] "inflammation-03.csv"
```

![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-197.png) ![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-198.png) ![plot of chunk unnamed-chunk-19](figure/unnamed-chunk-199.png) 


Sure enough, the maxima of these data sets show exactly the same ramp as the first, and their minima show the same staircase structure.

### Challenges

1. Write a function called `analyze_all()` that takes a filename pattern as its sole argument and runs analyze for each file whose name matches the pattern.

### To loop or not to loop...?
Intro sentence
#### Vectorized operations
A key difference between R and many other languages is a topic known as *vectorization*. When you wrote the `total()` function, we mentioned that R already has `sum()` to do this; `sum()` is *much* faster than the interpreted `for()` loop because `sum()` is coded in C to work with a vector of numbers. Many of R's functions work this way; the loop is hidden from you in C.
Learning to use vectorized operations is a key skill in R.

For example, to add pairs of numbers contained in two vectors

```r
a <- 1:10
b <- 1:10
```

you could loop over the pairs adding each in turn, but that would be very inefficient in R

```r
res <- numeric(length = length(a))
for (i in seq_along(a)) {
    res[i] <- a[i] + b[i]
}
res
```

```
##  [1]  2  4  6  8 10 12 14 16 18 20
```

Instead, `+` is a *vectorized* function which can operate on entire vectors at once

```r
res2 <- a + b
all.equal(res, res2)
```

```
## [1] TRUE
```


#### `for()` or `apply()`?
A `for()` loop is used to apply the same function calls to a collection of objects.
R has a family of function, the `apply()` family, which can be used in much the same way. You've already used one of the family, `apply()` in lesson *01 Starting with data*.
The `apply()` family members include

 * `apply()`  - apply over the margins of an array (e.g. the rows or columns of a matrix)
 * `lapply()` - apply over an object and return list
 * `sapply()` - apply over an object and return a simplified object (an array) if possible
 * `vapply()` - similar to `sapply()` but you specify the type of object returned by the iterations

Each of these has an argument `FUN` which takes a function to apply to each element of the object. Instead of looping over `filenames` and calling `analyze()`, as you did earlier, you could `sapply()` over `filenames` with `FUN = analyze`


```r
sapply(filenames, FUN = analyze)
```

```
## Warning: cannot open file 'inflammation-01.csv': No such file or directory
```

```
## Error: cannot open the connection
```


Deciding whether to use `for()` or one of the `apply()` family is really personal preference. Using an `apply()` family function forces to you encapsulate your operations as a function rather than separate calls with `for()`. `for()` loops are often more natural in some circumstances; for several related operations, a `for()` loop will avoid you having to pass in a lot of extra arguments to your function.

#### Loops in R are slow
No, they are not! *If* you follow some golden rules.

 1. Don't use a loop when a vectorised alternative exists
 2. Don't grow objects (via `c()`, `cbind()`, etc) during the loop - R has to create a new object and copy across the information just to add a new element or row/column
 3. Allocate an object to hold the results and fill it in during the loop

As an example, we'll create a new version of `analyze()` that will return the minimum, maximum, and mean of the data from a file.


```r
analyze2 <- function(filenames) {
    for (f in seq_along(filenames)) {
        fdata <- read.csv(file.path("data", filenames[f]), header = FALSE)
        res <- apply(fdata, 2, mean)
        if (f == 1) {
            out <- res
        } else {
            out <- cbind(out, res)
        }
    }
    out
}

system.time(avg2 <- analyze2(filenames))
```

```
##    user  system elapsed 
##   0.009   0.000   0.009
```


Note how we add a new column to `out` at each iteration? This is a cardinal sin of writing a `for()` loop in R.

Instead, we can create an empty matrix with the right dimensions (rows/columns) to hold the results.
Then we loop over the files but this time we fill in the `f`th column of our results matrix `out`.
This time there is no copying/growing for R to deal with.


```r
analyze3 <- function(filenames) {
    out <- matrix(ncol = length(filenames), nrow = 40)  ## assuming 40 here from files 
    for (f in seq_along(filenames)) {
        fdata <- read.csv(file.path("data", filenames[f]), header = FALSE)
        out[, f] <- apply(fdata, 2, mean)
    }
    out
}

system.time(avg3 <- analyze3(filenames))
```

```
##    user  system elapsed 
##   0.009   0.000   0.009
```

In this simple example there is little difference in the compute time of `analyze2()` and `analyze3()`. This is because we are only iterating over 3 files and hence we only incur 3 copy/grow operations. If we were doing this over more files or the data objects we were growing were larger, the penalty for copying/growing would be much larger.

Note that `apply()` handles these memory allocation issues for you, but then you have to write the loop part as a function to pass to `apply()`. At its heart, `apply()` is just a `for()` loop with extra convenience.

## Key Points

* Use `for (variable in collection)` to process the elements of a collection one at a time.
* The body of a for loop does not have to be indented, but should be for clarity.
* Use `length(thing)` to determine the length of something that contains other values.
* `c(value1, value2, value3`) creates a vector
* Vectors are indexed and sliced in the same way as strings and arrays.
* vectors are mutable (i.e., their values can be changed in place).
* Use `list.files(pattern)` to create a list of files whose names match a pattern.
* Use `*` in a pattern to match zero or more characters.


## Next Steps

We have now solved our original problem: we can analyze any number of data files with a single command. More importantly, we have met two of the most important ideas in programming:

* Use functions to make code easier to re-use and easier to understand.
* Use vectors and arrays to store related values, and loops to repeat operations on them.

We have one more big idea to introduce...



# Making Choices

Our previous lessons have shown us how to manipulate data, define our own functions, and repeat things. 
However, the programs we have written so far always do the same things, regardless of what data they're given. 
We want programs to make choices based on the values they are manipulating. 
To help us see what decisions they're making, we'll start by looking at how computers manipulate images.

## Objectives

* Create a simple "image" made out of colored blocks.
* Explain how the RGB model represents colors.
* Explain the similarities and differences between tuples and lists.
* Write conditional statements including if, else if, and else branches.
* Correctly evaluate expressions containing and and or.
* Correctly write and interpret code containing nested loops and conditionals.
* Explain the advantages of putting frequently-modified code in a function.

# Image Grids

Let's start by creating some simple heat maps using a source code from a package that is being developed called `rblocks`. 


```r
source("rblocks.R")
```


Once we have sourced our own set of function (kind of like your own personal library) we can call any of these functions by name.

The first step is to create our own "image":


```r
grid1 <- block_grid(5, type = "vector")
grid1
```

![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-3.png) 


We can see that this grid represents a vector. It is a single dimension and has 5 locations (which we gave to it in the first argument). We can see the summarized information in the grid:


```r
str(grid1)
```


The obvious thing to do with a grid like this is color in its cells. Let's look at the different ways to access elements of a vector (using positive integers, negative integers, logical vectors etc. as indices).

Let's change the color by indexing using __positive integers__. Here, we tell the program to select the first two elements of grid1, and to color them red:


```r
grid1[1:2] <- "red"
grid1
```

![plot of chunk unnamed-chunk-5](figure/unnamed-chunk-5.png) 


Let's try it another way index using __negative integers__. Here we tell the program to select elements that ARE NOT 1-3, and color them blue:


```r
grid2 <- block_grid(5, type = "vector")
grid2[-c(1:3)] <- "blue"
grid2
```

![plot of chunk unnamed-chunk-6](figure/unnamed-chunk-6.png) 


Lets try to index using __logical vectors__. Here we use a set a true/false statements to tell the cells what color to display:


```r
grid3 <- block_grid(5, type = "vector")
grid3[c(T, F, T, F, T)] = "darkred"
grid3
```

![plot of chunk unnamed-chunk-7](figure/unnamed-chunk-7.png) 


One challenging concept for those new to R is the recycling rule. rBlocks can be used to explain this concept visually.


```r
grid4 <- block_grid(5, type = "vector")
grid4
```

![plot of chunk unnamed-chunk-8](figure/unnamed-chunk-81.png) 

```r

grid4[c(TRUE, FALSE)] <- "blue"
grid4
```

![plot of chunk unnamed-chunk-8](figure/unnamed-chunk-82.png) 


In this example, we are using a logical vector `c(TRUE, FALSE)` to access elements of the vector grid4. According to the recycling rule, this short vector is expanded out as `c(TRUE, FALSE, TRUE, FALSE, TRUE) to match the length of grid4. The grid image makes on top makes it easy to understand what is happening.

R has lots of ways to refer to colors:

* [r-chart](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)
* [color brewer](http://colorbrewer2.org)
* [color styles](http://www.stat.tamu.edu/~jkim/Rcolorstyle.pdf)
* [skittles theme colors](http://alyssafrazee.com/RSkittleBrewer.html)
* [i want hue](http://tools.medialab.sciences-po.fr/iwanthue/)

## Control Structures

rBlocks can be used to motivate users to learn about basic control structures. For this example, we will create a matrix and write a for loop to set elements on the diagonal to the color `firebrick` (thanks to Alyssa Frazee and the RSkittleBrewer package for making me more color aware).


```r
grid5 <- block_grid(5, 5, type = "matrix")
for (i in 1:5) {
    grid5[i, i] <- "firebrick"
}
```


__Ask class to walk through what is happening step by step__

1. Before running the code - what image do you expect to see? Why?
2. What is the program doing in the first step?
3. What will the matrix look like? How is it different from a vector?
4. How will the for loop change the color in the matrix?

There are subtle differences between indexing data.frames and matrices like in the example below.

single index accesses first element of matrix


```r
grid6 <- block_grid(5, 5, type = "matrix")
grid6[1] <- "dodgerblue3"
grid6
```

![plot of chunk unnamed-chunk-10](figure/unnamed-chunk-10.png) 


In a matrix, if you only have a single index value, it assumes the cell you refer to is the same (e.g. [1] ~ [1,1])
	
single index accesses first column of data.frame


```r
grid7 <- block_grid(5, 5, type = "data.frame")
grid7[1] <- "dodgerblue3"
grid7
```

![plot of chunk unnamed-chunk-11](figure/unnamed-chunk-11.png) 

```r
print_raw(grid7)  #shows the data frame
```


Here, with a data frame, if you only have a single index value, it assumes you mean the entire first column. How would we color the entire first row? What else can we do to make sure we are indexing properly?


```r
grid7b <- grid7
grid7b[1, ] <- "goldenrod"
grid7b
```

![plot of chunk unnamed-chunk-12](figure/unnamed-chunk-12.png) 


Remember the apply function from earlier? Let us use apply to change the light green cells in grid7 to `olivedrab` and the blue cells to `darkslategray`.


```r
grid8 <- apply(grid7, 2, function(df) {
    if (sum(df == "dodgerblue3") == 5) {
        df[] <- "darkslategrey"
    } else {
        df[] <- "olivedrab"
    }
    return(df)
})

grid8
display(grid8)
```

![plot of chunk unnamed-chunk-13](figure/unnamed-chunk-13.png) 


We need the `display` function here, since apply drops attributes, and my implementation of the grid needs the object to be marked with the block class to overlod the print method (I am sure there are more elegant implementations that can handle this better, without bothering the user. Any thoughts?)

One of the gotchas in R is how it coerces data structures when subsetting. Here is a simple way to visualize this behavior with data.frames.


```r
grid9 <- block_grid(5, 5)
grid9
```

![plot of chunk unnamed-chunk-14](figure/unnamed-chunk-14.png) 


extracting the first column converts it to a vector
	

```r
grid10 <- grid9[, 1]
display(grid10)
```

![plot of chunk unnamed-chunk-15](figure/unnamed-chunk-15.png) 

	
# Conditionals (Control flow)

The other thing we need in order to create a heat map of our own is a way to pick a color based on a data value. The tool R gives us for doing this is called a conditional statement, and looks like this:


```r
num <- 37
if (num > 100) {
    "greater"
} else {
    "not greater"
}
"done"
```


The structure of conditional statements is similar to functions and loops. The second line of this code uses the keyword `if` to tell R that we want to make a choice. If the test that follows it is true, the body of the `if` (i.e., the lines indented underneath it) are executed. If the test is false, the body of the `else` is executed instead. Only one or the other is ever executed:

_draw a diagram on the board of the what is happening (boxes and arrows)_

Conditional statements don't have to include an else. If there isn't one, R simply does nothing if the test is false:
	

```r
num <- 53
"before conditional..."
if (num > 100) {
    "53 is greater than 100"
}
"...after conditional"
```


We can also chain several tests together using `else if` and `else`. This makes it simple to write a function that returns the sign of a number:


```r
Sign <- function(num) {
    if (num > 0) {
        return(1)
    } else if (num == 0) {
        return(0)
    } else {
        return(-1)
    }
}

paste("sign of -3:", Sign(-3))
```


One important thing to notice the code above is that we use a double equals sign == to test for equality rather than a single equals sign because the latter is used to mean assignment. This convention was inherited from `C`, and while many other programming languages work the same way, it does take a bit of getting used to... You can think of it in a sentence the difference between "equals" (=) and "is equal to" (==).

We can also combine tests using `&` and `|` and is only true if both parts are true:


```r
if (1 > 0 & -1 > 0) {
    "both parts are true"
}
```


while "or" (`|`) is true if either part is true:


```r
if (1 < 0 | "left" < "right") {
    "at least one test is true"
}
```


In this case, "either" means "either or both", not "either one or the other but not both".

### Challenges

1. Write a function called `near` that returns `TRUE` if its first parameter is within 10% of its second and `FALSE` otherwise. Compare your implementation with your neighbor's: do you return the same answer for all possible pairs of numbers? How might you make a simple test for your function?


```r
near <- function(param1, param2) {
    # returns True if its first parameter is within 10% of its second and False
    # otherwise.
    ten_percent <- param2 * 0.1
    if (param1 >= (param2 - ten_percent) & param1 <= (param2 + ten_percent)) {
        TRUE
    } else {
        FALSE
    }
}
```



# Nesting

Another thing to realize is that if statements can be combined with loops just as easily as they can be combined with functions. For example, if we want to sum the positive numbers in a list, we can write this:


```r
numbers <- c(-5, 3, 2, -1, 9, 6)
total <- 0
for (n in 1:length(numbers)) {
    if (numbers[n] >= 0) {
        total <- total + numbers[n]
    }
}

paste("sum of positive values:", total)
```


We could equally well calculate the positive and negative sums in a single loop:


```r
pos_total <- 0
neg_total <- 0
for (n in 1:length(numbers)) {
    if (numbers[n] >= 0) {
        pos_total <- pos_total + numbers[n]
    } else {
        neg_total <- neg_total + numbers[n]
    }
}

paste("negative and positive sums are:", neg_total, pos_total)
```


We can even put one loop inside another:


```r
for (consonant in 1:nchar("bcd")) {
    for (vowel in 1:nchar("ae")) {
        print(c(consonant, vowel))
    }
}
```


The inner loop runs from start to finish each time the outer loop runs once:
_draw a diagram with boxes and arrows for what is happening_

We can combine nesting and conditionals to create patterns in an image:


```r
height <- 5
width <- 5
square <- block_grid(height, width, type = "matrix")
for (x in 1:5) {
    for (y in 1:5) {
        if (x < y) {
            square[x, y] = "hotpink"
        } else if (x == y) {
            square[x, y] = "Gray40"
        } else {
            square[x, y] = "chartreuse"
        }
    }
}
```


_What do you think this will look like?_


```r
square
```

![plot of chunk unnamed-chunk-26](figure/unnamed-chunk-26.png) 


This is our first hand-made data visualization: the colors show where x is less than, equal to, or greater than y.

### Challenges

1. Will changing the nesting of the loops in the code above—i.e., wrapping the Y-axis loop around the X-axis loop—change the final image? Why or why not?

	
## Creating a Heat Map

The last step is to turn our data into something we can see. As in previous lessons, the first step is to get the data into memory:


```r
dat <- data.matrix(read.csv("data/inflammation-01.csv", header = FALSE))
dim(dat)
```


The second is to create an image grid that is the same size as the data:


```r
height <- nrow(dat)
width <- ncol(dat)
heat_map <- block_grid(height, width, type = "matrix")
```


The third step is to decide how we are going to color the cells in the heat map. To keep things simple, we will use red, green, and blue as our colors, and compare data values to the data set's mean. Here's the code:


```r
for (x in 1:height) {
    for (y in 1:width) {
        if (dat[x, y] < mean(dat)) {
            heat_map[x, y] = "red"
        } else if (dat[x, y] == mean(dat)) {
            heat_map[x, y] = "green"
        } else {
            heat_map[x, y] = "blue"
        }
    }
}

heat_map
```

![plot of chunk unnamed-chunk-29](figure/unnamed-chunk-29.png) 


This may be what we asked for, but both the image and the code are hideous:

* It's too large for us to view the whole thing at once on a small laptop screen.
* Our first heatmap had time along the X axis; this seems to have time along the Y axis.
* Red against blue is pretty hard on the eyes.
* The heatmap only shows two colors because none of the (integer) measurements has exactly the same value as the (fractional) mean.
* Red-green color blindness is not uncommon (5-10% males!) [try the simulator](http://www.etre.com/tools/colourblindsimulator/)
* We are calculating the mean of data either once or twice each time we go through the loop. That means that on a 40×60 data set, we are performing the same calculation 2400 times.

Here's how we can improve it:

* We can give ImageGrid an optional parameter block_size to set the size of each block.
* We can transpose our data before creating the grid.
* We can pick better colors (I'm personally fond of orchid, fuchsia, and hot pink).
* Instead of checking if values are exactly equal to the mean, we can see if they are close to it.
* We can calculate the mean once, before we start our loops, and use that value over and over.

Our modified code looks like this:


```r
flipped <- t(dat)
height <- nrow(flipped)
width <- ncol(flipped)
center <- mean(flipped)
heatmap <- block_grid(height, width, type = "matrix")

for (x in 1:height) {
    for (y in 1:width) {
        if (flipped[x, y] < (0.8 * center)) {
            heatmap[x, y] <- "lightpink"
        } else if (flipped[x, y] > (1.2 * center)) {
            heatmap[x, y] <- "deeppink4"
        } else {
            heatmap[x, y] <- "hotpink"
        }
    }
}

heatmap
```

![plot of chunk unnamed-chunk-30](figure/unnamed-chunk-30.png) 


That's a bit better—but now the contrast between the colors isn't great enough. And there still aren't very many fuchsia cells: we may want to widen the band around the mean that gets that color. We could rewrite our loop a third time, but the right thing to do is to put our code in a function so that we can experiment with bands and colors more easily.


```r
make_heatmap <- function(values, low_color, mid_color, high_color, low_band, 
    high_band) {
    height <- nrow(values)
    width <- ncol(values)
    result <- block_grid(height, width, type = "matrix")
    center <- mean(values)
    
    for (x in 1:height) {
        for (y in 1:width) {
            if (values[x, y] < (low_band * center)) {
                result[x, y] <- low_color
            } else if (values[x, y] > (high_band * center)) {
                result[x, y] <- high_color
            } else {
                result[x, y] <- mid_color
            }
        }
    }
    result
}
```


To test this function, we'll run it with the settings we just used:


```r
h <- make_heatmap(flipped, "lightpink", "hotpink", "deeppink4", 0.8, 1.2)
h
```

![plot of chunk unnamed-chunk-32](figure/unnamed-chunk-32.png) 


That seems right, so let's widen the band and use more dramatic colors:


```r
h <- make_heatmap(flipped, "gray60", "chartreuse", "darkgreen", 0.5, 1.5)
h
```

![plot of chunk unnamed-chunk-33](figure/unnamed-chunk-33.png) 


We'll probably want to experiment a bit more before publishing, but writing a function has made experimenting easy. We can make it even easier by re-defining our function one more time to give the parameters default values. While we're at it, let's put the low and high bands at the front, since they're more likely to change than our color choices:
                        

```r
make_heatmap <- function(values, low_band = 0.5, high_band = 1.5, low_color = "gray60", 
    mid_color = "chartreuse", high_color = "darkgreen") {
    height <- nrow(values)
    width <- ncol(values)
    result <- block_grid(height, width, type = "matrix")
    center <- mean(values)
    
    for (x in 1:height) {
        for (y in 1:width) {
            if (values[x, y] < (low_band * center)) {
                result[x, y] <- low_color
            } else if (values[x, y] > (high_band * center)) {
                result[x, y] <- high_color
            } else {
                result[x, y] <- mid_color
            }
        }
    }
    result
}
```


Once default values are added, the function's first line is too long to fit comfortably on our screen. Rather than breaking it wherever it hits the right edge of the screen, we have divided the parameters into logical groups to make it more readable.

Again, our first test is to re-run it with the same values as before (which we give it in a different order, since we've changed the order of parameters):	


```r
h <- make_heatmap(flipped, 0.5, 1.5, "gray60", "chartreuse", "darkgreen")
h
```

![plot of chunk unnamed-chunk-35](figure/unnamed-chunk-35.png) 


We can now leave out everything except the data being visualized, or provide the data and the bands and re-use the default colors and block size:


```r
h <- make_heatmap(flipped)
h
```

![plot of chunk unnamed-chunk-36](figure/unnamed-chunk-361.png) 

```r

h <- make_heatmap(flipped, 0.4, 1.6)
h
```

![plot of chunk unnamed-chunk-36](figure/unnamed-chunk-362.png) 


We can now explore our data with just a few keystrokes, which means we can concentrate on our science and not on our programming.

### Challenges

1. Why did we transpose our data outside our heat map function? 
2. Why not have the function perform the transpose?
3. Why does the heat map function return the grid rather than displaying it immediately? 
4. Do you think this is a good or bad design choice?
5. Explain what the overall effect of this code is: `temp = left left = right right = temp`

## Key Points

* Learn how to source code
* Use the `block_grid` class from the rblocks source code to create simple "images" made of colored blocks.
* Specify colors use (red, green, blue) triples, each component of which is an integer in the range 0..255.
* Use `if` condition to start a conditional statement, `else if` condition to provide additional tests, and `else` to provide a default.
* The bodies of the branches of conditional statements must be indented.
* Use `==` to test for equality.
* X and Y is only true if both X and Y are true.
* X or Y is true if either X or Y, or both, are true.
* Nest loops to operate on multi-dimensional data.
* Put code whose parameters change frequently in a function, then call it with different parameter values to customize its behavior.

## Next Steps

Let's store the functions for our code in another script, which we can name `project_functions.R`. We can source these functions using `source` at the beginning of our main script. Keeping functions in one place, at the top of our code or in a separate file, helps keep our programs more organized and can make debugging easier.
 
Our final heatmap function is 17 lines long, which means that if there's a 95% chance of each line being correct, the odds of the whole function being right are only 41%. Before we go any further, we need to learn how to test whether our code is doing what we want it to do, and that will be the subject of the next lesson.



# Basic Defensive Programming

Our previous lessons have introduced the basic tools of programming: variables and lists, finding files, loops, conditionals, and functions. What they haven't done is show us how to tell whether a program is getting the right answer, and how to tell if it's still getting the right answer as we make changes to it.

To achieve that, we need to:

* write programs that check their own operation,
* write and run tests for widely-used functions, and
* make sure we know what "correct" actually means.

The good news is, doing these things will speed up our programming, not slow it down. As in real carpentry—the kind done with lumber—the time saved by measuring carefully before cutting a piece of wood is much greater than the time that measuring takes.

## Objectives

* Learn how to defensively program for potential errors
* `stop`
* `break`
* `continue`
* Programming with version control

## Debugging

Once testing has uncovered problems, the next step is to fix them. Many novices do this by making more-or-less random changes to their code until it seems to produce the right answer, but that's very inefficient (and the result is usually only correct for the one case they're testing). The more experienced a programmer is, the more systematically they debug, and most follow some variation on the rules explained below.

## Know What It's Supposed to Do

The first step in debugging something is to know what it's supposed to do. "My program doesn't work" isn't good enough: in order to diagnose and fix problems, we need to be able to tell correct output from incorrect. 
If we can write a test case for the failing case—i.e., if we can assert that with these inputs, the function should produce that result— then we're ready to start debugging. If we can't, then we need to figure out how we're going to know when we've fixed things.

But writing test cases for scientific software is frequently harder than writing test cases for commercial applications, because if we knew what the output of the scientific code was supposed to be, we wouldn't be running the software: we'd be writing up our results and moving on to the next program. In practice, scientists tend to do the following:

__Test with simplified data.__ Before doing statistics on a real data set, we should try calculating statistics for a single record, for two identical records, for two records whose values are one step apart, or for some other case where we can calculate the right answer by hand.

__Test a simplified case.__ If our program is supposed to simulate magnetic eddies in rapidly-rotating blobs of supercooled helium, our first test should be a blob of helium that isn't rotating, and isn't being subjected to any external electromagnetic fields. Similarly, if we're looking at the effects of climate change on speciation, our first test should hold temperature, precipitation, and other factors constant.

__Compare to an oracle.__ A test oracle is something—experimental data, an older program whose results are trusted, or even a human expert—against which we can compare the results of our new program. If we have a test oracle, we should store its output for particular cases so that we can compare it with our new results as often as we like without re-running that program.

__Check conservation laws.__ Mass, energy, and other quantitites are conserved in physical systems, so they should be in programs as well. Similarly, if we are analyzing patient data, the number of records should either stay the same or decrease as we move from one analysis to the next (since we might throw away outliers or records with missing values). If "new" patients start appearing out of nowhere as we move through our pipeline, it's probably a sign that something is wrong.

__Visualize.__ Data analysts frequently use simple visualizations to check both the science they're doing and the correctness of their code (just as we did in the opening lesson of this tutorial). This should only be used for debugging as a last resort, though, since it's very hard to compare two visualizations automatically.

## Make It Fail Every Time

We can only debug something when it fails, so the second step is always to find a test case that makes it fail every time. The "every time" part is important because few things are more frustrating than debugging an intermittent problem: if we have to call a function a dozen times to get a single failure, the odds are good that we'll scroll past the failure when it actually occurs.

As part of this, it's always important to check that our code is "plugged in", i.e., that we're actually exercising the problem that we think we are. Every programmer has spent hours chasing a bug, only to realize that they were actually calling their code on the wrong data set or with the wrong configuration parameters, or are using the wrong version of the software entirely. Mistakes like these are particularly likely to happen when we're tired, frustrated, and up against a deadline, which is one of the reasons late-night (or overnight) coding sessions are almost never worthwhile.

## Make It Fail Fast

If it takes 20 minutes for the bug to surface, we can only do three experiments an hour. That doesn't must mean we'll get less data in more time: we're also more likely to be distracted by other things as we wait for our program to fail, which means the time we are spending on the problem is less focused. It's therefore critical to make it fail fast.

As well as making the program fail fast in time, we want to make it fail fast in space, i.e., we want to localize the failure to the smallest possible region of code:

The smaller the gap between cause and effect, the easier the connection is to find. Many programmers therefore use a divide and conquer strategy to find bugs, i.e., if the output of a function is wrong, they check whether things are OK in the middle, then concentrate on either the first or second half, and so on.

N things can interact in N2/2 different ways, so every line of code that isn't run as part of a test means more than one thing we don't need to worry about.

## Change One Thing at a Time, For a Reason

Replacing random chunks of code is unlikely to do much good. (After all, if you got it wrong the first time, you'll probably get it wrong the second and third as well.) Good programmers therefore change one thing at a time, for a reason They are either trying to gather more information ("is the bug still there if we change the order of the loops?") or test a fix ("can we make the bug go away by sorting our data before processing it?").

Every time we make a change, however small, we should re-run our tests immediately, because the more things we change at once, the harder it is to know what's responsible for what (those N2 interactions again). And we should re-run all of our tests: more than half of fixes made to code introduce (or re-introduce) bugs, so re-running all of our tests tells us whether we have regressed.

## Keep Track of What You've Done

Good scientists keep track of what they've done so that they can reproduce their work, and so that they don't waste time repeating the same experiments or running ones whose results won't be interesting. Similarly, debugging works best when we keep track of what we've done and how well it worked. If we find ourselves asking, "Did left followed by right with an odd number of lines cause the crash? Or was it right followed by left? Or was I using an even number of lines?" then it's time to step away from the computer, take a deep breath, and start working more systematically.

Records are particularly useful when the time comes to ask for help. People are more likely to listen to us when we can explain clearly what we did, and we're better able to give them the information they need to be useful.

## Version Control Revisited

Version control is often used to reset software to a known state during debugging, and to explore recent changes to code that might be responsible for bugs. In particular, most version control systems have a blame command that will show who last changed particular lines of code...

## Be Humble

And speaking of help: if we can't find a bug in 10 minutes, we should be humble and ask for help. Just explaining the problem aloud is often useful, since hearing what we're thinking helps us spot inconsistencies and hidden assumptions.

Asking for help also helps alleviate confirmation bias. If we have just spent an hour writing a complicated program, we want it to work, so we're likely to keep telling ourselves why it should, rather than searching for the reason it doesn't. People who aren't emotionally invested in the code can be more objective, which is why they're often able to spot the simple mistakes we have overlooked.

Part of being humble is learning from our mistakes. Programmers tend to get the same things wrong over and over: either they don't understand the language and libraries they're working with, or their model of how things work is wrong. In either case, taking note of why the error occurred and checking for it next time quickly turns into not making the mistake at all.

And that is what makes us most productive in the long run. As the saying goes, "A week of hard work can sometimes save you an hour of thought." If we train ourselves to avoid making some kinds of mistakes, to break our code into modular, testable chunks, and to turn every assumption (or mistake) into an assertion, it will actually take us less time to produce working programs, not more.

## Key Points

* Program defensively, i.e., assume that errors are going to arise, and write code to detect them when they do.
* Write tests before writing code in order to help determine exactly what that code is supposed to do.
* Know what code is supposed to do before trying to debug it.
* Make it fail every time.
* Make it fail fast.
* Change one thing at a time, and for a reason.
* Keep track of what you've done.
* Be humble.

## Next Steps

We have now seen the basics of building and testing R code in RStudio. The last thing we need to learn is how to build command-line programs that we can use in pipelines and shell scripts, so that we can integrate our tools with other people's work. This will be the subject of our next and final lesson.



# Some best practices for using R and designing programs

1. Start your code with a description of what it is:
	

```r
# This is code to replicate the analyses and figures from my 2014 Science
# paper. Code developed by Sarah Supp, Tracy Teal, and Jon Borelli
```


2. Run all of your import statments (`library` or `require`):


```r
library(ggplot2)
library(reshape)
library(vegan)
```


3. Set your working directory. Avoid changing the working directory once a script is underway. Use `setwd()` first . Do it at the beginning of a R session. Better yet, start R inside a project folder.

4. Use `#` or `#-` to set off sections of your code so you can easily scroll through it and find things.

5. If you have only one or a few functions, put them at the top of your code, so they are among the first things run. If you written many functions, put them all in their own .R file, and `source` them. Source will run all of these functions so that you can use them as you need them.


```r
source("my_genius_fxns.R")
```


6. Use consistent style within your code. 

7. Keep your code modular. If a single function or loop gets too long, consider breaking it into smaller pieces.

8. Don't repeat yourself. Automate! If you are repeating the same piece of code on multiple objects or files, use a loop or a function to do the same thing. The more you repeat yourself, the more likely you are to make a mistake.

9. Manage all of your source files for a project in the same directory. Then use relative paths as necessary. For example, use


```r
dat <- read.csv(file = "/files/dataset-2013-01.csv", header = TRUE)
```


rather than:


```r
dat <- read.csv(file = "/Users/Karthik/Documents/sannic-project/files/dataset-2013-01.csv", 
    header = TRUE)
```


10. Don't save a session history (the default option in R, when it asks if you want an `RData` file). Instead, start in a clean environment so that older objects don't contaminate your current environment. This can lead to unexpected results, especially if the code were to be run on someone else's machine.

11. Where possible keep track of `sessionInfo()` somewhere in your project folder. Session information is invaluable since it captures all of the packages used in the current project. If a newer version of a project changes the way a function behaves, you can always go back and reinstall the version that worked (Note: At least on CRAN all older versions of packages are permanently archived).

12. Collaborate. Grab a buddy and practice "code review". We do it for methods and papers, why not code? Our code is a major scientific product and the result of a lot of hard work!

13. Develop your code using version control and frequent updates!

### Challenges

1. What other suggestions do you have?
2. How could we restructure the code we worked on today, to make it easier to read? Discsuss with your neighbor.
3. Make two new R scripts called inflammation.R and inflammation_fxns.R 
4. Copy and paste the code so that inflammation.R "does stuff" and inflammation_fxns.R holds all of your functions. __Hint__: you will need to add `source` code to one of the files.




# Taking notes and creating reports:

## Introducing Knitr

`Knitr` is an R package that makes your code neat, pretty, and shows your notes, code, and output simultaneously in an `html` document. You create these documents in `.Rmd` files. You can write in `LateX` or `md`. 

knitr extracts R code in the input document (.Rmd), evaluates it and writes the results to the output document (html). There are two types of R code: chunks (code as separate paragraphs) and inline R code.


```r
install.packages("knitr")
```


```r
library(knitr)
```


Restart RStudio. 
Open a new `Rmd` file. 

In Rmd, anything between lines that start and end with triple quotes ``` will be run as R code.


```r
summary(cars)
```


### Challenge

1. Open an new .Rmd script and save it as inflammation_report.Rmd
2. Copy and paste the code as embedded R chunks to read in the data and plot average inflammation, or the heat map that we created.
3. Add a few notes describing what the code does and what the main findings are.
4. `KNIT` and view the html

This lesson is written as an introduction to R,
but its real purpose is to introduce the single most important idea in programming:
how to solve problems by building functions,
each of which can fit in a programmer's working memory.
In order to teach that,
we must teach people a little about
the mechanics of manipulating data with lists and file I/O
so that their functions can do things they actually care about.
Our teaching order tries to show practical uses of every idea as soon as it is introduced;
instructors should resist the temptation to explain
the "other 90%" of the language
as well.

The secondary goal of this lesson is to give them a usable mental model of how programs run
(what computer science educators call a [notional machine](../../gloss.html#notional-machine)
so that they can debug things when they go wrong.
In particular,
they must understand how function call stacks work.

The final example asks them to build a command-line tool
that works with the Unix pipe-and-filter model.
We do this because it is a useful skill
and because it helps learners see that the software they use isn't magical.
Tools like `grep` might be more sophisticated than
the programs our learners can write at this point in their careers,
but it's crucial they realize this is a difference of scale rather than kind.

## Teaching Notes

*   Watching the instructor grow programs step by step
    is as helpful to learners as anything to do with Python.
    Resist the urge to update a single cell repeatedly
    (which is what you'd probably do in real life).
    Instead,
    clone the previous cell and write the update in the new copy
    so that learners have a complete record of how the program grew.
    Once you've done this,
    you can say,
    "Now why don't we just breaks things into small functions right from the start?"

*   The discussion of command-line scripts
    assumes that students understand standard I/O and building filters,
    which are covered in the lesson on the shell.

---
layout: lesson
root: ../..
title: Programming with R
---
FIXME: to be written.


# Notes on building the novice R material (Diego Barneche on 28/Mar/2014) - I'll use the starting file numbers as headings

## 00
* I dropped the command print from most lines as this is not necessary in R

## 01
* Do we want to include ggplot here? Isn't it too soon?

## 02
* I dropped `return` from the functions as R does return the last line evaluated within the function regardless. It is not mandatory.
* On line 28. R does not require indentation, so I have modified the text.

## 03
* line 99. Not true. One may choose not to use `{}` if the for loop has one line implemented. Same applies for functions and if statements. Still using `{}` is good common practice.
* In my opinion, this section about lists and changes should be together in object types, first lesson. I think there is something about lists already there. This will allow people to understand better dataframes, and why you can use `[[]]` to extract values for a dataframe just like using `$`. Also, there is no material for `arrays`, and how `matrix` is an special case of `array`.
* Another thing to think about is the looping concept. While `for` loops may be more used in other languages, vectorized operations can be optimized using the `apply` family. `for` loops become handy when sequential calculations depend on the previous one or when things are cumulative. In my experience, the concept of `for` loops is generally harder to teach than `apply` statements.

## 04
* I'd rather write TRUE and FALSE explicitly as good practice, better then T or F because this can cause confusion for people that create objects named T and F. I changed it on line 75.
* Maybe the content from 154 to 161 has a better place in object types?

## 05, 06 & 7
* Apparnetly we need to expand on those. I am not sure how much we want to cover for these topics (defensive programming, testing, version control, knitr), but we recently developed some advanced material that could be used for examples:
[Sydney bootcamps](http://nicercode.github.io/2014-02-18-UTS/lessons/)

## Simple formatting changes
* I think we need to be consistent with the use of dataframe(s) or data frame(s). I have standardized for the second
* I avoid using `df` for data frames as it can get people confused with degrees of freedom. I changed it to `dat` instead.
* I replaced naming objects as existing functions (e.g. summary in 01 file)
* We also need to be consistent with `<-` vs. `=`. I have changed everythin to `<-`

## General comments

* Sarah did an awesome job with this material (thanks again Sarah!). However, I think we want to be a bit more careful here as we do not want to teach people how to use R as if they were using Python. These languages are inherently different and, in my opinion, so is the way of teaching them. The concepts surely remain, but the approaches may be different. For example, you will notice that I have eliminated already the havy use of `print` statements as those are generally not necessary in R (at least not in the examples given). 

* We may have to think of other examples to get people engaged, particularly when dealing with functions. Something that is more realistic to users. Althought the audience can vary a lot, R users in general are after some stats. Giving examples of stats functinos may be an idea.

* The same idea apply for the plotting file. There are many plotting situations that we could use that would be much more within the context of a regular biologists, statistician, whatever. Again, based on a more advanced material Rich FitzJohn and Daniel Falster produced for the Sydney bootcamps: [Plotting lesson](http://nicercode.github.io/2014-02-18-UTS/lessons/10-functions/)


---
layout: lesson
root: ../..
title: Shell Reference
---

#### Basic Commands

*   `cat` displays the contents of its inputs.
*   `cd path` changes the current working directory.
*   `cp old new` copies a file.
*   `find` finds files with specific properties that match patterns.
*   `grep` selects lines in files that match patterns.
*   `head` displays the first few lines of its input.
*   `ls path` prints a listing of a specific file or directory; `ls` on its own lists the current working directory.
*   `man command` displays the manual page for a given command.
*   `mkdir path` creates a new directory.
*   `mv old new` moves (renames) a file or directory.
*   `pwd` prints the user's current working directory.
*   `rm path` removes (deletes) a file.
*   `rmdir path` removes (deletes) an empty directory.
*   `sort` sorts its inputs.
*   `tail` displays the last few lines of its input.
*   `touch path` creates an empty file if it doesn't already exist.
*   `wc` counts lines, words, and characters in its inputs.
*   `whoami` shows the user's current identity.

#### Paths

*   `/path/from/root` is an absolute path.
*   `/` on its own refers to the root of the filesystem.
*   `path/without/leading/slash` is a relative path.
*   `.` refers to the current directory, `..` to its parent.
*   `*` matches zero or more characters in a filename, so `*.txt` matches all files ending in `.txt`.
*   `?` matches any single character in a filename, so `?.txt` matches `a.txt` but not `any.txt`.

#### Combining Commands

*   `command > file` redirects a command's output to a file.
*   `first | second` connects the output of the first command to the input of the second.
*   A `for` loop repeats commands once for every thing in a list:

        for variable in name_1 name_2 name_3
        do
            ...commands refering to $variable...
        done

*   Use `$name` to expand a variable (i.e., get its value).
*   `history` displays recent commands, and `!number` to repeat a command by number.
*   `bash filename` runs commands saved in `filename`.
*   `$*` refers to all of a shell script's command-line parameters.
*   `$1`, `$2`, etc., refer to specified command-line parameters.
*   `$(command)` inserts a command's output in place.

---
layout: lesson
root: ../..
title: Git Reference
---
Set global configuration (only needs to be done once per machine):

~~~
git config --global user.name "Your Name"
git config --global user.email "you@some.domain"
git config --global color.ui "auto"
git config --global core.editor "your_editor"
~~~

Initialize the current working directory as a repository:

~~~
git init
~~~

Display the status of the repository:

~~~
git status
~~~

Add specific files to the staging area:

~~~
git add filename_1 filename_2
~~~

Add all modified files in the current directory and its sub-directories to the staging area:

~~~
git add -A .
~~~

Commit changes in the staging area to the repository's history:
(Without `-m` and a message, this command runs a text editor.)

~~~
git commit -m "Some message"
~~~

View the history of the repository:

~~~
git log
~~~

Display differences between the current state of the repository and the last saved state:

~~~
git diff
~~~

Display differences between the current state of a particular file and the last saved state:

~~~
git diff path/to/file
~~~

Display differences between the last saved state and what's in the staging area:

~~~
git diff --staged
~~~

Compare files to the previously saved state:

~~~
git diff HEAD~1 path/to/file
~~~

Compare files to an earlier saved state:

~~~
git diff HEAD~27 path/to/file
~~~

Compare files to a specific earlier state:

~~~
git diff 123456 path/to/file
~~~

Erase changes since the last save:

~~~
git reset --hard HEAD
~~~

Restore file to its state in a previous revision:

~~~
git checkout 123456 path/to/file
~~~

Add a remote to a repository:

~~~
git remote add nickname remote_specification
~~~

Display a repository's remotes:

~~~
git remote -v
~~~

Push changes from a local repository to a remote (assuming `master` already exists in the remote):

~~~
git push nickname master
~~~

Push changes from a local repository to a remote (if `master` doesn't yet exist in the remote):

~~~
git push -u nickname master
~~~

Pull changes from a remote repoisitory:

~~~
git pull nickname master
~~~

Note: `master` may be replaced with another branch name by more advanced users.

Clone a remote repository:

~~~
git clone remote_specification
~~~

Markers used to show conflict in a file during a merge:

~~~
<<<<<<< HEAD
lines from local file
=======
lines from remote file
>>>>>>> 1234567890abcdef1234567890abcdef12345678
~~~

---
layout: lesson
root: ../..
title: Python Reference
---

#### Basic Operations

*   Use `variable = value` to assign a value to a variable.
*   Use `print first, second, third` to display values.
*   Python counts from 0, not from 1.
*   `#` starts a comment.
*   Statements in a block must be indented (usually by four spaces).
*   `help(thing)` displays help.
*   `len(thing)` produces the length of a collection.
*   `[value1, value2, value3, ...]` creates a list.
*   `list_name[i]` selects the i'th value from a list.

#### Control Flow

*   Create a `for` loop to process elements in a collection one at a time:

        for variable in collection:
            ...body...

*   Create a conditional using `if`, `elif`, and `else`:

        if condition_1:
            ...body...
        elif condition_2:
            ...body...
        else:
            ...body...

*   Use `==` to test for equality.
*   `X and Y` is only true if both X and Y are true.
*   `X or Y` is true if either X or Y, or both, are true.
*   Use `assert condition, message` to check that something is true when the program is running.

#### Functions

*   `def name(...params...)` defines a new function.
*   `def name(param=default)` specifies a default value for a parameter.
*   Call a function using `name(...values...)`.

#### Libraries

*   Import a library into a program using `import libraryname`.
*   The `sys` library contains:
    *   `sys.argv`: the command-line arguments a program was run with.
    *   `sys.stdin`, `sys.stdout`: standard input and output.
*   `glob.glob(pattern)` returns a list of files whose names match a pattern.

#### Arrays

*   `import numpy` to load the NumPy library.
*   `array.shape` gives the shape of an array.
*   `array[x, y]` selects a single element from an array.
*   `low:high` specifies a slice including elements from `low` to `high-1`.
*   `array.mean()`, `array.max()`, and `array.min()` calculate simple statistics.
*   `array.mean(axis=0)` calculates statistics across the specified axis.

---
layout: lesson
root: ../..
title: SQL Reference
---

#### Basic Queries

Select one or more columns from a table:

    SELECT column_name_1, column_name_2 FROM table_name;

Select all columns from a table:

    SELECT * FROM table_name;

Get only unique results in a query:

    SELECT DISTINCT column_name FROM table_name;

Perform calculations in a query:

    SELECT column_name_1, ROUND(column_name_2 / 1000.0) FROM table_name;

Sort results in ascending order:

    SELECT * FROM table_name ORDER BY column_name_1;

Sort results in ascending and descending order:

    SELECT * FROM table_name ORDER BY column_name_1 ASC, column_name_2 DESC;

#### Filtering

Select only data meeting a condition:

    SELECT * FROM table_name WHERE column_name > 0;

Select only data meeting a combination of conditions:

    SELECT * FROM table_name WHERE (column_name_1 >= 1000) AND (column_name_2 = 'A' OR column_name_2 = 'B');

#### Missing Data

Use `NULL` to represent missing data.

`NULL` is not 0, false, or any other specific value.
Operations involving `NULL` produce `NULL`, so `1+NULL`, `2>NULL`, and `3=NULL` are all `NULL`.

Test whether a value is null:

    SELECT * FROM table_name WHERE column_name IS NULL;

Test whether a value is not null:

    SELECT * FROM table_name WHERE column_name IS NOT NULL;

#### Grouping and Aggregation

Combine values using aggregation functions:

    SELECT SUM(column_name_1) FROM table_name;

Combine data into groups and calculate combined values in groups:

    SELECT column_name_1, SUM(column_name_2), COUNT(*) FROM table_name GROUP BY column_name_1;

#### Joins

Join data from two tables:

    SELECT * FROM table_name_1 JOIN table_name_2 ON table_name_1.column_name = table_name_2.column_name;

#### Writing Queries

SQL commands must be combined in the following order:
`SELECT`, `FROM`, `JOIN`, `ON`, `WHERE`, `GROUP BY`, `ORDER BY`.

#### Creating Tables

Create tables by specifying column names and types.
Include primary and foreign key relationships and other constraints.

    CREATE TABLE survey(
        taken   INTEGER NOT NULL,
        person  TEXT,
        quant   REAL NOT NULL,
        PRIMARY KEY(taken, quant),
        FOREIGN KEY(person) REFERENCES person(ident)
    );

#### Programming

Execute queries in a general-purpose programming language by:

*   loading the appropriate library
*   creating a connection
*   creating a cursor
*   repeatedly:
    *   execute a query
    *   fetch some or all results
*   disposing of the cursor
*   closing the connection

Python example:

    import sqlite3
    connection = sqlite3.connect("database_name")
    cursor = connection.cursor()
    cursor.execute("...query...")
    for r in cursor.fetchall():
        ...process result r...
    cursor.close()
    connection.close()

---
layout: lesson
root: ../..
title: Reference
---

These short reference guides cover the basic tools and ideas introduced in our lessons.

<div class="toc" markdown="1">

1.  [The Unix Shell](01-shell.html)
2.  [Version Control with Git](02-git.html)
3.  [Programming with Python](03-python.html)
4.  [Using Databases and SQL](04-sql.html)

</div>

---
layout: lesson
root: ../..
title: Introducing the Shell
---
<div class="objectives" markdown="1">

#### Objectives
*   Explain how the shell relates to the keyboard, the screen, the operating system, and users' programs.
*   Explain when and why command-line interfaces should be used instead of graphical interfaces.

</div>

Nelle Nemo, a marine biologist,
has just returned from a six-month survey of the
[North Pacific Gyre](http://en.wikipedia.org/wiki/North_Pacific_Gyre),
where she has been sampling gelatinous marine life in the
[Great Pacific Garbage Patch](http://en.wikipedia.org/wiki/Great_Pacific_Garbage_Patch).
She has 300 samples in all, and now needs to:

1.  Run each sample through an assay machine
    that will measure the relative abundance of 300 different proteins.
    The machine's output for a single sample is
    a file with one line for each protein.
2.  Calculate statistics for each of the proteins separately
    using a program her supervisor wrote called `goostat`.
3.  Compare the statistics for each protein
    with corresponding statistics for each other protein
    using a program one of the other graduate students wrote called `goodiff`.
4.  Write up.
    Her supervisor would really like her to do this by the end of the month
    so that her paper can appear in an upcoming special issue of *Aquatic Goo Letters*.

It takes about half an hour for the assay machine to process each sample.
The good news is,
it only takes two minutes to set each one up.
Since her lab has eight assay machines that she can use in parallel,
this step will "only" take about two weeks.

The bad news is that if she has to run `goostat` and `goodiff` by hand,
she'll have to enter filenames and click "OK" 45,150 times
(300 runs of `goostat`, plus 300&times;299/2 runs of `goodiff`).
At 30 seconds each,
that will take more than two weeks.
Not only would she miss her paper deadline,
the chances of her typing all of those commands right are practically zero.

The next few lessons will explore what she should do instead.
More specifically,
they explain how she can use a command shell
to automate the repetitive steps in her processing pipeline
so that her computer can work 24 hours a day while she writes her paper.
As a bonus,
once she has put a processing pipeline together,
she will be able to use it again whenever she collects more data.

#### What and Why

At a high level, computers do four things:

-   run programs;
-   store data;
-   communicate with each other; and
-   interact with us.

They can do the last of these in many different ways,
including direct brain-computer links and speech interfaces.
Since these are still in their infancy,
most of us use windows, icons, mice, and pointers.
These technologies didn't become widespread until the 1980s,
but their roots go back to Doug Engelbart's work in the 1960s,
which you can see in what has been called
"[The Mother of All Demos](http://www.youtube.com/watch?v=a11JDLBXtPQ)".

Going back even further,
the only way to interact with early computers was to rewire them.
But in between,
from the 1950s to the 1980s,
most people used line printers.
These devices only allowed input and output of the letters, numbers, and punctuation found on a standard keyboard,
so programming languages and interfaces had to be designed around that constraint.

This kind of interface is called a
[command-line interface](../../gloss.html#cli), or CLI,
to distinguish it from the
[graphical user interface](../../gloss.html#gui), or GUI,
that most people now use.
The heart of a CLI is a [read-evaluate-print loop](../../gloss.html#repl), or REPL:
when the user types a command and then presses the enter (or return) key,
the computer reads it,
executes it,
and prints its output.
The user then types another command,
and so on until the user logs off.

This description makes it sound as though the user sends commands directly to the computer,
and the computer sends output directly to the user.
In fact,
there is usually a program in between called a
[command shell](../../gloss.html#shell).
What the user types goes into the shell;
it figures out what commands to run and orders the computer to execute them.

A shell is a program like any other.
What's special about it is that its job is to run other programs
rather than to do calculations itself.
The most popular Unix shell is Bash,
the Bourne Again SHell
(so-called because it's derived from a shell written by Stephen Bourne&mdash;this
is what passes for wit among programmers).
Bash is the default shell on most modern implementations of Unix,
and in most packages that provide Unix-like tools for Windows.

Using Bash or any other shell
sometimes feels more like programming than like using a mouse.
Commands are terse (often only a couple of characters long),
their names are frequently cryptic,
and their output is lines of text rather than something visual like a graph.
On the other hand,
the shell allows us to combine existing tools in powerful ways with only a few keystrokes
and to set up pipelines to handle large volumes of data automatically.
In addition,
the command line is often the easiest way to interact with remote machines.
As clusters and cloud computing become more popular for scientific data crunching,
being able to drive them is becoming a necessary skill.

<div class="keypoints" markdown="1">

#### Key Points
*   A shell is a program whose primary purpose is to read commands and run other programs.
*   The shell's main advantages are its high action-to-keystroke ratio,
    its support for automating repetitive tasks,
    and that it can be used to access networked machines.
*   The shell's main disadvantages are its primarily textual nature
    and how cryptic its commands and operation can be.

</div>

---
layout: lesson
root: ../..
title: Files and Directories
---
<div class="objectives" markdown="1">

#### Objectives
*   Explain the similarities and differences between a file and a directory.
*   Translate an absolute path into a relative path and vice versa.
*   Construct absolute and relative paths that identify specific files and directories.
*   Explain the steps in the shell's read-run-print cycle.
*   Identify the actual command, flags, and filenames in a command-line call.
*   Demonstrate the use of tab completion, and explain its advantages.

</div>

The part of the operating system responsible for managing files and directories
is called the [file system](../../gloss.html#filesystem).
It organizes our data into files,
which hold information,
and directories (also called "folders"),
which hold files or other directories.

Several commands are frequently used to create, inspect, rename, and delete files and directories.
To start exploring them,
let's open a shell window:

~~~
$
~~~
{:class="in"}

The dollar sign is a [prompt](../../gloss.html#prompt),
which shows us that the shell is waiting for input;
your shell may show something more elaborate.

Type the command `whoami`,
then press the Enter key (sometimes marked Return) to send the command to the shell.
The command's output is the ID of the current user,
i.e.,
it shows us who the shell thinks we are:

~~~
$ whoami
~~~
{:class="in"}
~~~
vlad
~~~
{:class="out"}

More specifically, when we type `whoami` the shell:

1.  finds a program called `whoami`,
2.  runs that program,
3.  displays that program's output, then
4.  displays a new prompt to tell us that it's ready for more commands.

Next,
let's find out where we are by running a command called `pwd`
(which stands for "print working directory").
At any moment,
our [current working directory](../../gloss.html#current-working-directory)
is our current default directory,
i.e.,
the directory that the computer assumes we want to run commands in
unless we explicitly specify something else.
Here,
the computer's response is `/users/vlad`,
which is Vlad's [home directory](../../gloss.html#home-directory):

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad
~~~
{:class="out"}

> #### Alphabet Soup
> 
> If the command to find out who we are is `whoami`, the command to find
> out where we are ought to be called `whereami`, so why is it `pwd`
> instead? The usual answer is that in the early 1970s, when Unix was
> first being developed, every keystroke counted: the devices of the day
> were slow, and backspacing on a teletype was so painful that cutting the
> number of keystrokes in order to cut the number of typing mistakes was
> actually a win for usability. The reality is that commands were added to
> Unix one by one, without any master plan, by people who were immersed in
> its jargon. The result is as inconsistent as the roolz uv Inglish
> speling, but we're stuck with it now.

To understand what a "home directory" is,
let's have a look at how the file system as a whole is organized.
At the top is the [root directory](../../gloss.html#root-directory)
that holds everything else.
We refer to it using a slash character `/` on its own;
this is the leading slash in `/users/vlad`.

Inside that directory are several other directories:
`bin` (which is where some built-in programs are stored),
`data` (for miscellaneous data files),
`users` (where users' personal directories are located),
`tmp` (for temporary files that don't need to be stored long-term),
and so on:

<img src="img/filesystem.svg" alt="The Filesystem" />

We know that our current working directory `/users/vlad` is stored inside `/users`
because `/users` is the first part of its name.
Similarly,
we know that `/users` is stored inside the root directory `/`
because its name begins with `/`.

Underneath `/users`,
we find one directory for each user with an account on this machine.
The Mummy's files are stored in `/users/imhotep`,
Wolfman's in `/users/larry`,
and ours in `/users/vlad`,
which is why `vlad` is the last part of the directory's name.

<img src="img/home-directories.svg" alt="Home Directories" />

> Notice that there are two meanings for the `/` character.
> When it appears at the front of a file or directory name,
> it refers to the root directory. When it appears *inside* a name,
> it's just a separator.

Let's see what's in Vlad's home directory by running `ls`,
which stands for "listing":

~~~
$ ls
~~~
{:class="in"}
~~~
bin          data      mail       music
notes.txt    papers    pizza.cfg  solar
solar.pdf    swc
~~~
{:class="out"}

<img src="img/vlad-homedir.svg" alt="Vlad's Home Directory" />

`ls` prints the names of the files and directories in the current directory in alphabetical order,
arranged neatly into columns.
We can make its output more comprehensible by using the [flag](../../gloss.html#command-line-flag) `-F`,
which tells `ls` to add a trailing `/` to the names of directories:

~~~
$ ls -F
~~~
{:class="in"}
~~~
bin/         data/     mail/      music/
notes.txt    papers/   pizza.cfg  solar/
solar.pdf    swc/
~~~
{:class="out"}

Here,
we can see that `/users/vlad` contains seven [sub-directories](../../gloss.html#sub-directory).
The names that don't have trailing slashes,
like `notes.txt`, `pizza.cfg`, and `solar.pdf`,
are plain old files.
And note that there is a space between `ls` and `-F`:
without it,
the shell thinks we're trying to run a command called `ls-F`,
which doesn't exist.

> #### What's In A Name?
> 
> You may have noticed that all of Vlad's files' names are "something dot
> something". This is just a convention: we can call a file `mythesis` or
> almost anything else we want. However, most people use two-part names
> most of the time to help them (and their programs) tell different kinds
> of files apart. The second part of such a name is called the
> [filename extension](../../gloss.html#filename-extension), and indicates
> what type of data the file holds: `.txt` signals a plain text file, `.pdf`
> indicates a PDF document, `.cfg` is a configuration file full of parameters
> for some program or other, and so on.
>
> This is just a convention, albeit an important one. Files contain
> bytes: it's up to us and our programs to interpret those bytes
> according to the rules for PDF documents, images, and so on.
>
> Naming a PNG image of a whale as `whale.mp3` doesn't somehow
> magically turn it into a recording of whalesong, though it *might*
> cause the operating system to try to open it with a music player
> when someone double-clicks it.

Now let's take a look at what's in Vlad's `data` directory by running `ls -F data`,
i.e.,
the command `ls` with the [arguments](../../gloss.html#argument) `-F` and `data`.
The second argument&mdash;the one *without* a leading dash&mdash;tells `ls` that
we want a listing of something other than our current working directory:

~~~
$ ls -F data
~~~
{:class="in"}
~~~
amino-acids.txt   elements/     morse.txt
pdb/              planets.txt   sunspot.txt
~~~
{:class="out"}

The output shows us that there are four text files and two sub-sub-directories.
Organizing things hierarchically in this way helps us keep track of our work:
it's possible to put hundreds of files in our home directory,
just as it's possible to pile hundreds of printed papers on our desk,
but it's a self-defeating strategy.

Notice, by the way that we spelled the directory name `data`.
It doesn't have a trailing slash:
that's added to directory names by `ls` when we use the `-F` flag to help us tell things apart.
And it doesn't begin with a slash because it's a [relative path](../../gloss.html#relative-path),
i.e., it tells `ls` how to find something from where we are,
rather than from the root of the file system.

> #### Parameters vs. Arguments
>
> According to [Wikipedia](https://en.wikipedia.org/wiki/Parameter_(computer_programming)#Parameters_and_arguments),
> the terms [argument](../../gloss.html#argument) and [parameter](../../gloss.html#parameter)
> mean slightly different things.
> In practice,
> however,
> most people use them interchangeably or inconsistently,
> so we will too.

If we run `ls -F /data` (*with* a leading slash) we get a different answer,
because `/data` is an [absolute path](../../gloss.html#absolute-path):

~~~
$ ls -F /data
~~~
{:class="in"}
~~~
access.log    backup/    hardware.cfg
network.cfg
~~~
{:class="out"}

The leading `/` tells the computer to follow the path from the root of the filesystem,
so it always refers to exactly one directory,
no matter where we are when we run the command.

What if we want to change our current working directory?
Before we do this,
`pwd` shows us that we're in `/users/vlad`,
and `ls` without any arguments shows us that directory's contents:

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad
~~~
{:class="out"}
~~~
$ ls
~~~
{:class="in"}
~~~
bin/         data/     mail/      music/
notes.txt    papers/   pizza.cfg  solar/
solar.pdf    swc/
~~~
{:class="out"}

We can use `cd` followed by a directory name to change our working directory.
`cd` stands for "change directory",
which is a bit misleading:
the command doesn't change the directory,
it changes the shell's idea of what directory we are in.

~~~
$ cd data
~~~
{:class="in"}

`cd` doesn't print anything,
but if we run `pwd` after it, we can see that we are now in `/users/vlad/data`.
If we run `ls` without arguments now,
it lists the contents of `/users/vlad/data`,
because that's where we now are:

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad/data
~~~
{:class="out"}
~~~
$ ls
~~~
{:class="in"}
~~~
amino-acids.txt   elements/     morse.txt
pdb/              planets.txt   sunspot.txt
~~~
{:class="out"}

We now know how to go down the directory tree:
how do we go up?
We could use an absolute path:

~~~
$ cd /users/vlad
~~~
{:class="in"}

but it's almost always simpler to use `cd ..` to go up one level:

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad/data
~~~
{:class="out"}
~~~
$ cd ..
~~~
{:class="in"}

`..` is a special directory name meaning
"the directory containing this one",
or more succinctly,
the [parent](../../gloss.html#parent-directory) of the current directory.
Sure enough,
if we run `pwd` after running `cd ..`, we're back in `/users/vlad`:

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad
~~~
{:class="out"}

The special directory `..` doesn't usually show up when we run `ls`.
If we want to display it, we can give `ls` the `-a` flag:

~~~
$ ls -F -a
~~~
{:class="in"}
~~~
./           ../       bin/       data/
mail/        music/    notes.txt  papers/
pizza.cfg    solar/    solar.pdf    swc/
~~~
{:class="out"}

`-a` stands for "show all";
it forces `ls` to show us file and directory names that begin with `.`,
such as `..` (which, if we're in `/users/vlad`, refers to the `/users` directory).
As you can see,
it also displays another special directory that's just called `.`,
which means "the current working directory".
It may seem redundant to have a name for it,
but we'll see some uses for it soon.

> #### Orthogonality
> 
> The special names `.` and `..` don't belong to `ls`;
> they are interpreted the same way by every program.
> For example,
> if we are in `/users/vlad/data`,
> the command `ls ..` will give us a listing of `/users/vlad`.
> When the meanings of the parts are the same no matter how they're combined,
> programmers say they are [orthogonal](../../gloss.html#orthogonal):
> Orthogonal systems tend to be easier for people to learn
> because there are fewer special cases and exceptions to keep track of.

#### Nelle's Pipeline: Organizing Files

Knowing just this much about files and directories,
Nelle is ready to organize the files that the protein assay machine will create.
First,
she creates a directory called `north-pacific-gyre`
(to remind herself where the data came from).
Inside that,
she creates a directory called `2012-07-03`,
which is the date she started processing the samples.
She used to use names like `conference-paper` and `revised-results`,
but she found them hard to understand after a couple of years.
(The final straw was when she found herself creating
a directory called `revised-revised-results-3`.)

> Nelle names her directories "year-month-day",
> with leading zeroes for months and days,
> because the shell displays file and directory names in alphabetical order.
> If she used month names,
> December would come before July;
> if she didn't use leading zeroes,
> November ('11') would come before July ('7').

Each of her physical samples is labelled according to her lab's convention
with a unique ten-character ID,
such as "NENE01729A".
This is what she used in her collection log
to record the location, time, depth, and other characteristics of the sample,
so she decides to use it as part of each data file's name.
Since the assay machine's output is plain text,
she will call her files `NENE01729A.txt`, `NENE01812A.txt`, and so on.
All 1520 files will go into the same directory.

If she is in her home directory,
Nelle can see what files she has using the command:

~~~
$ ls north-pacific-gyre/2012-07-03/
~~~
{:class="in"}

This is a lot to type,
but she can let the shell do most of the work.
If she types:

~~~
$ ls no
~~~
{:class="in"}

and then presses tab,
the shell automatically completes the directory name for her:

~~~
$ ls north-pacific-gyre/
~~~
{:class="in"}

If she presses tab again,
Bash will add `2012-07-03/` to the command,
since it's the only possible completion.
Pressing tab again does nothing,
since there are 1520 possibilities;
pressing tab twice brings up a list of all the files,
and so on.
This is called [tab completion](../../gloss.html#tab-completion),
and we will see it in many other tools as we go on.

<div class="keypoints" markdown="1">

#### Key Points
*   The file system is responsible for managing information on the disk.
*   Information is stored in files, which are stored in directories (folders).
*   Directories can also store other directories, which forms a directory tree.
*   `/` on its own is the root directory of the whole filesystem.
*   A relative path specifies a location starting from the current location.
*   An absolute path specifies a location from the root of the filesystem.
*   Directory names in a path are separated with '/' on Unix, but '\\' on Windows.
*   '..' means "the directory above the current one";
    '.' on its own means "the current directory".
*   Most files' names are `something.extension`.
    The extension isn't required,
    and doesn't guarantee anything,
    but is normally used to indicate the type of data in the file.
*   Most commands take options (flags) which begin with a '-'.

</div>

<div class="challenges" markdown="1">

#### Challenges

<img src="img/filesystem-challenge.svg" alt="Filesystem for Challenge Questions" />

1.  If `pwd` displays `/users/thing`, what will `ls ../backup` display?
    1.  `../backup: No such file or directory`
    2.  `2012-12-01 2013-01-08 2013-01-27`
    3.  `2012-12-01/ 2013-01-08/ 2013-01-27/`
    4.  `original pnas_final pnas_sub`

2.  If `pwd` displays `/users/backup`,
    and `-r` tells `ls` to display things in reverse order,
    what command will display:

    ~~~
    pnas-sub/ pnas-final/ original/
    ~~~

    1.  `ls pwd`
    2.  `ls -r -F`
    3.  `ls -r -F /users/backup`
    4.  Either \#2 or \#3 above, but not \#1.

3.  What does the command `cd` without a directory name do?
    1.  It has no effect.
    2.  It changes the working directory to `/`.
    3.  It changes the working directory to the user's home directory.
    4.  It produces an error message.

4.  What does the command `ls` do when used with the -s and -h arguments?
</div>

---
layout: lesson
root: ../..
title: Creating Things
---
<div class="objectives" markdown="1">

#### Objectives
*   Create a directory hierarchy that matches a given diagram.
*   Create files in that hierarchy using an editor or by copying and renaming existing files.
*   Display the contents of a directory using the command line.
*   Delete specified files and/or directories.

</div>

We now know how to explore files and directories,
but how do we create them in the first place?
Let's go back to Vlad's home directory,
`/users/vlad`,
and use `ls -F` to see what it contains:

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad
~~~
{:class="out"}
~~~
$ ls -F
~~~
{:class="in"}
~~~
bin/         data/     mail/      music/
notes.txt    papers/   pizza.cfg  solar/
solar.pdf    swc/
~~~
{:class="out"}

Let's create a new directory called `thesis` using the command `mkdir thesis`
(which has no output):

~~~
$ mkdir thesis
~~~
{:class="in"}

As you might (or might not) guess from its name,
`mkdir` means "make directory".
Since `thesis` is a relative path
(i.e., doesn't have a leading slash),
the new directory is made below the current working directory:

~~~
$ ls -F
~~~
{:class="in"}
~~~
bin/         data/     mail/      music/
notes.txt    papers/   pizza.cfg  solar/
solar.pdf    swc/      thesis/
~~~
{:class="out"}

However, there's nothing in it yet:

~~~
$ ls -F thesis
~~~
{:class="in"}

Let's change our working directory to `thesis` using `cd`,
then run a text editor called Nano to create a file called `draft.txt`:

~~~
$ cd thesis
$ nano draft.txt
~~~
{:class="in"}

> #### Which Editor?
> 
> When we say, "`nano` is a text editor," we really do mean "text": it can
> only work with plain character data, not tables, images, or any other
> human-friendly media. We use it in examples because almost anyone can
> drive it anywhere without training, but please use something more
> powerful for real work. On Unix systems (such as Linux and Mac OS X),
> many programmers use [Emacs](http://www.gnu.org/software/emacs/) or
> [Vim](http://www.vim.org/) (both of which are completely unintuitive,
> even by Unix standards), or a graphical editor such as
> [Gedit](http://projects.gnome.org/gedit/). On Windows, you may wish to
> use [Notepad++](http://notepad-plus-plus.org/).
> 
> No matter what editor you use, you will need to know where it searches
> for and saves files. If you start it from the shell, it will (probably)
> use your current working directory as its default location. If you use
> your computer's start menu, it may want to save files in your desktop or
> documents directory instead. You can change this by navigating to
> another directory the first time you "Save As..."

Let's type in a few lines of text,
then use Control-O to write our data to disk:

<img src="img/nano-screenshot.png" alt="Nano in Action" />

Once our file is saved,
we can use Control-X to quit the editor and return to the shell.
(Unix documentation often uses the shorthand `^A` to mean "control-A".)
`nano` doesn't leave any output on the screen after it exits,
but `ls` now shows that we have created a file called `draft.txt`:

~~~
$ ls
~~~
{:class="in"}
~~~
draft.txt
~~~
{:class="out"}

Let's tidy up by running `rm draft.txt`:

~~~
$ rm draft.txt
~~~
{:class="in"}

This command removes files ("rm" is short for "remove").
If we run `ls` again,
its output is empty once more,
which tells us that our file is gone:

~~~
$ ls
~~~
{:class="in"}

> #### Deleting Is Forever
> 
> Unix doesn't have a trash bin: when we delete files, they are unhooked
> from the file system so that their storage space on disk can be
> recycled. Tools for finding and recovering deleted files do exist, but
> there's no guarantee they'll work in any particular situation, since the
> computer may recycle the file's disk space right away.

Let's re-create that file
and then move up one directory to `/users/vlad` using `cd ..`:

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad/thesis
~~~
{:class="out"}
~~~
$ nano draft.txt
$ ls
~~~
{:class="in"}
~~~
draft.txt
~~~
{:class="out"}
~~~
$ cd ..
~~~
{:class="in"}

If we try to remove the entire `thesis` directory using `rm thesis`,
we get an error message:

~~~
$ rm thesis
~~~
{:class="in"}
~~~
rm: cannot remove `thesis': Is a directory
~~~
{:class="err"}

This happens because `rm` only works on files, not directories.
The right command is `rmdir`,
which is short for "remove directory".
It doesn't work yet either, though,
because the directory we're trying to remove isn't empty:

~~~
$ rmdir thesis
~~~
{:class="in"}
~~~
rmdir: failed to remove `thesis': Directory not empty
~~~
{:class="err"}

This little safety feature can save you a lot of grief,
particularly if you are a bad typist.
To really get rid of `thesis` we must first delete the file `draft.txt`:

~~~
$ rm thesis/draft.txt
~~~
{:class="in"}

The directory is now empty, so `rmdir` can delete it:

~~~
$ rmdir thesis
~~~
{:class="in"}

> #### With Great Power Comes Great Responsibility
> 
> Removing the files in a directory just so that we can remove the
> directory quickly becomes tedious. Instead, we can use `rm` with the
> `-r` flag (which stands for "recursive"):
> 
> ~~~
> $ rm -r thesis
> ~~~
> 
> This removes everything in the directory, then the directory itself. If
> the directory contains sub-directories, `rm -r` does the same thing to
> them, and so on. It's very handy, but can do a lot of damage if used
> without care.

Let's create that directory and file one more time.
(Note that this time we're running `nano` with the path `thesis/draft.txt`,
rather than going into the `thesis` directory and running `nano` on `draft.txt` there.)

~~~
$ pwd
~~~
{:class="in"}
~~~
/users/vlad
~~~
{:class="out"}
~~~
$ mkdir thesis
~~~
{:class="in"}
~~~
$ nano thesis/draft.txt
$ ls thesis
~~~
{:class="in"}
~~~
draft.txt
~~~
{:class="out"}

`draft.txt` isn't a particularly informative name,
so let's change the file's name using `mv`,
which is short for "move":

~~~
$ mv thesis/draft.txt thesis/quotes.txt
~~~
{:class="in"}

The first parameter tells `mv` what we're "moving",
while the second is where it's to go.
In this case,
we're moving `thesis/draft.txt` to `thesis/quotes.txt`,
which has the same effect as renaming the file.
Sure enough,
`ls` shows us that `thesis` now contains one file called `quotes.txt`:

~~~
$ ls thesis
~~~
{:class="in"}
~~~
quotes.txt
~~~
{:class="out"}

Just for the sake of inconsistency,
`mv` also works on directories&mdash;there is no separate `mvdir` command.

Let's move `quotes.txt` into the current working directory.
We use `mv` once again,
but this time we'll just use the name of a directory as the second parameter
to tell `mv` that we want to keep the filename,
but put the file somewhere new.
(This is why the command is called "move".)
In this case,
the directory name we use is the special directory name `.` that we mentioned earlier.

~~~
$ mv thesis/quotes.txt .
~~~
{:class="in"}

The effect is to move the file from the directory it was in to the current working directory.
`ls` now shows us that `thesis` is empty:

~~~
$ ls thesis
~~~
{:class="in"}

Further,
`ls` with a filename or directory name as a parameter only lists that file or directory.
We can use this to see that `quotes.txt` is still in our current directory:

~~~
$ ls quotes.txt
~~~
{:class="in"}
~~~
quotes.txt
~~~
{:class="out"}

The `cp` command works very much like `mv`,
except it copies a file instead of moving it.
We can check that it did the right thing using `ls`
with two paths as parameters&mdash;like most Unix commands,
`ls` can be given thousands of paths at once:

~~~
$ cp quotes.txt thesis/quotations.txt
$ ls quotes.txt thesis/quotations.txt
~~~
{:class="in"}
~~~
quotes.txt   thesis/quotations.txt
~~~
{:class="out"}

To prove that we made a copy,
let's delete the `quotes.txt` file in the current directory
and then run that same `ls` again.
This time it tells us that it can't find `quotes.txt` in the current directory,
but it does find the copy in `thesis` that we didn't delete:

~~~
$ ls quotes.txt thesis/quotations.txt
~~~
{:class="in"}
~~~
ls: cannot access quotes.txt: No such file or directory
thesis/quotations.txt
~~~
{:class="err"}

> #### Another Useful Abbreviation
> 
> The shell interprets the character `~` (tilde) at the start of a path to
> mean "the current user's home directory". For example, if Vlad's home
> directory is `/home/vlad`, then `~/data` is equivalent to
> `/home/vlad/data`. This only works if it is the first character in the
> path: `here/there/~/elsewhere` is *not* `/home/vlad/elsewhere`.

<div class="keypoints" markdown="1">

#### Key Points
*   Unix documentation uses '^A' to mean "control-A".
*   The shell does not have a trash bin: once something is deleted, it's really gone.
*   Nano is a very simple text editor&mdash;please use something else for real work.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  What is the output of the closing `ls` command in the sequence shown below?

    ~~~
    $ pwd
    /home/thing/data
    $ ls
    proteins.dat
    $ mkdir recombine
    $ mv proteins.dat recombine
    $ cp recombine/proteins.dat ../proteins-saved.dat
    $ ls
    ~~~

2.  Suppose that:

    ~~~
    $ ls -F
    analyzed/  fructose.dat    raw/   sucrose.dat
    ~~~

    What command(s) could you run so that the commands below will produce the output shown?

    ~~~
    $ ls
    analyzed   raw
    $ ls analyzed
    fructose.dat    sucrose.dat
    ~~~

3.  What does `cp` do when given several filenames and a directory name, as in:

    ~~~
    $ mkdir backup
    $ cp thesis/citations.txt thesis/quotations.txt backup
    ~~~

    What does `cp` do when given three or more filenames, as in:

    ~~~
    $ ls -F
    intro.txt    methods.txt    survey.txt
    $ cp intro.txt methods.txt survey.txt
    ~~~

4.  The command `ls -R` lists the contents of directories recursively,
    i.e., lists their sub-directories, sub-sub-directories, and so on
    in alphabetical order at each level.
    The command `ls -t` lists things by time of last change,
    with most recently changed files or directories first.
    In what order does `ls -R -t` display things?

</div>

---
layout: lesson
root: ../..
title: Pipes and Filters
---
<div class="objectives" markdown="1">

#### Objectives
*   Redirect a command's output to a file.
*   Process a file instead of keyboard input using redirection.
*   Construct command pipelines with two or more stages.
*   Explain what usually happens if a program or pipeline isn't given any input to process.
*   Explain Unix's "small pieces, loosely joined" philosophy.

</div>

Now that we know a few basic commands,
we can finally look at the shell's most powerful feature:
the ease with which it lets us combine existing programs in new ways.
We'll start with a directory called `molecules`
that contains six files describing some simple organic molecules.
The `.pdb` extension indicates that these files are in Protein Data Bank format,
a simple text format that specifies the type and position of each atom in the molecule.

~~~
$ ls molecules
~~~
{:class="in"}
~~~
cubane.pdb    ethane.pdb    methane.pdb
octane.pdb    pentane.pdb   propane.pdb
~~~
{:class="out"}

Let's go into that directory with `cd` and run the command `wc *.pdb`.
`wc` is the "word count" command:
it counts the number of lines, words, and characters in files.
The `*` in `*.pdb` matches zero or more characters,
so the shell turns `*.pdb` into a complete list of `.pdb` files:

~~~
$ cd molecules
$ wc *.pdb
~~~
{:class="in"}
~~~
  20  156 1158 cubane.pdb
  12   84  622 ethane.pdb
   9   57  422 methane.pdb
  30  246 1828 octane.pdb
  21  165 1226 pentane.pdb
  15  111  825 propane.pdb
 107  819 6081 total
~~~
{:class="out"}

> #### Wildcards
> 
> `*` is a [wildcard](../../gloss.html#wildcard). It matches zero or more
> characters, so `*.pdb` matches `ethane.pdb`, `propane.pdb`, and so on.
> On the other hand, `p*.pdb` only matches `pentane.pdb` and
> `propane.pdb`, because the 'p' at the front only matches itself.
> 
> `?` is also a wildcard, but it only matches a single character. This
> means that `p?.pdb` matches `pi.pdb` or `p5.pdb`, but not `propane.pdb`.
> We can use any number of wildcards at a time: for example, `p*.p?*`
> matches anything that starts with a 'p' and ends with '.', 'p', and at
> least one more character (since the '?' has to match one character, and
> the final '\*' can match any number of characters). Thus, `p*.p?*` would
> match `preferred.practice`, and even `p.pi` (since the first '\*' can
> match no characters at all), but not `quality.practice` (doesn't start
> with 'p') or `preferred.p` (there isn't at least one character after the
> '.p').
> 
> When the shell sees a wildcard, it expands the wildcard to create a
> list of matching filenames *before* running the command that was
> asked for.  This means that commands like `wc` and `ls` never see
> the wildcard characters, just what those wildcards matched. This is
> another example of orthogonal design.

If we run `wc -l` instead of just `wc`,
the output shows only the number of lines per file:

~~~
$ wc -l *.pdb
~~~
{:class="in"}
~~~
  20  cubane.pdb
  12  ethane.pdb
   9  methane.pdb
  30  octane.pdb
  21  pentane.pdb
  15  propane.pdb
 107  total
~~~
{:class="out"}

We can also use `-w` to get only the number of words,
or `-c` to get only the number of characters.

Which of these files is shortest?
It's an easy question to answer when there are only six files,
but what if there were 6000?
Our first step toward a solution is to run the command:

~~~
$ wc -l *.pdb > lengths
~~~
{:class="in"}

The `>` tells the shell to [redirect](../../gloss.html#redirect) the command's output
to a file instead of printing it to the screen.
The shell will create the file if it doesn't exist,
or overwrite the contents of that file if it does.
(This is why there is no screen output:
everything that `wc` would have printed has gone into the file `lengths` instead.)
`ls lengths` confirms that the file exists:

~~~
$ ls lengths
~~~
{:class="in"}
~~~
lengths
~~~
{:class="out"}

We can now send the content of `lengths` to the screen using `cat lengths`.
`cat` stands for "concatenate":
it prints the contents of files one after another.
There's only one file in this case,
so `cat` just shows us what it contains:

~~~
$ cat lengths
~~~
{:class="in"}
~~~
  20  cubane.pdb
  12  ethane.pdb
   9  methane.pdb
  30  octane.pdb
  21  pentane.pdb
  15  propane.pdb
 107  total
~~~
{:class="out"}

Now let's use the `sort` command to sort its contents.
This does *not* change the file;
instead, it sends the sorted result to the screen:

~~~
$ sort lengths
~~~
{:class="in"}
~~~
  9  methane.pdb
 12  ethane.pdb
 15  propane.pdb
 20  cubane.pdb
 21  pentane.pdb
 30  octane.pdb
107  total
~~~
{:class="out"}

We can put the sorted list of lines in another temporary file called `sorted-lengths`
by putting `> sorted-lengths` after the command,
just as we used `> lengths` to put the output of `wc` into `lengths`.
Once we've done that,
we can run another command called `head` to get the first few lines in `sorted-lengths`:

~~~
$ sort lengths > sorted-lengths
$ head -1 sorted-lengths
~~~
{:class="in"}
~~~
  9  methane.pdb
~~~
{:class="out"}

Using the parameter `-1` with `head` tells it that
we only want the first line of the file;
`-20` would get the first 20,
and so on.
Since `sorted-lengths` contains the lengths of our files ordered from least to greatest,
the output of `head` must be the file with the fewest lines.

If you think this is confusing,
you're in good company:
even once you understand what `wc`, `sort`, and `head` do,
all those intermediate files make it hard to follow what's going on.
We can make it easier to understand by running `sort` and `head` together:

~~~
$ sort lengths | head -1
~~~
{:class="in"}
~~~
  9  methane.pdb
~~~
{:class="out"}

The vertical bar between the two commands is called a [pipe](../../gloss.html#pipe).
It tells the shell that we want to use
the output of the command on the left
as the input to the command on the right.
The computer might create a temporary file if it needs to,
or copy data from one program to the other in memory,
or something else entirely;
we don't have to know or care.

We can use another pipe to send the output of `wc` directly to `sort`,
which then sends its output to `head`:

~~~
$ wc -l *.pdb | sort | head -1
~~~
{:class="in"}
~~~
  9  methane.pdb
~~~
{:class="out"}

This is exactly like a mathematician nesting functions like *sin(&pi;x)<sup>2</sup>*
and saying "the square of the sine of *x* times &pi;".
In our case,
the calculation is "head of sort of word count of `*.pdb`".

Here's what actually happens behind the scenes when we create a pipe.
When a computer runs a program&mdash;any program&mdash;it creates a [process](../../gloss.html#process)
in memory to hold the program's software and its current state.
Every process has an input channel called [standard input](../../gloss.html#standard-input).
(By this point, you may be surprised that the name is so memorable, but don't worry:
most Unix programmers call it "stdin".
Every process also has a default output channel called [standard output](../../gloss.html#standard-output)
(or "stdout").

The shell is actually just another program.
Under normal circumstances,
whatever we type on the keyboard is sent to the shell on its standard input,
and whatever it produces on standard output is displayed on our screen.
When we tell the shell to run a program,
it creates a new process
and temporarily sends whatever we type on our keyboard to that process's standard input,
and whatever the process sends to standard output to the screen.

Here's what happens when we run `wc -l *.pdb > lengths`.
The shell starts by telling the computer to create a new process to run the `wc` program.
Since we've provided some filenames as parameters,
`wc` reads from them instead of from standard input.
And since we've used `>` to redirect output to a file,
the shell connects the process's standard output to that file.

If we run `wc -l *.pdb | sort` instead,
the shell creates two processes
(one for each process in the pipe)
so that `wc` and `sort` run simultaneously.
The standard output of `wc` is fed directly to the standard input of `sort`;
since there's no redirection with `>`,
`sort`'s output goes to the screen.
And if we run `wc -l *.pdb | sort | head -1`,
we get three processes with data flowing from the files,
through `wc` to `sort`,
and from `sort` through `head` to the screen.

This simple idea is why Unix has been so successful.
Instead of creating enormous programs that try to do many different things,
Unix programmers focus on creating lots of simple tools that each do one job well,
and that work well with each other.
This programming model is called [pipes and filters](../../gloss.html#pipe-and-filter).
We've already seen pipes;
a [filter](../../gloss.html#filter) is a program like `wc` or `sort`
that transforms a stream of input into a stream of output.
Almost all of the standard Unix tools can work this way:
unless told to do otherwise,
they read from standard input,
do something with what they've read,
and write to standard output.

The key is that any program that reads lines of text from standard input
and writes lines of text to standard output
can be combined with every other program that behaves this way as well.
You can *and should* write your programs this way
so that you and other people can put those programs into pipes to multiply their power.

> #### Redirecting Input
> 
> As well as using `>` to redirect a program's output, we can use `<` to
> redirect its input, i.e., to read from a file instead of from standard
> input. For example, instead of writing `wc ammonia.pdb`, we could write
> `wc < ammonia.pdb`. In the first case, `wc` gets a command line
> parameter telling it what file to open. In the second, `wc` doesn't have
> any command line parameters, so it reads from standard input, but we
> have told the shell to send the contents of `ammonia.pdb` to `wc`'s
> standard input.

#### Nelle's Pipeline: Checking Files

Nelle has run her samples through the assay machines
and created 1520 files in the `north-pacific-gyre/2012-07-03` directory described earlier.
As a quick sanity check, she types:

~~~
$ cd north-pacific-gyre/2012-07-03
$ wc -l *.txt
~~~
{:class="in"}

The output is 1520 lines that look like this:

~~~
300 NENE01729A.txt
300 NENE01729B.txt
300 NENE01736A.txt
300 NENE01751A.txt
300 NENE01751B.txt
300 NENE01812A.txt
... ...
~~~
{:class="out"}

Now she types this:

~~~
$ wc -l *.txt | sort | head -5
~~~
{:class="in"}
~~~
 240 NENE02018B.txt
 300 NENE01729A.txt
 300 NENE01729B.txt
 300 NENE01736A.txt
 300 NENE01751A.txt
~~~
{:class="out"}

Whoops: one of the files is 60 lines shorter than the others.
When she goes back and checks it,
she sees that she did that assay at 8:00 on a Monday morning&mdash;someone
was probably in using the machine on the weekend,
and she forgot to reset it.
Before re-running that sample,
she checks to see if any files have too much data:

~~~
$ wc -l *.txt | sort | tail -5
~~~
{:class="in"}
~~~
 300 NENE02040A.txt
 300 NENE02040B.txt
 300 NENE02040Z.txt
 300 NENE02043A.txt
 300 NENE02043B.txt
~~~
{:class="out"}

Those numbers look good&mdash;but what's that 'Z' doing there in the third-to-last line?
All of her samples should be marked 'A' or 'B';
by convention,
her lab uses 'Z' to indicate samples with missing information.
To find others like it, she does this:

~~~
$ ls *Z.txt
~~~
{:class="in"}
~~~
NENE01971Z.txt    NENE02040Z.txt
~~~
{:class="out"}

Sure enough,
when she checks the log on her laptop,
there's no depth recorded for either of those samples.
Since it's too late to get the information any other way,
she must exclude those two files from her analysis.
She could just delete them using `rm`,
but there are actually some analyses she might do later where depth doesn't matter,
so instead, she'll just be careful later on to select files using the wildcard expression `*[AB].txt`.
As always,
the '\*' matches any number of characters;
the expression `[AB]` matches either an 'A' or a 'B',
so this matches all the valid data files she has.

<div class="keypoints" markdown="1">

#### Key Points
*   `command > file` redirects a command's output to a file.
*   `first | second` is a pipeline: the output of the first command is used as the input to the second.
*   The best way to use the shell is to use pipes to combine simple single-purpose programs (filters).

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  If we run `sort` on this file:

    ~~~
    10
    2
    19
    22
    6
    ~~~

    the output is:

    ~~~
    10
    19
    2
    22
    6
    ~~~

    If we run `sort -n` on the same input, we get this instead:

    ~~~
    2
    6
    10
    19
    22
    ~~~

    Explain why `-n` has this effect.

2.  What is the difference between:

    ~~~
    wc -l < mydata.dat
    ~~~

    and:

    ~~~
    wc -l mydata.dat
    ~~~

3.  The command `uniq` removes adjacent duplicated lines from its input.
    For example, if a file `salmon.txt` contains:

    ~~~
    coho
    coho
    steelhead
    coho
    steelhead
    steelhead
    ~~~

    then `uniq salmon.txt` produces:

    ~~~
    coho
    steelhead
    coho
    steelhead
    ~~~

    Why do you think `uniq` only removes *adjacent* duplicated lines?
    (Hint: think about very large data sets.) What other command could
    you combine with it in a pipe to remove all duplicated lines?

4.  A file called `animals.txt` contains the following data:

    ~~~
    2012-11-05,deer
    2012-11-05,rabbit
    2012-11-05,raccoon
    2012-11-06,rabbit
    2012-11-06,deer
    2012-11-06,fox
    2012-11-07,rabbit
    2012-11-07,bear
    ~~~

    What text passes through each of the pipes and the final redirect in the pipeline below?

    ~~~
    cat animals.txt | head -5 | tail -3 | sort -r > final.txt
    ~~~

5.  The command:

    ~~~
    $ cut -d , -f 2 animals.txt
    ~~~

    produces the following output:

    ~~~
    deer
    rabbit
    raccoon
    rabbit
    deer
    fox
    rabbit
    bear
    ~~~

    What other command(s) could be added to this in a pipeline to find
    out what animals the file contains (without any duplicates in their
    names)?

</div>

---
layout: lesson
root: ../..
title: Loops
---
<div class="objectives" markdown="1">

#### Objectives
*   Write a loop that applies one or more commands separately to each file in a set of files.
*   Trace the values taken on by a loop variable during execution of the loop.
*   Explain the difference between a variable's name and its value.
*   Explain why spaces and some punctuation characters shouldn't be used in files' names.
*   Demonstrate how to see what commands have recently been executed.
*   Re-run recently executed commands without retyping them.

</div>

Wildcards and tab completion are two ways to reduce typing (and typing mistakes).
Another is to tell the shell to do something over and over again.
Suppose we have several hundred genome data files named `basilisk.dat`, `unicorn.dat`, and so on.
When new files arrive,
we'd like to rename the existing ones to `original-basilisk.dat` and `original-unicorn.dat`.
We can't use:

~~~
$ mv *.dat original-*.dat
~~~
{:class="in"}

because that would expand (in the two-file case) to:

~~~
$ mv basilisk.dat unicorn.dat
~~~
{:class="in"}

This wouldn't back up our files:
it would replace the content of `unicorn.dat` with whatever's in `basilisk.dat`.

Instead, we can use a [loop](../../gloss.html#for-loop)
to do some operation once for each thing in a list.
Here's a simple example that displays the first three lines of each file in turn:

~~~
$ for filename in basilisk.dat unicorn.dat
> do
>    head -3 $filename
> done
~~~
{:class="in"}
~~~
COMMON NAME: basilisk
CLASSIFICATION: basiliscus vulgaris
UPDATED: 1745-05-02
COMMON NAME: unicorn
CLASSIFICATION: equus monoceros
UPDATED: 1738-11-24
~~~
{:class="out"}

When the shell sees the keyword `for`,
it knows it is supposed to repeat a command (or group of commands) once for each thing in a list.
In this case, the list is the two filenames.
Each time through the loop,
the name of the thing currently being operated on is assigned to
the [variable](../../gloss.html#variable) called `filename`.
Inside the loop,
we get the variable's value by putting `$` in front of it:
`$filename` is `basilisk.dat` the first time through the loop,
`unicorn.dat` the second,
and so on.
Finally,
the command that's actually being run is our old friend `head`,
so this loop prints out the first three lines of each data file in turn.

> #### Follow the Prompt
>
> The shell prompt changes from `$` to `>` and back again as we were
> typing in our loop. The second prompt, `>`, is different to remind
> us that we haven't finished typing a complete command yet.

We have called the variable in this loop `filename`
in order to make its purpose clearer to human readers.
The shell itself doesn't care what the variable is called;
if we wrote this loop as:

~~~
for x in basilisk.dat unicorn.dat
do
    head -3 $x
done
~~~
{:class="in"}

or:

~~~
for temperature in basilisk.dat unicorn.dat
do
    head -3 $temperature
done
~~~
{:class="in"}

it would work exactly the same way.
*Don't do this.*
Programs are only useful if people can understand them,
so meaningless names (like `x`) or misleading names (like `temperature`)
increase the odds that the program won't do what its readers think it does.

Here's a slightly more complicated loop:

~~~
for filename in *.dat
do
    echo $filename
    head -100 $filename | tail -20
done
~~~
{:class="in"}

The shell starts by expanding `*.dat` to create the list of files it will process.
The [loop body](../../gloss.html#loop-body)
then executes two commands for each of those files.
The first, `echo`, just prints its command-line parameters to standard output.
For example:

~~~
$ echo hello there
~~~
{:class="in"}

prints:

~~~
hello there
~~~
{:class="out"}

In this case,
since the shell expands `$filename` to be the name of a file,
`echo $filename` just prints the name of the file.
Note that we can't write this as:

~~~
for filename in *.dat
do
    $filename
    head -100 $filename | tail -20
done
~~~
{:class="in"}

because then the first time through the loop,
when `$filename` expanded to `basilisk.dat`, the shell would try to run `basilisk.dat` as a program.
Finally,
the `head` and `tail` combination selects lines 81-100 from whatever file is being processed.

> #### Spaces in Names
> 
> Filename expansion in loops is another reason you should not use spaces in filenames.
> Suppose our data files are named:
> 
> ~~~
> basilisk.dat
> red dragon.dat
> unicorn.dat
> ~~~
> 
> If we try to process them using:
> 
> ~~~
> for filename in *.dat
> do
>     head -100 $filename | tail -20
> done
> ~~~
> 
> then the shell will expand `*.dat` to create:
> 
> ~~~
> basilisk.dat red dragon.dat unicorn.dat
> ~~~
> 
> With older versions of Bash,
> or most other shells,
> `filename` will then be assigned the following values in turn:
> 
> ~~~
> basilisk.dat
> red
> dragon.dat
> unicorn.dat
> ~~~
>
> That's a problem: `head` can't read files called `red` and `dragon.dat`
> because they don't exist,
> and won't be asked to read the file `red dragon.dat`.
> 
> We can make our script a little bit more robust
> by [quoting](../../gloss.html#shell-quoting) our use of the variable:
> 
> ~~~
> for filename in *.dat
> do
>     head -100 "$filename" | tail -20
> done
> ~~~
>
> but it's simpler just to avoid using spaces (or other special characters) in filenames.

Going back to our original file renaming problem,
we can solve it using this loop:

~~~
for filename in *.dat
do
    mv $filename original-$filename
done
~~~
{:class="in"}

This loop runs the `mv` command once for each filename.
The first time,
when `$filename` expands to `basilisk.dat`,
the shell executes:

~~~
mv basilisk.dat original-basilisk.dat
~~~
{:class="in"}

The second time, the command is:

~~~
mv unicorn.dat original-unicorn.dat
~~~
{:class="in"}

> #### Measure Twice, Run Once
> 
> A loop is a way to do many things at once&mdash;or to make many mistakes at
> once if it does the wrong thing. One way to check what a loop *would* do
> is to echo the commands it would run instead of actually running them.
> For example, we could write our file renaming loop like this:
> 
> ~~~
> for filename in *.dat
> do
>     echo mv $filename original-$filename
> done
> ~~~
> 
> Instead of running `mv`, this loop runs `echo`, which prints out:
> 
> ~~~
> mv basilisk.dat original-basilisk.dat
> mv unicorn.dat original-unicorn.dat
> ~~~
> 
> *without* actually running those commands. We can then use up-arrow to
> redisplay the loop, back-arrow to get to the word `echo`, delete it, and
> then press "enter" to run the loop with the actual `mv` commands. This
> isn't foolproof, but it's a handy way to see what's going to happen when
> you're still learning how loops work.

#### Nelle's Pipeline: Processing Files

Nelle is now ready to process her data files.
Since she's still learning how to use the shell,
she decides to build up the required commands in stages.
Her first step is to make sure that she can select the right files&mdash;remember,
these are ones whose names end in 'A' or 'B', rather than 'Z':

~~~
$ cd north-pacific-gyre/2012-07-03
$ for datafile in *[AB].txt
> do
>     echo $datafile
> done
~~~
{:class="in"}
~~~
NENE01729A.txt
NENE01729B.txt
NENE01736A.txt
...
NENE02043A.txt
NENE02043B.txt
~~~
{:class="out"}

Her next step is to decide
what to call the files that the `goostats` analysis program will create.
Prefixing each input file's name with "stats" seems simple,
so she modifies her loop to do that:

~~~
$ for datafile in *[AB].txt
> do
>     echo $datafile stats-$datafile
> done
~~~
{:class="in"}
~~~
NENE01729A.txt stats-NENE01729A.txt
NENE01729B.txt stats-NENE01729B.txt
NENE01736A.txt stats-NENE01736A.txt
...
NENE02043A.txt stats-NENE02043A.txt
NENE02043B.txt stats-NENE02043B.txt
~~~
{:class="out"}

She hasn't actually run `goostats` yet,
but now she's sure she can select the right files and generate the right output filenames.

Typing in commands over and over again is becoming tedious,
though,
and Nelle is worried about making mistakes,
so instead of re-entering her loop,
she presses the up arrow.
In response,
the shell redisplays the whole loop on one line
(using semi-colons to separate the pieces):

~~~
$ for datafile in *[AB].txt; do echo $datafile stats-$datafile; done
~~~
{:class="in"}

Using the left arrow key,
Nelle backs up and changes the command `echo` to `goostats`:

~~~
$ for datafile in *[AB].txt; do bash goostats $datafile stats-$datafile; done
~~~
{:class="in"}

When she presses enter,
the shell runs the modified command.
However, nothing appears to happen&mdash;there is no output.
After a moment, Nelle realizes that since her script doesn't print anything to the screen any longer,
she has no idea whether it is running, much less how quickly.
She kills the job by typing Control-C,
uses up-arrow to repeat the command,
and edits it to read:

~~~
$ for datafile in *[AB].txt; do echo $datafile; bash goostats $datafile stats-$datafile; done
~~~
{:class="in"}

> #### Beginning and End
>
> We can move to the beginning of a line in the shell by typing `^A`
> (which means Control-A)
> and to the end using `^E`.

When she runs her program now,
it produces one line of output every five seconds or so:

~~~
NENE01729A.txt
NENE01729B.txt
NENE01736A.txt
...
~~~
{:class="out"}

1518 times 5 seconds,
divided by 60,
tells her that her script will take about two hours to run.
As a final check,
she opens another terminal window,
goes into `north-pacific-gyre/2012-07-03`,
and uses `cat stats-NENE01729B.txt`
to examine one of the output files.
It looks good,
so she decides to get some coffee and catch up on her reading.

> #### Those Who Know History Can Choose to Repeat It
> 
> Another way to repeat previous work is to use the `history` command to
> get a list of the last few hundred commands that have been executed, and
> then to use `!123` (where "123" is replaced by the command number) to
> repeat one of those commands. For example, if Nelle types this:
> 
> ~~~
> $ history | tail -5
>   456  ls -l NENE0*.txt
>   457  rm stats-NENE01729B.txt.txt
>   458  bash goostats NENE01729B.txt stats-NENE01729B.txt
>   459  ls -l NENE0*.txt
>   460  history
> ~~~
> 
> then she can re-run `goostats` on `NENE01729B.txt` simply by typing
> `!458`.

<div class="keypoints" markdown="1">

#### Key Points
*   A `for` loop repeats commands once for every thing in a list.
*   Every `for` loop needs a variable to refer to the current "thing".
*   Use `$name` to expand a variable (i.e., get its value).
*   Do not use spaces, quotes, or wildcard characters such as '*' or '?' in filenames, as it complicates variable expansion.
*   Give files consistent names that are easy to match with wildcard patterns to make it easy to select them for looping.
*   Use the up-arrow key to scroll up through previous commands to edit and repeat them.
*   Use `history` to display recent commands, and `!number` to repeat a command by number.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Suppose that `ls` initially displays:

    ~~~
    fructose.dat    glucose.dat   sucrose.dat
    ~~~

    What is the output of:

    ~~~
    for datafile in *.dat
    do
        ls *.dat
    done
    ~~~

2.  In the same directory, what is the effect of this loop?

    ~~~
    for sugar in *.dat
    do
        echo $sugar
        cat $sugar > xylose.dat
    done
    ~~~

    1.  Prints `fructose.dat`, `glucose.dat`, and `sucrose.dat`, and
        copies `sucrose.dat` to create `xylose.dat`.
    2.  Prints `fructose.dat`, `glucose.dat`, and `sucrose.dat`, and
        concatenates all three files to create `xylose.dat`.
    3.  Prints `fructose.dat`, `glucose.dat`, `sucrose.dat`, and
        `xylose.dat`, and copies `sucrose.dat` to create `xylose.dat`.
    4.  None of the above.

3.  The `expr` does simple arithmetic using command-line parameters:

    ~~~
    $ expr 3 + 5
    8
    $ expr 30 / 5 - 2
    4
    ~~~

    Given this, what is the output of:

    ~~~
    for left in 2 3
    do
        for right in $left
        do
            expr $left + $right
        done
    done
    ~~~

4.  Describe in words what the following loop does.

    ~~~
    for how in frog11 prcb redig
    do
        $how -limit 0.01 NENE01729B.txt
    done
    ~~~

</div>

---
layout: lesson
root: ../..
title: Shell Scripts
---
<div class="objectives" markdown="1">

#### Objectives
*   Write a shell script that runs a command or series of commands for a fixed set of files.
*   Run a shell script from the command line.
*   Write a shell script that operates on a set of files defined by the user on the command line.
*   Create pipelines that include user-written shell scripts.

</div>

We are finally ready to see what makes the shell such a powerful programming environment.
We are going to take the commands we repeat frequently and save them in files
so that we can re-run all those operations again later by typing a single command.
For historical reasons,
a bunch of commands saved in a file is usually called a [shell script](../../gloss.html#shell-script),
but make no mistake:
these are actually small programs.

Let's start by putting the following line in the file `middle.sh`:

<div class="file" markdown="1">
~~~
head -20 cholesterol.pdb | tail -5
~~~
</div>

This is a variation on the pipe we constructed earlier:
it selects lines 16-20 of the file `cholesterol.pdb`.
Remember, we are *not* running it as a command just yet:
we are putting the commands in a file.

Once we have saved the file,
we can ask the shell to execute the commands it contains.
Our shell is called `bash`, so we run the following command:

~~~
$ bash middle.sh
~~~
{:class="in"}
~~~
ATOM     14  C           1      -1.463  -0.666   1.001  1.00  0.00
ATOM     15  C           1       0.762  -0.929   0.295  1.00  0.00
ATOM     16  C           1       0.771  -0.937   1.840  1.00  0.00
ATOM     17  C           1      -0.664  -0.610   2.293  1.00  0.00
ATOM     18  C           1      -4.705   2.108  -0.396  1.00  0.00
~~~
{:class="out"}

Sure enough,
our script's output is exactly what we would get if we ran that pipeline directly.

> #### Text vs. Whatever
>
> We usually call programs like Microsoft Word or LibreOffice Writer "text
> editors", but we need to be a bit more careful when it comes to
> programming. By default, Microsoft Word uses `.docx` files to store not
> only text, but also formatting information about fonts, headings, and so
> on. This extra information isn't stored as characters, and doesn't mean
> anything to tools like `head`: they expect input files to contain
> nothing but the letters, digits, and punctuation on a standard computer
> keyboard. When editing programs, therefore, you must either use a plain
> text editor, or be careful to save files as plain text.

What if we want to select lines from an arbitrary file?
We could edit `middle.sh` each time to change the filename,
but that would probably take longer than just retyping the command.
Instead,
let's edit `middle.sh` and replace `cholesterol.pdb` with a special variable called `$1`:

~~~
$ cat middle.sh
~~~
{:class="in"}
~~~
head -20 $1 | tail -5
~~~
{:class="out"}

Inside a shell script,
`$1` means "the first filename (or other parameter) on the command line".
We can now run our script like this:

~~~
$ bash middle.sh cholesterol.pdb
~~~
{:class="in"}
~~~
ATOM     14  C           1      -1.463  -0.666   1.001  1.00  0.00
ATOM     15  C           1       0.762  -0.929   0.295  1.00  0.00
ATOM     16  C           1       0.771  -0.937   1.840  1.00  0.00
ATOM     17  C           1      -0.664  -0.610   2.293  1.00  0.00
ATOM     18  C           1      -4.705   2.108  -0.396  1.00  0.00
~~~
{:class="out"}

or on a different file like this:

~~~
$ bash middle.sh vitamin-a.pdb
~~~
{:class="in"}
~~~
ATOM     14  C           1       1.788  -0.987  -0.861
ATOM     15  C           1       2.994  -0.265  -0.829
ATOM     16  C           1       4.237  -0.901  -1.024
ATOM     17  C           1       5.406  -0.117  -1.087
ATOM     18  C           1      -0.696  -2.628  -0.641
~~~
{:class="out"}

We still need to edit `middle.sh` each time we want to adjust the range of lines,
though.
Let's fix that by using the special variables `$2` and `$3`:

~~~
$ cat middle.sh
~~~
{:class="in"}
~~~
head $2 $1 | tail $3
~~~
{:class="out"}
~~~
$ bash middle.sh vitamin-a.pdb -20 -5
~~~
{:class="in"}
~~~
ATOM     14  C           1       1.788  -0.987  -0.861
ATOM     15  C           1       2.994  -0.265  -0.829
ATOM     16  C           1       4.237  -0.901  -1.024
ATOM     17  C           1       5.406  -0.117  -1.087
ATOM     18  C           1      -0.696  -2.628  -0.641
~~~
{:class="out"}

This works,
but it may take the next person who reads `middle.sh` a moment to figure out what it does.
We can improve our script by adding some [comments](../../gloss.html#comment) at the top:

~~~
$ cat middle.sh
~~~
{:class="in"}
~~~
# Select lines from the middle of a file.
# Usage: middle.sh filename -end_line -num_lines
head $2 $1 | tail $3
~~~
{:class="out"}

A comment starts with a `#` character and runs to the end of the line.
The computer ignores comments,
but they're invaluable for helping people understand and use scripts.

What if we want to process many files in a single pipeline?
For example, if we want to sort our `.pdb` files by length, we would type:

~~~
$ wc -l *.pdb | sort -n
~~~
{:class="in"}

because `wc -l` lists the number of lines in the files
and `sort -n` sorts things numerically.
We could put this in a file,
but then it would only ever sort a list of `.pdb` files in the current directory.
If we want to be able to get a sorted list of other kinds of files,
we need a way to get all those names into the script.
We can't use `$1`, `$2`, and so on
because we don't know how many files there are.
Instead, we use the special variable `$*`,
which means,
"All of the command-line parameters to the shell script."
Here's an example:

~~~
$ cat sorted.sh
~~~
{:class="in"}
~~~
wc -l $* | sort -n
~~~
{:class="out"}
~~~
$ bash sorted.sh *.dat backup/*.dat
~~~
{:class="in"}
~~~
      29 chloratin.dat
      89 backup/chloratin.dat
      91 sphagnoi.dat
     156 sphag2.dat
     172 backup/sphag-merged.dat
     182 girmanis.dat
~~~
{:class="out"}

> #### Why Isn't It Doing Anything?
>
> What happens if a script is supposed to process a bunch of files, but we
> don't give it any filenames? For example, what if we type:
>
>     $ bash sorted.sh
>
> but don't say `*.dat` (or anything else)? In this case, `$*` expands to
> nothing at all, so the pipeline inside the script is effectively:
>
>     wc -l | sort -n
>
> Since it doesn't have any filenames, `wc` assumes it is supposed to
> process standard input, so it just sits there and waits for us to give
> it some data interactively. From the outside, though, all we see is it
> sitting there: the script doesn't appear to do anything.

We have two more things to do before we're finished with our simple shell scripts.
If you look at a script like:

<div class="file" markdown="1">
~~~
wc -l $* | sort -n
~~~
</div>

you can probably puzzle out what it does.
On the other hand,
if you look at this script:

<div class="file" markdown="1">
~~~
# List files sorted by number of lines.
wc -l $* | sort -n
~~~
</div>

you don't have to puzzle it out&mdash;the comment at the top tells you what it does.
A line or two of documentation like this make it much easier for other people
(including your future self)
to re-use your work.
The only caveat is that each time you modify the script,
you should check that the comment is still accurate:
an explanation that sends the reader in the wrong direction is worse than none at all.

Second,
suppose we have just run a series of commands that did something useful&mdash;for example,
that created a graph we'd like to use in a paper.
We'd like to be able to re-create the graph later if we need to,
so we want to save the commands in a file.
Instead of typing them in again
(and potentially getting them wrong)
we can do this:

~~~
$ history | tail -4 > redo-figure-3.sh
~~~
{:class="in"}

The file `redo-figure-3.sh` now contains:

<div class="file" markdown="1">
~~~
297 goostats -r NENE01729B.txt stats-NENE01729B.txt
298 goodiff stats-NENE01729B.txt /data/validated/01729.txt > 01729-differences.txt
299 cut -d ',' -f 2-3 01729-differences.txt > 01729-time-series.txt
300 ygraph --format scatter --color bw --borders none 01729-time-series.txt figure-3.png
~~~
</div>

After a moment's work in an editor to remove the serial numbers on the commands,
we have a completely accurate record of how we created that figure.

> #### Unnumbering
>
> Nelle could also use `colrm` (short for "column removal") to remove the
> serial numbers on her previous commands.
> Its parameters are the range of characters to strip from its input:
>
> ~~~
> $ history | tail -5
>   173  cd /tmp
>   174  ls
>   175  mkdir bakup
>   176  mv bakup backup
>   177  history | tail -5
> $ history | tail -5 | colrm 1 7
> cd /tmp
> ls
> mkdir bakup
> mv bakup backup
> history | tail -5
> history | tail -5 | colrm 1 7
> ~~~

In practice, most people develop shell scripts by running commands at the shell prompt a few times
to make sure they're doing the right thing,
then saving them in a file for re-use.
This style of work allows people to recycle
what they discover about their data and their workflow with one call to `history`
and a bit of editing to clean up the output
and save it as a shell script.

#### Nelle's Pipeline: Creating a Script

An off-hand comment from her supervisor has made Nelle realize that
she should have provided a couple of extra parameters to `goostats` when she processed her files.
This might have been a disaster if she had done all the analysis by hand,
but thanks to for loops,
it will only take a couple of hours to re-do.

But experience has taught her that if something needs to be done twice,
it will probably need to be done a third or fourth time as well.
She runs the editor and writes the following:

<div class="file" markdown="1">
~~~
# Calculate reduced stats for data files at J = 100 c/bp.
for datafile in $*
do
    echo $datafile
    goostats -J 100 -r $datafile stats-$datafile
done
~~~
</div>

(The parameters `-J 100` and `-r` are the ones her supervisor said she should have used.)
She saves this in a file called `do-stats.sh`
so that she can now re-do the first stage of her analysis by typing:

~~~
$ bash do-stats.sh *[AB].txt
~~~
{:class="in"}

She can also do this:

~~~
$ bash do-stats.sh *[AB].txt | wc -l
~~~
{:class="in"}

so that the output is just the number of files processed
rather than the names of the files that were processed.

One thing to note about Nelle's script is that
it lets the person running it decide what files to process.
She could have written it as:

<div class="file" markdown="1">
~~~
# Calculate reduced stats for  A and Site B data files at J = 100 c/bp.
for datafile in *[AB].txt
do
    echo $datafile
    goostats -J 100 -r $datafile stats-$datafile
done
~~~
</div>

The advantage is that this always selects the right files:
she doesn't have to remember to exclude the 'Z' files.
The disadvantage is that it *always* selects just those files&mdash;she can't run it on all files
(including the 'Z' files),
or on the 'G' or 'H' files her colleagues in Antarctica are producing,
without editing the script.
If she wanted to be more adventurous,
she could modify her script to check for command-line parameters,
and use `*[AB].txt` if none were provided.
Of course, this introduces another tradeoff between flexibility and complexity.

<div class="keypoints" markdown="1">

#### Key Points
*   Save commands in files (usually called shell scripts) for re-use.
*   `bash filename` runs the commands saved in a file.
*   `$*` refers to all of a shell script's command-line parameters.
*   `$1`, `$2`, etc., refer to specified command-line parameters.
*   Letting users decide what files to process is more flexible and more consistent with built-in Unix commands.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Leah has several hundred data files, each of which is formatted like this:

    ~~~
    2013-11-05,deer,5
    2013-11-05,rabbit,22
    2013-11-05,raccoon,7
    2013-11-06,rabbit,19
    2013-11-06,deer,2
    2013-11-06,fox,1
    2013-11-07,rabbit,18
    2013-11-07,bear,1
    ~~~

    Write a shell script called `species.sh` that takes any number of
    filenames as command-line parameters, and uses `cut`, `sort`, and
    `uniq` to print a list of the unique species appearing in each of
    those files separately.

2.  Write a shell script called `longest.sh` that takes the name of a
    directory and a filename extension as its parameters, and prints
    out the name of the file with the most lines in that directory
    with that extension. For example:

    ~~~
    $ bash longest.sh /tmp/data pdb
    ~~~

    would print the name of the `.pdb` file in `/tmp/data` that has
    the most lines.

3.  If you run the command:

    ~~~
    history | tail -5 > recent.sh
    ~~~

    the last command in the file is the `history` command itself, i.e.,
    the shell has added `history` to the command log before actually
    running it. In fact, the shell *always* adds commands to the log
    before running them. Why do you think it does this?

4.  Joel's `data` directory contains three files: `fructose.dat`,
    `glucose.dat`, and `sucrose.dat`. Explain what a script called
    `example.sh` would do when run as `bash example.sh *.dat` if it
    contained the following lines:

<table>
  <tr>
    <td valign="top">1.</td>
    <td valign="top">
<pre>
echo *.*
</pre>
    </td>
  </tr>
  <tr>
    <td valign="top">2.</td>
    <td valign="top">
<pre>
for filename in $1 $2 $3
do
    cat $filename
done
</pre>
    </td>
  </tr>
  <tr>
    <td valign="top">3.</td>
    <td valign="top">
<pre>
echo $*.dat
</pre>
    </td>
  </tr>
</table>

</div>

---
layout: lesson
root: ../..
title: Finding Things
---
<div class="objectives" markdown="1">

#### Objectives
*   Use `grep` to select lines from text files that match simple patterns.
*   Use `find` to find files whose names match simple patterns.
*   Use the output of one command as the command-line parameters to another command.
*   Explain what is meant by "text" and "binary" files, and why many common tools don't handle the latter well.

</div>

You can guess someone's age by how they talk about search:
young people use "Google" as a verb,
while crusty old Unix programmers use "grep".
The word is a contraction of "global/regular expression/print",
a common sequence of operations in early Unix text editors.
It is also the name of a very useful command-line program.

`grep` finds and prints lines in files that match a pattern.
For our examples,
we will use a file that contains three haikus taken from a
1998 competition in *Salon* magazine:

~~~
$ cat haiku.txt
~~~
{:class="in"}
~~~
The Tao that is seen
Is not the true Tao, until
You bring fresh toner.

With searching comes loss
and the presence of absence:
"My Thesis" not found.

Yesterday it worked
Today it is not working
Software is like that.
~~~
{:class="out"}

> #### Forever, or Five Years
>
> We haven't linked to the original haikus because they don't appear to be on *Salon*'s site any longer.
> As [Jeff Rothenberg said](http://www.clir.org/pubs/archives/ensuring.pdf),
> "Digital information lasts forever&mdash;or five years, whichever comes first."

Let's find lines that contain the word "not":

~~~
$ grep not haiku.txt
~~~
{:class="in"}
~~~
Is not the true Tao, until
"My Thesis" not found
Today it is not working
~~~
{:class="out"}

Here, `not` is the pattern we're searching for.
It's pretty simple:
every alphanumeric character matches against itself.
After the pattern comes the name or names of the files we're searching in.
The output is the three lines in the file that contain the letters "not".

Let's try a different pattern: "day".

~~~
$ grep day haiku.txt
~~~
{:class="in"}
~~~
Yesterday it worked
Today it is not working
~~~
{:class="out"}

This time,
the output is lines containing the words "Yesterday" and "Today",
which both have the letters "day".
If we give `grep` the `-w` flag,
it restricts matches to word boundaries,
so that only lines with the word "day" will be printed:

~~~
$ grep -w day haiku.txt
~~~
{:class="in"}

In this case, there aren't any, so `grep`'s output is empty.

Another useful option is `-n`, which numbers the lines that match:

~~~
$ grep -n it haiku.txt
~~~
{:class="in"}
~~~
5:With searching comes loss
9:Yesterday it worked
10:Today it is not working
~~~
{:class="out"}

Here, we can see that lines 5, 9, and 10 contain the letters "it".

We can combine flags as we do with other Unix commands.
For example,
since `-i` makes matching case-insensitive and `-v` inverts the match,
using them both only prints lines that *don't* match the pattern
in any mix of upper and lower case:

~~~
$ grep -i -v the haiku.txt
~~~
{:class="in"}
~~~
You bring fresh toner.

With searching comes loss

Yesterday it worked
Today it is not working
Software is like that.
~~~
{:class="out"}

`grep` has lots of other options.
To find out what they are, we can type `man grep`.
`man` is the Unix "manual" command:
it prints a description of a command and its options,
and (if you're lucky) provides a few examples of how to use it:

~~~
$ man grep
~~~
{:class="in"}
~~~
GREP(1)                                                                                              GREP(1)

NAME
grep, egrep, fgrep - print lines matching a pattern

SYNOPSIS
grep [OPTIONS] PATTERN [FILE...]
grep [OPTIONS] [-e PATTERN | -f FILE] [FILE...]

DESCRIPTION
grep  searches the named input FILEs (or standard input if no files are named, or if a single hyphen-
minus (-) is given as file name) for lines containing a match to the given PATTERN.  By default, grep
prints the matching lines.
...        ...        ...

OPTIONS
Generic Program Information
--help Print  a  usage  message  briefly summarizing these command-line options and the bug-reporting
address, then exit.

-V, --version
Print the version number of grep to the standard output stream.  This version number should be
included in all bug reports (see below).

Matcher Selection
-E, --extended-regexp
Interpret  PATTERN  as  an  extended regular expression (ERE, see below).  (-E is specified by
POSIX.)

-F, --fixed-strings
Interpret PATTERN as a list of fixed strings, separated by newlines, any of  which  is  to  be
matched.  (-F is specified by POSIX.)
...        ...        ...
~~~
{:class="out"}

> #### Wildcards
>
> `grep`'s real power doesn't come from its options, though; it comes from
> the fact that patterns can include wildcards. (The technical name for
> these is [regular expressions](../../gloss.html#regular-expression), which
> is what the "re" in "grep" stands for.) Regular expressions are both complex
> and powerful; if you want to do complex searches, please look at the lesson
> on [our website](http://software-carpentry.org). As a taster, we can
> find lines that have an 'o' in the second position like this:
>
>     $ grep -E '^.o' haiku.txt
>     You bring fresh toner.
>     Today it is not working
>     Software is like that.
>
> We use the `-E` flag and put the pattern in quotes to prevent the shell
> from trying to interpret it. (If the pattern contained a '\*', for
> example, the shell would try to expand it before running `grep`.) The
> '\^' in the pattern anchors the match to the start of the line. The '.'
> matches a single character (just like '?' in the shell), while the 'o'
> matches an actual 'o'.

While `grep` finds lines in files,
the `find` command finds files themselves.
Again,
it has a lot of options;
to show how the simplest ones work, we'll use the directory tree shown below.

<img src="img/find-file-tree.svg" alt="File Tree for Find Example" />

Vlad's home directory contains one file called `notes.txt` and four subdirectories:
`thesis` (which is sadly empty),
`data` (which contains two files `one.txt` and `two.txt`),
a `tools` directory that contains the programs `format` and `stats`,
and an empty subdirectory called `old`.

For our first command,
let's run `find . -type d -print`.
As always,
the `.` on its own means the current working directory,
which is where we want our search to start;
`-type d` means "things that are directories",
and (unsurprisingly) `-print` means "print what's found".
Sure enough,
`find`'s output is the names of the five directories in our little tree
(including `.`):

~~~
$ find . -type d -print
~~~
{:class="in"}
~~~
./
./data
./thesis
./tools
./tools/old
~~~
{:class="out"}

If we change `-type d` to `-type f`,
we get a listing of all the files instead:

~~~
$ find . -type f -print
~~~
{:class="in"}
~~~
./data/one.txt
./data/two.txt
./notes.txt
./tools/format
./tools/stats
~~~
{:class="out"}

`find` automatically goes into subdirectories,
their subdirectories,
and so on to find everything that matches the pattern we've given it.
If we don't want it to,
we can use `-maxdepth` to restrict the depth of search:

~~~
$ find . -maxdepth 1 -type f -print
~~~
{:class="in"}
~~~
./notes.txt
~~~
{:class="out"}

The opposite of `-maxdepth` is `-mindepth`,
which tells `find` to only report things that are at or below a certain depth.
`-mindepth 2` therefore finds all the files that are two or more levels below us:

~~~
$ find . -mindepth 2 -type f -print
~~~
{:class="in"}
~~~
./data/one.txt
./data/two.txt
./tools/format
./tools/stats
~~~
{:class="out"}

Another option is `-empty`,
which restricts matches to empty files and directories:

~~~
$ find . -empty -print
~~~
{:class="in"}
~~~
./thesis
./tools/old
~~~
{:class="out"}

Now let's try matching by name:

~~~
$ find . -name *.txt -print
~~~
{:class="in"}
~~~
./notes.txt
~~~
{:class="out"}

We expected it to find all the text files,
but it only prints out `./notes.txt`.
The problem is that the shell expands wildcard characters like `*` *before* commands run.
Since `*.txt` in the current directory expands to `notes.txt`,
the command we actually ran was:

~~~
$ find . -name notes.txt -print
~~~
{:class="in"}

`find` did what we asked; we just asked for the wrong thing.

To get what we want,
let's do what we did with `grep`:
put `*.txt` in single quotes to prevent the shell from expanding the `*` wildcard.
This way,
`find` actually gets the pattern `*.txt`, not the expanded filename `notes.txt`:

~~~
$ find . -name '*.txt' -print
~~~
{:class="in"}
~~~
./data/one.txt
./data/two.txt
./notes.txt
~~~
{:class="out"}

> #### Listing vs. Finding
>
> `ls` and `find` can be made to do similar things given the right options,
> but under normal circumstances,
> `ls` lists everything it can,
> while `find` searches for things with certain properties and shows them.

As we said earlier,
the command line's power lies in combining tools.
We've seen how to do that with pipes;
let's look at another technique.
As we just saw,
`find . -name '*.txt' -print` gives us a list of all text files in or below the current directory.
How can we combine that with `wc -l` to count the lines in all those files?

The simplest way is to put the `find` command inside `$()`:

~~~
$ wc -l $(find . -name '*.txt' -print)
~~~
{:class="in"}
~~~
70  ./data/one.txt
420  ./data/two.txt
30  ./notes.txt
520  total
~~~
{:class="out"}

When the shell executes this command,
the first thing it does is run whatever is inside the `$()`.
It then replaces the `$()` expression with that command's output.
Since the output of `find` is the three filenames `./data/one.txt`, `./data/two.txt`, and `./notes.txt`,
the shell constructs the command:

~~~
$ wc -l ./data/one.txt ./data/two.txt ./notes.txt
~~~
{:class="in"}

which is what we wanted.
This expansion is exactly what the shell does when it expands wildcards like `*` and `?`,
but lets us use any command we want as our own "wildcard".

It's very common to use `find` and `grep` together.
The first finds files that match a pattern;
the second looks for lines inside those files that match another pattern.
Here, for example, we can find PDB files that contain iron atoms
by looking for the string "FE" in all the `.pdb` files below the current directory:

~~~
$ grep FE $(find . -name '*.pdb' -print)
~~~
{:class="in"}
~~~
./human/heme.pdb:ATOM  25  FE  1  -0.924  0.535  -0.518
~~~
{:class="out"}

> #### Binary Files
>
> We have focused exclusively on finding things in text files. What if
> your data is stored as images, in databases, or in some other format?
> One option would be to extend tools like `grep` to handle those formats.
> This hasn't happened, and probably won't, because there are too many
> formats to support.
>
> The second option is to convert the data to text, or extract the
> text-ish bits from the data. This is probably the most common approach,
> since it only requires people to build one tool per data format (to
> extract information). On the one hand, it makes simple things easy to
> do. On the negative side, complex things are usually impossible. For
> example, it's easy enough to write a program that will extract X and Y
> dimensions from image files for `grep` to play with, but how would you
> write something to find values in a spreadsheet whose cells contained
> formulas?
>
> The third choice is to recognize that the shell and text processing have
> their limits, and to use a programming language such as Python instead.
> When the time comes to do this, don't be too hard on the shell: many
> modern programming languages, Python included, have borrowed a lot of
> ideas from it, and imitation is also the sincerest form of praise.

#### Conclusion

The Unix shell is older than most of the people who use it. It has
survived so long because it is one of the most productive programming
environments ever created&mdash;maybe even *the* most productive. Its syntax
may be cryptic, but people who have mastered it can experiment with
different commands interactively, then use what they have learned to
automate their work. Graphical user interfaces may be better at the
first, but the shell is still unbeaten at the second. And as Alfred
North Whitehead wrote in 1911, "Civilization advances by extending the
number of important operations which we can perform without thinking
about them."

<div class="keypoints" markdown="1">

#### Key Points
*   Use `find` to find files and directories, and `grep` to find text patterns in files.
*   `$(command)` inserts a command's output in place.
*   `man command` displays the manual page for a given command.

</div>

<div class="challenges" markdown="1">

#### Challenges

1.  Write a short explanatory comment for the following shell script:

    <div class="file" markdown="1">
    ~~~
    find . -name '*.dat' -print | wc -l | sort -n
    ~~~
    </div>

2.  The `-v` flag to `grep` inverts pattern matching, so that only lines
    which do *not* match the pattern are printed. Given that, which of
    the following commands will find all files in `/data` whose names
    end in `ose.dat` (e.g., `sucrose.dat` or `maltose.dat`), but do
    *not* contain the word `temp`?

    1. `find /data -name '*.dat' -print | grep ose | grep -v temp`

    2. `find /data -name ose.dat -print | grep -v temp`

    3. `grep -v temp $(find /data -name '*ose.dat' -print)`

    4. None of the above.

</div>

---
layout: lesson
root: ../..
title: The Unix Shell
---
The Unix shell has been around longer than most of its users have been alive.
It has survived so long because it's a power tool
that allows people to do complex things with just a few keystrokes.
More importantly,
it helps them combine existing programs in new ways
and automate repetitive tasks
so that they don't have to type the same things over and over again.

<div class="toc" markdown="1">

1.  [Introducing the Shell](00-intro.html)
2.  [Files and Directories](01-filedir.html)
3.  [Creating Things](02-create.html)
4.  [Pipes and Filters](03-pipefilter.html)
5.  [Loops](04-loop.html)
6.  [Shell Scripts](05-script.html)
7.  [Finding Things](06-find.html)

</div>

# Resources

*   `filesystem`: filesystem used in "Files and Directories"
*   `creatures`: DNA data used in "Loops"
*   `finding`: data using in "Finding Things"
*   `molecules`: PDB files used in "Pipes and Filters"
*   `scripting`: files and directories used in "Shell Scripts"

---
layout: lesson
root: ../..
---

## Selecting Data


<div>
<p>In the late 1920s and early 1930s, William Dyer, Frank Pabodie, and Valentina Roerich led expeditions to the <a href="http://en.wikipedia.org/wiki/Pole_of_inaccessibility">Pole of Inaccessibility</a> in the South Pacific, and then onward to Antarctica. Two years ago, their expeditions were found in a storage locker at Miskatonic University. We have scanned and OCR'd the data they contain, and we now want to store that information in a way that will make search and analysis easy.</p>
<p>We basically have three options: text files, a spreadsheet, or a database. Text files are easiest to create, and work well with version control, but then we would then have to build search and analysis tools ourselves. Spreadsheets are good for doing simple analysis, they don't handle large or complex data sets very well. We would therefore like to put this data in a database, and these lessons will show how to do that.</p>
</div>


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Explain the difference between a table, a record, and a field.</li>
<li>Explain the difference between a database and a database manager.</li>
<li>Write a query to select all values for specific fields from a single table.</li>
</ul>
</div>

### A Few Definitions


<div>
<p>A <a href="../../gloss.html#relational-database">relational database</a> is a way to store and manipulate information that is arranged as <a href="../../gloss.html#table-database">tables</a>. Each table has columns (also known as <a href="../../gloss.html#field-database">fields</a>) which describe the data, and rows (also known as <a href="../../gloss.html#record-database">records</a>) which contain the data.</p>
<p>When we are using a spreadsheet, we put formulas into cells to calculate new values based on old ones. When we are using a database, we send commands (usually called <a href="../../gloss.html#query">queries</a>) to a <a href="../../gloss.html#database-manager">database manager</a>: a program that manipulates the database for us. The database manager does whatever lookups and calculations the query specifies, returning the results in a tabular form that we can then use as a starting point for further queries.</p>
<blockquote>
<p>Every database manager—Oracle, IBM DB2, PostgreSQL, MySQL, Microsoft Access, and SQLite—stores data in a different way, so a database created with one cannot be used directly by another. However, every database manager can import and export data in a variety of formats, so it <em>is</em> possible to move information from one to another.</p>
</blockquote>
<p>Queries are written in a language called <a href="../../gloss.html#sql">SQL</a>, which stands for &quot;Structured Query Language&quot;. SQL provides hundreds of different ways to analyze and recombine data; we will only look at a handful, but that handful accounts for most of what scientists do.</p>
<p>The tables below show the database we will use in our examples:</p>
</div>


<div>
<table>
<tr>
<td valign="top">
<p><strong>Person</strong>: people who took readings.</p>
<table>
  <tr> <th>
ident
</th> <th>
personal
</th> <th>
family
</th> </tr>
  <tr> <td>
dyer
</td> <td>
William
</td> <td>
Dyer
</td> </tr>
  <tr> <td>
pb
</td> <td>
Frank
</td> <td>
Pabodie
</td> </tr>
  <tr> <td>
lake
</td> <td>
Anderson
</td> <td>
Lake
</td> </tr>
  <tr> <td>
roe
</td> <td>
Valentina
</td> <td>
Roerich
</td> </tr>
  <tr> <td>
danforth
</td> <td>
Frank
</td> <td>
Danforth
</td> </tr>
</table>

<p><strong>Site</strong>: locations where readings were taken.</p>
<table>
  <tr> <th>
name
</th> <th>
lat
</th> <th>
long
</th> </tr>
  <tr> <td>
DR-1
</td> <td>
-49.85
</td> <td>
-128.57
</td> </tr>
  <tr> <td>
DR-3
</td> <td>
-47.15
</td> <td>
-126.72
</td> </tr>
  <tr> <td>
MSK-4
</td> <td>
-48.87
</td> <td>
-123.4
</td> </tr>
</table>

<p><strong>Visited</strong>: when readings were taken at specific sites.</p>
<table>
  <tr> <th>
ident
</th> <th>
site
</th> <th>
dated
</th> </tr>
  <tr> <td>
619
</td> <td>
DR-1
</td> <td>
1927-02-08
</td> </tr>
  <tr> <td>
622
</td> <td>
DR-1
</td> <td>
1927-02-10
</td> </tr>
  <tr> <td>
734
</td> <td>
DR-3
</td> <td>
1939-01-07
</td> </tr>
  <tr> <td>
735
</td> <td>
DR-3
</td> <td>
1930-01-12
</td> </tr>
  <tr> <td>
751
</td> <td>
DR-3
</td> <td>
1930-02-26
</td> </tr>
  <tr> <td>
752
</td> <td>
DR-3
</td> <td bgcolor="red">
 
</td> </tr>
  <tr> <td>
837
</td> <td>
MSK-4
</td> <td>
1932-01-14
</td> </tr>
  <tr> <td>
844
</td> <td>
DR-1
</td> <td>
1932-03-22
</td> </tr>
</table>
</td>
<td valign="top">
<p><strong>Survey</strong>: the actual readings.</p>
<table>
  <tr> <th>
taken
</th> <th>
person
</th> <th>
quant
</th> <th>
reading
</th> </tr>
  <tr> <td>
619
</td> <td>
dyer
</td> <td>
rad
</td> <td>
9.82
</td> </tr>
  <tr> <td>
619
</td> <td>
dyer
</td> <td>
sal
</td> <td>
0.13
</td> </tr>
  <tr> <td>
622
</td> <td>
dyer
</td> <td>
rad
</td> <td>
7.8
</td> </tr>
  <tr> <td>
622
</td> <td>
dyer
</td> <td>
sal
</td> <td>
0.09
</td> </tr>
  <tr> <td>
734
</td> <td>
pb
</td> <td>
rad
</td> <td>
8.41
</td> </tr>
  <tr> <td>
734
</td> <td>
lake
</td> <td>
sal
</td> <td>
0.05
</td> </tr>
  <tr> <td>
734
</td> <td>
pb
</td> <td>
temp
</td> <td>
-21.5
</td> </tr>
  <tr> <td>
735
</td> <td>
pb
</td> <td>
rad
</td> <td>
7.22
</td> </tr>
  <tr> <td>
735
</td> <td bgcolor="red">
 
</td> <td>
sal
</td> <td>
0.06
</td> </tr>
  <tr> <td>
735
</td> <td bgcolor="red">
 
</td> <td>
temp
</td> <td>
-26.0
</td> </tr>
  <tr> <td>
751
</td> <td>
pb
</td> <td>
rad
</td> <td>
4.35
</td> </tr>
  <tr> <td>
751
</td> <td>
pb
</td> <td>
temp
</td> <td>
-18.5
</td> </tr>
  <tr> <td>
751
</td> <td>
lake
</td> <td>
sal
</td> <td>
0.1
</td> </tr>
  <tr> <td>
752
</td> <td>
lake
</td> <td>
rad
</td> <td>
2.19
</td> </tr>
  <tr> <td>
752
</td> <td>
lake
</td> <td>
sal
</td> <td>
0.09
</td> </tr>
  <tr> <td>
752
</td> <td>
lake
</td> <td>
temp
</td> <td>
-16.0
</td> </tr>
  <tr> <td>
752
</td> <td>
roe
</td> <td>
sal
</td> <td>
41.6
</td> </tr>
  <tr> <td>
837
</td> <td>
lake
</td> <td>
rad
</td> <td>
1.46
</td> </tr>
  <tr> <td>
837
</td> <td>
lake
</td> <td>
sal
</td> <td>
0.21
</td> </tr>
  <tr> <td>
837
</td> <td>
roe
</td> <td>
sal
</td> <td>
22.5
</td> </tr>
  <tr> <td>
844
</td> <td>
roe
</td> <td>
rad
</td> <td>
11.25
</td> </tr>
</table>
</td>
</tr>
</table>

</div>


<div>
<p>Notice that three entries—one in the <code>Visited</code> table, and two in the <code>Survey</code> table—are shown in red because they don't contain any actual data: we'll return to these missing values <a href="#s:null">later</a>. For now, let's write an SQL query that displays scientists' names. We do this using the SQL command <code>select</code>, giving it the names of the columns we want and the table we want them from. Our query and its output look like this:</p>
</div>


<div class="in">
<pre>%load_ext sqlitemagic</pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select family, personal from Person;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>Dyer</td><td>William</td></tr>
<tr><td>Pabodie</td><td>Frank</td></tr>
<tr><td>Lake</td><td>Anderson</td></tr>
<tr><td>Roerich</td><td>Valentina</td></tr>
<tr><td>Danforth</td><td>Frank</td></tr>
</table></pre>
</div>


<div>
<p>The semi-colon at the end of the query tells the database manager that the query is complete and ready to run. We have written our commands and column names in lower case, and the table name in Title Case, but we don't have to: as the example below shows, SQL is <a href="../../gloss.html#case-insensitive">case insensitive</a>.</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
SeLeCt FaMiLy, PeRsOnAl FrOm PeRsOn;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>Dyer</td><td>William</td></tr>
<tr><td>Pabodie</td><td>Frank</td></tr>
<tr><td>Lake</td><td>Anderson</td></tr>
<tr><td>Roerich</td><td>Valentina</td></tr>
<tr><td>Danforth</td><td>Frank</td></tr>
</table></pre>
</div>


<div>
<p>Whatever casing convention you choose, please be consistent: complex queries are hard enough to read without the extra cognitive load of random capitalization.</p>
</div>


<div>
<p>Going back to our query, it's important to understand that the rows and columns in a database table aren't actually stored in any particular order. They will always be <em>displayed</em> in some order, but we can control that in various ways. For example, we could swap the columns in the output by writing our query as:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select personal, family from Person;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>William</td><td>Dyer</td></tr>
<tr><td>Frank</td><td>Pabodie</td></tr>
<tr><td>Anderson</td><td>Lake</td></tr>
<tr><td>Valentina</td><td>Roerich</td></tr>
<tr><td>Frank</td><td>Danforth</td></tr>
</table></pre>
</div>


<div>
<p>or even repeat columns:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select ident, ident, ident from Person;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>dyer</td><td>dyer</td><td>dyer</td></tr>
<tr><td>pb</td><td>pb</td><td>pb</td></tr>
<tr><td>lake</td><td>lake</td><td>lake</td></tr>
<tr><td>roe</td><td>roe</td><td>roe</td></tr>
<tr><td>danforth</td><td>danforth</td><td>danforth</td></tr>
</table></pre>
</div>


<div>
<p>As a shortcut, we can select all of the columns in a table using <code>*</code>:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Person;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>dyer</td><td>William</td><td>Dyer</td></tr>
<tr><td>pb</td><td>Frank</td><td>Pabodie</td></tr>
<tr><td>lake</td><td>Anderson</td><td>Lake</td></tr>
<tr><td>roe</td><td>Valentina</td><td>Roerich</td></tr>
<tr><td>danforth</td><td>Frank</td><td>Danforth</td></tr>
</table></pre>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Write a query that selects only site names from the <code>Site</code> table.</p></li>
<li><p>Many people format queries as:</p>
<pre><code>SELECT personal, family FROM person;</code></pre>
<p>or as:</p>
<pre><code>select Personal, Family from PERSON;</code></pre>
<p>What style do you find easiest to read, and why?</p></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>A relational database stores information in tables, each of which has a fixed set of columns and a variable number of records.</li>
<li>A database manager is a program that manipulates information stored in a database.</li>
<li>We write queries in a specialized language called SQL to extract information from databases.</li>
<li>SQL is case-insensitive.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Sorting and Removing Duplicates


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Write queries that display results in a particular order.</li>
<li>Write queries that eliminate duplicate values from data.</li>
</ul>
</div>


<div>
<p>Data is often redundant, so queries often return redundant information. For example, if we select the quantitites that have been measured from the <code>survey</code> table, we get this:</p>
</div>


<div class="in">
<pre>%load_ext sqlitemagic</pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select quant from Survey;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>rad</td></tr>
<tr><td>sal</td></tr>
<tr><td>rad</td></tr>
<tr><td>sal</td></tr>
<tr><td>rad</td></tr>
<tr><td>sal</td></tr>
<tr><td>temp</td></tr>
<tr><td>rad</td></tr>
<tr><td>sal</td></tr>
<tr><td>temp</td></tr>
<tr><td>rad</td></tr>
<tr><td>temp</td></tr>
<tr><td>sal</td></tr>
<tr><td>rad</td></tr>
<tr><td>sal</td></tr>
<tr><td>temp</td></tr>
<tr><td>sal</td></tr>
<tr><td>rad</td></tr>
<tr><td>sal</td></tr>
<tr><td>sal</td></tr>
<tr><td>rad</td></tr>
</table></pre>
</div>


<div>
<p>We can eliminate the redundant output to make the result more readable by adding the <code>distinct</code> keyword to our query:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select distinct quant from Survey;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>rad</td></tr>
<tr><td>sal</td></tr>
<tr><td>temp</td></tr>
</table></pre>
</div>


<div>
<p>If we select more than one column—for example, both the survey site ID and the quantity measured—then the distinct pairs of values are returned:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select distinct taken, quant from Survey;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>rad</td></tr>
<tr><td>619</td><td>sal</td></tr>
<tr><td>622</td><td>rad</td></tr>
<tr><td>622</td><td>sal</td></tr>
<tr><td>734</td><td>rad</td></tr>
<tr><td>734</td><td>sal</td></tr>
<tr><td>734</td><td>temp</td></tr>
<tr><td>735</td><td>rad</td></tr>
<tr><td>735</td><td>sal</td></tr>
<tr><td>735</td><td>temp</td></tr>
<tr><td>751</td><td>rad</td></tr>
<tr><td>751</td><td>temp</td></tr>
<tr><td>751</td><td>sal</td></tr>
<tr><td>752</td><td>rad</td></tr>
<tr><td>752</td><td>sal</td></tr>
<tr><td>752</td><td>temp</td></tr>
<tr><td>837</td><td>rad</td></tr>
<tr><td>837</td><td>sal</td></tr>
<tr><td>844</td><td>rad</td></tr>
</table></pre>
</div>


<div>
<p>Notice in both cases that duplicates are removed even if they didn't appear to be adjacent in the database. Again, it's important to remember that rows aren't actually ordered: they're just displayed that way.</p>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li>Write a query that selects distinct dates from the <code>Site</code> table.</li>
</ol>
</div>


<div>
<p>As we mentioned earlier, database records are not stored in any particular order. This means that query results aren't necessarily sorted, and even if they are, we often want to sort them in a different way, e.g., by the name of the project instead of by the name of the scientist. We can do this in SQL by adding an <code>order by</code> clause to our query:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Person order by ident;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>danforth</td><td>Frank</td><td>Danforth</td></tr>
<tr><td>dyer</td><td>William</td><td>Dyer</td></tr>
<tr><td>lake</td><td>Anderson</td><td>Lake</td></tr>
<tr><td>pb</td><td>Frank</td><td>Pabodie</td></tr>
<tr><td>roe</td><td>Valentina</td><td>Roerich</td></tr>
</table></pre>
</div>


<div>
<p>By default, results are sorted in ascending order (i.e., from least to greatest). We can sort in the opposite order using <code>desc</code> (for &quot;descending&quot;):</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from person order by ident desc;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>roe</td><td>Valentina</td><td>Roerich</td></tr>
<tr><td>pb</td><td>Frank</td><td>Pabodie</td></tr>
<tr><td>lake</td><td>Anderson</td><td>Lake</td></tr>
<tr><td>dyer</td><td>William</td><td>Dyer</td></tr>
<tr><td>danforth</td><td>Frank</td><td>Danforth</td></tr>
</table></pre>
</div>


<div>
<p>(And if we want to make it clear that we're sorting in ascending order, we can use <code>asc</code> instead of <code>desc</code>.)</p>
<p>We can also sort on several fields at once. For example, this query sorts results first in ascending order by <code>taken</code>, and then in descending order by <code>person</code> within each group of equal <code>taken</code> values:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select taken, person from Survey order by taken asc, person desc;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>dyer</td></tr>
<tr><td>619</td><td>dyer</td></tr>
<tr><td>622</td><td>dyer</td></tr>
<tr><td>622</td><td>dyer</td></tr>
<tr><td>734</td><td>pb</td></tr>
<tr><td>734</td><td>pb</td></tr>
<tr><td>734</td><td>lake</td></tr>
<tr><td>735</td><td>pb</td></tr>
<tr><td>735</td><td>None</td></tr>
<tr><td>735</td><td>None</td></tr>
<tr><td>751</td><td>pb</td></tr>
<tr><td>751</td><td>pb</td></tr>
<tr><td>751</td><td>lake</td></tr>
<tr><td>752</td><td>roe</td></tr>
<tr><td>752</td><td>lake</td></tr>
<tr><td>752</td><td>lake</td></tr>
<tr><td>752</td><td>lake</td></tr>
<tr><td>837</td><td>roe</td></tr>
<tr><td>837</td><td>lake</td></tr>
<tr><td>837</td><td>lake</td></tr>
<tr><td>844</td><td>roe</td></tr>
</table></pre>
</div>


<div>
<p>This is easier to understand if we also remove duplicates:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select distinct taken, person from Survey order by taken asc, person desc;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>dyer</td></tr>
<tr><td>622</td><td>dyer</td></tr>
<tr><td>734</td><td>pb</td></tr>
<tr><td>734</td><td>lake</td></tr>
<tr><td>735</td><td>pb</td></tr>
<tr><td>735</td><td>None</td></tr>
<tr><td>751</td><td>pb</td></tr>
<tr><td>751</td><td>lake</td></tr>
<tr><td>752</td><td>roe</td></tr>
<tr><td>752</td><td>lake</td></tr>
<tr><td>837</td><td>roe</td></tr>
<tr><td>837</td><td>lake</td></tr>
<tr><td>844</td><td>roe</td></tr>
</table></pre>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Write a query that returns the distinct dates in the <code>Visited</code> table.</p></li>
<li><p>Write a query that displays the full names of the scientists in the <code>Person</code> table, ordered by family name.</p></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>The records in a database table are not intrinsically ordered: if we want to display them in some order, we must specify that explicitly.</li>
<li>The values in a database are not guaranteed to be unique: if we want to eliminate duplicates, we must specify that explicitly as well.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Filtering


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Write queries that select records that satisfy user-specified conditions.</li>
<li>Explain the order in which the clauses in a query are executed.</li>
</ul>
</div>


<div>
<p>One of the most powerful features of a database is the ability to <a href="../../gloss.html#filter">filter</a> data, i.e., to select only those records that match certain criteria. For example, suppose we want to see when a particular site was visited. We can select these records from the <code>Visited</code> table by using a <code>where</code> clause in our query:</p>
</div>


<div class="in">
<pre>%load_ext sqlitemagic</pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where site=&#39;DR-1&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
<tr><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
</table></pre>
</div>


<div>
<p>The database manager executes this query in two stages. First, it checks at each row in the <code>Visited</code> table to see which ones satisfy the <code>where</code>. It then uses the column names following the <code>select</code> keyword to determine what columns to display.</p>
</div>


<div>
<p>This processing order means that we can filter records using <code>where</code> based on values in columns that aren't then displayed:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select ident from Visited where site=&#39;DR-1&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td></tr>
<tr><td>622</td></tr>
<tr><td>844</td></tr>
</table></pre>
</div>


<div>
<p><img src="img/sql-filter.svg" alt="SQL Filtering in Action" /></p>
</div>


<div>
<p>We can use many other Boolean operators to filter our data. For example, we can ask for all information from the DR-1 site collected since 1930:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where (site=&#39;DR-1&#39;) and (dated&gt;=&#39;1930-00-00&#39;);</pre>
</div>

<div class="out">
<pre><table>
<tr><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
</table></pre>
</div>


<div>
<p>(The parentheses around the individual tests aren't strictly required, but they help make the query easier to read.)</p>
<blockquote>
<p>Most database managers have a special data type for dates. In fact, many have two: one for dates, such as &quot;May 31, 1971&quot;, and one for durations, such as &quot;31 days&quot;. SQLite doesn't: instead, it stores dates as either text (in the ISO-8601 standard format &quot;YYYY-MM-DD HH:MM:SS.SSSS&quot;), real numbers (the number of days since November 24, 4714 BCE), or integers (the number of seconds since midnight, January 1, 1970). If this sounds complicated, it is, but not nearly as complicated as figuring out <a href="http://en.wikipedia.org/wiki/Swedish_calendar">historical dates in Sweden</a>.</p>
</blockquote>
</div>


<div>
<p>If we want to find out what measurements were taken by either Lake or Roerich, we can combine the tests on their names using <code>or</code>:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Survey where person=&#39;lake&#39; or person=&#39;roe&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>734</td><td>lake</td><td>sal</td><td>0.05</td></tr>
<tr><td>751</td><td>lake</td><td>sal</td><td>0.1</td></tr>
<tr><td>752</td><td>lake</td><td>rad</td><td>2.19</td></tr>
<tr><td>752</td><td>lake</td><td>sal</td><td>0.09</td></tr>
<tr><td>752</td><td>lake</td><td>temp</td><td>-16.0</td></tr>
<tr><td>752</td><td>roe</td><td>sal</td><td>41.6</td></tr>
<tr><td>837</td><td>lake</td><td>rad</td><td>1.46</td></tr>
<tr><td>837</td><td>lake</td><td>sal</td><td>0.21</td></tr>
<tr><td>837</td><td>roe</td><td>sal</td><td>22.5</td></tr>
<tr><td>844</td><td>roe</td><td>rad</td><td>11.25</td></tr>
</table></pre>
</div>


<div>
<p>Alternatively, we can use <code>in</code> to see if a value is in a specific set:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Survey where person in (&#39;lake&#39;, &#39;roe&#39;);</pre>
</div>

<div class="out">
<pre><table>
<tr><td>734</td><td>lake</td><td>sal</td><td>0.05</td></tr>
<tr><td>751</td><td>lake</td><td>sal</td><td>0.1</td></tr>
<tr><td>752</td><td>lake</td><td>rad</td><td>2.19</td></tr>
<tr><td>752</td><td>lake</td><td>sal</td><td>0.09</td></tr>
<tr><td>752</td><td>lake</td><td>temp</td><td>-16.0</td></tr>
<tr><td>752</td><td>roe</td><td>sal</td><td>41.6</td></tr>
<tr><td>837</td><td>lake</td><td>rad</td><td>1.46</td></tr>
<tr><td>837</td><td>lake</td><td>sal</td><td>0.21</td></tr>
<tr><td>837</td><td>roe</td><td>sal</td><td>22.5</td></tr>
<tr><td>844</td><td>roe</td><td>rad</td><td>11.25</td></tr>
</table></pre>
</div>


<div>
<p>We can combine <code>and</code> with <code>or</code>, but we need to be careful about which operator is executed first. If we <em>don't</em> use parentheses, we get this:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Survey where quant=&#39;sal&#39; and person=&#39;lake&#39; or person=&#39;roe&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>734</td><td>lake</td><td>sal</td><td>0.05</td></tr>
<tr><td>751</td><td>lake</td><td>sal</td><td>0.1</td></tr>
<tr><td>752</td><td>lake</td><td>sal</td><td>0.09</td></tr>
<tr><td>752</td><td>roe</td><td>sal</td><td>41.6</td></tr>
<tr><td>837</td><td>lake</td><td>sal</td><td>0.21</td></tr>
<tr><td>837</td><td>roe</td><td>sal</td><td>22.5</td></tr>
<tr><td>844</td><td>roe</td><td>rad</td><td>11.25</td></tr>
</table></pre>
</div>


<div>
<p>which is salinity measurements by Lake, and <em>any</em> measurement by Roerich. We probably want this instead:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Survey where quant=&#39;sal&#39; and (person=&#39;lake&#39; or person=&#39;roe&#39;);</pre>
</div>

<div class="out">
<pre><table>
<tr><td>734</td><td>lake</td><td>sal</td><td>0.05</td></tr>
<tr><td>751</td><td>lake</td><td>sal</td><td>0.1</td></tr>
<tr><td>752</td><td>lake</td><td>sal</td><td>0.09</td></tr>
<tr><td>752</td><td>roe</td><td>sal</td><td>41.6</td></tr>
<tr><td>837</td><td>lake</td><td>sal</td><td>0.21</td></tr>
<tr><td>837</td><td>roe</td><td>sal</td><td>22.5</td></tr>
</table></pre>
</div>


<div>
<p>Finally, we can use <code>distinct</code> with <code>where</code> to give a second level of filtering:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select distinct person, quant from Survey where person=&#39;lake&#39; or person=&#39;roe&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>lake</td><td>sal</td></tr>
<tr><td>lake</td><td>rad</td></tr>
<tr><td>lake</td><td>temp</td></tr>
<tr><td>roe</td><td>sal</td></tr>
<tr><td>roe</td><td>rad</td></tr>
</table></pre>
</div>


<div>
<p>But remember: <code>distinct</code> is applied to the values displayed in the chosen columns, not to the entire rows as they are being processed.</p>
<blockquote>
<p>What we have just done is how most people &quot;grow&quot; their SQL queries. We started with something simple that did part of what we wanted, then added more clauses one by one, testing their effects as we went. This is a good strategy—in fact, for complex queries it's often the <em>only</em> strategy—but it depends on quick turnaround, and on us recognizing the right answer when we get it.</p>
<p>The best way to achieve quick turnaround is often to put a subset of data in a temporary database and run our queries against that, or to fill a small database with synthesized records. For example, instead of trying our queries against an actual database of 20 million Australians, we could run it against a sample of ten thousand, or write a small program to generate ten thousand random (but plausible) records and use that.</p>
</blockquote>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Suppose we want to select all sites that lie more than 30° from the poles. Our first query is:</p>
<pre><code>select * from Site where (lat &gt; -60) or (lat &lt; 60);</code></pre>
<p>Explain why this is wrong, and rewrite the query so that it is correct.</p></li>
<li><p>Normalized salinity readings are supposed to be between 0.0 and 1.0. Write a query that selects all records from <code>Survey</code> with salinity values outside this range.</p></li>
<li><p>The SQL test <code>*column-name* like *pattern*</code> is true if the value in the named column matches the pattern given; the character '%' can be used any number of times in the pattern to mean &quot;match zero or more characters&quot;.</p>
<table>
  <tr> <th>
Expression
</th> <th>
Value
</th> </tr>
  <tr> <td>
<code>'a' like 'a'</code>
</td> <td>
True
</td> </tr>
  <tr> <td>
<code>'a' like '%a'</code>
</td> <td>
True
</td> </tr>
  <tr> <td>
<code>'b' like '%a'</code>
</td> <td>
False
</td> </tr>
  <tr> <td>
<code>'alpha' like 'a%'</code>
</td> <td>
True
</td> </tr>
  <tr> <td>
<code>'alpha' like 'a%p%'</code>
</td> <td>
True
</td> </tr>
</table>
<p>The expression <code>*column-name* not like *pattern*</code> inverts the test. Using <code>like</code>, write a query that finds all the records in <code>Visited</code> that <em>aren't</em> from sites labelled 'DR-something'.</p></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Use <code>where</code> to filter records according to Boolean conditions.</li>
<li>Filtering is done on whole records, so conditions can use fields that are not actually displayed.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Calculating New Values


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Write queries that calculate new values for each selected record.</li>
</ul>
</div>


<div>
<p>After carefully re-reading the expedition logs, we realize that the radiation measurements they report may need to be corrected upward by 5%. Rather than modifying the stored data, we can do this calculation on the fly as part of our query:</p>
</div>


<div class="in">
<pre>%load_ext sqlitemagic</pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select 1.05 * reading from Survey where quant=&#39;rad&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>10.311</td></tr>
<tr><td>8.19</td></tr>
<tr><td>8.8305</td></tr>
<tr><td>7.581</td></tr>
<tr><td>4.5675</td></tr>
<tr><td>2.2995</td></tr>
<tr><td>1.533</td></tr>
<tr><td>11.8125</td></tr>
</table></pre>
</div>


<div>
<p>When we run the query, the expression <code>1.05 * reading</code> is evaluated for each row. Expressions can use any of the fields, all of usual arithmetic operators, and a variety of common functions. (Exactly which ones depends on which database manager is being used.) For example, we can convert temperature readings from Fahrenheit to Celsius and round to two decimal places:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select taken, round(5*(reading-32)/9, 2) from Survey where quant=&#39;temp&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>734</td><td>-29.72</td></tr>
<tr><td>735</td><td>-32.22</td></tr>
<tr><td>751</td><td>-28.06</td></tr>
<tr><td>752</td><td>-26.67</td></tr>
</table></pre>
</div>


<div>
<p>We can also combine values from different fields, for example by using the string concatenation operator <code>||</code>:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select personal || &#39; &#39; || family from Person;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>William Dyer</td></tr>
<tr><td>Frank Pabodie</td></tr>
<tr><td>Anderson Lake</td></tr>
<tr><td>Valentina Roerich</td></tr>
<tr><td>Frank Danforth</td></tr>
</table></pre>
</div>


<div>
<blockquote>
<p>It may seem strange to use <code>personal</code> and <code>family</code> as field names instead of <code>first</code> and <code>last</code>, but it's a necessary first step toward handling cultural differences. For example, consider the following rules:</p>
</blockquote>
<table>
  <tr> <th>
Full Name
</th> <th>
Alphabetized Under
</th> <th>
Reason
</th> </tr>
  <tr> <td>
Liu Xiaobo
</td> <td>
Liu
</td> <td>
Chinese family names come first
</td> </tr>
  <tr> <td> 
Leonardo da Vinci
</td> <td>
Leonardo
</td> <td>
&quot;da Vinci&quot; just means &quot;from Vinci&quot;
</td> </tr>
  <tr> <td> 
Catherine de Medici
</td> <td>
Medici
</td> <td>
family name
</td> </tr>
  <tr> <td> 
Jean de La Fontaine
</td> <td>
La Fontaine
</td> <td>
family name is &quot;La Fontaine&quot;
</td> </tr>
  <tr> <td> 
Juan Ponce de Leon
</td> <td>
Ponce de Leon
</td> <td>
full family name is &quot;Ponce de Leon&quot;
</td> </tr>
  <tr> <td> 
Gabriel Garcia Marquez
</td> <td>
Garcia Marquez
</td> <td>
double-barrelled Spanish surnames
</td> </tr>
  <tr> <td> 
Wernher von Braun
</td> <td>
von <em>or</em> Braun
</td> <td>
depending on whether he was in Germany or the US
</td> </tr>
  <tr> <td> 
Elizabeth Alexandra May Windsor
</td> <td>
Elizabeth
</td> <td>
monarchs alphabetize by the name under which they reigned
</td> </tr>
  <tr> <td> 
Thomas a Beckett
</td> <td>
Thomas
</td> <td>
and saints according to the names by which they were canonized
</td> </tr>
</table>

<blockquote>
<p>Clearly, even a two-part division into &quot;personal&quot; and &quot;family&quot; isn't enough...</p>
</blockquote>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>After further reading, we realize that Valentina Roerich was reporting salinity as percentages. Write a query that returns all of her salinity measurements from the <code>Survey</code> table with the values divided by 100.</p></li>
<li><p>The <code>union</code> operator combines the results of two queries:</p></li>
</ol>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Person where ident=&#39;dyer&#39; union select * from Person where ident=&#39;roe&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>dyer</td><td>William</td><td>Dyer</td></tr>
<tr><td>roe</td><td>Valentina</td><td>Roerich</td></tr>
</table></pre>
</div>


<div>
<p>Use <code>union</code> to create a consolidated list of salinity measurements in which Roerich's, and only Roerich's, have been corrected as described in the previous challenge. The output should be something like:</p>
<table>
  <tr> <td>
619
</td> <td>
0.13
</td> </tr>
  <tr> <td>
622
</td> <td>
0.09
</td> </tr>
  <tr> <td>
734
</td> <td>
0.05
</td> </tr>
  <tr> <td>
751
</td> <td>
0.1
</td> </tr>
  <tr> <td>
752
</td> <td>
0.09
</td> </tr>
  <tr> <td>
752
</td> <td>
0.416
</td> </tr>
  <tr> <td>
837
</td> <td>
0.21
</td> </tr>
  <tr> <td>
837
</td> <td>
0.225
</td> </tr>
</table>


</div>


<div>
<ol start="3" style="list-style-type: decimal">
<li>The site identifiers in the <code>Visited</code> table have two parts separated by a '-':</li>
</ol>
</div>


<div class="in">
<pre>%%sqlite survey.db
select distinct site from Visited;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>DR-1</td></tr>
<tr><td>DR-3</td></tr>
<tr><td>MSK-4</td></tr>
</table></pre>
</div>


<div>
<p>Some major site identifiers are two letters long and some are three. The &quot;in string&quot; function <code>instr(X, Y)</code> returns the 1-based index of the first occurrence of string Y in string X, or 0 if Y does not exist in X. The substring function <code>substr(X, I)</code> returns the substring of X starting at index I. Use these two functions to produce a list of unique major site identifiers. (For this data, the list should contain only &quot;DR&quot; and &quot;MSK&quot;).</p>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>SQL can perform calculations using the values in a record as part of a query.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Missing Data


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Explain how databases represent missing information.</li>
<li>Explain the three-valued logic databases use when manipulating missing information.</li>
<li>Write queries that handle missing information correctly.</li>
</ul>
</div>


<div>
<p>Real-world data is never complete—there are always holes. Databases represent these holes using special value called <code>null</code>. <code>null</code> is not zero, <code>False</code>, or the empty string; it is a one-of-a-kind value that means &quot;nothing here&quot;. Dealing with <code>null</code> requires a few special tricks and some careful thinking.</p>
<p>To start, let's have a look at the <code>Visited</code> table. There are eight records, but #752 doesn't have a date—or rather, its date is null:</p>
</div>


<div class="in">
<pre>%load_ext sqlitemagic</pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
<tr><td>734</td><td>DR-3</td><td>1939-01-07</td></tr>
<tr><td>735</td><td>DR-3</td><td>1930-01-12</td></tr>
<tr><td>751</td><td>DR-3</td><td>1930-02-26</td></tr>
<tr><td>752</td><td>DR-3</td><td>None</td></tr>
<tr><td>837</td><td>MSK-4</td><td>1932-01-14</td></tr>
<tr><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
</table></pre>
</div>


<div>
<p>Null doesn't behave like other values. If we select the records that come before 1930:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where dated&lt;&#39;1930-00-00&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
</table></pre>
</div>


<div>
<p>we get two results, and if we select the ones that come during or after 1930:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where dated&gt;=&#39;1930-00-00&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>734</td><td>DR-3</td><td>1939-01-07</td></tr>
<tr><td>735</td><td>DR-3</td><td>1930-01-12</td></tr>
<tr><td>751</td><td>DR-3</td><td>1930-02-26</td></tr>
<tr><td>837</td><td>MSK-4</td><td>1932-01-14</td></tr>
<tr><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
</table></pre>
</div>


<div>
<p>we get five, but record #752 isn't in either set of results. The reason is that <code>null&lt;'1930-00-00'</code> is neither true nor false: null means, &quot;We don't know,&quot; and if we don't know the value on the left side of a comparison, we don't know whether the comparison is true or false. Since databases represent &quot;don't know&quot; as null, the value of <code>null&lt;'1930-00-00'</code> is actually <code>null</code>. <code>null&gt;='1930-00-00'</code> is also null because we can't answer to that question either. And since the only records kept by a <code>where</code> are those for which the test is true, record #752 isn't included in either set of results.</p>
<p>Comparisons aren't the only operations that behave this way with nulls. <code>1+null</code> is <code>null</code>, <code>5*null</code> is <code>null</code>, <code>log(null)</code> is <code>null</code>, and so on. In particular, comparing things to null with = and != produces null:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where dated=NULL;</pre>
</div>

<div class="out">
<pre><table>

</table></pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where dated!=NULL;</pre>
</div>

<div class="out">
<pre><table>

</table></pre>
</div>


<div>
<p>To check whether a value is <code>null</code> or not, we must use a special test <code>is null</code>:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where dated is NULL;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>752</td><td>DR-3</td><td>None</td></tr>
</table></pre>
</div>


<div>
<p>or its inverse <code>is not null</code>:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Visited where dated is not NULL;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
<tr><td>734</td><td>DR-3</td><td>1939-01-07</td></tr>
<tr><td>735</td><td>DR-3</td><td>1930-01-12</td></tr>
<tr><td>751</td><td>DR-3</td><td>1930-02-26</td></tr>
<tr><td>837</td><td>MSK-4</td><td>1932-01-14</td></tr>
<tr><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
</table></pre>
</div>


<div>
<p>Null values cause headaches wherever they appear. For example, suppose we want to find all the salinity measurements that weren't taken by Dyer. It's natural to write the query like this:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Survey where quant=&#39;sal&#39; and person!=&#39;lake&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>dyer</td><td>sal</td><td>0.13</td></tr>
<tr><td>622</td><td>dyer</td><td>sal</td><td>0.09</td></tr>
<tr><td>752</td><td>roe</td><td>sal</td><td>41.6</td></tr>
<tr><td>837</td><td>roe</td><td>sal</td><td>22.5</td></tr>
</table></pre>
</div>


<div>
<p>but this query filters omits the records where we don't know who took the measurement. Once again, the reason is that when <code>person</code> is <code>null</code>, the <code>!=</code> comparison produces <code>null</code>, so the record isn't kept in our results. If we want to keep these records we need to add an explicit check:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Survey where quant=&#39;sal&#39; and (person!=&#39;lake&#39; or person is null);</pre>
</div>

<div class="out">
<pre><table>
<tr><td>619</td><td>dyer</td><td>sal</td><td>0.13</td></tr>
<tr><td>622</td><td>dyer</td><td>sal</td><td>0.09</td></tr>
<tr><td>735</td><td>None</td><td>sal</td><td>0.06</td></tr>
<tr><td>752</td><td>roe</td><td>sal</td><td>41.6</td></tr>
<tr><td>837</td><td>roe</td><td>sal</td><td>22.5</td></tr>
</table></pre>
</div>


<div>
<p>We still have to decide whether this is the right thing to do or not. If we want to be absolutely sure that we aren't including any measurements by Lake in our results, we need to exclude all the records for which we don't know who did the work.</p>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Write a query that sorts the records in <code>Visited</code> by date, omitting entries for which the date is not known (i.e., is null).</p></li>
<li><p>What do you expect the query:</p>
<pre><code>select * from Visited where dated in (&#39;1927-02-08&#39;, null);</code></pre>
<p>to produce? What does it actually produce?</p></li>
<li><p>Some database designers prefer to use a <a href="../../gloss.html#sentinel-value">sentinel value</a> to mark missing data rather than <code>null</code>. For example, they will use the date &quot;0000-00-00&quot; to mark a missing date, or -1.0 to mark a missing salinity or radiation reading (since actual readings cannot be negative). What does this simplify? What burdens or risks does it introduce?</p></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Databases use <code>null</code> to represent missing information.</li>
<li>Any arithmetic or Boolean operation involving <code>null</code> produces <code>null</code> as a result.</li>
<li>The only operators that can safely be used with <code>null</code> are <code>is null</code> and <code>is not null</code>.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Aggregation


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Define &quot;aggregation&quot; and give examples of its use.</li>
<li>Write queries that compute aggregated values.</li>
<li>Trace the execution of a query that performs aggregation.</li>
<li>Explain how missing data is handled during aggregation.</li>
</ul>
</div>


<div>
<p>We now want to calculate ranges and averages for our data. We know how to select all of the dates from the <code>Visited</code> table:</p>
</div>


<div class="in">
<pre>%load_ext sqlitemagic</pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select dated from Visited;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>1927-02-08</td></tr>
<tr><td>1927-02-10</td></tr>
<tr><td>1939-01-07</td></tr>
<tr><td>1930-01-12</td></tr>
<tr><td>1930-02-26</td></tr>
<tr><td>None</td></tr>
<tr><td>1932-01-14</td></tr>
<tr><td>1932-03-22</td></tr>
</table></pre>
</div>


<div>
<p>but to combine them, wee must use an <a href="../../gloss.html#aggregation-function">aggregation function</a> such as <code>min</code> or <code>max</code>. Each of these functions takes a set of records as input, and produces a single record as output:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select min(dated) from Visited;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>1927-02-08</td></tr>
</table></pre>
</div>


<div>
<p><img src="img/sql-aggregation.svg" alt="SQL Aggregation" /></p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select max(dated) from Visited;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>1939-01-07</td></tr>
</table></pre>
</div>


<div>
<p><code>min</code> and <code>max</code> are just two of the aggregation functions built into SQL. Three others are <code>avg</code>, <code>count</code>, and <code>sum</code>:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select avg(reading) from Survey where quant=&#39;sal&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>7.20333333333</td></tr>
</table></pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select count(reading) from Survey where quant=&#39;sal&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>9</td></tr>
</table></pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select sum(reading) from Survey where quant=&#39;sal&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>64.83</td></tr>
</table></pre>
</div>


<div>
<p>We used <code>count(reading)</code> here, but we could just as easily have counted <code>quant</code> or any other field in the table, or even used <code>count(*)</code>, since the function doesn't care about the values themselves, just how many values there are.</p>
<p>SQL lets us do several aggregations at once. We can, for example, find the range of sensible salinity measurements:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select min(reading), max(reading) from Survey where quant=&#39;sal&#39; and reading&lt;=1.0;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>0.05</td><td>0.21</td></tr>
</table></pre>
</div>


<div>
<p>We can also combine aggregated results with raw results, although the output might surprise you:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select person, count(*) from Survey where quant=&#39;sal&#39; and reading&lt;=1.0;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>lake</td><td>7</td></tr>
</table></pre>
</div>


<div>
<p>Why does Lake's name appear rather than Roerich's or Dyer's? The answer is that when it has to aggregate a field, but isn't told how to, the database manager chooses an actual value from the input set. It might use the first one processed, the last one, or something else entirely.</p>
<p>Another important fact is that when there are no values to aggregate, aggregation's result is &quot;don't know&quot; rather than zero or some other arbitrary value:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select person, max(reading), sum(reading) from Survey where quant=&#39;missing&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>None</td><td>None</td><td>None</td></tr>
</table></pre>
</div>


<div>
<p>One final important feature of aggregation functions is that they are inconsistent with the rest of SQL in a very useful way. If we add two values, and one of them is null, the result is null. By extension, if we use <code>sum</code> to add all the values in a set, and any of those values are null, the result should also be null. It's much more useful, though, for aggregation functions to ignore null values and only combine those that are non-null. This behavior lets us write our queries as:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select min(dated) from Visited;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>1927-02-08</td></tr>
</table></pre>
</div>


<div>
<p>instead of always having to filter explicitly:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select min(dated) from Visited where dated is not null;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>1927-02-08</td></tr>
</table></pre>
</div>


<div>
<p>Aggregating all records at once doesn't always make sense. For example, suppose Gina suspects that there is a systematic bias in her data, and that some scientists' radiation readings are higher than others. We know that this doesn't work:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select person, count(reading), round(avg(reading), 2)
from  Survey
where quant=&#39;rad&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>roe</td><td>8</td><td>6.56</td></tr>
</table></pre>
</div>


<div>
<p>because the database manager selects a single arbitrary scientist's name rather than aggregating separately for each scientist. Since there are only five scientists, she could write five queries of the form:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select person, count(reading), round(avg(reading), 2)
from  Survey
where quant=&#39;rad&#39;
and   person=&#39;dyer&#39;;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>dyer</td><td>2</td><td>8.81</td></tr>
</table></pre>
</div>


<div>
<p>but this would be tedious, and if she ever had a data set with fifty or five hundred scientists, the chances of her getting all of those queries right is small.</p>
<p>What we need to do is tell the database manager to aggregate the hours for each scientist separately using a <code>group by</code> clause:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select   person, count(reading), round(avg(reading), 2)
from     Survey
where    quant=&#39;rad&#39;
group by person;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>dyer</td><td>2</td><td>8.81</td></tr>
<tr><td>lake</td><td>2</td><td>1.82</td></tr>
<tr><td>pb</td><td>3</td><td>6.66</td></tr>
<tr><td>roe</td><td>1</td><td>11.25</td></tr>
</table></pre>
</div>


<div>
<p><code>group by</code> does exactly what its name implies: groups all the records with the same value for the specified field together so that aggregation can process each batch separately. Since all the records in each batch have the same value for <code>person</code>, it no longer matters that the database manager is picking an arbitrary one to display alongside the aggregated <code>reading</code> values.</p>
</div>


<div>
<p>Just as we can sort by multiple criteria at once, we can also group by multiple criteria. To get the average reading by scientist and quantity measured, for example, we just add another field to the <code>group by</code> clause:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select   person, quant, count(reading), round(avg(reading), 2)
from     Survey
group by person, quant;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>None</td><td>sal</td><td>1</td><td>0.06</td></tr>
<tr><td>None</td><td>temp</td><td>1</td><td>-26.0</td></tr>
<tr><td>dyer</td><td>rad</td><td>2</td><td>8.81</td></tr>
<tr><td>dyer</td><td>sal</td><td>2</td><td>0.11</td></tr>
<tr><td>lake</td><td>rad</td><td>2</td><td>1.82</td></tr>
<tr><td>lake</td><td>sal</td><td>4</td><td>0.11</td></tr>
<tr><td>lake</td><td>temp</td><td>1</td><td>-16.0</td></tr>
<tr><td>pb</td><td>rad</td><td>3</td><td>6.66</td></tr>
<tr><td>pb</td><td>temp</td><td>2</td><td>-20.0</td></tr>
<tr><td>roe</td><td>rad</td><td>1</td><td>11.25</td></tr>
<tr><td>roe</td><td>sal</td><td>2</td><td>32.05</td></tr>
</table></pre>
</div>


<div>
<p>Note that we have added <code>person</code> to the list of fields displayed, since the results wouldn't make much sense otherwise.</p>
<p>Let's go one step further and remove all the entries where we don't know who took the measurement:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select   person, quant, count(reading), round(avg(reading), 2)
from     Survey
where    person is not null
group by person, quant
order by person, quant;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>dyer</td><td>rad</td><td>2</td><td>8.81</td></tr>
<tr><td>dyer</td><td>sal</td><td>2</td><td>0.11</td></tr>
<tr><td>lake</td><td>rad</td><td>2</td><td>1.82</td></tr>
<tr><td>lake</td><td>sal</td><td>4</td><td>0.11</td></tr>
<tr><td>lake</td><td>temp</td><td>1</td><td>-16.0</td></tr>
<tr><td>pb</td><td>rad</td><td>3</td><td>6.66</td></tr>
<tr><td>pb</td><td>temp</td><td>2</td><td>-20.0</td></tr>
<tr><td>roe</td><td>rad</td><td>1</td><td>11.25</td></tr>
<tr><td>roe</td><td>sal</td><td>2</td><td>32.05</td></tr>
</table></pre>
</div>


<div>
<p>Looking more closely, this query:</p>
<ol style="list-style-type: decimal">
<li><p>selected records from the <code>Survey</code> table where the <code>person</code> field was not null;</p></li>
<li><p>grouped those records into subsets so that the <code>person</code> and <code>quant</code> values in each subset were the same;</p></li>
<li><p>ordered those subsets first by <code>person</code>, and then within each sub-group by <code>quant</code>; and</p></li>
<li><p>counted the number of records in each subset, calculated the average <code>reading</code> in each, and chose a <code>person</code> and <code>quant</code> value from each (it doesn't matter which ones, since they're all equal).</p></li>
</ol>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>How many temperature readings did Frank Pabodie record, and what was their average value?</p></li>
<li><p>The average of a set of values is the sum of the values divided by the number of values. Does this mean that the <code>avg</code> function returns 2.0 or 3.0 when given the values 1.0, <code>null</code>, and 5.0?</p></li>
<li><p>We want to calculate the difference between each individual radiation reading and the average of all the radiation readings. We write the query:</p>
<pre><code>select reading - avg(reading) from Survey where quant=&#39;rad&#39;;</code></pre>
<p>What does this actually produce, and why?</p></li>
<li><p>The function <code>group_concat(field, separator)</code> concatenates all the values in a field using the specified separator character (or ',' if the separator isn't specified). Use this to produce a one-line list of scientists' names, such as:</p>
<pre><code>William Dyer, Frank Pabodie, Anderson Lake, Valentina Roerich, Frank Danforth</code></pre>
<p>Can you find a way to order the list by surname?</p></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>An aggregation function combines many values to produce a single new value.</li>
<li>Aggregation functions ignore <code>null</code> values.</li>
<li>Aggregation happens after filtering.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Combining Data


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Explain the operation of a query that joins two tables.</li>
<li>Explain how to restrict the output of a query containing a join to only include meaningful combinations of values.</li>
<li>Write queries that join tables on equal keys.</li>
<li>Explain what primary and foreign keys are, and why they are useful.</li>
<li>Explain what atomic values are, and why database fields should only contain atomic values.</li>
</ul>
</div>


<div>
<p>In order to submit her data to a web site that aggregates historical meteorological data, Gina needs to format it as latitude, longitude, date, quantity, and reading. However, her latitudes and longitudes are in the <code>Site</code> table, while the dates of measurements are in the <code>Visited</code> table and the readings themselves are in the <code>Survey</code> table. She needs to combine these tables somehow.</p>
<p>The SQL command to do this is <code>join</code>. To see how it works, let's start by joining the <code>Site</code> and <code>Visited</code> tables:</p>
</div>


<div class="in">
<pre>%load_ext sqlitemagic</pre>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Site join Visited;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>734</td><td>DR-3</td><td>1939-01-07</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>735</td><td>DR-3</td><td>1930-01-12</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>751</td><td>DR-3</td><td>1930-02-26</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>752</td><td>DR-3</td><td>None</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>837</td><td>MSK-4</td><td>1932-01-14</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>734</td><td>DR-3</td><td>1939-01-07</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>735</td><td>DR-3</td><td>1930-01-12</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>751</td><td>DR-3</td><td>1930-02-26</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>752</td><td>DR-3</td><td>None</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>837</td><td>MSK-4</td><td>1932-01-14</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>734</td><td>DR-3</td><td>1939-01-07</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>735</td><td>DR-3</td><td>1930-01-12</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>751</td><td>DR-3</td><td>1930-02-26</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>752</td><td>DR-3</td><td>None</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>837</td><td>MSK-4</td><td>1932-01-14</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
</table></pre>
</div>


<div>
<p><code>join</code> creates the <a href="../../gloss.html#cross-product">cross product</a> of two tables, i.e., it joins each record of one with each record of the other to give all possible combinations. Since there are three records in <code>Site</code> and eight in <code>Visited</code>, the join's output has 24 records. And since each table has three fields, the output has six fields.</p>
<p>What the join <em>hasn't</em> done is figure out if the records being joined have anything to do with each other. It has no way of knowing whether they do or not until we tell it how. To do that, we add a clause specifying that we're only interested in combinations that have the same site name:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select * from Site join Visited on Site.name=Visited.site;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>619</td><td>DR-1</td><td>1927-02-08</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>622</td><td>DR-1</td><td>1927-02-10</td></tr>
<tr><td>DR-1</td><td>-49.85</td><td>-128.57</td><td>844</td><td>DR-1</td><td>1932-03-22</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>734</td><td>DR-3</td><td>1939-01-07</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>735</td><td>DR-3</td><td>1930-01-12</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>751</td><td>DR-3</td><td>1930-02-26</td></tr>
<tr><td>DR-3</td><td>-47.15</td><td>-126.72</td><td>752</td><td>DR-3</td><td>None</td></tr>
<tr><td>MSK-4</td><td>-48.87</td><td>-123.4</td><td>837</td><td>MSK-4</td><td>1932-01-14</td></tr>
</table></pre>
</div>


<div>
<p><code>on</code> does the same job as <code>where</code>: it only keeps records that pass some test. (The difference between the two is that <code>on</code> filters records as they're being created, while <code>where</code> waits until the join is done and then does the filtering.) Once we add this to our query, the database manager throws away records that combined information about two different sites, leaving us with just the ones we want.</p>
<p>Notice that we used <code>table.field</code> to specify field names in the output of the join. We do this because tables can have fields with the same name, and we need to be specific which ones we're talking about. For example, if we joined the <code>person</code> and <code>visited</code> tables, the result would inherit a field called <code>ident</code> from each of the original tables.</p>
<p>We can now use the same dotted notation to select the three columns we actually want out of our join:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select Site.lat, Site.long, Visited.dated
from   Site join Visited
on     Site.name=Visited.site;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>-49.85</td><td>-128.57</td><td>1927-02-08</td></tr>
<tr><td>-49.85</td><td>-128.57</td><td>1927-02-10</td></tr>
<tr><td>-49.85</td><td>-128.57</td><td>1932-03-22</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>None</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-01-12</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-02-26</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1939-01-07</td></tr>
<tr><td>-48.87</td><td>-123.4</td><td>1932-01-14</td></tr>
</table></pre>
</div>


<div>
<p>If joining two tables is good, joining many tables must be better. In fact, we can join any number of tables simply by adding more <code>join</code> clauses to our query, and more <code>on</code> tests to filter out combinations of records that don't make sense:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select Site.lat, Site.long, Visited.dated, Survey.quant, Survey.reading
from   Site join Visited join Survey
on     Site.name=Visited.site
and    Visited.ident=Survey.taken
and    Visited.dated is not null;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>-49.85</td><td>-128.57</td><td>1927-02-08</td><td>rad</td><td>9.82</td></tr>
<tr><td>-49.85</td><td>-128.57</td><td>1927-02-08</td><td>sal</td><td>0.13</td></tr>
<tr><td>-49.85</td><td>-128.57</td><td>1927-02-10</td><td>rad</td><td>7.8</td></tr>
<tr><td>-49.85</td><td>-128.57</td><td>1927-02-10</td><td>sal</td><td>0.09</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1939-01-07</td><td>rad</td><td>8.41</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1939-01-07</td><td>sal</td><td>0.05</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1939-01-07</td><td>temp</td><td>-21.5</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-01-12</td><td>rad</td><td>7.22</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-01-12</td><td>sal</td><td>0.06</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-01-12</td><td>temp</td><td>-26.0</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-02-26</td><td>rad</td><td>4.35</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-02-26</td><td>sal</td><td>0.1</td></tr>
<tr><td>-47.15</td><td>-126.72</td><td>1930-02-26</td><td>temp</td><td>-18.5</td></tr>
<tr><td>-48.87</td><td>-123.4</td><td>1932-01-14</td><td>rad</td><td>1.46</td></tr>
<tr><td>-48.87</td><td>-123.4</td><td>1932-01-14</td><td>sal</td><td>0.21</td></tr>
<tr><td>-48.87</td><td>-123.4</td><td>1932-01-14</td><td>sal</td><td>22.5</td></tr>
<tr><td>-49.85</td><td>-128.57</td><td>1932-03-22</td><td>rad</td><td>11.25</td></tr>
</table></pre>
</div>


<div>
<p>We can tell which records from <code>Site</code>, <code>Visited</code>, and <code>Survey</code> correspond with each other because those tables contain <a href="../../gloss.html#primary-key">primary keys</a> and <a href="../../gloss.html#foreign-key">foreign keys</a>. A primary key is a value, or combination of values, that uniquely identifies each record in a table. A foreign key is a value (or combination of values) from one table that identifies a unique record in another table. Another way of saying this is that a foreign key is the primary key of one table that appears in some other table. In our database, <code>Person.ident</code> is the primary key in the <code>Person</code> table, while <code>Survey.person</code> is a foreign key relating the <code>Survey</code> table's entries to entries in <code>Person</code>.</p>
<p>Most database designers believe that every table should have a well-defined primary key. They also believe that this key should be separate from the data itself, so that if we ever need to change the data, we only need to make one change in one place. One easy way to do this is to create an arbitrary, unique ID for each record as we add it to the database. This is actually very common: those IDs have names like &quot;student numbers&quot; and &quot;patient numbers&quot;, and they almost always turn out to have originally been a unique record identifier in some database system or other. As the query below demonstrates, SQLite automatically numbers records as they're added to tables, and we can use those record numbers in queries:</p>
</div>


<div class="in">
<pre>%%sqlite survey.db
select rowid, * from Person;</pre>
</div>

<div class="out">
<pre><table>
<tr><td>1</td><td>dyer</td><td>William</td><td>Dyer</td></tr>
<tr><td>2</td><td>pb</td><td>Frank</td><td>Pabodie</td></tr>
<tr><td>3</td><td>lake</td><td>Anderson</td><td>Lake</td></tr>
<tr><td>4</td><td>roe</td><td>Valentina</td><td>Roerich</td></tr>
<tr><td>5</td><td>danforth</td><td>Frank</td><td>Danforth</td></tr>
</table></pre>
</div>

### Data Hygiene


<div>
<p>Now that we have seen how joins work, we can see why the relational model is so useful and how best to use it. The first rule is that every value should be <a href="../../gloss.html#atomic-value">atomic</a>, i.e., not contain parts that we might want to work with separately. We store personal and family names in separate columns instead of putting the entire name in one column so that we don't have to use substring operations to get the name's components. More importantly, we store the two parts of the name separately because splitting on spaces is unreliable: just think of a name like &quot;Eloise St. Cyr&quot; or &quot;Jan Mikkel Steubart&quot;.</p>
<p>The second rule is that every record should have a unique primary key. This can be a serial number that has no intrinsic meaning, one of the values in the record (like the <code>ident</code> field in the <code>Person</code> table), or even a combination of values: the triple <code>(taken, person, quant)</code> from the <code>Survey</code> table uniquely identifies every measurement.</p>
<p>The third rule is that there should be no redundant information. For example, we could get rid of the <code>Site</code> table and rewrite the <code>Visited</code> table like this:</p>
<table>
  <tr> <td>
619
</td> <td>
-49.85
</td> <td>
-128.57
</td> <td>
1927-02-08
</td> </tr>
  <tr> <td>
622
</td> <td>
-49.85
</td> <td>
-128.57
</td> <td>
1927-02-10
</td> </tr>
  <tr> <td>
734
</td> <td>
-47.15
</td> <td>
-126.72
</td> <td>
1939-01-07
</td> </tr>
  <tr> <td>
735
</td> <td>
-47.15
</td> <td>
-126.72
</td> <td>
1930-01-12
</td> </tr>
  <tr> <td>
751
</td> <td>
-47.15
</td> <td>
-126.72
</td> <td>
1930-02-26
</td> </tr>
  <tr> <td>
752
</td> <td>
-47.15
</td> <td>
-126.72
</td> <td>
null
</td> </tr>
  <tr> <td>
837
</td> <td>
-48.87
</td> <td>
-123.40
</td> <td>
1932-01-14
</td> </tr>
  <tr> <td>
844
</td> <td>
-49.85
</td> <td>
-128.57
</td> <td>
1932-03-22
</td> </tr>
</table>

<p>In fact, we could use a single table that recorded all the information about each reading in each row, just as a spreadsheet would. The problem is that it's very hard to keep data organized this way consistent: if we realize that the date of a particular visit to a particular site is wrong, we have to change multiple records in the database. What's worse, we may have to guess which records to change, since other sites may also have been visited on that date.</p>
<p>The fourth rule is that the units for every value should be stored explicitly. Our database doesn't do this, and that's a problem: Roerich's salinity measurements are several orders of magnitude larger than anyone else's, but we don't know if that means she was using parts per million instead of parts per thousand, or whether there actually was a saline anomaly at that site in 1932.</p>
<p>Stepping back, data and the tools used to store it have a symbiotic relationship: we use tables and joins because it's efficient, provided our data is organized a certain way, but organize our data that way because we have tools to manipulate it efficiently if it's in a certain form. As anthropologists say, the tool shapes the hand that shapes the tool.</p>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Write a query that lists all radiation readings from the DR-1 site.</p></li>
<li><p>Write a query that lists all sites visited by people named &quot;Frank&quot;.</p></li>
<li><p>Describe in your own words what the following query produces:</p>
<pre><code>select Site.name from Site join Visited
on Site.lat&lt;-49.0 and Site.name=Visited.site and Visited.dated&gt;=&#39;1932-00-00&#39;;</code></pre></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Every fact should be represented in a database exactly once.</li>
<li>A join produces all combinations of records from one table with records from another.</li>
<li>A primary key is a field (or set of fields) whose values uniquely identify the records in a table.</li>
<li>A foreign key is a field (or set of fields) in one table whose values are a primary key in another table.</li>
<li>We can eliminate meaningless combinations of records by matching primary keys and foreign keys between tables.</li>
<li>Keys should be atomic values to make joins simpler and more efficient.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Creating and Modifying Data


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Write queries that creates tables.</li>
<li>Write queries to insert, modify, and delete records.</li>
</ul>
</div>


<div>
<p>So far we have only looked at how to get information out of a database, both because that is more frequent than adding information, and because most other operations only make sense once queries are understood. If we want to create and modify data, we need to know two other pairs of commands.</p>
<p>The first pair are <code>create table</code> and <code>drop table</code>. While they are written as two words, they are actually single commands. The first one creates a new table; its arguments are the names and types of the table's columns. For example, the following statements create the four tables in our survey database:</p>
<pre><code>create table Person(ident text, personal text, family text);
create table Site(name text, lat real, long real);
create table Visited(ident integer, site text, dated text);
create table Survey(taken integer, person text, quant real, reading real);</code></pre>
<p>We can get rid of one of our tables using:</p>
<pre><code>drop table Survey;</code></pre>
<p>Be very careful when doing this: most databases have some support for undoing changes, but it's better not to have to rely on it.</p>
<p>Different database systems support different data types for table columns, but most provide the following:</p>
<table>
  <tr> <td>
integer
</td> <td>
a signed integer
</td> </tr>
  <tr> <td>
real
</td> <td>
a floating point number
</td> </tr>
  <tr> <td>
text
</td> <td>
a character string
</td> </tr>
  <tr> <td>
blob
</td> <td>
a &quot;binary large object&quot;, such as an image
</td> </tr>
</table>

<p>Most databases also support Booleans and date/time values; SQLite uses the integers 0 and 1 for the former, and represents the latter as discussed <a href="#a:dates">earlier</a>. An increasing number of databases also support geographic data types, such as latitude and longitude. Keeping track of what particular systems do or do not offer, and what names they give different data types, is an unending portability headache.</p>
<p>When we create a table, we can specify several kinds of constraints on its columns. For example, a better definition for the <code>Survey</code> table would be:</p>
<pre><code>create table Survey(
    taken   integer not null, -- where reading taken
    person  text,             -- may not know who took it
    quant   real not null,    -- the quantity measured
    reading real not null,    -- the actual reading
    primary key(taken, quant),
    foreign key(taken) references Visited(ident),
    foreign key(person) references Person(ident)
);</code></pre>
<p>Once again, exactly what constraints are avialable and what they're called depends on which database manager we are using.</p>
<p>Once tables have been created, we can add and remove records using our other pair of commands, <code>insert</code> and <code>delete</code>. The simplest form of <code>insert</code> statement lists values in order:</p>
<pre><code>insert into Site values(&#39;DR-1&#39;, -49.85, -128.57);
insert into Site values(&#39;DR-3&#39;, -47.15, -126.72);
insert into Site values(&#39;MSK-4&#39;, -48.87, -123.40);</code></pre>
<p>We can also insert values into one table directly from another:</p>
<pre><code>create table JustLatLong(lat text, long text);
insert into JustLatLong select lat, long from site;</code></pre>
<p>Deleting records can be a bit trickier, because we have to ensure that the database remains internally consistent. If all we care about is a single table, we can use the <code>delete</code> command with a <code>where</code> clause that matches the records we want to discard. For example, once we realize that Frank Danforth didn't take any measurements, we can remove him from the <code>Person</code> table like this:</p>
<pre><code>delete from Person where ident = &quot;danforth&quot;;</code></pre>
<p>But what if we removed Anderson Lake instead? Our <code>Survey</code> table would still contain seven records of measurements he'd taken, but that's never supposed to happen: <code>Survey.person</code> is a foreign key into the <code>Person</code> table, and all our queries assume there will be a row in the latter matching every value in the former.</p>
<p>This problem is called <a href="../../gloss.html#referential-integrity">referential integrity</a>: we need to ensure that all references between tables can always be resolved correctly. One way to do this is to delete all the records that use <code>'lake'</code> as a foreign key before deleting the record that uses it as a primary key. If our database manager supports it, we can automate this using <a href="../../gloss.html#cascading-delete">cascading delete</a>. However, this technique is outside the scope of this chapter.</p>
<blockquote>
<p>Many applications use a hybrid storage model instead of putting everything into a database: the actual data (such as astronomical images) is stored in files, while the database stores the files' names, their modification dates, the region of the sky they cover, their spectral characteristics, and so on. This is also how most music player software is built: the database inside the application keeps track of the MP3 files, but the files themselves live on disk.</p>
</blockquote>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Write an SQL statement to replace all uses of <code>null</code> in <code>Survey.person</code> with the string <code>'unknown'</code>.</p></li>
<li><p>One of our colleagues has sent us a <a href="../../gloss.html#csv">CSV</a> file containing temperature readings by Robert Olmstead, which is formatted like this:</p>
<pre><code>Taken,Temp
619,-21.5
622,-15.5</code></pre>
<p>Write a small Python program that reads this file in and prints out the SQL <code>insert</code> statements needed to add these records to the survey database. Note: you will need to add an entry for Olmstead to the <code>Person</code> table. If you are testing your program repeatedly, you may want to investigate SQL's <code>insert or replace</code> command.</p></li>
<li><p>SQLite has several administrative commands that aren't part of the SQL standard. One of them is <code>.dump</code>, which prints the SQL commands needed to re-create the database. Another is <code>.load</code>, which reads a file created by <code>.dump</code> and restores the database. A colleague of yours thinks that storing dump files (which are text) in version control is a good way to track and manage changes to the database. What are the pros and cons of this approach? (Hint: records aren't stored in any particular order.)</p></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>Database tables are created using queries that specify their names and the names and properties of their fields.</li>
<li>Records can be inserted, updated, or deleted using queries.</li>
<li>It is simpler and safer to modify data when every record has a unique primary key.</li>
</ul>
</div>

---
layout: lesson
root: ../..
---

## Programming with Databases


<div class="objectives">
<h4 id="objectives">Objectives</h4>
<ul>
<li>Write short programs that execute SQL queries.</li>
<li>Trace the execution of a program that contains an SQL query.</li>
<li>Explain why most database applications are written in a general-purpose language rather than in SQL.</li>
</ul>
</div>


<div>
<p>To close, let's have a look at how to access a database from a general-purpose programming language like Python. Other languages use almost exactly the same model: library and function names may differ, but the concepts are the same.</p>
<p>Here's a short Python program that selects latitudes and longitudes from an SQLite database stored in a file called <code>survey.db</code>:</p>
</div>


<div class="in">
<pre>import sqlite3
connection = sqlite3.connect(&#34;survey.db&#34;)
cursor = connection.cursor()
cursor.execute(&#34;select site.lat, site.long from site;&#34;)
results = cursor.fetchall()
for r in results:
    print r
cursor.close()
connection.close()</pre>
</div>

<div class="out">
<pre>(-49.85, -128.57)
(-47.15, -126.72)
(-48.87, -123.4)
</pre>
</div>


<div>
<p>The program starts by importing the <code>sqlite3</code> library. If we were connecting to MySQL, DB2, or some other database, we would import a different library, but all of them provide the same functions, so that the rest of our program does not have to change (at least, not much) if we switch from one database to another.</p>
<p>Line 2 establishes a connection to the database. Since we're using SQLite, all we need to specify is the name of the database file. Other systems may require us to provide a username and password as well. Line 3 then uses this connection to create a <a href="../../gloss.html#cursor">cursor</a>; just like the cursor in an editor, its role is to keep track of where we are in the database.</p>
<p>On line 4, we use that cursor to ask the database to execute a query for us. The query is written in SQL, and passed to <code>cursor.execute</code> as a string. It's our job to make sure that SQL is properly formatted; if it isn't, or if something goes wrong when it is being executed, the database will report an error.</p>
<p>The database returns the results of the query to us in response to the <code>cursor.fetchall</code> call on line 5. This result is a list with one entry for each record in the result set; if we loop over that list (line 6) and print those list entries (line 7), we can see that each one is a tuple with one element for each field we asked for.</p>
<p>Finally, lines 8 and 9 close our cursor and our connection, since the database can only keep a limited number of these open at one time. Since establishing a connection takes time, though, we shouldn't open a connection, do one operation, then close the connection, only to reopen it a few microseconds later to do another operation. Instead, it's normal to create one connection that stays open for the lifetime of the program.</p>
</div>


<div>
<p>Queries in real applications will often depend on values provided by users. For example, this function takes a user's ID as a parameter and returns their name:</p>
</div>


<div class="in">
<pre>def get_name(database_file, person_ident):
    query = &#34;select personal || &#39; &#39; || family from Person where ident=&#39;&#34; + person_ident + &#34;&#39;;&#34;

    connection = sqlite3.connect(database_file)
    cursor = connection.cursor()
    cursor.execute(query)
    results = cursor.fetchall()
    cursor.close()
    connection.close()

    return results[0][0]

print &#34;full name for dyer:&#34;, get_name(&#39;survey.db&#39;, &#39;dyer&#39;)</pre>
</div>

<div class="out">
<pre>full name for dyer: William Dyer
</pre>
</div>


<div>
<p>We use string concatenation on the first line of this function to construct a query containing the user ID we have been given. This seems simple enough, but what happens if someone gives us this string as input?</p>
<pre><code>dyer&#39;; drop table Survey; select &#39;</code></pre>
<p>It looks like there's garbage after the name of the project, but it is very carefully chosen garbage. If we insert this string into our query, the result is:</p>
<pre><code>select personal || &#39; &#39; || family from Person where ident=&#39;dyer&#39;; drop tale Survey; select &#39;&#39;;</code></pre>
<p>If we execute this, it will erase one of the tables in our database.</p>
<p>This is called an <a href="../../gloss.html#sql-injection-attack">SQL injection attack</a>, and it has been used to attack thousands of programs over the years. In particular, many web sites that take data from users insert values directly into queries without checking them carefully first.</p>
<p>Since a villain might try to smuggle commands into our queries in many different ways, the safest way to deal with this threat is to replace characters like quotes with their escaped equivalents, so that we can safely put whatever the user gives us inside a string. We can do this by using a <a href="../../gloss.html#prepared-statement">prepared statement</a> instead of formatting our statements as strings. Here's what our example program looks like if we do this:</p>
</div>


<div class="in">
<pre>def get_name(database_file, person_ident):
    query = &#34;select personal || &#39; &#39; || family from Person where ident=?;&#34;

    connection = sqlite3.connect(database_file)
    cursor = connection.cursor()
    cursor.execute(query, [person_ident])
    results = cursor.fetchall()
    cursor.close()
    connection.close()

    return results[0][0]

print &#34;full name for dyer:&#34;, get_name(&#39;survey.db&#39;, &#39;dyer&#39;)</pre>
</div>

<div class="out">
<pre>full name for dyer: William Dyer
</pre>
</div>


<div>
<p>The key changes are in the query string and the <code>execute</code> call. Instead of formatting the query ourselves, we put question marks in the query template where we want to insert values. When we call <code>execute</code>, we provide a list that contains as many values as there are question marks in the query. The library matches values to question marks in order, and translates any special characters in the values into their escaped equivalents so that they are safe to use.</p>
</div>


<div>
<h4 id="challenges">Challenges</h4>
<ol style="list-style-type: decimal">
<li><p>Write a Python program that creates a new database in a file called <code>original.db</code> containing a single table called <code>Pressure</code>, with a single field called <code>reading</code>, and inserts 100,000 random numbers between 10.0 and 25.0. How long does it take this program to run? How long does it take to run a program that simply writes those random numbers to a file?</p></li>
<li><p>Write a Python program that creates a new database called <code>backup.db</code> with the same structure as <code>original.db</code> and copies all the values greater than 20.0 from <code>original.db</code> to <code>backup.db</code>. Which is faster: filtering values in the query, or reading everything into memory and filtering in Python?</p></li>
</ol>
</div>


<div class="keypoints">
<h4 id="key-points">Key Points</h4>
<ul>
<li>We usually write database applications in a general-purpose language, and embed SQL queries in it.</li>
<li>To connect to a database, a program must use a library specific to that database manager.</li>
<li>A program may open one or more connections to a single database, and have one or more cursors active in each.</li>
<li>Programs can read query results in batches or all at once.</li>
</ul>
</div>

---
layout: lesson
root: ../..
title: Using Databases and SQL
---
Almost everyone has used spreadsheets,
and almost everyone has eventually run up against their limitations.
The more complicated a data set is,
the harder it is to filter data,
express relationships between different rows and columns,
or handle missing values.

Databases pick up where spreadsheets leave off.
While they are not as simple to use if all we want is the sum of a dozen numbers,
they can do a lot of things that spreadsheets can't,
on much larger data sets,
faster.
And even if we never need to create a database ourselves,
knowing how they work will help us understand why so many of the systems we use
behave the way we do,
and why they insist on structuring data in certain ways.

<div class="toc" markdown="1">

1.  [Selecting Data](01-select.html)
2.  [Sorting and Removing Duplicates](02-sort-dup.html)
3.  [Filtering](03-filter.html)
4.  [Calculating New Values](04-calc.html)
5.  [Missing Data](05-null.html)
6.  [Aggregation](06-agg.html)
7.  [Combining Data](07-join.html)
8.  [Creating and Modifying Data](08-create.html)
9.  [Programming with Databases](09-prog.html)

</div>

# Resources

*   `gen-survey-database.sql`: re-generate survey database used in examples.
*   `sqlitemagic.py`: IPython Notebook plugin to support SQLite interaction.

# Notes

* Run 'sqlite3 survey.db < gen-survey-database.sql' to re-create survey database before loading notebooks.

---
layout: lesson
root: ../..
title: General Advice
level: novice
---
This is a placeholder for general notes about teaching.
For up-to-date information about software installation and configuration problems,
and their solutions,
see [this wiki page](https://github.com/swcarpentry/bc/wiki/Configuration-Problems-and-Solutions).

#### Teaching Notes

*   For bootcamps that extend over more than two days
    (e.g., four afternoons spread over two weeks),
    it's a good idea to email the learners at the end of each day with a summary of what was taught
    (with links to the relevant online notes).
    This allows absent learners to catch up before the next session,
    and is also a great opporunity to present the lessons of the day
    in the context of the entire bootcamp.

*   Point learners at [http://software-carpentry.org/v5/](http://software-carpentry.org/v5/),
    which is the permanent home of the current learning materials,
    and at [http://software-carpentry.org/v4/](http://software-carpentry.org/v4/),
    which is where our previous materials live.
    The former corresponds to what they're being taught;
    the latter covers more ground in video as well as in slides and prose.
    They should also be direct to
    [Software Carpentry's FAQ](http://software-carpentry.org/faq.html).

*   Explain that the lesson materials can all be freely re-mixed and re-used
    under the [Creative Commons - Attribution](../../LICENSE.html) (CC-BY) license,
    provided people cite us as the original source
    (e.g., provide a link back to our site).
    However,
    Software Carpentry's name and logo are trademarked,
    and cannot be used without our permission.
    We normally grant this to any class that
    (a) covers our core topics and
    (b) has at least one badged instructor on the teaching roster,
    but are happy to discuss specifics.

*   Plan for the first 30-60 minutes of the bootcamp to be spent on installation and setup,
    because it's going to happen anyway.
    Running a pre-bootcamp "help desk" doesn't really affect this:
    the people who are most likely to have installation problems
    probably won't show up.
    (We fantasize occasionally about turning people away if they haven't installed software,
    or at least downloaded the installers,
    but in practice it's hard to do.)

*   Emphasise that good software development skills contribute to productive, reproducible, reusable research.

*   Have learners post a red sticky note
    on their laptop
    whenever they have a question or need help.
    Have them take down their sticky notes at the start of each practical exercise,
    and then post a green one when they're done
    (and a red one when they need help).

*   At lunch and again at the end of the day,
    ask learners to write one good point (i.e., something they learned or enjoyed)
    on their green sticky note
    and one bad point (i.e., something that didn't work, that they didn't understand, or that they already knew)
    on their red one.
    It only takes a couple of minutes to sort through these,
    and it's a quick way to find out how things are actually going.

*   At the very end of the bootcamp,
    ask learners to alternately give one good point or one bad one
    about the entire bootcamp. 
    Write these down on the whiteboard as they come in,
    and do not allow repeats
    (i.e., every point has to be new).
    The first few negative points will usually be pretty innocuous;
    after those have been exhausted,
    you will start to get the real feedback.

*   As a variation on the red/green sticky notes,
    make little name tents out of red and green paper,
    held together with name tag labels.
    The learners write their names on the name tags,
    and prop the tents either green side up or red side up
    depending on the feedback they want to give about the lesson being too fast or too slow.

*   Back up the material with your own anecdotes, experiences and evidence&mdash;it
    makes you more credible,
    helps learners understand how to apply what you're teaching to their own problems,
    and prevents the lectures from becoming too dry.

*   Keep a running list of the commands encountered so far in the lesson
    in the Etherpad
    or on a whiteboard adjacent to the projection screen.
    Encourage learners (particularly ones who already know the material and might otherwise get bored)
    to take notes in the Etherpad as well.
    This reduces the effort per learner,
    gives you a chance to see what they think you're saying,
    and provides a record after the bootcamp of what was actually taught.

*   When the co-instructor isn't teaching,
    she can answer questions on the Etherpad
    and update it with the key points made by the instructor
    (along with commands
    and any related points the instructor may not have mentioned).
    It's less disruptive to the "live" instructor than interjecting with these points,
    but allows the attendees to get the shared expertise from both instructors.

*   For bootcamps that extend over more than two days (e.g. four afternoons spread over two weeks),
    it's a good idea to email the learners at the end of each day with a summary of what was taught
    (with links to the relevant online notes).
    Not only does this allow absent learners to catch up before the next session,
    it's also a great opporunity to present the lessons of the day in the context of the entire bootcamp.

*   The long-form notes are intended as a script for instructors
    and as self-study material for learners.
    Do *not* show these notebooks to learners:
    instead,
    start with a blank notebook when teaching and add code as you go.
    This helps prevent you from racing ahead of learners
    and makes it easier for you to improvise in response to their questions.

*   Point learners at the online versions of the long-form notes
    (either on your bootcamp's home page
    or at [http://software-carpentry.org/v5/](http://software-carpentry.org/v5/)
    *after* the lesson is done:
    if you do it before the lesson,
    they'll try to read the notes while you're trying to talk.

*   If you're really keen,
    keep the SVG's of the diagrams handy in the directory where you're doing your teaching
    so that you can include them in your notebooks by adding an `<img src="...">` element to a Markdown cell
    (or just display them in your browser).
    Most people don't ever actually do this though,
    either because they forget to
    or because they have a whiteboard or flipchart handy.

*   There are (at least) three ways to get data files to learners at the start of a lesson:
    1.  Create a zip file, add it to your bootcamp's repository, and put a link to it in your bootcamp's `index.html` page
        so that they can click, download, and unzip.
        This uses something everyone already understands,
        but does assume they know how to navigate from their download directory to their working (lesson) directory,
        which is often not the case.
    2.  Create a throwaway Git repository on GitHub and tell them to run one command to clone it at the start of class.
        This (usually) works even if they've never used Git,
        and as a bonus,
        lets you identify people who (are going to) have Git problems early.
    3.  Paste the data into an Etherpad for learners to copy.
        As a bonus,
        this lets you identify people who (are going to) have trouble using a text editor early.

*   If you are using multiple windows 
    (e.g., a command window and an editor window)
    make sure they are both large enough to be visible by all attendees.
    Remember to pause when switching from one window to the other
    so that learners don't become confused.
    If possible,
    use different background colors for different text windows
    to make it easier for learners to tell them apart
    (but keep in mind red-green and blue-yellow color blindness).

*   As you type at the command line,
    read out what you're typing.
    Remember that most learners can only go half as fast as you,
    because they have to watch you type
    then type it all in again themselves.

#### Pitfalls


Instructing at a bootcamp isn't trivial.
The most important thing is to remember that
no lesson plan survives contact with the audience.
Whether it's the network going down
or the sudden realization that many of your learners *don't* know how to use SSH,
you will frequently need to improvise.
And even when there aren't hiccups like those,
try your best to adjust your pace and examples based on
learners' questions, puzzled looks, and sighs of impatience.

**Allow enough time for setup.**

In almost all cases,
learners want to use their own laptops during bootcamps
so that they leave with a working environment set up.
Even if you ask attendees to prepare beforehand,
and give them detailed instructions,
some will not have time, 
or will have run into problems that they're not yet able to fix.
You should therefore schedule at least 20 minutes for
<em>checking the learners' machines</em>
at the beginning of the first day.
Some bootcamps start early on the first day to allow time to
troubleshoot setup problems.

**Don't ignore your learners.**

You're not there to reproduce one of our online videos in person:
you're there to interact with people so that they get a
better learning experience.
You shouldn't ever go more than two or three minutes without
asking a question (and listening to the answer),
and if it has been 15 minutes since any of your learners asked one,
odds are you've either lost them or are boring them.

**Don't bore your learners.**

Your audience will never care more about what you're teaching 
than you appear to,
so if they get the feeling you're not interested in it,
they won't be either.
This does <em>not</em> mean you have to shout,
crack three jokes a minute,
or harangue them about how this stuff is really, really important,
but you do owe it to your audience to show up mentally as well as physically.
  
**Don't be all talk, no action.**  

The more time folks spend with their hands on the keyboards 
doing exercises,
the more time they're actually paying attention.
The students have their computers in front of them:
if you talk for more than five minutes without asking them to 
use their computers, they'll do so anyway&mdash;on Facebook.
  
**Don't use magic.**  

Typing too fast, using shortcuts or commands 
learners haven't seen yet&mdash;basically,
any time you say, "Don't worry about this just now,"
or they say, "Wait, how did you do that?" or, 
"Can you please slow down, I can't keep up,"
you're no longer actually helping them.
  
**Don't ignore feedback.**

The feedback you get from learners on sticky notes or through
surveys is pointless if you don't pay attention to it 
(or worse, if you explain it away).
There's no point collecting feedback 
during and after each bootcamp 
if you don't change what and how you teach to reflect it.

**Tell learners "why".**  

Most of our learners are graduate students in science and engineering,
so they know what evidence looks like, 
and why working practices should be evidence-based.
That doesn't mean you have to have the whole of 
empirical software engineering at your fingertips,
but please do read
*[Facts and Fallacies of Software Engineering](http://www.amazon.com/Facts-Fallacies-Software-Engineering-Robert/dp/0321117425/)*
and sprinkle a few of the findings it quotes into your lessons.
  
**Don't show them the forest but not the trees.**  

The things we teach reinforce each other,
so tie them together at every opportunity.
Point out that connecting things with pipes in the shell is like chaining functions together,
or that they can use a shell script to re-run a bunch of different tests before committing to version control,
and so on.
If possible, take 15 minutes or so each day to show them how you use these tools in your day-to-day work.

**Don't underestimate setup requirements.**  

Do you have enough power outlets?
(Are you sure?)
Do you have enough bandwidth to handle fifty people hitting your version control repository at the same time?
(How do you know?)
Can everyone actually log in?
Are the washrooms unlocked?
Does campus security know you're using the room over the weekend?

**Don't let your learners ignore each other.**

Software Carpentry bootcamps are a great networking opportunity
for our learners (and for us, too).
Get to know your learners by name,
have them work in pairs, and get them to mix up the pairs
at least a couple of times.
Encourage them to chat to one another at coffee breaks and lunch,
and to get a pizza or some curry together for dinner on the first day.

**Relax.**

Something always fails to install for someone
(or they fail to install anything at all),
or a bunch of learners are accidentally locked out of the building after lunch,
or whoever was supposed to drop off power bars didn't.
Roll with it,
and remember to laugh
(even if it's a bit hysterically).

---
layout: lesson
root: ../..
title: The Unix Shell
---
Many people have questioned whether we should still teach the shell.
After all,
anyone who wants to rename several thousand data files
can easily do so interactively in the Python interpreter,
and anyone who's doing serious data analysis
is probably going to do most of their work inside the IPython Notebook or R Studio.
So why teach the shell?

The first answer is,
"Because so much else depends on it."
Installing software,
configuring your default editor,
and controlling remote machines frequently assume a basic familiarity with the shell,
and with related ideas like standard input and output.
Many tools also use its terminology
(for example, the `%ls` and `%cd` magic commands in IPython).

The second answer is,
"Because it's an easy way to introduce some fundamental ideas about how to use computers."
As we teach people how to use the Unix shell,
we teach them that they should get the computer to repeat things
(via tab completion,
`!` followed by a command number,
and `for` loops)
rather than repeating things themselves.
We also teach them to take things they've discovered they do frequently
and save them for later re-use
(via shell scripts),
to give things sensible names,
and to write a little bit of documentation
(like comment at the top of shell scripts)
to make their future selves' lives better.

Finally,
and perhaps most importantly,
teaching people the shell lets us teach them
to think about programming in terms of function composition.
In the case of the shell,
this takes the form of pipelines rather than nested function calls,
but the core idea of "small pieces, loosely joined" is the same.

All of this material can be covered in three hours
as long as learners using Windows do not run into roadblocks such as:

*   not being able to figure out where their home directory is
    (particularly if they're using Cygwin);
*   not being able to run a plain text editor;
    and
*   the shell refusing to run scripts that include DOS line endings.

#### Teaching Notes

*   Have learners open a shell
    and then do `whoami`,
    `pwd`,
    and `ls`.
    Then have them create a directory called `bootcamp`
    and `cd` into it,
    so that everything else they do during the lesson
    is unlikely to harm whatever files they already have.

*   Get them to run an editor
    and save a file in their `bootcamp` directory
    as early as possible.
    Doing this is usually the biggest stumbling block during the entire lesson:
    many will try to run the same editor as the instructor
    (which may leave them trapped in the awful nether hell that is Vim),
    or will not know how to navigate to the right directory
    to save their file,
    or will run a word processor rather than a plain text editor.
    The quickest way past these problems is to have more knowledgeable learners
    help those who need it.

*   Tab completion sounds like a small thing: it isn't.
    Re-running old commands using `!123` or `!wc`
    isn't a small thing either,
    and neither are wildcard expansion and `for` loops.
    Each one is an opportunity to repeat one of the big ideas of Software Carpentry:
    if the computer *can* repeat it,
    some programmer somewhere will almost certainly have built 
    some way for the computer *to* repeat it.

*   Building up a pipeline with four or five stages,
    then putting it in a shell script for re-use
    and calling that script inside a `for` loop,
    is a great opportunity to show how
    "seven plus or minus two"
    connects to programming.
    Once we have figured out how to do something moderately complicated,
    we make it re-usable and give it a name
    so that it only takes up one slot in working memory
    rather than several.
    It is also a good opportunity to talk about exploratory programming:
    rather than designing a program up front,
    we can do a few useful things
    and then retroactively decide which are worth encapsulating
    for future re-use.

*   We have to leave out many important things because of time constraints,
    including file permissions, job control, and SSH.
    If learners already understand the basic material,
    this can be covered instead using the online lessons as guidelines.
    These limitations also have follow-on consequences:

*   It's hard to discuss `#!` (shebang) wihtout first discussing permissions,
    which we don't do.

*   Installing Bash and a reasonable set of Unix commands on Windows
    always involves some fiddling and frustration.
    Please see the latest set of installation guidelines for advice,
    and try it out yourself *before* teaching a class.

*   On Windows, it appears that:

    ~~~
    $ cd
    $ cd Desktop
    ~~~
    {:class="in"}

    will always put someone on their desktop.
    Have them create the example directory for the shell exercises there
    so that they can find it easily
    and watch it evolve.

#### Windows

Installing Bash and a reasonable set of Unix commands on Windows
always involves some fiddling and frustration.
Please see the latest set of installation guidelines for advice,
and try it out yourself *before* teaching a class.
Options we have explored include:

1.  [msysGit](http://msysgit.github.io/) (also called "Git Bash"),
2.  [Cygwin](http://www.cygwin.com/),
3.  using a desktop virtual machine, and
4.  having learners connect to a remote Unix machine (typically a VM in the cloud).

Cygwin was the preferred option until mid-2013,
but once we started teaching Git,
msysGit proved to work better.
Desktop virtual machines and cloud-based VMs work well for technically sophisticated learners,
and can reduce installation and configuration at the start of the bootcamp,
but:

1.  they don't work well on underpowered machines,
2.  they're confusing for novices (because simple things like copy and paste work differently),
3.  learners leave the workshop without a working environment on their operating system of choice, and
4.  learners may show up without having downloaded the VM or the wireless will go down (or become congested) during the lesson.

Whatever you use,
please *test it yourself* on a Windows machine *before* your bootcamp:
things may always have changed behind your back since your last bootcamp.
And please also make use of our Windows setup helper.

---
layout: lesson
root: ../..
title: Version Control with Git
---
Version control might be the most important topic we teach,
but Git is definitely the most complicated tool.
However,
GitHub presently dominates the open software forge landscape,
so we have to help novices learn just enough Git
to feel they can and should learn more on their own.

This is why we don't teach branching:
while it is a power tool in the hands of a knowledgeable user,
it is an extra cognitive burden for someone who is new to the idea of version control.
This is also why we don't get into hashes and commit objects with novices,
but try instead to convince them that version control is:

1.  a better backup system;
2.  a better Dropbox; and
3.  a better way to collaborate than mailing files back and forth.

We close with material on licensing because:

1.  questions about who owns what, or can use what,
    arise naturally once we start talking about
    using public services like GitHub to store files;
    and
2.  the discussion gives learners a chance to catch their breath
    after what is often a frustrating couple of hours.

#### Teaching Notes

*   Make sure the network is working *before* starting this lesson.

*   Give learners a five-minute overview of what version control does for them
    before diving into the watch-and-do practicals.
    Most of them will have tried to co-author papers by emailing files back and forth,
    or will have biked into the office
    only to realize that the USB key with last night's work
    is still on the kitchen table.
    Instructors can also make jokes about directories with names like
    "final version",
    "final version revised",
    "final version with reviewer three's corrections",
    "really final version",
    and,
    "come on this really has to be the last version"
    to motivate version control as a better way to collaborate
    and as a better way to back work up.

*   Version control is typically taught after the shell,
    so collect learners' names during that session
    and create a repository for them to share
    with their names as both their IDs and their passwords.

*   If your learners are advanced enough to be comfortable SSH,
    tell them they can use keys to authenticate on GitHub instead of passwords,
    but don't try to set this up during class:
    it takes too long,
    and is a distraction from the core ideas of the lesson.

*   Be very clear what files learners are to edit
    and what user IDs they are to use
    when giving instructions:
    it is common for them to edit the file the instructor is working on
    rather than their own,
    or to use the instructor's user ID and password when committing.

*   Be equally clear *when* they are to edit things:
    it's also common for someone to edit the file the instructor is editing
    and commit changes while the instructor is explaining what's going on,
    so that a conflict occurs when the instructor comes to commit the file.

*   If some learners are using Windows,
    there will inevitably be issues merging files with different line endings.
    (Even if everyone's on some flavor of Unix,
    different editors may or may not add a newline to the last line of a file.)
    Take a moment to explain these issues,
    since learners will almost certainly trip over them again.

*   We don't use a Git GUI in these notes because
    we haven't found one that installs easily and runs reliably on the three major operating systems,
    and because we want learners to understand what commands are being run.
    That said,
    instructors should demo a GUI on their desktop at some point during this lesson
    and point learners at [this page](http://git-scm.com/downloads/guis).

*   Instructors should also show learners graphical diff/merge tools like
    [DiffMerge](https://sourcegear.com/diffmerge/).

*   When appropriate,
    explain that we teach Git rather than CVS, Subversion, or Mercurial
    primarily because of GitHub's growing popularity:
    CVS and Subversion are now seen as legacy systems,
    and Mercurial isn't nearly as widely used in the sciences right now.

#### Text Editor

We suggest instructors and students use `nano` as the text editor for this lessons because:

*   it runs in all three major operating systems,
*   it runs inside the shell (switching windows can be confusing to students), and
*   it has shortcut help at the bottom of the window.

Please point out to students during setup
that they can and should use another text editor
if they're already familiar with it.
Below you will find some tips that could help solving problems
when using other editors.

##### Gedit

You should use

~~~
$ git config --global core.editor 'gedit --standalone'
~~~
{:class="in"}

to avoid this error occurring
if the student already has a Gedit window open:

~~~
$ git commit
~~~
{:class="in"}
~~~
Aborting commit due to empty commit message.
~~~
{:class="err"}

---
layout: lesson
root: ../..
title: Programming with Python
---
This lesson is written as an introduction to Python,
but its real purpose is to introduce the single most important idea in programming:
how to solve problems by building functions,
each of which can fit in a programmer's working memory.
In order to teach that,
we must teach people a little about
the mechanics of manipulating data with lists and file I/O
so that their functions can do things they actually care about.
Our teaching order tries to show practical uses of every idea as soon as it is introduced;
instructors should resist the temptation to explain
the "other 90%" of the language
as well.

The secondary goal of this lesson is to give them a usable mental model of how programs run
(what computer science educators call a [notional machine](../../gloss.html#notional-machine)
so that they can debug things when they go wrong.
In particular,
they must understand how function call stacks work.

The final example asks them to build a command-line tool
that works with the Unix pipe-and-filter model.
We do this because it is a useful skill
and because it helps learners see that the software they use isn't magical.
Tools like `grep` might be more sophisticated than
the programs our learners can write at this point in their careers,
but it's crucial they realize this is a difference of scale rather than kind.

#### Teaching Notes

*   Explain that we use Python because:
    *   It's free.
    *   It has a lot of scientific libraries, and more are constantly being added.
    *   It has a large scientific user community.
    *   It's easier for novices to learn than most of the mature alternatives.
        (Software Carpentry originally used Perl;
        when we switched,
        we found that we could cover as much material in two days in Python
        as we'd covered in three days in Perl,
        and that retention was higher.)

*   We do *not* include instructions on running the IPython Notebook in the tutorial
    because we want to focus on the language rather than the tools.
    Instructors should, however, walk learners through some basic operations:
    *   Launch from the command line with `ipython notebook`.
    *   Create a new notebook.
    *   Enter code or data in a cell and execute it.
    *   Explain the difference between `In[#]` and `Out[#]`.

*   Watching the instructor grow programs step by step
    is as helpful to learners as anything to do with Python.
    Resist the urge to update a single cell repeatedly
    (which is what you'd probably do in real life).
    Instead,
    clone the previous cell and write the update in the new copy
    so that learners have a complete record of how the program grew.
    Once you've done this,
    you can say,
    "Now why don't we just breaks things into small functions right from the start?"

*   The discussion of command-line scripts
    assumes that students understand standard I/O and building filters,
    which are covered in the lesson on the shell.

*   Do *not* start the notebook with:

    ~~~
    ipython notebook --pylab [backend]
    ~~~

    The `--pylab` option has been deprecated for a long time,
    and is being removed soon.

---
layout: lesson
root: ../..
title: Using Databases and SQL
---
Relational databases are not as widely used in science as in business,
but they are still a common way to store large data sets with complex structure.
Even when the data itself isn't in a database,
the metadata could be:
for example,
meteorological data might be stored in files on disk,
but data about when and where observations were made,
data ranges,
and so on could be in a database
to make it easier for scientists to find what they want to.

#### Teaching Notes

*   The first few sections (up to "Missing Data") usually go very quickly.
    The pace usually slows down a bit when null values are discussed
    mostly because learners have a lot of details to keep straight by this point.
    Things *really* slow down during the discussion of joins,
    but this is the key idea in the whole lesson:
    important ideas like primary keys and referential integrity
    only make sense once learners have seen how they're used in joins.
    It's worth going over things a couple of times if necessary (with lots of examples).

*   The sections on creating and modifying data,
    and programming with databases,
    can be dropped if time is short.
    Of the two,
    people seem to care most about how to add data (which only takes a few minutes to demonstrate).


*   Overall,
    this material takes three hours to present assuming that a short exercise is done with each topic.

*   Simple calculations are actually easier to do in a spreadsheet;
    the advantages of using a database become clear as soon as filtering and joins are needed.
    Instructors may therefore want to show a spreadsheet with the information from the four database tables
    consolidated into a single sheet,
    and demonstrate what's needed in both systems to answer questions like,
    "What was the average radiation reading in 1931?"

*   Some learners may have heard that NoSQL databases
    (i.e., ones that don't use the relational model)
    are the next big thing,
    and ask why we're not teaching those.
    The answers are:
    1.  Relational databases are far more widely used than NoSQL databases.
    2.  We have far more experience with relational databases than with any other kind,
        so we have a better idea of what to teach and how to teach it.
    3.  NoSQL databases are as different from each other as they are from relational databases.
        Until a leader emerges, it isn't clear *which* NoSQL database we should teach.

*   Run `sqlite3 survey.db < gen-survey-database.sql`
    to re-create survey database before loading notebooks.

---
layout: lesson
root: ../..
title: Instructor's Guide
---
As a species,
we know a lot about how brains learn,
how effective various teaching practices are,
and how society's needs and expectations shape how and how well we learn.
As individuals,
though,
most people who teach at college and university either don't know this knowledge exists,
or haven't incorporated it into their teaching.
It's as if only doctors knew about the connection between smoking and cancer.

The best guide to evidence-based learning we have found is
*How Learning Works: Seven Research-Based Principles for Smart Teaching*
(see the bibliography for the full citation).
Its advice is based in equal parts on theory, research, and experience.
While some of the recommendations may seem banal,
the full-length explanations in the book itself are anything but.

We try to incorporate these ideas into our teaching,
and into our [instructor training course](http://teaching.software-carpentry.org).
If you are interested in taking part,
please get in touch.

<div class="toc" markdown="1">

1.  [General Advice](01-general.html)
2.  [The Unix Shell](02-shell.html)
3.  [Version Control with Git](03-git.html)
4.  [Programming with Python](04-python.html)
5.  [Using Databases and SQL](05-sql.html)

</div>

Software Carpentry Bootcamps
============================

This repository's `gh-pages` branch is the starting point for a bootcamp website:
it contains a template for your bootcamp's home page
and the shared lesson materials we have developed.
The sections below explain:

*   how GitHub turns a repository into a web site,
*   how you can build a website for your bootcamp using this repo as a starting point,
*   what lessons we have,
*   where they're located, and
*   how to add new lessons.

To contribute corrections or additions to this repository, see the
[contribution guidelines](CONTRIBUTING.md).
You may also want to view these videos:

*   [Setting Up a Software Carpentry Bootcamp Repository](https://vimeo.com/87241285)
*   [Adding Lesson Material to the Software Carpentry Bootcamp Repository](https://vimeo.com/92273942)

**Note:**
If you are teaching Git in your bootcamp,
you should create *two* repositories:
one for your bootcamp's website,
and one for learners to clone and update during your lessons.
You should not try to use the same repo for both purposes because:

1.  your website repo is probably going to be fairly large, and
2.  you don't want a learner accidentally overwriting your lessons
    while you're trying to teach.

**Table of Contents**

*   [Background](#background)  
*   [Getting Started](#getting-started)  
*   [Previewing the Site](#previewing-the-site)  
*   [Variables](#variables)  
*   [Website Content](#website-content)  
*   [Lesson Material](#lesson-material)  
*   [Building Things](#building-things)  
*   [Site Map](#site-map)  
*   [FAQ](#faq)

Background
----------

There are a few things you need to know
in order to understand why we do things the way we do.
Most of them are specific to GitHub,
rather than Git itself.

1.  Git uses the term "clone" to mean
    "a copy of a repository".
    GitHub uses the term "fork" to mean,
    "a copy of a GitHub-hosted repo that is also hosted on GitHub",
    and the term "clone" to mean
    "a copy of a GitHub-hosted repo that's located on someone else's machine".
    In both cases,
    the duplicate has a remote called `origin`
    that points to the original repo;
    other remotes can be added manually.

2.  A user on GitHub can only have one fork of a particular repo.
    This is a problem for us because
    an instructor may be involved in several bootcamps,
    each of which has its own website repo.
    Those website repositories ought to be forks of this one,
    but since GitHub doesn't allow that,
    we've had to find a workaround.

3.  If a repository has a file called `README.md` in its root directory,
    GitHub displays that file on the repository's home page.

4.  If a repository has a branch called `gh-pages`
    (which stands for "GitHub pages"),
    then GitHub uses the HTML and Markdown files in that branch
    to create a website for the repository.
    If the repository's URL is `http://github.com/darwin/finches`,
    the URL for the website is `http://darwin.github.io/finches`.

5.  If an HTML or Markdown file has a header consisting of three dashes,
    some data about the page,
    and three more dashes:

    ~~~
    ---
    key: value
    other_key: other_value
    ---
    stuff in the page
    ~~~

    then GitHub doesn't just copy the file over verbatim.
    Instead,
    it runs the file through a translator called Jekyll
    that looks for specially-formatted commands embedded in the file.

6.  Commands can be embedded in the body of a page.
    One is `{% include somefile.html %}`,
    which tells Jekyll to copy the contents of `somefile.html` into the file being translated;
    this is used to create standard headers and footers for pages.
    Another is `{{variable}}`:
    when Jekyll see this,
    it replaces it with the value of `variable`.
    This is used to insert things like a contact email address and the URL for our Twitter account.

7.  Jekyll gets variables from two places:
    a file called `_config.yml` located in the repo's root directory,
    and the header of each individual page.
    Variables from `_config.yml` are put in an object called `site`,
    and referred to as `site.variable`,
    so `{{site.twitter_name}}` in a page is replaced by `@swcarpentry`.
    Variables from the page's header are put in an object called `page`,
    and referred to as `page.variable`,
    so if a page's header defines a variable called `venue`,
    `{{page.venue}}` is replaced by "Euphoric State University"
    (or whatever value the variable has).

8.  If a page uses `{% include something.html %}` to include a snippet of HTML,
    Jekyll looks in a directory called `_includes` to find `something.html`.
    It always looks there,
    and nowhere else,
    so anything we want people to be able to include in their pages
    has to be stored in `_includes`.

9.  A repository can have another special directory called `_layouts`.
    If a page like `index.html` has a variable called `layout`,
    and that variable's value is `standard.html`,
    Jekyll loads the file `_layouts/standard.html`
    and copies the content of `index.html` into it,
    then expands the result.
    This is used to give the pages in a site a uniform appearance.

We have created three standard layouts for bootcamp pages:

*   `bootcamp.html` is used for bootcamps' home pages,
    and is the layout for the `index.html` page in your repo's root directory.
    That `index.html` page's header must
    [define several variables](#variables)
    in order for your bootcamp to be included in our main website.

*   `lesson.html` is used to lay out pages for individual lessons.
    All of the lessons in this repository use it
    to ensure uniform look and feel.

*   `slides.html` is used to format slideshows.
    It is still under development.

Getting Started
---------------

To create a website for a new bootcamp:

1.  Create a [new repository on GitHub](https://github.com/new)
    with a name like YYYY-MM-DD-site, e.g., `2014-03-31-esu`.
    This repository must *not* be a fork of an existing repository
    because as mentioned earlier,
    GitHub only allows a user to fork a repository once,
    but many instructors are involved in several bootcamps.
    Please use the same ID for your bootcamp
    that the Software Carpentry admins are using to identify it
    (i.e.,
    if the admins called the bootcamp `2014-03-31-esu`,
    please *don't* call your repo `euphoric-march-2014`),
    and please use all lower-case
    (i.e., '2014-03-31-esu' instead of '2014-03-31-ESU').

2.  Clone this new repository to your local machine and `cd` into it.
    You can ignore the warning about cloning an empty repository:
    it won't stay empty long.

![Step 1](img/readme/step1.png)

3.  Add the repository `https://github.com/swcarpentry/bc.git` as a remote named `swc`:

    ~~~
    $ git remote add swc https://github.com/swcarpentry/bc.git
    ~~~

![Step 2](img/readme/step2.png)

4.  Create a new branch in the local clone named `gh-pages`.

    ~~~
    $ git checkout -b gh-pages
    ~~~

5.  Pull content from the template repository's `gh-pages` branch into your desktop repository:

    ~~~
    $ git pull swc gh-pages
    ~~~

    This may take a minute or two.

6.  Remove the `swc` remote so that you don't accidentally try
    to push your changes to the main `bc` repository:

    ~~~
    $ git remote rm swc
    ~~~

7.  Edit `index.html` to create the bootcamp home page.
    In particular,
    double-check
    [the variables in the page's header](#variables),
    as these are used to update the main website,
    and make sure the [website content](#website-content) is correct.
    You can use the script `./bin/swc_index_validator.py`
    to check `index.html` for problems
    by running the command `make check`.

8.  Edit `_includes/setup.html` to provide software installation instructions for bootcamp attendees.
    This is described in more detail in the section on [website content](#website-content).

9.  [Preview your changes](#previewing-the-site).

10. Replace the content of this `README.md` file with a line or two describing your bootcamp.

11. Push content to your YYYY-MM-DD-site repository:

    ~~~
    $ git push origin gh-pages
    ~~~

As soon as your repo has been pushed to GitHub, GitHub will render your pages
at the url:

~~~
http://{your-github-username}.github.io/YYYY-MM-DD-site/
~~~

You may update your bootcamp's website whenever you want.

Previewing the Site
-------------------

To preview your bootcamp's page(s),
go into its root directory and run:

~~~
$ make site
~~~

This will run `jekyll` to create the directory `./_site`.
The `index.html` page in this directory,
`./_site/index.html`,
should have the Software Carpentry look and feel
and the information about your bootcamp.

**Note:**
you will need to install Jekyll 1.0.3 or later in order to preview things locally.
If you have Ruby installed on your computer,
this *should* be as simple as:

~~~
$ gem install github-pages
~~~

or if that doesn't work:

~~~
$ gem install jekyll
$ gem install kramdown
~~~

(We use Kramdown for translating Markdown instead of the default
Redcarpet because Kramdown will handle Markdown inside HTML blocks).

On OS X, we suggest you use a recent Ruby to get access to these.
If you don't have Homebrew or MacPorts installed,
here's a quick recipe to get started using HomeBrew.

~~~
$ ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
$ brew install ruby
~~~

and then `gem install` as above.
If you don't have `make` in your machine,
you can build the preview with:

~~~
$ jekyll -t build -d _site
~~~

Variables
---------

Your bootcamp's `index.html` page
(which uses the `bootcamp.html` layout from the `_layouts` directory)
*must* define the following values in its YAML header:

*   `layout` must be `bootcamp`.
*   `root` is the path to the repository's root directory.
    This is '.' if the page is in the root directory
    (which `index.html` is).
    In other pages,
    `root` is '..' if the page is one directory down,
    '../..' if it is two levels down,
    and so on.
*   `venue` is the name of the institution or group hosting the bootcamp.
*   `address` is the bootcamp's street address.
*   `country` must be a hyphenated country name like 'United-States'.
    This is used to look up flags for display in the main web site;
    see the `assets/flags` directory in the `site` repo for a full list of valid names.
*   `latlng` is the latitude and longitude of the bootcamp site
    (so we can put a pin on our map).
*   `humandate` is the human-friendly dates for the bootcamp (e.g., Jul 3-4, 2015).
    Please use three- or four-letter month names and abbreviations
    (e.g., `Dec` instead of `December`).
*   `startdate` is the bootcamp's starting date in YYYY-MM-DD format.
*   `enddate` is the bootcamp's ending date in the same format.
    If your bootcamp is only one day long,
    the `enddate` field can be deleted.
*   `registration` is `open` (if anyone is allowed to sign up)
    or `restricted` (if only some people are allowed to take part).
    Please do *not* put HTML or links in here to explain
    who's allowed to enrol or how to go about doing it;
    that should go in the main body of your page.
*   `instructor` is a comma-separated list of instructor names.
    This must be enclosed in square brackets,
    as in `["Alan Turing","Grace Hopper"]`
*   `helper` is a comma-separated list of helper names.
    This must be enclosed in square brackets,
    as in `["John von Neumann"]`
*   `contact` is the contact email address to use for your bootcamp.

The header may optionally define the following:

*   `eventbrite` is the multi-digit Eventbrite registration key.
    If you are using Eventbrite,
    the admins will set this key for you.
    If you are using something else for registration,
    it may be deleted.

Website Content
---------------

The body of `index.html` contains
an explanation of what a bootcamp is and how it runs,
followed by setup instructions for our standard software.
There is an explanatory comment for each section of this page;
reorganize, rewrite, or delete the material as you think best.

`index.html` depends on five HTML files in the `_includes` directory:

*   `header.html`: material for the page's head.
*   `banner.html`: the generic banner with the Software Carpentry logo.
*   `footer.html`: the generic footer with links to Software Carpentry's web presence.
*   `javascript.html`: JQuery and Bootstrap Javascript.
*   `setup.html`: common setup instructions.

You normally won't need to worry about the first four ---
they're included in the right places by our standard layouts ---
but you will probably want to edit the fifth.
In particular,
if you are teaching a Python bootcamp,
you should delete the instructions for installing R,
and vice versa.

Lesson Material
---------------

1.  The current material for novices is in the directories under `novice`.
    The shell and Git materials are written in Markdown,
    while the Python and SQL use the IPython Notebook.
2.  New material for intermediate learners is currently under development
    in directories under `intermediate`.
3.  Our old lesson material
    is in the `lessons` directory.
    We plan to retire it in Spring 2014,

As explained [below](#building-things),
you can use `make` to compile this material in the way that GitHub does
when changes are committed to the `gh-pages` branch.

Building Things
---------------

GitHub automatically runs Jekyll
to regenerate the pretty HTML versions of our content
every time changes are pushed to the `gh-pages` branch of this repository.
We use `make` to imitate that process locally
so that people can preview changes before committing.
We also use `make` to automate a handful of other tasks,
such as converting IPython Notebooks from `.ipynb` format to Markdown (`.md`)
so that Jekyll can convert them to HTML.

Most of the commands to rebuild things are in `Makefile`;
run the command `make` on its own to get a list of targets,
and `make site` to re-run Jekyll to preview your site
(which Jekyll will put in the `_site` directory).
You can also run `make check` to run a Python script
that checks whether `index.html`'s variables are formatted correctly,
and `make clean` to clean up all generated files.

The commands used to turn IPython Notebooks into Markdown files
are stored in a separate Makefile called `ipynb.mk`.
This separation ensures that people can rebuild the site
even if they don't have IPython installed
(which R instructors might not);
it also guarantees that `make` won't try to regenerate Markdown after a Git pull
(which might change the timestamps on files,
but not actually change their contents).
If we add more languages and file formats in future,
we may also create separate Makefiles for them.

Site Map
--------

The most important files and directories are **highlighted**.

*   CITATION - how to cite Software Carpentry.
*   CONTRIBUTING.md - how to contribute new material.
*   LICENSE.md - our license.
*   **Makefile** - rebuild this site (type `make` on its own for a list of targets).
*   **README.md** - how to use this site.
*   _config.yml - Jekyll configuration directives.
*   _includes/ - snippets of HTML that can be included in other files by Jekyll.
*   _layouts/ - Jekyll page layouts.
*   **_site/** - output directory (created when building the site locally).
*   _templates/ - template files for conversion of IPython Notebooks to Markdown.
    Templates for other conversion systems (e.g., Pandoc) should go here too.
*   bib.md - bibliography.
*   bin/ - miscellaneous tools used in building the site.
*   book.md - generated when compiling the website locally.
*   contents.md - site map used in place of `index.html` on the main web site.
*   css/ - CSS files for this site.
*   data/ - miscellaneous data files used by examples.
*   etherpad.txt - starter text for the bootcamp's Etherpad.
*   gloss.md - glossary of terms.
*   img/ - images used throughout this site.
*   **index.html** - template for bootcamp home pages.
*   intermediate/ - intermediate lesson material (under development).
*   intro.md - introduction to book version of this site.
*   ipynb.mk - Makefile for turning IPython Notebooks into Markdown.
*   js/ - Javascript files used in this site.
*   lessons/ - old lesson material.
*   novice/ - novice lesson material.
*   rules.md - the rules of programming (used in the book version of this site).
*   setup.md - placeholder for bootcamp setup instructions.
*   setup/ - setup tools for installing bootcamp software.
*   slides/ - slideshows (under construction).
*   team.md - who we are.

FAQ
---

*   *Where can I get help?*
    <br/>
    Mail us at [admin@software-carpentry.org](mailto:admin@software-carpentry.org),
    come chat with us on [our IRC channel](irc://moznet/sciencelab),
    or join our [discussion list](http://software-carpentry.org/contrib/discuss.html)
    and ask for help there.

*   *Why does the bootcamp repository have to be created from scratch? Why not fork `bc` on GitHub?*
    <br/>
    Because any particular user can only have one fork of a repository,
    but instructors frequently need to work on several bootcamps at once.

*   *Why use Jekyll?  Why not some other markup language and some other converter?*
    <br/>
    Because it's the default on GitHub.
    If we're going to teach people to use that site,
    we should teach them to use it as it is,
    not as we wish it was.

*   *Why does `make site` take so long?*
    <br/>
    We know this problem happens with pandoc >= 1.2 and <= 1.12.3.3. If you are
    using one of this versions you can (a) update or (b) downgrade pandoc.

    On a MacBook Air with pandoc 1.11.1 and Jekyll 1.3.0,
    making the site from scratch takes approximately 24 seconds,
    half of which is spent converting IPython Notebooks.

*   *What do I do if I see a `invalid byte sequence in ...` error when I run `make check`?*
    <br/>
    Declare the `en_US.UTF-8` locale in your shell:

    ~~~
    $ export LC_ALL=en_US.UTF-8
    $ export LANG=en_US.UTF-8
    ~~~

*   *What do I do if I see a `Conversion error` when I run `make check`?*
    <br/>
    The error message may look something like this:

    ~~~
    Configuration file: d:/OpenCourses/swc/2013-10-17-round6.4/_config.yml
            Source: d:/OpenCourses/swc/2013-10-17-round6.4
       Destination: _site
      Generating... c:/Ruby193/lib/ruby/gems/1.9.1/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:162: wa
    rning: cannot close fd before spawn
    Conversion error: There was an error converting 'lessons/misc-biopython/fastq.md'.
    done.
    ~~~
        
    This is a [problem in Pygments.rb](http://stackoverflow.com/questions/17364028/jekyll-on-windows-pygments-not-working)
    Uninstall pygments.rb 0.5.1 or 0.5.2, install 0.5.0.  For example, here's how you would
    uninstall pygments 0.5.2 and restore version 0.5.0:

    ~~~    
    $ gem uninstall pygments.rb --version "=0.5.2"
    $ gem install pygments.rb --version "=0.5.0"
    ~~~

*   *What do I do if I see a `File not found: u'nbconvert'` when I run `make check`?*
    <br/>
    The output of `make check` looks like this:

    ~~~    
    WARNING: Unrecognized alias: 'output', it will probably have no effect.[TerminalIPythonApp] File not found: u'nbconvert'
    cp tmp/python/novice/01-numpy.html _site/python/novice/01-numpy.html
    cp: cannot stat ‘tmp/python/novice/01-numpy.html’: No such file or directory
    ~~~
    
    This means you don't have a recent enough version of IPython (below 1.0) and you should install a newer version.
    Installing a local version can be done with:
    
    ~~~
    $ pip install --upgrade --user ipython
    ~~~

    You might need `pip` that can be installed (under Ubuntu and alike) with:

    ~~~
    $ sudo apt-get install python-pip
    ~~~

*   *What if I get some missing packages messages when I run `make check`?*
    <br/>
    Some additional packages are required. They can be installed (under Ubuntu and alike) with:
    
    ~~~
    $ sudo apt-get install pandoc
    ~~~

*   *Where should pages go if multiple boot camps are running at a site simultaneously?*
    <br/>
    Use subdirectories like `2013-07-01-esu/beginners`,
    so that main directory names always follow our four-part convention.

---
layout: lesson
root: .
title: The Rules
---
*   A week of hard work can sometimes save you an hour of thought. <a name="week-hard-work-hour-thought"></a>

*   Fail early, fail often. <a name="fail-early-fail-often"></a>

*   Turn bugs into assertions or tests. <a name="turn-bugs-into-assertions-or-tests"></a>

*   Red, green, refactor. <a name="red-green-refactor"></a>

*   Always initialize from data. <a name="always-initialize-from-data"></a>

*   Test the simple things first. <a name="test-simple-first"></a>

*   Know what it's supposed to do. <a name="know-what-its-supposed-to-do"></a>

*   Make it fail every time. <a name="make-it-fail-every-time"></a>

*   Make it fail fast. <a name="make-it-fail-fast"></a>

*   Change one thing at a time, for a reason. <a name="change-one-thing-at-a-time"></a>

*   Keep track of what you've done. <a name="keep-track-of-what-youve-done"></a>

*   Be humble. <a name="be-humble"></a>

*   Throw low, catch high. <a name="throw-low-catch-high"></a>

---
layout: lesson
root: ../
title: Setup Scripts
---

Students
========

This directory contains scripts for testing your machine to make sure
you have the software you'll need for your bootcamp installed.  See
the comments at the head of each script for more details, but you'll
basically want to see something like:

    $ python swc-installation-test-1.py
    Passed
    $ python swc-installation-test-2.py
    check virtual-shell...  pass
    …
    Successes:

    virtual-shell Bourne Again Shell (bash) 4.2.37
    …

If you see something like:

    $ python swc-installation-test-2.py
    check virtual-shell...  fail
    …
    check for command line shell (virtual-shell) failed:
      command line shell (virtual-shell) requires at least one of the following dependencies
      For instructions on installing an up-to-date version, see
      http://software-carpentry.org/setup/
      causes:
      check for Bourne Again Shell (bash) failed:
        could not find 'bash' executable for Bourne Again Shell (bash)
        For instructions on installing an up-to-date version, see
        http://software-carpentry.org/setup/
    …

follow the suggestions to try and install any missing software.  For
additional troubleshooting information, you can use the `--verbose`
option:

    $ python swc-installation-test-2.py --verbose
    check virtual-shell...  fail
    …
    ==================
    System information
    ==================
    os.name            : posix
    …

Instructors
===========

`swc-installation-test-1.py` is pretty simple, and just checks that
the students have a recent enough version of Python installed that
they'll be able to parse `swc-installation-test-2.py`.  The latter
checks for a list of dependencies and prints error messages if a
package is not installed, or if the installed version is not current
enough.  By default, the script checks for pretty much anything that
has ever been used at a Software Carpentry bootcamp, which is
probably not what you want for your particular bootcamp.

Before your bootcamp, you should go through
`swc-installation-test-2.py` and comment any dependencies you don't
need out of the `CHECKS` list.  You might also want to skim through
the minimum version numbers listed where particular dependencies are
defined (e.g. `('git', 'Git', (1, 7, 0), None)`).  For the most part,
fairly conservative values have been selected, so students with modern
machines should be fine.  If your bootcamp has stricter version
requirements, feel free to bump them accordingly.

Similarly, the virtual dependencies can be satisfied by any of several
packages.  If you don't want to support a particular package (e.g. if
you have no Emacs experience and don't want to be responsible for
students who show up with Emacs as their only editor), you can comment
out that particular `or_dependency`.

Finally, don't forget to post your modified scripts somewhere where
your students can download them!

---
layout: lesson
root: .
title: Setup Instructions
---
These instructions are intended to help learners set up their computers.
Instructors should go through them *before* class starts.
For up-to-date information about software installation and configuration problems,
and their solutions,
see [this wiki page](https://github.com/swcarpentry/bc/wiki/Configuration-Problems-and-Solutions).

{% include setup.html %}

---
layout: lesson
root: .
title: Our Team
---
Many thanks to all of the people who have contributed to Software Carpentry over the years.

<table width="100%">
<tr>
<td valign="top">
Nasser Mohieddin Abukhdeir
<br/>
Joshua Adelman
<br/>
Aron Ahmadia
<br/>
Joshua Ainsley
<br/>
Carlos Anderson
<br/>
Mario Antonioletti
<br/>
Feth Arezki
<br/>
Dhavide Aruliah
<br/>
Pauline Barmby
<br/>
Diego Barneche
<br/>
Philipp Bayer
<br/>
Trevor Bekolay
<br/>
Miguel Bernabeu
<br/>
Matt Billard
<br/>
Sergi Blanco Cuaresma
<br/>
John Blischak
<br/>
Darren Boss
<br/>
Azalee Bostroem
<br/>
Erik Bray
<br/>
Eli Bressert
<br/>
Matthew Brett
<br/>
Amy Brown
<br/>
C. Titus Brown
<br/>
Jennifer Bryan
<br/>
Rosangela Canino-Koning
<br/>
Chris Cannam
<br/>
Scott Chamberlain
<br/>
Cliburn Chan
<br/>
Amanda Charbonneau
<br/>
Shreyas Cholia
<br/>
Adina Chuang Howe
<br/>
Neil Chue Hong
<br/>
Rodgers Cliff
<br/>
Christophe Combelles
<br/>
Mike Conley
<br/>
Christophe Cossou
<br/>
Stefano Cozzini
<br/>
Karen Cranston
<br/>
Stephen Crouch
<br/>
Davor Cubranic
<br/>
Emily Davenport
<br/>
Matt Davis
<br/>
Neal Davis
<br/>
Gabriel Devenyi
<br/>
Ross Dickson
<br/>
Jonah Duckles
<br/>
Jonathan Dursi
<br/>
Curtis Dyreson
<br/>
Stephen J. Eglen
<br/>
Justin Ely
<br/>
Dethe Elza
<br/>
Remi Emonet
<br/>
Richard Enbody
<br/>
Julia Evans
<br/>
Milad Fatenejad
<br/>
Luis Figueira
<br/>
Mike Fletcher
<br/>
Fernanda Foertter
<br/>
Patrick Fuller
<br/>
Julian Garcia
</td>
<td valign="top">
Laurent Gatto
<br/>
Molly Gibson
<br/>
Matt Gidden
<br/>
Ivan Gonzalez
<br/>
Alexandre Gramfort
<br/>
Chris Gray
<br/>
Julia Gustavsen
<br/>
Tommy Guy
<br/>
Steven Haddock
<br/>
Michael Hansen
<br/>
Ted Hart
<br/>
Trent Hauck
<br/>
Elliott Hauser
<br/>
James Hetherington
<br/>
Konrad Hinsen
<br/>
Steve Holden
<br/>
Mark Holder
<br/>
Preston Holmes
<br/>
Alison Hoyt
<br/>
Katy Huff
<br/>
Damien Irving
<br/>
Paul Ivanov
<br/>
Mike Jackson
<br/>
David Jones
<br/>
Nick Jones
<br/>
Jessica Kerr
<br/>
David Ketcheson
<br/>
W. Trevor King
<br/>
Justin Kitzes
<br/>
Christina Koch
<br/>
Steven Koenig
<br/>
Bernhard Konrad
<br/>
David Koop
<br/>
Daniel Krasner
<br/>
Karin Lagesen
<br/>
Jared Lander
<br/>
Ian Langmore
<br/>
Chris Lasher
<br/>
Doug Latornell
<br/>
Michelle Levesque
<br/>
Phil Lies
<br/>
Nicolas Limare
<br/>
Yuxi Luo
<br/>
Cath Ly
<br/>
Cam Macdonell
<br/>
Cindee Madison
<br/>
Kyle Mandli
<br/>
David Martin
<br/>
Dan McGlinn
<br/>
Steve McGough
<br/>
Jessica McKellar
<br/>
Tim McNamara
<br/>
Emily Jane McTavish
<br/>
Aronne Merrelli
<br/>
Lauren Michael
<br/>
Ian Mitchell
<br/>
Ben Morris
<br/>
James Morrison
<br/>
R. David Murray
<br/>
Sri Hari Krishna Narayanan
</td>
<td valign="top">
Lex Nederbragt
<br/>
Victor Ng
<br/>
Charlene Nielsen
<br/>
Danielle Nielsen
<br/>
Randy Olson
<br/>
Geoff Oxberry
<br/>
Aleksandra Pawlik
<br/>
Jason Pell
<br/>
Fernando Perez
<br/>
Hans Petter Langtangen
<br/>
Caitlyn Pickens
<br/>
Bill Punch
<br/>
Karthik Ram
<br/>
David Rio Deiros
<br/>
Ariel Rokem
<br/>
Jorden Schossau
<br/>
Anthony Scopatz
<br/>
Michael Selik
<br/>
Chang She
<br/>
Jeffrey Shelton
<br/>
Raniere Silva
<br/>
Gavin Simpson
<br/>
Andrew Smith
<br/>
Joshua Ryan Smith
<br/>
Jon Speicher
<br/>
Adam Stark
<br/>
Becky Stewart
<br/>
Shoaib Sufi
<br/>
Sarah Supp
<br/>
Leszek Tarkowski
<br/>
Tracy Teal
<br/>
Andy Terrel
<br/>
Matt Terry
<br/>
Samuel Thomson
<br/>
Joan Touzet
<br/>
Laura Tremblay-Boyer
<br/>
Will Trimble
<br/>
Jacob Vanderplas
<br/>
Gael Varoquaux
<br/>
Nelle Varoquaux
<br/>
Alex Viana
<br/>
Jens von der Linden
<br/>
Dominique Vuvan
<br/>
David Warde-Farley
<br/>
Ben Waugh
<br/>
Eric Weinstein
<br/>
Ethan White
<br/>
Rick White
<br/>
Amanda Whitlock
<br/>
Lynne Williams
<br/>
Greg Wilson
<br/>
Paul Wilson
<br/>
Sasha Wood
<br/>
Christopher Woods
<br/>
April Wright
<br/>
Andromeda Yelton
<br/>
Enas Yunis
<br/>
Qingpeng Zhang
<br/>
Naupaka Zimmerman
</td>
</tr>
</table>

