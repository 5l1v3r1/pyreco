
# Tendenci Demo Appliance

Tendenci virtual machine images contain a fully functional tendenci web site. It allows you to easily set up a demo site on your local machine with Virtual Box. 

## Requirements

* Minumum RAM: 1024 MB
* Minumum file storage: 24 GB

## Download the latest Tendenci VM appliance:
[OVA File](https://s3.amazonaws.com/tendenci-virtual-appliances/tendenci_vm.ova)


## Steps to import ova file

1. Install  or upgrade VirtualBox 4 or later [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
2. Import .ova file: Click File -> Import Appliance -> Open appliance and select the downloaded Tendenci ova file. Then follow the instruction to complete the import. 
3. Make sure Network Adapter 1 is attached to Bridged Adapter: Settings -> Network -> Adapter 1 -> Bridged Adapter

Once the import is done, you can start your Tendenci VM and access the demo site. 

The system login:

	username: tvm
	password: tvm
	
The admin account for the demo web site:

	username: admin
	password: admin
# Tendenci Credits

We want to recognize some of the developers of the core of Tendenci, from it's beginnings in 2001 as an idealistic side project to the current open source version built on python by an international team. (sorted by date only of when they started working on Tendenci.)

- Ed Schipul
- Jennifer Ulmer
- Donnell Smith
- Aaron Long
- Nse (Charles) Ekpenyong
- Jenny Qian
- Kathryn Ciaralli
- Adil Ahmed (project manager)
- Eloy Zuniga, Jr.
- Glen Zangirolami
- John-Michael Oswalt (JMO)
- Sam Lee
- Alex Ragsdale
- Felicia Ann Bates (FAB)
- John-Eddie Ayson (JE)


Tendenci would not exist without them.

Addition thanks to the following people who have contributed to the product as a whole:

- Tim Newton
- David Stagg
- Loren Lugosch
- Nabil Bani
- Sarah Worthy

# Deploying on Heroku

You do not need to be able to run tendenci locally in order to deploy to Heroku. Simply follow the steps below if you do want to load your site on Heroku's server environment.

## Prerequisites

You need to have a Heroku account: [http://heroku.com](http://heroku.com), the heroku toolbelt: [https://toolbelt.heroku.com/](https://toolbelt.heroku.com/), and git: [http://git-scm.com/](http://git-scm.com/) installed. It is also recommended that you have your payment options configured, though all of the settings below allow your site to run for free.

## Cloning and pushing to Heroku

For the instructions below, please replace `sitename` with the name of your site. The name can contain dashes or underscores, but not spaces.

You can now create a new git repo from this code that will be specific to your site. Go to your sitename folder from the terminal and run the following:

    git init
    heroku create sitename
    git add .
    git commit -am "initial commit"
    git push heroku master

Your site will now be created on Heroku. The first build may take up to 15 minutes due to the initial download of all of the dependencies. Additional updates will not take as long.

## Configuring Heroku Addons

Heroku offers several addons: [https://addons.heroku.com/](https://addons.heroku.com/) for apps that include Database connections, Memcached caching, email servers, and other useful addons. We will use the database and the Memcached addons in the instructions below.

You can add on the free tier of the memcache addon: [https://addons.heroku.com/memcache](https://addons.heroku.com/memcache) by running the following command. This addon is free, but you need to have verified your account to add it:

    heroku addons:add memcache:5mb

To configure the database, we must add the database and then promote it as the main database. Database names from Heroku's Postgresql service: [https://postgres.heroku.com/](https://postgres.heroku.com/) follow the pattern `HEROKU_POSTGRESQL_COLOR` where `COLOR` is an actual color name like `TEAL` or `ORANGE`. This will vary per installation, but we can look this up by running `heroku config`. The second command below will find the default color name and use it.

To create and configure the database, run the following commands:

    heroku addons:add heroku-postgresql:dev
    heroku pg:promote `heroku config | grep POSTGRES | cut -d : -f 1`

## Setting up the database

Next, we can run the deploy script to populate the database. The theme `twenty-thirteen` is used below by default, but you may create a custom theme and set your theme to that themes.

    heroku run python deploy.py
    heroku run python manage.py set_theme twenty-thirteen
    heroku run python manage.py createsuperuser

## Configuring static assets

We have two options for static assets: serving them locally and loading from a remote location like Amazon S3: [http://aws.amazon.com/s3/](http://aws.amazon.com/s3/).

**WARNING** - If you use the local storage, any uploaded files may be **deleted** when you update your site. This is not recommended for a live website. You should setup S3 instead.

To configure S3, set the config options with the following command:

    heroku config:set AWS_ACCESS_KEY_ID='MY_ACCESS_KEY'
    heroku config:set AWS_SECRET_ACCESS_KEY='MY_SECRET_KEY'
    heroku config:set AWS_STORAGE_BUCKET_NAME='bucket_name'
    heroku config:set AWS_LOCATION='new-site-name'

Now, run the following command:

    heroku run python manage.py collectstatic --noinput

Finally, you can open your site!

    heroku open

# Tendenci Installation

You can use the following installation instructions to install a local Tendenci site. This Django project is intended to help create a Tendenci site that you can deploy on a public hosting, but it's recommended that you install locally first in order to test your themes and designs. From the Terminal prompt on a Mac or Linux follow these steps.

## Pre-config

Install pip [http://www.pip-installer.org/](http://www.pip-installer.org/):
    
    sudo easy_install pip

Install virtualenv [http://www.virtualenv.org/](http://www.virtualenv.org/):

    pip install virtualenv

If you are using OS X, you may need to sudo that command with:

    sudo pip install virtualenv

You'll also need to have Git set up: [https://help.github.com/articles/set-up-git](https://help.github.com/articles/set-up-git).

On Mac OS X 10.7 or higher you will need Xcode 4.4.1 or higher (in app store) and will need to install the Command Line tools it comes with. To install these, open Xcode, click the "Xcode" menu item in the top left of the screen near the Apple logo, then click "Preferences", then click "Downloads". Then click install on the line next to Command Line Tools.


## Setting up the database

Tendenci is designed for use with PostgreSQL. You will need to have a PostgreSQL server running locally. If you are on OS X, we recommend Postgres.app: [http://postgresapp.com/](http://postgresapp.com/) to get up and running fast.

With Postgres.app installed, you can create a database from Terminal:

    psql -h localhost -c "CREATE DATABASE tendenci"

You can also create a database in your GUI of choice (recommended: [http://www.pgadmin.org/](http://www.pgadmin.org/)).

For more on installing PostgreSQL for Django check the docs at: [https://docs.djangoproject.com/en/dev/ref/databases/#postgresql-notes](https://docs.djangoproject.com/en/dev/ref/databases/#postgresql-notes)

## Downloading Tendenci

Make a folder for your site and cd into it. Replace 'sitename' with the name of your site.
 
    mkdir sitename
    cd sitename

It's best practice to make a virtual environment for your site. You will need [virtualenv](http://www.virtualenv.org/) installed for the next step. If you don't have it, you can install it with `pip install virtualenv`. Make a virtual environment called 'venv' and activate it.

    virtualenv venv
    source venv/bin/activate

Install Tendenci. This download and install step may take a few minutes.

    pip install tendenci

## Setting up your site

Once this is done, you can setup django project with the following:

    create-tendenci-project

If you created a database with a name other than 'tendenci', you will need to edit the database name 'tendenci' inside the `.env` file that is created. The .env file is in the root of your site and is a hidden file. Do a "ls -a" to see it. And type "nano .env" to edit it.

Next, we install requirements for the project. We add tendenci videos as an example to use.

    pip install -r requirements/dev.txt

Now we are ready to use our deploy script.

    python deploy.py

**Recommended:** If this is your first time using Tendenci, we recommend you install some default data and our twenty-thirteen theme to get a feel of what a full Tendenci site is like. You can install this data and theme with the command:

    python manage.py load_npo_defaults

To create your login, run the following command and fill in the prompts:

    python manage.py createsuperuser

Finally, we can use the runserver command so that we can view the site in our browser:

    python manage.py runserver

Open http://127.0.0.1:8000/ in your browser to see your tendenci site!

----------

## Advanced options

**Optional:** If you want to use a different theme, you can set that theme with the following command, replacing `my-theme-name` with the name of your theme:

    python manage.py set_theme my-theme-name

**Optional:** You can download a set of starter themes at:

    https://github.com/tendenci/tendenci-themes
    
**Optional:** You can add additional local environment variables to the `.env` file by defining them as `KEY='value'`. Settings that are sensitive (like passwords) or vary per environment should be added to this file. For example, to use Amazon's S3 service as a file storage backend, set the following key/value pairs in your `.env` file:

    AWS_ACCESS_KEY_ID='MY_ACCESS_KEY'
    AWS_SECRET_ACCESS_KEY='MY_SECRET_KEY'
    AWS_STORAGE_BUCKET_NAME='bucket_name'
    AWS_LOCATION='new-site-name'

----------

If you are interested in deploying your site to Heroku, see our online instructions at [https://github.com/tendenci/tendenci/blob/master/docs/heroku.md](https://github.com/tendenci/tendenci/blob/master/docs/heroku.md)

Tendenci - Content Management System (CMS) built for non-profits

Copyright (C) 2012 Schipul Technologies, Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

---------------------------------------------------------------------

GNU GENERAL PUBLIC LICENSE

Version 3, 29 June 2007

Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/>

Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.

Preamble

The GNU General Public License is a free, copyleft license for software and other kinds of works.

The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.

When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.

To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.

For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.

Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.

For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.

Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.

Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.

The precise terms and conditions for copying, distribution and modification follow.

TERMS AND CONDITIONS

0. Definitions.
“This License” refers to version 3 of the GNU General Public License.

“Copyright” also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.

“The Program” refers to any copyrightable work licensed under this License. Each licensee is addressed as “you”. “Licensees” and “recipients” may be individuals or organizations.

To “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work.

A “covered work” means either the unmodified Program or a work based on the Program.

To “propagate” a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.

To “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.

An interactive user interface displays “Appropriate Legal Notices” to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.

1. Source Code.
The “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work.

A “Standard Interface” means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.

The “System Libraries” of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A “Major Component”, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.

The “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.

The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.

The Corresponding Source for a work in source code form is that same work.

2. Basic Permissions.
All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.

You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.

Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.

3. Protecting Users' Legal Rights From Anti-Circumvention Law.
No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.

When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.

4. Conveying Verbatim Copies.
You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.

You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.

5. Conveying Modified Source Versions.
You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:

a) The work must carry prominent notices stating that you modified it, and giving a relevant date.
b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to “keep intact all notices”.
c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.
d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.
A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an “aggregate” if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.

6. Conveying Non-Source Forms.
You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:

a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.
b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.
c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.
d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.
e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.
A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.

A “User Product” is either (1) a “consumer product”, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, “normally used” refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.

“Installation Information” for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.

If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).

The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.

Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.

7. Additional Terms.
“Additional permissions” are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.

When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.

Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:

a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or
b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or
c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or
d) Limiting the use for publicity purposes of names of licensors or authors of the material; or
e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or
f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.
All other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.

If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.

Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.

8. Termination.
You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).

However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.

Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.

Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.

9. Acceptance Not Required for Having Copies.
You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.

10. Automatic Licensing of Downstream Recipients.
Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.

An “entity transaction” is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.

You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.

11. Patents.
A “contributor” is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's “contributor version”.

A contributor's “essential patent claims” are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, “control” includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.

Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.

In the following three paragraphs, a “patent license” is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To “grant” such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.

If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. “Knowingly relying” means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.

If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.

A patent license is “discriminatory” if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.

Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.

12. No Surrender of Others' Freedom.
If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.

13. Use with the GNU Affero General Public License.
Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.

14. Revised Versions of this License.
The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.

Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.

If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.

Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.

15. Disclaimer of Warranty.
THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

16. Limitation of Liability.
IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

17. Interpretation of Sections 15 and 16.
If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.

END OF TERMS AND CONDITIONS

# Tendenci

Tendenci 5.+ is the next iteration of a product started in 2001 and released open source in 2012. It is built specifically for NPOs (Non Profit Organizations.) We started with a focus completely on associations but now being open source GPL it is much broader in scope. 
It is a content management system (CMS) with powerful features for event registration, membership management, donations, payments, email integration and much more.

Tendenci allows membership management organizations to communicate, manage and conduct transactions with web site visitors. Tendenci is easy to use and offers many modules as one customizable software package. The 5.x version is open source and built on Django/Python/Postgres and Ubuntu.

[![Downloads](https://pypip.in/d/tendenci/badge.png)](https://pypi.python.org/pypi/tendenci/)


## Demo?  

Can I see a demo now? Yup. [http://demo.tendenci.com/](http://demo.tendenci.com/).  

## Impatient Developer?  

If you want to test it locally quickly (e.g. client demo etc), you can try it ASAP three ways (do NOT use thse in production).  

1) TurnKey Tendenci Virtual Appliances: [http://www.turnkeylinux.org/tendenci](http://www.turnkeylinux.org/tendenci)  
2) Vagrant Box [https://github.com/tendenci/tendenci-vagrant/blob/master/README.md](https://github.com/tendenci/tendenci-vagrant/blob/master/README.md)  
3) Virtual Machine Version here: [https://github.com/tendenci/tendenci/blob/master/demostrator.md](https://github.com/tendenci/tendenci/blob/master/demostrator.md)  
 

## Developer Installing Tendenci?  

Detailed installation docs at [https://tendenci.readthedocs.org/en/latest/](https://tendenci.readthedocs.org/en/latest/). 
You will need to install the server on Ubuntu 12.04 LTS (or later) and Postgres 9.1 (or later.) Cloud hypervisors work fine.  

Have you deployed Tendenci in a Production Environment? Let us know because we'd like to build a directory of qualified developers. Send us a link to a production site and we can add you to our developer list. (no cost)  
[http://tendenci.com/directories/](http://tendenci.com/directories/)

## Humans Looking for a Hosted Solution?  

Not a programmer and you just want to host it somewhere else? You can ask your currentfavorite web developer who you already work with. Or do a free trial on tendenci.com. Cool with us either way. We'll even help them set you up if needed. Geek to Geek.  

## Why Did We Make Tendenci Open Source?  

Tendenci was built by the team at Schipul.com iteratively by releasing the core for event registrations. We listened to our clients and over the last 12+ years it has evolved. From LISTENING.  

Our vision: "Connect and Oragnize the World's People" 
Our mission: "To make Tendenci the number 1 platform for NPOs/NGOs/Arts organizations globally."  

Um... and we can't do that without you and the community. How can your organization help Tendenci? Fork it. Build and extend on it. Deploy it. Translate it. Or simply submit an issue if you find a bug.  
Be part of a global movement to reclaim the NGO online space from proprietary companies holding your data hostage.

## License

The License information (Open Source GPL) can be found at [https://github.com/tendenci/tendenci/blob/master/LICENSE.md](https://github.com/tendenci/tendenci/blob/master/LICENSE.md)

## Who's started all of this?

The [http://www.tendenci.com](http://www.tendenci.com) team. We like to LISTEN to you and then make it real. We like to change the world.

## Credits

Props [https://github.com/tendenci/tendenci/blob/master/docs/credits.md](https://github.com/tendenci/tendenci/blob/master/docs/credits.md)



TWITTER BOOTSTRAP
=================

Bootstrap is Twitter's toolkit for kickstarting CSS for websites, apps, and more. It includes base CSS styles for typography, forms, buttons, tables, grids, navigation, alerts, and more.

To get started -- checkout http://twitter.github.com/bootstrap!


Usage
-----

You can use Twitter Bootstrap in one of two ways: just drop the compiled CSS into any new project and start cranking, or run LESS on your site and compile on the fly like a boss.

Here's what the LESS version looks like:

``` html
<link rel="stylesheet/less" type="text/css" href="lib/bootstrap.less">
<script src="less.js" type="text/javascript"></script>
```

Or if you prefer, the standard css way:

``` html
<link rel="stylesheet" type="text/css" href="bootstrap.css">
```

For more info, refer to the docs!


Versioning
----------

For transparency and insight into our release cycle, and for striving to maintain backwards compatibility, Bootstrap will be maintained under the Semantic Versioning guidelines as much as possible.

Releases will be numbered with the follow format:

`<major>.<minor>.<patch>`

And constructed with the following guidelines:

* Breaking backwards compatibility bumps the major
* New additions without breaking backwards compatibility bumps the minor
* Bug fixes and misc changes bump the patch

For more information on SemVer, please visit http://semver.org/.


Bug tracker
-----------

Have a bug? Please create an issue here on GitHub!

https://github.com/twitter/bootstrap/issues


Twitter account
---------------

Keep up to date on announcements and more by following Bootstrap on Twitter, <a href="http://twitter.com/TwBootstrap">@TwBootstrap</a>.


Mailing list
------------

Have a question? Ask on our mailing list!

twitter-bootstrap@googlegroups.com

http://groups.google.com/group/twitter-bootstrap


Developers
----------

We have included a makefile with convenience methods for working with the bootstrap library.

+ **build** - `make build`
This will run the less compiler on the bootstrap lib and generate a bootstrap.css and bootstrap.min.css file.
The lessc compiler is required for this command to run.

+ **watch** - `make watch`
This is a convenience method for watching your less files and automatically building them whenever you save.
Watchr is required for this command to run.


Authors
-------

**Mark Otto**

+ http://twitter.com/mdo
+ http://github.com/markdotto

**Jacob Thornton**

+ http://twitter.com/fat
+ http://github.com/fat


License
---------------------

Copyright 2011 Twitter, Inc.

Licensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0
# CodeMirror 2

CodeMirror 2 is a rewrite of [CodeMirror
1](http://github.com/marijnh/CodeMirror). The docs live
[here](http://codemirror.net/doc/manual.html), and the project page is
[http://codemirror.net/](http://codemirror.net/).

# jQuery File Upload Plugin

## Demo
[Demo File Upload](http://blueimp.github.com/jQuery-File-Upload/)

## Setup instructions
* [How to setup the plugin on your website](https://github.com/blueimp/jQuery-File-Upload/wiki/Setup)
* [How to use only the basic plugin (minimal setup guide).](https://github.com/blueimp/jQuery-File-Upload/wiki/Basic-plugin)

## Features
* **Multiple file upload:**  
  Allows to select multiple files at once and upload them simultaneously.
* **Drag & Drop support:**  
  Allows to upload files by dragging them from your desktop or filemanager and dropping them on your browser window.
* **Upload progress bar:**  
  Shows a progress bar indicating the upload progress for individual files and for all uploads combined.
* **Cancelable uploads:**  
  Individual file uploads can be canceled to stop the upload progress.
* **Resumable uploads:**  
  Aborted uploads can be resumed with browsers supporting the Blob API.
* **Chunked uploads:**  
  Large files can be uploaded in smaller chunks with browsers supporting the Blob API.
* **Client-side image resizing:**  
  Images can be automatically resized on client-side with browsers supporting the required JS APIs.
* **Preview images:**  
  A preview of image files can be displayed before uploading with browsers supporting the required JS APIs.
* **No browser plugins (e.g. Adobe Flash) required:**  
  The implementation is based on open standards like HTML5 and JavaScript and requires no additional browser plugins.
* **Graceful fallback for legacy browsers:**  
  Uploads files via XMLHttpRequests if supported and uses iframes as fallback for legacy browsers.
* **HTML file upload form fallback:**  
  Shows a standard HTML file upload form if JavaScript is disabled.
* **Cross-site file uploads:**  
  Supports uploading files to a different domain with Cross-site XMLHttpRequests.
* **Multiple plugin instances:**  
  Allows to use multiple plugin instances on the same webpage.
* **Customizable and extensible:**  
  Provides an API to set individual options and define callBack methods for various upload events.
* **Multipart and file contents stream uploads:**  
  Files can be uploaded as standard "multipart/form-data" or file contents stream (HTTP PUT file upload).
* **Compatible with any server-side application platform:**  
  Works with any server-side platform (PHP, Python, Ruby on Rails, Java, Node.js, Go etc.) that supports standard HTML form file uploads.

## Requirements
* [jQuery](http://jquery.com/) v. 1.6+
* [jQuery UI widget factory](http://wiki.jqueryui.com/w/page/12138135/Widget%20factory) v. 1.8+
* [jQuery Iframe Transport plugin](https://github.com/blueimp/jQuery-File-Upload/blob/master/jquery.iframe-transport.js) (included)
* [JavaScript Templates engine](https://github.com/blueimp/JavaScript-Templates) v. 2.1.0+ (optional)
* [JavaScript Load Image function](https://github.com/blueimp/JavaScript-Load-Image) v. 1.1.6+ (optional)
* [JavaScript Canvas to Blob function](https://github.com/blueimp/JavaScript-Canvas-to-Blob) v. 2.0.0+ (optional)
* [Bootstrap CSS Toolkit](https://github.com/twitter/bootstrap/) v. 2.0+ (optional)

The jQuery UI widget factory is a requirement for the basic File Upload plugin, but very lightweight without any other dependencies.  
The jQuery Iframe Transport is required for [browsers without XHR file upload support](https://github.com/blueimp/jQuery-File-Upload/wiki/Browser-support).  
The UI version of the File Upload plugin also requires the JavaScript Templates engine as well as the JavaScript Load Image and JavaScript Canvas to Blob functions (for the image previews and resizing functionality). These dependencies are marked as optional, as the basic File Upload plugin can be used without them and the UI version of the plugin can be extended to override these dependencies with alternative solutions.

The User Interface is built with Twitter's [Bootstrap](https://github.com/twitter/bootstrap/) Toolkit. This enables a CSS based, responsive layout and fancy transition effects on modern browsers. The demo also includes the [Bootstrap Image Gallery Plugin](https://github.com/blueimp/Bootstrap-Image-Gallery). Both of these components are optional and not required.

The repository also includes the [jQuery XDomainRequest Transport plugin](https://github.com/blueimp/jQuery-File-Upload/blob/master/js/cors/jquery.xdr-transport.js), which enables Cross-domain AJAX requests (GET and POST only) in Microsoft Internet Explorer >= 8. However, the XDomainRequest object doesn't support file uploads and the plugin is only used by the [Demo](http://blueimp.github.com/jQuery-File-Upload/) for Cross-domain requests to delete uploaded files from the demo file upload service.

[Cross-domain File Uploads](https://github.com/blueimp/jQuery-File-Upload/wiki/Cross-domain-uploads) using the [Iframe Transport plugin](https://github.com/blueimp/jQuery-File-Upload/blob/master/js/jquery.iframe-transport.js) require a redirect back to the origin server to retrieve the upload results. The [example implementation](https://github.com/blueimp/jQuery-File-Upload/blob/master/js/main.js) makes use of [result.html](https://github.com/blueimp/jQuery-File-Upload/blob/master/cors/result.html) as a static redirect page for the origin server.

## Browser Support (tested versions)
* Google Chrome - 7.0+
* Apple Safari - 4.0+
* Mozilla Firefox - 3.0+
* Opera - 10.0+
* Microsoft Internet Explorer 6.0+

Drag & Drop is only supported on Google Chrome, Firefox 4.0+, Safari 5.0+ and Opera 12.0+.  
Microsoft Internet Explorer has no support for multiple file selection or upload progress.  
[Extended browser support information](https://github.com/blueimp/jQuery-File-Upload/wiki/Browser-support).

## License
Released under the [MIT license](http://www.opensource.org/licenses/MIT).

jquery.lightbox_me.js
version 2.2

Have you ever had a DOM element that you wanted lightboxed, but didn't want all the fanciness of all the lightbox-related plug-ins out there? Lightbox_me is for you.

Lightbox_me is an essential tool for the jQuery developer's toolbox. Feed it a DOM element wrapped in a jQuery object and it will lightbox it for you, no muss no fuss.

View more information at http://buckwilson.me/lightboxme



## Usage

Lightbox_me is a jQuery plugin and requires jQuery to be included in order to work.

Include both jQuery and the lightbox_me JavaScript file before calling the plugin in your JavaScript.

Invoke the lightbox by calling the plugin on a jQuery object:
$(dom).lightbox_me();



## License

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.



## Author Information

Lightbox_me was created by Buck Wilson for Jive Software.
http://buckwilson.me
http://jivesoftware.com


Edit CSS Style plug-in notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Unlike WYSIWYG editor functionality that operates only on the selected text,
typically by inserting new HTML elements with the specified styles.
This plug-in operates on the HTML blocks surrounding the selected text.
No new HTML elements are created.

This plug-in only operates on the surrounding blocks and not the nearest
parent node.  This means that if a block encapsulates a node,
e.g <p><span>text</span></p>, then only the styles in the block are
recognized, not those in the span.

When selecting text that includes multiple blocks at the same level (peers),
this plug-in accumulates the specified styles in all of the surrounding blocks
and populates the dialogue checkboxes accordingly.  There is no differentiation
between styles set in all the blocks versus styles set in some of the blocks.

When the [Update] or [Apply] buttons are pressed, the styles selected in the
checkboxes are applied to all blocks that surround the selected text.

tendenci-videos
===============

Videos addon for Tendenci.
# Installation instructions

You can use the following installation instructions to install a local Tendenci site. This Django project is intended to help create a Tendenci site that you can deploy on a public hosting, but it's recommended that you install locally first in order to test your themes and designs.

## Pre-config

Install pip [http://www.pip-installer.org/](http://www.pip-installer.org/):
    
    sudo easy_install pip

Install virtualenv [http://www.virtualenv.org/](http://www.virtualenv.org/):

    pip install virtualenv
    pip install virtualenvwrapper

You'll also need to have Git set up: [https://help.github.com/articles/set-up-git](https://help.github.com/articles/set-up-git).

On Mac OSX 10.7 or higher: you will need xcode 4.4.1 (in app store) or the [osx-gcc-installer package](https://github.com/kennethreitz/osx-gcc-installer/downloads).

## Setting up the database

Tendenci is designed for use with PostgreSQL. You will need to have a PostgreSQL server running locally. If you are on OS X, we recommend Postgres.app: [http://postgresapp.com/](http://postgresapp.com/) to get up and running fast.

We recommend you install PostgreSQL **outside** of your virtual environment because you will likely wind up with multiple databases for various projects.

Django syncdb will *not* create a PostgreSQL database for you like it does with sqlite. You need to manually create a PostgreSQL database through your GUI or from the psql comand line.

With Postgres.app installed, you can create a database from Terminal:

    psql -h localhost
    CREATE DATABASE your_database_name;

You can also create a database in your GUI of choice (recommended: [http://www.pgadmin.org/](http://www.pgadmin.org/)).

For more on installing PostgreSQL for Django check the docs at:

[https://docs.djangoproject.com/en/dev/ref/databases/#postgresql-notes](https://docs.djangoproject.com/en/dev/ref/databases/#postgresql-notes)

## Downloading Tendenci

Clone the repo, then travel to its directory. You can replace "your-site-name" with whatever name you like.

    git clone git@github.com:tendenci/tendenci-site.git your-site-name
    cd !$

You should now be in `~/Dropbox/Code/your-site-name`, or whatever the path is to your project directory. Let's remove the .git so that your changes won't be tracked in the main tendenci-site repo.

    rm -rf .git

If you want to track your changes to **your app** (strongly recommended), then you can create a new git repo specific to your project by running the following command:

    git init
    git add .
    git commit -am "initial commit"

## Creating your virtual environment

It is recommended that you create your virtual environment inside this project directory. By default, the `.gitignore` file will ignore items in a directory named `venv`. We recommend you create a virtual environment with that name with the following commands (remember that you should be inside your project directory here):

    virtualenv venv
    source venv/bin/activate

You will need to run `source venv/bin/activate` from your project directory every time you are working on the project.

You will now need to populate your virtual environment by running the following command:

    pip install -r local_requirements.txt

This will download the Tendenci package, all of its dependencies, and a few additional packages. This may take a few minutes depending on your internet connection speed.

<!--- Alex note: This section to change after Ed's settings folder is committed. --->
## Creating a local environment file

Next, create your local environment. Tendenci will load a local file, `.env`, which will not be committed into your repo.

An example of this file, `.env_example`, can be copied using the following command:

    cp .env_example .env

You will now need to **edit your** `.env` **file** to change the database name:

    nano .env

 Replace the word `tendenci` with your database's name. CTRL + O and Return to save your changes. CTRL + X to quit editing.

You can add additional local environment variables to the `.env` file by defining them as `KEY='value'`. Settings that are sensitive (like passwords) or vary per environment should be added to this file. 

For example, to use Amazon's S3 service as a database backend, set the following key/value pairs in your `.env` file:

    AWS_ACCESS_KEY_ID='MY_ACCESS_KEY'
    AWS_SECRET_ACCESS_KEY='MY_SECRET_KEY'
    AWS_STORAGE_BUCKET_NAME='bucket_name'
    AWS_LOCATION='new-site-name'


## Deploying

Next, we can run the deploy script to populate the database. The theme `salonify` is used below by default, but you may create a custom theme and use `python manage.py set_theme your_theme_name` to set it to that theme.

    python deploy.py
    python manage.py set_theme salonify
    python manage.py createsuperuser
    python manage.py collectstatic --noinput

## Running and testing

Be sure that you're in your project directory and inside your virtual environment. You can now test your site by running the standard Django `runserver` management command with:

    python manage.py runserver

In your browser, navigate to your site at:

    http://127.0.0.1:8000

You should see the default homepage for the theme you have installed. Tendenci is now up and running locally.

------

# Deploying on Heroku

You do not need to be able to run tendenci locally in order to deploy to Heroku. Simply follow the steps below.

## Prerequisites

You need to have a Heroku account: [http://heroku.com](http://heroku.com) and the heroku toolbelt: [https://toolbelt.heroku.com/](https://toolbelt.heroku.com/) installed. It is also recommended that you have your payment options configured, though all of the settings below allow your site to run for free.

## Cloning and pushing to Heroku

For the instructions below, please replace `new-site-name` with the name of your site. The name can contain dashes or underscores, but not spaces.

    git clone git@github.com:tendenci/tendenci-site.git new-site-name
    cd new-site-name
    rm -rf .git

We remove the .git directory to disconnect this code from the tendenci-site main repo. You can now create a new git repo from this code that will be specific to your site.

    git init
    heroku create new-site-name
    git add .
    git commit -am "initial commit"
    git push heroku master

Your site will now be created on Heroku. The first build may take up to 10 minutes due to the initial download of all of the dependencies. Additional updates will not take as long.

## Configuring Heroku Addons

Heroku offers several addons: [https://addons.heroku.com/](https://addons.heroku.com/) for apps that include Database connections, Memcached caching, email servers, and other useful addons. We will use the database and the Memcached addons in the instructions below.

You can add on the free tier of the memcache addon: [https://addons.heroku.com/memcache](https://addons.heroku.com/memcache) by running the following command. This addon is free, but you need to have verified your account to add it:

    heroku addons:add memcache:5mb

To configure the database, we must add the database and then promote it as the main database. Database names from Heroku's Postgresql service: [https://postgres.heroku.com/](https://postgres.heroku.com/) follow the pattern `HEROKU_POSTGRESQL_COLOR` where `COLOR` is an actual color name like `TEAL` or `ORANGE`. This will vary per installation, but we can look this up by running `heroku config`. The second command below will find the default color name and use it.

To create and configure the database, run the following commands:

    heroku addons:add heroku-postgresql:dev
    heroku pg:promote `heroku config | grep POSTGRES | cut -d : -f 1`

## Setting up the database

Next, we can run the deploy script to populate the database. The theme `salonify` is used below by default, but you may create a custom theme and set your theme to that themes.

    heroku run python deploy.py
    heroku run python manage.py set_theme salonify
    heroku run python manage.py createsuperuser

## Configuring static assets

We have two options for static assets: serving them locally and loading from a remote location like Amazon S3: [http://aws.amazon.com/s3/](http://aws.amazon.com/s3/).

To load locally, we only need to set our `DEBUG` variable to True with the following command:

    heroku config:set DEBUG=True

To configure S3, set the config options with the following command:

    heroku config:set AWS_ACCESS_KEY_ID='MY_ACCESS_KEY'
    heroku config:set AWS_SECRET_ACCESS_KEY='MY_SECRET_KEY'
    heroku config:set AWS_STORAGE_BUCKET_NAME='bucket_name'
    heroku config:set AWS_LOCATION='new-site-name'

Now, run the following command:

    heroku run python manage.py collectstatic --noinput

Finally, you can open your site!

    heroku open

# Tendenci

Tendenci is a content management system (CMS) designed for organizations with powerful features for event registration, membership management, and email communication.

Tendenci allows membership management organizations to communicate, manage and conduct transactions with web site visitors. Tendenci is easy to use and offers many modules as one customizable software package.

The name 'Tendenci' was originally created by Randy Sarinas. The original logo, branding, and colors were designed by Aaron Long.

## Installation

For information on how to install Tendenci, follow the instructions in `INSTALL.md`, or [online at Github](https://github.com/tendenci/tendenci-site/blob/master/INSTALL.md).

## Core Developers

We want to recognize some of the developers of the core of Tendenci, from it's beginnings in Microsoft ASP to this current version written in python.

- Ed Schipul
- Jennifer Ulmer
- Donnell Smith
- Nse (Charles) Ekpenyong
- Kathryn Ciaralli
- Adil Ahmed (project manager)
- Jenny Qian
- Eloy Zuniga, Jr.
- Glen Zangirolami
- John-Michael Oswalt (JMO)
- Sam Lee

Tendenci would not exist without them.

Addition thanks to the following people who have contributed to the product as a whole:

- Tim Newton
- David Stagg
- Loren Lugosch
- Nabil Bani
- Sarah Worthy

## Copy your themes here
{% if obj.type == 'image' %}
	<img src="{% url file obj.pk %}" />
{% endif %}


{{ obj.content|safe }}
{{ obj.content }}
# Theme Guidelines

- Authors: John-Michael Oswalt
- Last update: 2013-10-02

The main sections are:

- [Theme Structure](#theme-structure)
- [Stylesheet Conventions](#stylesheet-conventions)
- [Template Conventions](#template-conventions)
- [HTML and Class Name Conventions](#html-and-class-name-conventions)
- [Full Theme Examples](#full-theme-examples)

## Theme Structure

A theme should be installed in the themes folder of the site root. The themename should be lowercase with hyphens replacing spaces, like `theme-name`. The file tree should be as follows:


- theme-name

  - theme.info
  - screenshot.png
  - settings.json

  - media

      - css
    
          - styles.css

      - fonts

          - Font-name.eot
          - Font-name.svg
          - Font-name.ttf
          - Font-name.woff
    
      - img
    
          - apple-touch-icon.png
          - favicon.ico
          - header-background.jpg (optional)
          - logo.png

      - js
    
          - jquery.cycle.all.min.js
          - jcarousellite.min.js

  - templates

      - homepage.html
      - default.html
      - header.html (optional)
      - footer.html (optional)
      - sidebar.html (optional)
    
### Root

**theme.info** - This file contains a set of attributes associated with a theme. See the example below for some common attributes.

    name = Theme Name
    description = Theme Name custom theme for Tendenci CMS.
    tags = homepage rotator, responsive
    screenshot = screenshot.png
    author = John Doe
    author uri = http://example.com
    version = 1.0
    create_dt = 2013-06-20 15:34:00

**screenshot.png** - This file is a full page screenshot of the theme after it has been loaded with the fixtures using the `load_npo_defaults` management command.

**settings.json** - This file contains settings for the Tendenci site settings. These settings are written in json and are installed whenever the `update_settings`, `set_theme`, or `install_theme` command is run.


### Media

#### css

**media/css/styles.css** - This is the main stylesheet to be used for the site. It will include all css, including menus and media queries.

#### fonts

**media/fonts/Font-name.*** - These are the files for fonts used in the theme. Font files should be copied here, not referenced externally. The 4 formats of `.eot`, `.svg`, `.ttf`, and `.woff` should all be included.

#### img

**media/img/apple-touch-icon.png** - This is the file used by iOS devices when a site is saved to an iOS homescreen.

**media/img/favicon.ico** - This is the favicon for our site.

**media/img/header-background.jpg** (optional) - This is an example of another image used with the site theme.

**media/img/logo.png** - This is the main logo for the site. This can be a `.png` or `.jpg`.


The `media/img` directory should hold all of the images used with the theme.

#### js

**media/js/jquery.cycle.all.min.js** - This is one optional library to use for rotators and sliders.

**media/js/jcarousellite.min.js** - This is the other optional library to use for rotators and sliders.

No other javascript libraries should be used for rotators or sliders. Any other necessary javascript libraries like hint, easing, etc. should be included in `media/js`.


### Templates

**templates/default.html** - This file defines the HTML that is used when a page other than the homepage is loaded.

**templates/footer.html** (optional) - This file should contain the HTML used in the footer. The footer is the last portion of HTML for the theme that would be shared by both the `homepage.html` and `default.html` templates. This file is used to prevent duplicate code in those templates and is **included** within those files. Javascript and CSS should NOT be included in this file.

**templates/header.html** (optional) - This file should contain the HTML used in the header. The header typically includes the logo, login box, search box, and navigation that would be shared by both the `homepage.html` and `default.html` templates. This file is used to prevent duplicate code in those templates and is **included** within those files. Javascript and CSS should NOT be included in this file.

**templates/homepage.html** - This file defines the HTML that is used when the homepage of the site is loaded.

**templates/sidebar.html** (optional) - This file should contain the HTML used in the sidebar. The sidebar has content that would be shared by both the `homepage.html` and `default.html` templates. This file is used to prevent duplicate code in those templates and is **included** within those files. Javascript and CSS should NOT be included in this file.

### Overridden Templates

On occasion, it may be necessary to override a template used in the site. For example, if the default view of an article needed to be edited for this theme, the overridden template would reside in the theme at **templates/articles/view.html**.

## Stylesheet conventions

### Comments

Specify the about comments, similar to WordPress, like so:

    /*   
    Theme Name: The Theme Name
    Theme URI: http://tendenci.com/
    Description: Custom theme design for Tendenci
    Designer: John Doe
    Designer URI: http://example.com/
    Developer: Jane Doe
    Developer URI: http://example.com/jdoe/
    Version: 1.0
    */

CSS comments are very similar, written like so:

    /* ------------------------------
        Reset HTML 
    ------------------------------ */

The header line begins with forward slash, asterisk, and a space, followed by 30 dashes. The footer line is the same, but in reverse. The name row has 4 spaces, then the name of the comments section.

Comments should have empty line after them. The code should begin on the very next line. Comments should have 1 empty line above them.

### Reset

A standard CSS reset should be used like so:

    /* ------------------------------
        Reset HTML 
    ------------------------------ */
    html, body, div, span, object, iframe,
    h1, h2, h3, h4, h5, h6, p, blockquote, pre,
    abbr, address, cite, code, del, dfn, img, ins, kbd, q, samp,
    small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li,
    fieldset, form, label, legend,
    table, caption,
    article, aside, canvas, details, figcaption, figure,
    footer, header, hgroup, menu, section, summary,
    time, mark, audio, video {
      margin: 0;
      padding: 0;
      border: 0;
      font-size: 100%;
      font: inherit;
      vertical-align: baseline;
    }
    
    article, aside, details, figcaption, figure,
    footer, header, hgroup, menu, section {
      display: block;
    }
    
This reset should have the comment above it as demonstrated. After this bit of code, an empty line should be present, followed by the next CSS comment denoting the next section.

### Base HTML Elements

Here is a sample of code that can be used for base HTML elements.

    /* ------------------------------
        Base HTML Elements 
    ------------------------------ */
    body { background-color: #ffffff; font-family: Helvetica, Arial, "sans-serif"; font:13px/1.231 sans-serif; *font-size:small; color: #333333; margin: 0; }
    
    h1, h1 a { font-size: 32px; line-height: 34px; text-decoration: none; font-weight: bold; margin-bottom: 10px; }
    h2, h2 a { font-size: 24px; line-height: 26px; text-decoration: none; font-weight: bold; margin-bottom: 10px; }
    h3, h3 a { font-size: 20px; line-height: 22px; text-decoration: none; font-weight: bold; margin-bottom: 6px; }
    h4, h4 a,
    h5, h5 a,
    h6, h6 a { font-size: 16px; line-height: 18px; text-decoration: none; font-weight: bold; margin-bottom: 6px; }
    
    a { color: #0000ff; }
    a:hover { color: #5555ff; }
    a:visited, a:active { color: #BB55ff; }
    
    p { margin-bottom: 10px; line-height: 18px; }
    
    ul, ol { margin: 0 0 10px 24px; }
    ol { list-style-type: decimal; }
    
    select, input, textarea, button { font:99% sans-serif; }
    pre, code, kbd, samp { font-family: monospace, sans-serif; margin-bottom: 10px; padding: 8px; }
    
    small { font-size: 85%; }
    strong, th { font-weight: bold; }
    
    td, td img { vertical-align: top; } 
    
    sub { vertical-align: sub; font-size: smaller; }
    sup { vertical-align: super; font-size: smaller; }
    
    blockquote { margin: 0 0 10px 20px; }

Note that several variables are used in these base elements. You can also see the layout of a single style. Taking a closer look at the `p` tag, we can see some ways of writing our CSS.

    p { margin-bottom: 10px; line-height: 18px; }

All of the styles are on 1 line. There is a space after the open bracket, and a space before the closing bracket. There is a space between a property and it's value, and there is a space between values. All values (especially the last one) are closed with a semi-colon. Below is an example of the same property without these spaces.

    p {margin-bottom:10px;line-height:18px;}

Yuck. While this code will still work, it is hard to read and becomes more difficult to manage. Same goes for writing out properties on separate lines. The document becomes too long to quickly read and understand.

### Extras

Mostly this is just the clearfix code. This should be the last section of CSS in the document.

    /* ------------------------------
        Extras 
    ------------------------------ */
    .clear { clear: both; }
    .clearfix:before, .clearfix:after { content: "\0020"; display: block; height: 0; visibility: hidden; }
    .clearfix:after { clear: both; }
    .clearfix { zoom: 1; }


### Main Sections

Main sections of the stylesheet should be written like the above example, with a comment heading at the top. Styles should be written in a similar pattern to the HTML. See below for an example order of the CSS sections.

- Reset
- Base HTML Elements
- Header
- Homepage Top (Rotator)
- Homepage Body
- Interior Body
- Interior Sidebar
- Footer
- Tendenci Overrides
- Extras
- Media Queries

## Template conventions

For the `homepage.html` and `default.html` templates, the following conventions apply.

### Extends and Loading libraries

An example `homepage.html` should start like this:

    {% load theme_tags %}
    {% load nav_tags %}
    {% load story_tags %}
    {% load base_tags %}
    
    {% theme_extends 'base.html' %}

Each library loaded at the top will make more template tags available for use. You should only include tag libraries that are used on the page, as loading unused libraries can increase page load times.

The `theme_tags` library is **required** as it allows us to extend the `base.html` template with the `theme_extends` tag. This is a bit different than other Django apps. This is done this way in Tendenci to allow for theme previewing.

The load for `base_tags` is not required, but is almost always used, so it should be included.

The load for `nav_tags` and `story_tags` are optional, but are used frequently.

### Available blocks

The following blocks are available to be used. You are free to make up other blocks, but these blocks are specifically referenced in the `base.html` template. These blocks do not apply to overridden templates or to included templates like `header.html` and `footer.html`.

Blocks are listed below in the order they typically appear in for a template.

`{% block title %}` - Loads into the `<title>` element in the document.

`{% block meta_keywords %}` - Loads into the content attribute of the `<meta name="keywords" />` element in the document.

`{% block meta_description %}` - Loads into the content attribute of the `<meta name="description" />` element in the document.

`{% block extra_head %}` - Contains meta information, CSS, and JS that needs to be included in the `<head>` element of the document. The only JS that should be included here is that for html5shim or tracking code other than Google Analytics.

`{% block body_ids %}` - This pulls in as the id attribute to the `<body>` element. While it is singular, it is recommended to only use one value. A typical value for this is 'home'.

`{% block body_classes %}` - Loads in to the class attribute of the `body` element.

`{% block html_body %}` - **Required**. Loads in the main `<body>` element of the document. This is where all of the HTML code should be included.

`{% block content_classes %}` - **Default.html only**. This block should be placed inside the class of the main content area. This is used on full-width pages like `/events/month/` or `/dashboard/` to ensure the width is overridden.

`{% block body %}` - **Default.html only**. This block will be populated with the content from Tendenci, like a page, article, or job. This block should be included, but empty.

`{% block sidebar %}` - **Default.html only**. This block should be wrapped around any sidebar content that is not intended to be displayed on wide pages like `/events/month/` or `/dashboard/`. Any content within this block will be removed from the page for those wide pages.

`{% block jquery_script %}` - **Rarely used**. This block is available to override Tendenci's default version of jQuery, 1.7.2. If this is used, be sure that the jQuery file is included in the theme and not referenced from a CDN.

`{% block extra_body %}` - Loads on at the end of the document just before `</body>`. JS files for rotators, sliders, or other functionality should be included here. **Note** jQuery 1.7.2 is already included by Tendenci and should not be added here. If you require a different version (most don't), please use the `{% block jquery_script %}` block.

### Referencing Theme media files

Within the templates, when referencing files in the `media` directory, you will need to prepend the path with `{{ THEME_URL }}`. For example, to pull in the default stylesheet, the following link would be included in the `extra_head` block:

     <link rel="stylesheet" href="{{ THEME_URL }}media/css/style.css" type="text/css"/>
     
For other files like javascript files, please follow this same pattern, like the example below:

    <script src="{{ THEME_URL }}media/js/jquery.cycle.all.min.js" type="text/javascript"></script>

### Common Template tags

These template tags are commonly used, and come from either the `base_tags` or the `theme_tags` library.

`theme_include 'header.html'` - This tag is used to include other templates. In this example, it's including a `header.html` file, but this could be replaced with other included templates like `footer.html`, `sidebar.html`, or another template used in the theme.

`{% image_url story.image size=954x386 crop=true quality=90 %}` - This tag is used to create a resized version of an image. The first argument, `story.image`, should be a `File` object. The other arguments include the size, option to crop or constrain, and the quaility.

## HTML and Class Name Conventions

Here are some conventions for designing a Tendenci theme. The code samples shown below are grouped by which template they are typically found in, but some designs may not apply to these rules.

### Homepage.html

#### Libraries

First, we start with our loaded tag libraries:

    {% load theme_tags %}
    {% load nav_tags %}
    {% load story_tags %}
    {% load base_tags %}
    
    <!-- Extends Tendenci Base Structure
    ================================================== -->
    {% theme_extends 'base.html' %}

Notice that we have a comment regarding the extends tag. We will use more of these comments in this style to aid developers that may be also working on our template.

#### SEO Meta    

Next, we define the SEO options for our homepage:

    {% block title %}Our Great Site for Tendenci Themes and Designs{% endblock %}
    {% block meta_description %}Our site specializes in Tendenci Theme Designs, Custom Theme Designs, and helping developers build their own custom Tendenci theme designs.{% endblock %}
    {% block meta_keywords %}Tendenci themes, tendenci designs, tendenci template help, tendenci theme standards, {{ SITE_GLOBAL_SITEPRIMARYKEYWORDS }}{% endblock %}

Notice that we included a setting in our `meta_keywords` block. The `{{ SITE_GLOBAL_SITEPRIMARYKEYWORDS }}` contains the primary keywords from the database setting. This setting, along with many others, is available in our template using the name of the setting from the database.

#### extra_body block

Next, we have `{% block extra_head %}` which includes our main stylesheet, our html5 shim, and some other meta defaults.

    {% block extra_head %}
    <!-- Mobile Specific Metas
    ================================================== -->
      <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    
    <!-- Favicons
    ================================================== -->
      <link rel="shortcut icon" href="{{ THEME_URL }}media/images/favicon.ico">
      <link rel="apple-touch-icon" href="{{ THEME_URL }}media/images/apple-touch-icon.png">
    
      <!-- CSS
    ================================================== -->
      <link rel="stylesheet" href="{{ THEME_URL }}media/css/styles.css" type="text/css"/>
    
    <!-- IE Specific Compatibility
    ================================================== -->
      <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
      <![endif]-->
      <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
      <![endif]-->
      <!--[if lt IE 9]>   
      <script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"></script>
      <![endif]-->
      
    {% endblock extra_head %}

Again, we have comments to indicate certain areas of the code. Note that the only javascript included so far is the html5 shiv and shims used for IE support.

#### Body ids and classes

Tendenci gives two tags to allow you to populate the `id` and `class` of the `<body>` element. This can be useful when needing to get more specific when identifying elements in CSS for things on included templates like the header or footer.

    {% block body_ids %}home{% endblock body_ids %}
    {% block body_classes %}home{% endblock body_classes %}

The convention is to use `home` on `homepage.html` and `sub` on `default.html`.

#### html_body block and includes

Next is `{% block html_body %}`, which includes the bulk of our html for the homepage.

    <!-- Primary Page Layout
    ================================================== -->
    {% block html_body %}
    <div class="wrapper">
    
      <div class="header">
        {% theme_include "header.html" %}
      </div> <!-- /.header -->
      
      ...
      
      <div class="footer">
        {% theme_include "footer.html" %}
      </div> <!-- /.footer -->
      
    </div> <!-- /.wrapper -->
    <!-- End Document
    ================================================== -->
    {% endblock html_body %}
  
The middle will be filled with whatever html is necessary for our homepage. Notice a few particular things.

- All of our elements are nested with two (2) spaces
- When we close elements, we add a comment indicating the class of the element that is being closed, like `<!-- /.header -->`
- We have similar comments around our block tags.
- We have our block name in our `{% endblock %}` tag. This is not required, but strongly recommended when there is lots of content between the start and end of the tag.
- We are using the `theme_include` tag to bring in our header and footer templates. The names of these templates are wrapped with double quotes like `"header.html"`.

#### extra_body tag

In this example, we are using jQuery cycle to rotate our stories. The stories are wrapped in `<div id="stories">`, which is used by our javascript.

    {% block extra_body %}
        <script src="{{ THEME_URL }}media/js/jquery.cycle.all.min.js" type="text/javascript"></script>

        <script type="text/javascript">
        $(document).ready(function() {
            $("#stories").cycle({
                timeout: 8000,
                speed: 2000,
                pager: '#stories-pager',
                pagerEvent: 'mouseover'
            });
        });
        </script>
    {% endblock %}

Notice, we did NOT include jQuery, because Tendenci already includes it for us. We only needed to include the additional library.

When starting our jQuery code, we load jQuery with the `$` to use the function. All of our code is inside `$(document).ready(function() {` to ensure that it does not run before all of our content has loaded.

Notice here, we did not include the name of our block in the `{% endblock %}` tag because we don't have very much content.

### Default.html

This is the interior page template, and it is very similar to the homepage.html template, with a few exceptions in the 'html_body' block.

#### Libraries

See the content for `homepage.html` and adjust for any extra libraries that are needed.

#### SEO Meta

Because this template is used for multiple pages, we do NOT include any of the SEO meta blocks in `default.html`.

#### extra_body block

See the content for `homepage.html` and adjust if any changes are made. This may require removing some stylesheets or elements that are only used on the homepage (like rotator styles).

#### Body ids and classes

See the content for `homepage.html` and change `home` to `sub`.

#### html_body block and includes

This section differs from `homepage.html` enough that all of it's code is below.

    <!-- Primary Page Layout
    ================================================== -->
    {% block html_body %}
    <div class="wrapper">
    
      <div class="header">
        {% theme_include "header.html" %}
      </div> <!-- /.header -->
      
      <div class="main-content {% block content_classes %}{% endblock %}">
        {% block body %}{% endblock %}    
      </div> <!-- /.main-content -->
      
      {% block sidebar %}
        <div class="sidebar">
          {% theme_include "sidebar.html" %}
        </div> <!-- /.sidebar -->
      {% endblock sidebar %}
      
      <div class="footer">
        {% theme_include "footer.html" %}
      </div> <!-- /.footer -->
      
    </div> <!-- /.wrapper -->
    <!-- End Document
    ================================================== -->
    {% endblock html_body %}
  
Notice the middle is filled in, where on `homepage.html` it was abbreviated. That has been replaced with a `<div>` for the main content which includes the `content_classes` block.

Below that, we have the sidebar, which is inside the `sidebar` block, and which also includes it's content from the `sidebar.html` template.

The rest of the template, like the parts for the header and footer, remain the same as the `homepage.html` template.

#### extra_body block

Often, this block is not included on `default.html`, because it is typically used for rotator features only found on the homepage.

If it is used because of javascript features on interior pages (like sliders in the sidebar or footer), be sure to remove any javascript that is only for the homepage (like cycle for rotators).


### Header.html

The html shown for this header is only an example for a very simple design. More detailed designs may need additional changes.

The header template does not include any `{% block %}` tags since it is included in other templates.

#### Libraries

Because the `header.html` template is included on other templates, we don't need to extend another template with `theme_extends`.

We DO need to load any libraries we use. The most common ones used in headers are shown below

    {% load nav_tags %}

If stories or boxes are included, please load those tags as well.

#### Content

    <header>
      <div class="logo">
        <img src="{{ THEME_URL }}media/images/logo.png" />
      </div> <!-- /.logo -->
      
      <div class="search">
        <form method="post" action="/search/" class="search-form">
          <input name="q" id="q" type="text" placeholder="Search" />
          <input type="submit" name="Go" value="GO" />
        </form>
      </div> <!-- /.search -->

      <div id="main-nav">
        {% nav 1 %}
      </div><!-- /#main-nav -->
    </header>

We have wrapped everything in a `<header>` tag, and then have different elements for the logo, search form, and the main nav.

The main navigation is included using `{% nav 1 %}`, which pulls in the html needed from the nav editor for Nav with the ID #1. The nav ids can be seen at `/navs/` on your site.


### Footer.html and Sidebar.html

Please see the description above for `header.html`, as all of these templates are included and work in a similar way.

## Full Theme Examples

There is a repository on github at [https://github.com/tendenci/tendenci-themes](https://github.com/tendenci/tendenci-themes) that includes several (15+) fully-built Tendenci themes. These themes can be used as examples to find different ways of loading dynamic content into your Tendenci theme.

