__FILENAME__ = conf
# -*- coding: utf-8 -*-
#
# Friture documentation build configuration file, created by
# sphinx-quickstart on Thu May 17 16:53:22 2012.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys, os

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
#extensions = ['sphinx.ext.pngmath', 'sphinx.ext.jsmath']
extensions = []

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Friture'
copyright = u'2012, Timothée Lecomte'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '0.7'
# The full version, including alpha/beta/rc tags.
release = '0.7'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'default'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'Frituredoc'


# -- Options for LaTeX output --------------------------------------------------

# The paper size ('letter' or 'a4').
#latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
#latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  ('index', 'Friture.tex', u'Friture Documentation',
   u'Timothée Lecomte', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Additional stuff for the LaTeX preamble.
#latex_preamble = ''

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'friture', u'Friture Documentation',
     [u'Timothée Lecomte'], 1)
]

########NEW FILE########
__FILENAME__ = about
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth�e Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
import friture.friture_rc
import friture
from friture.logwidget import LogWidget
from friture.statisticswidget import StatisticsWidget

aboutText = """
<p> <b>Friture %s</b> (dated %s)
<p> Friture is an application for real-time audio analysis.
<p> Written in Python, using PyQt, PyQwt, PyAudio, Numpy, SciPy, Cython, OpenGL, etc.
<p> License is GPLv3.
<p> Homepage: <a href="http://friture.org">http://friture.org</a>
<p> Send comments, ideas and bug reports to: <a href="mailto:contact@friture.org">contact@friture.org</a>
<p> Splash screen photo credit: <a href="http://www.flickr.com/photos/visual_dichotomy/3623619145/">visual.dichotomy</a> (CC BY 2.0)
""" %(friture.__version__, friture.__releasedate__)

class About_Dialog(QtGui.QDialog):
	def __init__(self, parent, logger, audiobackend, timer):
		QtGui.QDialog.__init__(self, parent)

		self.setObjectName("About_Dialog")
		self.resize(400, 300)
		self.setWindowTitle("About Friture")
		
		icon = QtGui.QIcon()
		icon.addPixmap(QtGui.QPixmap(":/images-src/window-icon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
		self.setWindowIcon(icon)
		self.verticalLayout = QtGui.QVBoxLayout(self)
		self.verticalLayout.setObjectName("verticalLayout")
		
		self.tabWidget = QtGui.QTabWidget(self)
		self.tabWidget.setObjectName("tabWidget")
		self.aboutTab = QtGui.QWidget()
		self.aboutTab.setObjectName("aboutTab")
		self.horizontalLayout = QtGui.QHBoxLayout(self.aboutTab)
		self.horizontalLayout.setObjectName("horizontalLayout")
		self.label_2 = QtGui.QLabel(self.aboutTab)
		self.label_2.setMinimumSize(QtCore.QSize(128, 128))
		self.label_2.setMaximumSize(QtCore.QSize(128, 128))
		self.label_2.setPixmap(QtGui.QPixmap(":/images-src/window-icon.svg"))
		self.label_2.setScaledContents(True)
		self.label_2.setObjectName("label_2")
		self.horizontalLayout.addWidget(self.label_2)
		self.label = QtGui.QLabel(self.aboutTab)
		self.label.setOpenExternalLinks( True ) 
		self.label.setObjectName("label")
		self.label.setText(aboutText)
		
		self.horizontalLayout.addWidget(self.label)
		self.tabWidget.addTab(self.aboutTab, "About")
		
		self.tab_stats = StatisticsWidget(self, logger, timer, audiobackend)
		self.tabWidget.addTab(self.tab_stats, "Statistics")
		
		self.tab_log = LogWidget(self, logger)
		self.tabWidget.addTab(self.tab_log, "Log")
		
		self.tabWidget.setCurrentIndex(0)
		
		self.buttonBox = QtGui.QDialogButtonBox(self)
		self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
		self.buttonBox.setStandardButtons(QtGui.QDialogButtonBox.Close)
		self.buttonBox.setObjectName("buttonBox")
		
		self.verticalLayout.addWidget(self.tabWidget)
		self.verticalLayout.addWidget(self.buttonBox)
		
		QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL("accepted()"), self.accept)
		QtCore.QObject.connect(self.buttonBox, QtCore.SIGNAL("rejected()"), self.reject)
		QtCore.QMetaObject.connectSlotsByName(self)



########NEW FILE########
__FILENAME__ = analyzer
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

import sys, os, platform
from PyQt4 import QtCore, QtOpenGL
# specifically import from PyQt4.QtGui for startup time improvement :
from PyQt4.QtGui import QMainWindow, QVBoxLayout, QErrorMessage, QApplication, QPixmap, QSplashScreen
from friture.ui_friture import Ui_MainWindow
from friture.about import About_Dialog # About dialog
from friture.settings import Settings_Dialog # Setting dialog
from friture.logger import Logger # Logging class
from friture.audiobuffer import AudioBuffer # audio ring buffer class
from friture.audiobackend import AudioBackend# audio backend class
from friture.centralwidget import CentralWidget
from friture.dockmanager import DockManager

# the display timer could be made faster when the processing
# power allows it, firing down to every 10 ms
SMOOTH_DISPLAY_TIMER_PERIOD_MS = 10

# the slow timer is used for text refresh
# Text has to be refreshed slowly in order to be readable.
# (and text painting is costly)
SLOW_TIMER_PERIOD_MS = 1000

STYLESHEET = """
"""
#QMainWindow::separator {
#background: black;
#width: 1px;
#height: 1px;
#}
#
#QMainWindow::separator:hover {
#background: black;
#width: 1px;
#height: 1px;
#}
#
#QToolBar {
#border: none;
#background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
#stop: 0 #a6a6a6, stop: 0.08 #7f7f7f,
#stop: 0.39999 #717171, stop: 0.4 #626262,
#stop: 0.9 #4c4c4c, stop: 1 #333333);
#}
#
#QToolButton {
#color: white;
#}
#"""

class Friture(QMainWindow, ):
	def __init__(self, logger):
		QMainWindow.__init__(self)

		# logger
		self.logger = logger

		# Setup the user interface
		self.ui = Ui_MainWindow()
		self.ui.setupUi(self)

		# sharedGLWidget is a hidden GL widget that will be used as a parent
		# to all QGLWidgets so that they have the same GL context, and can
		# share display lists, etc.
		self.sharedGLWidget = QtOpenGL.QGLWidget(self)
		self.sharedGLWidget.hide()

		# Initialize the audio data ring buffer
		self.audiobuffer = AudioBuffer(self.logger)

		# Initialize the audio backend
		self.audiobackend = AudioBackend(self.logger)

		# this timer is used to update widgets that just need to display as fast as they can
		self.display_timer = QtCore.QTimer()
		self.display_timer.setInterval(SMOOTH_DISPLAY_TIMER_PERIOD_MS) # constant timing

		# slow timer
		self.slow_timer = QtCore.QTimer()
		self.slow_timer.setInterval(SLOW_TIMER_PERIOD_MS) # constant timing

		self.about_dialog = About_Dialog(self, self.logger, self.audiobackend, self.slow_timer)
		self.settings_dialog = Settings_Dialog(self, self.logger, self.audiobackend)

		self.centralwidget = CentralWidget(self.ui.centralwidget, self.sharedGLWidget, self.logger, "central_widget", 0)
		self.centralLayout = QVBoxLayout(self.ui.centralwidget)
		self.centralLayout.setContentsMargins(0, 0, 0, 0)
		self.centralLayout.addWidget(self.centralwidget)

		self.dockmanager = DockManager(self, self.sharedGLWidget, self.logger)

		# timer ticks
		self.connect(self.display_timer, QtCore.SIGNAL('timeout()'), self.update_buffer)
		self.connect(self.display_timer, QtCore.SIGNAL('timeout()'), self.centralwidget.update)
		self.connect(self.display_timer, QtCore.SIGNAL('timeout()'), self.dockmanager.update)

		# toolbar clicks
		self.connect(self.ui.actionStart, QtCore.SIGNAL('triggered()'), self.timer_toggle)
		self.connect(self.ui.actionSettings, QtCore.SIGNAL('triggered()'), self.settings_called)
		self.connect(self.ui.actionAbout, QtCore.SIGNAL('triggered()'), self.about_called)
		self.connect(self.ui.actionNew_dock, QtCore.SIGNAL('triggered()'), self.dockmanager.new_dock)

		# restore the settings and widgets geometries
		self.restoreAppState()

		# start timers
		self.timer_toggle()
		self.slow_timer.start()
		
		self.logger.push("Init finished, entering the main loop")
	
	# slot
	def settings_called(self):
		self.settings_dialog.show()
	
	# slot
	def about_called(self):
		self.about_dialog.show()
	
	# event handler
	def closeEvent(self, event):
		self.saveAppState()
		event.accept()
	
	# method
	def saveAppState(self):
		settings = QtCore.QSettings("Friture", "Friture")
		
		settings.beginGroup("Docks")
		self.dockmanager.saveState(settings)
		settings.endGroup()
		
		settings.beginGroup("CentralWidget")
		self.centralwidget.saveState(settings)
		settings.endGroup()
		
		settings.beginGroup("MainWindow")
		windowGeometry = self.saveGeometry()
		settings.setValue("windowGeometry", windowGeometry)
		windowState = self.saveState()
		settings.setValue("windowState", windowState)
		settings.endGroup()

		settings.beginGroup("AudioBackend")
		self.settings_dialog.saveState(settings)
		settings.endGroup()
	
	# method
	def restoreAppState(self):
		settings = QtCore.QSettings("Friture", "Friture")

		settings.beginGroup("Docks")
		self.dockmanager.restoreState(settings)
		settings.endGroup()

		settings.beginGroup("CentralWidget")
		self.centralwidget.restoreState(settings)
		settings.endGroup()

		settings.beginGroup("MainWindow")
		self.restoreGeometry(settings.value("windowGeometry").toByteArray())
		self.restoreState(settings.value("windowState").toByteArray())
		settings.endGroup()
  
  		settings.beginGroup("AudioBackend")
		self.settings_dialog.restoreState(settings)
		settings.endGroup()

	# slot
	def timer_toggle(self):
		if self.display_timer.isActive():
			self.logger.push("Timer stop")
			self.display_timer.stop()
			self.ui.actionStart.setText("Start")
			self.centralwidget.pause()
			self.dockmanager.pause()
		else:
			self.logger.push("Timer start")
			self.display_timer.start()
			self.ui.actionStart.setText("Stop")
			self.centralwidget.restart()
			self.dockmanager.restart()

	# slot
	def update_buffer(self):
     		newpoints = self.audiobackend.update(self.audiobuffer.ringbuffer)
     		self.audiobuffer.set_newdata(newpoints)


def main():
	if platform.system() == "Windows":
		print "Running on Windows"
		# On Windows, redirect stderr to a file
		import imp, ctypes
		if (hasattr(sys, "frozen") or # new py2exe
			hasattr(sys, "importers") or # old py2exe
			imp.is_frozen("__main__")): # tools/freeze
				sys.stderr = open(os.path.expanduser("~/friture.exe.log"), "w")
		# set the App ID for Windows 7 to properly display the icon in the
		# taskbar.
		myappid = 'Friture.Friture.Friture.current' # arbitrary string
		try:
			ctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID(myappid)
		except:
			print "Could not set the app model ID. If the plaftorm is older than Windows 7, this is normal."

	app = QApplication(sys.argv)

	# Splash screen
	pixmap = QPixmap(":/images/splash.png")
	splash = QSplashScreen(pixmap)
	splash.show()
	splash.showMessage("Initializing the audio subsystem")
	app.processEvents()
	
	# Set the separator stylesheet here
	# As of Qt 4.6, separator width is not handled correctly
	# when the stylesheet is applied directly to the QMainWindow instance.
	# QtCreator workarounds it with a "minisplitter" special class
	app.setStyleSheet(STYLESHEET)
	
	# Logger class
	logger = Logger()
	
	window = Friture(logger)
	window.show()
	splash.finish(window)
	
	profile = "no" # "python" or "kcachegrind" or anything else to disable

	if len(sys.argv) > 1:
		if sys.argv[1] == "--python":
			profile = "python"
		#elif sys.argv[1] == "--kcachegrind":
			#profile = "kcachegrind"
		elif sys.argv[1] == "--no":
			profile = "no"
		else:
			print "command-line arguments (%s) not recognized" %sys.argv[1:]

	if profile == "python":
		import cProfile
		import pstats
		
		cProfile.runctx('app.exec_()', globals(), locals(), filename="friture.cprof")
		
		stats = pstats.Stats("friture.cprof")
		stats.strip_dirs().sort_stats('time').print_stats(20)
		stats.strip_dirs().sort_stats('cumulative').print_stats(20)  
  
		sys.exit(0)
	#elif profile == "kcachegrind":
		#import cProfile
		#import lsprofcalltree

		#p = cProfile.Profile()
		#p.run('app.exec_()')
		
		#k = lsprofcalltree.KCacheGrind(p)
		#data = open('cachegrind.out.00000', 'wb')
		#k.output(data)
		#data.close()

		## alternative code with pyprof2calltree instead of lsprofcalltree
		##import pyprof2calltree
		##pyprof2calltree.convert(p.getstats(), "cachegrind.out.00000") # save
		
		#sys.exit(0)
	else:
		sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = audiobackend
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtCore
from pyaudio import PyAudio, paInt16
from numpy import floor, int16, fromstring, vstack, iinfo, float64

# the sample rate below should be dynamic, taken from PyAudio/PortAudio
SAMPLING_RATE = 48000
FRAMES_PER_BUFFER = 1024 # FIXME this parameter seems to have no effect on the
# actual frames_per_buffer used by PortAudio. Is it a bug in PyAudio ?

class AudioBackend(QtCore.QObject):

	underflow = QtCore.pyqtSignal()

	def __init__(self, logger):
		QtCore.QObject.__init__(self)

		self.logger = logger
  
		self.duo_input = False

		self.logger.push("Initializing PyAudio")
		self.pa = PyAudio()

		# look for devices
		self.input_devices = self.get_input_devices()
		self.output_devices = self.get_output_devices()

		self.device = None
		self.first_channel = None
		self.second_channel = None

		# we will try to open all the input devices until one
		# works, starting by the default input device
		for device in self.input_devices:
			self.logger.push("Opening the stream")
			self.stream = self.open_stream(device)
			self.device = device

			self.logger.push("Trying to read from input device %d" %device)
			if self.try_input_stream(self.stream):
				self.logger.push("Success")
				break
			else:
				self.logger.push("Fail")

		if self.device <> None:
			self.first_channel = 0
			nchannels = self.get_current_device_nchannels()
	  		if nchannels == 1:
				self.second_channel = 0
			else:
	   			self.second_channel = 1

		# counter for the number of input buffer overflows
		self.xruns = 0

		self.chunk_number = 0
		
		self.buffer_timer_time = 0.

	# method
	def get_readable_devices_list(self):
		devices_list = []
		
		default_device_index = self.get_default_input_device()
		
		for device in self.input_devices:
			dev_info = self.pa.get_device_info_by_index(device)
			api = self.pa.get_host_api_info_by_index(dev_info['hostApi'])['name']

			if device is default_device_index:
				extra_info = ' (system default)'
			else:
				extra_info = ''
			
			nchannels = self.pa.get_device_info_by_index(device)['maxInputChannels']
   
			desc = "%s (%d channels) (%s) %s" %(dev_info['name'], nchannels, api, extra_info)
			
			devices_list += [desc]			

		return devices_list

	# method
	def get_readable_output_devices_list(self):
		devices_list = []
		
		default_device_index = self.get_default_output_device()
		
		for device in self.output_devices:
			dev_info = self.pa.get_device_info_by_index(device)
			api = self.pa.get_host_api_info_by_index(dev_info['hostApi'])['name']

			if device is default_device_index:
				extra_info = ' (system default)'
			else:
				extra_info = ''
			
			nchannels = self.pa.get_device_info_by_index(device)['maxOutputChannels']
   
			desc = "%s (%d channels) (%s) %s" %(dev_info['name'], nchannels, api, extra_info)
			
			devices_list += [desc]			

		return devices_list

	# method
	def get_default_input_device(self):
		try:
			index = self.pa.get_default_input_device_info()['index']
		except IOError:
			index = None

		return index

	# method
	def get_default_output_device(self):
		try:
			index = self.pa.get_default_output_device_info()['index']
		except IOError:
			index = None
		return 

	# method
	def get_device_count(self):
		# FIXME only input devices should be chosen, not all of them !
		return self.pa.get_device_count()

	# method
	# returns a list of input devices index, starting with the system default
	def get_input_devices(self):
		device_count = self.get_device_count()
		device_range = range(0, device_count)

		default_input_device = self.get_default_input_device()

		if default_input_device	<> None:
			# start by the default input device
			device_range.remove(default_input_device)
			device_range = [default_input_device] + device_range

		# select only the input devices by looking at the number of input channels
		input_devices = []
  		for device in device_range:
			n_input_channels = self.pa.get_device_info_by_index(device)['maxInputChannels']
			if n_input_channels > 0:
				input_devices += [device]
		
		return input_devices

	# method
	# returns a list of output devices index, starting with the system default
	def get_output_devices(self):
		device_count = self.get_device_count()
		device_range = range(0, device_count)

		default_output_device = self.get_default_output_device()

		if default_output_device <> None:
			# start by the default input device
			device_range.remove(default_output_device)
			device_range = [default_output_device] + device_range

		# select only the output devices by looking at the number of output channels
		output_devices = []
  		for device in device_range:
			n_output_channels = self.pa.get_device_info_by_index(device)['maxOutputChannels']
			if n_output_channels > 0:
				output_devices += [device]
		
		return output_devices

	# method
	def select_input_device(self, device):
		# save current stream in case we need to restore it
		previous_stream = self.stream
		previous_device = self.device

		self.stream = self.open_stream(device)
		self.device = device

		self.logger.push("Trying to read from input device #%d" % (device))
		if self.try_input_stream(self.stream):
			self.logger.push("Success")
			previous_stream.close()
			success = True   
   
			self.first_channel = 0
			nchannels = self.get_current_device_nchannels()
  			if nchannels == 1:				
				self.second_channel = 0
			else:
   				self.second_channel = 1
		else:
			self.logger.push("Fail")
			self.stream.close()
			self.stream = previous_stream
			self.device = previous_device
			success = False

		return success, self.device

	# method
	def select_first_channel(self, index):
		self.first_channel = index
		success = True
		return success, self.first_channel

	# method
	def select_second_channel(self, index):
		self.second_channel = index
		success = True
		return success, self.second_channel

	# method
	def open_stream(self, device):
		# by default we open the device stream with all the channels
		# (interleaved in the data buffer)
		maxInputChannels = self.pa.get_device_info_by_index(device)['maxInputChannels']
		stream = self.pa.open(format=paInt16, channels=maxInputChannels, rate=SAMPLING_RATE, input=True,
				frames_per_buffer=FRAMES_PER_BUFFER, input_device_index=device)
		return stream

	# method
	# return the index of the current input device in the input devices list
	# (not the same as the PortAudio index, since the latter is the index
	# in the list of *all* devices, not only input ones)
	def get_readable_current_device(self):
		i = 0
		for device in self.input_devices:
			if device == self.device:
				break
			else:
				i += 1
		return i

	# method
	def get_readable_current_channels(self):			
		dev_info = self.pa.get_device_info_by_index(self.device)  
		nchannels = dev_info['maxInputChannels']

		if nchannels == 2:
			channels = ['L', 'R']
		else:
			channels = []
   			for channel in range(0, dev_info['maxInputChannels']):
				channels += ["%d" %channel]			
			
		return channels

	# method
	def get_current_first_channel(self):
		return self.first_channel

	# method
	def get_current_second_channel(self):
		return self.second_channel

	# method	
	def get_current_device_nchannels(self):
		return self.pa.get_device_info_by_index(self.device)['maxInputChannels']

	# method
	# return True on success
	def try_input_stream(self, stream):
		n_try = 0
		while stream.get_read_available() < FRAMES_PER_BUFFER and n_try < 1000000:
			n_try +=1

		if n_try == 1000000:
			return False
		else:
			lat_ms = 1000*stream.get_input_latency()
			self.logger.push("Device claims %d ms latency" %(lat_ms))
			return True

  	# try to update the audio buffer
	# return the number of chunks retrieved, and the time elapsed
	def update(self, ringbuffer):
		t = QtCore.QTime()
		t.start()

		channel = self.get_current_first_channel()
		nchannels = self.get_current_device_nchannels()
  		if self.duo_input:
                            channel_2 = self.get_current_second_channel()
		
		chunks = 0
		
		# ask for how much data is available
		available = self.stream.get_read_available()

		# read what is available
		# we read by multiples of FRAMES_PER_BUFFER, otherwise segfaults !

		#print available, int(floor(available/FRAMES_PER_BUFFER))
		#FIXME no less than 2048 samples at each stream read ??

		available = int(floor(available/FRAMES_PER_BUFFER))
		for j in range(0, available):
			try:
				rawdata = self.stream.read(FRAMES_PER_BUFFER)
			except IOError as inst:
				# FIXME specialize this exception handling code
				# to treat overflow errors particularly
				self.xruns += 1
				print "Caught an IOError on stream read.", inst
				self.underflow.emit()
				break
			
			intdata_all_channels = fromstring(rawdata, int16)

			int16info = iinfo(int16)
			norm_coeff = max(abs(int16info.min), int16info.max)
			floatdata_all_channels = intdata_all_channels.astype(float64)/float(norm_coeff)


			floatdata1 = floatdata_all_channels[channel::nchannels]

			if self.duo_input:                            			
                                       floatdata2 = floatdata_all_channels[channel_2::nchannels]
                                       floatdata = vstack((floatdata1, floatdata2))
			else:  
                                       floatdata = floatdata1
                                       floatdata.shape = (1, FRAMES_PER_BUFFER)
			
			# update the circular buffer
			ringbuffer.push(floatdata)
			chunks += 1

		self.chunk_number += chunks
		self.buffer_timer_time = (95.*self.buffer_timer_time + 5.*t.elapsed())/100.

		return chunks*FRAMES_PER_BUFFER
  
	def set_single_input(self):
		self.duo_input = False

	def set_duo_input(self):
		self.duo_input = True

	# returns the stream time in seconds
	def get_stream_time(self):
		return self.stream.get_time()

########NEW FILE########
__FILENAME__ = audiobuffer
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from friture.ringbuffer import RingBuffer
from friture.audiobackend import SAMPLING_RATE

FRAMES_PER_BUFFER = 1024

class AudioBuffer():
	def __init__(self, logger):
		self.ringbuffer = RingBuffer(logger)
		self.newpoints = 0

	def data(self, length):
		return self.ringbuffer.data(length)

	def data_older(self, length, delay_samples):
		return self.ringbuffer.data_older(length, delay_samples)

	def newdata(self):
		return self.data(self.newpoints)

	def set_newdata(self, newpoints):
		self.newpoints = newpoints

	def data_indexed(self, start, length):
		return self.ringbuffer.data_indexed(start, length)

########NEW FILE########
__FILENAME__ = audioproc
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from numpy import linspace, log2, floor, log10, cos, arange, pi
from numpy.fft import rfft
from friture.audiobackend import SAMPLING_RATE
from friture.norm_square import pyx_norm_square

#from cochlear import MakeERBFilters, ERBFilterBank, frequencies

class audioproc():
	def __init__(self, logger):
		self.freq = linspace(0, SAMPLING_RATE/2, 10)
		self.A = 0.*self.freq
		self.B = 0.*self.freq
		self.C = 0.*self.freq
		self.maxfreq = 1.
		self.decimation = 1
		self.window = arange(0,1)
		self.size_sq = 1.

		self.fft_size = 10

		# store the logger instance
		self.logger = logger

	def analyzelive(self, samples):
		samples = self.decimate(samples)

		#uncomment the following to disable the decimation altogether
		#decimation = 1

		# FFT for a linear transformation in frequency scale
		fft = rfft(samples*self.window)
		spectrum = self.norm(fft)

		return spectrum

	def norm(self, fft):
		# FIXME I don't need abs, since I do a log anyway after that
		# real**2 + imag**2 is enough, the sqrt is superfluous
		# This should be done in Cython, too costly in numpy
		return pyx_norm_square(fft, 1./self.size_sq)
		#return (fft.real**2 + fft.imag**2) / self.size_sq

	def decimate(self, samples):
		# first we remove as much points as possible
 		if self.decimation > 1:
			samples.shape = len(samples)/self.decimation, self.decimation
			#the full way
			#samples = samples.mean(axis=1)
			#the simplest way
			samples = samples[:,0]
		return samples

	def set_fftsize(self, fft_size):
		if fft_size <> self.fft_size:
			self.fft_size = fft_size
			self.update_freq_cache()
			self.update_window()
			self.update_size()

	def set_maxfreq(self, maxfreq):
		if maxfreq <> self.maxfreq:
			self.maxfreq = maxfreq
			decimation = SAMPLING_RATE / (2*maxfreq)
			self.decimation = 2**(floor(log2(decimation)))

			if self.decimation < 1:
				self.decimation = 1

			self.update_freq_cache()
			self.update_window()
			self.update_size()

		self.logger.push("audioproc: will decimate %d times" % self.decimation)

	def get_freq_scale(self):
		return self.freq

	def get_freq_weighting(self):
		return self.A, self.B, self.C

	def update_size(self):
		self.size_sq = float(self.fft_size/self.decimation)**2

	def update_window(self):
		N = self.fft_size/self.decimation
		n = arange(0, N)
		# Hann window : better frequency resolution than the rectangular window
		self.window = 0.5*(1. - cos(2*pi*n/(N-1)))
		self.logger.push("audioproc: updating window")

	def update_freq_cache(self):
		if len(self.freq) <> self.fft_size/(2*self.decimation) + 1 :
			self.logger.push("audioproc: updating self.freq cache")
			self.freq = linspace(0, SAMPLING_RATE/(2*self.decimation), self.fft_size/(2*self.decimation) + 1)

			# compute psychoacoustic weighting. See http://en.wikipedia.org/wiki/A-weighting
			f = self.freq
			Rc = 12200.**2*f**2 / ((f**2 + 20.6**2)*(f**2 + 12200.**2))
			Rb = 12200.**2*f**3 / ((f**2 + 20.6**2)*(f**2 + 12200.**2)*((f**2 + 158.5**2)**0.5))
			Ra = 12200.**2*f**4 / ((f**2 + 20.6**2)*(f**2 + 12200.**2)*((f**2 + 107.7**2)**0.5) * ((f**2 + 737.9**2)**0.5))
			self.C = 0.06 + 20.*log10(Rc)
			self.B = 0.17 + 20.*log10(Rb)
			self.A = 2.0  + 20.*log10(Ra)


	# above is done a FFT of the signal. This is ok for linear frequency scale, but
	# not satisfying for logarithmic scale, which is much more adapted to voice or music
	# analysis
	# Instead a constant Q transform should be used

	# Alternatively, we could use a ear/cochlear model : logarithmic
	# frequency scale, 4000 logarithmic-spaced bins, quality factors
	# determined from mechanical model, and 50 ms smoothing afterwards
	# for the sensor cell response time. The problem here comes from the
	# implementation: how to do it cleverly ?
	# on top of that, we could add the reponse of the middle ear, which is
	# a roughly band-pass filter centered around 1 kHz (see psychoacoustic
	# models)

	#def analyzelive_cochlear(self, samples, num_channels, lowfreq, maxfreq):
	#	samples -= samples.mean()
	#
	#	fs = 16000.

	#	[ERBforward, ERBfeedback] = MakeERBFilters(SAMPLING_RATE, num_channels, lowfreq)
	#	filtered_samples = ERBFilterBank(ERBforward, ERBfeedback, samples)

	#	spectrum = (abs(filtered_samples)**2).mean(axis=1)
	#	self.freq = frequencies(SAMPLING_RATE, num_channels, lowfreq)
	#
	#	return spectrum[::-1], self.freq[::-1]

########NEW FILE########
__FILENAME__ = centralwidget
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
from friture.levels import Levels_Widget
from friture.spectrum import Spectrum_Widget
from friture.spectrogram import Spectrogram_Widget
from friture.octavespectrum import OctaveSpectrum_Widget
from friture.scope import Scope_Widget
from friture.generator import Generator_Widget
from friture.delay_estimator import Delay_Estimator_Widget
from friture.controlbar import ControlBar
from friture.defaults import DEFAULT_CENTRAL_WIDGET

class CentralWidget(QtGui.QWidget):
	def __init__(self, parent, sharedGLWidget, logger, name, type = 0):
		QtGui.QWidget.__init__(self, parent)
		
		self.setObjectName(name)
		
		self.sharedGLWidget = sharedGLWidget

		self.logger = logger
		
		self.controlBar = ControlBar(self)
				
		self.connect(self.controlBar.comboBox_select, QtCore.SIGNAL('activated(int)'), self.widget_select)
		self.connect(self.controlBar.settingsButton, QtCore.SIGNAL('clicked(bool)'), self.settings_slot)

		self.label = QtGui.QLabel(self)
		self.label.setText(" Central dock ") # spaces before and after for nicer alignment
		self.controlBar.layout.insertWidget(0, self.label)
		
		self.layout = QtGui.QVBoxLayout(self)
		self.layout.addWidget(self.controlBar)
		self.layout.setContentsMargins(0, 0, 0, 0)
		self.setLayout(self.layout)
		
		self.audiowidget = None
		self.widget_select(type)

	# slot
	def widget_select(self, item):
		if self.audiowidget is not None:
		    self.audiowidget.close()
		    self.audiowidget.deleteLater()
		
		self.type = item
		
		if item is 0:
			self.audiowidget = Levels_Widget(self, self.logger)
		elif item is 1:
			self.audiowidget = Scope_Widget(self, self.logger)
		elif item is 2:
			self.audiowidget = Spectrum_Widget(self, self.sharedGLWidget, self.logger)
		elif item is 3:
			self.audiowidget = Spectrogram_Widget(self, self.parent().parent().audiobackend, self.logger)
		elif item is 4:
			self.audiowidget = OctaveSpectrum_Widget(self, self.logger)
		elif item is 5:
			self.audiowidget = Generator_Widget(self, self.parent().parent().audiobackend, self.logger)
		elif item is 6:
			self.audiowidget = Delay_Estimator_Widget(self, self.logger)

		self.audiowidget.set_buffer(self.parent().parent().audiobuffer)

		self.layout.addWidget(self.audiowidget)
		
		self.controlBar.comboBox_select.setCurrentIndex(item)

	def update(self):
		if self.audiowidget <> None:
			self.audiowidget.update()

	def pause(self):
		if self.audiowidget <> None:
			try:
				self.audiowidget.pause()
			except AttributeError:
				pass

	def restart(self):
		if self.audiowidget <> None:
			try:
				self.audiowidget.restart()
			except AttributeError:
				pass

	# slot
	def settings_slot(self, checked):
		self.audiowidget.settings_called(checked)

	# method
	def saveState(self, settings):
		settings.setValue("type", self.type)
		self.audiowidget.saveState(settings)
	
	# method
	def restoreState(self, settings):
		(type, ok) = settings.value("type", DEFAULT_CENTRAL_WIDGET).toInt()
		self.widget_select(type)
		self.audiowidget.restoreState(settings)

########NEW FILE########
__FILENAME__ = classplot
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from numpy import linspace, sin
from PyQt4 import Qt, QtGui
import PyQt4.Qwt5 as Qwt

class ClassPlot(Qwt.QwtPlot):
	def __init__(self, *args):
		Qwt.QwtPlot.__init__(self, *args)

		# set plot layout
		self.plotLayout().setMargin(0)
		self.plotLayout().setCanvasMargin(0)
		self.plotLayout().setAlignCanvasToScales(True)

		self.setAxisScale(Qwt.QwtPlot.yLeft, -1., 1.)

		# insert a few curves
		self.curve = Qwt.QwtPlotCurve()
		self.curve.setPen(QtGui.QPen(Qt.Qt.red))
		#self.curve.setRenderHint(Qwt.QwtPlotItem.RenderAntialiased)
		self.curve.attach(self)

		# temporarly initialize some data
		x = linspace(0.0, 10.0, 11)
		self.curve.setData(x, sin(x))
		
		# set the size policy to "Preferred" to allow the widget to be shrinked under the default size, which is quite big
		self.setSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)

	def setdata(self,x,y):
		# FIXME the following raises issues with the peaks display in the spectrum
		# we don't need so many points
		#while len(y) > 2*self.canvas().width():
			#x = (x[:-1:2] + x[1::2])/2.
			#y = (y[:-1:2] + y[1::2])/2.
		self.curve.setData(x,y)

########NEW FILE########
__FILENAME__ = controlbar
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore

STYLESHEET = """
"""

#QWidget#controlWidget, QWidget#floatingcontrolWidget {
#border: none;
#background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
#stop: 0 #a6a6a6, stop: 0.08 #7f7f7f,
#stop: 0.39999 #717171, stop: 0.4 #626262,
#stop: 0.9 #4c4c4c, stop: 1 #333333);
#/* padding: 0px; */

#}

#QComboBox {
#color: white;
#border-style: solid;
#border-color: black;
#border-top-width: 0px;
#border-bottom-width: 0px;
#border-left-width: 0px;
#border-right-width: 1px;
#background-color: rgba(255,255,255,10%);
#min-height:20px;
#padding: 1px 10px 1px 3px;
#}

#QComboBox::drop-down {
#border: none;
#subcontrol-position: center right;
#subcontrol-origin: padding;
#/* border-left-width: 1px;*/
#/* border-left-color: darkgray;*/
#/* border-left-style: solid;*/ /* just a single line */
#/* border-top-right-radius: 3px;*/ /* same radius as the QComboBox */
#/* border-bottom-right-radius: 3px;*/
#}

#QComboBox::down-arrow {
#image: url(:/dock-close.svg);
#width: 10px;
#height: 10px;
#}

#QComboBox::down-arrow:on { /* shift the arrow when popup is open */
#top: 1px;
#left: 1px;
#}

#QComboBox:hover {
#background-color: rgba(255,255,255,20%);
#}

#QComboBox:open {
#background-color: rgba(255,255,255,30%);
#}

#QToolButton {
#background-color: rgba(255,255,255,10%);
#/* qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
#stop: 0 #a6a6a6, stop: 0.08 #7f7f7f,
#stop: 0.39999 #717171, stop: 0.4 #626262,
#stop: 0.9 #4c4c4c, stop: 1 #333333); */
#border-style: solid;
#border-color: black;
#border-top-width: 0px;
#border-bottom-width: 0px;
#border-left-width: 1px;
#border-right-width: 0px;
#/*border: none;*/
#/*padding: 0px;*/
#/*margin: 0px;*/
#/*icon-size: 10px;*/
#/*min-width:20px;*/
#min-height:20px;
#max-height:20px;
#/*text-align: center right;*/
#}

#QToolButton:hover {
#background-color: rgba(255,255,255,20%);
#}

#QToolButton:pressed {
#background-color: rgba(255,255,255,30%);
#}
#"""

class ControlBar(QtGui.QWidget):
	def __init__(self, parent):
		QtGui.QWidget.__init__(self, parent)
		
		self.setObjectName("controlBar")
		
		self.layout = QtGui.QHBoxLayout(self)
		
		self.comboBox_select = QtGui.QComboBox(self)
		self.comboBox_select.addItem("Levels")
		self.comboBox_select.addItem("Scope")
		self.comboBox_select.addItem("FFT Spectrum")
		self.comboBox_select.addItem("2D Spectrogram")
		self.comboBox_select.addItem("Octave Spectrum")
		self.comboBox_select.addItem("Generator")
		self.comboBox_select.addItem("Delay Estimator")
		self.comboBox_select.setCurrentIndex(0)
		self.comboBox_select.setToolTip("Select the type of audio widget")
		
		self.settingsButton = QtGui.QToolButton (self)
		self.settingsButton.setToolTip("Customize the audio widget")
				
		settings_icon = QtGui.QIcon()
		settings_icon.addPixmap(QtGui.QPixmap(":/images-src/dock-settings.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
		self.settingsButton.setIcon(settings_icon)
		
		self.layout.addWidget(self.comboBox_select)
		self.layout.addWidget(self.settingsButton)
		self.layout.addStretch()
		
		self.setLayout(self.layout)
		
		self.setMaximumHeight(24)
		self.layout.setContentsMargins(0, 0, 0, 0)
		self.layout.setSpacing(0)
		self.setStyleSheet(STYLESHEET)

########NEW FILE########
__FILENAME__ = defaults
DEFAULT_CENTRAL_WIDGET = 2 # FFT Spectrum

DEFAULT_DOCKS = [3, # spectrogram
                 4] # octave spectrum

########NEW FILE########
__FILENAME__ = delay_estimator
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
from numpy import argmax
import numpy
from numpy.fft import rfft, irfft
from filter import decimate
from friture import generated_filters
from ringbuffer import RingBuffer
from friture.logger import PrintLogger

from friture.audiobackend import SAMPLING_RATE

DEFAULT_DELAYRANGE = 1 # default delay range is 1 second

def subsampler(Ndec, bdec, adec, x, zis):      
    x_dec = x

    # FIXME problems when x is smaller than filter coeff

    # do not run on empty arrays, otherwise bad artefacts on the output !!
    if x.size == 0:
        return x, zis
    
    if zis == None:
        for i in range(Ndec):
            x_dec, zf = decimate(bdec, adec, x_dec)
        return x_dec, None
    else:
        zfs = []
        for i, zi in zip(range(Ndec), zis):
            x_dec, zf = decimate(bdec, adec, x_dec, zi=zi)
            # zf can be reused to restart the filter
            zfs += [zf]
        return x_dec, zfs

# build a proper array of zero initial conditions to start the subsampler
def subsampler_filtic(Ndec, bdec, adec):
    zfs = []
    for i in range(Ndec):
        l = max(len(bdec), len(adec)) - 1
        zfs += [numpy.zeros(l)]
    return zfs    

def generalized_cross_correlation(d0, d1):
    # substract the means
    # (in order to get a normalized cross-correlation at the end)
    d0 -= d0.mean()
    d1 -= d1.mean()

    # Hann window to mitigate non-periodicity effects
    window = numpy.hanning(len(d0))

    # compute the cross-correlation
    D0 = rfft(d0*window)
    D1 = rfft(d1*window)
    D0r = D0.conjugate()
    G = D0r*D1
    #G = (G==0.)*1e-30 + (G<>0.)*G
    #W = 1. # frequency unweighted
    #W = 1./numpy.abs(G) # "PHAT"
    absG = numpy.abs(G)
    m = max(absG)
    W = 1./(1e-10*m + absG)
    #D1r = D1.conjugate(); G0 = D0r*D0; G1 = D1r*D1; W = numpy.abs(G)/(G0*G1) # HB weighted
    Xcorr = irfft(W*G)
    #Xcorr_unweighted = irfft(G)
    #numpy.save("d0.npy", d0)
    #numpy.save("d1.npy", d1)
    #numpy.save("Xcorr.npy", Xcorr)

    return Xcorr

class Delay_Estimator_Widget(QtGui.QWidget):
    def __init__(self, parent = None, logger = PrintLogger()):
        QtGui.QWidget.__init__(self, parent)

        self.audiobuffer = None
        self.logger = logger
        
        self.previous_delay_message = ""
        self.previous_correlation_message = ""
        self.previous_polarity_message = ""
        self.previous_channelInfo_message = ""
        
        self.setObjectName("Delay_Estimator_Widget")
        self.layout = QtGui.QFormLayout(self)
        self.layout.setObjectName("layout")
        
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setWeight(75)
        font.setBold(True)
        
        self.delay_label = QtGui.QLabel(self)
        self.delay_label.setFont(font)
        self.delay_label.setObjectName("delay_label")
        
        self.delayText_label = QtGui.QLabel(self)
        self.delayText_label.setObjectName("delayText_label")
        self.delayText_label.setText("Delay:")

        self.correlation_label = QtGui.QLabel(self)
        self.correlation_label.setObjectName("Correlation_label")
        
        self.correlationText_label = QtGui.QLabel(self)
        self.correlationText_label.setObjectName("correlationText_label")
        self.correlationText_label.setText("Confidence:")

        self.polarity_label = QtGui.QLabel(self)
        self.polarity_label.setFont(font)
        self.polarity_label.setObjectName("polarity_label")
        
        self.polarityText_label = QtGui.QLabel(self)
        self.polarityText_label.setObjectName("polarityText_label")
        self.polarityText_label.setText("Polarity:")
        
        self.channelInfo_label = QtGui.QLabel(self)
        self.channelInfo_label.setObjectName("channelInfo_label")
        
        self.layout.addRow(self.delayText_label, self.delay_label)
        self.layout.addRow(self.correlationText_label, self.correlation_label)
        self.layout.addRow(self.polarityText_label, self.polarity_label)
        self.layout.addRow(None, self.channelInfo_label)
        
        self.settings_dialog = Delay_Estimator_Settings_Dialog(self, self.logger)
        
        # We will decimate several times
        # no decimation => 1/fs = 23 µs resolution
        # 1 ms resolution => fs = 1000 Hz is enough => can divide the sampling rate by 44 !
        # if I decimate 2 times (2**2 = 4 => 0.092 ms (3 cm) resolution)!
        # if I decimate 3 times (2**3 = 8 => 0.184 ms (6 cm) resolution)!
        # if I decimate 4 times (2**4 = 16 => 0.368 ms (12 cm) resolution)!
        # if I decimate 5 times (2**5 = 32 => 0.7 ms (24 cm) resolution)!
        # (actually, I could fit a gaussian on the cross-correlation peak to get
        # higher resolution even at low sample rates)
        self.Ndec = 2
        self.subsampled_sampling_rate = SAMPLING_RATE/2**(self.Ndec)
        [self.bdec, self.adec] = generated_filters.params['dec']
        self.zfs0 = subsampler_filtic(self.Ndec, self.bdec, self.adec)
        self.zfs1 = subsampler_filtic(self.Ndec, self.bdec, self.adec)

        # ringbuffers for the subsampled data        
        self.ringbuffer0 = RingBuffer(self.logger)
        self.ringbuffer1 = RingBuffer(self.logger)
        
        self.delayrange_s = DEFAULT_DELAYRANGE # confidence range
        
        self.old_Xcorr = None

        self.old_index = 0

    # method
    def set_buffer(self, buffer):
        self.audiobuffer = buffer

    # method
    def update(self):
        if not self.isVisible():
            return

        # temporary buffer just to check the data shape
        floatdata = self.audiobuffer.data(2)

        if floatdata.shape[0] == 1:
            message = """Delay estimator only works
with two channels.
Select two-channels mode
in the setup window."""
            if message <> self.previous_channelInfo_message:
                self.previous_delay_message = "N/A ms\n(N/A m)"
                self.delay_label.setText(self.previous_delay_message)
                self.previous_correlation_message = "N/A %"
                self.correlation_label.setText(self.previous_correlation_message)
                self.previous_polarity_message = "N/A"
                self.polarity_label.setText(self.previous_polarity_message)
                self.channelInfo_label.setText(message)
                self.previous_channelInfo_message = message
        else:
            #get the fresh data
            floatdata = self.audiobuffer.newdata()
            # separate the channels
            x0 = floatdata[0,:]
            x1 = floatdata[1,:]
            #subsample them
            x0_dec, self.zfs0 = subsampler(self.Ndec, self.bdec, self.adec, x0, self.zfs0)
            x1_dec, self.zfs1 = subsampler(self.Ndec, self.bdec, self.adec, x1, self.zfs1)
            # push to a 1-second ring buffer
            x0_dec.shape = (1, x0_dec.size)
            x1_dec.shape = (1, x1_dec.size)
            self.ringbuffer0.push(x0_dec)
            self.ringbuffer1.push(x1_dec)

            # we need to maintain an index of where we are in the buffer
            index = self.ringbuffer0.offset
            available = index - self.old_index

            if available < 0:
                #ringbuffer must have grown or something...
                available = 0
                self.old_index = index

            time = 2*self.delayrange_s
            length = time*self.subsampled_sampling_rate
            overlap = 0.5
            needed = int(overlap*length)

            realizable = int(available/needed)

            #print available, needed, realizable

            for i in range(realizable):
                self.old_index += int(needed)

                # retrieve data
                d0 = self.ringbuffer0.data_indexed(self.old_index, length)
                d1 = self.ringbuffer1.data_indexed(self.old_index, length)
                d0.shape = (d0.size)
                d1.shape = (d1.size)
                std0 = numpy.std(d0)
                std1 = numpy.std(d1)
                if std0>0. and std1>0.:
                    Xcorr = generalized_cross_correlation(d0, d1)

                    if self.old_Xcorr != None and self.old_Xcorr.shape == Xcorr.shape:
                        # smoothing
                        alpha = 0.3
                        smoothed_Xcorr = alpha*Xcorr + (1. - alpha)*self.old_Xcorr
                    else:
                        smoothed_Xcorr = Xcorr
                    
                    absXcorr = numpy.abs(smoothed_Xcorr)
                    i = argmax(absXcorr)

                    # normalize
                    #Xcorr_max_norm = Xcorr_unweighted[i]/(d0.size*std0*std1)
                    Xcorr_extremum = smoothed_Xcorr[i]
                    Xcorr_max_norm = abs(smoothed_Xcorr[i])/(3*numpy.std(smoothed_Xcorr))
                    delay_ms = 1e3*float(i)/self.subsampled_sampling_rate

                    # delays larger than the half of the window most likely are actually negative
                    if delay_ms > 1e3*time/2.:
                        delay_ms -= 1e3*time
                
                    #numpy.save("Xcorr_%d_%.1f.npy" %(i,delay_ms), Xcorr)
                    #numpy.save("smoothed_Xcorr%d_%.1f.npy" %(i,delay_ms), smoothed_Xcorr)

                    # store for smoothing
                    self.old_Xcorr = smoothed_Xcorr
                else:
                    delay_ms = 0.
                    Xcorr_max_norm = 0.
                    Xcorr_extremum = 0.

                # debug wrong phase detection
                #if Xcorr[i] < 0.:
                #    numpy.save("Xcorr.npy", Xcorr)

                c = 340. # speed of sound, in meters per second (approximate)
                distance_m = delay_ms*1e-3*c

                # home-made measure of the significance
                slope = 0.12
                p = 3
                x = (Xcorr_max_norm>1.)*(Xcorr_max_norm-1.)
                x = (slope*x)**p
                correlation = int((x/(1. + x))*100)
                
                delay_message = "%.1f ms\n= %.2f m" %(delay_ms, distance_m)
                correlation_message = "%d%%" %(correlation)
                if Xcorr_extremum >= 0:
                    polarity_message = "In-phase"
                else:
                    polarity_message = "Reversed phase"                
                channelInfo_message = ""

                if delay_message <> self.previous_delay_message:
                    self.delay_label.setText(delay_message)
                    self.previous_delay_message = delay_message
                if correlation_message <> self.previous_correlation_message:
                    self.correlation_label.setText(correlation_message)
                    self.previous_correlation_message = correlation_message
                if polarity_message <> self.previous_polarity_message:
                    self.polarity_label.setText(polarity_message)
                    self.previous_polarity_message = polarity_message
                if channelInfo_message <> self.previous_channelInfo_message:
                    self.channelInfo_label.setText(channelInfo_message)
                    self.previous_channelInfo_message = channelInfo_message
    
    def set_delayrange(self, delay_s):
        self.delayrange_s = delay_s
    
    # slot
    def settings_called(self, checked):
        self.settings_dialog.show()

    # method
    def saveState(self, settings):
        self.settings_dialog.saveState(settings)
    
    # method
    def restoreState(self, settings):
        self.settings_dialog.restoreState(settings)

class Delay_Estimator_Settings_Dialog(QtGui.QDialog):
    def __init__(self, parent, logger):
        QtGui.QDialog.__init__(self, parent)
        
        self.logger = logger
        
        self.setWindowTitle("Delay estimator settings")
        
        self.formLayout = QtGui.QFormLayout(self)
        
        self.doubleSpinBox_delayrange = QtGui.QDoubleSpinBox(self)
        self.doubleSpinBox_delayrange.setDecimals(1)
        self.doubleSpinBox_delayrange.setMinimum(0.1)
        self.doubleSpinBox_delayrange.setMaximum(1000.0)
        self.doubleSpinBox_delayrange.setProperty("value", DEFAULT_DELAYRANGE)
        self.doubleSpinBox_delayrange.setObjectName("doubleSpinBox_delayrange")
        self.doubleSpinBox_delayrange.setSuffix(" s")

        self.formLayout.addRow("Delay range (maximum delay that is reliably estimated):", self.doubleSpinBox_delayrange)
        
        self.setLayout(self.formLayout)
        
        self.connect(self.doubleSpinBox_delayrange, QtCore.SIGNAL('valueChanged(double)'), self.parent().set_delayrange)

    # method
    def saveState(self, settings):
        settings.setValue("delayRange", self.doubleSpinBox_delayrange.value())

    # method
    def restoreState(self, settings):
        (delayRange, ok) = settings.value("delayRange", DEFAULT_DELAYRANGE).toDouble()
        self.doubleSpinBox_delayrange.setValue(delayRange)

########NEW FILE########
__FILENAME__ = dock
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
from friture.levels import Levels_Widget
from friture.spectrum import Spectrum_Widget
from friture.spectrogram import Spectrogram_Widget
from friture.octavespectrum import OctaveSpectrum_Widget
from friture.scope import Scope_Widget
from friture.generator import Generator_Widget
from friture.delay_estimator import Delay_Estimator_Widget
from friture.controlbar import ControlBar

class Dock(QtGui.QDockWidget):

	def __init__(self, parent, sharedGLWidget, logger, name, type = 0):
		QtGui.QDockWidget.__init__(self, name, parent)
		
		self.setObjectName(name)
		
		self.sharedGLWidget = sharedGLWidget
		self.logger = logger
		
		self.controlBar = ControlBar(self)
				
		self.connect(self.controlBar.comboBox_select, QtCore.SIGNAL('activated(int)'), self.widget_select)
		self.connect(self.controlBar.settingsButton, QtCore.SIGNAL('clicked(bool)'), self.settings_slot)

		self.dockwidget = QtGui.QWidget(self)
		self.layout = QtGui.QVBoxLayout(self.dockwidget)
		self.layout.addWidget(self.controlBar)
		self.layout.setContentsMargins(0, 0, 0, 0)
		self.dockwidget.setLayout(self.layout)
		
		self.setWidget(self.dockwidget)
		
		self.audiowidget = None
		self.widget_select(type)

	# note that by default the closeEvent is accepted, no need to do it explicitely
	def closeEvent(self, event):
		self.parent().dockmanager.close_dock(self)

	# slot
	def widget_select(self, item):
		if self.audiowidget is not None:
		    self.audiowidget.close()
		    self.audiowidget.deleteLater()
		
		self.type = item

		if item is 0:
			self.audiowidget = Levels_Widget(self, self.logger)
		elif item is 1:
			self.audiowidget = Scope_Widget(self, self.logger)
		elif item is 2:
			self.audiowidget = Spectrum_Widget(self, self.sharedGLWidget, self.logger)
		elif item is 3:
			self.audiowidget = Spectrogram_Widget(self, self.parent().audiobackend, self.logger)
		elif item is 4:
			self.audiowidget = OctaveSpectrum_Widget(self, self.logger)
		elif item is 5:
			self.audiowidget = Generator_Widget(self, self.parent().audiobackend, self.logger)
		elif item is 6:
			self.audiowidget = Delay_Estimator_Widget(self, self.logger)
		
		self.audiowidget.set_buffer(self.parent().audiobuffer)

		self.layout.addWidget(self.audiowidget)
		
		self.controlBar.comboBox_select.setCurrentIndex(item)

	def update(self):
		if self.audiowidget <> None:
			self.audiowidget.update()

	def pause(self):
		if self.audiowidget <> None:
			self.audiowidget.pause()

	def restart(self):
		if self.audiowidget <> None:
			self.audiowidget.restart()

	# slot
	def settings_slot(self, checked):
		self.audiowidget.settings_called(checked)

	# method
	def saveState(self, settings):
		settings.setValue("type", self.type)
		self.audiowidget.saveState(settings)
	
	# method
	def restoreState(self, settings):
		(type, ok) = settings.value("type", 0).toInt()
		self.widget_select(type)
		self.audiowidget.restoreState(settings)

########NEW FILE########
__FILENAME__ = dockmanager
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2013 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtCore
from PyQt4.QtGui import QMainWindow
from friture.defaults import DEFAULT_DOCKS
from friture.dock import Dock

class DockManager(QtCore.QObject):
	def __init__(self, parent, sharedGLWidget, logger):
		QtCore.QObject.__init__(self, parent)

		# the parent must of the QMainWindow so that docks are created as children of it
		assert(isinstance(parent, QMainWindow))

		self.docks = []
		self.logger = logger
		self.sharedGLWidget = sharedGLWidget

	# slot
	def new_dock(self):
		# the dock objectName is unique
		docknames = [dock.objectName() for dock in self.docks]
		dockindexes = [int(str(name).partition(' ')[-1]) for name in docknames]
		if len(dockindexes) == 0:
			index = 1
		else:
			index = max(dockindexes)+1
		name = "Dock %d" %index
		new_dock = Dock(self.parent(), self.sharedGLWidget, self.logger, name)
		self.parent().addDockWidget(QtCore.Qt.TopDockWidgetArea, new_dock)
		
		self.docks += [new_dock]
	
	#slot
	def close_dock(self, dock):
		self.docks.remove(dock)


	def saveState(self, settings):
		docknames = [dock.objectName() for dock in self.docks]
		settings.setValue("dockNames", docknames)
		for dock in self.docks:
			settings.beginGroup(dock.objectName())
			dock.saveState(settings)
			settings.endGroup()


	def restoreState(self, settings):
		if settings.contains("dockNames"):
			docknames = settings.value("dockNames", []).toList()
			docknames = [dockname.toString() for dockname in docknames]
			# list of docks
			self.docks = [Dock(self.parent(), self.sharedGLWidget, self.logger, name) for name in docknames]
			for dock in self.docks:
				settings.beginGroup(dock.objectName())
				dock.restoreState(settings)
				settings.endGroup()
		else:
			self.logger.push("First launch, display a default set of docks")
			self.docks = [Dock(self.parent(), self.sharedGLWidget, self.logger, "Dock %d" %(i), type = type) for i, type in enumerate(DEFAULT_DOCKS)]
			for dock in self.docks:
				self.parent().addDockWidget(QtCore.Qt.TopDockWidgetArea, dock)


	def update(self):
		for dock in self.docks:
			dock.update()

	def pause(self):
		for dock in self.docks:
			try:
				dock.pause()
			except AttributeError:
				pass

	def restart(self):
		for dock in self.docks:
			try:
				dock.restart()
			except AttributeError:
				pass

########NEW FILE########
__FILENAME__ = filter
# -*- coding: utf-8 -*-
from numpy import arange, sqrt, zeros
# the three following lines are a workaround for a bug with scipy and py2exe
# together. See http://www.pyinstaller.org/ticket/83 for reference.
#from scipy.misc import factorial
#import scipy
#scipy.factorial = factorial

#importing lfilter from scipy.signal.signaltools instead of scipy.signal decreases
#dramatically the number of modules imported (and decreases the size of the NSIS package...) 
#from scipy.signal.signaltools import lfilter
#importint _linear_filter itself from sigtools is even better
from scipy.signal.sigtools import _linear_filter

#NOTE: by default scipy.signal.__init__.py imports all of its submodules
#To decrease the py2exe distributions dramatically, these import lines can
#be commented out !

NOCTAVE = 9

def ERBFilterBank(forward, feedback, x):
	# y=ERBFilterBank(forward, feedback, x)
	# This function filters the waveform x with the array of filters
	# specified by the forward and feedback parameters. Each row
	# of the forward and feedback parameters are the parameters
	# to the Matlab builtin function "filter".
	(rows, cols) = feedback.shape
	y = zeros((rows, len(x)))
	for i in range(0, rows):
		y[i,:] = lfilter(forward[i,:], feedback[i,:], x)
	return y

# Nominal frequencies: 31.5 40 50 63 80 100 125 160 200 250 315 400 500 630 800 1000 1250
# 1600 2000 Hz, etc.
#
# http://zone.ni.com/devzone/cda/tut/p/id/2975
# According to the IEC 1260:1995 and the ANSI S1.11:2004 standards, the midband frequency, or center, frequency of the bandpass filter is defined by the following equations:
# 
#     fi = 1000 * 2ib for 1/N octave filters when N is odd
# 
#     fi = 1000 * 2(i+1)b/2 for 1/N octave filters when N is even
# 
#     where
#     fi is the center frequency of the ith band-pass filter expressed in hertz.
#     i is an integer when i = 0, f0 = 1 kHz, which is the reference frequency for the audio range.
#     b is the bandwidth designator and equals 1 for octave, 1/3 for 1/3 octave, 1/6 for 1/6 octave, 1/12 for 1/12 octave, and 1/24 for 1/24 octave.
def octave_frequencies(Nbands, BandsPerOctave):
	f0 = 1000. # audio reference frequency is 1 kHz
	
	b = 1./BandsPerOctave
	
	imax = Nbands/2
	if Nbands%2 == 0:
		i = arange(-imax, imax)
	else:
		i = arange(-imax, imax + 1)

	if BandsPerOctave%2 == 1:
	 	fi = f0 * 2**(i*b)
	else:
	 	# FIXME the official formula does not seem to work !
	 	fi = f0 * 2**(i*b) #fi = f0 * 2**((2*i+1)*b/2.)

	f_low = fi * sqrt(2**(-b))
	f_high = fi * sqrt(2**b)
	
	return fi, f_low, f_high

def octave_filter_bank(forward, feedback, x, zis=None):
	# This function filters the waveform x with the array of filters
	# specified by the forward and feedback parameters. Each row
	# of the forward and feedback parameters are the parameters
	# to the Matlab builtin function "filter".
	Nbank = len(forward)
	y = zeros((Nbank, len(x)))
	
	zfs = []
	y = []
	
	if zis == None:
		zis = []
		for i in range(0, Nbank):
			zis += [zeros(max(len(forward[i]), len(feedback[i]))-1)] 
	
	for i in range(0, Nbank):
		filt, zf = lfilter(forward[i], feedback[i], x, zi=zis[i])
		# zf can be reused to restart the filter
		zfs += [zf]
		y += [filt]
		
	return y, zfs

# Note: we may have one filter in excess here : the low-pass filter for decimation
# does approximately the same thing as the low-pass component of the highest band-pass
# filter for the octave
def octave_filter_bank_decimation(blow, alow, forward, feedback, x, zis=None):
	# This function filters the waveform x with the array of filters
	# specified by the forward and feedback parameters. Each row
	# of the forward and feedback parameters are the parameters
	# to the Matlab builtin function "filter".
	BandsPerOctave = len(forward)
	Nbank = NOCTAVE*BandsPerOctave
	
	y = [0.]*Nbank
	dec = [0.]*Nbank
	
	x_dec = x
	
	zfs = []
	
	if zis == None:
		k = Nbank - 1
	
		for j in range(0, NOCTAVE):
			for i in range(0, BandsPerOctave)[::-1]:
				filt = lfilter(forward[i], feedback[i], x_dec)
				y[k] = filt
				dec[k] = 2**j
				k -= 1
   			x_dec, zf = decimate(blow, alow, x_dec)
		
		return y, dec, None
	else:
		m = 0
		k = Nbank - 1
		
		for j in range(0, NOCTAVE):
			for i in range(0, BandsPerOctave)[::-1]:
				filt, zf = lfilter(forward[i], feedback[i], x_dec, zi=zis[m])
				#filt = lfilter(forward[i], feedback[i], x_dec)
				m += 1
				# zf can be reused to restart the filter
				zfs += [zf]
				#zfs += [0.]
				y[k] = filt
				dec[k] = 2**j
				k -= 1
			x_dec, zf = decimate(blow, alow, x_dec, zi=zis[m])
			m += 1
			# zf can be reused to restart the filter
			zfs += [zf]
			#zfs += [0.]

		return y, dec, zfs

def decimate(bdec, adec, x, zi=None):
    	if zi == None:
		# utiliser un décimateur polyphase ici !!!
		x_dec = lfilter(bdec, adec, x)
		zf = None
	else:
		# utiliser un décimateur polyphase ici !!!
		x_dec, zf = lfilter(bdec, adec, x, zi=zi)

	x_dec = x_dec[::2]
	return x_dec, zf

# build a proper array of zero initial conditions to start the filters
def octave_filter_bank_decimation_filtic(blow, alow, forward, feedback):
	BandsPerOctave = len(forward)		
	zfs = []
		
	for j in range(0, NOCTAVE):
		for i in range(0, BandsPerOctave)[::-1]:
			l = max(len(forward[i]), len(feedback[i])) - 1
			zfs += [zeros(l)]
		l = max(len(blow), len(alow)) - 1
		zfs += [zeros(l)]
	
	return zfs

def lfilter(b, a, x, axis=-1, zi=None):
    """
    Filter data along one-dimension with an IIR or FIR filter.

    Filter a data sequence, x, using a digital filter.  This works for many
    fundamental data types (including Object type).  The filter is a direct
    form II transposed implementation of the standard difference equation
    (see Notes).

    Parameters
    ----------
    b : array_like
        The numerator coefficient vector in a 1-D sequence.
    a : array_like
        The denominator coefficient vector in a 1-D sequence.  If a[0]
        is not 1, then both a and b are normalized by a[0].
    x : array_like
        An N-dimensional input array.
    axis : int
        The axis of the input data array along which to apply the
        linear filter. The filter is applied to each subarray along
        this axis (*Default* = -1)
    zi : array_like (optional)
        Initial conditions for the filter delays.  It is a vector
        (or array of vectors for an N-dimensional input) of length
        max(len(a),len(b))-1.  If zi=None or is not given then initial
        rest is assumed.  SEE signal.lfiltic for more information.

    Returns
    -------
    y : array
        The output of the digital filter.
    zf : array (optional)
        If zi is None, this is not returned, otherwise, zf holds the
        final filter delay values.

    Notes
    -----
    The filter function is implemented as a direct II transposed structure.
    This means that the filter implements

    ::

       a[0]*y[n] = b[0]*x[n] + b[1]*x[n-1] + ... + b[nb]*x[n-nb]
                               - a[1]*y[n-1] - ... - a[na]*y[n-na]

    using the following difference equations::

         y[m] = b[0]*x[m] + z[0,m-1]
         z[0,m] = b[1]*x[m] + z[1,m-1] - a[1]*y[m]
         ...
         z[n-3,m] = b[n-2]*x[m] + z[n-2,m-1] - a[n-2]*y[m]
         z[n-2,m] = b[n-1]*x[m] - a[n-1]*y[m]

    where m is the output sample number and n=max(len(a),len(b)) is the
    model order.

    The rational transfer function describing this filter in the
    z-transform domain is::

                             -1               -nb
                 b[0] + b[1]z  + ... + b[nb] z
         Y(z) = ---------------------------------- X(z)
                             -1               -na
                 a[0] + a[1]z  + ... + a[na] z

    """
    #if isscalar(a):
        #a = [a]
    if zi is None:
        return _linear_filter(b, a, x, axis)
    else:
        return _linear_filter(b, a, x, axis, zi)

########NEW FILE########
__FILENAME__ = filter_design
# -*- coding: utf-8 -*-
from numpy import pi, exp, arange, cos, sin, sqrt, zeros, ones, log, arange, set_printoptions
# the three following lines are a workaround for a bug with scipy and py2exe
# together. See http://www.pyinstaller.org/ticket/83 for reference.
from scipy.misc import factorial
import scipy
scipy.factorial = factorial

#importing from scipy.signal.signaltools and scipy.signal.filter_design instead of scipy.signal
#decreases dramatically the number of modules imported
from scipy.signal.signaltools import lfilter
from scipy.signal.filter_design import ellip, butter, cheby1, iirdesign, freqz
from scipy.signal.fir_filter_design import firwin

# allow this script to properly import other friture modules
import sys
sys.path.insert(0, '.')
from friture.filter import (octave_frequencies, octave_filter_bank,
                            octave_filter_bank_decimation, NOCTAVE)

from friture.audiobackend import SAMPLING_RATE

# bank of filters for any other kind of frequency scale
# http://cobweb.ecn.purdue.edu/~malcolm/apple/tr35/PattersonsEar.pdf
# bandwidth of a cochlear channel as a function of center frequency

# Change the following parameters if you wish to use a different
# ERB scale.
EarQ = 9.26449 # Glasberg and Moore Parameters
minBW = 24.7
order = 1.

def frequencies(fs, numChannels, lowFreq):
	channels = arange(0, numChannels)
	cf = -(EarQ*minBW) + exp(channels*(-log(fs/2 + EarQ*minBW) + \
		log(lowFreq + EarQ*minBW))/numChannels) \
		*(fs/2 + EarQ*minBW)
	return cf

def MakeERBFilters(fs, numChannels, lowFreq):
	# [forward, feedback] = MakeERBFilters(fs, numChannels) computes the
	# filter coefficients for a bank of Gammatone filters. These
	# filters were defined by Patterson and Holdworth for simulating
	# the cochlea. The results are returned as arrays of filter
	# coefficients. Each row of the filter arrays (forward and feedback)
	# can be passed to the MatLab "filter" function, or you can do all
	# the filtering at once with the ERBFilterBank() function.
	#
	# The filter bank contains "numChannels" channels that extend from
	# half the sampling rate (fs) to "lowFreq".
	T = 1./fs
	# All of the following expressions are derived in Apple TR #35, "An
	# Efficient Implementation of the Patterson-Holdsworth Cochlear
	# Filter Bank."
	cf = frequencies(fs, numChannels, lowFreq)
	ERB = ((cf/EarQ)**order + minBW**order)**(1./order)
	B = 1.019*2*pi*ERB
	gain = abs((-2*exp(4*1j*cf*pi*T)*T + \
		   2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) - sqrt(3. - 2.**(3./2.))* \
		   sin(2*cf*pi*T))) * \
		   (-2*exp(4*1j*cf*pi*T)*T + \
		   2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) + sqrt(3. - 2.**(3./2.)) * \
		   sin(2*cf*pi*T)))* \
		   (-2*exp(4*1j*cf*pi*T)*T + \
		   2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) - \
		   sqrt(3. + 2.**(3./2.))*sin(2*cf*pi*T))) * \
		   (-2*exp(4*1j*cf*pi*T)*T + 2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) + sqrt(3. + 2.**(3./2.))*sin(2*cf*pi*T))) / \
		   (-2 / exp(2*B*T) - 2*exp(4*1j*cf*pi*T) + \
		   2*(1 + exp(4*1j*cf*pi*T))/exp(B*T))**4)
	
	feedback = zeros((len(cf), 9))
	forward = zeros((len(cf), 5))
	forward[:,0] = T**4 / gain
	forward[:,1] = -4*T**4*cos(2*cf*pi*T)/exp(B*T)/gain
	forward[:,2] = 6*T**4*cos(4*cf*pi*T)/exp(2*B*T)/gain
	forward[:,3] = -4*T**4*cos(6*cf*pi*T)/exp(3*B*T)/gain
	forward[:,4] = T**4*cos(8*cf*pi*T)/exp(4*B*T)/gain
	feedback[:,0] = ones(len(cf))
	feedback[:,1] = -8*cos(2*cf*pi*T)/exp(B*T)
	feedback[:,2] = 4*(4 + 3*cos(4*cf*pi*T))/exp(2*B*T)
	feedback[:,3] = -8*(6*cos(2*cf*pi*T) + cos(6*cf*pi*T))/exp(3*B*T)
	feedback[:,4] = 2*(18 + 16*cos(4*cf*pi*T) + cos(8*cf*pi*T))/exp(4*B*T)
	feedback[:,5] = -8*(6*cos(2*cf*pi*T) + cos(6*cf*pi*T))/exp(5*B*T)
	feedback[:,6] = 4*(4 + 3*cos(4*cf*pi*T))/exp(6*B*T)
	feedback[:,7] = -8*cos(2*cf*pi*T)/exp(7*B*T)
	feedback[:,8] = exp(-8*B*T)

	return [forward, feedback]

def octave_filters(Nbands, BandsPerOctave):
	# Bandpass Filter Generation
	pbrip = .5	# Pass band ripple
	sbrip = 50	# Stop band rejection
	#Filter order
	order = 2

	fi, f_low, f_high = octave_frequencies(Nbands, BandsPerOctave)

	fs = SAMPLING_RATE
	wi = fi/(fs/2.) # normalized frequencies
	w_low = f_low/(fs/2.)
	w_high = f_high/(fs/2.)
	w_high = (w_high<1.)*w_high + (w_high>=1.)*1.

	B = []
	A = []
	
	# For each band
	for w, wl, wh in zip(wi, w_low, w_high):
		# normalized frequency vector
		freq = [wl, wh]
	
		# could be another IIR filter
		[b, a] = ellip(order, pbrip, sbrip, freq, btype='bandpass')
		
		B += [b]
		A += [a]
		
	return [B, A, fi, f_low, f_high]

def octave_filters_oneoctave(Nbands, BandsPerOctave):
	# Bandpass Filter Generation
	pbrip = .5	# Pass band ripple
	sbrip = 50	# Stop band rejection
	#Filter order
	order = 2

	fi, f_low, f_high = octave_frequencies(Nbands, BandsPerOctave)

	fi     = fi[-BandsPerOctave:]
	f_low  = f_low[-BandsPerOctave:]
	f_high = f_high[-BandsPerOctave:]

	fs = SAMPLING_RATE
	wi = fi/(fs/2.) # normalized frequencies
	w_low = f_low/(fs/2.)
	w_high = f_high/(fs/2.)
	w_high = (w_high<1.)*w_high + (w_high>=1.)*1.

	B = []
	A = []
	
	# For each band
	for w, wl, wh in zip(wi, w_low, w_high):
		# normalized frequency vector
		freq = [wl, wh]
	
		# could be another IIR filter
		[b, a] = ellip(order, pbrip, sbrip, freq, btype='bandpass')
		
		B += [b]
		A += [a]
		
	return [B, A, fi, f_low, f_high]

def generate_filters_params():
	import os
	
	params = {}
	
	# generate the low-pass filter for decimation
	Ndec = 3
	fc = 0.5
	# other possibilities
	#(bdec, adec) = ellip(Ndec, 0.05, 30, fc)
	#print bdec
	#(bdec, adec) = cheby1(Ndec, 0.05, fc)
	#(bdec, adec) = butter(Ndec, fc)
	(bdec, adec) = iirdesign(0.48, 0.50, 0.05, 70, analog=0, ftype='ellip', output='ba')
	#bdec = firwin(30, fc)
	#adec = [1.]
	
	set_printoptions(precision=24)
    
	params['dec'] = [bdec, adec]
    
	#generate the octave filters
	for BandsPerOctave in [1,3,6,12,24]:
		Nbands = NOCTAVE*BandsPerOctave
		[boct, aoct, fi, flow, fhigh] = octave_filters_oneoctave(Nbands, BandsPerOctave)
		params['%d' %BandsPerOctave] = [boct, aoct, fi, flow, fhigh]
    
	out = """\
# Filters parameters generated from filter_design.py
from numpy import array
params = %s
""" %repr(params)
    
	path = os.path.dirname(__file__)
	fname = os.path.join(path, 'generated_filters.py')
	output = open(fname,'w')
	output.write(out)
	output.close()

# main() is a test function
def main():
	from matplotlib.pyplot import semilogx, plot, show, xlim, ylim, figure, legend, subplot, bar
	from numpy.fft import fft, fftfreq, fftshift, ifft
	from numpy import log10, linspace, interp, angle, array, concatenate

	N = 2048*2*2
	fs = float(SAMPLING_RATE)
	Nchannels = 20
	low_freq = 20.

	impulse = zeros(N)
	impulse[N/2] = 1
	f = 1000.
	#impulse = sin(2*pi*f*arange(0, N/fs, 1./fs))

	#[ERBforward, ERBfeedback] = MakeERBFilters(fs, Nchannels, low_freq)
	#y = ERBFilterBank(ERBforward, ERBfeedback, impulse)

	BandsPerOctave = 3
	Nbands = NOCTAVE*BandsPerOctave
	
	[B, A, fi, fl, fh] = octave_filters(Nbands, BandsPerOctave)
	y, zfs = octave_filter_bank(B, A, impulse)
	#print "Filter lengths without decimation"
	#for b, a in zip(B, A):
	#	print len(b), len(a)
	
	
	response = 20.*log10(abs(fft(y)))
	freqScale = fftfreq(N, 1./fs)
	
	figure()
	subplot(211)
	
	for i in range(0, response.shape[0]):
		semilogx(freqScale[0:N/2],response[i, 0:N/2])
		
	xlim(fs/2000, fs)
	ylim(-70, 10)
	
	subplot(212)
	m = 0
	for f in fi:
		p = 10.*log10((y[m]**2).mean())
		m += 1
		semilogx(f, p, 'ko')
	
	Ndec = 3
	fc = 0.5
	# other possibilities
	#(bdec, adec) = ellip(Ndec, 0.05, 30, fc)
	#print bdec
	#(bdec, adec) = cheby1(Ndec, 0.05, fc)
	#(bdec, adec) = butter(Ndec, fc)
	(bdec, adec) = iirdesign(0.48, 0.50, 0.05, 70, analog=0, ftype='ellip', output='ba')
	#bdec = firwin(30, fc)
	#adec = [1.]
	
	figure()
	subplot(211)
	
	response = 20.*log10(abs(fft(impulse)))
	plot(fftshift(freqScale), fftshift(response), label="impulse")
	
	y = lfilter(bdec, adec, impulse)
	response = 20.*log10(abs(fft(y)))
	plot(fftshift(freqScale), fftshift(response), label="lowpass")
	
	ydec = y[::2].repeat(2)
	response = 20.*log10(abs(fft(ydec)))
	plot(fftshift(freqScale), fftshift(response), label="lowpass + dec2 + repeat2")
	
	ydec2 = interp(range(0, len(y)), range(0, len(y), 2), y[::2])
	response = 20.*log10(abs(fft(ydec2)))
	plot(fftshift(freqScale), fftshift(response), label="lowpass + dec2 + interp2")
	
	ydec3 = y[::2]
	response = 20.*log10(abs(fft(ydec3)))
	freqScale2 = fftfreq(N/2, 2./fs)
	plot(freqScale2,fftshift(response), label="lowpass + dec2")
	
	legend(loc="lower left")
	
	subplot(212)
	plot(range(0, len(impulse)), impulse, label="impulse")
	plot(range(0, len(impulse)), y, label="lowpass")
	plot(range(0, len(impulse)), ydec, label="lowpass + dec2 + repeat2")
	plot(range(0, len(impulse)), ydec2, label="lowpass + dec2 + interp2")
	plot(range(0, len(impulse), 2), ydec3, label="lowpass + dec2")
	legend()
	
	[boct, aoct, fi, flow, fhigh] = octave_filters_oneoctave(Nbands, BandsPerOctave)
	y, dec, zfs = octave_filter_bank_decimation(bdec, adec, boct, aoct, impulse)
	#print "Filter lengths with decimation"
	#print len(bdec), len(adec)
	#for b, a in zip(boct, aoct):
	#	print len(b), len(a)

	figure()
	subplot(211)
	
	for yone, d in zip(y, dec):
		response = 20.*log10(abs(fft(yone))*d)
		freqScale = fftfreq(N/d, 1./(fs/d))
		semilogx(freqScale[0:N/(2*d)],response[0:N/(2*d)])
	
	xlim(fs/2000, fs)
	ylim(-70, 10)
	
	subplot(212)
	m = 0
	for i in range(0, NOCTAVE):
		for f in fi:
			p = 10.*log10((y[m]**2).mean())
			semilogx(f/dec[m], p, 'ko')
			m += 1

	[boct, aoct, fi, flow, fhigh] = octave_filters_oneoctave(Nbands, BandsPerOctave)
	y1, dec, zfs = octave_filter_bank_decimation(bdec, adec, boct, aoct, impulse[0:N/2])
	y2, dec, zfs = octave_filter_bank_decimation(bdec, adec, boct, aoct, impulse[N/2:], zis=zfs)	
	
	y = []
	for y1one, y2one in zip(y1,y2):
		y += [concatenate((y1one,y2one))]

	figure()
	subplot(211)
	
	for yone, d in zip(y, dec):
		response = 20.*log10(abs(fft(yone))*d)
		freqScale = fftfreq(N/d, 1./(fs/d))
		semilogx(freqScale[0:N/(2*d)],response[0:N/(2*d)])
	
	xlim(fs/2000, fs)
	ylim(-70, 10)
	
	subplot(212)
	m = 0
	for i in range(0, NOCTAVE):
		for f in fi:
			p = 10.*log10((y[m]**2).mean())
			semilogx(f/dec[m], p, 'ko')
			m += 1
	
	generate_filters_params()

	show()
	
if __name__ == "__main__":
	main()

########NEW FILE########
__FILENAME__ = frequency_resampler
# -*- coding: utf-8 -*-
"""
Created on Sat Apr 21 20:29:18 2012

@author: timothee
"""

import numpy as np
#from scipy.interpolate import interp1d, UnivariateSpline

class Frequency_Resampler:
    def __init__(self, logfreqscale=0, minfreq=20., maxfreq=20000., nsamples=1):
        self.logfreqscale = logfreqscale # 0: linear
        self.minfreq = minfreq
        self.maxfreq = maxfreq
        self.nsamples = nsamples
        self.update_xscale()
    
    def setfreqrange(self, minfreq, maxfreq):
        print "freq range changed", minfreq, maxfreq
        self.minfreq = minfreq
        self.maxfreq = maxfreq
        self.update_xscale()

    def update_xscale(self):
        if self.logfreqscale == 2:
            self.xscaled = np.logspace(np.log2(self.minfreq), np.log2(self.maxfreq), self.nsamples, base=2.0)
        elif self.logfreqscale == 1:
            self.xscaled = np.logspace(np.log10(self.minfreq), np.log10(self.maxfreq), self.nsamples)
        else:
            self.xscaled = np.linspace(self.minfreq, self.maxfreq, self.nsamples)

    def setnsamples(self, nsamples):
        if self.nsamples <> nsamples:
            self.nsamples = nsamples
            self.update_xscale()
            print "nsamples changed, now: %d" %(nsamples)

    def setlogfreqscale(self, logfreqscale):
        if logfreqscale <> self.logfreqscale:
            print "freq scale changed", logfreqscale
            self.logfreqscale = logfreqscale
            self.update_xscale()

    def process(self, freq, data):
        #f = interp1d(freq, data) # construct an interpolant
        #return f(self.xscaled)
        #s = UnivariateSpline(freq, data, s=0, k=1) # construct the spline
        #return s(self.xscaled)
        #Note : interp1d and UnivariateSpline are both slower than interp
        # interp is still not optimal because it involved a search whereas
        # the data is already completely sorted so an running interpolation
        # could be done faster
        return np.interp(self.xscaled, freq, data)

########NEW FILE########
__FILENAME__ = friture_rc
# -*- coding: utf-8 -*-

# Resource object code
#
# Created: lun. 25. avr. 12:48:41 2011
#      by: The Resource Compiler for PyQt (Qt v4.5.2)
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore

qt_resource_data = "\
\x00\x02\x3f\xc8\
\x89\
\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
\x00\x02\x58\x00\x00\x01\xc2\x08\x06\x00\x00\x00\x33\x73\xb7\x64\
\x00\x00\x00\x04\x73\x42\x49\x54\x08\x08\x08\x08\x7c\x08\x64\x88\
\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0d\xd7\x00\x00\x0d\xd7\
\x01\x42\x28\x9b\x78\x00\x00\x00\x19\x74\x45\x58\x74\x53\x6f\x66\
\x74\x77\x61\x72\x65\x00\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x2e\x6f\x72\x67\x9b\xee\x3c\x1a\x00\x00\x20\x00\x49\x44\
\x41\x54\x78\x9c\xec\xbd\xdd\x76\xe3\x3a\xb3\x2d\x36\x01\x90\x92\
\xdd\xbd\x76\x46\x72\x91\xf7\x7f\xb8\x64\x24\x19\x27\x19\x67\x7f\
\xab\xbb\x6d\x4b\x24\x81\xca\x45\xa1\xc0\x22\x04\xfe\x48\xa6\xd5\
\xb2\x8d\xb9\x96\x9a\x32\x49\x81\x20\x08\x02\x13\xb3\x0a\x05\xf3\
\xff\xfc\x9f\xff\x07\x01\x80\x31\x06\x02\xf9\xae\xf7\x6d\xc1\x1e\
\x69\x94\xd2\xcb\xd3\x20\xa2\xcd\xd7\x99\x3b\xee\x41\xa5\xd3\x13\
\xac\xb5\xb0\xd6\xa6\x6b\x95\xb6\xd6\xda\x4d\xf9\xdf\x8a\x3d\xca\
\xfd\x56\x18\x58\x00\xcb\xe9\xac\x5e\xc7\x10\xb0\x52\xae\xab\xf9\
\xb0\x0e\xc6\xbc\xb3\xdc\x61\x56\xee\x64\x63\x5e\x76\x28\xd7\xaf\
\x84\x2d\xe5\xa1\xdf\xcd\xcf\x8e\x47\xba\x97\x3d\xf2\xb2\x96\x06\
\x6d\xa8\xee\x6b\x69\x18\x60\xb5\x09\x58\x4d\x63\xa6\xbd\xdf\xfb\
\x79\xac\xa6\x97\xb5\x67\xb7\xe6\x63\xeb\xfd\x6e\x6d\xf3\x4a\xf9\
\xd8\x52\x66\x76\x43\xb6\x57\xeb\x48\x76\x3c\xbf\x8e\x31\x06\xc6\
\x98\xe2\x7e\xd9\x86\x10\xae\xca\xc7\xdc\xfd\x96\xae\xf3\x9e\xba\
\xb2\xf6\xdb\x52\x9e\xf4\xb3\x93\x8f\x46\x73\x75\x2e\xbe\x11\xe6\
\x1e\x2c\x11\xd5\xce\xf7\xa3\x40\x04\x2a\xb4\xd0\xb5\xdc\x2b\xee\
\x8d\xcf\x44\x28\xd7\xf2\xfa\x28\xf9\xac\xb8\x44\xa9\xe3\xd6\xa8\
\x6d\x5e\x19\x6b\xfd\xf3\x23\xd4\xf9\x4a\xb0\x66\xb0\xf4\x70\x6a\
\x85\xff\x38\x10\x00\xcc\x94\x7d\x2d\xf7\x8a\x8a\x8a\xaf\x88\x4a\
\xac\xae\xc3\x96\xfe\xb9\x12\xac\x07\xc6\x9c\xfc\x7a\xad\xd4\x59\
\x71\x1d\x6a\xb9\x57\x3c\x0a\x3e\x93\x82\x55\xf1\x79\xa1\x4d\x4b\
\xb5\xcd\xdb\x86\xcf\xd2\x4f\x34\x79\x23\x22\xb6\xcd\xbf\x85\xd2\
\xb5\x73\xd3\xd0\x2d\xbe\x5e\x25\xf3\x92\xfe\x7b\xc9\x9e\x7d\x4d\
\x5e\xf7\xf8\xdd\x47\x98\xc2\x56\xd3\xbb\x53\x3f\xb1\x25\x1f\xb4\
\x70\xde\xa6\xb2\xd9\x78\x2f\xef\x2d\xe3\xb9\xfa\xa3\xf7\x6d\xb9\
\xc6\x57\x1a\xa9\xee\x61\xaa\xfa\x4c\xe6\xae\x7b\xe5\x75\x17\x3f\
\xcb\x55\x1f\xca\xe5\xc3\x5b\xdf\xbd\x3d\xab\xf3\x96\x76\xb9\x74\
\x4e\x5e\xee\xa5\xfd\x73\x7d\x4d\xe9\x77\x73\xfb\x3e\xb2\x2e\xde\
\xd2\x27\x2d\xfd\x6e\x2d\x85\xbd\xfa\x9d\xb5\x7c\x6f\x29\xbf\x5b\
\xf3\x71\xed\xf3\xdd\xfa\xbb\xfc\xdc\xb5\xfb\x12\x34\x62\xab\x7c\
\x74\xff\x96\x12\xc3\xbf\x35\x0d\x4e\x08\x93\xf4\x72\x27\xbd\x8b\
\xf3\x97\xd2\xda\x78\xcd\x5b\x5e\x92\xbb\x3d\x13\x83\xbb\x91\xac\
\x25\xf0\xfd\x2e\xbf\x18\x6b\x65\x62\x36\xdc\xcb\x47\x97\xeb\xd6\
\xfa\xf1\xc8\xef\xdc\x47\x60\x0f\xdf\x88\x7b\xf9\x57\xec\x71\x8d\
\x47\xf1\x05\xb9\x57\xb9\x6f\x79\xf7\xb6\x60\x8b\x63\xf8\x1c\x19\
\x2a\xb5\xe9\xa5\xf4\xf3\xc9\x32\x25\xdf\x9d\x7b\x3c\xbb\x35\x07\
\xf5\x2d\x13\x7b\xf4\xf9\x1f\x89\xf7\xaa\xba\xa5\x67\xb6\xc5\x69\
\x7f\x2d\x1f\xa5\x32\x2b\x11\xb9\x3d\x9e\xef\x52\xdd\xcb\xd3\xad\
\x26\xc2\x8a\x8a\x1b\x51\xfd\xf4\x2a\x2a\xbe\x30\x08\xc5\x09\x37\
\x9f\x15\x8f\x40\xf4\xbf\x1b\xd6\x69\x71\x45\x45\xc5\x2c\x96\x24\
\xee\x4a\xb2\x2a\x2a\x2a\x2a\xbe\x2f\xaa\x82\x55\x51\x71\x23\x4a\
\x72\x74\xee\x1f\x58\x47\x8d\x97\xb8\x87\x3f\x51\x2d\xf7\x8a\xf7\
\x82\x07\x49\xcb\x1a\xc4\x23\x38\x52\x0b\xd6\xdf\x89\xe5\xbc\xd6\
\x01\xe1\xfe\xa8\x0a\x56\x45\x45\x45\x45\x45\x45\x45\xc5\xce\xa8\
\x0a\x56\x45\xc5\x8d\x28\x05\x3f\x9d\x73\xa6\xac\x60\xec\x11\xfa\
\xa0\x86\x4f\xa8\xb8\x07\x78\xf2\xd7\xe3\x28\x54\x4b\xd8\xa4\x3e\
\x55\x85\xea\xee\xa8\x04\xab\xa2\xe2\x46\x2c\xcd\x38\x15\xd3\x41\
\x95\xdd\x2b\x2a\x2a\x2a\xbe\x27\x2a\xc1\xaa\xa8\x78\x07\x4a\x4b\
\x33\xcc\x4d\x15\xae\xa8\xa8\xf8\x3c\xf8\x6c\x3e\x58\x6b\xa8\xca\
\xef\xfd\xd1\x00\xf3\x33\x9e\xe6\x62\x3b\xcc\x05\xfd\xdc\x43\xda\
\x97\x78\x1f\xb3\x8b\x38\x02\x80\xd5\xd7\x9f\x6e\xb7\x62\x29\x56\
\xca\x5e\x95\x2c\x8f\xad\xa5\xaf\x19\x42\x00\x11\xc1\x39\x77\x71\
\x4c\x3a\xe6\xa5\xe0\x78\x3a\xbf\xfa\x25\x9f\x0b\xbc\xba\x96\x06\
\xc7\x9e\x7a\x67\xe0\x4d\x98\xd5\x24\xd6\xeb\x80\x81\x59\x5b\x75\
\x76\x4b\x8c\xab\x3b\xf0\x9a\xd2\xe2\x9e\xe9\xfa\xd8\x71\x26\xa1\
\x7d\x7f\xc3\x78\x2f\xd3\xdc\xea\x35\xb6\x5c\xc7\x96\xdf\xc5\xf4\
\x3e\x6d\xb9\xce\x6a\x4c\xcd\x7d\x16\x04\xdf\x23\x70\x6a\x08\xe1\
\xe2\x9d\xd4\xdb\xb9\x7a\xb6\x77\x3e\xf6\x28\x90\x7b\x0d\x27\x96\
\x62\x26\x2d\x95\x97\xf4\x2f\xc6\x18\x0c\xc3\xb0\xf8\xae\x12\xd1\
\x6a\x45\xa2\xb0\xc5\x34\x77\x5d\x7f\x32\xd7\x86\x5f\x83\x52\x6c\
\xa9\x40\xeb\xf5\x2c\x84\x2b\xeb\x99\x64\x71\xd2\x7f\x2e\xe7\xe3\
\xe2\xbe\xd2\xdf\xe3\x7e\xaf\x89\x6b\xe1\x1a\x06\x57\x17\xeb\x25\
\x8c\x99\xb4\xad\x6b\x79\x9d\xde\x97\xfa\x52\x28\x33\xf9\xdd\xc3\
\x39\xb9\xeb\x97\xa3\x78\xa3\x9f\x48\x10\x58\x7b\xf1\xab\xba\x51\
\x51\x51\x51\xea\x50\x4b\x6d\x60\xc5\x76\xac\x0d\x34\xbf\x63\xb9\
\xae\xd5\xb3\x8f\x2c\x93\x47\xea\xeb\xee\x99\x97\x87\x33\x11\xae\
\x07\x6f\x34\x5f\x22\xf4\x5b\x75\x82\xae\xa8\xa8\x00\xe6\x1b\xfc\
\xda\x3e\xbc\x0f\xb5\x5c\xa7\xf8\x1b\xe5\xa1\xfb\xb9\xbf\xd9\xe7\
\xfd\xad\x6b\x3f\x34\xc1\x2a\x99\x22\xd7\xa4\xff\x47\x83\x36\xf3\
\x6d\x59\xc2\xa1\x62\x1d\xb5\xdc\x2a\xd6\xb0\x5a\x47\x76\x6a\x6b\
\xf7\x88\xc7\x65\xad\x2d\x2a\x2b\x55\xed\xbe\x1d\x4b\x2e\x1f\x7b\
\x76\xb4\x9b\x4c\xef\x3b\xa4\xb3\x47\x9e\xb7\xd4\xb3\x3d\x50\xea\
\xe7\xfe\x46\x9f\xb7\x96\x8f\xbd\xee\x7a\xe9\x9e\x1e\xd2\x44\x98\
\x63\x62\x27\xff\x4c\x36\xc2\x0c\x1f\x2d\xc3\x56\x54\x54\x6c\xc3\
\xbd\xda\xf9\x4a\x8c\xfe\x1e\xaa\xe9\xf5\xef\x62\xce\x57\xfb\x61\
\xf2\xb1\x8b\xcf\xe1\x72\x22\x0f\xa7\x60\x95\x1e\x84\x9e\xa5\xf5\
\xd9\x14\xac\x25\xd4\xc6\xf7\x36\xd4\x28\xde\x15\x6b\x58\x57\xb0\
\xf6\xa9\x23\xb5\x2e\x3e\x2e\xe6\x7c\x79\x4b\x8b\x3a\xdf\x8a\x6d\
\x93\x47\xde\x9f\xce\x67\xad\x47\x25\xf5\xea\x5e\xf7\x32\x67\x9e\
\x4c\xf9\xd8\x49\xc3\x5a\x7a\x76\x9f\x82\x60\x01\xfa\xa1\xdc\x67\
\x86\xd8\x1e\xc8\x2b\x54\x3e\xab\xb0\xe2\x63\x50\xfd\xdb\x2a\xd6\
\x61\xb0\x9b\x9d\xf0\x9d\x98\x9b\xea\x5f\xdb\x88\xdb\xb1\x65\x21\
\xf6\x47\x69\x23\xee\xf5\x9c\xb7\xd4\xb3\xf7\x96\x49\x29\xad\x47\
\xf1\xbd\xca\xf3\x61\x60\xde\x4f\xb2\x56\x9a\x91\x87\x33\x11\x5a\
\x6b\x67\xa7\xcc\x7e\x66\x13\x5b\x71\xba\x79\x6d\x40\x2b\x2a\xbe\
\x3d\x96\xc2\x7d\xd4\xc1\xd8\x6d\x98\xeb\x2f\xa4\x3c\x25\x5c\xc3\
\x77\xc2\x5a\x3d\xdb\x1b\x8f\x52\x6f\xff\xa6\xa9\x32\x29\x58\x4b\
\xa6\xb9\xa5\x73\x34\xf2\xe3\xef\xbd\x99\xa2\x83\xf8\x07\x94\xcf\
\xad\xf9\xdc\xfa\xbb\xa5\xf3\x4a\xc7\xf2\xfb\xbe\xb6\xdc\xf5\x6f\
\x37\xe7\x75\x07\x19\xfb\x3d\x8a\x40\x4a\x9b\xcc\xbb\x1d\x64\xf6\
\x22\xe1\xf7\x78\x19\xef\xe5\x24\xbb\x57\x5e\xde\x7b\x9d\xd2\x64\
\x8f\xa5\x74\x4b\x6d\xc0\x1e\xf9\xd8\x92\xc6\x96\x7a\x24\x31\xac\
\x96\x42\xb2\x6c\xb9\xce\x5e\x6d\xe5\x7b\xb0\x65\x34\xbf\x87\xe9\
\xf5\x1e\xe5\xb1\x96\xce\x52\xdb\xaa\xcd\x88\x5b\xae\xb1\x86\xb9\
\xf6\x79\x4b\x3e\x4b\x69\xe5\x4a\x8c\x8e\x9d\xb8\x74\xcd\xa5\xfd\
\x5b\xce\xd9\x72\xaf\x73\xf7\x72\x6d\x9a\xab\x7d\x1e\x8d\xdd\x84\
\x36\xf9\xbe\xa7\xde\x6c\xed\x67\xf5\x75\x74\x3e\xe4\x98\xc6\xaa\
\x89\x30\x37\x6b\xcd\x39\x09\xee\xc5\x82\x97\x9c\xdc\xf9\x8f\x8f\
\x13\xf6\x4b\x8d\x64\x8e\x5b\x67\xf6\xac\x91\xa0\x6b\x49\xc1\xd6\
\xca\xbe\x76\xfd\x74\x7c\x27\xbb\xeb\x35\xf7\x51\x72\x42\xdd\x62\
\xb9\xf9\xac\x2a\xe6\x1c\x56\x3b\x9c\x07\x31\x65\xed\x49\x6a\xe6\
\xfc\x60\xe6\xcc\x09\x7b\x93\x5d\xb3\x53\x3d\x13\x82\x25\xca\xbb\
\xfc\xee\x9a\xa5\x92\xde\xd3\xa1\x3d\x1e\xde\x6f\x7a\xdd\xc3\xa4\
\xb4\xa5\x4c\xb7\x0c\x7c\xf7\xf6\xd3\x9a\x4b\x6f\xed\x3a\x93\x4e\
\xfd\x0a\x93\xde\x1c\xe9\xda\x32\x5b\xf5\x23\xfb\x26\x7d\x8d\x9b\
\x26\x1e\xa8\x6a\xa6\xc9\xd5\x3d\x9e\xd7\xa4\x8c\xf8\xa4\x8b\x73\
\xe4\x77\x0f\xe7\x83\x55\xf1\x89\x61\xf6\x23\x6a\xdf\x09\xab\x8d\
\x42\x2d\xd2\xbf\x82\x2d\xe4\x48\xbb\x34\xe8\xf3\xbf\xa3\x09\xaa\
\xe2\xe3\xf0\x1e\x45\xaa\xe2\xef\xa1\x12\xac\x8a\x8a\xbf\x88\x4d\
\x23\xae\xda\x88\x3e\x2c\x4a\xe4\x6a\x4f\xa7\xe1\x8a\x0a\xc1\xa3\
\x39\xe7\x57\xac\xa3\x12\xac\x8a\xdd\xb0\x65\x2d\xc2\xda\x38\x54\
\x7c\x16\x5c\xe3\x83\xf3\x9e\x7a\xbd\x97\xaf\x4f\xc5\xd7\xc5\x16\
\xf7\x95\xbf\x91\x8f\x12\x6a\x5d\x1d\x51\x09\x56\x45\xc5\x5f\xc4\
\x16\xdf\xc5\xf0\x20\x3e\x58\x15\x65\xd4\x30\x0b\x15\xf7\x42\x0d\
\x94\xfa\xb9\x50\x09\x56\xc5\x6e\x20\xd0\x6e\x01\x1c\x2b\x2a\xfe\
\x36\xae\xe9\xc4\x4a\xce\xfa\x5b\xb1\xc7\x6c\xc6\x8a\xaf\x8d\xb5\
\x09\x66\xa5\xfd\x1f\x95\x8f\x25\xd4\xba\x3a\x45\x25\x58\x15\x15\
\x7f\x19\xd5\xc9\xfd\xf3\xa2\xe4\x6f\x95\xfb\x65\xd5\x4e\xa7\x62\
\x6f\x6c\x0d\xe1\x53\xf1\x77\x51\x09\x56\xc5\x7e\xa0\xf5\x90\x02\
\xb5\x41\x98\xa2\x3a\xb9\x3f\x2e\xb6\x3c\x1b\xe7\xdc\x24\x2c\x03\
\x80\x49\xd8\x86\xcf\x1c\x1c\xb9\xe2\x71\xb0\x44\xd6\xf7\x0a\x4f\
\x50\xb1\x3f\x36\x11\xac\xfc\xe1\x5e\x1b\x03\x6b\xd7\xf8\x39\x1b\
\xfd\x51\x6e\x09\xce\x79\xcb\x39\xd7\xe6\xe5\x1e\x51\xdc\xaf\x09\
\xf4\x36\x22\x2f\x57\x89\xb9\xb2\x74\xce\x65\x12\x66\x65\x71\x80\
\x52\x18\x07\xa2\x71\x3f\xc5\x1d\x79\x7e\xaf\x9a\x99\x65\xd2\x3f\
\xf3\xa7\xa4\x20\x75\x97\x71\x60\x8c\xb9\xcc\x69\x7e\xcd\x7b\x8e\
\x20\xf7\x08\x34\x7a\x6b\x40\xc4\xa5\x9c\xcc\xc5\xb1\x5a\x03\xd1\
\x65\x30\xc7\xeb\x82\x88\xee\xd0\x99\x10\x56\x89\xab\xd9\x10\x6a\
\x81\xa4\x45\x4a\xf5\x06\x00\x0c\x08\x52\xe6\xb4\x7a\x9d\xd5\x36\
\xcd\xe8\x36\x78\xfa\xcb\xf2\xf7\xb9\x64\x56\xee\x77\x35\x85\x2d\
\xd8\x10\x9f\x6f\x53\x40\xd3\x69\x72\xf9\x6f\xb6\xd4\x90\x72\x5b\
\x73\x4d\xdd\xa1\x5d\xc6\x36\x7b\x52\x9f\x6b\x63\x61\x6d\x89\x71\
\x95\xa7\xb5\xd4\xf6\x7e\x04\x4a\x41\x42\xaf\x69\xaf\xae\x0d\x34\
\x6a\x54\xe5\xb2\x52\x47\xd4\xe5\xae\x8d\x3b\xb8\x74\xcd\x26\xcf\
\x60\xfe\xc3\x5c\xea\xbe\xf6\x61\x5e\xfb\x70\xd6\xd2\xd8\xb2\x7e\
\xd0\xad\x15\xe2\xda\x20\xa2\x5b\x82\xbc\xe5\x9d\x70\x7e\x8d\xbd\
\x47\x1e\xb7\x96\x3b\x30\x56\x2c\x13\xa3\x30\x5e\x3b\x73\xc5\x18\
\x83\xf5\x50\xfb\xea\x38\x15\xbf\xa6\x6b\xcd\x11\xc5\xf5\x32\x5b\
\x9f\xcd\x78\xd1\x82\xeb\xec\xc9\x73\xa3\xf2\x3d\x3f\xda\x68\xf1\
\x9e\x83\x05\x5c\xd4\x91\xe9\xc0\xcb\x5a\xb7\xfc\x6b\x55\x74\xef\
\xcb\xd3\x3b\x9f\xc1\x4e\x65\x16\xe4\x86\x32\x52\x3f\x69\xa3\x56\
\x67\xd6\xae\x5e\x46\xbd\xd7\xba\xbc\xf5\x25\xb6\xb4\x89\x2b\xe7\
\xec\x51\xaf\xcd\x86\x0e\xea\x8a\xe0\x98\x88\xf7\x6b\x90\xbd\x77\
\x2b\x65\xca\xe4\x6a\xb9\xc3\x5e\x6f\xcf\x00\x98\xb5\x32\xd9\x40\
\x28\x0b\xed\xdc\xb5\x25\x5d\x1a\x98\x6f\xed\x8b\x97\x06\xf5\xd7\
\xfa\x0a\xce\x4d\xe8\x78\x2f\xae\xee\x6b\xd4\xb3\x9d\x0b\x34\xba\
\x25\x0d\x35\x26\x1a\xcf\xbf\x6e\xdc\xb2\x88\x6a\x22\xac\x78\x28\
\xac\x45\x60\xbe\x17\xb9\x21\x22\x50\x28\x5f\xeb\x3d\x24\xf6\x6f\
\xe1\x5e\xd3\xab\x37\x91\xdf\x8a\x09\x3e\x53\x3d\xba\x37\x3e\x7a\
\x40\xfa\x1d\x50\xcb\xed\xef\xa1\x12\xac\x8a\x87\xc3\xda\x92\x0e\
\x7b\x74\x48\x4b\x6a\x65\x3e\x1a\xba\xce\x7c\xb5\x3f\xbe\x52\x07\
\xcc\x65\xfa\x75\xee\xe7\x51\xf0\xd5\xea\xc8\x1c\x29\xd8\x73\xe2\
\xc0\x5d\x4c\xd1\x77\x44\xa9\xcd\xba\x87\x4b\x4a\xc5\x3c\x2a\xc1\
\xaa\x78\x28\x88\x49\xb5\xe4\xf3\x24\xdb\xbb\xf8\x3d\x11\x4d\x1a\
\xfa\x39\xbf\x84\xcf\x32\x32\xbc\xa7\xf2\xb7\x8c\xda\xd0\xe7\xb8\
\x66\x3d\xb9\xef\x82\x87\x78\xaf\x3e\x61\xb1\xe7\x6d\x67\x55\xaf\
\xfe\x2e\x2a\xc1\xaa\x78\x28\xcc\x35\x06\xd7\x38\x31\xde\x82\x25\
\x87\xed\xd2\x35\xef\xd9\x68\xed\xe1\xc0\xbe\x8f\x93\xfb\x3a\xd6\
\xf3\xfa\xee\x4b\x7c\x39\xec\xf1\x6c\xbe\x4b\x7c\xa2\x7b\x2a\x58\
\x8f\xb2\xc8\xfa\xb5\x28\x91\xac\x8a\xbf\x83\x4a\xb0\x2a\x1e\x0e\
\x4b\x24\x6b\xef\xeb\xe8\x49\x08\xba\x61\x22\x22\xd8\x15\x62\xf5\
\x28\x0d\xd7\x96\x51\xea\x63\xe5\xf5\x6f\xe7\xe2\xb1\x70\x8f\x67\
\xf3\xd9\x94\x8c\x47\x30\xcf\x6f\x99\x50\xf5\x28\x98\x33\x09\x7e\
\xa6\x67\xfe\x15\x51\x97\x7c\xaf\x78\x28\x2c\xcd\x54\xbd\x5b\x58\
\x04\xd5\x48\xcd\xa9\x57\x35\xbe\x51\xc5\xbd\xf0\x28\xe4\xf8\x6f\
\xa2\x96\xc1\x36\xd4\x72\x7a\x2c\x54\x05\xab\xe2\x21\x91\x8f\xc4\
\x4a\x2a\xd3\x1e\xe9\xeb\xb4\xf5\x7e\x22\x82\xb1\x97\xd3\x7f\x3f\
\x2b\xa9\xba\xd7\x2c\xc2\x6a\x22\xbc\x1e\xb5\x53\xac\xd8\x13\x9f\
\x4d\xad\xfc\xca\x30\xff\xef\xff\xfd\x7f\x6d\x7a\x12\xd7\xc6\xda\
\xd9\x63\x2a\x7b\x31\x0d\x63\xd6\x43\x2d\xed\x71\x9d\xc2\xf1\xfc\
\xfb\xb5\x95\xf8\x96\x32\xd9\x2b\xc6\xd1\xa6\x0e\xf6\x9d\x69\x70\
\x5c\x11\x7b\x71\xee\x52\x80\xda\x52\xba\x6b\xb1\xd0\xb6\x04\x1a\
\xd5\x67\x6c\xb9\x4e\x31\x99\xb5\xcb\xdc\xc1\x67\x09\xd8\x10\x5a\
\xec\x6e\x20\xac\xc6\x52\x5a\xbd\x9f\x75\x13\xe1\x96\xd9\x5d\x44\
\xef\x8d\xc7\x33\x8d\x93\x74\x2b\x1e\xa6\x23\x23\xff\xfe\x24\x36\
\xc6\xf5\x9b\x53\x70\xb7\x9a\xa5\xee\x16\x0e\x64\xe5\xc5\x59\x8d\
\xe9\x64\xd6\xeb\xfb\x26\xff\x47\x5c\xb6\x81\xf9\x80\x71\x2d\x2f\
\xab\x6f\x84\x7a\x1e\x73\xfd\xb0\xbe\xc6\x35\xf1\xa2\xf2\xeb\x94\
\xfe\xbe\x26\x8d\xb9\x76\xb8\xe4\x9c\x3f\x57\xcf\xf8\xd1\xdc\x96\
\xef\xb9\xbc\xde\x72\x2f\x6b\x96\x8c\xaa\x60\x55\x54\x54\x54\x54\
\x7c\x3b\xd8\x95\x48\xfd\x84\xf0\x38\x04\x7a\x23\xd6\x42\xce\x54\
\xdc\x17\x95\x60\x55\x54\x54\x54\x54\x54\x7c\x62\x68\x7f\xd1\x9c\
\x4c\x89\x72\x55\x4d\xd1\xf7\x47\x25\x58\x15\x15\x15\x15\x15\xdf\
\x0e\xdb\x4c\x84\xf7\xc1\x2a\xf9\xd9\x38\x4b\x78\xce\x67\xf4\x5e\
\xf1\x03\x2b\xa6\xa8\xb3\x08\x2b\x2a\x2a\x2a\x2a\x2a\x2a\x2a\x76\
\x46\x55\xb0\x2a\x2a\x2a\x2a\x2a\xbe\x1d\x1e\xc5\x07\x6b\x8f\x19\
\xbe\x73\x4e\xdc\x1f\x1d\xa0\xb9\x62\x19\x95\x60\x55\x54\x54\x54\
\x54\x54\x7c\x62\xe8\xa5\xbd\x72\x08\x91\xac\x8e\xee\xf7\x47\x25\
\x58\x15\x15\x15\x15\x15\xdf\x0e\x5f\x91\x70\xe4\x24\x6b\xef\xf8\
\x81\x15\xd7\x61\x13\xc1\x5a\x92\x17\xd7\x96\x32\xd8\x5f\x9e\x24\
\x18\x1d\xdf\xc4\xc8\x46\xc5\x49\xda\xb2\xbc\xc1\x0e\x4b\x30\x5c\
\xfb\xbb\xd2\xf9\x5f\x4d\xba\x25\x04\x5e\x62\x82\xe8\x32\x78\x8b\
\x89\x75\x81\xc6\xb3\xf9\x5f\x9a\x3c\xbf\x77\x97\x49\xbc\xb6\x81\
\xcc\xae\x19\xaf\x47\x34\xd6\x8e\xd5\x88\x4d\x66\x07\x17\xc5\x15\
\x47\x59\xc2\xa4\x2a\xfe\x55\x6c\x2b\xf7\xf7\x65\x96\x1b\xf9\xcb\
\x67\x7d\x5d\xec\x99\xf7\xe7\x23\xa6\xb4\x43\x1a\x7b\xe0\xef\xe7\
\x63\x6b\x07\xbc\xc7\x52\x51\xeb\x6b\x00\x4e\x2e\x78\xb9\x2f\x4b\
\x83\xb2\x73\xc7\x93\x56\xee\x67\xcd\xec\x76\x65\x3f\x32\x7b\x0a\
\xc6\xda\x5a\x4a\x91\x88\x76\x8b\xc0\x3b\x57\xb6\x4b\xcf\xf6\x9a\
\x77\x30\x8f\x47\xb8\xd5\x04\x79\x2b\xb9\x5b\x8d\xa7\xa8\xfa\xff\
\xc9\xf3\x9a\x36\x33\xe9\x0f\x02\x8d\xcf\x8c\xd4\x33\xd6\x0d\xb1\
\xfe\xdd\x24\x49\xba\xd8\x97\xe7\x31\x47\x23\x19\x9e\x5b\xec\x36\
\x0f\x2e\xb7\x96\x60\x09\xef\x09\x42\x76\x99\x58\xfa\x87\xcf\x87\
\x30\x74\x4c\xf6\xad\x5e\xd3\xde\x67\xfd\xaf\xef\x85\x91\x30\xa9\
\x3f\x27\x30\x66\x7c\x11\x52\x7d\x8a\x2f\x07\x97\x97\x29\xfe\xee\
\xea\xa0\xae\xd0\xcb\xdd\x8c\x69\x4c\x02\x54\xde\x63\xd9\x9d\xd5\
\xc0\x9c\x8f\xd0\xbd\xee\x87\x4d\x01\x20\xe5\xdb\xca\x5a\x8f\x5b\
\xd3\xb9\x0d\xeb\x41\x24\xef\x93\x0f\xe0\x1e\x35\x20\xef\x44\x6f\
\x69\xcb\xef\xa5\x80\x18\xa8\x12\x99\x59\x45\xc1\x68\xff\x29\xd9\
\xaf\xce\x35\x5b\xca\x74\xc3\x2c\xc1\x3d\x6e\xd9\x00\x17\x6d\x4d\
\xba\x97\x48\xae\xde\x5b\xb6\x5b\x88\xd5\x96\x40\xb2\xd7\xf6\xd5\
\x39\x77\xb8\x36\x98\xf3\x1c\x56\x7d\xce\x80\x91\x5c\x99\xd4\xda\
\x8f\x75\x85\xd9\xd3\x32\x8c\x7a\xbe\x05\x32\x96\xd2\x49\x79\xd2\
\xbf\x93\xfb\x5d\xae\x46\xd5\x44\x58\xf1\xf5\xa0\x5e\x3c\xa0\x3a\
\x7d\x56\x54\x54\x54\x7c\x37\x3c\x82\x49\xf4\xee\x04\xab\x76\x6c\
\x15\xf7\x40\x1e\x17\x46\xbe\xeb\x63\x15\x15\xef\xc5\x47\x99\x46\
\x2a\xbe\x17\x6a\x3d\xda\x1f\xf7\x5a\x7f\x75\x09\x77\x25\x58\xb5\
\x63\xab\xb8\x07\xcc\xd4\xc8\x50\x1b\xa7\x8a\xbf\x86\xea\x5c\x5c\
\xb1\x86\x5a\x47\x3e\x06\x8f\x40\x5a\x1f\x4e\xc1\xaa\x15\xad\x62\
\x0f\x2c\x35\x5a\xb5\x41\xab\xd8\x0b\xb5\x3d\xab\xd8\x03\xb5\x1e\
\xed\x8f\x47\x28\xb3\xea\x83\x55\xf1\xf5\x90\xb5\x55\x73\xab\xcc\
\x3f\xc2\x0b\x58\x51\x51\x51\x51\xb1\x3f\x1e\xa1\x7d\xaf\x4b\xe5\
\x54\x7c\x59\xe4\x24\xaa\x3a\xb7\x57\x54\x54\x54\x54\xdc\x0b\x55\
\xc1\xaa\xf8\x72\x30\xe0\xd0\x0c\x73\x53\xd2\xab\x7a\x55\x51\x51\
\x51\xf1\xb5\xb1\xba\x14\xd2\x0e\xe1\x31\xd6\xd0\x14\x63\x8c\xa8\
\x8e\x48\x8e\xe9\x78\x58\xf9\xf9\x72\xee\x52\x1a\x82\x2d\xb1\x38\
\x72\xe4\xe9\x6e\x89\x9f\x53\xea\x54\x27\xc7\x17\x73\xb1\x2d\xae\
\x88\xb5\x76\xb1\x13\x2f\xe5\x6b\x29\xbd\xb9\xbc\xde\x03\x84\xf5\
\x32\x5b\x85\x31\xab\x51\x81\x42\x08\x29\x5d\xfd\x02\x4c\xe2\xac\
\x61\x8c\xbb\x66\x8c\x81\xb5\x76\x12\x8b\x6d\xad\x4c\x03\x11\x4c\
\x90\x2c\x4d\xeb\xcb\x3d\x5e\xaa\x6b\x70\x6d\x70\xbf\x2d\x28\xc5\
\x3c\x72\xce\x5d\xec\xbb\xb6\xae\x96\xd2\x7d\x8f\xd9\xb5\x74\xae\
\x31\x66\x52\x47\x4a\xdb\x47\x7a\x86\x8f\x92\x8f\x35\x94\xda\xeb\
\xfc\xf8\x23\xcc\xba\xda\x8a\x25\xff\x4a\x75\xd2\x62\x1a\x7b\xb4\
\xb3\xd7\x06\x67\x9d\xbb\x76\x29\x5e\xd5\x5c\x50\xd7\xb9\xe3\x5b\
\xce\x59\xc3\x6a\x60\xcf\x99\xf3\x4b\xbf\x9b\xc3\xa6\x67\x77\x45\
\x3e\x4b\x69\x6e\x29\xdf\x5b\xae\x73\x71\x1c\x59\x5c\xd2\xac\xcc\
\xaa\x82\x55\xf1\xe9\xb0\xa5\xd2\x7f\xad\xf0\x9d\xdf\x0b\x73\x8d\
\x76\x55\x1e\x2b\x2a\x2a\x3e\x13\x2a\xc1\xaa\xf8\x74\x58\x1d\xe9\
\x6c\x88\xd0\x5c\xf1\xb8\x98\x5b\x9c\x56\xab\x9a\x15\x15\x15\x15\
\x8f\x8e\x4a\xb0\x2a\x2a\x2a\x76\xc3\x3a\xf9\x31\xab\xcb\x8f\x94\
\x96\xe0\x00\xe6\x4d\x93\x15\x15\x15\x15\x8f\x88\x4a\xb0\x2a\x3e\
\x1d\x42\x08\x8b\xc7\x8d\xbd\xcb\x32\x83\x15\x15\x15\x15\x15\x15\
\xb3\xa8\x04\xab\xa2\xa2\x62\x37\xac\x07\x4c\xbc\x53\x46\x2a\x2a\
\x2a\x2a\xfe\x32\x2a\xc1\xaa\xf8\x74\x58\x37\x0f\xd5\x5e\xfc\x33\
\x63\x4e\xa1\xac\x66\xc1\x8a\x8a\x8a\xcf\x84\x4a\xb0\x2a\x3e\x1d\
\xb6\x75\xb4\x95\x64\x7d\x56\xcc\x2d\xca\x7d\xcd\x54\xf0\x8a\x8a\
\x8a\x8a\xbf\x8d\xcd\x04\x6b\x2e\xce\xc4\x9e\xb1\x2b\x36\xc7\x62\
\xd9\x20\x60\x4c\xce\x31\xd9\x76\x63\xfe\x56\xf3\x51\x68\xe4\xaf\
\x9d\x4e\x3e\x17\xd3\x6b\xef\xd1\xfa\x6a\x7a\x44\x17\x8e\x4b\xf7\
\xca\xc7\x52\x5c\x94\xad\x31\x9a\xa6\x3f\xbc\x29\x6b\x85\x74\xee\
\xd3\x89\x6f\x71\x0c\xbf\x32\xc5\x8b\xf4\xc7\xe2\x93\xba\x69\xe2\
\x23\x9f\x1e\x5b\xc2\x52\x1a\xd3\xe3\x6b\x58\x3b\x51\xea\xdd\x47\
\x96\xff\x5e\x95\x64\x4b\x1e\x57\xe2\x31\x6d\xca\x8b\x9c\xa3\x9d\
\xfe\x37\xfc\xec\x1a\xac\xa4\x47\x20\xac\x96\xdb\x07\x10\x5f\x3d\
\xe9\xe1\xda\xdf\x2d\x61\x53\x0c\xba\xab\xae\x38\x73\x9d\x0d\xe7\
\xe4\x31\x27\x2f\xee\x97\x23\x27\x17\x7f\x53\xbc\x9e\xf4\xcf\xef\
\xc8\xeb\xf8\xba\x8f\x69\xed\x11\xe3\x6a\xef\xc1\xd1\x5a\xbc\x30\
\xbd\x3f\x2f\xd7\x3d\xf2\xa2\xb9\x06\x65\xdb\xab\x14\xac\xb9\x91\
\xe5\x1e\xd8\x7a\xa3\xab\xe4\x0a\x00\x74\x5d\x9c\x23\x57\x1b\x02\
\xb0\xdd\x5a\xf8\x7b\x94\xd3\x47\x96\x75\x11\x85\x17\x58\xe7\xe3\
\x23\xf2\x52\x0c\xc0\x87\xeb\x03\xd7\x7d\x1c\x3e\xfe\xba\xdb\xca\
\xf4\x5a\xe2\x7f\xf9\xbb\x69\x11\xce\xed\xbf\x06\xb7\xa6\x41\x58\
\x25\x1c\x06\xc5\x73\x68\xf2\x52\xef\x51\x17\xf7\x48\x63\x79\xc2\
\x05\x63\x8d\xb9\x2c\x47\x9c\x9e\xd6\x11\x35\x78\x9b\x14\xfc\x3d\
\x82\x66\x6e\xbd\xc6\xc7\x90\xac\xc9\x15\xd6\x82\x88\xee\x71\x4d\
\xdc\x5f\x07\x9f\x9b\x41\x0b\x5c\x76\xde\x9b\x82\xef\xde\xd0\x8e\
\xce\x05\xcf\x86\x31\xa0\x95\x09\x46\xd7\x5c\x67\x0f\x5c\x1b\xf4\
\x78\x77\x72\x35\xf3\xf7\x4d\x04\xeb\xbd\xd8\x12\x11\xb6\xa2\xa2\
\xa2\xa2\xa2\xa2\xa2\xe2\xb3\xe3\xaf\x11\xac\x9c\x6d\xca\xb6\xfa\
\x56\xfc\x25\xd4\x72\xff\xf6\xd8\xc3\xa4\x52\x51\x51\xeb\x51\x45\
\x05\xe3\xaf\x39\xb9\xd7\x60\x81\xf7\x45\x6d\xd4\x2a\xde\x8b\x3a\
\x00\xaa\x58\x45\x6d\xd2\x2b\x2a\x12\x96\x8d\xff\x15\x15\x15\x15\
\x15\x15\x15\x15\x15\x57\xe3\xae\x0a\x96\x1e\x01\xd7\x85\x5c\xef\
\x8b\xd5\xb2\xad\x6a\xe2\xb7\x47\x35\xed\x54\xbc\x17\x06\x66\xc3\
\x44\xc3\x5a\x8f\x2a\xbe\x07\xee\x4e\xb0\xe6\xa6\xdd\x4b\x70\x41\
\x59\xe8\xb5\xa2\xa2\xa2\xa2\xa2\xa2\xa2\xe2\xb3\xe2\xee\x6c\xa6\
\x14\x3f\x2b\x9f\x16\x5a\x51\x51\x51\x51\x51\x51\x51\xf1\x99\xd1\
\x08\xa9\xb1\xd6\x26\x82\x23\x6a\xd2\x2d\xc1\x44\xd7\xa0\xe3\x75\
\xe4\xe6\x42\x9d\x87\xd9\xeb\x1b\xc3\xf1\x38\x88\x10\x42\x98\xa4\
\x61\xad\xbd\xf8\xcd\x1c\x91\x5b\x23\x78\x9f\xc9\x01\xff\x5a\x62\
\x3a\xf7\x5c\xdf\x4d\x6f\x89\x56\xd3\xd8\x62\x86\x5a\xab\x03\x9b\
\x62\xe0\xec\xf0\xf8\x74\x3d\xb9\x29\xe0\xe9\x03\x61\x4b\x7d\x5e\
\x5b\x44\x7b\xcf\x7c\xcc\xb5\x01\xa2\x72\x97\xde\xc9\x6b\xde\xcf\
\x2d\x75\x68\xed\x9c\x2d\xe5\xc1\xe1\xe3\xc6\xb4\x44\x81\xdf\xb3\
\x9e\x6c\x0d\xde\xf8\xd1\x83\xd7\xb9\x58\x54\x93\x67\x04\x7a\xf7\
\x8c\x64\xc2\x7d\xde\xb3\xb5\xfb\xd1\x75\xb1\xf4\x7c\x3f\x2a\x8f\
\x4b\xf5\x74\x29\xdf\x7b\x60\xe9\x1d\xbb\x25\x78\xf6\xad\xf5\x6f\
\x4b\x7d\xd6\x16\xb1\xb9\xe3\xa5\xbc\xaf\x05\x26\xd5\xc7\x43\x08\
\x89\x5b\x68\xeb\x9a\xe6\x1e\x4b\xf8\x7c\x4b\xe5\x90\x44\x14\x66\
\xcc\x15\xf0\x67\x22\x48\x15\x15\x15\x23\xe6\x1a\xe5\x5b\x23\x7a\
\x57\x54\x54\x54\xdc\x82\xf7\x06\x26\xfd\xb4\x0e\x4f\x5b\x23\xb7\
\x56\x54\x54\x7c\x2e\x84\x10\x8a\xea\x51\xae\x52\x6f\xc1\x96\x06\
\xf2\x31\x56\x0d\xa8\xa8\xa8\x78\x44\x6c\x89\x0a\x3f\x87\x4f\xa7\
\x60\xe5\xeb\x61\xd5\xd1\x6c\x45\x45\x45\x8e\xa5\xe5\xaf\xb6\xba\
\x3e\xd4\x45\xc5\x2b\x2a\xbe\x37\xae\x59\x3b\xb7\x84\x4f\xa9\x60\
\x2d\xdd\x60\x1d\x81\x56\x54\x7c\x6e\x2c\xf9\x44\xee\x31\xa0\xda\
\xb2\x60\x6d\x6d\x47\x2a\x2a\x2a\x34\xb6\xf8\xc3\xe5\xf8\x74\x0a\
\x56\xbe\xa0\x7b\xc9\xf9\xb8\xfa\x69\x54\x54\x7c\x5e\xcc\x39\xb7\
\x8e\x52\xfd\xfa\xbb\xbd\x65\x52\xc2\xda\x39\x5b\xda\x90\xca\xc3\
\x2a\x2a\xbe\x2e\xde\xeb\x7a\xf4\xa9\x15\xac\xd2\x7a\x86\x75\xe4\
\x59\x51\xf1\xb9\x51\x9a\x1d\x04\x8c\x23\xc8\x6b\xde\xf1\xd2\x24\
\x98\x2d\xb3\xb2\x6a\x3b\x52\x51\x51\x01\x4c\xb9\x85\x6e\x1b\xb6\
\x0c\xc0\x3e\x1d\xc1\x92\x19\x84\xf9\x54\x5a\xbd\xaf\xa2\xa2\xe2\
\xf3\x42\x1c\xd9\xe7\x88\xcf\xad\x61\x49\xb6\xa0\xb6\x21\x15\x15\
\x15\x82\xf7\x72\x8b\xa2\x89\xb0\xd4\xb0\x5d\x6b\x72\xd3\x92\xfe\
\x5c\x26\x4b\x69\xce\x8d\x5c\x93\xd9\x80\xe2\x71\x83\x89\x7f\xa9\
\x81\x81\x35\x76\xdc\x17\xd4\x39\x66\x3c\x67\xfa\xd3\xf7\x34\xa6\
\x26\xdb\x16\x40\xeb\xcb\x46\xac\xaf\x2b\xb1\x9e\x86\xb9\x35\xe8\
\x93\x94\x25\x28\x7e\x55\x3e\x2f\xe9\x8b\x52\x09\x3f\xdc\xa1\x97\
\xef\xd5\x9a\x4b\xde\x7f\xfd\x4c\xaf\xf7\x9b\x88\xab\x95\xf9\x12\
\xef\x5d\x4e\x87\x8f\x2f\xc7\xb3\x5a\x32\xd9\xcd\xc5\xbf\xd9\x0b\
\xb7\xd6\xb3\xf1\x77\x7f\xa9\xd2\x98\x2c\x16\x15\x7f\x99\xfe\xfd\
\x4e\xcc\xf5\x03\x93\x32\xdb\x94\xd0\xbb\x4f\xd8\x1d\x25\x7f\x3f\
\xe2\x03\xb2\x73\xdc\x37\x9e\xf8\x61\x36\xe2\x5c\x29\xd9\x54\x13\
\xd7\xde\x89\xb5\x77\x13\x5b\xba\xab\xf7\xbd\xff\x5b\xb1\xcd\x3c\
\x4f\x8b\x7f\x97\xd2\x2b\xc5\xc3\x9a\x8d\x0b\xb9\xe2\x3a\x70\x55\
\x1c\xac\x3d\x0a\x26\xaf\xa4\x53\xbf\x89\x6d\x8d\xf3\xd2\xec\x9f\
\x98\x32\x13\x0a\x69\xa7\x85\x3c\x19\x33\x59\x07\x8b\x88\xc6\xe3\
\x54\x0a\xaa\x39\x6d\xe8\xaf\x87\xe1\x0f\x2d\xdc\x93\x31\x1b\x2e\
\xb1\xc6\x9e\x36\xa4\x71\x6d\x67\x33\x6d\x7f\x31\x52\x4e\xfe\x4c\
\x2b\xdc\x7d\x1b\x3b\x63\xec\xed\x84\x71\x4c\x65\x9f\x6c\x9b\xcb\
\x97\xf1\xb3\xe2\xb3\xe4\x7f\x35\x88\xec\x8e\xe4\x6a\x1b\x19\xdc\
\x02\x4d\xca\x2e\xf7\xdd\x07\x74\x41\xac\x26\x30\x5b\xee\x67\xdd\
\xa0\xb1\x1e\xe4\xd7\xac\x72\x8e\xd5\x7c\xdc\xa9\xe8\xb6\x3c\xdf\
\xfc\x8c\x8b\x4e\x7d\xc7\xfc\xcc\x5d\x63\x6e\x9f\xc6\x1e\xef\xc4\
\x1e\xad\xfd\x47\x84\x4b\x9a\x8b\x8b\xb7\xe5\xfd\xcd\xcb\xe5\xbd\
\x3e\xdb\xa5\xe0\xb3\x4b\xf8\x7c\x4e\xee\xbb\x60\x27\xe2\xb0\x44\
\xae\x2a\x2a\xbe\x20\x3e\x0b\x51\xab\xa8\xa8\xa8\xf8\xdb\xf8\xa6\
\x04\x4b\xb0\x34\x62\xfb\x8e\xe4\xc9\xa8\x0f\xf0\x31\x65\xf0\x1d\
\xcb\xb5\xa2\xa2\xa2\xa2\xe2\xbb\xe1\x9b\x13\xac\x8a\x87\x43\xb6\
\x14\x52\xc5\x63\xe1\x1e\xa6\x8a\xf7\xe6\xe1\x5e\xf9\xb8\x27\x1e\
\xc5\xac\x56\xf1\x77\x70\x8b\x4f\x52\xc5\xdf\xc7\xa7\x9b\x45\x58\
\x51\x51\x51\x51\x51\x51\x51\xf1\xe8\xa8\x0a\x56\xc5\x43\x81\x40\
\xab\xee\x71\x5f\x4d\x9d\xf8\x4c\x78\x94\xb2\x7f\x04\x25\xed\x5e\
\xd8\xe2\x50\xfb\x85\x6e\xb7\xa2\x80\x2d\x13\xc4\xd6\x27\x20\x54\
\xdc\x1b\xdf\x97\x60\xd1\x9a\x78\xb7\xa1\x3a\x7e\xa5\x1a\x4b\x25\
\xdf\xab\xea\x83\x55\x51\x51\x51\x51\x51\x71\x0b\xbe\x2f\xc1\xaa\
\xa8\xa8\xb8\x0a\xd5\x0f\xa4\xa2\xa2\xa2\x62\x3b\x12\xc1\xd2\xf1\
\x2b\x4a\x01\xb8\xd6\xe3\x53\xad\x63\x2e\xd0\xa8\xbe\xae\xb5\xdb\
\x62\xb1\xbc\x27\xa6\x96\x51\x01\xe2\xe6\x62\x8e\x48\x34\xe9\xb9\
\xbc\xcf\x41\xff\x26\x84\xf0\x6e\x53\xc6\x96\xb8\x3f\xf9\xbd\xce\
\x05\x03\x9c\x3b\x47\x9e\x7d\x08\x21\xa5\x57\x4a\x67\x2d\xd0\xe0\
\x52\x5e\x65\xbf\x5c\x63\x2e\x3e\xc9\x1a\x36\xc5\xae\xb9\xf2\x59\
\x95\x9e\x33\x11\xdd\x45\x6b\xdb\x96\xd7\x7d\x62\xd4\xc9\xf3\xd1\
\xef\x98\xd4\x51\x22\x82\x73\x6e\x53\x3a\x4b\xd8\xc5\x94\xb1\x83\
\xbd\x4b\xea\xd9\x52\x3e\xd6\x30\x09\x70\x3c\x53\x47\x76\xc1\x86\
\x64\xd6\xcb\x64\xdf\x38\x86\x9f\x1d\x93\x20\xa1\x73\xe7\x6c\x08\
\xbc\x39\xf7\x3b\xf9\x6c\xe9\xaf\xb6\xa0\x14\x00\xb3\xb4\x6f\xaf\
\x6b\x7c\x07\xac\xb5\x35\x73\x81\x45\xf5\x6f\x74\x7f\xa5\x9f\xfb\
\xd6\xd8\x9e\x9f\x52\xc1\xd2\x1d\xf9\x52\x03\x28\xdf\xf3\x88\xf2\
\xf9\xef\xae\x0d\x38\xb8\x54\xb8\xf9\xb5\xf7\x0b\x66\x38\x8f\x52\
\x19\xcc\x11\x98\xb9\xa8\xb5\x3a\x2f\x9a\xf8\x6e\x49\x33\xff\xfd\
\xdc\xf1\x6b\xf6\xdd\x8a\x8f\x8e\xf4\xfd\x59\x91\xbf\x1f\x79\xbd\
\xaf\xea\x54\x45\x45\x45\xc5\xbe\xf8\x74\x04\x8b\x3b\x82\xf5\xce\
\x60\xae\x43\x49\x5b\xab\x47\xeb\x65\x42\xa6\x47\xc1\x6b\x23\x8c\
\xb9\xbf\xdf\xdb\x29\x5d\x3b\x25\x7d\x8b\x92\x55\x3a\xc6\xa4\xc4\
\xae\xa6\xb7\x75\xa9\x94\x3c\x82\xff\x1c\x29\x2d\xa7\x37\x4f\x68\
\xb7\x2a\x7e\x5b\xf3\xf9\x5d\x71\x4b\xb4\xe8\x8a\x8a\x8a\x8a\x8a\
\xed\xf8\x74\x04\xab\xb4\x1c\x4f\x69\x7f\x3e\x42\xcf\x47\xed\xc1\
\x5f\x92\x27\xbd\xcd\xa5\xc0\xf2\x75\x96\x25\xdc\x2d\x04\x6b\x0f\
\x89\xb9\xa4\x44\xac\x99\xea\x2e\xbf\x5b\x00\xcb\xca\x60\x49\x39\
\xcc\xcf\x1d\xf7\x6b\xf3\x8a\xbe\xfe\xe5\xb5\xf5\xdf\x44\x01\x25\
\x71\xbe\x44\x98\xd7\xce\x59\xc2\x35\xcb\x23\x7c\x05\x2c\x29\x58\
\xa5\xe5\x23\xd6\xd2\xa8\xa8\xa8\xa8\xa8\x58\xc6\xa7\x23\x58\x1a\
\x5b\xed\xab\x25\x72\x34\x28\x7f\xa3\x35\x32\x95\x13\xaf\x11\x53\
\x1f\xab\x8f\x52\x00\xb6\xa8\x36\xa5\xbf\xaf\x23\x59\xa3\x32\xb8\
\xe4\x53\x55\x3a\x26\x5b\xed\xb7\xb6\x66\xc6\xd5\xe7\x4c\xf7\x13\
\xf2\x6c\x97\x4c\xbc\x4b\xf7\x74\x2f\x3f\x9f\xcf\x8c\x52\xf9\xec\
\x51\x26\x55\x05\xab\xa8\xa8\xa8\x60\x7c\x3a\x82\xa5\x4d\x59\x4b\
\x8d\xb9\x76\x30\xcf\x09\x14\x00\xf4\xbe\xac\x56\x2d\x29\x51\x97\
\x24\xac\x4c\xb0\xae\xf1\x6d\x59\x73\xc6\xdd\x82\x92\x73\xf2\x16\
\xb3\xe1\x34\x6f\x5c\xae\x39\x41\xd2\x04\x28\x84\x50\xdc\x3f\x47\
\xa6\x4a\xe7\xe5\xe6\xbe\xcb\x74\x00\xad\x7e\xe5\xe9\xcf\xa5\x73\
\x8d\x19\xf1\x3b\x22\x57\x74\x4b\xc7\xb7\xe0\x1e\x26\xef\x8a\x8a\
\x8a\x8a\xaf\x80\x4f\x47\xb0\x80\x75\xdf\x27\x3d\x33\x6a\x8e\x40\
\x0d\x61\x9c\x64\x92\x9f\xaf\xd3\x4c\x26\xc5\x48\x84\xc6\x99\x76\
\x01\x44\x7e\x92\x87\xd2\xef\xef\xa9\x0a\x2c\xf9\x5f\x69\x53\x64\
\xd9\xbc\x67\x61\xad\x83\x98\x09\x4b\x6a\xd4\x1c\xc1\x2a\xa5\x9d\
\x9f\x37\x47\x84\xa6\x1f\x20\x57\xb0\xb6\x5c\x6f\x89\xd4\xcd\xe1\
\x3b\x76\xf4\x52\xfe\x25\x73\xfa\x16\x6c\x29\xb3\xef\x58\xae\x15\
\x15\x15\x15\x25\x3c\x28\xc1\x9a\x6f\xf0\x43\xa0\xe8\xa7\x03\xa4\
\x75\xeb\xd4\x16\x86\x49\x50\x08\xcc\xa0\x02\x11\x28\x04\xde\xd2\
\x78\xee\x10\xf8\x74\x0a\x04\x02\x81\x02\x21\x50\x60\xd2\x15\x1d\
\xdc\x03\x11\x10\x7f\x27\xdf\xd3\x3e\x04\x10\x0d\x00\x08\xbc\x2b\
\xc4\x2d\x8d\x79\x9a\x74\x66\x06\x30\x04\xd0\x74\xbb\x9b\xd6\x62\
\xcc\x98\x96\xfe\x1e\xff\xd6\x2a\x97\x89\xfb\x78\x63\x00\x02\x8c\
\x71\xb0\xd6\x25\x15\x6b\xfa\xb1\x30\x86\x40\x64\x60\x0c\xc5\xbf\
\x71\x71\xae\x90\x33\x93\x93\x34\x63\x60\xe3\x36\x19\x24\xf3\x6b\
\x58\x1b\x8f\xb1\x0f\xd6\x12\x69\x9a\xdc\xcb\x0c\x91\xb3\xf6\x3a\
\xb3\xea\x47\xc1\x40\xaa\xa5\x01\x81\xe2\x76\x09\x94\x9d\x4b\x69\
\xff\xfa\xe4\x0e\x39\x27\xdf\x6e\x53\xb0\xf6\x50\x53\x2b\x2a\x2a\
\x2a\x2a\x18\x89\x60\x2d\xf9\xad\xdc\xa2\xc6\x94\xa6\x82\x73\xe7\
\x81\x69\x47\x9b\x7c\x7f\xb8\x43\xb0\xc6\x82\x68\x74\xba\xe5\x9f\
\x9b\x91\x14\x84\x90\xc8\x0c\x42\xe0\x00\xe4\x81\x10\x00\xc0\x07\
\x78\x04\x26\x4b\xb9\x8a\x25\x84\x29\x10\x06\x78\x78\x02\x82\x21\
\x90\x27\x78\xf2\x08\x43\x40\x40\x48\xc4\x48\x7e\x2f\x64\x8d\x22\
\xb1\xf2\x44\x20\x1f\x10\xe0\x01\x78\x10\x06\x10\x19\x10\xf9\x91\
\x60\x45\x22\xc7\x84\x2d\xde\x3f\x19\xc0\x84\x78\x6f\x01\x20\x0b\
\x98\x80\x10\xbc\x14\xc4\x04\x66\xa6\x33\x95\x8e\x57\x7e\xa3\xbf\
\x5b\x63\x27\xfb\xa6\x84\xc3\x4e\x7e\xc3\xc4\x47\x08\x96\x81\xb5\
\x2d\x9c\x6d\x0a\xc4\x0a\x00\x98\x60\x31\x01\x03\xa6\x04\x4b\x13\
\x2d\x0b\x63\x1a\x58\x64\xc4\x2b\x11\x2c\xc0\x59\x07\x02\xe0\x6c\
\x24\x5c\xc6\xc0\x1a\x0b\x63\x0d\x6c\x5c\x1a\xd3\xa8\xbc\x73\x7e\
\x49\x9d\x6b\x10\xbc\x4f\x75\x28\x91\xb3\x74\x1e\x60\x2c\xc0\xb7\
\x1b\xa9\x4d\x52\xc7\xd4\x36\x3e\x13\x63\xd4\x76\xfa\x00\x00\xb2\
\x97\xfb\x33\x32\x3f\x21\x41\x8a\x4b\xcb\x55\x98\x70\x03\x86\x0c\
\x60\x09\x86\x2c\x13\xec\x49\x9a\xe3\xfd\x31\xf9\xb6\x00\x02\x0c\
\x19\x10\x42\x3c\x3f\xc0\xc0\xaa\x8b\x4c\xb2\x14\xe5\x58\x02\x20\
\xe9\x5b\xf5\x9b\x6d\xef\xf7\x7d\xb0\xa5\x0d\x59\x53\x1f\xf7\xc9\
\xc9\x16\x94\xdb\xb1\x7d\xcb\x6c\x8f\x94\xe6\xda\x8b\xab\x2e\xb2\
\xc3\x98\x63\x53\xb1\xac\x66\xf5\x3e\x19\x59\x3d\x23\x9d\x90\xf9\
\x8e\xc6\x7f\x8d\x0c\x94\xaf\xb8\x52\xfa\x46\x85\x7d\x6a\x3f\x77\
\x7b\xca\xd2\x30\xb9\x0e\xe9\x53\x55\xbe\xcc\xe4\xf8\xc5\x39\x93\
\x24\x28\x3b\xb3\x70\x4a\x31\x91\x65\x6c\x52\xb9\x37\xa7\x36\x3d\
\xbf\x54\x4e\x5b\x21\xdc\x65\x0f\x9f\xe9\xc9\xef\xf2\x34\x84\x2b\
\xc5\x3f\x9b\x6b\xfc\x86\xae\x75\x1c\xce\xcf\x97\x0e\x50\x3a\x14\
\xce\x8c\x4b\x15\x96\xff\xb5\x71\x34\x1d\x3b\xb1\x10\x8f\x45\x65\
\x84\x3b\xb7\xf8\xdb\x90\x78\x0b\xab\x50\x3e\x60\x08\x9e\x09\x97\
\x10\x2c\x8c\x64\x27\xf8\x00\x0a\x01\x1d\xf5\x80\xb5\x18\x10\x40\
\x3e\xa0\xf7\x03\xc2\xe0\xe1\x69\x24\x58\xac\x4c\x11\xbc\x67\x12\
\xc4\xf9\x21\x78\x0a\xf1\xdc\x01\xc6\x06\x10\xf5\x20\x32\x08\x61\
\xe0\x3b\x9c\x31\x49\xf2\x66\x24\x58\xb2\xf5\xa1\xbf\x28\xbb\x52\
\xf9\xeb\xe7\x34\x67\xba\xb3\xd6\x5e\x98\xcf\x44\x45\x5a\x32\xdd\
\x01\x06\x8d\x3b\xc2\xb9\x36\x91\x2f\x4d\x70\x40\x06\xc6\x02\x8d\
\x6b\xc1\x1c\xce\xaa\x6d\x24\x4f\x30\xac\x82\x99\x30\x55\xb6\xf8\
\xa2\xb0\x86\x95\x9b\xb6\x69\xf8\xb1\x5a\x9b\xf6\x5b\x6b\x61\xc8\
\x32\x31\x83\x85\x01\x2b\x50\x62\x32\x8c\x25\xc0\xf7\x66\x0d\x88\
\xb4\xa9\x12\xb0\xa4\xcc\x8a\x06\x30\x14\xe0\x43\x24\x25\x59\x19\
\xc8\xfd\x49\xd5\x34\x63\x73\x39\x29\x6f\x1b\xcf\xb1\x28\xd4\x69\
\xf5\x5b\x51\x00\xa7\x2f\xdd\x98\x17\x56\x48\x45\xd9\x1c\x61\x98\
\x9d\xc5\xf4\x24\x6f\x42\xa0\x62\x79\xa6\x46\x35\xf0\xc7\x18\x95\
\xb8\xaa\x2b\xc4\xea\xab\x1c\x1b\x35\x32\xf9\xcd\xbc\xaf\x5f\xa9\
\x5e\x2d\x61\x1f\x62\xf1\x38\x04\x6a\x0b\x3e\x9a\x80\xd2\xd5\x5d\
\xce\x25\xcc\x96\x8e\x7e\xe5\x32\x7b\xe4\x23\xd5\xe9\x3d\x12\x5a\
\xc0\x1e\xd7\x58\xed\xcf\x60\x66\x08\xd4\xd8\x6a\x6c\x22\x14\x2a\
\x89\x52\x7f\xbb\x05\xba\x7d\x4a\x3f\x9d\xed\xb3\x55\xbe\xf4\x75\
\x74\x3e\x74\xfe\x94\x80\x52\xda\x3f\xe1\x06\x1b\xf2\xba\xe6\x97\
\x7c\x35\xc1\x7a\x47\x3e\xf2\x36\x2d\x1f\x2c\xad\x3d\x87\xb9\x73\
\x53\x99\xc5\x27\x93\x97\xb7\x5c\xf7\xaf\x9b\x08\xc7\x4c\x0b\x19\
\xb1\x49\xb9\x0a\x5e\x46\xde\x01\x52\xa4\x3e\xf4\xf0\x7e\xe0\x0e\
\xc3\x07\x78\x10\x2c\x01\x03\x05\xd0\xe0\x31\x10\x9b\x06\x93\xc9\
\x2f\x88\x89\x2f\xc0\x7b\x0f\xf2\x4c\xb0\x82\x25\x78\x1a\xe0\xbd\
\xc7\x30\x0c\x18\x06\xfe\x2e\xa4\xa8\xef\x7b\xf4\x7d\x3f\x55\xb0\
\x62\x7e\xbd\xf7\x08\xe4\xd1\x87\x73\x54\xae\x2e\xa3\xa0\x03\x80\
\xf7\x1e\xde\xfb\x8b\x7b\x9d\x9c\x13\x86\x59\x72\x65\x8c\x41\xd3\
\x34\x70\xce\x5d\x92\x55\x45\x9a\x86\x61\x98\x9a\xe4\xd4\xf1\x39\
\xc2\x25\x64\x4c\x48\x07\x2b\x1e\x36\x91\xa3\x09\x29\x89\x69\x1e\
\x8f\xc7\x49\xba\x3a\x2d\x03\x0b\x67\x1a\x38\xdb\xc2\x18\x0b\xe7\
\x5c\xf1\x5a\xe7\xee\x32\x2f\x3a\x9f\x16\x0e\xce\x34\xac\x96\x81\
\x89\x9d\x98\x53\xad\x71\xb0\xce\xb0\xd2\x66\x59\x39\xb3\xd6\xc2\
\x2a\xa5\x0c\x00\x8c\x25\xfe\x44\x02\x56\xf2\x1d\xd3\x04\x4d\x08\
\x97\x2e\xfb\x00\x83\x66\xc5\xcc\xa8\x95\xce\x92\x42\x64\x8c\x81\
\x08\x94\x64\x08\x26\x18\x0c\x18\x26\x65\x9a\x9e\x79\xc0\xa8\x6c\
\x19\xee\x30\x89\x88\xc9\x92\x65\xc2\x15\x47\x1b\x59\xa3\xc1\x83\
\x01\x51\xe6\x12\xc9\x32\xa4\x7e\xb3\x4f\xb4\xe9\x8a\x8a\x8a\x8a\
\x8a\xed\xb8\x2f\xc1\xe2\x5e\x11\xc0\x54\x7d\x1d\x49\x14\xd0\x7b\
\xee\x81\x43\x20\x84\x10\xc9\x4c\x50\xfe\x4d\x14\xa2\x7f\xd4\x00\
\xf2\x01\x9e\x02\x0c\x01\x9e\x02\x7c\x3f\xb0\x82\x45\x00\x51\x50\
\xea\x13\x7f\x1f\x86\x01\xc1\x7b\x0c\xa1\xc7\xdb\xf0\x06\x4f\x43\
\x22\x57\x39\xc1\xe2\xdf\xf8\xf4\xd1\x26\x43\xd9\x77\x1e\xce\x69\
\x5f\xc9\xb1\x1e\x58\x96\x24\x4b\x0e\xc7\xf9\xf7\x9c\xe0\xe9\xe3\
\xf2\x11\xa6\x3e\x47\xb0\x72\x53\xa1\x7c\x9c\x73\xea\x98\x8d\x26\
\x40\x93\x8e\x4d\x08\x54\x96\x86\x73\x2e\x9d\x93\x3e\xb0\x6c\xee\
\x33\x26\x1d\x97\xef\x92\x46\xdb\xb6\x17\x24\x67\x4c\xdf\xc2\xc2\
\xa1\x71\x8d\xf2\x07\x23\x18\xe3\x60\x0c\xc1\xb9\x16\xd6\x03\x62\
\xb2\x4c\x04\x4b\x11\x38\xc0\xc0\x5a\x17\x1d\xf6\xcb\x8a\x9d\xbe\
\x87\xd2\x39\xa9\x8c\x1b\xc0\x63\x0a\xfd\xcc\xd6\x66\xaa\xea\xd1\
\x52\x49\x45\x94\xef\x4c\x50\x8d\x1a\x17\x27\x1b\x63\x54\xd1\xf8\
\x9e\x75\xbd\xc8\x49\x56\xf2\x4b\x9c\x39\xe7\xd1\x54\xa1\x8a\x8a\
\x8a\x8a\xaf\x8e\xbb\x12\xac\x69\x07\x66\x21\xb3\xf0\x44\xb1\x2a\
\xf9\x3e\x05\x4f\xf0\xc1\x2b\x02\xc3\xdb\x81\x06\xd0\xc0\x5b\x78\
\x60\xa0\x01\xbe\xf3\xe8\x43\x0f\x04\x24\x65\xaa\x1f\x7a\xf8\xc1\
\x63\xf0\x03\x86\x7e\x40\xf0\x01\x9d\x3f\xe1\x3c\xbc\x60\x08\x3d\
\xbc\xf7\xe8\xfb\x3e\x91\x2c\x4d\xb0\x64\x9f\x1c\x97\x7d\xf2\xb7\
\x27\x33\x21\x5c\x49\xdd\x8a\x79\x95\xdf\xcf\xc3\x82\xc2\x25\xa9\
\x9a\x53\xb4\xb4\xe4\x39\x47\xa6\xe6\x14\xab\xa6\x69\x2e\xce\xd3\
\xc4\xc9\x35\x16\x4d\x33\x12\x22\x4d\x90\xe4\x3c\x4d\xa8\x9c\x73\
\x68\x9a\x66\x92\x56\xe3\x2c\x1a\x45\xca\xf4\xef\x25\x0d\x51\xc1\
\xf4\x71\x9d\x2e\xab\x5f\xec\x0f\x66\x8d\x81\x71\x6c\x38\x34\xce\
\xa2\x75\x0d\x8c\xb3\x20\x1f\x00\xcb\xbe\x5b\xce\x31\x31\x74\x2e\
\xaa\x6f\x30\xb0\xa6\x85\x31\x0d\x0c\xdc\xe4\x9e\x2f\x89\xa6\x2f\
\x12\x3d\x29\x3b\xf2\x01\xc6\x2c\x93\x62\xbd\x6f\xc9\xcf\xa9\x44\
\xf2\xe4\x39\xe6\xef\x46\x4e\xf4\x28\x88\x1d\x3c\xfa\xd8\x19\x93\
\x1c\xe7\x47\xd1\x8a\xbf\x18\x38\xb0\xfe\xc6\x5b\xf6\xe7\x02\xb0\
\x87\xf9\xa7\xe2\x61\x71\x5f\x3f\xba\x8f\xc7\x3d\x4c\x80\x15\x15\
\x1f\x8d\x3b\x9b\x08\xc5\x14\xc5\x9d\x06\x41\x96\xa4\x01\x42\xf0\
\x89\x94\x00\xa2\xdc\xf8\x0b\x02\x33\x78\x56\xa9\x86\xd0\xc3\xf7\
\x01\x43\xe8\x11\x06\x42\xef\x3b\x0c\x9d\x47\xef\x3b\x50\x20\xf4\
\xfd\x80\xbe\xef\xd0\x75\x7d\x34\xf7\xf1\xf7\xe0\x03\x7a\x7f\x46\
\x1f\x5e\xe1\x7d\x87\xbe\xef\x71\x3e\x9f\xd1\x75\x5d\x32\x09\x7a\
\xef\x71\x3a\x9d\xf0\xfa\xfa\x3a\x51\xb7\x34\xc1\xf2\x9e\x10\xe0\
\x40\x91\x64\x69\x13\xe1\x9c\x82\x75\x01\x62\x52\xb0\xa4\x4e\x08\
\xd1\x99\x94\x62\x46\x18\xbc\xf7\x17\x04\x21\x3f\xaf\x69\x9a\xe2\
\x35\x78\xcb\x26\x26\x6b\x59\x64\x14\xc2\x93\x13\xac\xa7\xa7\xa7\
\x0b\x02\x36\x12\x2c\x83\xe3\xa1\xc1\xf1\xd0\xa4\x73\x84\xd4\x95\
\xd4\x2c\x4d\xd0\x9a\xa6\x49\xdf\x8d\x31\x30\x36\xa6\x6f\x2d\x8c\
\x73\x4c\xda\x9c\xc3\xa1\x69\x60\x9c\xe3\xd2\xb2\x16\x4e\x29\x69\
\x29\x5d\xd3\xc0\xe2\x09\x06\x2d\x0c\x9a\x0b\x42\x99\x9b\x25\xf3\
\xef\x63\x19\x52\x24\xbf\x53\xdf\x25\xfd\x6c\xa5\x0c\xe7\xfc\xee\
\xf2\x72\xce\x49\x9e\x31\x5c\x77\x4a\x7e\x72\x7a\xdf\xb8\xe0\xa8\
\xfe\x44\x92\x65\xa2\x3f\x19\xb1\xff\x16\x4f\x81\xb0\x69\x2b\xce\
\xee\x15\x15\x15\x15\x15\xf7\xc5\x1d\x09\x96\x41\x08\x48\xb6\x8a\
\x64\xea\x8b\xe6\x3e\xad\x00\x01\x94\xc8\x15\x13\x1c\xf6\xbb\x1a\
\x82\x47\xef\x3d\x7c\xf0\xe8\x7d\x8f\xa1\x1b\xd2\xf6\xdc\x9f\xd1\
\x9f\x7b\xf4\x9e\x49\x54\xd7\x75\xe8\xba\x0e\xe7\xf3\x39\x11\xa8\
\xae\xeb\xe0\x07\x8f\xde\x9f\xf1\xef\xaf\xff\x0f\x83\x3f\xa1\x3b\
\x0f\x38\x77\x6f\x38\x9f\x7a\x9c\xbb\x37\x36\x4b\x0e\xac\x6a\xf5\
\x03\x13\x2e\xf1\xe3\x62\xff\x66\x8f\xe0\xc1\xa4\x10\x0e\xda\xbf\
\x25\xef\xa8\xe7\xc8\x51\x02\x59\x58\xdb\xa6\xef\x46\x5c\x6d\x30\
\x55\x27\xbc\x8f\x0e\xcc\x64\xd9\xb7\x48\xa9\x14\xc6\x06\x26\x02\
\x36\xf7\x67\xe4\xc4\x78\x1f\xa1\xef\xbc\x52\x41\xf2\x2d\x81\x68\
\x00\x91\x77\x9c\xc4\x87\x00\x00\x20\x00\x49\x44\x41\x54\x8f\x56\
\x5c\x73\x41\x46\xa4\xa3\x2f\x29\x60\x42\xb0\x1a\x07\x34\xce\xc0\
\x39\xbe\xf7\xb6\x6d\x27\x04\xca\x18\x83\xe7\xe7\xe7\x09\xc1\x92\
\x6d\xd3\x34\xb0\xce\x31\x71\x92\xbf\x8d\x85\x6b\x1b\x34\xd6\xc1\
\x36\x0e\x87\xa6\x85\x6d\x5c\x52\xb4\xac\x61\xd5\x8d\xd3\x69\x58\
\xcd\x82\x83\x33\xcf\x70\xe6\x00\x4b\xed\x84\x80\x69\x53\x65\xfe\
\xac\x2e\x08\x98\xa5\xe4\x3f\x95\x13\xa9\xf4\xf8\x14\xa1\xd2\x26\
\xe2\x8b\xe7\x6d\x02\xac\x69\x60\x2c\xf1\xd6\x64\x26\x5c\x3b\x3a\
\xdf\xb3\xaf\x59\x03\xeb\x10\xfd\xd9\x0c\x88\x84\x7c\x0d\x93\xdf\
\x5d\xd4\xa7\x24\x67\x45\x82\x48\xca\x17\x2b\x9f\xb9\x58\xf1\xa5\
\x70\xed\x04\xa4\x47\xc6\x92\x12\x2c\x58\xbb\x9f\x2d\x69\x54\x54\
\x7c\x34\xee\xaa\x60\xf9\x10\xe0\x63\x80\x4f\xee\x94\x06\xe5\xe3\
\x14\x4d\x70\xbe\x53\x26\x3a\x51\x9e\x3a\x74\xdd\x99\xd5\x23\x3f\
\xc0\x53\x40\xe7\x3b\x0c\xe7\x01\xa7\xfe\x84\xe1\x3c\xe0\xad\x7b\
\x43\x7f\xea\x71\x1e\xce\x18\xba\x01\xa7\xd3\x09\xe7\xf3\x19\x6f\
\x6f\x6f\x78\x3b\xbd\xe1\x7c\x3a\xe3\xdc\x9d\x11\x86\x80\x61\x38\
\xe1\xdf\x5f\xff\x0d\xef\x3b\x78\x4f\xe8\xfb\x33\x86\x21\x60\x18\
\x3a\x76\xae\x8f\xaa\x82\x38\x97\x8b\x69\x4e\xd6\xeb\x03\xd8\x39\
\xba\x71\x87\x64\x82\xb9\x34\x3f\x59\x84\x10\xd0\x9d\x97\x9c\xd8\
\x03\xac\x95\x46\x60\x1a\x12\x40\x9b\x90\xb8\x33\x25\x76\xf8\x06\
\xb1\xd2\x64\x64\x2b\xd7\x06\xac\x9d\x73\x6a\x07\xbc\x67\x67\x68\
\x18\x4a\xbf\x19\xef\xc5\x00\x68\x40\x2a\x0f\x17\x66\x2a\x22\x9c\
\x4e\xa7\x0b\x33\xd6\x78\x1e\x45\x93\x6f\xe0\x99\x85\x05\x13\xa0\
\x31\x06\x3f\x7f\xfe\x9c\xa8\x5a\x42\xc0\xd2\xf7\xb6\x81\x6b\x5b\
\xde\x67\x2d\x6c\xd3\xe0\xd0\x34\xb0\x4d\x83\x63\xdb\x4e\x14\x2d\
\xa7\xc8\x9b\xa4\xe1\x8c\xc3\xc1\x3d\xa3\xb5\x07\x18\xd3\x4e\x08\
\x9c\xbe\x4e\x6e\x02\x9d\x9a\x29\xf9\x9e\xc4\xc9\x3d\x2f\x87\xdc\
\x07\x6b\xc9\xd9\xdd\x5a\x7b\x49\xb0\xec\x18\x52\x43\x93\xf0\xf4\
\x1c\x4d\x03\xd7\x18\x58\x33\x44\xdf\x36\x07\xf6\x43\xbb\x24\xbb\
\xb9\xc9\x51\xf2\x78\xd1\x01\x7d\x9e\xfe\xb5\xa2\xa2\xa2\xe2\x4b\
\xe0\xae\x04\x8b\x49\x53\xb8\x20\x58\xc3\xd0\x25\x25\xeb\x7c\x3e\
\x47\x07\xf5\x21\x9a\xef\x4e\x4c\x96\xba\x13\xfa\xbe\xc3\xa9\xeb\
\xd0\x0f\x3d\x3a\x3f\x24\x75\xea\x7c\x3e\xe3\x74\xe2\xf3\xfa\xbe\
\xc7\xe9\x74\xc2\xcb\xcb\x0b\x4e\xa7\x13\x13\xac\xb7\xb7\x44\xb8\
\x58\x11\xeb\x70\x70\x0d\x08\xa3\x0f\x18\x80\xa4\x26\x35\x8d\x51\
\x9d\x26\x80\xa4\x06\x51\xda\x52\x30\x38\x1c\x1c\x9b\x3a\x33\xf3\
\x90\x26\x47\x79\xe7\x97\x9b\xe8\xc6\x80\x98\xf9\xf2\x30\xb2\x15\
\xe2\xc2\xaa\x1f\x77\xae\x3d\xac\xb5\xe0\x40\xa7\x06\x7d\xdf\xaf\
\x9a\x08\x2f\x3b\x64\x1f\x8f\x89\xd2\x31\x5e\x53\x9e\x55\x8e\xc3\
\xe1\x30\xf9\x3b\xef\xc4\x25\x5c\x05\x05\xc2\xe0\x3d\x86\xde\x67\
\xc7\x09\xff\xf9\xef\x7f\x8b\xaa\x11\x2b\x39\x16\xcd\xb1\xc5\xe1\
\x78\x4c\x26\xc3\x36\x92\xad\xb6\x6d\xd1\xb6\x4c\x98\x44\x05\x13\
\x72\x26\xe7\xb0\x59\xd1\xe1\xa9\x79\x46\xdb\x1c\xd1\x58\x0b\x67\
\x1b\x34\xad\x43\xdb\x1c\xd0\x1e\x1a\xf6\xed\x72\x06\x6d\xc3\xe9\
\x19\xf1\x29\x13\x92\xe5\x5c\x52\x93\x5a\x77\x98\xdc\x67\x89\x40\
\xe5\x7e\x83\x17\x04\xcb\x09\x71\xea\x62\x9e\xfb\xc9\x73\x10\xe2\
\xa7\xaf\xe3\x9c\x47\x20\x07\xe7\x02\x6c\x68\xd0\xd8\xb9\x19\x90\
\x97\x33\x45\x25\x9d\x0b\x25\xed\xe2\x69\x56\x54\x54\x54\x54\x7c\
\x24\x16\x09\x96\x26\x0b\xb9\xdf\x49\x49\xa2\x9d\x3b\x27\x99\x02\
\xc3\x48\x5a\xd8\x04\xe8\xd3\xb1\x61\x18\xe0\x43\x8f\xae\xeb\x10\
\x82\x47\xdf\x8b\x79\x8f\x89\xd1\xb9\x7b\xc3\xb9\xeb\xd0\xf5\x1d\
\x7c\xf0\x38\x0f\x3d\x5e\x5f\x5f\xf1\xfa\xfa\x8a\xb7\xb7\xb7\xb4\
\x15\x82\xf5\xfa\xfa\x9a\xfc\xaa\x46\x67\x73\x8a\x2a\x0f\xcf\x50\
\x4b\x01\x4a\xcc\x18\xdb\x88\x67\x20\xc6\xdd\x99\xaa\x24\x30\x06\
\x80\x33\x48\xf1\x8b\x54\x87\x96\xcf\x1a\x9b\x2b\x2f\x3e\x8f\x67\
\x4a\x72\x44\x77\xf6\xa9\xb1\x2a\x86\x54\x6e\x2e\x34\x90\xb0\x02\
\xac\x7e\x21\x46\xae\x71\x0e\xd1\xb4\x14\xa7\xeb\x8f\x93\xd0\xf8\
\x3c\x03\x38\x27\x66\xa2\x31\x50\x69\x20\x9f\x1c\xa4\x75\x47\xbd\
\xe4\xa8\xbd\x0c\x03\x63\x9a\xe8\x09\xa4\xa2\xea\x8c\x05\x0a\x6b\
\x4d\x8a\x8d\x45\x04\xf8\x10\x63\x9e\x99\x00\x63\x02\x7a\x4f\xe8\
\x7a\x0f\x2b\x8a\x56\x54\x78\xb4\xfa\xf4\xe3\xe7\x4f\x56\xb7\x22\
\x01\x3b\x1c\x0e\x68\x0f\x07\xb4\xd1\x54\xd8\x35\x03\x0e\xee\x84\
\x43\xe3\xd0\x34\x07\x34\xfd\x48\xb4\x9a\xe6\x80\xa6\x8d\x7f\x27\
\x13\xa5\x83\x73\x4d\x32\x37\xda\x18\xd5\x9e\xbc\x98\xdb\xca\xa4\
\x45\xfc\xf5\xf2\x59\xa4\x1a\xae\x91\xb2\x95\x99\x9a\xf2\xb7\x8b\
\x24\x99\x7d\x0d\x99\x7c\x39\x58\x6b\x22\x51\x8d\x75\xc0\x7a\x84\
\x30\x2a\x6d\x44\x34\x79\x4e\x92\xaf\x92\xc9\x30\x57\xb5\x66\x9f\
\x5a\xf6\x8e\x6f\x7b\xd6\x1f\x87\x6b\xf3\x31\x97\xff\x6a\x22\x1a\
\x51\x54\x35\x3f\x08\xa5\xe7\xf1\x37\xf2\xf1\x5e\x10\xad\x0f\x4c\
\xb6\xbc\x63\xb7\xd4\xc3\x6b\x07\x48\x5b\xae\x31\xf7\x3c\xf4\xf7\
\xd2\xb3\x99\xba\xb5\x6c\x8f\x1b\x35\x97\xc6\xad\x79\xbd\x16\x73\
\xd7\x2c\xb5\x2f\xd7\x5e\x2f\xa5\x4d\xcb\xed\x55\xb3\xd6\xf0\x96\
\x8e\xcb\xfe\x52\xe6\x4a\x33\xac\x98\xe0\x78\x04\x32\xec\x1c\x1e\
\xcd\x7f\x12\xcf\xaa\x1f\x58\x85\xea\xfb\x0e\xa7\xd3\x1b\x87\x40\
\x38\xb3\xf2\x74\x3e\xb3\x7a\xc5\xa6\xbe\x13\xde\x4e\x6f\xe8\x87\
\x1e\x6f\x1d\xab\x54\x2f\x2f\x2f\x89\x5c\x89\x82\x25\x33\x03\xa5\
\xf3\xd3\x24\x88\xf3\x6d\xe1\x07\xf1\x4d\xb1\x30\x18\x3b\xd2\x14\
\x44\x52\x3a\xc5\xe8\x1f\x43\x14\x09\x03\x85\xd4\x51\xf6\xc1\xa7\
\x0e\x33\xef\xd8\xb4\x7a\x54\x32\xab\x01\x88\xb1\x9a\x98\x58\x18\
\xcb\x01\x57\x47\x35\xc7\x24\x62\x95\x22\xb4\xab\xc8\xe9\xda\xd7\
\xc6\x1a\x65\xa6\x94\xdf\x4d\x9f\x02\x8c\x75\x10\xbf\x1c\xc8\xb2\
\x3e\xf2\x37\x00\x76\xe2\x1a\x95\x90\x12\x59\xc8\x55\xad\x69\xec\
\xaf\xa8\xf2\x25\x87\x7d\xd5\x28\x28\xa2\x98\xea\x25\x11\x02\x01\
\x10\xdf\x36\x21\xa8\xa6\x07\x9d\x7b\x20\x95\x15\x52\xa4\x77\x29\
\x8f\xc3\xe1\x98\xcc\xa1\xac\x6c\x1d\x70\x68\x5b\x34\xd1\x5f\xeb\
\xd8\x3a\x1c\x1a\x87\xa7\x43\x83\xe3\xf1\x19\x6d\xcb\xbe\x6e\x6d\
\x6b\x71\x3c\xfe\xc0\xe1\xd0\x40\x62\x75\xb5\xad\x28\x60\x2d\xda\
\xa6\x41\x7b\x38\x30\xd9\x72\x2d\x9c\x39\x46\xdf\xb8\x72\xf3\x26\
\xc4\x5d\x13\x2d\x0d\x63\x98\x60\xe5\x13\x02\x44\xb9\xd2\xe6\x4a\
\x51\xe8\x46\x12\xc5\x2b\x16\x58\x1b\xeb\x86\x21\x10\xb9\x58\x7e\
\xa4\xea\xb4\x7e\x1f\xb9\x94\x85\xcc\x41\x22\xbb\x83\xe3\xc2\x49\
\x1d\x99\xe6\x71\x1a\x4a\x42\x3f\xff\xd2\xf9\xf7\xc0\x5c\x9b\x73\
\xcd\xef\x4b\x03\x1a\xfd\x1e\xde\xd3\x47\xe7\x51\x88\xde\x5a\x3e\
\x76\x09\x78\x3a\xf3\x9c\x96\xfa\x88\x5b\xf0\x28\xcf\x2e\x6f\xf7\
\x4b\x93\x9b\xae\x2d\xd7\xb5\x34\x36\x4d\xa0\x5a\x48\xf7\x3d\xe7\
\xdc\x8b\x1c\xed\xfd\x7c\x4b\xf5\x6f\xd3\xb3\x7b\x67\x3e\x36\x9b\
\x08\xf5\xc5\x73\xd5\x46\xf6\x8b\xcf\x52\xee\x9b\x22\xb3\xf0\x7c\
\x00\x06\x1f\xe0\x43\x40\xdf\x77\xe8\xfb\x0e\xc3\x30\x24\x02\xc5\
\x6a\xd5\x1b\x86\xc1\xe3\x74\x7a\xc3\xdb\x5b\x54\xa7\xde\x5e\xf1\
\xf2\xf2\x82\xb7\xd7\x57\xfc\xfa\xf3\x0b\xaf\x6f\x6f\x38\x0f\x5d\
\x32\xfb\x49\x50\x50\x21\x55\xd2\x89\x51\x54\xa3\x84\x64\x8d\x79\
\x02\x6c\x18\xfd\x5e\x58\x59\x69\x60\x0c\x25\x3b\x59\x89\x20\x21\
\x06\x6e\xe4\x75\xfb\x80\x30\x9c\xd9\xb1\xda\xc5\x8e\x13\x4c\x70\
\x9c\x75\xb0\xce\xf2\xd6\x4a\xb4\x73\x3e\x4f\xcc\x58\xbc\x9f\x60\
\x1d\x01\x66\x80\x35\x4d\x54\xa1\xa6\x7e\x40\x23\xc1\x62\xe7\x76\
\x16\x2a\xd8\xb4\x37\xce\x10\x93\xe3\x05\x7f\x9c\x18\x88\x52\x96\
\x5f\x21\x32\x20\xf8\x34\x43\x8e\x23\xca\x1b\x50\x00\x42\x90\x32\
\x1b\xc3\x64\x00\x23\x91\xca\xc3\x58\x4c\xfc\x8e\x02\xe0\x03\xaf\
\xd5\xc8\x44\x48\xab\x6e\xe3\x77\x3f\x46\xde\x8c\x79\x33\xec\x1a\
\x06\x4d\xd6\x49\xfe\x07\x99\xb8\xfe\xa3\xf1\x90\x80\xa3\xa7\xd7\
\x2e\xde\x6f\x34\x2f\x3a\x09\x38\xca\x04\xb4\x6d\x08\xad\x05\x8e\
\x47\x87\xa7\x27\x26\x54\x4d\x73\xc0\xe1\xd0\xa4\xbf\x9d\x1b\xcd\
\x8e\x6d\xdb\xe2\xd0\x1e\xd0\x1e\x58\x0d\x6b\x5c\x8b\xa6\x3d\xe0\
\xa9\xf9\x07\x20\x17\xcd\xb8\x4c\x66\x45\x85\x05\x08\xc3\xe0\xc7\
\xba\xed\x07\x78\xcf\xa4\x48\xea\x8a\xb1\x40\xd3\x88\x23\x7e\x8b\
\xb6\xe5\xeb\x6a\xc7\xff\xc3\xe1\x80\xc3\xe1\xc0\x2b\x0d\x50\xe0\
\x09\x02\x81\x15\x34\x17\xb8\xae\x18\x09\x9f\x41\x2d\x8c\x01\x88\
\x54\xdc\x2f\x29\x63\x84\xe8\xc7\x1e\xc9\x38\x39\x26\xf0\xc4\xc4\
\xda\xb8\xa9\x3a\xa9\x07\x47\x4b\xaa\x74\xa9\x0d\xa8\xd8\x17\x5f\
\xa9\xdc\xf7\x52\x30\x2a\x2a\xbe\x02\xae\xf2\xc1\x9a\x53\xad\xf4\
\xdf\x44\x34\x31\x9b\x88\x13\xbb\x38\xa8\x77\xc3\x00\x1f\x3c\xba\
\x33\x3b\xae\x77\x5d\x8f\xb7\xd3\x6b\xf4\x99\x7a\x4b\xa1\x11\x5e\
\x5f\x5f\xf0\xe7\xcf\x9f\xa4\x52\xfd\xf9\xf3\xc2\x84\xeb\xf4\x86\
\xc1\x0f\xe8\x7c\x0f\xdf\x73\x9a\x69\x31\x67\x1f\xd5\x90\x40\xbc\
\x9a\x4e\x10\xc5\x46\x96\x00\x88\x0b\xb1\x18\x83\xf6\x70\x00\x9b\
\xb4\xa6\xeb\xea\x21\x9e\x07\x70\xa3\xe0\x9c\xea\xcc\xa2\x3a\xc0\
\x71\x97\x0c\x7e\xba\x9f\x13\x85\x82\xcf\x1f\x4d\x5a\xa5\xd9\x76\
\x53\xe7\x6a\xc0\xd8\x10\xcd\x7d\xda\x94\x64\xb2\xfc\x20\x76\xa4\
\x36\x75\xf6\x29\xc2\xb9\x52\xb2\x60\x64\x36\x5a\x7c\x26\xfc\x40\
\xe2\xbd\x58\x50\x5c\x5b\x28\x2d\x4c\x2d\x6b\x0d\xc1\x80\x88\x15\
\x2c\x21\x10\x9a\x40\x95\xb6\x97\xe6\x31\x70\x68\x8c\x61\x5c\x6e\
\x28\x2d\x7a\x2d\xa3\x2f\xe2\x25\x8b\x78\xb5\x23\x61\x50\x98\x9e\
\x27\x36\x4e\xc2\x78\x5f\xa2\x70\x45\x82\x45\x31\xea\x39\xc9\xf2\
\x47\x3d\x25\xe5\x11\x20\x18\xf4\x30\x34\xa0\x69\x0d\x0e\x87\x63\
\x8a\x95\xd5\x34\x0e\x6d\x7b\x88\xaa\xd5\x01\xc7\xa7\x23\xda\xa6\
\xc5\xe1\x78\xc0\xf1\x70\xc0\xf1\xf8\x84\xa7\xa7\x63\x24\x43\x47\
\xfc\x3c\xfe\xaf\x30\x18\x9d\xf5\x81\x69\xe0\x57\x1d\x13\x4d\x94\
\xac\xd1\x9f\xcf\x46\x05\x8b\x63\x75\x69\x32\xe7\x9c\x4b\xc4\xea\
\xc7\x8f\x1f\x20\x04\x04\xf2\x20\x04\x26\x55\x81\xeb\x0f\x2f\x28\
\x4e\xb0\xe8\x78\x80\xe0\x58\xa5\x72\x70\xa0\x18\xd4\x95\xb9\xec\
\x38\xd1\xc0\x18\xc7\x2b\xe4\x44\x33\x6d\x5a\x9f\x31\xf2\xbe\x92\
\x09\x71\xc9\x6c\x53\x3b\xc3\xbf\x8f\xcf\x64\xee\x9c\x33\x97\x68\
\x12\xaf\x57\xb7\xa8\xa8\xf8\xca\xd8\x4c\xb0\x72\x33\x97\x86\xbc\
\x54\xda\x9f\x4a\x88\x96\x8c\xf0\x7b\x3f\xe0\xdc\x9d\x71\xee\x4e\
\x18\x62\x9c\x29\x56\xa9\xce\x78\x79\xf9\x83\x3f\x7f\x7e\xe3\xed\
\xed\x0d\xbf\x7e\xfd\x46\xdf\xf7\xf8\xf3\x87\xf7\xbd\xbc\xbc\xa6\
\xf3\xce\xe7\x33\x08\x21\x9a\xe7\x06\xd0\xe0\x11\x28\xc0\x46\x33\
\x89\x35\xe2\x5b\x25\x26\x11\x8b\x26\xf6\xd7\x49\x91\x8a\xea\x4a\
\xdb\xb4\x10\x52\x93\x9b\xee\x20\x64\x48\x85\x0c\x70\xce\xc1\x1a\
\xa3\xfc\x81\x2c\xdc\xb1\x81\x73\x66\x12\xc3\x29\x27\x58\x79\xfa\
\xd3\x7d\x80\xf8\x48\x89\x5f\x92\xd5\x79\x31\xa3\xbf\x92\x51\x65\
\x2f\xc7\x2e\xec\xe1\xea\xfc\xf8\x60\xd2\xb3\x91\x99\x6a\x62\xea\
\xa4\x28\xef\x89\x79\x8f\x60\x23\xf9\xc2\x85\x3a\xa5\x95\x2c\x4d\
\xb4\x24\xb4\xc6\x48\x38\x24\x8c\x46\x40\x88\x5b\x52\x44\x8c\x88\
\xd0\x75\x71\x96\x68\x4e\xdc\x24\x5a\x3f\xdf\x48\x22\x58\xb2\xf0\
\xab\x5e\x00\xd6\x26\x35\x46\x48\xa4\x98\x3b\xe3\xaf\xc9\x00\xb0\
\x08\x9e\xd0\x9d\xfb\xf8\x7b\x24\x13\xac\x38\xb6\x37\x4d\x93\xcc\
\x82\x87\xc3\x01\x4f\xc7\x23\x9e\x9e\x9e\x78\xff\xe1\x09\xff\xcb\
\x8f\x57\x58\x33\xf5\xff\x4a\x8a\x1d\x8d\x81\x64\x35\xd1\x94\xe7\
\xe3\x9c\x8b\x21\x2f\xd8\xef\x4f\xea\xc4\xe1\x70\x40\xd3\x34\xf8\
\xf1\xe3\x47\xf4\xbd\xe2\x7a\xc0\x8b\x7e\x53\x74\x78\x67\xa5\xca\
\x5a\x5e\xec\xd9\xfb\x5e\xbd\x7f\x00\x2b\x8f\x0e\x64\x73\xf3\x33\
\xa2\x29\x31\x9a\x9e\x65\x2b\xf5\x22\x53\x38\xf3\x01\x53\xee\x2c\
\xff\x59\x3a\xf5\xcf\x8e\xaf\x5e\xce\x9f\xc5\xe7\xaa\xa2\x62\x6f\
\x5c\xa5\x60\xe5\x21\x00\xf2\x86\x41\x3a\x1b\x1d\xf5\x5c\x46\xf9\
\xfd\xd0\xe3\xd4\xbd\x25\x05\x4a\x54\xa9\x3f\x7f\xfe\xe0\xd7\xaf\
\x5f\xf8\xfd\xfb\x37\x5e\x5f\x5f\xf1\xef\xbf\xbf\x30\x0c\x43\xf2\
\xad\x3a\x9f\xbb\xa8\x82\x85\x38\xf2\x09\x08\xc6\xb0\x83\x7c\x34\
\xc9\x04\x31\x49\x41\xb4\x27\x56\x7a\xd2\x42\xc2\x4a\x3d\x92\x0e\
\x96\xd7\x00\xc4\x44\x55\xd2\xd3\xf6\xf5\xec\x34\xd9\xea\xfd\xce\
\x39\x90\xe5\x4e\x50\x8e\x49\x19\x95\x62\x2e\xcd\xf9\x65\xe5\xce\
\xc9\x25\xc2\x97\xef\x9b\x6b\xb0\x4a\xc4\xb7\x44\xb0\xf4\xb1\x91\
\x1c\x67\xbe\x50\xea\xb8\xec\xeb\xfb\x7e\x72\x6c\x42\xc2\x88\x55\
\x18\x0e\xc5\x11\xe0\x43\x0c\x0e\x1b\x38\x38\x2c\x3f\x2b\xc2\xb9\
\x8b\xcb\x0b\xf9\x80\xc1\xf3\x8c\xc3\x14\xaa\x83\x02\xc2\x20\x4a\
\xa4\x5a\xb2\x28\x04\x84\x80\x48\xc2\x28\xce\xfe\xd4\x94\x2b\x4a\
\x61\xda\x3f\x09\x0d\xd8\xa4\x87\xc9\x59\x21\x30\x09\x09\xa1\x07\
\xd0\xc7\xe7\x75\x4a\x7e\x50\x87\xc3\x21\x7e\x3f\xe2\xf7\x8f\x57\
\x38\x3b\x9d\xa5\xa8\xdf\x01\x5d\x36\x42\x56\xb4\xda\x65\xa3\x49\
\x99\x55\x41\x9e\xd4\x61\x62\x1e\x85\x50\x85\xe0\x31\x0c\x7d\xac\
\x47\x6c\xce\x63\x95\xd4\x20\x04\xae\x2b\x1e\xe3\x82\xda\xd6\x02\
\x6c\x0b\x0c\xa0\x14\x3b\xcd\x24\x12\xc5\x84\x2a\x6e\x6d\xa4\xa8\
\x46\xf2\x12\xd5\xcf\x99\xba\x74\xe9\x43\x36\x55\xab\x6b\x47\xf9\
\x31\xb8\xc6\xcf\xe7\x33\x62\x49\x21\xad\xa8\xf8\xca\xb8\x39\x4c\
\x43\xa9\x23\xce\x1d\xcc\x25\x4a\xfa\xf9\x7c\xc6\xa9\x3b\xe1\x74\
\x7e\xc5\xcb\xdb\x1f\xf4\x43\x8f\x5f\xbf\x7e\xe1\xd7\xbf\x23\xb9\
\xfa\xf5\xeb\x77\x9c\x0d\xf8\xc6\x7e\x59\xe7\x0e\xdd\xb9\xe3\x19\
\x66\xd2\x31\xc0\x26\xa5\x42\x5c\x5d\x46\x9f\xa5\xe9\x32\x27\x12\
\xec\x52\x8e\xb1\x8a\xd0\xa4\xfd\xbd\x3f\xc1\x5a\xc0\x35\x0d\x0e\
\xd1\x74\xd3\x48\x60\x4c\x89\x9d\x24\x04\xab\x69\xe0\x0a\x04\xcb\
\xc7\x51\xff\x74\x4d\xbf\xf9\xb8\x4a\xb9\xb9\x90\x3b\x4c\x5e\x1c\
\x19\x72\x97\xa2\x5c\xc5\x0e\x33\x99\xf9\x72\x75\x4b\xc1\x68\xe2\
\xab\x7e\xa3\x95\xaa\x74\x8e\xda\x9f\x54\x2c\x80\x7d\x87\xc4\xac\
\x87\x4b\xf2\x00\x00\x5d\xd7\xa5\xbf\xf3\xb8\x4f\x4c\xb0\x7a\x5e\
\x40\x5b\x82\xc8\x4a\xf0\x58\xf1\xe7\x52\xaa\x97\xf7\x1e\x43\x54\
\x7e\x7c\x52\x81\x08\x7e\x08\xf0\x3d\x2f\x91\x44\x14\xa2\x9f\x53\
\xcf\x93\x24\xd4\xba\x92\xf1\x66\x22\x31\xd4\x79\x19\xd7\xb1\xd4\
\xcb\xd8\x4f\x7d\x40\x44\x00\x24\x10\x19\x0c\x03\xc7\x09\xe3\xc1\
\x00\xa2\xda\x14\xd0\x9d\x06\x8e\xb5\xd5\xb6\xd1\x89\xbe\x45\xe3\
\x1c\x8c\x8d\x74\xc5\x8e\x0b\x4d\xb3\x2f\x98\x03\x88\xfd\xed\x0c\
\x85\xb4\xc4\x8d\x8d\x6a\x94\x93\x3a\x75\x50\x9f\x36\x06\x4f\x75\
\x8e\x17\x75\xb6\x86\xcd\xdb\x00\x02\x11\x2c\x05\x90\xf5\xc9\xe0\
\x17\x27\x5c\xc2\x23\xcc\x9a\x08\x65\xfd\x46\xae\x61\xa2\x50\x7a\
\xe4\x04\x2b\x0f\xeb\x21\xa6\x9b\x92\x5a\x5d\x3b\xc8\x8f\xc3\x57\
\x2a\xdb\x35\x53\xf3\x57\x57\xeb\x2a\x2a\x34\xae\xf6\xc1\x2a\xed\
\x93\x8f\x5e\x1c\x39\xf9\x5d\x45\x92\x75\x3a\x9f\xf0\x7a\x7a\xc3\
\xeb\xeb\x0b\xba\xbe\xc3\x9f\x3f\xbf\x93\x19\x90\x4d\x81\x2f\xd1\
\x69\xbd\x4b\xea\x97\xa8\x2a\x62\x9a\xd1\xe0\x17\xf9\x72\x8d\x3c\
\x39\x56\x52\x91\x44\x69\x72\xce\xc2\x1d\x0e\x49\x7d\x12\x7f\x18\
\x21\x4e\x3a\x38\xa5\xfe\x2e\xe9\x8e\x04\x0b\x8b\x04\x4b\x5f\x1f\
\x18\x67\x08\x8e\x79\x72\xb0\xe6\x30\x12\xac\x42\x87\xa6\x89\x4e\
\x29\xae\x96\xec\x9f\x7b\x5e\xf2\xc9\x9d\x4c\x75\xba\x10\xf3\x5a\
\x0c\xe3\x90\x93\x2b\xad\x82\x95\xd4\x2b\x21\x58\x9e\x2c\x7c\x30\
\xf0\x24\x26\x33\x9b\xce\xcd\x97\x12\xd2\x8b\x68\x8f\xdf\x09\xbe\
\x27\x84\x48\xb0\xc6\xa5\x89\x9a\x8b\xe5\x8a\x24\xad\xdc\x5f\x8c\
\x08\x18\x06\x21\x5d\x99\x13\x9b\xaa\xc3\xe2\xef\x36\x2d\x13\x0b\
\x22\x8b\x10\x0c\x02\x11\xba\x9e\x95\x25\x4f\x01\xc4\x1e\x51\x08\
\x34\x9a\x7e\x2d\x59\x55\xef\x4c\x0c\x4d\x41\xc9\xcf\xcc\x04\x13\
\x23\xef\x1b\x26\x63\x8d\xe3\xc8\xf4\x6d\x0b\x27\xa4\xbd\x71\x69\
\x6b\x23\x79\x83\x89\x24\xcb\x48\x7e\xc7\xe7\xc4\xff\x86\x38\xd8\
\x08\xca\x57\x2d\xf3\xc7\x83\x49\x26\x54\x03\x17\xcb\xdf\xa4\xba\
\xa6\xcb\x42\x30\x2e\xc9\x73\x39\x2b\xb6\xa2\x62\x0b\xf2\x76\x46\
\xa3\x92\xab\x8a\xef\x86\x2b\x08\x96\x2c\xbb\x02\x88\x49\x26\xef\
\xa8\x25\x68\x28\x87\x60\xf0\xe8\xba\x13\x4e\xa7\x57\xbc\xbe\xbe\
\xe0\xe5\xed\x15\xbf\xfe\xfc\x8b\x7f\x7f\xff\x07\x7d\xdf\x25\xf5\
\xea\xe5\x65\x8c\x61\x75\x3e\x77\x13\x42\xc0\x1d\x3a\x5f\x5b\x3a\
\x56\x63\x89\x17\xf6\x75\xdc\xc1\x19\x67\x70\x68\x0e\x68\x0e\x0d\
\x9c\x71\x32\x2b\x7d\x42\xbc\x00\xf5\xb7\xb1\x70\xad\xc1\xff\xfa\
\xbf\xfd\xef\xc9\x37\x46\x3b\x20\xe7\xd3\xe6\x73\x25\x4a\x54\x2c\
\x6b\x1d\x47\xe5\x6e\x1c\x1a\xd3\x00\x0e\xb0\xb0\xd3\x59\x84\x42\
\xb0\xe2\x7f\x64\x09\x0e\x0e\xc1\x04\xb8\xb8\x10\xb1\x35\x2d\x84\
\x28\x4a\x3e\xf3\xce\xad\x64\x2a\xd4\xc8\x95\x08\xe0\x92\x44\xe9\
\xd8\x49\x25\x75\x8a\x4d\xad\x21\x3d\xd7\xe4\x1f\x45\x04\x43\x84\
\x00\xc0\x19\x03\xcf\x12\x11\x06\x5e\x40\x52\xf9\x52\x05\x0c\xe8\
\x10\xa8\x87\x5e\x43\x52\xc8\x94\xf6\xdb\xd2\x4e\xf2\xd3\x7d\x14\
\x4d\x81\xda\xaf\x6b\x98\x90\xb1\x10\x02\x5e\x5f\x5f\x27\xe9\x4d\
\xcf\x21\x1c\xc1\x0b\x3d\x07\x8f\xc9\xef\xb4\x63\xbe\xf6\x2d\x93\
\xb2\xcd\x1d\x74\xb5\x89\x59\x97\x99\x3c\x03\x49\x53\x47\x62\x97\
\x2d\x2b\xaf\x84\xc6\x06\x34\xb6\x41\xeb\x0c\x9e\x0e\x0d\x7e\x3c\
\x1d\x70\x68\x8f\x78\x3e\x1c\x71\x6c\x5a\x3c\x1f\xd8\xef\xab\x6d\
\x0f\x68\x9a\x36\xd5\x35\xe7\x1c\x5c\x74\x64\x37\xd1\xb9\x3f\x7f\
\xbe\x97\xa0\xc9\x27\x84\x48\xac\x8d\x07\x82\x01\x26\xe1\x3d\xc6\
\x75\x10\x05\x41\x39\xc2\x97\xea\x54\x2a\x9b\xd2\xce\x71\x0e\x42\
\x79\xab\x72\x78\x99\x0a\x9b\x52\x27\xb3\x62\xd3\x76\xcc\xef\xf4\
\x3e\xbf\x0e\xb6\x10\xd8\xcf\x44\x4e\xe4\x7d\xd1\xef\x54\x6e\x4a\
\xaf\xa8\xf8\x0e\x58\x8c\x83\x35\x82\x1b\x67\x32\xba\x99\x24\xf8\
\xe0\xd9\xb1\x79\x88\xcb\xd8\xf4\x67\x74\xdd\x19\x6f\xa7\x17\x0c\
\xc3\x80\xb7\xb7\xd7\xe8\xc0\xfe\x07\x7f\xfe\xbc\xe0\x7f\xfe\xcf\
\xff\xe0\x7f\xfe\xf7\xbf\xc9\xc7\xea\xe5\xe5\x25\x85\x59\xf0\xde\
\x83\xd7\xd8\xe3\xb4\x0d\xd8\x4f\x46\xcc\x16\xd6\x5a\x3c\x3d\x1d\
\x79\xc6\x15\x3c\xfb\xcb\xb8\x03\x6c\x6b\x79\x56\x95\xa5\x09\xd1\
\xb1\xd6\xc2\x35\xa3\xfa\xd4\xb6\x2d\x8e\x87\x23\x1a\xd7\xa0\x69\
\x2c\x9e\x9f\x9f\xd1\xba\x6c\x99\x15\x15\x97\x48\x14\xad\x5c\x0d\
\xd3\xaa\x54\xdb\x3e\x01\xc6\xc0\x99\x06\xc6\x01\xd6\xb8\xc9\xac\
\x43\xa3\x43\x2e\xc0\x00\x96\x78\xd9\x13\x07\x58\x70\xa7\xcc\x9d\
\xf3\x7c\x90\xc8\x25\x9f\x2b\x41\xde\xf1\xe7\x69\x01\xe5\xc8\xec\
\xd3\xe3\x9e\x67\xb2\x51\xe6\x7f\xc5\x53\xff\x40\x06\x08\x83\x47\
\x88\x7f\xcb\x96\x62\x47\x0e\x04\xf8\x30\xc0\x87\x01\x7a\x9d\x49\
\xad\x78\x01\x98\x38\xc6\xe7\xdf\x03\x11\x3c\x3c\x3c\x05\x56\x8d\
\x32\x02\x25\xe9\xfd\x3c\x9d\x26\x04\x4c\x13\x2c\xef\x3d\x86\x7e\
\x80\xef\x2f\x03\x80\xe6\x8a\x57\xae\x7e\x31\x06\x10\x80\x7e\x30\
\x18\x82\xe5\x65\x7a\x00\x18\xe7\x60\x88\x40\xde\x4f\xfc\xba\x64\
\xb6\x20\xbf\x0f\x03\x48\xa9\x93\x84\x01\xcd\x91\x09\xf7\xa1\x69\
\xf0\x7c\x3c\xe2\x29\xd6\xab\xa7\xc3\x01\x3f\x8e\x4f\x78\x6a\x8f\
\x38\xda\x03\x5a\x7b\x40\x63\x23\xc1\x32\x0e\x16\x16\x8d\x69\x79\
\x59\x1d\x37\x12\x90\x68\x09\xe4\xfa\xa4\x5e\xdd\x14\x8e\xc3\x8c\
\x1f\x42\x0c\x4f\x62\x0c\x9a\x46\x4c\xc0\x7e\x4a\xd4\x69\x54\x7e\
\xc5\x49\x1f\xc6\x20\x90\x01\x79\x37\xa9\x53\xab\xa4\x2b\x92\xd2\
\x40\x91\x22\xa9\x6d\xfa\x95\x91\x89\x0b\x2a\x1d\x02\x93\x3f\xe2\
\x76\x26\x85\xf9\x20\x09\x47\x22\x93\x37\xd4\xdd\xd2\xf8\x10\x4a\
\xea\x76\xa9\xbe\x97\x3a\xfb\x7b\xa2\xa4\xee\x6c\xcd\xc3\xea\x79\
\x7b\x70\x96\x0d\x59\x59\xcb\xc7\x54\x19\xbf\x2d\x8d\xad\xe7\x2c\
\x27\x80\x89\x8b\xc0\xcd\x49\xac\x15\xca\x5c\x3e\x27\xe3\x81\xb2\
\x85\x21\x9d\x9a\xf9\x3a\x5e\x28\xd6\x44\x08\x6a\x80\x95\xdc\x38\
\xf4\x70\x65\x43\x3f\x01\xff\xfe\xfa\xbe\x25\x85\xd5\x73\x36\x3c\
\xdb\xb5\x27\x57\x12\x14\xf4\x76\x0b\xb6\xd4\xd5\xd2\x35\xae\xb9\
\xce\x55\x71\xb0\x26\x6e\xc5\x84\x89\x2a\xe0\x7d\x9f\x22\xaf\x73\
\xc0\xcf\x0e\x2f\x2f\x7f\xf0\xfb\xf7\x2f\xfc\xfb\xef\x7f\xf0\xfb\
\xf7\x1f\xfc\xfa\xfd\x82\xd3\xe9\x0c\x3f\xf0\x1a\x7d\x7e\xe0\x05\
\x75\x29\x98\xb8\xe4\xcc\xd8\xe9\x12\xd1\x84\xcc\xb0\x8f\x8b\x81\
\x6b\x58\x25\x82\xc3\x24\x14\x82\x36\xcd\x69\x53\x9e\x7c\x8e\xc7\
\x23\x8e\x71\x09\x96\x63\xd3\xa2\xb1\x97\x0e\xec\x7a\x6d\xbc\xdc\
\x2c\x78\xb9\xae\x9e\xc5\xa1\x7d\x02\x70\x19\x8a\x21\x37\x57\x96\
\x14\xa8\x64\x4e\xc4\x25\x21\x9a\x53\xb0\xd6\x70\xe1\x9b\xa5\xfe\
\x5e\x23\x58\xd2\x98\x94\x7c\xeb\xe4\xef\xdc\xcc\x97\x7f\x98\xa4\
\x0d\x10\x9f\xa8\x7c\xd6\x21\xc0\x8e\xf2\xda\x4c\x58\x22\x58\x3d\
\xfa\x38\x03\x11\x18\x42\x8f\x30\x10\x3c\x0d\x20\x0f\x78\x1a\xf0\
\xe3\xf9\x1f\x78\x1a\x00\x42\x22\x60\x9a\x84\xf9\xbe\x4f\x7e\x5d\
\x9a\x7c\xe9\xf3\xa4\x6c\xca\x24\x8b\x39\x4a\xe8\x31\x51\xb0\x84\
\xec\x07\x71\xa4\x57\x4a\x16\x97\xf7\x18\x64\xd5\x5a\x66\x15\x6d\
\xc3\x41\x4f\x0f\xad\x7c\x38\x1e\xd6\xb1\xe5\x7a\x78\x70\x2d\x5a\
\xd7\x30\xd9\x77\x4c\xe8\x1b\xf0\x42\xd7\x1c\x1b\x0d\x00\x05\x50\
\x32\xed\x49\x63\x5c\x52\x3e\xc6\xe5\x9c\xd8\x1f\x2b\xe6\x47\xe5\
\x5d\xea\x85\x7c\x88\xdc\x84\xa0\x23\x86\xec\xe0\xfa\x9b\xa9\x66\
\x12\x4f\x4e\xd5\xad\x49\x5d\xa5\x14\xd9\x6c\xb2\xb5\xd2\x81\xa8\
\x7c\xca\x1f\x63\x9f\x62\xd2\x96\x88\x63\x9c\xf1\x35\xb3\xdf\x1a\
\x8a\xa4\xab\xa2\xe2\x6b\x60\xae\xe3\xd6\x4a\x60\xc5\x3c\x1e\x59\
\xdd\xbd\xda\x07\x8b\x3f\x63\xc7\x29\x7e\x56\x5d\x77\x4e\xb1\xac\
\x5e\x5e\x7f\xa3\xeb\xce\xf8\xf5\xeb\x5f\xfc\xfb\xef\xbf\xf8\xcf\
\x7f\xfe\x1b\xbf\x7f\xff\xc6\xdb\x5b\x8f\xae\x63\x27\xe5\xae\xeb\
\x26\xb1\x83\x74\xa7\xab\x4d\x14\x13\x87\x71\x67\x60\x9d\x89\x8b\
\x09\x63\x32\xeb\x4f\x88\x91\x9e\x0d\x96\x82\x48\x46\x1f\xab\xe3\
\xf1\x38\x1e\x6f\x8e\x70\x6e\x9c\x36\x9f\xab\x54\x9a\x60\x69\xe2\
\xa6\xc9\x94\xb3\x2d\x64\x11\xde\x9c\x60\xcd\x39\x0a\xe7\x66\x3e\
\xe9\x2b\xde\x43\xb0\xe6\x8e\x5f\xc5\xb8\x95\x20\x52\xf2\xbf\xca\
\xd3\xca\x09\x17\xc0\x2a\x98\x76\x38\xcf\x9f\xad\x26\x55\x39\xc1\
\x0a\x21\x80\x10\x30\x90\x47\x4f\x03\xfb\x31\x05\xa0\x0f\x3d\xe0\
\xc7\xad\x87\x87\xef\x3c\x3c\x7c\x22\x58\x7e\xf0\x18\x3c\x13\x27\
\x04\x4a\x24\x2f\x0c\x3e\x05\xa0\xd5\x33\x5a\x75\x18\x91\x3c\x5e\
\x9b\xce\xab\x69\xdc\xa4\x8c\x25\xaf\x26\x7b\x2e\x44\x94\x9e\x3b\
\xcf\x14\x8c\x91\xda\x1b\x8b\xe3\xf1\x88\xc3\xe1\x98\x08\xfe\xf1\
\x78\x8c\x75\xf2\x18\xeb\x65\x8b\xb6\xe1\x48\xf2\x52\xdf\x1a\x48\
\xbd\x33\x80\xb3\xf0\x61\xaa\xd6\xe8\xeb\x2e\xd5\x0d\xfd\xcc\x78\
\xd6\x24\x3f\x68\x83\xd1\x97\x8f\xef\x89\xc9\xcc\x68\xea\x94\x7b\
\xa6\x64\xde\xe6\xf4\x2c\x42\xe6\x2f\x28\x65\x91\xca\xa8\x9c\x91\
\xe9\x9f\x50\x64\x7f\xc6\xde\x38\x5b\x5b\xd3\xfb\x32\x77\x42\x45\
\xc5\xe7\x82\x76\x8b\xd1\xd0\x6d\xcc\xda\x00\xf9\xbb\xe2\x16\x55\
\xe9\x9e\xb8\x92\x60\xc9\x48\x3f\xfa\xdc\x0c\x43\x5a\xe6\xe6\x14\
\x1d\xd8\x5f\x5f\x5f\xf1\xef\xaf\xff\xe0\x7c\x66\x82\xf5\xeb\xd7\
\xbf\xf8\xfd\x9b\x9d\xd8\xbb\x3e\xc0\x7b\x83\xe0\xa7\x7e\x39\xfa\
\x93\x13\x2b\x3d\x3d\xde\x5a\x03\xe3\x00\x18\x24\x82\xa5\x9d\xd2\
\x85\x2c\x3d\x3d\x3d\xe1\xc7\x8f\x1f\x13\x25\x4a\xfb\x58\x35\xcd\
\x01\x4f\x87\xa7\x44\xb6\xb4\x33\xfb\x1c\xc1\x2a\x12\x28\x1a\x17\
\xe9\xcd\x67\x0b\x02\x97\x4e\xe9\x17\xe4\xca\x98\x4d\x04\x6b\x0d\
\xd2\x31\xf2\x33\xba\x24\x47\x7a\xff\xec\xb3\x85\x92\x9e\x17\x4c\
\x29\x73\xe4\x6b\x24\xde\x97\xcf\x34\x57\x87\x00\x4c\x9e\xbd\xf6\
\xf7\x1a\xc2\x80\x3e\xb0\xca\x05\x02\x3b\xcc\x0f\x01\x9e\x3c\x10\
\x80\x80\x80\xf3\xdb\x99\xfd\xc5\x84\x60\xa9\x0f\x49\xfd\x8c\xf1\
\xa3\x26\xca\x96\x3a\xaf\xeb\x78\xad\x4b\xbd\xd2\x80\x6c\x39\x4f\
\xec\xa4\x3e\x21\x80\x85\x32\xd4\xfb\x75\x23\x69\xad\x45\x6b\x2d\
\x1a\x37\x25\xf9\x4c\xfc\x0f\x1c\x39\x5e\x2f\x52\xed\x78\xf2\x85\
\x31\x96\x9d\xe3\x85\x00\x19\xb9\x9f\xa9\x29\xe1\xd2\xac\xc0\xd0\
\x7e\x2f\xd3\xe7\xab\x9f\xa1\x5e\x3e\x0a\x13\x45\x48\x13\xaf\x0b\
\xc5\x15\x4c\x6c\xae\xa9\x9f\xe5\xbc\x4c\xf3\x9b\xa3\x64\x4a\x5b\
\x4a\xef\xb3\xe3\x5e\xf7\xf4\x15\xcb\xee\x6f\x63\x0f\x73\x67\xa9\
\xfd\xb8\xb6\x0f\xd8\x9a\x97\xaf\x82\xa5\x76\x61\xaa\xc8\xff\x5d\
\x5c\x45\xb0\xb4\xa9\x84\xe3\xf7\x0c\xe8\xba\x2e\x86\x57\x60\x72\
\x25\x71\xad\xce\xe7\x73\x54\xad\xde\xd0\xf7\x03\x92\xff\x48\xc1\
\x6e\xac\x3f\xda\xef\x29\x57\x96\x60\x28\xaa\x58\xb6\x68\x02\x64\
\x67\xe1\xe9\x77\xe9\xc4\xe4\x93\x1c\x88\x63\x00\x49\x3d\x73\x30\
\x57\xb0\xf4\xec\xc0\x12\x69\x32\x68\x67\xef\x23\x3f\x37\xbf\x67\
\x81\x53\xb3\xba\x6e\x7d\xb9\x4a\x01\x22\xaf\xb5\x49\xe7\xfe\x06\
\x73\x64\x42\x1f\xcb\xb7\x12\xeb\x49\xe7\x21\x37\x35\xe6\x79\xcc\
\x3f\x83\xf7\x18\x88\x15\x26\x04\x56\xac\xe0\x81\x81\x06\x98\x60\
\xe0\xe1\xf1\xf3\xf0\x33\x29\x58\xc1\x73\xcc\x2d\xd9\x52\x20\xf4\
\xa1\x83\xf7\x7d\xd1\xa9\x5d\xfe\x66\xd5\x75\x9c\xb1\xaa\xd5\x2d\
\x21\x54\xe7\x57\x36\x67\xeb\x48\xed\x17\xe5\xa6\x46\x9f\xf9\xb3\
\xd2\xf5\xd7\xb9\x16\xce\xb5\xbc\x0c\x8f\xd3\x83\x86\xa9\xe2\x09\
\x9e\x7e\xc8\x61\x1a\x02\x38\xe2\x3d\x97\x2e\xb4\x59\xb0\x6c\x22\
\xd4\x62\x91\x99\xfe\x9d\x82\xb3\xc6\x7b\x20\x8b\xd1\x99\x9c\xcf\
\xf5\x5e\xea\xa7\x10\xb0\x6c\x76\xac\x19\x09\x96\xbc\x13\xda\x51\
\xbe\x44\xfc\x2e\x1a\x3e\xc3\x3e\x58\xb7\xd6\x75\xbe\x76\x2c\xa7\
\x8a\x8a\x8a\x6f\x8f\x47\x56\xb1\x36\x12\x2c\x82\x34\xf0\x12\x18\
\xd1\x7b\x76\x6e\x3f\x9d\x4e\x78\x79\xe1\x90\x0b\xff\xfe\xfb\x2f\
\x5e\x5e\x5e\xf0\xfb\xf7\xef\x48\xbc\x4e\x91\x5c\xb1\xca\x12\x82\
\xc1\x80\x61\x92\xb2\x90\x29\x69\xac\x0f\x87\xc3\x85\x69\x50\x13\
\x2c\xd7\xf0\xda\x73\xa2\x0a\x88\xd9\xe5\xe9\xe9\x29\x91\x2a\xed\
\xa4\x3e\x55\x0e\xc6\x59\x82\x16\x23\x49\xcb\xcd\x7f\x73\xa1\x17\
\x24\xbf\x4c\xae\xb8\xd3\xcc\x3b\x8a\x52\x87\xb1\xb4\xcf\xe2\x92\
\x80\x95\xbe\x2f\x41\x77\x70\xf9\xef\x36\x57\x38\x63\x56\x3d\x0b\
\x43\x28\x3b\x16\xcf\x11\x2c\xd9\x6a\x82\x95\xfb\x71\xe5\xe7\xb4\
\x31\x48\x29\xc5\x60\x50\x01\x1e\x2c\x5e\xf1\x4c\xb8\xc9\xdf\x24\
\x7e\x7b\x21\x5e\x5b\x42\x46\xf4\x08\xe4\xd1\xc7\x49\x12\xda\x14\
\xa9\x17\x67\xd6\x01\x71\xf3\xf5\x2c\x83\x07\x5e\xf0\x27\xc5\x73\
\xeb\xba\x2e\x1d\xd3\xf7\x2e\x83\x0e\x21\x17\xfa\x19\xb4\xed\x94\
\x80\xe7\x71\xd1\x4a\xa4\x9c\xd3\x8a\x64\x05\x06\x64\x24\x84\xc6\
\x58\xd6\x39\x89\x29\x13\x2d\xca\x77\x4c\xff\x04\x5d\xee\xa3\x69\
\x98\x06\x63\xa6\x8e\xed\x14\x95\x63\x39\x47\xc8\x95\x8e\x9f\xa5\
\xcb\xa0\xb8\x55\x04\x6b\xee\xbd\xd0\x03\x86\xd2\x3b\xc4\xe9\x2d\
\xd7\xeb\x47\x18\xbd\x6e\xc5\xda\x3b\xba\xc7\xbd\x94\x06\x39\x1f\
\x71\x9d\xef\x86\x3d\x14\x2c\x41\x5e\xc7\xe7\x54\xea\xf7\x5c\xe3\
\x2b\x61\x4d\xc5\x7a\x84\xfa\x7c\x95\x82\xc5\x23\xfb\x69\xfc\xa2\
\xd1\x07\x4b\x2d\xbe\xdc\x0d\xe8\xfb\x41\xf9\xb4\x20\x75\x1a\x44\
\x29\xa2\x10\x00\x52\x26\x07\x83\x14\xcd\xda\x70\x00\x51\x59\x48\
\xd9\x49\xc7\x64\x81\x26\xc6\x0d\x3a\x1c\xc4\x71\xfd\x89\x09\xd6\
\xf1\x88\xe3\xe1\x88\xb6\xe5\x10\x0a\x6d\xc3\xc1\x21\x0f\xed\x81\
\x1d\x8b\x1b\xfe\xa4\x00\xa4\xc6\xc1\xb9\x66\xa2\x54\xd9\x18\xac\
\x54\x2f\x1e\x9c\x96\xd9\xc9\x82\x3a\xe6\x6b\xd4\x09\xd6\xc8\xd2\
\xc5\xf9\xb8\x54\x3e\x6e\x21\x59\x73\xe7\x6e\x96\x97\x39\x33\x8b\
\xc8\xa3\x98\x4f\x7e\x4f\xfa\x59\xce\x9b\x2a\xa5\x33\x5e\x22\x60\
\x26\x38\xc8\x2c\xa0\x00\x0f\xd8\x29\xc1\x0a\x86\x10\xc0\xe7\x84\
\x10\x60\x4d\x40\x08\x6e\x34\x3b\xc6\x75\x17\x9b\xd0\xa4\x28\xf2\
\x21\x9a\xb7\xbd\xf3\x29\xca\xbc\x77\x31\xae\x56\x33\xb0\xaa\x64\
\x79\x71\xe5\xe0\x39\x64\x04\x0d\x1c\xe8\xd4\xb9\x0e\x12\xc8\x56\
\x93\xac\x89\x39\xce\x4c\xcb\xcf\x58\xa3\x48\x7a\x0c\xd5\x61\xa6\
\x8b\x78\x97\x60\x8c\x72\x86\x9b\x21\x11\x79\xe3\xb1\xa5\x31\x31\
\x52\xde\x93\xbd\xa2\x5e\xcd\xcd\x72\x0a\xe9\x39\x90\xe1\xb3\xd3\
\x4f\x28\x3a\xf8\x53\x80\x5c\x7a\x24\x58\x7c\x25\x4d\x16\xf9\x6f\
\x00\x7a\xd5\x05\x33\x55\xb2\xc6\x7b\x18\x4d\xde\x63\x9d\xd3\xef\
\xcf\xf7\xeb\x4c\x2a\xbe\x2e\xe6\xde\xdd\xef\x48\x9a\x6e\xc5\xa3\
\x96\xd5\x55\xb3\x08\xc5\x2c\x38\xc6\xb9\x62\x52\xf5\xfa\xca\x8b\
\x35\xff\xfa\xf5\x0b\xa7\xd3\x09\x6f\x6f\x27\x0c\x5e\x66\x6c\xc5\
\xf8\x46\x5e\x96\x3c\xf1\x89\xa8\x11\xaf\x4a\x3b\x19\xd9\x1f\x0e\
\xe3\xa8\x5f\x07\xec\x14\x15\x8b\x49\x55\x5c\x3b\x2e\xaa\x56\xec\
\x48\x7c\x48\xb3\x04\xb5\xf9\x50\x94\xab\xdc\x44\x68\x6d\x03\x67\
\x47\x53\x4d\xae\x56\x95\x66\x02\xe6\x1d\x82\xb5\xcb\xc5\x97\x8f\
\xc6\xf5\xfe\xf4\x9d\xca\xc7\xde\xc3\xbe\x6f\x49\x83\xd6\x27\x24\
\xaf\x12\x2c\x22\x0b\xe7\x96\x7d\xb8\x9c\xbb\x34\x33\xea\xe3\xbc\
\x2e\x61\xec\x8c\x09\x4c\xc6\x83\x28\x2e\xfc\xb7\x1f\x98\xa0\x13\
\xc9\xf9\x71\xb1\x6f\xd9\x1a\x0f\x18\x5e\xba\x47\x1c\xda\x75\xdc\
\xac\x52\x6c\x2c\x19\x24\x88\xd9\xd0\xfb\x80\x63\xfb\x84\x61\xf0\
\xb1\x4e\xbf\xe1\xed\x8d\xd7\xc5\xec\xfb\x7e\x3a\x43\x32\x0d\x14\
\xc6\xb2\x90\x20\xb6\xf1\x89\xc0\x18\x9b\x08\xbc\x26\xf3\xa5\xba\
\x35\x1a\x6c\xc3\x84\xac\x2c\x3d\xcf\x55\x75\x42\x8e\x27\x26\x1d\
\x9f\x77\x1c\x38\x00\xaa\xbe\x50\xdc\x67\x42\x52\x9d\x60\x58\x4d\
\x1b\xb2\x0a\x9b\x0f\x06\xa6\x4a\x5c\x29\xe6\x9a\x89\xe5\x51\xf0\
\x47\x4c\xbf\x1d\x7d\x1b\x89\xa6\xa6\x79\x31\x8d\x3e\xc2\xe8\xb4\
\xa2\x62\x2f\x94\xd4\xaa\x47\x25\x0d\x8f\x8e\x47\x2a\xb7\xc4\x10\
\xb4\xa9\x03\x98\x76\xa6\xbc\x1e\x1c\x13\x2c\x1f\x06\xf4\x03\xcf\
\x00\x64\x72\xf5\x92\x62\x5a\xfd\xfe\xfd\x07\x3e\xce\xe6\xe2\xb5\
\xe7\x0c\x28\x80\x9d\xda\x03\x77\x80\xa2\x5a\x8d\xf1\x83\x4c\x8c\
\x1d\xc5\xa3\x7d\x5e\x8f\x8d\xd5\x2c\x26\x39\x0e\x6d\xdb\xa4\x59\
\x57\x3f\x7e\x3c\xa7\xef\x23\xc1\x1a\xcd\x80\xa2\x4a\x1d\x0e\x2d\
\x9c\x6b\xd0\xb6\xa2\x52\x35\xc9\x89\xd8\x5a\x0b\x67\x5b\x2c\x99\
\x6c\x4a\xb3\x01\x2f\xb7\xcb\x4a\xd3\x16\x82\x85\x40\xc5\xfd\xd7\
\xa8\x58\x3a\x02\xf7\x1c\xd6\x3b\xa4\x75\x65\x60\x4b\xfa\x6b\x0d\
\xc4\x9a\x1f\x17\x85\x31\x1b\xe5\x0e\x1a\xf0\x6e\x34\xd3\xe5\xa1\
\x20\x08\x01\x81\x06\x04\xf2\x08\x08\x68\x9a\x96\xf7\xab\xf3\x02\
\x65\x31\xb1\x44\x89\x1d\x06\xf4\x5d\xc7\x6b\x29\x0e\x1e\x87\xf6\
\x8c\xbe\x1f\x70\x38\x1c\x27\xfe\x7c\xaf\xaf\x2f\xd1\x44\xde\x73\
\x66\x69\xf4\x6f\x32\x46\xc2\x7a\xd8\x48\xb4\x84\x58\x59\x8c\xe4\
\x82\xa3\xb5\xeb\x32\xe3\x19\x98\x4c\xa2\x74\x8d\x61\x42\x21\x0a\
\x90\x2e\xcf\x79\xd5\x73\x79\x5f\x96\x82\x01\x64\xee\x1f\x49\x5d\
\x94\x03\x14\x89\x55\xfc\x61\x00\x10\x30\x35\x83\x96\x94\xb4\x39\
\xf2\xcc\xcf\x8b\x26\x24\xa9\xf4\xfe\x0d\xc3\x70\x61\xaa\x17\x73\
\xe4\x3c\x29\x9d\xbf\xe7\x52\xb9\x6c\x51\xfd\xf6\x6a\xa8\x2f\xd4\
\xce\x42\x7e\xd6\xae\x79\x8d\xb9\x68\xed\x1a\xb7\xe2\x5e\xa6\xaa\
\x7d\xca\x7d\x3d\x8d\xf5\x72\xbf\x2e\x8d\x2d\x98\xbb\xb7\x25\x73\
\xd7\xb5\xd7\xfe\x9b\x04\x63\xeb\xfd\xed\x99\xf6\x35\xe7\x6c\x21\
\xb0\x7b\x96\xdf\x84\x60\xe9\x19\x51\xf2\xf0\xf4\x28\x7f\xf0\x3d\
\x86\x61\xf4\x47\x61\x72\xc5\x81\x44\x5f\x5e\x5e\xd0\x75\xd3\x48\
\xec\x71\xde\x11\x37\xa8\x59\xbc\xa7\xa6\x71\xe0\xc5\x6a\x2f\xe3\
\x57\xc9\x56\x07\xfd\xfc\xf1\xe3\x07\x7e\xfe\xfc\x89\xe7\xe7\x67\
\x34\x4d\x9b\x08\x96\xa8\x57\x23\xc1\x72\x49\xc1\xd2\x31\xad\x2e\
\x96\xcd\x71\x87\x94\x97\xbc\xe1\xd6\xfb\x74\x9e\xf3\x0a\x5d\xf2\
\x15\xd9\xf2\xf7\xe4\x58\xae\x1e\x64\xe7\x6c\x79\x81\xf5\x2c\xc2\
\x39\xac\x9a\x90\x0c\x26\x71\xce\x4a\xc8\x7d\x8f\xde\x7b\xcd\x92\
\xc2\x05\x6b\x26\xed\x5a\x49\x09\xb1\xd6\x4e\x7e\x3b\x21\x58\x14\
\x10\xc8\x71\xd0\x54\x13\xa2\x89\x2a\x9a\xfc\x68\xfc\x5b\xb6\xe2\
\xbf\x25\x8b\x89\xf7\x87\x3e\x99\xbe\x9d\x3b\xa0\xeb\xfa\x14\x42\
\x41\xfc\xf5\x00\x0e\x70\x6a\x4e\xc0\x60\xcd\xa8\xc8\x12\xa1\x49\
\xc1\x6d\x1d\x42\xf0\x70\x2e\x46\xfd\xb7\x71\xfa\x6b\x7c\x1f\xc6\
\xf7\x2a\x00\x71\x69\xa1\x54\xe7\x94\x92\x14\x0c\xc1\x5a\x5c\xe8\
\x8b\x42\x52\x54\x69\x2f\x97\xb9\x70\x27\x33\x12\xe9\xf4\x5d\x92\
\x4e\x81\x19\x23\x79\xd5\x65\x0c\xae\x1f\x21\xee\xd7\xed\x44\x89\
\x08\xeb\x8f\xce\x93\x26\x58\xb3\xb3\x73\x81\xf4\x0e\xeb\x67\x9e\
\xcf\xd4\xd5\xbf\xd5\xd7\x91\xb6\x4c\xe3\x16\x82\xf1\x9e\x4e\xee\
\x96\xb4\xe6\x7e\x93\xb7\x1d\xa5\xf7\x66\xcf\xf7\xf1\x1e\xe7\xbc\
\x17\xab\x8a\xed\x0e\x69\x8b\x8e\xfc\x11\xb8\xb6\x8c\xae\x39\x7f\
\xb6\x8e\xec\x70\x9d\x5b\xf3\x3d\xf9\xdd\x0e\x69\x6c\xa9\xef\x73\
\x64\x6a\x8d\x58\xbd\xe7\x3a\x39\x66\x6d\x5c\xfa\x62\xdc\x11\x0c\
\xe8\xfb\x0e\x5d\xc7\x21\x19\xba\x8e\x03\x89\xbe\xbc\xbc\x44\xf3\
\xc9\xdb\x24\x53\xa3\x39\x40\xab\x3d\xda\xbc\x36\x4a\xff\xda\x0c\
\x28\xfb\x44\x2d\x68\xdb\x36\x85\x5d\xf8\xf9\xf3\x27\x9e\x9f\x98\
\x60\xb5\xed\x01\x4f\x4f\xc7\x44\xb0\xda\xf6\x90\xd4\xaa\xd1\x0c\
\x28\x21\x1c\x2e\xd7\x25\x34\xa6\x29\x12\x2c\xc9\xdf\x16\x35\x69\
\x49\x65\x5a\x53\x14\xd2\x77\xb3\x7e\xce\x3a\x39\xda\x61\x74\x8a\
\xa9\xba\x71\x53\x1a\x17\x9d\xfe\x25\x26\xdc\xb2\x74\x6a\x34\x0d\
\x8e\x69\x96\x09\x56\xe9\x58\xfa\x20\x00\x86\x62\x64\x7a\x03\xca\
\xb6\x80\x8f\x24\x87\x12\xb9\x92\x20\xb7\x7d\xd3\xc3\x7b\x82\xf7\
\x03\x9a\xa6\x47\xd7\xf5\x4a\xbd\x72\xb1\x6e\xfb\xa8\xb2\x18\x9c\
\xbb\x73\x34\x9b\x53\x22\x49\x12\x72\x81\x3f\x4d\x52\x67\x01\x8c\
\xe1\x22\x06\x8f\xde\xf4\x4c\x6a\xdc\x48\x0a\x8c\x31\xc9\x93\xdc\
\x20\x46\x70\x36\x97\x65\xab\x1b\xd1\xd2\x48\x3c\x57\x69\xc4\x81\
\x5d\xda\x02\x3e\xae\xde\x49\xf0\xac\x41\x81\x56\x06\x83\x44\xee\
\x37\x06\x1e\x88\xa4\x54\x06\x63\xb2\xe0\x36\x13\x58\xb9\xae\xfc\
\x4e\xc8\xec\xa4\x0e\xe0\x32\x28\xaf\x26\x4c\x4d\xd3\x20\x04\x26\
\xb2\xde\x8f\xed\x44\x8a\x3f\xe7\xd8\x7f\x52\x14\x42\xb9\x6f\xad\
\x88\x5d\x54\xab\xac\x5c\x2a\x2a\x04\xd5\x2c\x57\xb1\x86\x5b\xeb\
\x48\x53\x92\xf5\xa7\xa6\x0b\xa5\x60\x0d\x3d\xce\xe7\x13\xde\xde\
\x5e\x71\x3e\x9f\xe3\x12\x38\x7f\xf0\xfa\xfa\x8a\xd3\xe9\xa4\x92\
\xd5\x7e\x16\x31\xb6\x8f\x19\x1b\xc0\x74\x96\x19\xd7\xf6\xcb\x09\
\x56\x3e\x3b\xf0\xe7\xcf\x9f\xf8\xf1\xe3\x07\x13\x2c\xd7\xa0\x6d\
\x8f\x13\xf5\x2a\x0f\xc5\xa0\x4d\x0c\xf9\x7a\x82\x00\x40\x85\xf5\
\xff\x4a\x26\x07\x39\xbe\xf4\xfd\x1a\x33\xc5\xc5\xef\x0b\xa7\xe6\
\xe7\xec\x41\xa0\x36\xa5\xf1\xfe\xcb\x6c\x48\xa4\x1c\xeb\x65\x7a\
\xca\xa8\xaa\xf0\x82\xc6\xb2\xb0\xb1\x51\xdb\xb2\x5a\x02\x02\xc8\
\x08\x99\xb8\x54\xac\xb8\x9a\x33\xf9\x17\xd3\x9c\x10\x01\xef\x03\
\xda\x66\x9c\x65\xd8\x1e\x06\xf4\xdd\xc0\x13\x25\x0e\xa7\x38\x81\
\x82\x23\x9c\x0f\x03\x2f\x04\x6d\xdf\x2c\xba\xee\x0c\x20\x44\xc5\
\x4a\x93\xab\xd1\xc9\x7d\xbc\xb5\x38\x60\x09\x1e\xde\x5b\x58\xc3\
\x11\xe9\x35\x39\x30\x89\x0c\x84\x48\x6c\xec\x45\xf4\xf4\x2d\x26\
\xae\x69\x99\x4e\x15\x1d\x22\xc9\x57\x62\x5c\x29\x7a\x7a\x9a\x8d\
\xa9\x66\x5d\x06\x10\x3c\x11\x06\xa2\x49\x28\x0b\x5d\xf6\xda\xfc\
\x9b\x1f\x17\x18\x15\xe8\x74\x12\x44\x58\xbd\x9f\x12\x10\x78\x18\
\xfa\x8b\x19\xbe\x3c\x1b\xb9\x01\xd1\x74\xf1\xf1\xbc\x3e\xcd\x99\
\xd4\xae\x1d\x9d\xbe\x17\xb5\xc3\x7e\x6c\x2c\x77\x9c\xf5\xd9\x55\
\x2c\xd7\x91\xb5\xf7\xbb\xd1\x27\xe5\x09\xe9\x86\x93\x3b\x84\x41\
\x91\xac\x53\x8a\x7d\x75\x3e\xf3\x28\x7e\x74\xea\x2d\x93\x0e\x09\
\xb5\x90\xef\xd3\x9d\x92\x34\xa2\x4f\x4f\x47\x3c\x3f\x3f\xe3\xf9\
\xf9\x19\x3f\x7e\xfc\x88\x9f\x9f\x78\x3a\x3e\xc5\xf5\x04\x0f\x45\
\x72\x95\x37\xd8\x79\xe3\x9d\x94\x04\x9a\x0f\x00\x9a\x63\x8b\x89\
\x70\xee\xbe\xf3\x8e\x70\x8d\xc0\xe5\x7f\xdf\xa3\x13\xe0\xeb\xac\
\x37\x27\x5b\x94\xb4\xb5\xfe\x64\xfd\xfe\xa3\xbb\xbd\xe1\xce\x98\
\xc0\x55\x86\xb7\x4c\x48\x0d\x59\x76\x64\x27\xb9\x9e\xf2\x1f\x24\
\x6d\xea\x74\xb8\x20\x60\x98\xd6\xf3\x10\xdc\xa4\x9e\xb3\x7a\xc2\
\x04\xcb\xf6\x1e\xce\xf6\x5c\x4f\x9d\xcc\x90\x0b\x31\x8e\x56\x07\
\x80\xe2\xaa\x02\x12\x2e\x62\x48\x26\x42\xd7\x58\x55\x3f\x4c\x24\
\x78\x97\x1f\x26\x25\x03\xa7\x2d\x11\xd6\x69\x24\xff\xc1\x10\x4c\
\x68\x40\x31\xaa\x3a\xa7\x16\xeb\xaa\xac\xa2\x4c\x63\x04\x75\x93\
\xee\x5d\x06\x12\xf1\x2f\x22\x75\x44\xca\x91\x94\x39\x92\x46\x95\
\x2b\x88\x6a\xcd\xd1\xf0\x7d\xe0\xf5\x21\xfb\x10\xd0\x45\x5f\x35\
\x4d\xb2\xb4\xda\x25\x93\x0a\xe6\x88\x8f\x35\xbc\xe0\x7a\xee\x63\
\xa5\x89\x94\xf7\xfe\x22\xd8\xaf\xfe\x5b\xcc\x8c\xa3\x62\x38\xfe\
\x36\x5d\xa7\xf0\x6e\xea\xbc\xe4\xc4\xef\x56\x3c\x0a\x81\xfa\x4a\
\xf7\x72\x2f\xac\x9a\x90\x36\x34\xbd\xdf\xad\xcc\xbe\x1b\xae\x35\
\x33\xe6\x28\x9a\x08\x8b\x66\x97\x40\xd1\xa4\x32\xaa\x59\x1c\x98\
\xb1\x2f\x8e\x54\x35\xb4\x29\x4e\x37\xe4\xc6\x5c\x7e\x9c\xb3\xb1\
\x93\x12\xe7\xf6\x76\xb2\x6d\xdb\x16\xce\xba\x0b\x52\x95\x13\xab\
\x52\x6c\x2b\x9d\x1f\xb3\xf2\xf6\xdc\x42\x7a\x4a\x26\x9c\x6b\x09\
\xd2\xbd\x08\xd5\x2d\x58\xcf\xdb\xfb\xf2\x9e\x94\x54\x23\x44\x08\
\x80\xa1\xb4\x45\x24\x5e\xe3\x36\x12\xc3\x51\x84\x61\xd2\x51\xa8\
\x86\x25\xbf\x04\x31\x31\xe5\x44\x40\xb6\x2e\x70\x27\xee\x41\xa8\
\x76\xc6\x00\x00\x20\x00\x49\x44\x41\x54\x9c\x83\x0b\xd3\x3a\x07\
\x10\xda\xc3\x01\x87\x68\x3a\x17\xdf\xac\xc9\xaa\x03\x46\x88\x1f\
\x97\x8d\x90\xaa\xd1\x5c\xce\xc4\x88\xdf\x07\x45\x16\x55\x59\x52\
\xcc\x27\xc5\xf8\x08\x13\x73\x20\x62\xac\x2c\xed\x47\x95\x8e\x0b\
\x71\x92\xbf\xe2\xbd\x09\xa7\x22\x8a\x5b\x75\xad\x44\xb0\x78\x66\
\x26\xf9\x38\x39\x40\x87\xb9\x50\xa1\x59\xf4\x8c\x4c\x21\x58\xe7\
\xf3\x79\x52\xc6\xb9\x3a\xec\x6c\x80\xb3\x4d\x22\x47\xf2\x8e\xe4\
\x4e\xec\xba\x4d\xb9\x9c\xcd\x3b\xc6\xde\xca\xcd\xc6\x63\x99\xcf\
\xab\x5a\x79\x7d\xa8\xf8\xde\xa8\xf5\xa0\x62\x0d\xb7\xd6\x91\x66\
\x89\xa1\x69\xff\xab\x21\x2e\x3b\xd2\xf7\x7d\x5c\x1a\x87\x17\x75\
\xee\xba\x6e\xb2\x78\x6e\x2e\xc1\xeb\x8f\x35\xbc\xb4\x31\xd1\xd8\
\x91\xe9\xa5\x6e\x9c\x73\x69\x89\x9b\x1f\x3f\x7e\xe0\x9f\x7f\xfe\
\x49\x2a\xd6\xf3\xf3\x33\xc7\xbc\x3a\x1c\xe1\xac\x43\xdb\x8e\x33\
\xbb\xf2\x80\xa4\x79\xa0\xd0\x92\x5f\xc6\xaa\x99\x6a\xe1\x9c\x2d\
\x4a\x8e\x6c\x4b\x24\x6b\xf2\xb7\xb9\xdc\x77\xad\x82\x35\x37\x5a\
\xd7\x58\xad\x20\x5b\x2c\x88\x3b\x10\xac\x55\xd5\xcf\x28\xa2\x2e\
\x6a\xa7\x8d\xea\x8d\xc9\xb7\xe2\x9b\x84\x44\x14\x88\x08\xce\x58\
\x18\xd8\x8b\xfa\x9c\x6f\xf3\x81\x81\x0e\x78\x6b\x6d\x03\x82\x07\
\x30\x92\x00\xe9\xf8\x99\x64\x34\x30\x46\xee\x87\x00\x84\x44\xb4\
\x74\x00\x5b\x6b\x9b\x0b\xf5\x54\xae\x4f\x44\x08\xde\xa7\xc5\xa3\
\xc7\x3a\xab\xae\x67\x80\x10\x86\x38\xa1\x6f\x79\x06\x9d\xc6\x85\
\x72\xaa\x7c\xb8\x72\xb7\x00\xc1\x30\xc4\xc5\xac\xe5\x1e\x7b\xb5\
\x8c\x10\x05\x0c\x14\x70\x8e\xab\x37\x9c\xcf\xe7\xb4\x9e\xa8\x0e\
\x7b\x91\x13\xab\x0b\x85\x89\x78\x56\xb1\x56\xab\x26\xe6\x51\x63\
\x26\x0a\x96\x3c\x93\xe9\xaa\x0c\x3e\xcd\x16\xd6\xef\xbd\x1e\x68\
\x89\x9a\x5e\x2a\xb3\x9c\x84\xbd\x07\x6b\x69\xdc\x6b\xc0\x54\x15\
\xac\xeb\x51\xba\xdf\x69\x9b\x81\xd5\x26\x6d\x4b\x99\x3d\xf2\xa0\
\xb9\x62\x19\x6b\x75\x64\x0d\x49\xc1\x2a\xf9\x60\xc9\xdf\x22\xfd\
\x77\x1d\xaf\x3b\x28\x1f\x4d\xb0\xca\x17\x65\xc7\x59\x56\xa7\xb8\
\x13\x82\x4c\x53\x07\x52\x43\xa8\x89\xd2\x3f\xff\xfc\x83\xb6\x6d\
\x27\xb3\x06\xc7\xd9\x82\x47\x1c\xda\x23\x1a\xd7\xe0\xe0\xc6\xf8\
\x56\x9a\x54\x95\x62\x5a\xf1\x8d\x8c\xb9\x0a\x66\x7d\x06\xe0\x16\
\x05\x2b\x1f\x25\xe7\x1d\x57\x9e\x4e\xf1\xbb\xe6\x16\x85\xe3\x5b\
\x5e\xce\x5d\x5e\xf2\xdd\x08\x56\x34\x5d\xcd\xc0\x2d\xc4\xd2\x12\
\x95\xca\xd8\xb0\x38\x7b\x67\x69\x50\x60\x10\x4d\x6c\xca\x69\x9b\
\x44\xad\x41\x5e\xcf\x2f\x95\x0e\x6b\x7d\x54\xad\x02\x28\x9a\xee\
\x8c\x89\xe1\x16\x9c\xa4\xe1\xa3\x7f\x90\x8d\xe6\x41\x0f\x22\x8f\
\xbe\x6f\xd8\x2f\xcb\x71\x14\xf7\x46\x02\xd9\xc6\x90\x20\x13\xf3\
\x54\x54\x83\x03\x08\xa0\xa9\x9a\x03\x23\x26\x6d\x8a\x75\xb5\xe5\
\xd9\x95\x57\x20\x27\x50\xac\x9e\x95\xfc\x8f\xc6\xf7\x31\x04\xf1\
\x3f\xa3\x69\x74\xfb\x8e\x09\x56\x1f\x3c\x5e\xfb\x0e\xe7\xbe\x4b\
\x6e\x01\xf9\x9a\xa2\x62\xd2\x4b\xaa\xb4\x8d\x66\xce\xd8\x06\x70\
\x6c\xaf\xc0\xca\x5b\x30\xc9\x54\x2f\xeb\x2f\x02\x40\xa0\x06\x2e\
\x38\x0c\x7e\x24\x67\x5d\x1f\x63\xdb\x35\x07\x34\xcd\x21\xcd\xec\
\xcc\x7d\x38\xe5\xa3\x43\x97\x94\x5c\x05\x2a\x2a\x72\x5c\xb4\x2b\
\xb5\x9e\x54\x28\x94\xfc\xaf\xd6\xda\x92\xc5\x59\x84\xe3\x07\xf0\
\x43\x48\x0d\xae\x04\x64\xd4\x6b\xb7\x6d\xce\xa0\x52\x6c\xb4\x7a\
\x25\x04\x8b\x97\xbb\x39\xe0\xf9\xf9\x67\xfc\x3c\xab\x60\xa1\x3c\
\x7b\xb0\x71\x2d\x5c\xd3\xa0\x6d\x5a\x98\xc6\xa1\x31\x16\x70\x96\
\xd7\xf5\x73\x56\x5c\xec\x63\x67\x65\x46\xf2\xc0\xf6\x96\x74\xfd\
\x52\xe1\xac\xa9\x55\xa5\xdf\xac\x15\xf4\x96\x34\xae\x55\xad\x34\
\xb6\x94\xff\x96\x50\x0e\xfb\x80\xa6\x64\x8d\x0c\x60\xd8\x51\x1d\
\x86\xcd\x43\x30\x01\x14\x64\x7f\x54\x13\x20\xc3\xc5\xd8\xe1\xc2\
\xc0\x90\x41\x30\x01\x96\x6c\x71\x6b\xc8\xa8\xb5\xfa\xf8\xe7\x86\
\x8c\x22\x13\x97\x2a\x85\x26\x54\xf9\xf4\x7e\xd9\x9f\x7c\x8b\x92\
\x9f\x1e\xcf\x8e\xb3\x31\x88\x2a\x2f\x22\xed\x00\x04\xf8\xd0\xe3\
\xd0\x37\xe8\xfb\x96\x89\x98\x33\x49\x71\xb1\xc6\xc1\xaa\x4e\x5f\
\x5f\x47\x4c\x6e\x44\x01\x50\x0b\x64\x1b\x63\x00\x07\x38\x4f\x89\
\x60\x35\x8d\x8b\xa4\x75\xfc\x08\x29\x22\x9a\xd6\x97\x22\xc9\x27\
\x60\xa0\xa0\x7f\xcd\xd7\x33\x88\x8e\xed\xbc\xf6\x21\x87\xfe\x25\
\x0c\xd1\xd7\xaa\xeb\x7b\x9c\xcf\xd1\x15\x20\x78\x9c\xfa\x1e\x2f\
\xe7\xd3\xc4\x07\x4b\x17\x3e\xab\x4f\x41\x91\x55\x0b\x22\xc0\xda\
\x98\x27\x43\xb0\xa2\x56\xc5\x6a\x92\xc6\x19\x96\xeb\x88\xb1\x04\
\x6b\x1a\x00\xbc\x5c\x51\x08\x01\x06\x16\xde\x06\x8e\xa7\xd7\x10\
\x9a\x26\xa0\x6d\x43\x32\x2b\x8a\x19\x57\xfc\xe7\x84\xf0\xe5\x2a\
\x9a\x36\x39\xae\x29\x80\x15\xdf\x17\xdf\x4d\xc9\xab\xb8\x1e\x9b\
\x7d\xb0\x86\xd8\x46\x3a\xc7\x4b\xd4\x88\xb5\x45\x9c\x5c\xcf\xbd\
\x47\x37\x78\x0c\xc1\xa3\xef\x07\x9c\x4e\x67\xbc\xbd\xb1\x93\xfb\
\xf9\xdc\x21\x84\xd1\x07\x42\xe4\xfe\x51\x7d\x41\x1c\xfd\x03\xc6\
\x38\x10\xe2\x6c\x30\x65\x12\x69\x9a\x03\x9e\x9e\x58\xad\x3a\x1e\
\x8f\xf8\xe7\x9f\xff\x42\xd3\x34\x78\x7a\x8a\x26\xc1\xe3\x18\xeb\
\xaa\x69\x5a\x3c\x1d\x9f\xe3\x82\xd0\x8e\x4d\x41\x8e\xd5\x0a\x58\
\x83\xc0\x62\x00\x9c\xb5\x30\xd6\xa6\xd8\x3d\xa9\x19\x55\x23\x6b\
\x5d\x48\x25\xb5\x68\xcb\x48\x77\xcd\x34\x77\x4d\x23\x3e\x47\xd2\
\xf2\x07\x59\xca\xab\x71\x1b\x4c\x84\xab\x02\x96\x99\x5d\x30\x65\
\x4c\x64\xc3\x09\x17\xba\xba\x41\x9a\xc1\x46\x01\x21\xf4\x51\xcd\
\xb4\xe2\xc2\x0e\x63\xc4\xcf\x28\x12\x1f\x33\x46\x40\xb7\x86\x3b\
\x58\xbd\x8d\xbf\xc2\x58\x5b\x85\x37\x13\x78\x09\x97\x31\x0b\xba\
\xf8\xb4\x92\xc5\xe4\x2b\x5c\x9c\x63\x0c\xe0\x9c\x81\x73\x2d\x28\
\x18\x58\x18\x58\x43\xbc\x5c\x53\x4f\xc0\x81\x95\xd8\x10\x3c\xac\
\x45\x0c\x68\xea\x41\x16\x38\x9f\x4f\x90\x50\x05\xcd\xa1\x41\xdb\
\x1c\xf0\x7c\xe0\xb0\x22\x52\xf1\xac\xa8\xac\x96\x17\xae\x46\x34\
\xfd\x05\x08\xd9\x02\x3c\x0d\x5c\xb7\x63\x7d\x3d\x77\x5c\x66\xb2\
\xf8\xf2\x18\x5b\xcb\xc6\x19\x79\xba\xae\x9a\x58\xcf\x13\x73\xe1\
\xe0\xab\xc1\xb3\x69\xd5\x18\x26\x7e\xb1\xee\xfa\xe0\x31\x74\x9e\
\x03\x01\x13\x45\xf5\x2a\xa0\x1f\x3c\xde\xfa\x01\x6f\xe7\x33\xde\
\xde\xde\x70\xea\xce\x38\x9d\x3b\x9c\x4e\xe7\x89\x42\x0c\xcc\xbf\
\x37\x06\x86\x1f\x49\x60\x36\x35\xc0\x27\x65\x4e\xf2\x9c\x7c\xa7\
\xe2\xb3\x31\x01\x08\xfd\x00\x33\x10\xac\x25\x58\x8f\x78\xaf\x84\
\x21\x10\xec\x10\xd0\x34\x1e\xad\xf7\x68\x86\x3e\x29\x58\xf2\x91\
\x81\x5a\x1b\x55\x41\x6b\x2d\x2c\x59\x78\x1a\x1d\xe2\x2d\x71\xf0\
\x57\xab\x88\xa0\x36\x53\x0a\xfa\xbe\xbf\xb8\x57\x5d\x97\xf2\x7b\
\x9f\xc3\x35\x66\xc4\xb9\xef\x5b\x07\xb1\x1f\x8d\xd5\x7b\x01\x2e\
\x56\xa7\xb8\x36\x8d\x58\x6d\x96\x4f\xc9\x06\x15\xc5\xb4\x57\x12\
\xb9\x57\x99\x96\xee\x77\xae\x3e\xcd\x61\xad\x4c\x2f\xd2\x90\xef\
\x7a\x9f\x1a\x64\xcf\x5b\x01\x96\xaf\x61\xa8\x9c\xef\xf9\xfc\xab\
\xb6\x40\x7e\x03\xbf\x7c\x91\x99\xf4\x96\xca\xac\x94\x8f\x6b\xdf\
\xcd\x52\x1a\x6b\x7e\xe5\x6b\xb8\x30\x11\xe6\xe6\x2f\x00\xbc\x68\
\x87\x72\x72\x9f\x9b\x82\x9d\x5f\xb8\xd4\x38\xc9\xd4\x70\x69\xec\
\xc4\x3c\x28\xcb\xda\x3c\x3d\x3d\x27\x82\xf5\x74\xfc\x81\xe3\x81\
\xfd\xae\xc6\xd9\x82\x2d\xac\x6d\x92\x3a\x35\xdd\xc6\xc7\x69\xcc\
\x64\x5a\x7b\xfe\xfd\x96\x82\xaa\xb8\x06\x54\xf8\x1e\xd4\xd6\xa8\
\x2d\xa5\xf3\x0c\xe4\x05\x57\xf5\x85\xec\xc5\x96\x10\xd2\xdf\x88\
\x6a\x8c\xbc\xc6\xb9\x69\x31\x57\x73\xb6\x8f\x4e\x43\x54\xac\xb8\
\x83\x1e\x7d\x7c\xc4\x57\x0a\x68\x5b\x5e\x0f\xd3\xd3\x80\xc1\x0f\
\x10\xd2\x66\x8c\x41\x73\x6c\xd0\xda\x16\xc6\x5d\xce\x62\x1d\x3f\
\xd1\x04\x4f\x04\x9e\x43\x38\xc2\x23\xc0\x61\x34\xdd\x19\x2b\x24\
\x24\x12\x48\x10\x00\x87\xe4\x02\x36\x4b\x8f\x47\x25\x8f\xdf\x0d\
\x02\xc1\xc3\x8b\x32\xed\x03\x86\xe0\x11\x3c\xa1\x0f\x6c\x1a\xec\
\xce\x03\xbb\x00\xc4\xa5\xb0\xde\xe2\xf2\x40\xc3\x10\xc0\x3e\x69\
\xf2\x8c\xc4\x9f\x49\x97\xb5\xde\x9f\xab\x6e\xbc\x8f\x55\x37\x8a\
\xf7\x1f\x54\x79\x88\x59\xcf\xc7\x73\x3d\x88\x2c\xc6\x30\x1b\xa3\
\xa9\x53\x5c\x17\x44\xc1\xd2\x9f\xa6\xe1\x18\x59\xa5\x19\xc5\x69\
\xd2\x82\x75\x29\xde\x58\xee\x48\x5f\x2c\xc5\x05\x25\xb4\xe2\xef\
\xa1\xaa\x4d\xd7\xe3\xbb\x95\xd9\xdf\xbc\xdf\x0b\x82\xa5\xa1\xcd\
\x84\x32\x7b\x28\x5f\xc7\x4d\x82\x23\x6a\x05\x46\x6f\xc7\x51\xaa\
\xac\x7d\x46\x51\x25\x70\x71\x49\x9b\xc3\x45\xbc\xab\xa6\x69\xf0\
\x74\x7c\xc6\xf3\xf3\x0f\x3c\x3d\x3d\x4d\x42\x31\x70\xd0\xc6\x69\
\x44\xe7\x92\xaf\x53\x51\xe9\x59\x30\xd5\xd5\x86\xf2\x3e\x28\x3d\
\x17\xf9\x5b\x14\xa6\x6b\x47\xaf\x7a\x50\x50\x1a\xe5\x2c\x1d\xd7\
\xe7\xe5\x60\xb3\xaa\x07\x92\xa2\x16\x40\xd4\xc2\x53\x40\x08\x16\
\x44\x47\x36\xaa\x19\xf6\x19\x93\xe8\xed\x00\xe0\xda\x06\x8d\x6d\
\xd1\x98\x06\x8d\x6d\xe0\x5c\x0b\xe7\xda\x49\x67\xcf\xe6\x48\xf6\
\xdf\xd2\x79\x18\xf3\xc9\xe5\xc1\x0b\x2a\x53\x32\xb5\x41\xcd\x48\
\x4c\x64\x05\x63\x87\xcf\x1f\x21\x0c\xd3\x81\x12\x05\xa4\x89\x02\
\x81\x08\x43\xcf\xca\x74\x08\x01\xe7\x81\xd7\x17\x7d\x3b\x75\xac\
\x5a\x9d\x46\x7f\xcb\x61\x18\x00\x58\xc0\xcc\x9b\x9a\x85\xa8\xe4\
\xe6\xb9\x52\x19\xe7\x83\xaf\xcb\x99\x82\x66\x42\xa4\xc4\xc4\x27\
\xed\x8d\xcc\x60\x14\xe5\x5c\xc2\xc4\xc8\x47\x1c\xe5\x4b\x4e\xf0\
\xce\x39\x34\xae\x01\xa9\xb8\x7b\xda\x44\xbb\xd6\x16\xcc\xf9\xab\
\x56\xdc\x17\x5b\x94\x86\x8a\x29\xe6\x06\x0a\x5f\x15\x7f\xbb\x8e\
\x34\x73\x17\x2d\x05\x11\x1c\xa2\xef\x45\xee\xdc\x0a\x4c\x7d\x3f\
\x74\x23\xa9\xa7\xc1\x8b\xe3\x85\x10\x2c\x51\x00\x9e\x9e\x9e\x26\
\x31\xaf\x9c\x73\x78\x3a\x8e\xce\xed\xda\x99\x5d\xd6\x74\x9b\x23\
\x57\xc0\xa5\x69\x6e\x89\x58\xe5\x7f\xd7\x06\xf3\x7d\xd8\xda\x39\
\xe5\xe7\x8e\xfb\x45\xa1\x59\xc6\xdc\x04\x83\xfc\x9c\x35\x72\xb5\
\xa4\xdc\xea\xfa\xcb\x1d\xbc\x43\x08\x6d\xf4\xff\xb1\x20\xf2\xec\
\x4b\x15\x55\x28\x56\x48\x3c\x00\x82\x71\x16\x8d\x6d\xe1\xe0\x78\
\x5b\x08\x25\x22\x24\x8a\xa2\x7f\x14\xd4\xbb\x04\x20\x85\x68\x00\
\x79\x88\x43\xfe\x76\x82\x35\x25\x0b\xce\x8d\x6a\x4d\xa0\xe8\x73\
\x15\x02\xaf\xbf\xd8\xf3\xfb\x7c\xee\x59\xb9\x7a\x79\x79\x8b\xc1\
\x83\xc7\x99\x82\xc1\x03\xd6\x35\x2a\x1e\xd8\xf4\x3d\x17\x68\xe7\
\xf2\x7c\xa0\xa5\xcb\x35\x27\x33\xfa\xf9\x48\xd9\x68\xd2\x23\xe4\
\x2d\x0f\xc7\x20\xaa\x94\xf8\x5f\x49\x5b\x25\xa4\x4c\x4c\x88\x7a\
\x22\x4c\xd3\x34\xa0\x26\x80\x42\x13\xcb\xa6\xf4\x5c\xe6\xfd\x16\
\x75\xfe\xf7\x68\xb4\xb7\xa4\xb1\x76\xce\xbd\xf2\xf1\x28\x58\xea\
\x38\xd3\xdf\xef\xbe\x1d\x09\xb1\xf2\xce\x54\x1e\xe4\xd9\x6c\x2a\
\xb3\x2f\x84\x7b\xdd\xef\x52\x5a\x17\x4e\xee\x79\xa6\xb8\x81\x47\
\x6a\xb8\x34\xe9\xd2\x26\xc2\xa5\x1b\x48\x8d\x6b\xb4\x16\x18\x33\
\x5d\x22\x47\xcf\x24\x4c\x8d\xe1\x82\x69\x45\x08\x56\xa9\x81\xd7\
\xd8\x42\x9c\x2a\xb9\xba\x3f\xb6\xa8\x04\x5b\xd2\x10\xe4\x44\xaa\
\x74\x8e\x46\x7e\xce\x96\x97\x4d\x0f\x18\x98\x74\x29\x1f\x1f\x37\
\xd6\xe5\x74\xc9\xb8\x58\xb9\x53\x81\x35\x47\x65\x69\x34\x6b\xa7\
\x8f\x36\xf3\x99\x3c\xea\xfa\x74\xcb\x24\x46\x9b\xde\x84\x64\x99\
\x31\x0d\x04\x4c\xcc\x86\x26\x12\x32\x8c\x26\x7f\x5e\x5f\xd4\xa3\
\xf7\x03\x82\x9f\x0e\xa0\x06\x1d\x4c\x94\xa2\xfa\x45\x97\x2e\x01\
\x6b\x58\xf2\x61\x98\x33\xdd\xce\xf9\x45\x48\x1b\x04\x20\x11\x2b\
\x4d\xc4\xf2\x01\xa1\x3c\x7f\x99\xe5\xac\xaf\x67\x8d\x49\x13\x61\
\xe6\x06\x68\x5b\xea\x52\xc5\x63\xe1\x2b\x12\x85\x8f\xc6\x77\x2b\
\xb3\x7b\xde\xef\xac\x89\xb0\xd4\x60\xe9\xd1\xa1\xfe\x5b\x1a\x24\
\x1d\x3c\x50\x30\x31\x09\x45\x05\xcb\x5a\x93\x48\x95\x56\xb0\x7e\
\xfc\xf8\x81\xc3\xe1\x00\x6b\x2d\x0e\xed\x21\x39\xac\xea\x98\x56\
\xd2\x49\x2d\x91\xab\xad\x26\xc2\xfc\x37\x15\xef\xc7\xad\xe5\x38\
\x25\xe1\xdb\xd3\xd8\xaa\x52\xe5\xe7\xe4\xe7\x2e\xbd\x74\x39\xb9\
\x62\x15\xa5\x41\xa0\x80\x36\x04\x78\xe2\x95\x0e\x00\xc0\x7b\x8e\
\x64\x0e\x6b\xe0\x4c\x54\xaf\x8c\x5e\x0b\x33\xd6\xdd\xa4\xc2\x32\
\x29\xa3\x10\x80\x20\x24\x60\x3a\x02\x1f\x89\xd5\xe8\xb7\x44\xc4\
\x7f\x8b\xd9\x30\x11\x38\xe8\xf8\x6f\x04\x19\x8c\x04\xb2\x93\xf7\
\xd7\x7b\x36\x0d\x9e\xbb\x1e\xa7\x73\x87\x10\x02\x4e\xa7\x2e\x4e\
\x62\x79\xc3\xdb\xdb\x09\x7d\xdf\xa7\xd9\x94\x9c\x9d\xcb\x05\x9c\
\x73\xd7\x00\x4d\x62\x4a\x0a\xd6\xd2\x73\xc8\xdf\xd5\x3c\xdd\x5c\
\xf5\xd2\x5b\x09\x3c\x2a\x0a\x97\xdc\xa7\x26\x62\x32\xa8\xf3\xde\
\x23\xf8\x80\xd0\xf0\x7e\xad\x2e\xea\xb6\x46\xe7\x63\xae\x4d\xb9\
\x07\xbe\x5b\x07\x78\x0d\xe6\x89\xb9\xf6\xe4\xbc\x35\x6d\xbc\x3f\
\x91\x07\xc4\xdf\x36\x9b\xdd\x1b\x1f\x79\xbf\x6b\xe9\xcd\x9a\x08\
\x4b\x2a\xd5\xdc\x71\x60\x3a\x23\x23\x57\x13\xb8\x71\x02\x60\x6c\
\x9c\xc6\x5e\x26\x58\xcf\xcf\xcf\xe3\x2c\xa0\x43\xab\xfc\xae\x2e\
\x95\xac\x35\xcc\x11\xab\x2d\x4a\xc7\x1e\x0a\xcb\x77\xc4\xd6\x32\
\x2b\x75\xb6\xea\xe8\xe6\xdf\xdf\x4a\xae\xd6\x8e\xe7\x24\xc1\xe4\
\xaa\x2b\xc9\xa2\xcf\x0d\xa8\x0d\x38\x20\x2a\x2b\x64\x30\xd8\x9e\
\x09\x90\x01\x2c\x2c\x9c\x6d\x60\x31\x35\x3d\x89\x0a\x0b\x12\x42\
\x60\x01\xe3\xd9\x97\x8b\x88\x15\x23\x12\xc7\x7d\x71\xe8\xd7\xd1\
\xde\x11\x67\xef\x86\x48\xb2\x94\xdf\x93\x2c\xdf\x63\x5c\xdc\xc7\
\xd7\x95\x25\x6c\x64\x76\xf0\x30\x8c\xe4\xea\x7c\xe6\x58\x76\xaf\
\xaf\x27\x9c\xce\x5d\x9c\x21\x7c\x1e\x43\x2e\x18\x33\x21\x2e\x9a\
\x18\x2d\x95\xa7\x3e\xbf\x44\xb6\xf4\xb3\x2c\x29\x92\xfa\x59\x68\
\xa2\x24\xa4\xa8\xa4\x50\xc9\x6f\xa4\x4c\x4a\xbf\xb3\xd6\x22\x78\
\x0f\x3f\x4c\x97\xe1\xc9\x07\x73\x3a\x1f\x79\x1b\xb4\x15\x5b\xce\
\xfd\x2c\x26\xc2\x47\x6a\x13\x97\x2c\x26\xf2\xee\x7c\x16\xf3\xde\
\x1e\x75\xe4\x96\x34\x2e\xca\xec\x81\x9e\xef\x1e\xb8\xd7\xfd\x6e\
\x32\x11\xae\x29\x58\x73\x09\xe7\x12\xfe\xd2\xf9\xd6\x4a\x03\x67\
\x26\x66\x41\x59\xd8\x59\xfc\xad\x9c\x73\x68\x63\x20\x41\x1d\x3c\
\x94\x1b\xf9\xe5\xf5\xee\xf2\x82\xdb\xaa\x60\x6d\x39\x5e\xf1\x31\
\xd0\x9d\xd9\x35\xcd\x59\x4e\x86\x4a\xf5\x6e\xee\x9c\xc9\x35\x17\
\xcc\x58\x42\xb0\xac\x65\xf3\x1b\x11\xa9\xce\x3d\x1a\xdc\x88\xe0\
\x03\xab\x4a\x26\x9a\x0f\x03\x08\x96\x0c\x93\x2b\x33\xfa\x0e\xaa\
\xd4\xe3\x35\x62\xb0\x52\x63\x40\xf0\x20\x0a\x40\x40\x9c\x12\x22\
\x79\x9d\x0e\xc7\xc7\xec\x66\x0b\x29\x1b\xf6\xbd\xb2\x64\xd5\x9c\
\x44\x26\x66\xde\xeb\xc9\x2a\x1e\xfd\xe0\x71\xee\x7a\x9c\x15\xc1\
\x7a\x79\x7d\x8b\x4e\xee\x67\xf4\x7d\x0f\x22\x51\x7d\xe4\xba\xb7\
\x13\x81\x52\x59\xcf\xbd\x9b\x25\x82\xa5\xf7\xe9\x73\x85\xf8\xe5\
\xcf\x55\x3b\xc5\x6b\x62\x94\x54\xf6\x10\x10\xdc\xa8\x60\xa5\xd9\
\x85\xaa\xbd\xd1\xd7\xc8\xfd\xb4\xf2\xeb\x57\xfc\x3d\x7c\x37\x45\
\x66\x0f\x7c\xb7\x32\xfb\x5b\xf7\x3b\xf1\xc1\x5a\x6a\x1c\x81\xa9\
\xa9\x44\x3a\x99\xdc\x27\x42\x9f\xa7\xcf\xe7\x81\xb0\x38\x9a\xda\
\x89\x7a\x35\x06\x12\x9d\x2e\x7f\xa1\x1b\xb5\xb1\xc1\x1d\x1b\xe3\
\xbc\x21\x9c\x53\xda\x4a\xc4\xe9\x5a\x15\xec\x96\x73\x6f\xb9\xc6\
\x3d\xcc\x10\xc5\xbc\x02\x3b\x38\x85\xde\x5e\xae\x23\xe1\x59\xcf\
\xc6\x5e\x2f\x48\x4e\xb8\x24\xed\xf1\x3b\xc7\x6c\xd3\xe7\x5b\x6b\
\xe1\xe0\x26\x1d\x7b\x43\xc0\x21\x1e\x77\x83\xe3\x70\x26\x60\xa2\
\x64\x09\xec\xef\x93\x3e\x9a\x68\x19\x8c\x44\x8b\x63\x64\x01\x6e\
\x34\xc1\x07\xbd\x42\xc2\x58\x30\xa4\x62\x78\x95\x20\xa4\xc8\x1a\
\x8e\xb7\x85\x60\x10\x3c\x3b\xe2\x7b\xcf\xe6\xc1\xae\x8f\xcb\x5e\
\xc5\x50\x0c\x83\xf7\x78\x7d\x7d\x8d\xc7\x63\x58\x04\x70\x6c\x39\
\x04\x76\x8c\x37\x2b\x13\x10\xe6\xc8\x50\x4e\x82\x74\x79\x96\xbe\
\x97\x9e\x47\x89\x60\xe9\x19\x85\x32\x69\x46\xbf\x3f\xf2\x1b\x4d\
\xb2\x92\xd9\xd0\x07\x78\xeb\x13\xc1\xf2\xde\x5f\x0c\xe8\xf4\x33\
\x17\x35\xac\xa4\x64\xe9\xef\x9f\x49\x05\xba\x16\x5b\x46\xfd\xf7\
\x32\xcd\xcd\xb5\xf5\x6b\xe7\xfe\x8d\xf2\xbf\xa6\x4d\x5c\x1a\xec\
\x95\xc4\x0b\xfd\xbb\xd5\x32\x99\xc9\xc7\x35\x65\x72\x4d\xb9\xef\
\x8d\x6b\xaf\xb3\x96\xd7\xdc\x7a\x71\x6b\xba\x4b\x1c\xa4\xd1\x8d\
\xa2\x96\xd9\xf3\x1f\x4b\x43\x94\xaf\x72\x2f\xa4\x2a\x7f\xc0\x97\
\x8d\x11\xe2\xc7\xa4\x99\x3d\x87\xc3\x61\x42\xae\x24\x6d\xed\xe4\
\x5e\x6e\x78\x2f\x9d\xdc\x4b\x1d\xa5\xfc\xbd\x36\x7a\x2e\x15\xce\
\xad\x2f\xe2\x7b\x5e\xe0\x6b\xc8\xd5\xf4\xc5\x79\xdf\xf5\x38\xc1\
\xf4\xcf\xb6\x6b\xae\xa5\x77\xc3\x39\xa3\x82\xf5\xf1\xe6\x90\x3c\
\x3f\xa5\x97\x4d\x42\x2e\xe4\x10\x75\x44\xce\x25\xc3\x0a\x14\x0f\
\x20\xd8\x6f\xc9\x07\x02\x05\x0f\xab\x3a\x9c\xbc\xce\x02\x00\x05\
\x5e\xb2\x59\x22\x9c\x03\x1c\x58\xd3\x7b\x0f\x32\x40\x08\x62\x7e\
\x97\x68\xf7\x80\x94\xcf\x98\xcf\x70\x61\xa2\x17\x42\x60\x02\xc7\
\x9e\xf2\xd1\x59\xdd\xc7\xd9\xc0\x7d\x9c\x31\x78\x3e\x9f\x70\x3a\
\x9f\x31\x0c\x9e\x03\x07\x13\x01\x31\x78\x69\x88\x71\xac\x7c\x60\
\x35\xcd\x59\x0b\x9b\x95\x55\x5e\x76\x25\x94\xdc\x07\x96\x90\x37\
\x82\x25\xc2\x26\x3e\x57\x00\x12\x39\xd2\xe9\xeb\x32\x96\xc1\xdf\
\x84\x64\x19\x83\x10\xcd\xa7\x12\xf2\x41\x87\x76\xd0\xb3\x15\x45\
\xe1\xd2\x83\x4b\x39\x4f\x13\xaf\x3c\xbf\x6b\xf8\x8c\x64\x6b\xb5\
\x0d\xc0\xba\x69\x6e\xf5\xfd\x35\x3b\xa4\x91\x9d\xb7\xd4\x29\xfe\
\x6d\xcc\xe5\x65\xd2\x1f\x15\xf6\xe9\xdf\x2f\x59\x8e\x4a\xe9\xdd\
\x8a\xf7\xa8\xd8\x09\x57\x16\x7d\xe9\x19\xae\x09\x2b\x9b\xf2\x81\
\xcb\xb6\x66\x6b\x7a\x39\xdf\x98\x3b\x77\x71\xa9\x9c\x04\x45\x8c\
\xf4\x74\x67\xad\x62\xe9\x06\xaf\x94\x01\x6b\xa7\xb3\x76\xb4\xd9\
\xaf\xb4\x58\xab\xde\x4e\x6f\x64\xde\x44\xb8\x85\x44\x55\x7c\x3f\
\xe4\x04\x7c\xab\x29\xb1\x44\xce\x99\x04\x4a\x1d\x06\x9a\x06\x40\
\x88\x7e\x54\x30\x00\x19\x04\xeb\x01\xcf\xc4\x0b\x3e\x14\xa3\x30\
\xb3\x12\x3b\x7e\x27\x99\x5e\x0b\xde\x88\x23\x3d\x5f\x5b\x06\x31\
\x32\x8b\x37\xbe\x5f\x86\xd4\xbe\x91\x7c\x31\x69\x00\x28\x06\x63\
\x0d\x04\xf8\xa8\x60\xf5\x3e\xa0\xef\x07\xf4\x5d\x8f\xb7\xd3\x99\
\x1d\xdb\xa3\x89\xb0\x8f\x7e\x5a\x64\x78\x51\x66\x4a\xbe\x63\xe3\
\xb2\x3c\x63\x84\xfc\xe9\x7b\x36\x57\x5e\xfa\x5c\x7d\x7c\xae\xec\
\xe5\x7c\xad\x3e\xe5\xe7\xe7\x7e\x60\xb9\xc2\x9e\x13\xba\xbc\xbd\
\x01\x58\xdd\x73\x89\xd0\x8e\xc1\x4a\xf5\xa0\x50\x56\xa6\x90\x01\
\xa5\xb4\x4f\x79\x43\xac\x15\x7d\x7d\x7f\x4b\x83\xb8\xb9\x7a\x58\
\xf1\x7d\xb1\x64\xc6\x2a\xd5\x9b\xda\xbf\x3d\xbe\xa9\xb3\x48\xb0\
\x2e\xd8\x7e\x46\x8c\x72\x87\x73\xa2\x71\x36\xa1\x6e\x10\xb5\x2a\
\x26\x49\xe6\xea\x58\xfe\xd1\x24\xee\xd2\x31\xb8\x3c\xb2\x99\xeb\
\x30\x4b\xdf\x2b\x2a\x72\x5c\xdf\xd9\x69\xff\x29\xc0\xc1\x20\x58\
\xc0\x59\x42\x70\x62\x1a\xa4\x14\xd8\x33\x55\x5a\x02\x34\xdb\x1a\
\xdf\x89\x69\xba\x42\x92\x60\x2c\xac\x21\xa5\x8e\x20\xbe\x6b\x31\
\x31\x0a\x80\xca\x3b\x6f\xd9\xe7\x4a\xce\x21\x22\x04\x32\x89\x60\
\x0d\x43\xe0\xd0\x0c\x43\xf4\xc5\xea\x63\x48\x86\xa8\xe0\x00\xbc\
\x18\x3a\xe7\x66\xd9\x84\x9a\x63\x69\x14\x3d\x47\xc2\x4a\x65\xbf\
\xf4\x3e\x2f\xa9\x5b\x42\x88\x88\x68\x32\x30\x2b\x5d\x8b\x0c\xa5\
\x07\xa0\xdb\xa9\xbc\xdd\xd1\x3e\x56\xba\x2c\x4a\x31\x00\xe7\x94\
\xff\x35\x53\x45\x6d\x9f\x2a\xb6\xe0\x11\x09\x44\xc5\x32\x9a\xb9\
\x06\x4b\x30\x47\x7c\x72\x05\x4b\x9c\x44\xb5\x79\x62\x0a\x03\x4b\
\x76\x92\xa6\x4e\x57\xfb\x3e\xe4\x66\x14\xc9\x5b\xbe\x4f\xef\xd7\
\xf9\x9d\x5c\x75\xe6\x58\x6d\xd4\xae\xc7\xa3\x94\xd9\x35\xf9\xd8\
\x32\xf2\x9b\x53\x63\xf4\xf1\x49\xdd\x51\xe7\xb2\x19\x2e\x8c\xc6\
\x3b\x22\x04\xe3\x40\x18\xd8\x87\xc9\x4a\x68\x85\x2c\x04\x43\x5a\
\xdc\xba\x7c\x7f\xfc\x01\x90\x08\x82\x8f\x51\xdf\x47\x65\x87\x95\
\xaf\x7c\x20\x33\xe6\x55\x48\x80\x0f\xc0\x79\xf0\x08\x81\xd0\x75\
\x03\xce\x5d\x87\x73\x0c\xc9\x70\x3a\x9f\x93\x82\x95\x08\x83\xca\
\xa3\x0e\xbd\x62\xac\x49\xd7\x2b\x49\xf4\x73\x64\xa9\xa4\x32\x95\
\xc8\x95\xce\xf7\xb4\x1c\xa6\x83\x2c\xbd\x2f\xcf\x8b\xe4\x37\x2f\
\xcb\xbc\x6d\xc9\x15\x2c\x1d\xe5\x5d\x2b\x58\x62\x8e\x14\xf3\xa1\
\x8e\x18\xaf\x15\x78\x21\x75\x5a\x25\xcb\xef\x6b\x2f\x53\xc6\x23\
\x83\xab\xf8\xfb\xf2\xca\xf5\xfa\xe3\xef\x77\xd5\xa4\x86\x7d\xf2\
\x71\xed\xb3\x2b\xaa\x32\x0b\x84\x7c\xab\xa2\xb5\xe5\x5e\xee\x51\
\xcf\x3e\xc2\x54\xf9\xa8\x4a\xd6\x62\xa0\x51\x41\x4e\x86\xf4\x92\
\x14\xd2\xf8\xea\x46\x51\xab\x59\xe3\x28\xcf\xc2\x3a\x89\xa1\x35\
\x0d\x0e\x98\x5f\x7f\xee\x98\xca\x51\x31\xaf\x5b\xc9\x55\xc5\xf7\
\x41\xde\xb9\x2f\x29\x2c\x40\x4e\xb6\x84\x10\x65\xf5\xea\xe2\xb7\
\x96\x17\x87\x26\x56\x8e\x8c\x09\x08\x30\x20\x0c\x30\xe4\x60\x48\
\xaf\x8c\x20\xce\xea\xa4\x12\xca\xc9\x42\x34\x67\xa5\x95\x0f\x4c\
\x4c\x5b\xde\x35\x1f\x09\x51\xfc\x9b\x78\xf6\xe1\xf4\xbd\x19\xe3\
\x5d\x79\x02\x86\x1e\xf0\x81\xd0\xf5\x3d\xaf\x33\x78\x3a\xa7\x19\
\x84\x12\xef\xca\x34\x0d\x88\x78\x20\x94\x4c\x85\xc6\x20\x80\xe2\
\x3d\x30\xc9\x9a\xc3\x92\x59\x43\x97\xb3\x26\x59\x73\xcf\x29\x3f\
\x57\xef\xcf\x09\x8c\x6e\x7f\xb4\x9a\x9e\xa7\xa1\xd3\xb2\x91\x64\
\x19\x63\x26\x7e\xa5\x42\x94\xa4\x5d\xd3\x2a\x95\x10\xae\x61\x18\
\x12\x99\x92\xdf\x49\x34\x79\xed\xd6\x50\x52\xe0\xf3\xef\xa5\x72\
\xab\xf8\xbe\x78\x54\xa2\xf0\xc8\x78\xe4\x32\x6b\x4a\x8d\x60\x49\
\x15\x92\x86\x43\xaf\x5a\x2f\x0e\xea\xe2\xc3\x20\x26\x06\x3d\x8a\
\xd3\x8d\x9a\xcc\x60\x02\x28\x2d\xb7\xa3\xd7\x36\x9c\x90\xab\x40\
\x20\x5b\xf6\xd7\x00\xcc\x45\xa1\x96\x1a\xb2\xe9\x6f\xa6\x7f\xaf\
\x11\xae\x4a\xc8\x2e\xf1\x28\x65\xb6\xf5\x3a\x5b\xd5\xab\x39\x25\
\x85\x68\xac\x6f\xf9\xf9\xf2\x7d\x54\x56\x47\xe7\xf7\x10\x38\x0e\
\x56\x80\xe1\x60\x09\xc1\x4f\xfc\x7c\x62\x4a\x6c\xe2\x93\x74\xe2\
\x4a\xe5\xb9\x0a\x65\xe0\x60\x6c\x98\xe4\x53\xea\x6f\x1a\xc0\x78\
\x82\xcf\x66\x15\xca\xfb\x38\x0c\x03\x86\x40\x18\x06\x76\x74\xef\
\xba\x2e\xad\x2f\xd8\x75\x7d\x5c\x06\x87\xe3\x69\x35\x8d\x03\xe2\
\xf2\x20\xc6\x8c\x3e\x61\x00\x20\xbc\x30\xf7\x89\x2a\x99\x0c\xe7\
\x14\x2e\xa0\x1c\x56\xa1\x54\xae\x72\xac\x44\xb0\x74\x3a\xf9\x3d\
\xe7\xe5\x34\x97\x4e\x4e\xb0\xe6\x94\x37\x1d\x50\x59\xfb\x71\xc9\
\x77\xdd\x1e\x8a\xca\x35\x37\x03\xba\x44\xf4\x96\x48\x7f\x9e\x9f\
\x25\x3c\x4e\x7b\xb5\xee\x6c\xbd\x9e\xd7\xeb\x57\x0c\xb8\x05\x8f\
\xaa\x60\xe5\xbf\x21\x62\x73\x76\xfe\x1e\x5c\x4d\x2c\x56\x8a\x7d\
\x59\xd4\xd8\x94\xc4\x26\x6c\xc9\xeb\x96\xfa\xfc\x19\x54\xac\xa4\
\x60\xe5\x0d\xdd\xb4\xf3\x98\x12\xac\xc3\xe1\x00\x22\x4a\xb1\xab\
\x4e\xa7\x53\x5a\xab\x50\xd2\xd2\x8d\x24\x37\x34\x26\x46\x8f\xee\
\x41\xe4\x26\x04\x4b\x7f\x4a\x0f\x79\xda\x28\x8d\xa1\x1a\xf2\xce\
\xa8\x84\xaa\x62\x7d\x5f\x6c\x51\xaf\xd6\x94\x94\x92\x89\x6b\x6c\
\x74\x0d\x53\x28\x03\x38\x37\x35\x71\x11\x2c\xc8\x0c\x08\x86\x40\
\x5e\x42\x98\x04\x00\xfc\x8e\xb0\xe3\xba\x26\xfa\xa3\x9f\xe2\xa8\
\xc2\xf0\x22\xe9\xce\x59\x10\xb1\x99\xb0\x9c\x57\x02\x8c\xac\xb8\
\x30\x5d\x2a\x86\xc0\xa6\xc4\x61\xf0\x18\xa2\x83\x7b\x77\x1e\xd0\
\xf5\x3d\xba\xa1\x67\xdf\xab\xc0\x03\x9a\x34\x51\x25\x9a\xf2\x09\
\x34\x25\x08\x14\x20\xcb\x66\x2d\x95\x9f\xdc\x83\xde\x6a\xcc\xc5\
\x8e\x2a\x91\x23\x41\xbe\x62\x44\x7e\xcd\x9c\xb8\xcc\x1d\x17\x38\
\x6b\xe1\xac\xbb\x38\x57\x93\xa9\x3c\xb4\x83\xa4\xa1\xcd\x88\x62\
\x32\xd4\x61\x1e\xa4\x9d\xcc\xcf\x2d\x85\x79\xa8\x6d\x52\x45\x8e\
\x39\xa2\x40\x34\x75\xbd\xd1\x7d\xe0\x77\xc7\x23\x92\x2b\x60\xc1\
\xc9\x7d\xfa\xe2\x73\x64\x68\xdd\x78\x78\xef\x27\xe1\x15\x9c\x73\
\xe8\xba\x8e\xcf\x56\x8d\x07\x9b\x2e\x02\x02\x59\x00\x6c\xae\x40\
\x5c\x5e\x64\x08\x1e\x9e\x06\x5e\x6a\x84\xc2\x45\xc3\x99\xa7\xa5\
\xd5\x84\x25\x53\x66\xe9\xf8\xf8\x5b\x03\xee\xe8\x2a\xbe\x03\xb6\
\x2a\x04\x73\xe7\xf2\xbe\x99\x63\x71\x89\x65\x0b\x03\x32\x80\xb1\
\x36\xf9\x4a\x34\x8e\x7d\xb1\x8c\xb7\x3c\xc9\x30\x82\x28\x79\x70\
\x21\x1f\x0f\x6a\x52\x62\x8c\x89\xc1\x4a\x09\x20\x07\x63\x02\x00\
\x07\x20\x80\x83\x9e\x9a\x48\xba\x02\xd2\x6c\x43\xa8\x45\xa8\x83\
\x05\xd1\x19\xce\x36\xf0\x41\x06\x30\x01\x7e\x50\xdf\x3d\x3b\xcc\
\x53\xe0\x7c\x79\xef\x23\xb9\xf2\x91\x10\x70\xbe\x2c\xec\x64\x9a\
\xf8\x1c\xa9\xd2\xf7\x30\x07\xdd\x21\x2c\x91\xdb\xa5\x74\x4a\x0a\
\xfb\x1c\x61\x29\xa9\x59\x80\x94\xfe\x48\xd8\xf4\x00\x51\xc8\x5c\
\x29\x14\x43\x7e\x5d\xbd\xe8\xbd\x0e\x56\xaa\x97\xe9\xd1\xbe\x59\
\xa2\x96\xc9\xdf\xb2\x05\x00\x43\xac\x14\x9a\xcc\x2a\x4d\x34\xad\
\x29\x94\x9d\x4b\x95\xa3\x7d\x49\xac\x59\x69\xae\x57\xb0\xbe\x7e\
\x45\x79\x24\x72\x05\x28\x82\x25\x8d\x4b\xee\x7b\x60\x8c\x61\xf9\
\x3b\x0c\x70\x4d\x8b\xa7\xe7\x9f\x38\x77\x03\x02\x19\x1c\x9e\x8e\
\xf8\xf9\x5f\xff\xe0\xdc\x77\xe8\x86\x1e\xc6\x99\x64\x72\xb0\xd6\
\x20\xc0\x21\xc0\xc3\x93\x47\x8b\x16\xce\x3a\x78\x3f\x30\xbf\x79\
\xb1\x70\x07\x87\xe3\x8f\x23\xda\xb7\x23\x6c\x6b\x61\x0c\xc1\xc4\
\x85\x73\x03\x05\xc0\x10\xac\x3d\xc0\x9a\x06\x10\xd3\x8b\xca\xfc\
\x58\x98\xd2\x59\xd9\xd4\x21\x8e\x4d\x52\xd6\xa1\x91\x98\x62\x2e\
\x63\xf3\xe4\x1d\x45\xc9\xac\x74\xef\x11\xe7\xa6\xeb\x6d\x39\xa5\
\x90\xce\xa4\x73\xc3\xfb\x47\xd3\x93\x62\x7f\x07\xcc\x4a\x22\x73\
\x26\xe1\xb9\xce\x79\xed\xf9\xe6\xc7\x46\x25\x2a\x9d\x3d\x31\x25\
\x39\x95\x86\xc4\xa8\x0a\x14\x40\x81\x60\x41\x30\x16\x70\xc6\x02\
\xc1\xc0\x9b\x23\x28\x0c\xc9\x5c\xe7\x6c\x1b\xaf\x1d\x63\x5b\xa5\
\xef\xaa\xe1\x34\x01\x1e\x1e\x20\x9e\xa1\x68\xc1\xbd\x28\xcf\x5a\
\x8c\xfe\x3d\x44\xd1\xe9\x3d\x80\x7c\x1f\xd5\x2d\x00\xc6\xc0\x44\
\xc5\xd8\x84\x06\xbe\xeb\xd1\x0d\x1c\x59\x5e\x3e\x9e\x08\xfd\x10\
\xd0\x77\x3e\xfa\x8c\x45\x67\x6f\xb2\x49\xbd\x32\x86\x60\x88\x10\
\x7c\x9f\x9e\x07\xaf\x9b\x78\xd9\x3e\x94\xca\x77\xf6\x9d\x21\x83\
\xe0\x45\x09\x9c\x3e\x23\xf9\x3b\xcd\x00\x8c\xc1\x55\xe5\xbe\x28\
\x3d\x0b\x00\xe6\xd2\xcf\x6a\xfa\xec\x2e\x1d\xe5\xb5\xdb\x02\xc7\
\x05\x1b\xef\xa1\xf7\xc3\x85\xc2\xf4\xfc\xfc\xcc\xbf\xf3\xd3\x85\
\xe9\x41\x06\xda\x22\xeb\x29\x00\x9e\x07\x8a\x66\x98\x86\x9e\xd1\
\x03\xd0\xb6\x6d\x41\x06\x70\x86\xef\x2d\x04\x62\xea\x1a\x22\xe1\
\x8a\x83\x40\x8e\x35\xa6\x0a\x27\x2b\x6b\x02\x60\x4d\x5a\x3c\x09\
\xd3\x70\xb8\xf3\xd8\x42\x7e\xf7\xc0\x1a\xe1\x0b\x0b\x41\x72\xf7\
\x42\x32\xef\xa5\xe6\xdf\xa4\xfd\x90\x63\x0b\xfe\x84\x00\x36\x05\
\x5f\xde\x64\xee\x5a\x3b\xe5\x62\xe0\x26\xdb\x31\x7f\x3e\x4e\x30\
\xf1\x51\x45\xce\x7f\x60\x66\x54\xe1\xc9\x65\xfc\x72\xb9\xef\x75\
\xbf\xd7\xd6\xa3\x52\xbb\xbd\x47\x3f\x3b\x37\xf0\x93\xef\x36\xeb\
\x69\x46\x0b\xc2\x65\xde\x0a\x07\x10\x13\x59\x24\xae\xb3\x71\xb0\
\x2e\x33\x3b\x6d\x64\xf4\x52\x37\xf2\x39\x9d\x78\xb4\xe8\x7d\x8f\
\x10\x4c\x74\xc6\xb5\x18\x86\x1e\x3e\xf4\x38\x98\x23\x8c\x71\xe9\
\x05\x3b\x9e\x0e\xf8\x71\xfe\x89\xa7\xfe\x84\xae\x7b\xc2\x5b\xd3\
\xe0\x70\x78\x02\x11\xa1\x71\x4d\x9a\x29\x05\xb0\x53\x2a\x8c\xe1\
\xc6\x64\x46\xbd\x1a\x0b\x24\xbf\x61\x93\x3a\x8e\x8a\x8a\x1c\x6b\
\xa6\x44\x5d\xb7\x4a\xe6\x6f\x00\x40\x00\x8c\x55\x3e\x84\xcc\x8e\
\x60\x10\x10\x8c\x4b\x69\x8d\x66\x70\x51\x77\x0b\x21\x4c\x34\x1f\
\x51\xd7\x9d\x1e\x94\x7d\xd2\xa1\x37\x8a\xf0\x05\x8e\xbc\x6e\x0c\
\x0c\x1c\x80\x3e\xa9\x56\x43\x0c\xcf\x20\x9f\x10\x74\x83\xce\x0a\
\x99\x31\x26\x35\x20\x6c\xa4\x94\xf0\x07\xa2\x9c\x4d\x1b\x44\xdd\
\x90\xe9\x18\x54\xfa\x98\x6c\x25\xaa\x7d\xfe\x5b\x7d\x8f\x45\xb3\
\x6c\x66\xa2\x35\xb8\x6c\x07\xb4\x5a\x55\x32\x33\xae\xa9\x62\xfa\
\x03\xf0\xa0\x53\x9e\xb1\x3e\xa6\x67\x2a\x6a\x93\xa5\x56\xa4\x92\
\x0a\x99\xa9\x5a\xe2\x0c\x9f\x08\x3b\x58\x86\x72\xc6\xc0\xcb\x6f\
\x0b\x84\x95\x9f\x0f\xd8\x17\x07\x48\x53\x2f\xb8\xae\xe1\x5b\xa8\
\x13\x15\x15\xb7\xe0\x23\x48\xe1\xd6\x34\xae\x20\x58\x63\x04\x76\
\x71\xe8\x94\xa5\x6e\x9e\x9e\x9e\x70\x3e\x9f\xf1\xf6\xf6\x9a\xd6\
\x30\x23\x62\x95\x48\x66\xde\x04\xf2\x20\x0b\xb8\xe0\xd8\x64\xd1\
\x79\x34\xcd\x01\xc7\xf6\x17\x5a\xd7\xa0\x75\x07\x18\x63\x70\x70\
\x07\x6e\x80\x60\xe0\xac\x83\xb3\x8e\x4d\x31\x32\xb2\x64\xba\x2e\
\xb7\xa4\x73\xa8\x6f\x55\x1d\x8b\xca\x55\x6d\x7f\x2a\x14\xf2\xd1\
\x4d\xa9\xa3\x9f\x3b\xa7\x94\x8e\xf6\x87\xd0\x1f\x6b\x9a\x0b\x1f\
\x1e\x51\xad\x28\x99\xc5\xb3\x74\x8b\x75\x75\xba\xd8\x73\xba\xb6\
\x31\x70\x46\x7c\x89\x24\x00\x27\x2f\x0e\x6d\x4d\x03\x63\x06\x98\
\xb8\xf0\x33\x05\x35\xb3\x30\x4d\x30\x19\x2f\xa7\x49\x83\x95\x2d\
\x4f\x24\x84\xf8\x7a\x95\x96\xe8\x99\x33\x55\xe4\x84\x07\x40\xb6\
\xc6\xe2\x7c\x8c\xa8\xb9\xf2\xe6\xfd\x00\x16\xc6\x4b\x39\xc9\xd2\
\x0a\x56\xd1\x5c\x58\x20\x62\xc6\x18\x74\x5d\x37\x31\xed\xe5\xce\
\xeb\x52\x66\x79\xa4\x78\x69\x27\xc5\x84\x28\x64\x4a\x87\x79\x48\
\xb3\xb1\xad\x83\xc7\x65\x10\x67\x26\xc7\x53\xe4\x7f\x4f\x4c\xca\
\xb5\x81\xab\xa8\xb8\xc0\x16\x33\xea\x1e\xfe\x5b\x73\x69\x5c\x41\
\xb0\x30\x69\xa8\x4a\x4a\x96\xc8\xe1\x63\x67\x15\xcd\x27\x21\xc0\
\x04\x83\xe0\x03\x60\x11\x47\xd7\xec\xf3\xc0\x53\xc6\x4f\xe8\xba\
\x0e\xc7\xe3\x31\x12\x34\x42\xdb\xb4\x3c\x03\xca\x79\x18\x0c\x6a\
\x29\x0c\x9b\x46\x6b\x73\x32\x62\xb9\x90\xb4\xb2\xf5\x58\x76\xda\
\x8a\xfd\xb1\x26\x31\xcf\xf9\xfe\xdc\x62\x0e\x9e\x53\xbc\xf8\xfb\
\xc8\x04\xc4\xf4\xc5\x4a\x06\xd7\x47\x6b\x85\x10\xa9\x74\x2e\x88\
\xdd\xec\x95\xb9\x46\x27\xf2\x30\xcd\x8f\x31\x6c\xd2\x93\x8f\x36\
\xab\x8d\x27\x23\xbd\x16\xd3\x46\x42\x6f\x35\x49\x5a\x2e\xb7\x52\
\xf9\xad\xbd\xa7\x4b\xc7\x73\x12\x26\x0a\x16\x48\xfd\xbd\x60\x5a\
\xd0\xc7\xf2\x08\xf0\xf9\x79\xb9\xd9\x58\x87\x7e\xd0\xe7\xe9\xa5\
\x73\xf2\x73\xb5\x89\x32\xbf\x7f\x9d\x4e\x9a\x4d\x69\x09\x4d\x34\
\xbb\xea\x7b\x90\x76\x76\xa9\x0e\xce\xdd\x4b\x09\xf7\xf2\x4d\x79\
\x14\x1f\x98\x8f\x52\x24\x1e\x15\x5b\xeb\xc1\x5a\x1a\x7b\xe4\xe3\
\x1e\xd8\x25\xaf\xaa\x1d\x79\x47\x22\x8b\x33\x4d\x37\x13\x2c\xee\
\x0c\x5c\x22\x54\x44\x84\xe3\xe1\x09\x4f\x4f\x3d\x9e\x9f\x35\x41\
\x1a\xd0\x75\x5d\x32\x7d\xf0\x87\x80\x38\x83\xc9\xc6\x59\x57\xd6\
\x04\x74\xe7\x33\x7e\xff\xfe\x03\xc0\xa0\x6d\x0e\x68\x5d\x83\xc6\
\x70\xfa\x1c\x08\x50\x02\x97\xb2\xc9\x83\x09\x5c\x1b\x4d\xe7\x53\
\xc5\xaa\xd4\x88\xa5\x12\x48\xbd\x88\x7c\x3e\xcf\x8b\x53\x71\x3d\
\xb6\x34\x34\x5b\x08\x58\x4e\x16\xe6\xd4\x96\x39\x65\x8b\xa2\x39\
\x47\xab\x28\xb2\xdf\xfb\x58\xaf\xc3\x74\xe6\x2c\x11\xfb\x8d\x8c\
\xd7\x22\x18\x33\x7e\xe7\xc4\xa7\xd7\x31\x71\x36\x23\xff\x46\x66\
\x1a\x06\x58\xeb\x61\xad\x83\x55\x44\x4b\xe7\x7b\x54\xcf\x38\x5d\
\x99\x45\x68\xad\x4d\x33\x08\xf9\x1a\x73\xe1\x52\xa6\xe5\xa2\x15\
\xa3\xfc\xbc\x74\x5d\xb0\x92\x56\x3c\x36\x63\xf2\xbb\x28\x53\x03\
\x90\xb9\x34\x05\x2e\xa9\x53\xf9\xb1\xd2\xf7\x5c\x39\xd3\x2a\x95\
\x0e\xc1\x30\x0c\x43\x3a\xd6\xb6\x6d\xf2\xcd\xd3\x0a\x94\xa4\x9d\
\xcf\x18\x14\xe5\x50\x14\x2c\x6b\x2d\x8e\xae\x9d\x0c\x5a\x25\xad\
\x5c\x81\x2b\x95\x99\x56\x4e\xd7\xb0\x76\xce\x23\x11\x8a\x47\xe9\
\xec\x77\x29\xb3\x07\x21\x1d\x7f\xd3\x54\x36\xc1\x06\x1e\xb8\x77\
\x3e\x4a\xdf\xb5\xea\x9b\x5f\x6f\x2f\x25\xeb\x2a\x1f\x2c\x6b\x1d\
\x9c\x53\x04\xeb\xf8\xc4\x8b\xc4\x46\x82\xf5\xf4\xf4\x8c\xbe\x1f\
\x70\x3a\xbd\xc5\xc6\x7a\x1c\xf5\x7a\xef\x41\x43\x9c\x91\x64\xd9\
\xac\xd1\x77\x3d\xfe\xf8\x17\x78\x1f\x70\x8c\x04\xcb\xc0\x26\x82\
\xd5\x38\x17\x47\xf8\xec\xd3\xc2\x0d\x8d\x03\x94\x43\x3b\x37\x38\
\x73\x3e\x21\x73\x4a\x16\x50\x6d\x86\x5f\x1b\xd7\x10\xa8\xfc\xbb\
\xfc\x7e\x8e\xb4\xe7\xfb\x17\xcd\x87\x59\x27\x29\x1d\xa2\xb5\xec\
\xa3\x18\x82\x4d\x8b\x4a\x27\x15\x45\x7d\x07\x00\xeb\x96\x66\xd7\
\xf1\xa0\x41\xde\x03\x6b\x62\x0d\x37\x01\xd6\x78\x58\xd3\xc2\xda\
\xe1\xe2\xde\x83\x10\xac\x50\x5e\x1d\xc1\xea\xef\x89\x97\x51\x52\
\xb2\xe5\xfe\x4a\x2a\xd3\x9c\xa2\xc4\xe5\x71\x51\x4c\x17\xe5\x57\
\xba\xd7\xc9\xb5\x32\x1f\xac\xbc\x6c\xf3\xb4\xe6\xd4\xb5\xb9\xfb\
\xc8\x55\x28\xbd\xd5\xe1\x22\xe4\x7c\xbd\x48\xbd\xa8\x5b\x92\x4e\
\x32\xf7\x99\xe9\x8c\x45\x09\x58\x6a\x8c\x01\xb5\x9e\xdb\x3b\x15\
\xee\xa1\xb4\x72\xc6\x1a\xd9\x5a\xc2\x23\x91\xa7\x35\x7c\x16\x72\
\xf5\xd5\xf0\x55\xef\x77\x96\x68\x81\x4d\xeb\xef\x21\x57\x14\xc5\
\x9b\xb9\x34\xae\xf2\xc1\x92\x91\x5a\xdb\x1e\x00\x8c\xa3\xb1\xa7\
\xf3\x33\xba\x73\x8f\x7f\xfe\xf9\x07\xc3\x30\xe0\xed\xed\x0d\xc3\
\xd0\xa7\x4e\xc2\x7b\x9e\x11\x48\x03\x38\x2a\xb4\x01\x0c\xf1\x2c\
\x1a\x67\x3d\xc8\x07\xfc\xb7\x6b\x63\x0c\x1f\x83\xc3\xe1\x00\xc4\
\x4e\x88\x40\x38\x86\xc0\x85\x61\x2d\x60\x2c\x6c\x20\x58\x3b\x2e\
\x55\x71\xd9\xce\xcc\x8c\xf8\xf5\x74\x0e\xb2\xa8\x24\xeb\xfb\x62\
\x8e\x5c\xdd\x22\xb3\xcf\x75\xec\xf1\x4b\xda\xa7\x9d\xa5\x39\x8c\
\x82\x8b\x7e\x50\x99\x13\x35\x69\x93\x15\xc0\xd1\x1f\x3c\xc6\x24\
\x63\x30\x50\x15\x13\x4e\x55\xf2\xa8\x56\x19\x58\xdb\xc0\x9a\x26\
\x6e\x1d\x8c\x51\x0b\xb2\x0b\x89\x89\xd3\xf4\x72\x92\x24\xf1\xb4\
\xf8\xda\x42\x64\xa6\xaa\xcc\x1a\xb9\xd2\xe5\x3c\x7e\x8f\xb1\xc3\
\x16\x50\x5a\xe0\x59\xa7\xaf\x15\xac\x2d\xb8\x1c\x78\x95\x09\xd6\
\x92\x8f\x96\xdc\xb7\x26\x58\x00\x92\xb2\x25\x5b\x4d\xb2\xa4\xcd\
\xd4\xe4\x48\x87\x7d\x48\xf5\xce\x07\x8e\xcb\x35\x88\xcb\x45\x03\
\x9e\x54\x24\xe4\x6a\xba\x34\x8f\xb5\xe3\x33\x96\x5b\xda\x26\xa4\
\x7c\xbc\x82\xf5\x5e\x33\x95\xe0\x51\x08\xd2\xc3\x28\x58\x3b\xa8\
\x3e\x7b\x28\x58\x5b\x9e\xef\x7a\x1a\xab\x49\x7c\x48\x3e\xf2\x76\
\x8a\xc3\xec\xac\x9c\xf3\xce\xeb\x5c\xe7\xe4\x9e\x46\x59\x2d\x84\
\x60\x0d\xc3\x80\xe3\xe1\x09\xc7\x63\x87\xff\xfa\xaf\xff\x42\xdf\
\xf7\x78\x7d\x7d\x45\xdf\x3b\xd5\x99\xc4\x08\xd6\x86\x10\x06\x36\
\x61\x0c\xbd\xc7\xe1\x70\xc0\xb1\x69\xd1\x13\xf0\xfb\xf7\x1f\xf4\
\xfd\x00\xe7\x1a\x1c\x8f\x47\xbe\x39\x6b\x11\x88\xe0\xa3\x27\xae\
\x75\x0e\x06\x0e\x2e\x86\x1b\xe2\x99\x53\x21\x6b\xe4\x4b\x26\x42\
\x14\x2a\x28\x95\x76\x56\x7c\x33\xe8\xba\x33\x67\x06\x2c\x99\xa2\
\x64\x7f\x91\x54\x29\x04\x3f\xed\x90\xe5\x1c\x26\x55\x21\x06\xe0\
\x9d\x3a\xc8\x0b\xc1\x62\xbf\x1e\x03\x0b\x0f\x59\x86\x67\xda\x00\
\x4c\xaf\xc5\x7f\xcb\xc0\xc1\xc2\x80\xcd\x82\x1c\xc3\xae\x41\x43\
\x61\x0c\x7c\x99\x1c\xb2\x4d\x3c\xcf\x4c\x7c\x94\x90\xf2\xc9\xe6\
\x46\x00\xb0\x76\x3a\xa3\xae\xa4\x7c\xcd\xa9\x45\xf9\x79\x73\xcf\
\x60\x3b\xf6\x1f\x6d\xe7\xe4\x49\xa0\xd5\x27\x21\x39\xb2\x5f\x96\
\xcd\xc9\x09\x96\x98\x01\xb5\x63\xbc\x98\x0e\x81\x69\x59\x85\x41\
\x4c\x86\x9e\x27\x00\xc5\xc8\xff\xe3\xd2\x64\x1e\x81\xc2\xa8\x64\
\x85\xa9\x32\x06\xcc\x07\x6f\xad\xa8\xa8\x98\x57\xb1\xae\x3d\xe7\
\xda\xeb\x14\x09\x56\xa9\x71\x94\x7f\x8d\x19\x9d\x75\x9b\xa6\x45\
\xd3\xf0\x92\x39\xcf\xcf\xcf\x08\xc1\xa3\xfb\xd9\xe3\xed\xed\x2d\
\x46\x77\x97\x80\x86\x3c\x63\x8a\x3c\x01\x14\xe3\xa0\x10\xd0\x53\
\x0f\x13\xa4\x2d\x3f\xc1\x7b\x8f\xff\xf1\x3f\xfe\xc7\xff\xcf\xde\
\x9b\x36\x59\x72\x9c\xf7\xbd\xbf\xac\xaa\x53\x67\xed\xbd\xa7\x7b\
\xf6\x05\x0b\x01\x90\xc4\x16\x10\x41\x98\xe2\x66\x9b\xa6\x25\x85\
\x6d\xe9\xd2\xf7\x23\xf8\x85\x23\xec\x97\xfa\x00\x8a\xd0\x27\x50\
\xe8\xa5\xe2\xde\x70\xf8\x95\xc3\xb6\x2c\x4b\xe1\x2b\x09\xb4\x42\
\xf7\x8a\xa4\x00\x81\x80\xb0\x11\x20\x30\x18\xcc\xda\x33\x3d\x3d\
\xbd\x77\x9f\xfd\x54\x55\xe6\x7d\x91\x95\x79\xf2\x54\xd7\x59\xba\
\xa7\x67\x30\x20\xe7\x01\xce\xf4\x39\xb5\x64\x65\x65\x55\x66\xfe\
\xf3\xff\x6c\x94\x4a\xa5\xd4\xfb\x06\x5d\x86\x4c\x30\xb1\x3e\x84\
\xf2\xf0\xbd\xc4\x19\xac\xb4\xda\x70\x50\x2d\x28\xf4\xff\x87\x58\
\xe5\x66\x1b\x27\xdb\x0e\x5f\x94\x1c\x95\x55\xf9\x55\x96\x3c\x15\
\xd0\xfd\xac\x56\x27\x69\xdf\x71\x40\x6a\xa8\x9a\x90\xbe\x3d\x8e\
\x7b\xac\x56\x7d\x9b\x49\xb3\x9f\x2e\x4a\x4a\x89\x87\xcb\xe2\x08\
\x1d\x8f\x4a\x6a\x5b\x2c\xcd\xa2\x68\xb5\xbb\xcb\x68\xf5\xeb\x99\
\x4e\xfe\x0c\xaa\xf5\xf3\x54\x4e\xbe\xef\xa3\xa4\x06\x63\xd9\x3a\
\xf6\xc1\x46\xdf\x06\xcc\x5d\x30\xb9\xf7\x9c\x05\x90\x79\x8c\xde\
\x28\xc9\x63\xff\xdc\xb2\xb3\xf7\xa8\x94\x02\xd1\xdf\x9f\xad\x47\
\x1e\x63\x35\xf0\x4c\x72\x54\x6d\x79\xdb\xb2\x80\xd1\x65\xee\xdc\
\xf3\xfa\x4c\x7d\x1f\x54\x19\xf5\x9f\x71\x00\x72\xc1\x95\x7b\x2e\
\x68\x62\xdd\x6d\x5b\xd7\xf3\xd0\xd8\x7f\x19\xb5\xa2\x0b\xd6\x5c\
\x76\xcc\x5c\x3b\xaf\xcd\xb2\xfd\x23\xef\x5d\x3e\xea\x6a\x3d\x6f\
\xff\x71\x8c\x57\xe3\xca\x78\x58\xea\xac\x87\x55\x8f\xb1\xe5\xe4\
\xd4\xe3\xb0\xd7\x1e\x36\x86\xdd\x2f\x83\x9f\x57\xa7\x51\x0c\x74\
\xde\xef\xfb\x99\x7b\x87\x95\x91\x57\xde\xc0\x3d\xba\x0a\xad\x43\
\x5e\xdf\x96\x37\x64\xa1\x67\x55\x84\xc3\x3a\x98\xbb\x32\x32\x2b\
\xda\x24\xf5\x7c\x12\xc2\xc7\xf3\x48\xbd\x08\x0b\x84\xa1\x66\x9c\
\xa2\x28\xa2\x52\xa9\x52\xab\xd5\xec\x2a\x2e\x49\xcc\xc4\xa1\x81\
\x92\x72\xb4\x14\x71\x14\xa3\xa4\x49\xef\xa1\xeb\xb0\xbb\xbb\x4b\
\x18\x86\xa9\xf1\x6f\x42\x94\x44\xc4\x2a\x01\x0f\x9d\x68\x56\x2a\
\x02\xbf\x40\x21\x28\xe8\x41\xd6\x2b\xe0\x29\x10\x62\x70\x22\x13\
\xc3\xa2\xbb\x0d\x44\xd2\xce\x6f\xdc\x51\x0d\x3c\x6c\xa0\x7a\x90\
\x72\x94\xce\xf7\xeb\x24\xc7\x09\x8c\xc7\x01\xa9\x61\xc7\x0c\x9d\
\xcc\x73\x98\x05\x7d\xac\xee\x4b\xba\x7f\x79\x03\xc6\xcf\xba\x9f\
\xf5\x55\x6a\x2a\x91\xa9\x1d\x94\x01\x1e\x37\xe5\x8c\x4b\x00\x00\
\x20\x00\x49\x44\x41\x54\x12\x99\x28\x9d\x86\x47\xe5\x95\xed\xaa\
\xf3\xfa\xa9\x5a\x8c\xad\x96\xe7\x79\xf8\x9e\x61\xa3\x55\x0a\xb2\
\x0e\x06\x19\xd6\xdf\x65\x1a\xaa\x41\x58\x00\xe0\x82\x8f\xac\x11\
\xf7\x30\x15\x9b\xf9\x3b\x49\x38\x81\x71\x2a\x42\x84\xea\xfb\x03\
\x67\x98\xc5\x51\xcc\x99\xbb\x7d\x12\x80\x95\x2d\x33\xcf\xfe\xca\
\x8e\x8f\xe9\x7e\x57\x8d\x68\xb6\x29\xd5\xf7\x3c\x74\xed\xb5\x4c\
\x39\xbe\x70\x55\xc7\xf9\x00\xcb\x30\x65\x2e\xc0\x32\x5e\xdc\x6e\
\x92\xea\x2c\x90\x9b\x44\xcc\xb5\xc7\xb1\x60\x93\x4e\xe8\x0f\x43\
\x15\x79\x1c\x32\x49\x3d\x1e\xc6\x18\x7f\xd8\xf6\xc8\x03\x14\x93\
\x2e\x12\x87\x8d\x95\x79\x0b\x99\xa3\xd6\x35\xaf\x0f\x0e\x63\x87\
\x86\x7d\x3f\x0c\xd8\x3f\x0c\xf3\x34\x58\xae\x4e\x11\x36\xc9\x35\
\x86\x96\x97\xa3\x66\x74\xe5\x50\x5e\x84\x66\xd0\xd6\x9f\x7e\xcc\
\x17\xdf\x0f\x06\x56\x54\xd9\xd0\x0d\x7a\x30\xd1\xb1\x79\x4c\x70\
\x45\x57\x8c\xc1\x27\x68\xd0\x16\xc7\x31\x9d\x4e\x87\x56\xab\x45\
\x58\x2a\x52\x2c\x95\x28\x97\xcb\xf4\xa2\x9e\x06\x56\xa9\x7b\xbb\
\x94\x3e\x4a\xf9\x69\xbe\x35\x37\x73\xfd\xb0\x06\x12\x7d\x8d\xe1\
\xaf\x39\x28\x79\x2c\xe3\xe5\x61\x4c\x04\x42\x68\x06\xd7\xf4\xa5\
\xac\x9a\xca\xad\x42\x7f\x9b\x70\xd6\x07\xc3\x57\x84\xee\xc7\x9c\
\x6f\x3f\x46\x45\x28\x04\xca\x1b\x6d\x47\xd5\xff\xad\x72\xaf\x97\
\x1d\xb8\xf3\x56\xc2\x79\xfd\x6d\x14\x38\x1a\x35\xd8\x8a\x09\x3d\
\x81\x27\x1d\xb0\x27\x59\xf9\x8e\x3b\x37\xdb\xee\x46\x4c\x0a\x9e\
\x6c\x5d\x0c\xa0\xd1\xcf\xa3\xbf\xdd\x7d\xf6\xd9\xa0\xad\x6e\x99\
\x79\x13\xa5\xf9\x64\xf3\xd5\x0d\xab\x73\xb6\xbe\x8f\x0a\xf0\x79\
\x94\xe4\xe1\x8c\x01\xf7\xc7\xc0\x3f\x96\x47\x43\xf2\x9e\xe1\x81\
\x64\xcf\xc3\x44\xaf\x3e\xb1\x2b\x2b\x4d\x7f\x17\xed\xca\x5b\x08\
\x61\xc3\x33\xc4\x71\x4c\x58\xe8\xd8\xc9\xc1\x0d\x6e\x28\x94\x06\
\x39\x66\xf0\x90\x32\x21\x92\x7d\x7a\xbd\x54\x0a\x89\xa2\x2e\xbd\
\xa8\x4b\xbb\xd7\xa1\xdd\xeb\x10\x27\x11\x8a\x84\x38\x89\x49\xe2\
\x98\x52\x58\x24\x2e\x94\x20\x35\x98\x57\x4a\xe2\xfb\xa9\x7d\x89\
\xd0\x36\x28\x3a\xcd\x46\x36\x30\xe3\x63\xc3\xf6\xc7\xf2\x70\x65\
\xfc\x04\x3d\xd8\xa7\x3c\xcf\x43\x48\xe5\xa8\x0c\x05\x4a\x2a\x94\
\x48\x50\x32\x5d\x2d\x09\x9d\xf4\xc6\x18\xa0\x2b\x35\x08\xc4\x00\
\x14\x12\xa9\x12\xa4\x8c\x31\xaa\x48\x57\x3d\x18\x04\x01\x4a\x42\
\xe2\x69\x06\xcb\xa8\xb8\x0c\xd0\x91\x16\x9c\xe5\xab\xec\xb2\xea\
\xb1\x2c\x38\xc8\xde\xbf\x05\x62\x23\x62\x58\xf5\xdb\x64\x78\xd8\
\x15\xcd\x60\xa5\x99\x1d\x46\xb6\xeb\x41\x40\x33\xea\x9a\xd9\x6b\
\x8f\x53\x97\x64\x99\x4b\x97\x01\x72\xdb\x23\x8a\xa2\x01\xd5\xa1\
\x59\x7c\xba\xea\xbe\x6c\x32\x68\x99\x7a\x4c\x7b\xca\x83\xa4\xdf\
\xd6\xae\x4a\xd0\x0d\xfa\xec\xfb\x3e\xc5\x42\x68\xdf\x99\xac\xc7\
\xe1\x24\xf6\x59\x86\x3d\x1b\x25\xbf\x6e\x8b\xd2\x2c\x58\xce\x93\
\x2f\x4a\x8b\x71\x14\x40\x36\x8c\xf1\x39\x6e\x80\x37\xac\xaf\x8d\
\xba\x87\xa3\x5e\xff\x38\xca\x38\x0e\x19\x56\x8f\x03\x0c\x56\x76\
\x60\xcb\xfb\xdd\x67\xae\x7c\xc2\xb0\x64\xa9\xf1\x28\x2a\x03\xda\
\xb3\x26\x0c\x43\x48\x23\x3f\x47\x51\x64\x07\x1a\xb3\x9a\xeb\xbf\
\xbc\xfd\xc1\x5d\x0f\x44\xfa\x1a\xb1\x4c\xfa\x1e\x87\x29\xf1\x14\
\x45\x31\x2a\x8e\x89\xca\x65\xe2\x52\x17\xe1\x25\x80\x44\xca\x90\
\x20\x08\xd3\x38\x59\x81\x65\xcd\x74\x95\x85\xf3\x71\x6d\x4d\x1e\
\x27\x7c\x1e\x94\x83\xea\xa6\xac\xfc\xba\x0d\xb0\x93\x4e\x4c\xa3\
\x64\xb2\x08\xdb\xfa\x18\xa3\xde\xf1\x14\x03\x0b\x17\x0d\x72\x02\
\x24\x86\xb9\x48\xd3\xe1\xd8\x24\xc3\xea\x40\x07\xb7\x1f\xfa\x61\
\x01\x06\x26\xf9\x14\x60\x79\x42\x33\x62\xee\x40\x2b\xa5\x4c\xed\
\xbe\xcc\x35\xdc\x72\x07\x73\xfc\x65\x01\xd6\xb0\xe0\x98\x03\x83\
\xad\x53\xde\x30\x86\x25\x0b\xe8\xdc\x7d\x42\x1d\xdc\x96\xbd\x86\
\x1b\xf8\xd3\x2d\x6b\x52\x70\x05\x7d\x95\x69\x56\x85\x98\x57\x2f\
\x73\x7e\x56\x8d\x28\x44\xdf\x38\x3e\x8e\x63\xfb\x71\xe3\x60\x65\
\xd5\x7e\xe6\x9a\x26\x2e\x99\xb9\x8f\xac\x47\xa2\x79\x47\x7c\xdf\
\x47\x28\xec\xf9\xae\x31\xbe\x1b\x93\x6b\x1c\xb3\x78\x18\xb5\xcc\
\xfd\xc8\xc3\x2a\xe3\xb8\xd5\x5d\x47\x2e\x63\xec\x11\x13\x5c\x87\
\xd1\x60\xef\xb0\xf5\xc8\xce\xef\x66\xdb\xfd\xb6\xd9\x64\xfb\x8f\
\x07\x68\x0d\x3b\x6f\xe2\x32\xf2\x56\xa6\x23\xae\x91\xbb\x1f\x06\
\x54\x84\xd9\x7a\x0c\x00\xac\x71\xba\x53\x94\x66\x85\x0c\x45\xef\
\x79\xca\x26\x31\x15\x42\x50\x2c\x96\x01\xad\xe6\x30\xe9\x74\xe2\
\x38\xa1\xd7\x8d\x89\x23\x89\x4a\xa0\xab\xba\x7a\xd0\x4e\x40\xaa\
\xd8\xc6\x91\x90\xe9\xea\x59\x0a\xbd\x02\x2b\x08\x85\x17\x0b\x9a\
\x2d\x85\x44\x12\xcb\x98\x5e\xaf\x8d\x4a\x22\xa2\xa9\x29\x92\xb8\
\x8a\xe7\xa5\x2e\xec\x36\xb8\xa2\x66\xa9\xf4\x84\xe2\x63\x62\x65\
\xe9\x69\xce\x67\x20\xd0\x22\xf0\x18\x64\x3d\x96\x2f\x5a\xf4\x02\
\x22\x03\xe4\x54\x7f\x21\x20\xa5\x44\x2a\x33\xd1\x4b\xfb\x17\xf4\
\xe2\x42\x0f\x8a\x49\xba\x0d\x94\x4a\xd0\x6f\xb7\x44\x87\x76\x48\
\x50\x24\xe8\x28\xee\x6a\x60\xe2\x0d\x02\x48\x44\xdf\x06\xcb\x05\
\x27\x32\x05\x79\x42\xb8\x00\xae\xcf\x08\x67\xd5\x60\xa6\xbe\xfd\
\xfb\x1a\x04\x5c\x16\x94\xa8\xd1\xc0\x2a\x5b\x76\xee\x6f\xf2\xc7\
\xc5\x61\x75\xca\x03\x15\xc3\xae\x31\xec\xd8\x2c\x13\x64\x8e\xcf\
\x7a\x06\x66\xcb\x74\x0d\xe3\xcd\xc7\x05\x5c\x7a\xdc\x2c\x5a\xf5\
\xb0\x52\x6a\x80\xa5\x72\xeb\x61\xca\x74\xf7\x99\x32\x7b\xa2\x37\
\xe0\xcd\xe8\x02\x32\xd7\xe6\x2b\x5b\x9e\xdb\x46\x8f\xd5\x54\x8f\
\xae\x8c\xb2\x4b\x3c\x8c\x64\x41\xd4\xb0\xf7\xfe\x7e\xaf\x61\xc4\
\x7d\x6f\x87\xb1\xd5\x79\xdf\x8f\x7a\xbd\x47\x8d\xc5\x3a\xa0\x22\
\x1c\x46\xcd\xf7\x93\x7f\xf5\x1f\x88\x27\xfa\xab\x2e\x33\x50\xe8\
\x49\x21\xb6\x2b\x29\xc3\x5a\x41\x1f\x41\xc7\x71\x9c\xae\xbe\x04\
\x52\xe9\x55\x7a\xa2\x52\x4f\xaa\xc4\x24\x43\xd5\x93\x4f\x9c\x24\
\x44\x71\x4c\x1c\x47\x44\xbd\x2e\x48\x49\xaf\xdb\xa1\x37\xd5\x02\
\xa1\x27\x93\x72\x39\xc9\x0c\xf2\x4a\x03\x41\xe1\x3b\x31\x80\x5c\
\xf5\xe0\xe3\x81\x24\x2b\x6a\xd8\xac\xe5\xc8\xaf\x1b\x83\x35\x89\
\xca\x64\x6c\x9b\x1c\x92\x15\x74\x27\x50\xdd\xc7\x02\x92\x44\xb3\
\xbe\x02\xad\x0e\x47\xc5\xda\x57\x43\x08\x24\x12\xcf\x4b\xd7\x51\
\x4a\xda\x05\x86\x5b\x37\x0d\xb4\x32\xb6\x58\x9e\xa7\xcf\x53\xa0\
\x44\x3f\x60\x26\x68\xe6\x46\xa6\xaa\xcb\x24\x51\x29\xc8\x92\xe8\
\x31\x20\xcf\x10\xfe\xe0\x4d\x9a\x7b\x70\x41\x06\x90\xc6\xc0\x1a\
\xed\x24\x30\x6e\x32\x51\x12\xb2\xe9\x1b\xb3\x75\x18\x56\x86\x0b\
\x24\x86\xad\xe2\xb3\xc7\x9a\xfd\x59\x76\x2a\xef\xba\x6e\x39\xd9\
\x6b\xb9\x40\x0b\xb0\x0c\xa5\x0b\x7a\x4d\x32\x68\x97\xd9\x1a\x56\
\xaf\x81\x6b\x4b\x35\xe0\x5d\x68\x00\x96\x09\x5e\x6a\xc3\x73\x0c\
\x03\xbe\x8c\xef\xdf\x93\x30\x1c\x93\xc8\x97\x85\xc1\x9a\xa4\x7f\
\x8f\x1b\x23\x60\x32\x16\xfb\xb0\xf7\x33\x6a\x81\x32\xbc\x80\xd1\
\x65\x1f\x07\x83\x35\xc9\xf1\xc7\x05\xb4\x46\x2d\xc4\x26\x2a\xe3\
\x01\x30\x58\xd9\x73\xc6\x1a\xb9\xdb\xce\xa7\xf2\x56\x77\xa6\xf3\
\x87\x40\x4c\xb9\x5c\xb6\x83\x6a\x10\x44\x48\xa9\x0e\xac\xca\x84\
\x82\x38\x8a\xfa\xea\x07\x29\xed\x83\x95\x52\x22\x85\x06\x65\xdd\
\x5e\x8f\x44\x25\x3a\x4e\x90\xd4\x86\xec\x89\x8a\x91\x32\xa6\xbe\
\xbf\xcb\xdc\xec\x34\x71\xdc\x23\x8e\x63\x6a\xbd\x69\x2a\x95\x28\
\xb5\x25\x11\xda\x73\xb1\x00\xbe\x57\x20\x08\x3c\x84\xaf\x1c\xb5\
\x84\x9e\xa4\xbc\xc3\x3b\xdb\x3c\x96\xc7\x72\x68\x19\xde\x41\x75\
\xd7\x74\x07\x71\x6b\xbc\xec\x38\x93\x20\x3c\x94\x13\xec\x53\x3b\
\x89\x98\xf7\x58\xe1\x21\x34\x8d\x4b\xdf\x5e\x4a\x7b\xd0\x4a\xfb\
\xe9\x33\x61\x0e\xc8\x22\xed\xcf\xa2\xdf\x37\x06\x18\x13\x65\xea\
\xa6\x52\x90\x65\x54\xec\x9e\xed\xab\x79\x83\xf2\x40\xba\x1d\xe5\
\xa6\xdb\xe9\x3b\xa0\xb8\x81\x46\xf3\x80\xca\xf8\x41\xde\xc4\xe7\
\x1a\x75\xcc\x20\xb0\x19\x65\xf8\x3d\x8c\x39\x3b\xcc\x04\xeb\x82\
\x14\xf7\x7b\x9e\xca\x30\x7b\xdd\x4e\x9a\x54\xda\xf7\x7d\x0a\x52\
\x52\x48\xc7\xcb\x00\xf0\x9d\x63\xbd\xf4\x63\xca\xd6\xf6\x5a\x50\
\x50\x8a\x58\x46\xfd\x38\x59\xa2\x6f\xb3\x65\x1c\x8d\xcc\xc7\xdd\
\xe7\x82\xae\xc7\x72\x50\x8e\x0b\x50\x1e\x87\x8c\x02\xfe\x47\x29\
\xc7\x5d\x5c\x1c\xb5\xac\x71\xf5\x74\xcb\x1d\xb8\xee\x88\xc5\xd1\
\xaf\x1a\x8b\x35\xb1\x8a\x50\x78\x7a\x78\xd5\x86\xb6\xa0\x47\xe5\
\x7e\xae\x2e\xdd\x59\x43\x94\x52\x96\xfa\x8e\xe3\x22\x49\x12\xdb\
\x41\x37\x89\x63\xe2\x28\xa2\xd7\xeb\xd1\x89\x7a\x69\xfa\x9c\x7e\
\xfc\x1f\x21\x04\x81\x08\x40\x41\x12\x27\xa0\x14\x85\x42\x00\x1e\
\xa8\x44\x11\x75\x62\xf6\xe3\x3d\x9a\xde\x3e\x71\xd4\x4d\xaf\x19\
\xd8\xc1\xde\xf3\xf4\xed\x84\x61\x51\xaf\x1a\x02\x0f\xdf\x37\x9d\
\xc4\x3c\xe0\xd4\x9d\xda\x7f\x3c\xa8\x3c\x96\xd1\xf2\x70\x82\x37\
\x1a\x3b\x1d\xa7\x63\x4a\xd7\xdb\x4f\x60\xd4\x7f\xba\x4b\xba\x5e\
\xbc\x29\x78\xb1\x03\x99\x99\xd8\xfd\x14\x64\x0d\xaa\xb4\xf4\x47\
\x7b\xf2\x1a\x80\x07\x4a\x83\x2c\x06\x07\x59\x8f\x00\xbc\x18\xa5\
\x82\xb4\xff\x48\xcb\x02\x1b\x50\xe1\xda\x08\x65\x01\x8d\xb1\xfb\
\x72\x55\x62\x42\xa4\x6b\x79\x71\x90\xe1\xd1\xf5\xce\x5f\x95\x67\
\x41\x89\xd3\x9d\x73\x8f\x1f\x68\xdd\x8c\x6a\x2d\xef\x98\x51\xe5\
\x8c\x3b\x76\x14\xc0\x72\xeb\xe0\x82\x9f\xec\x35\x6c\xca\x9c\xcc\
\xa4\x67\xec\xe6\xc6\xa9\x57\x84\x52\x69\x28\x0f\x6f\x80\x15\x33\
\x99\x37\x5c\x30\x9c\x05\x54\x79\xdb\x46\x8d\x8c\x42\x2b\x07\x86\
\xfe\x3d\x4e\xc9\x16\xa7\xc6\x5c\xdf\x3d\xe1\xb8\xa6\xd8\x87\x31\
\x59\x3f\x4a\x40\xee\x8b\x94\x47\x85\x1d\x3d\x0e\xe9\xab\x08\x3d\
\x47\x47\x9a\xf7\x5a\xa6\xaa\x08\xa1\x0f\x42\xf8\xc6\xe8\xd6\xa8\
\x0d\x14\xbe\xaf\xe3\xed\x24\x09\xa9\x71\x7b\x3f\x85\x84\xef\x07\
\x08\xe1\x13\x04\xa1\x9e\x14\x3c\x8f\x5e\xaf\x87\xe7\xfb\x78\xbe\
\x4f\xbd\x21\xe9\x76\xbb\x08\x25\x08\x3c\x9f\x28\x8a\x10\x1e\x36\
\x95\x4e\x2c\x41\x48\x10\x52\x20\x0a\x10\x25\x1e\xb1\x07\x5b\xdb\
\xfb\xf4\x22\x45\xb3\xd5\xe1\xe4\xc9\x93\x20\x7c\xbc\xc0\x27\x51\
\x31\xc5\xa4\x44\xa2\x12\x0a\x49\x4c\xa2\x24\x61\xa1\x4c\x10\x84\
\x78\x22\x00\x21\xf0\x83\x90\x24\xee\xe9\xeb\x0c\x5d\x5d\x9a\x89\
\x28\x4f\xcc\xf6\xd1\x34\xd8\x24\xab\x02\x35\x30\x28\x38\x34\xdb\
\x90\x32\xf2\xe8\x7c\x95\xc8\xfc\xed\x03\xab\x86\x83\xe0\x79\xa0\
\x6c\xa1\x55\x45\xa3\x44\x8e\x19\xb6\x84\x99\xab\x47\x88\x3b\xd1\
\xe5\xaa\x66\xd2\xf7\x6d\xe4\x75\xc6\x32\x10\x23\x66\xe0\x43\xc8\
\x44\xcf\x6f\x02\x35\xc3\x90\x3d\xe9\xf9\x90\x24\xa6\x0c\x0f\x6d\
\x27\xe5\x96\x0f\x5e\x21\x05\x52\x12\x94\x12\xba\x3f\x24\x02\x91\
\xa4\x01\x26\xd1\x19\x0d\xfa\x21\x01\x62\x6d\x10\x2f\x7c\x84\x5f\
\xa4\x80\x20\xf0\x7b\x08\x62\xe2\x20\x22\xf2\x04\x89\x07\xca\x4b\
\x73\x17\xa6\xcc\x2f\xbe\x99\xcc\x8d\xb1\xbb\xc0\xc3\x27\x10\x45\
\x10\xda\x2b\x31\x4e\xfa\x79\x0d\x0d\x10\x30\x13\xb8\xf1\x42\x74\
\xc1\x93\x01\x5a\x56\x65\x28\xb4\x61\xfd\x30\x46\x27\x8f\xf5\x72\
\xbf\x1b\xd6\xcd\x65\xcf\x5c\xa3\x6e\xf3\x31\x75\x71\x25\xcf\x56\
\x6c\xf2\xe7\xd5\xaf\xa3\xfb\x37\x2f\xee\x54\x1e\xdb\x60\x82\x85\
\xe6\xdd\x53\x10\xe8\x71\x49\x2a\x85\x04\x12\x21\x40\x4a\x12\x21\
\x1c\xf0\x9c\x32\x9c\xe9\x77\x63\xb3\x85\x94\xc8\x38\xc6\x63\xd0\
\xbe\x4e\xb7\xb9\x22\x8a\x24\x49\x12\x11\xa5\x0b\x52\x03\xf2\x8c\
\x07\xa2\x76\x0c\x4a\xbd\x19\x19\xef\x7d\x28\x84\x1e\xfd\xbc\x21\
\x7f\x11\x07\xe7\x91\x2c\xd3\x39\xae\x8d\x8d\x07\x38\x99\xb6\x56\
\x4a\xd9\x00\x1d\xbe\x10\x48\xa5\x97\x10\xe6\xaf\xfb\xb8\x27\xe9\
\xfd\xc7\xa1\x22\x9c\x44\xe4\xb8\x49\x5f\x8c\xaf\xaf\x97\xb5\xd3\
\x3c\x4a\x3d\x70\xd8\x23\xb3\xd8\x48\x7f\xaa\x74\xdf\xf8\x76\x1b\
\x67\x36\x91\x61\x71\xec\x8e\xfe\xfe\xbe\xe6\x2b\xff\x6a\xc3\x54\
\x7f\xe3\x16\x63\x07\xeb\x92\xaf\xfa\x1f\xf8\x3e\xae\x98\x09\xca\
\x18\x25\x87\x88\x83\x65\x8b\xc6\x34\x5b\x76\xd5\xe5\x0e\x72\x66\
\xa0\x34\x76\x00\x86\xae\x0e\xc3\x10\x21\xb4\xbd\x56\xb1\x58\xa4\
\xdb\x0b\xed\x4a\xd8\xea\xb3\xed\x25\x74\x20\x30\x99\x48\xa4\x27\
\x49\x84\x8e\xee\xee\xa5\x69\x7a\x7a\xbd\x1e\xed\x76\x87\x46\xa3\
\x49\xa5\xd2\xb4\xc6\xa2\x02\xcf\x02\x2a\x13\xe0\x54\x24\x12\xe5\
\x25\x08\x3c\x67\xe0\xc8\x6f\xdd\xc7\x2b\x8a\xc7\xf2\x70\x65\x32\
\x40\x29\xd2\x65\x7a\x76\x12\xec\x7b\xfa\x09\x67\xbf\x97\x06\x19\
\xf5\xf1\x54\x1a\xb5\xdd\x86\x6b\x30\xcc\x98\x19\xf5\xd2\x8f\x13\
\x84\x57\x4f\x66\x5e\x9f\x71\xb2\x09\xd6\x0d\x08\x3c\xc8\x0c\x65\
\x19\x29\x57\xfa\x7d\xaa\x3f\x01\x0f\x9b\x70\xf3\xd8\xad\x03\xad\
\x25\x26\x1b\xe4\xf2\x18\xad\x49\x55\x22\x87\x19\x03\xb2\x75\x3e\
\xa0\x01\xc8\xd9\x97\x77\x2d\x9b\x56\x0c\xac\xed\xea\x30\x03\xf5\
\x41\xd6\xac\x5f\x4e\x96\x35\x74\x83\xc3\x66\x99\x45\x17\xf4\x09\
\xe1\x59\x00\x23\xc8\x3c\xdb\x74\xbb\x9d\xec\x4c\xbd\x9d\xbf\x76\
\xcf\xc0\x02\xe1\xf0\xe3\xa8\xd1\x22\x0d\xd4\x05\x1d\x9a\x43\xbf\
\x85\xd8\x3a\xe5\xfd\x9d\xf4\x8a\x8f\x55\xa3\x5f\x9c\x8c\x62\x88\
\x0f\xfb\x5c\x1e\xe5\xb9\xfa\x50\x00\x2b\x6f\xd0\x1b\x50\x2b\xa4\
\xc0\xc5\x4d\x0d\xd1\x67\xba\xfa\xac\x90\x1b\xaa\x41\x78\x1a\x88\
\xb5\xdb\x6d\xa2\x28\xea\x83\x9f\x54\x15\x20\x95\x24\x56\x1a\x68\
\x25\x71\x82\x94\x05\x82\x82\x31\xa0\x6f\x12\xc7\xda\x53\x51\xa7\
\xe4\x49\x98\x99\x99\xa1\x54\xea\x21\x25\x54\x2a\xa4\x6a\x43\x1f\
\x25\xb5\x4d\x96\xf0\x3c\x7c\x7c\x7c\x61\xba\x6d\x5f\xdc\x49\xe0\
\xf8\x48\xe6\x07\x23\xc7\xa1\x37\x3f\x4e\xdd\xfb\x17\x25\x8f\x72\
\xe7\x3a\x9a\x1c\x7c\x1e\xe6\x19\x79\x69\x0e\x4e\x37\x6b\x81\x71\
\x24\x71\x27\x6f\x9d\x1e\x47\x39\x2e\xfb\x9a\x59\xf6\x7c\x41\x9c\
\xc4\x14\x0a\x31\x71\x22\x51\x52\xa4\xac\x48\xfa\xee\xcb\xfe\x54\
\xa5\x99\xa2\xfe\xc4\x8d\x4a\x63\x4f\xf9\x6a\x60\x32\x17\xa2\x1f\
\x4e\xc0\x5d\xf1\xbb\xcf\xc5\x4c\xe2\xc6\x2b\x51\x89\x41\x35\x58\
\x1e\xc0\xca\x63\x81\x8c\x78\x5e\xbf\xef\xe6\xad\x2a\x5d\x16\x2d\
\x7b\x4c\xf6\x58\xb7\x7d\xb3\xd7\xc9\x7a\x22\xe6\x31\xaf\xae\x91\
\x73\x1e\x08\x72\x7f\x67\x41\xa9\xfb\x37\xfb\xdd\xb0\x70\xae\x17\
\xa0\x5b\xae\xcb\xd6\x09\xa1\xd9\xc7\x61\x00\xcf\x55\x33\x1a\x43\
\xfa\x6c\x5b\xe8\x32\x04\x2a\xad\xa7\xf2\x3c\xed\x8e\x60\x7e\x67\
\xdb\xd8\xfc\x76\xfe\x0e\xee\xc9\x97\x49\xfa\xab\x81\x74\x7d\xf6\
\xc3\x61\xb3\x72\xae\x3b\xfe\xaa\x8f\xe5\x51\x92\x61\x8e\x01\x43\
\xb5\x2f\x23\x64\x12\x56\xe9\x28\xcc\xd3\x61\xcb\x18\x56\xee\x11\
\x18\x2c\x2d\x79\x13\xb3\x0b\xb0\x5c\xd5\x80\xd9\x27\x84\x1e\x1c\
\x8d\xcd\x81\x10\x02\x3f\x18\x1c\xb8\x8c\xc7\x94\x6b\x37\x60\xdc\
\xc4\x93\x24\xe9\xab\x2c\x13\x88\x23\x49\x1c\xc5\xc4\x51\x7f\x82\
\xe9\xf5\x22\xaa\x95\x2a\x32\xd1\xea\x14\xdf\x2b\x00\x9e\xf6\x3c\
\x0a\xd0\xe0\xca\xcf\xae\x8f\xdc\x07\x6a\xec\x53\xee\x7f\x85\xf3\
\x20\x40\x50\x76\xe2\x38\x4a\xf9\xf9\x93\x8f\x18\x47\xa4\x3c\x72\
\x32\x1c\xec\x3f\x9c\xe1\xf6\x61\x83\x3b\x3b\xd9\x0d\x80\x29\xdd\
\xe7\xb2\xce\x24\x6e\x1d\x85\x80\x52\xa9\x44\x1c\xfb\xc8\x44\x12\
\x47\x09\x71\x2c\x51\x32\xb2\xe9\xac\x44\xaa\x72\xd1\x5e\x88\x7d\
\x4f\x42\x13\x4f\x4e\xa5\x5d\xc5\x03\x12\xd1\x07\x77\xd9\x81\x70\
\x18\xe0\x71\x9f\x8d\x44\x59\xe6\xcd\x55\x1f\xba\xf7\xe9\xca\xc1\
\x3e\xa0\xcb\x19\x37\xd0\xe5\xb1\x47\x79\xef\xfe\x20\x13\x74\x10\
\x6c\x99\x73\xdc\xf6\x37\xc7\x19\x9b\xa7\x61\x75\xcf\x96\x9d\x2d\
\x63\x70\x01\x3a\xa8\x0e\x34\xe0\xd9\x78\x16\xba\x65\x66\x01\x96\
\x51\xef\x99\x3a\x67\xc3\x38\x64\xef\xc5\xdd\x6e\x59\x2c\x29\x06\
\x9e\x47\x9e\xdd\x58\x56\x0e\x3e\x2b\xfd\x6c\xf2\xce\x99\x74\xac\
\x32\x65\xf4\x7f\x1f\xa5\x9f\x7d\x79\x20\xd7\x71\x8c\x23\x5f\xa6\
\x32\x46\x91\x34\x6e\xdf\x1c\x05\x6a\xc6\xfd\xce\xdb\x3e\xe9\x39\
\x87\x29\x63\x5c\xb9\x87\x06\x58\xc3\x3a\x8e\xbb\x0a\x73\xd5\x17\
\xe6\x82\xee\x2a\x2a\x8e\x63\x3b\x38\x0b\x0f\x94\x74\x57\xb9\xb1\
\xb5\x25\xd1\x2b\x73\x53\x61\x7d\x6e\x14\xc5\x20\xfa\x9d\x3f\x8e\
\x25\x9d\x4e\x8f\xbd\xbd\x3a\xbe\x5f\xa0\xd7\x8d\xa9\x4d\x75\x30\
\xea\x8c\x20\x28\x80\x10\xa8\x82\x4e\xb0\xeb\x79\x80\xf0\x53\x68\
\x65\x06\xa4\x2c\x72\x1e\x07\x5c\x26\x47\x22\xe3\x1e\xe2\x61\x54\
\x15\x79\xc0\xea\xb0\x2f\xc9\x70\x70\xf6\xe5\x09\x34\xfa\xb0\x80\
\xcd\xa3\xc2\x8e\x0d\x03\x05\xa6\x4f\xb9\x6c\x71\x5e\x2e\x3c\x50\
\x84\x2a\xc4\xf3\x3c\xe2\x24\xa1\x18\xc5\x69\x02\x76\x53\xbe\x39\
\xb7\xaf\x80\xe9\xf7\x39\xdd\x3f\x95\xf2\x74\x5f\x05\xb2\x89\x96\
\xdd\x7a\x65\x27\x6e\x77\x9b\x05\x16\xce\x3d\x65\xff\x0e\x03\x28\
\xd9\xf6\xc8\x02\xac\x3c\xe0\x30\xaa\x3d\xb3\x6d\x39\x0e\x44\x64\
\x19\x2f\xf3\x7b\x1c\x83\x35\x0c\x60\xe5\xad\xd6\x87\xd5\xc1\x6d\
\xcb\x61\xfd\x3e\xdb\xfe\xae\x5a\xd0\x7c\xdc\x48\xfd\x6e\x59\x2e\
\xc0\xb2\x0b\x5f\x93\x0c\x7c\xc8\x98\x3e\xac\x9d\x48\x15\xc0\xd9\
\xf1\x25\xfb\xac\x47\x8b\x1a\xeb\x25\x3a\x4e\x94\xad\xc9\x7d\x94\
\x71\x4c\xfd\xff\x28\xa0\xe3\x41\x5c\xe7\x58\xea\x71\x0c\x65\xe4\
\xed\xcf\x5b\x54\x8d\xfa\x9e\xd7\x7f\x46\x95\x3f\xae\xbc\x49\x64\
\x92\xf3\xb2\xc7\x1c\x99\xc1\x82\x83\x03\x4a\x36\x11\x2c\x90\x46\
\x7b\xef\x1b\xbe\x27\x49\x42\x10\x24\x48\xd9\x57\x2b\x28\xa9\xd7\
\xb5\x26\x66\x8b\x66\xb8\xba\x76\x50\xc0\x7a\x2e\x29\x54\x9c\x20\
\x65\x4f\xaf\xe8\x0a\x02\x51\xf0\x49\x12\x45\xa7\xdd\x63\x77\x67\
\x9f\x4e\xbb\x4b\xa7\xd3\x4d\xc1\x93\x93\xc0\xb6\x22\xf1\x7d\x81\
\xf0\x24\x7a\xac\x32\x71\x60\xd2\xd4\x3a\x13\x75\x7c\x7b\xb7\xf7\
\xd3\x6c\x47\x96\xec\x44\x7b\x1c\xec\x55\xff\x3b\x5f\x3a\x06\x2b\
\x4f\x0e\xf7\x1c\xbf\x1c\x32\x6e\x40\x32\x46\xca\x06\x60\xb9\xac\
\x8a\xe9\x37\x92\xd0\xee\x4b\x4a\x09\xfd\x04\xeb\xd8\x70\x2a\x3a\
\x31\xb5\x79\x1f\x04\x3a\x58\x29\x28\x04\x0a\x99\x92\x9c\x02\xe5\
\x64\x44\xc8\x63\x5f\xdc\x09\xde\x05\x20\x4a\x29\x50\x02\xa9\xfa\
\xf6\x41\xee\xa4\x6b\xd8\x93\x61\x86\xe3\x83\xe0\x62\x72\x9a\x3e\
\x0b\xa8\xb2\xdb\x87\x81\x9f\x6c\x3f\xc9\x82\xac\x6c\x99\xc3\x80\
\xb0\x7b\x7f\x66\x9b\xbb\xdf\x05\x31\xd9\xd4\x39\x93\xf4\xf7\x2c\
\xd0\xcd\x03\xbd\xd9\x44\xd4\x7a\x31\x9b\x0c\x96\x2d\x23\xbb\xaf\
\x9f\xaa\xa9\x7f\xbc\x01\x5c\xee\xfd\xbb\xed\x65\x80\x95\xe2\xe0\
\x3c\x30\xea\xf9\x64\x45\xdf\x43\xfe\x7d\x4e\x2e\xe3\xaf\x75\x98\
\xc5\xed\x83\x94\x87\x01\xae\x1e\xf5\x32\x86\x81\xef\x51\xc0\x28\
\x7b\xfc\xa4\xa0\xe7\x28\x75\x1d\x77\xde\xb0\x7a\x1f\x09\x60\x8d\
\xea\xe8\x6e\xe1\x66\x90\x30\xf4\xb6\xd9\xae\x8d\x37\x55\x6a\x2b\
\x62\x3c\x57\xa0\x50\x08\x89\xe3\x98\x28\x8a\x68\xb5\xfc\xb4\x93\
\xf5\xd2\x41\x5a\x20\x25\xc8\xc4\x78\xe4\xe8\x49\x40\x29\x85\x0a\
\xcc\xb5\x3b\xf4\x7a\x3d\xe2\x58\x33\x5f\xfa\xaf\x51\x37\x4a\x3c\
\x01\x89\xd4\x79\x0d\x4b\x85\x92\x36\xf4\x55\x26\x98\x5f\x76\x15\
\x6b\x1a\xec\xfe\x55\x7c\xa3\x64\xd2\x4e\x3e\x8a\xbd\x9a\xa4\x86\
\xe3\xca\xa0\x6f\xe6\x70\x5f\x75\x7d\x18\x92\x37\xd1\xb9\xdf\x8f\
\x0b\x64\x1d\xc7\xb3\x3b\x0e\xc9\x9b\xf0\x5d\x19\x17\x8c\x52\x08\
\xe1\xa8\xe5\x8c\xca\x5d\x7b\x0e\x1a\x70\x95\x24\x89\xcd\x49\xe8\
\x79\x26\x62\x7b\x6a\x0c\x8d\xb2\x59\xe3\x95\x53\x3e\x60\xfb\x6f\
\xf6\x9d\x3a\x08\xf2\xb4\xb8\xcc\xb1\x0b\x2c\xdc\x7a\x67\x23\xa6\
\x1f\x1c\x57\x4c\x49\x83\x75\x39\xec\x80\x39\x6e\x91\x92\x97\x6e\
\x27\x5b\xa7\x49\xdf\x81\x3c\xc0\x71\x98\x7a\x8e\x1a\xd4\x35\xa8\
\x19\x3c\xde\x7c\x37\xc0\xca\xdc\x4f\x16\x44\xba\xc0\x56\x0a\x85\
\x76\x62\x48\x3d\x1a\x95\x24\xb1\xe7\x80\x2f\xfd\x34\x43\x46\x1e\
\x33\x87\xd6\x14\x28\x69\x19\x4e\x33\xa6\x0a\x3b\xb6\x98\xe7\x37\
\x81\x47\x9c\x20\x3d\xbf\xbf\xc1\x6d\xba\x71\x01\x3e\xf5\xc2\xe0\
\xfe\x19\xac\x87\x05\x3a\x7e\x9d\x18\xac\x6c\x7f\x75\xc1\xd2\xb8\
\xc5\x50\xf6\xf8\x61\xd7\x9c\x94\xc5\x3a\x6c\xbb\x1f\x16\xd0\x4d\
\x0c\xb0\x86\x0d\x62\xd9\x8e\x9a\xbd\x79\x17\x64\x99\xef\xc6\xc8\
\x5d\x08\x6f\x40\xbd\xe1\xfb\x01\x71\xac\xe3\x64\x59\x37\x64\xb0\
\x6a\x43\x21\x24\x49\xa2\xd2\x34\x1e\x0a\xa5\x22\xeb\x41\x25\x3c\
\x0f\x4f\x68\x40\xd5\x68\xb4\x34\x18\x93\x12\xdf\xf7\x08\x02\x9f\
\xa0\xe0\x13\x04\x82\x44\x16\x91\x32\x26\x0c\x02\x84\xf4\xb4\x9b\
\x3a\x2a\xed\xf4\x59\xf7\xf0\xe3\x01\x59\xc7\x21\xc3\x06\xf8\x87\
\x5d\xc6\xa3\x2a\xbf\x4a\xf7\x92\x95\x2c\x08\x81\xe1\x9d\xdb\x65\
\x3e\x5c\x10\xa1\x33\x25\xf4\xed\xa9\x94\x82\x24\x91\x36\x37\x9e\
\x10\x82\x38\x32\xcc\x43\x9f\x8d\x86\xbe\x71\x7d\x76\xc2\xe9\xef\
\xf7\x06\xfa\xbb\x9b\x0a\x26\x6f\x20\x53\x2a\x9f\x75\x31\xbf\xb3\
\x6a\xb7\x03\xc0\x31\xf5\x69\xcc\x7b\xe6\x59\x66\x68\x98\x4c\x32\
\x79\x8e\x62\x6b\xdc\x7b\xcf\xd6\x75\x92\x77\xd1\x05\x3a\xd9\x09\
\xc6\xd5\x04\x64\xeb\x91\xc7\xb2\xe9\x67\x3e\xc8\x1e\xba\x6c\xd5\
\xb0\x60\xa7\x6e\xbb\x6b\x80\x05\x9e\xa7\x6c\x1b\x2b\x7c\x3c\xe7\
\x7e\x34\xd8\x8a\x47\xd6\x05\x13\x66\x24\xb3\xdf\x6d\x6b\x9d\x79\
\x60\xb8\x78\xc2\x1f\x60\xfb\xdc\xbf\xe6\x7b\x32\x2e\x82\xba\xd6\
\x56\x8e\x14\x37\x8e\x5b\x6e\x11\xbf\xc2\x63\xca\x17\x29\xd9\x77\
\x1e\x46\x03\x9e\xc3\xb2\x4e\xc7\x51\xc6\xb8\x72\x27\x65\xcb\x8e\
\x64\x83\x35\x6a\x70\xcf\x0e\x70\x6e\x27\x33\xa1\x1a\x00\x1b\x59\
\xd8\xe4\x2d\x34\x1f\x93\x6e\xc7\x8d\xd1\xe2\xc6\xa3\x92\x4a\x21\
\x52\xf5\x86\x59\x25\xeb\x88\xf0\x7d\x95\x47\x1c\x27\x74\xbb\x5d\
\xfb\xe9\xf5\x7a\xc4\x51\x8f\x38\x89\xf0\x62\x2f\x5d\x51\x69\x35\
\x83\x12\x9a\x1d\xeb\xaf\xae\x1e\xdd\x4e\x75\x1c\xa0\xe8\x57\x0d\
\x58\xfd\x3a\x48\xf6\x79\x0d\x03\x16\x59\x40\xe0\x86\x4c\x31\xc0\
\xab\x9f\x4e\xc5\x89\x7f\xe4\x2c\x66\xee\xa7\x7e\x07\x59\x8d\x83\
\xf6\x46\xc6\xaf\x24\x6f\xc5\x39\x6e\x55\x69\xc7\x14\x18\x58\xf3\
\xe4\x32\xb2\x63\x24\xef\x5a\x6e\x3d\x47\x95\x73\x5c\x0c\x69\xb6\
\x3e\xc3\x56\xe5\x79\xd7\xcb\x82\x52\xb3\xfb\xe0\xf6\xe1\xaa\x97\
\x2c\xa0\x73\x81\xb2\xd9\x6e\xae\x6f\xc6\x59\x23\x43\xc1\x9e\x87\
\xd6\x0c\x64\xae\x95\xbd\x9f\x91\x22\xf2\xdf\x29\xf7\xda\xc7\x21\
\xe3\xde\xf9\xc7\x51\xee\x1f\x9c\x8c\x03\x59\xa3\x16\x4f\xa3\xe4\
\xb8\xfb\xe5\x51\xc5\xd4\x23\x98\x24\xf8\x5e\x56\xf2\x1a\xc5\x7c\
\x37\x1d\xd5\xfc\xd6\xcc\x94\x6f\xd5\x13\xe0\xa5\xa1\x13\x3c\x0a\
\x85\x02\xed\x76\xdb\x9e\x5f\x2c\x16\x49\x92\x84\x28\x8a\xf0\x3d\
\x3d\x01\xec\xed\xed\xd1\x6a\xb5\xe8\xf5\x7a\x80\xc0\x47\x61\xd2\
\x77\x98\x4b\x47\x51\x42\x92\xb4\x48\x92\x84\x62\x29\xb4\x89\xa6\
\x77\x77\x77\xb1\x94\xb5\xa7\xf0\x7c\x28\x97\x2b\x4c\x05\x53\xec\
\xef\xef\x52\x2e\x57\x29\x95\x4a\x98\xf4\x23\x7e\xe0\x5b\xf0\x25\
\xa5\xc2\xc4\x05\x3a\xd8\xb9\xcd\xfd\x1d\x8c\x64\x9d\x6d\xa7\xbc\
\xdf\xee\xf6\x3c\x23\xd9\x49\x27\xd4\xfe\x8f\xa3\xa9\xb3\x06\xcf\
\x11\x63\x89\xba\xf1\xd7\x48\xcb\x99\xb0\x1e\xf9\x2b\x0d\x18\x1e\
\xe0\x55\x4b\x9e\xa1\xed\x60\x59\xc7\xd3\xc9\x8e\x63\x70\x3d\x8e\
\x0e\x3f\xaa\x3d\xf2\x26\x1e\xd3\xef\x0c\x73\xac\x94\xc2\x2f\x04\
\x29\x53\xd5\x41\x4a\x45\xa9\x64\x26\x10\x0f\x81\x0e\xf0\xdb\xa6\
\x6d\xed\x6e\xf4\x64\xdb\x0f\x03\xa1\x3d\x0d\x75\xc0\x43\xd3\xff\
\x5d\x2f\x42\xb3\x80\x32\x6c\x98\xe7\x79\x76\x91\xe4\x8e\x15\x71\
\x9c\x10\x47\xfd\xb8\x77\xee\x24\x6f\x8c\xb0\xcd\x22\x2c\x3b\x89\
\xf7\xed\x93\x80\x1c\x23\xf7\xe1\xed\x77\x50\xcd\x36\x90\x1f\x31\
\xc3\xea\x64\xdb\x35\x7b\x0d\xb7\x9c\xc1\x38\x52\xe2\x40\xb9\xe6\
\x78\xb3\x2f\x0f\xa4\x98\x36\x1a\xc6\x98\x19\x83\xf3\x61\xf5\x32\
\xe0\xc7\x1d\x77\x8d\xf7\xa1\x0b\xaa\xdd\xfd\xd9\xc5\x30\x60\x6d\
\xac\xf4\x73\xea\xb3\x8f\xe6\xfa\xc6\xf9\xc8\xbc\x57\xe6\x78\xe3\
\xb4\x64\x00\x96\x19\x02\xdc\x77\xc0\x5c\xcf\xb0\x46\xc6\x89\xc9\
\x65\xb8\xcc\x7b\x50\x0c\x4b\xf8\x9e\x4f\xbb\xdd\xb6\x75\xed\x76\
\xbb\x44\x69\x8a\xb5\x42\xa1\x80\x52\x8a\x62\xb1\x48\xb9\x5c\xd6\
\x21\x48\x1c\xfb\x3d\x63\x92\x12\x04\xc1\x40\xfa\x36\x73\x3d\x13\
\x46\xc8\xd4\xdb\x7d\x1f\x4c\x7c\x45\xb3\xcf\xd8\x0d\xbb\x9e\x9c\
\x5a\x33\xa2\xc9\x82\x56\xab\x65\xdb\xc3\xbc\xb7\xd9\x7b\x8b\xe3\
\xd8\x7a\xd6\x77\xbb\x5d\x5b\x77\x73\x1f\x6e\x3f\x1a\x26\xd9\xf7\
\x2c\xfb\x77\x12\x46\x76\x12\xc9\x1b\x9f\x07\x16\x21\xc7\x50\xc6\
\xa8\x05\x94\xf9\x9b\xb7\xf0\x19\x35\x77\x64\xf7\x4d\x4a\x24\x8c\
\xbd\xdf\x43\xce\x01\xd9\xf2\xee\xcb\xc8\x7d\xd2\x8b\xb9\x1d\xd9\
\x74\x72\xcd\x5e\x15\x07\x5e\x62\x80\x5a\xad\xa6\x6d\xb4\x84\x22\
\x4e\xa2\x81\xe8\xd0\x1a\x64\x99\x46\x48\x06\x5e\x4e\x29\x05\x42\
\xe8\x9c\x5e\x49\x2c\xf1\x03\x1d\x8e\x41\x77\xa8\xc0\xc6\xce\xa9\
\xd5\x6a\x28\x25\x99\xaa\x9a\x14\x3f\x82\x20\xd0\x46\xf8\x52\x26\
\x8c\xb3\x0f\xd0\x0f\xee\xfe\xda\xe5\x31\x8b\xf4\x58\x1e\xb6\x98\
\xc9\xd0\x4c\x40\xa6\xef\x14\x82\xc2\x81\x89\xa1\x3f\xf1\x64\xbc\
\xc7\x84\xee\x7d\x79\xe1\x19\x8c\xe4\x4d\x98\xae\x78\xc2\x1b\x50\
\x11\xb9\x46\xf2\x46\xb2\x2b\x59\x97\x5d\x31\x71\xbd\x10\x83\x7d\
\x68\x18\xd0\x34\x7f\xf3\x18\x1c\xf7\x7b\x96\x8d\x31\x00\xd5\x3d\
\xd6\x5d\x75\x67\xcb\xca\x82\xa9\xbc\x36\xc9\xca\xa4\x63\xc0\xa8\
\xfa\xdb\x7d\x43\x56\xff\xc3\xc0\x63\xf6\xf9\x08\x21\x68\xb7\xdb\
\xb9\xac\x94\x39\x2e\x08\x82\x34\xdc\x47\x6c\x81\x82\x0b\x02\x85\
\xaf\x73\x62\x82\x3e\xbe\xd7\xeb\xb1\xb7\xb7\x47\xbb\xdd\xa6\xd9\
\x6c\xd2\xeb\xf5\xe8\x76\xbb\x6c\x6f\x6f\x23\x84\xa0\x5e\xaf\x73\
\xf7\xee\x5d\xb6\xb7\xb7\xed\x38\x9f\x24\x09\xbb\x3b\x7b\x34\xea\
\x0d\x0b\xec\xca\xe5\x32\x8b\x8b\x8b\xd4\x6a\x35\xce\x9e\x3d\xcb\
\xdc\xdc\x1c\x67\xcf\x9e\xa5\x56\xab\xb1\xb0\xb0\x40\xa9\x54\xa2\
\x52\xa9\x00\x58\x10\xb8\xbf\xbf\xcf\xd6\xd6\x16\x7b\x7b\x7b\x74\
\x3a\x1d\xbb\x70\xe8\xf5\x7a\xf4\x7a\x3a\x4d\x5b\xa9\x54\xa2\x54\
\x2a\x51\xad\x56\x29\x14\x0a\x94\xcb\x65\xaa\xd5\x2a\x73\x73\x73\
\xb6\x5c\x97\x05\xee\x74\x3a\xb4\xdb\x6d\x7b\x1f\xf5\x7a\x9d\x99\
\x99\x19\x92\x24\xa1\xd3\xe9\xd0\x68\x34\x06\x00\x9c\xb9\xa6\xe9\
\x6f\x42\x08\x2a\x95\x8a\xed\x8b\xad\x56\x8b\x56\xab\x65\x83\x6e\
\x8f\x92\x71\x20\xe3\xb8\x99\x9b\xe3\x59\x18\x3e\x58\x36\x29\xfb\
\xae\x0f\xbb\xde\x71\x30\x5f\xe3\x16\x70\xc3\xea\x71\xac\x00\x2b\
\x6f\xe0\x71\xb7\xeb\xce\xd8\x5f\x2d\xb8\x1e\x33\x66\x25\x07\x7a\
\xa0\x0f\x82\x20\xd5\xc5\xfb\x03\x03\x84\x22\x42\x08\x99\xda\x58\
\x29\xb4\xa7\x93\x97\xae\xa4\x34\xc8\xd2\xe5\x68\xb6\xac\xdb\xed\
\xb2\xbb\xb7\x0b\x42\xe2\x79\x7a\x25\x14\x04\x01\x1e\x7a\x55\x15\
\x14\x0c\x2d\x5e\xc0\xf3\x48\xaf\xe7\x2c\xc3\x6c\x03\xba\x1e\x56\
\x8f\x6d\xa0\x1e\xcb\xa3\x23\xe3\x56\x73\x42\xa4\xf1\xe0\x7c\x8f\
\x42\xa0\x03\x8a\x0a\x7c\x94\x14\x14\x8b\x92\x38\x4e\x06\x18\x0a\
\xc0\x61\x25\x14\xfd\xc4\x07\x42\x9b\xbb\x8b\x41\x8f\xe1\x2c\x33\
\x64\xae\x6b\xae\x3d\x00\xa2\xd2\x18\x74\xd9\xbe\x00\xc3\xc1\x96\
\x7b\x1d\x33\x86\xb8\x00\x2b\xcb\x1c\xb9\xd7\x77\xcb\x9b\x64\x40\
\x76\x8f\xc9\x02\x95\x71\x2b\xef\xbc\x32\x86\x1d\x9b\x77\x8d\x61\
\xd2\x07\x96\x07\x99\x31\x17\x60\x65\x57\xde\x59\xb0\xe4\x96\xe7\
\x02\x2c\x53\xdf\x44\x81\x48\xff\xb3\x4c\xa5\xa6\xc7\x89\xe3\x84\
\x5e\x1c\x01\x58\x80\x12\x86\x21\x95\x4a\x85\x42\xa1\xa0\xf3\xcb\
\x36\x9b\x48\x99\xd0\x68\x35\xd8\x74\xc0\x4d\xb7\xdb\x65\x6f\x6f\
\x8f\x66\xb3\xc9\xd6\xd6\x16\xab\xab\xab\xec\xed\xed\xb1\xb5\xb5\
\xc5\xfe\xfe\xbe\x65\xa7\x0c\xc0\x9a\x99\x9e\xe1\x99\xa7\x9f\xe1\
\xeb\x5f\xfb\x2a\xcf\x3c\xf3\x0c\x67\xce\x9c\xe1\xd4\xa9\x53\x4c\
\x4d\x4d\xb1\xb8\xb8\x48\x18\x6a\x2d\xc5\xce\xce\x0e\x2b\x2b\x2b\
\xbc\xf7\xc1\xfb\xdc\xb8\x71\x83\xdd\xdd\x5d\x6e\xdd\xba\xc5\xfa\
\xfa\x3a\x5b\x9b\x5b\x6c\x6d\x6e\xb2\xbb\xbb\xab\xd3\xaf\xa5\x20\
\x30\x8a\xa2\xa1\xcf\xc5\x80\xb9\x99\x99\x19\x66\x67\x67\x59\x5e\
\x5e\xe6\xc9\x27\x9f\x64\x61\x61\x81\xe7\x9f\x7f\x9e\x27\x9f\x7c\
\x92\x73\xe7\xce\xb1\xbc\xbc\x6c\xdf\xf3\x8d\x8d\x0d\x0a\x85\xc2\
\x00\xf0\x34\x20\xcb\x1c\x13\x45\x91\xbd\x47\xc3\xea\xf9\xbe\x6f\
\xc1\x9d\x59\xd4\x8c\x92\x61\x73\x6b\xf6\xfb\x71\xc8\x71\x94\xfd\
\x20\xeb\x37\xee\xba\xc3\xae\x3d\x09\x00\x1b\x36\x26\x8c\xfa\x3d\
\xaa\x1e\xc7\x0e\xb0\x46\xaf\xf0\xfa\xdb\x5d\xfb\x0f\x33\x08\xe8\
\x97\x52\x0f\xee\x76\xbf\x6f\xbc\x50\xd2\xd5\x56\x4a\xe3\x2a\x24\
\x71\xac\xbd\x9b\xb4\xba\xc0\xac\xb4\xb0\x2e\xe8\x28\xed\x79\xd8\
\x69\xf7\xd8\x13\x75\xc2\x50\x7b\x29\x86\x61\x48\xc1\xd7\xd4\xb5\
\xb1\xf9\xea\xaf\x54\x48\x03\x91\xaa\xd4\x77\xaa\x6f\x84\x6f\xee\
\xd1\xfd\x3d\x4a\xb2\xe7\x0c\xb6\xc5\xa3\xa3\x2f\x3e\x2e\xd1\xb7\
\x73\x9f\xf7\x34\x01\xe6\x1c\xdf\x6e\xea\xfe\xeb\x71\x5c\x72\x2c\
\xcf\xf8\xe8\x65\x98\x77\xcd\x18\x41\x1b\xbb\x47\xe8\xab\x92\x74\
\xe8\x14\xbd\xdd\x4c\x74\xee\xc4\xdb\x67\xb0\x34\xc0\xca\x02\x22\
\x57\xf2\x02\x5c\x0e\x2c\x2a\x52\x87\x92\x6c\x2a\x17\x53\xd7\x51\
\xc0\x28\x0f\x60\xb9\x00\x22\x6b\xdc\x9f\xc7\xb2\x0d\x63\x98\xf2\
\x64\xdc\x79\xa3\xda\xfb\x7e\x8f\x19\x25\xd9\x7a\x49\x29\xf1\xc5\
\x70\x36\x31\x4f\x6d\x99\x57\x0e\xc2\x1b\xfa\xdc\xdc\xb0\x0d\x95\
\x4a\x85\x52\xa9\x84\x94\x92\x46\xa3\xc1\xee\xee\x2e\xdb\xdb\xdb\
\xd4\xeb\x75\x5a\x9d\x16\x51\x1c\x51\x2c\x16\x89\xa2\x88\xb5\xb5\
\x35\xae\x5e\xbd\xca\xcd\x9b\x37\xa9\xd7\xeb\x34\x1a\x0d\x3a\x9d\
\x0e\x7b\xdb\xbb\x00\x94\xaa\x65\x2e\x5c\xb8\xc0\x85\x0b\x17\x58\
\x5a\x5a\xe2\x6b\x5f\xfb\x1a\x2f\xbd\xf0\x12\x67\x4e\x9f\xc1\xf3\
\x3c\x0b\x78\x3c\x4f\xe7\xb0\xfd\xf0\xc3\x0f\xf9\xe0\x83\x0f\x78\
\xfd\xf5\xd7\xd9\xda\xda\x62\x6d\x6d\x8d\x9d\x9d\x9d\x54\xbb\xd1\
\x7f\xef\x0a\x7e\x60\x53\xb3\x95\x4a\xa5\x81\xfb\x36\xcc\x98\x51\
\x13\xba\x0c\x57\x1c\xc7\x6c\x6c\x6c\x70\xf7\xee\x5d\x3e\xf9\xe4\
\x13\x7e\xfa\xd3\x9f\xda\x7e\xe2\x79\x1e\xa7\x4e\x9d\xe2\xe5\x97\
\x5f\xe6\x9b\xdf\xfc\x26\x4f\x3d\xf5\x14\x3f\xf8\xc1\x0f\xec\x75\
\x8c\x7a\xdc\x94\x65\xb2\x93\xcc\xce\xce\xe2\x79\x1e\x95\x4a\x05\
\x21\x84\xf5\x94\x37\x73\x5e\x5e\xde\xcc\xac\xe4\x79\x0a\x1f\x76\
\xfe\xb8\x9f\xe3\xfb\xdf\x8f\xa3\x8c\xc3\x9d\x37\x6a\xff\x28\xd0\
\x34\xea\xda\xe3\x80\xd4\x61\x81\xd6\xb0\x7a\x1c\xbb\x8a\x70\xd4\
\xe0\xa1\xeb\x20\x74\x8e\x33\xa1\x21\x4c\x3f\x40\xb1\xb4\xab\x68\
\x13\xfb\xaa\x7f\xa2\x48\x57\xdd\x1e\x9e\xbf\x47\xb7\xd7\x45\xaa\
\x28\x0d\xd5\xa0\xc0\xc6\xec\x11\xe9\x24\xa1\x07\x84\x30\x0c\x50\
\x48\x92\x44\x90\xc8\x08\xdf\x17\x74\x3a\x1d\x94\x52\x94\xc2\x12\
\xbe\xef\x53\x2c\x6a\x50\xd7\x57\x5f\x0a\x84\x90\xb8\x09\x29\x87\
\x01\xa4\x49\x25\x0f\x9c\x3d\x66\xaf\x1e\xcb\x83\x94\x03\xef\x57\
\xda\xf7\x3c\xcf\x1f\xb0\x25\x09\xc3\xd0\xda\x94\x58\xef\x33\x15\
\x23\x55\x0c\x91\x84\xb4\x2b\x2a\xa9\x01\x96\x89\xff\xe8\xaa\x02\
\x5d\xc9\x02\xac\x03\x2a\x42\xbf\xcf\x62\x9b\xbe\xee\x02\x2d\x33\
\x99\xd9\x6a\x3b\x03\x69\xbf\x1f\x61\x13\xb5\xbb\xd7\x74\xeb\x75\
\x20\xfe\x56\xa6\x5d\xf2\x98\x9d\xec\xef\x61\xf6\xa9\x79\xe5\x8d\
\xfb\x9e\xbd\xde\x30\xb5\x61\x9e\x0c\xde\xfb\xf0\xf3\x46\x95\x97\
\xb7\x2f\x3b\x49\xc5\x32\x19\x68\x37\x57\x3d\xe6\x1a\xc2\x47\x51\
\xc4\xfe\xfe\x3e\x6b\x6b\x6b\x6c\x6e\x6e\x5a\xd0\x55\xab\xd5\x08\
\x8b\x21\xeb\x9b\xeb\x7c\xf0\xc1\x07\xfc\xf2\x97\xbf\x64\x65\x65\
\x85\xfd\xfd\xfd\x81\x67\xda\x69\xb6\x29\xd7\x2a\x7c\xfd\xeb\x5f\
\xe7\x9f\xfd\xb3\x7f\xc6\xb7\xbf\xfd\x6d\xce\x9f\x3f\x6f\x9f\x5b\
\x31\x2c\x52\x2c\x14\x69\x34\x1a\x7c\xfa\xe9\xa7\xbc\xfb\xee\xbb\
\xfc\xf4\xa7\x3f\xe5\xe6\xcd\x9b\xdc\xb8\x71\x83\x6e\xb7\x4b\xa5\
\x52\xb1\xb6\x52\x86\x79\x72\xed\xc2\x7a\xdd\x1e\x02\x9d\x22\x2a\
\x8a\x22\x7b\x6c\x18\x86\xd6\xce\xd7\x65\x99\x8c\x9d\x9a\x51\x97\
\xf7\x7a\x3d\xab\x55\x31\xed\x93\x24\x09\x6b\x6b\x6b\xfc\xc5\x5f\
\xfc\x05\x7f\xf9\x97\x7f\x49\xb5\x5a\x65\x69\x69\x89\x0b\x17\x2e\
\xf0\xc3\x1f\xfe\x90\xef\x7f\xff\xfb\x3c\xf9\xe4\x93\x4c\x4d\x4d\
\xd9\x34\x47\x51\x14\xb1\xb9\xb9\x69\xeb\x58\xad\x56\x09\xc3\xd0\
\xaa\x1b\x9b\xcd\xa6\xb5\x53\x1b\xf7\x0e\xe4\xbd\x0f\xe6\xf7\x71\
\xcf\x27\x5f\x06\x16\x6b\x12\x46\x3a\x6f\xfb\x83\x00\x57\x0f\x55\
\x45\x38\x94\xb9\xd1\xd9\xad\xb4\x0b\x70\x7a\x8c\x79\xb1\x8d\xa1\
\x62\x7f\xd0\x4d\x07\x52\x67\x40\xf1\x7d\x0f\x2f\x80\x66\xab\x01\
\xc4\x48\x19\x13\xc7\x52\xc7\x6c\x91\x07\x07\xbd\x28\x4a\x10\x9e\
\x87\x10\x3e\x49\xac\x68\xb5\x3a\xc4\xb1\xee\xe8\x53\xd5\x29\x00\
\xdb\xa1\x34\x39\x26\x08\x64\x21\xad\x57\x9a\xff\x4b\x1c\x34\x98\
\x73\x07\xfa\xc3\x48\x1e\x7b\xf5\xab\x05\xb4\xc6\x47\x83\x1f\x2f\
\xe2\xbe\x8d\xed\x7f\x9d\x19\xac\x61\x93\xbc\x5e\x38\x28\xeb\x95\
\xab\x54\x3f\x57\xa1\xf9\x0e\x69\xc8\x05\xfa\x11\xbf\x8d\x5d\x96\
\x5d\xf4\xa8\x41\xb7\x7f\x37\x43\x83\xb9\x66\x96\x71\x3a\x50\xbf\
\x0c\x00\x32\x01\x50\xb3\x5e\x6c\x2e\x40\x3b\x30\xc1\xc8\xfc\x49\
\xc5\x05\x7e\x79\x8c\x8e\x5b\xf6\x38\x35\x5d\xde\xa0\x3a\x0a\xdc\
\x64\xcb\x1d\x76\xdc\xa8\xdf\xa3\x24\xab\xf6\xcb\x63\xef\x86\xa9\
\x05\xb3\x92\xc7\x3e\x4a\x75\x30\xf6\x97\xcb\xec\x34\x9b\x4d\xda\
\xed\xb6\x05\x06\x4a\x29\xaa\xd5\x2a\x41\x10\xb0\xbd\xbd\xcd\x95\
\xab\x57\xb9\xb5\x72\x93\x8f\x3f\xfe\x88\x3b\x77\xee\xb0\xb7\xb3\
\xab\x59\xa8\x6a\xc5\x02\xf9\x6e\xb7\xcb\xff\xf1\x7f\xfe\x88\xef\
\x7d\xef\x7b\xbc\xf2\xca\x2b\x14\x0a\x05\x3a\x9d\x0e\x9d\x4e\xc7\
\xe6\x5c\xbc\x73\xe7\x0e\xef\xbf\xfb\x3e\x7f\xfb\xb7\x7f\xcb\x3b\
\xef\xbc\x63\x41\x1c\xe8\x94\x4f\xf3\xf3\xf3\x00\xb6\x4c\xd7\xbe\
\xca\xbc\xab\x85\x20\xa0\x10\xe8\xb2\xa3\x28\xb2\x2a\x4d\xc3\xbc\
\x45\x51\x44\xbb\xdd\xb6\x41\xb0\xcd\xbc\x13\x45\x11\x61\x18\xe2\
\xfb\xbe\xb5\xd7\xd2\x0b\xf1\xbe\x51\xba\x01\x82\xad\x56\x8b\x95\
\x95\x15\xae\x5f\xbf\xce\xdf\xfc\xcd\xdf\x30\x3f\x3f\xcf\xab\xaf\
\xbe\xca\xef\xfc\xce\xef\xf0\x9d\xef\x7c\x87\x27\x9e\x78\x82\xa9\
\xa9\x29\xe6\xe6\xe6\x68\xb7\xdb\xec\xef\xef\xb3\xbe\xbe\x6e\xed\
\xbd\x0c\x28\x84\xfb\x03\x20\x93\x6a\x44\x8e\x72\x8d\x83\xc0\xe3\
\x38\xca\x38\xdc\x39\x87\x39\x6e\x18\x73\x3d\xc9\xef\x49\xeb\x9a\
\x77\xcc\xb0\x7a\x3c\x54\x1b\x2c\x84\x00\x79\xf0\x65\xd0\x5e\x18\
\x21\x5e\xea\x39\x68\xa8\x56\xb3\xe2\xb6\xab\x0c\x5f\x20\x7c\x49\
\xb1\x14\xe0\x07\xfa\x06\xda\xed\x6e\x9a\x57\xcd\xa4\xd5\x11\x69\
\x30\x3c\x91\x76\x36\x8f\x20\xf0\xac\x5a\x22\x8a\x22\x1a\x8d\x26\
\x6b\x6b\x77\x51\x4a\x7b\xa4\xe8\xc1\x24\xf5\xf2\x29\x28\x3c\x2f\
\x40\x88\x34\x4d\x44\xde\xbd\x28\x0f\xc4\x64\x6e\xed\xc7\xc1\x80\
\x3d\x96\xc7\x72\x18\xc9\x32\xa5\x4a\xa9\x01\xf0\x12\x04\x7d\x3b\
\x28\x03\xb0\x8c\x97\x9a\x01\x58\xa6\x1c\xc3\x58\x98\x3e\x22\xd4\
\xf0\x58\x4a\xd0\xf7\x76\x72\xaf\x3d\x50\x37\xed\x83\x7f\x20\x98\
\x68\xf6\x6f\x96\xfd\xca\x5e\x27\x0b\xe8\xb2\x6c\xd3\xa4\x7d\x2e\
\x0f\x88\x8d\x6a\xd7\x51\xa0\x6d\x18\xe0\xcb\x7e\x3f\x6c\xff\x77\
\x41\x53\x5e\x94\xf7\xec\x31\xd9\x7b\xcf\x6b\x4b\x77\x9f\x2d\xc3\
\x0f\x30\x47\x09\xb0\xb6\x41\x06\x50\xed\xef\xef\xd3\x6e\xb7\xa9\
\x56\xab\x4c\xcf\xce\x02\xd0\x68\x34\xf8\xf8\x93\x4f\xf8\xc9\x4f\
\x7e\xc2\x3b\x6f\xbf\x0d\x28\x84\x27\x08\xc2\x02\x85\x52\x11\xdf\
\xf7\x99\x9d\x9b\xe3\x6b\x5f\xfb\x1a\xa7\x4f\x9f\xe6\xab\x5f\xfd\
\x2a\xdf\xf8\xc6\x37\x2c\x98\x0a\x0a\x05\x16\x6a\x35\xb6\xb6\xb6\
\xb8\x75\xeb\x16\x3f\xfd\xe9\x4f\xf9\x7f\xff\xf6\xff\xe3\xea\xe7\
\x57\x11\x42\x10\x86\x21\x53\x33\x33\x00\x56\xed\xb6\xbd\xb5\x45\
\xb9\x56\x83\xb4\x8e\xbd\x6e\xd7\xac\x90\x29\x14\x8b\x4c\x4d\x4f\
\x83\x54\x74\x3b\x1d\x84\x10\xcc\xce\xce\x52\x2a\x95\x08\xc3\xd0\
\x82\xb0\x99\x99\x19\xaa\xd5\x2a\xbd\x5e\x8f\x66\xb3\x69\x6d\xa0\
\x8c\xb1\x79\xa3\xd1\x00\xa0\x5a\xad\xda\x6d\x3b\x3b\x3b\xc4\x71\
\x9c\x3a\x4a\x29\x6b\xe4\x6e\xde\xe5\x66\xb3\xc9\xeb\xaf\xbf\xce\
\xeb\xaf\xbf\xce\x53\x4f\x3d\xc5\x0f\x7f\xf8\x43\x9e\x78\xe2\x09\
\x7e\xef\xf7\x7e\x8f\x85\x85\x05\x4e\x9c\x38\x41\xbd\x5e\xa7\xd9\
\x6c\x12\x45\x91\x05\x6d\xae\x93\xd7\x30\x71\x6d\xf0\xb2\xef\x86\
\xfb\x4c\x8f\x53\x1e\x65\x16\x6b\x12\x30\x39\x8a\xdd\x3a\x6e\x16\
\x6b\x98\x3c\x50\x2f\xc2\xac\x08\xfb\x4f\x3a\x58\xe1\x06\x33\x34\
\x81\xe5\xfa\x2e\xb6\x41\x10\x10\xc7\xbe\x75\x81\x0d\x0b\x21\x61\
\x58\x24\x91\x31\x9d\x4e\x9b\x42\xa1\x43\x14\x49\x94\x8a\x91\x89\
\xb6\xc3\xd2\xc5\x39\xae\xdf\xb1\x40\x16\x7c\x94\xf2\x75\x1f\x04\
\xe2\x28\xa1\xd3\xed\xd2\xe9\x76\xe9\x45\x3d\xa2\x28\x26\x4e\x5d\
\x71\xa5\x94\x48\x25\x01\x09\x78\xa9\x25\x96\xea\x57\xfc\xc0\x1d\
\x8d\x6f\xe4\xc7\xa0\xea\xb1\xdc\x9f\x98\xf7\x6c\xdc\x3b\xe4\x1e\
\xd3\x8f\xa0\x2d\x44\x3f\x2e\x91\x3b\x51\xbb\x1f\x18\xb4\x4d\x31\
\x1f\xcb\x2c\x49\xdd\x23\x04\xe4\x4e\xe4\x47\xbe\xb3\x1c\xd0\x91\
\x55\xe3\x0d\x80\x80\x1c\x90\x33\xd0\x02\x43\x06\xd6\x6c\x19\xd9\
\x6d\xa3\x64\x14\x23\x77\x3f\x72\xd4\xb2\x46\xa9\x1c\x47\xa9\x02\
\xb3\xbf\x07\x00\x2b\x0a\x21\x13\x3d\xf6\xa5\x87\x4b\x29\xe9\x74\
\x3b\x34\x9a\x75\xf6\xf7\xf7\x51\x52\x51\xab\x55\x99\x9e\x99\x46\
\x49\xc5\xf5\xeb\xd7\xf9\xe8\xe3\x8f\xb8\x71\xed\x06\x77\xef\xae\
\x52\xa9\x96\x29\x95\x4a\x14\xc2\x02\x51\x1c\x13\xf8\x3e\xf3\xf3\
\xf3\x3c\xf5\xd4\x53\x3c\x09\x29\x54\xe8\x00\x00\x20\x00\x49\x44\
\x41\x54\xff\xc2\x0b\x9c\x5c\x5e\xe6\xc2\x85\x0b\xb6\x6c\x4f\x08\
\x5a\xcd\x26\x9f\x7d\xf6\x19\xef\xfe\xe3\x3f\x72\x77\x55\xdb\x3d\
\xed\xee\xec\xe8\xb8\x88\x41\x00\x42\x68\xc3\x74\xfd\x22\xe3\x7b\
\x1e\x32\x08\x90\x49\x82\x1f\x04\x84\xe9\x02\x99\x44\x6b\x2b\x8a\
\xe5\x32\xb5\x5a\x8d\xa8\xdb\xa5\xd7\xed\x12\x86\x21\xd3\xd3\xd3\
\xd4\x6a\x35\xa4\x94\x03\xe0\xa6\x52\xa9\xd8\x10\x0c\x42\x08\x6b\
\xef\x65\xd8\x30\x21\x04\x73\x73\x73\xf6\x38\x63\x53\x35\x35\x35\
\x85\x52\xca\xb2\x63\x66\xde\x00\x0d\xc8\x94\x52\xec\xed\xed\xf1\
\xf6\xdb\x6f\xf3\xf9\xe7\x9f\xb3\xb7\xb7\xc7\x3f\xf9\x27\xff\x84\
\x57\x5e\x79\x85\x4a\xa5\xd2\x9f\x9b\xd2\x6b\x1f\x15\x78\x3c\x9e\
\x53\x8e\x26\xc7\x01\xf4\x26\x2d\x63\x62\x80\x95\xa7\xde\x82\xfc\
\x87\x9c\x1d\x8c\x06\xe9\x78\x05\x4a\xe1\xa5\xb0\x45\xef\x33\xe7\
\x81\x66\xad\x3c\x4b\xdd\xda\x34\x0e\xd2\x0c\x04\x50\x2c\x96\x41\
\x7a\x24\x91\x87\x60\x9f\x56\xab\x45\x12\x25\x48\x14\xbe\xa7\x50\
\xc4\xc8\x44\xa6\xb6\x23\x02\x99\x48\xe2\x28\xd1\x2a\x4a\x5f\x47\
\xa6\xde\xab\x37\x09\x8a\x7b\x14\xcb\x55\x84\x5f\x00\xdf\xd7\x1d\
\x56\x4a\x44\xea\xb9\x18\x86\x1e\xbe\xa7\x33\xdc\x2a\x4d\x8f\x01\
\x6e\x76\xf9\xf1\x00\x6b\xb8\xca\x66\x78\x1b\x0f\x5b\x25\x0f\x3d\
\x6f\xe4\x5e\x53\xc6\x04\x07\xdd\xa7\xa8\x87\x74\x9d\xf1\xf2\x48\
\x54\xe2\xf8\x44\x78\x18\xc0\x8f\x13\x13\x2b\xf7\xb9\xab\xd4\xf3\
\xcb\xbc\x9b\x4a\xff\x35\xb1\xb4\x84\x30\x06\xef\x1e\x52\x0e\xda\
\x63\x99\xf7\x4c\xca\x32\xa4\x4c\xb0\xef\x07\x08\xd1\x21\x22\x46\
\x2a\x45\x9c\xf4\x55\x76\x59\xfb\x9c\x7e\xfc\xac\xd1\xe3\x83\x1b\
\xb7\xcd\x05\x06\x96\x56\x77\xc2\x48\x18\x03\x60\x37\x66\x96\x66\
\xdf\x4c\x0e\xd3\x7e\xee\x3b\xcf\x18\xbe\xeb\xf4\x0c\xfa\xda\xa9\
\x99\x81\x67\xc2\xaf\x28\x91\x86\x9a\xd0\xf1\xf4\x46\xd5\x33\x4f\
\xa5\x38\x0c\xc0\xe5\x05\xa5\xcc\x63\xf4\xb3\x80\x52\x83\xdf\xf4\
\x3b\x02\x4f\xe8\x0f\xe9\x77\x21\xcc\x36\x4f\xff\xd6\x05\xa5\x63\
\x91\x89\xe0\x6e\x22\xaf\xa7\x4f\xde\x19\x50\x15\x0c\x80\x26\xd3\
\x37\xfa\x4e\x0c\x7a\xab\x54\x8a\x24\xea\x11\x84\x05\x14\x1a\x3c\
\xec\xed\x6a\xcf\x3f\x04\x94\x4b\x21\xe5\x52\x99\x42\x58\xe0\xd6\
\xcd\x5b\x7c\xfa\xe9\xa7\x7c\xf8\xe1\x87\x7c\xfa\xe9\xa7\x74\xda\
\x1d\x82\x42\x80\xe7\x41\xb5\x52\x66\x76\x6e\x9e\x52\xa9\xc4\xd9\
\xb3\x67\xf9\xea\x57\xbf\xca\x57\x9e\xfe\x0a\x4b\xcb\x4b\x94\x8a\
\x25\x6b\x0c\xde\x69\xb7\xf9\xfc\xf3\xcf\x79\xff\xfd\xf7\xf9\xf4\
\xd3\x4f\xf9\xf4\xf2\xa7\xb4\x9a\x2d\xba\x9d\x2e\x61\x31\xa4\x5c\
\x2a\x21\x93\x24\xf5\x70\xf5\x50\x68\xbb\x28\xa4\x8e\x21\xe5\xa1\
\xd9\xad\x30\x28\x10\x25\x31\x95\x52\x09\xe1\xf9\x80\xc2\xf7\x3c\
\x54\x10\x30\x3b\x3b\xcb\xdc\xdc\x1c\xe5\x72\x19\x80\xad\xad\x2d\
\xa4\x94\x2c\x2e\x2e\x72\xe6\xcc\x19\xea\xf5\xba\x55\xfb\x85\x61\
\xc8\xa9\x53\xa7\x38\x79\xf2\xa4\xf5\x6e\x2c\x97\xcb\x9c\x3e\x7d\
\x9a\xc5\xc5\x45\xd6\xd7\xd7\xd9\xdf\xdf\xa7\x50\x28\xb0\xb4\xb4\
\x84\xef\xfb\x34\x9b\x4d\xbb\x38\x71\x41\x96\x94\x92\x7a\xbd\xce\
\x2f\x7e\xf1\x0b\x3c\xcf\xe3\xad\xb7\xde\xe2\xef\xfe\xee\xef\xf8\
\xe6\x37\xbf\xc9\xbf\xf9\x37\xff\x86\x27\x9f\x7c\x92\x6a\xb5\x4a\
\xb7\xdb\xa5\xd3\xe9\x58\x33\x19\xe8\x07\xcf\x36\x7d\xc0\xd8\x72\
\x99\xe7\x76\x70\x6e\xc8\x5b\x30\x0c\x9b\x11\x8e\xa6\x42\x3c\x2e\
\xe6\x69\x12\xf0\x7f\x3f\x32\x76\xdc\xc9\xec\x1b\xc5\x58\x8d\x3a\
\x3f\xef\xbc\x61\xe3\xc7\xa1\x18\xac\xc3\x34\xc6\xb0\x15\x9f\xed\
\xd4\x9e\x1a\x58\x29\x99\xed\x32\xb5\xad\x30\x36\x59\x26\xd7\x99\
\x06\x58\x02\xf0\x29\x86\x55\x90\x3e\x49\xec\x69\xd0\xa4\x20\xea\
\x75\xb5\x6a\xd1\x4b\x50\x52\x33\x50\x22\x9d\x98\x92\x38\xd6\x36\
\x1b\xa9\x0d\x49\x21\xf4\xe9\x46\x92\xdd\x7a\x8b\x42\xb8\x83\x17\
\x14\xf0\x0b\x05\x82\xb0\x40\x31\x89\x53\xbb\x2d\x81\xe7\x7b\x69\
\xd8\x06\x05\x52\xa1\x24\x78\xbe\x8f\x8f\x40\xa6\x00\x71\x5c\x1b\
\x1c\x56\xf2\x1e\xf4\xb1\x20\xee\xb1\x01\x40\x27\x28\x63\x4c\x3d\
\x84\x18\xdf\x26\xe3\xe4\xf8\x00\xda\xa3\x01\xb2\x8e\x63\xf8\xd0\
\xd3\xaa\xb1\x5f\x34\xaa\xb5\x7c\x7b\x37\x35\xf8\x8f\x95\x41\x37\
\xff\xbe\xed\xa3\x3b\x29\x00\x8e\x3a\x29\x55\xcf\x0b\x5f\x63\x3a\
\xd5\x25\x91\x0a\x44\x32\xd4\x08\xdd\x05\x4b\xc3\x0c\xc4\x0d\xc0\
\xc9\x5b\x78\x64\xe3\x06\x59\xa3\x7b\xc7\xce\x46\x7f\x40\x28\xac\
\x2d\xa7\x1e\x1b\x14\x52\xa4\x79\xf5\x64\x5f\x2d\xaa\xd9\x3a\x01\
\x7e\x1f\xc8\x98\xa6\xc9\xcb\x55\x37\x8a\xfd\xca\x8e\x67\xc3\x00\
\xd7\x61\x54\x8e\xe0\xb0\x82\x60\xc3\x24\x18\x50\x68\xfe\x7a\x06\
\x88\x39\x73\xa8\xc6\x8f\xa9\x1d\x1c\x32\xb5\x3c\x54\x2e\x89\xa9\
\xe1\xa7\xec\x07\x9e\x35\xf6\x77\x46\xed\x6b\xda\x3a\x8a\x52\x27\
\xa0\x76\x8b\x4e\xa7\xc3\xce\xf6\x36\x9d\x4e\x87\x4a\xa5\x42\xa5\
\x5a\x45\x4a\xc9\xad\x9b\xd7\xb9\x77\xef\x1e\x6f\xbc\xf1\x06\x97\
\x3f\xfb\x9c\x24\xd1\xcc\x52\x18\xfa\x08\x4f\xd0\xeb\xf6\x50\x49\
\xc2\xd9\x53\xa7\xf9\x8d\xdf\xf8\x06\x4f\x3f\xfd\x34\xb3\xb3\x73\
\xd4\x6a\xd5\x34\xd0\xa6\x62\x67\x6b\x9b\x2b\x57\x3e\x67\x75\x75\
\x95\x37\xde\x78\x83\x8f\x3e\xfa\xc8\x06\x2f\x55\x4a\x51\x2a\x16\
\xf1\x3c\x1f\x25\x25\x51\x2f\x22\x49\x62\xc2\x42\x85\x20\x28\x10\
\xf8\x01\x4a\x4a\xca\x95\x8a\x1e\xd3\x01\x25\x25\xbe\xf0\x98\x9e\
\x9a\x06\x01\xfb\xfb\xfb\xec\xee\xed\x53\xa9\x54\x98\x9b\x9b\xa3\
\x58\x2c\x5a\x0f\xc7\x76\xbb\xcd\xc9\x93\x27\x59\x5c\x5c\x24\x49\
\x12\x36\x36\x36\x88\xa2\x88\x20\x08\x98\x9a\x9a\xa2\x56\xab\xd1\
\x6c\x36\xd9\xde\xde\x46\x29\x45\xb9\x5c\x66\x7e\x7e\x9e\xb3\x67\
\xcf\x5a\x20\xe4\x79\x1e\x8b\x8b\x8b\x2c\x2f\x2f\xb3\xb6\xb6\x06\
\xc0\xfc\xfc\x3c\xb5\x5a\x8d\xdb\xb7\x6f\x73\xef\xde\x3d\xab\xfe\
\x34\x06\xf8\x51\x14\xf1\xee\xbb\xef\xf2\xd6\x5b\x6f\xf1\xc1\x07\
\x1f\xf0\xf2\xcb\x2f\xf3\x7b\xbf\xf7\x7b\xbc\xf8\xe2\x8b\x16\x44\
\xf5\xd5\xf7\x7d\x9b\x2c\x33\x0f\x76\xbb\x5d\x0a\x41\x49\xbf\x5b\
\xb8\x7d\xcf\x7e\xcb\x80\xab\xcc\xfb\x97\x2e\x24\x94\x1c\xff\x5e\
\x3e\x4c\x76\x67\xd4\x79\x87\x29\x63\xd8\x79\x93\x94\x31\x89\xaa\
\x71\x92\xb2\x87\x95\xf3\x50\x55\x84\xe0\x02\x86\x7c\xb4\x69\x90\
\xbc\x6b\x48\xeb\xae\x92\x85\xf0\x29\x86\x5a\x5f\x9e\x24\x0a\x90\
\x48\x95\x10\xc7\x5d\x5a\xad\x16\x52\xc5\xf8\xbe\x40\x0a\xe1\xbc\
\xbc\x11\xbe\xaf\x6c\x8c\x2b\x99\x48\x84\xe7\xd1\xeb\x45\xec\xef\
\xd7\x29\x84\x05\x1b\xec\x2d\x29\x25\x36\x44\x84\xef\xeb\x09\xc6\
\x17\x85\x94\x09\x70\xec\x1c\x10\xb9\x03\xf4\x63\x79\x2c\x0f\x46\
\xb2\x69\x54\xf2\x8f\x19\xf5\x37\x0f\x20\x64\xf3\x87\x1a\x8f\x42\
\x77\x05\x6d\xa2\x50\x8b\x44\xdb\xb9\xe4\x01\x29\x97\xe5\x31\x65\
\xbb\x7f\x6d\xdd\x53\x50\x30\x6a\xe5\xe7\xd6\xc9\x1c\x93\x67\x63\
\x94\x07\xe2\x5c\x30\x94\x0d\x05\x31\x49\xea\x13\x17\x20\x65\xd9\
\xb8\x81\x96\x3e\xa6\x95\x80\x7b\x3f\x79\xf7\xe8\xd6\xcb\xbd\xee\
\x81\x63\x9d\xe3\xb3\x31\xca\xcc\xc7\x00\x63\x03\xa8\x5c\xf5\xb0\
\x94\x92\x4e\xa7\xc3\xc6\xe6\x06\xdd\x4e\x07\x05\x2c\x2e\x2c\x50\
\xab\xd5\xb8\xbb\xb6\xc6\x7b\xef\xbd\xc7\x7b\xef\xbd\xc7\xda\xda\
\x5a\xea\x15\xa8\x98\x9a\xaa\x52\x49\xd9\xa1\x62\xb1\x48\xb5\x5a\
\xe3\xa9\x27\x9f\xe2\xd5\x6f\xbc\xc6\xc5\x8b\x97\x98\x9a\xd2\x8e\
\x44\x51\x2f\x62\x73\x63\x93\x7a\xbd\xce\x95\x2b\x57\xf8\xc9\x4f\
\x7e\xc2\xcd\x9b\x37\xd9\xda\xda\xb2\x9e\x7b\x36\x0e\x56\xac\x00\
\x1d\xab\xca\x13\x02\x2f\x28\x10\xf5\x22\x7c\xcf\xa7\x5c\x2a\x51\
\x2c\x16\xe9\xf5\x7a\xb4\x7b\x3d\xca\xa9\x3a\xb0\xd3\xe9\xb0\xbd\
\xbd\x6d\xef\x21\x0c\x43\x16\x17\x17\xf1\x7d\x9f\xb5\xb5\x35\x76\
\x77\x77\x89\xe3\x98\x0b\x17\x2e\x70\xe6\xcc\x19\x1a\x8d\x06\x9f\
\x7d\xf6\x19\xad\x56\x8b\xb9\xb9\x39\x4e\x9e\x3c\xc9\xd4\xd4\x14\
\xbd\x5e\x8f\xeb\xd7\xaf\x53\xaf\xd7\x99\x9f\x9f\x67\x6e\x6e\x8e\
\x6e\xb7\xcb\xed\xdb\xb7\x59\x5d\x5d\x45\x29\x65\x55\x8b\x26\x54\
\xc5\xc6\xc6\x06\xf3\xf3\xf3\x9c\x3f\x7f\xde\x06\x2c\x35\xe1\x18\
\x6e\xdf\xbe\x4d\xbd\x5e\x47\x29\xc5\xfc\xfc\x3c\x77\xee\xdc\xb1\
\x86\xfb\x1f\x7f\xfc\x31\xbf\xfb\xbb\xbf\xcb\xf7\xbe\xf7\x3d\xeb\
\x28\x60\xc2\xa5\xb8\x71\xc6\xfa\xd9\x18\x86\xf5\xf9\x49\x80\xc4\
\xa3\x39\x4f\x1d\x15\x50\x1d\x77\x19\x0f\xf2\x3a\x0f\x1d\x60\xc1\
\x64\xaa\x32\xd7\x2b\xc6\xdd\xe6\x79\x3e\xbd\x42\x0c\x42\xa2\x94\
\x44\x88\x04\x45\x42\x92\x68\x5d\x78\xb7\xa7\x53\xef\x78\x9e\x22\
\x8e\x12\x4c\x30\x52\x91\x1e\x6f\x27\x11\xe5\x91\x44\x31\xcd\x66\
\x0b\xcf\xf7\x28\xf8\x01\x61\x21\xa4\x57\xd5\x91\x76\x03\x2f\xa0\
\xe0\x17\xf0\xbd\x00\x11\x78\x78\x22\x48\xeb\xa2\x50\xc2\xb0\x6f\
\xe3\xd1\xef\xfd\x0e\xc4\xc7\x6d\xf7\xf1\x20\xaf\xf3\xa8\x94\xf1\
\x65\x92\xc3\x0e\x0a\xc7\xb1\xca\x73\x27\x69\xc3\x10\xbb\xc0\xc4\
\xcd\x9e\x50\x28\x14\xfa\x91\xdd\x45\x72\xe0\x8d\xcf\x02\xa8\x61\
\x40\xcb\x39\x03\xb3\x50\x71\xcb\x70\x01\x84\xeb\x99\x98\x65\x84\
\xb2\x80\xc4\x5c\x6b\x50\x85\x38\x78\xbf\x59\x8f\x45\x53\x0d\xb7\
\x66\x79\xcc\xd3\x71\x0f\xd8\xa3\x00\x54\x1e\x88\x1c\x77\xdc\xb0\
\xb4\x3c\xd9\x77\xc4\x3c\x53\x17\x64\x9a\x10\x05\x26\x38\x66\xb7\
\xdb\x65\x75\xf5\xb6\x36\x2a\x9f\x9a\x66\x7e\x7e\x9e\x5e\xaf\xc7\
\xbb\xef\xbe\xc7\x9b\x6f\xfe\x03\x57\xae\x5c\x61\x7b\x7b\x8b\x6e\
\xb7\xcb\xd9\xb3\x67\x11\x42\xb0\xbf\xbf\x4f\x18\x16\x79\xee\xb9\
\xe7\x78\xea\xa9\xa7\x58\x5e\x5e\xe6\xd4\xc9\xd3\x2c\x2e\x9c\xa0\
\xd7\x8b\xac\x8a\xf7\xea\xd5\xab\xbc\xf5\xd6\x5b\xdc\xbe\x7d\x9b\
\x5b\xb7\x6e\xb1\xbb\xbb\x6b\x19\xa1\x20\x08\xac\x47\x9f\x52\xca\
\x86\x33\x30\xe3\xb4\xf1\xfa\x33\x1e\x7e\x41\x10\x68\x7b\x30\xa5\
\x6c\x98\x84\xad\xad\x2d\xcb\x3a\x99\x68\xf3\x2e\x83\x34\x3f\x3f\
\x6f\xcb\xdd\xdc\xdc\xa4\xd1\x68\x58\x26\xea\xe2\xc5\x8b\xd6\x33\
\xb2\xdd\x6e\x93\x24\x09\x95\x4a\x85\x13\x27\x4e\x30\x35\x35\xc5\
\xf6\xf6\x36\x8d\x46\x83\x5b\xb7\x6e\xb1\xbc\xbc\xcc\xc2\xc2\x02\
\xfb\xfb\xfb\xd4\xeb\xda\x2e\x6d\x7e\x7e\xde\x7a\x33\xba\x31\x15\
\x2f\x5d\xba\x44\xad\x56\x63\x65\x65\x85\x62\xb1\x48\x10\x04\xdc\
\xbd\x7b\xd7\x3e\xa7\xbf\xfa\xab\xbf\xe2\x83\x0f\x3e\xe0\xb7\x7f\
\xfb\xb7\x79\xee\xb9\xe7\xf8\xfe\xf7\xbf\xcf\x99\x33\x67\x6c\x48\
\x09\xa3\xba\x34\x69\x76\x7a\xdd\x7c\xa7\x2a\xa3\xf9\x79\x90\xe0\
\xe2\x30\x32\x69\x3d\x7e\x1d\xc0\x15\x7c\x41\x00\xcb\x48\xde\x20\
\x9b\x1d\x4c\x4d\x27\x2c\x16\x8b\x36\x10\xa8\x10\x3d\x14\x55\xa4\
\x8c\x49\x92\x1e\x89\xd4\x54\x72\x92\x24\x88\x06\xd6\x5b\x50\x88\
\xc1\x15\xae\xe9\xb4\x71\x1c\x83\xef\xe1\xa5\x6c\x56\xa7\xd5\x61\
\x67\x67\x47\xc7\x4c\xe9\x4d\x51\x0a\x43\xc2\x20\xd4\x69\x44\x82\
\x90\xc0\x2f\x60\xed\x35\x84\x42\x2a\x0d\xd6\x10\xe3\x1b\xfb\x7e\
\x1f\xfc\x24\x2a\xc2\x49\x00\xc9\x44\xea\xbd\x87\x50\xd7\x87\x51\
\xc6\xa3\x24\xc7\x41\x53\x8f\x3a\xfe\x28\x03\x9a\x11\x77\xa2\xee\
\x2f\x60\xfa\xaa\x43\x33\x31\x9b\xd5\xb5\x54\x10\x3b\xea\xc1\xac\
\x27\xa0\xdb\x87\x5d\x76\xcb\x05\x38\x02\xcf\xb2\x2d\x79\x9e\x7f\
\xd9\x7a\x9a\x7d\x79\x81\x16\xb3\x2a\xba\x2c\x9b\x66\x24\xeb\x41\
\xe7\x79\x9e\x35\x69\x1b\xd5\x3e\xc7\xc1\x5e\x8d\x3a\x36\xcb\x46\
\xe5\xed\xcf\x63\xb8\xb2\x8b\x4f\x57\x86\x79\x5e\x9a\xb1\xcf\x38\
\x2d\x98\x08\xe2\x3b\x3b\x3b\x6c\x6e\x6e\xd2\x6e\xb7\x59\x5a\x5a\
\x64\x7e\x7e\x1e\x21\x04\x3b\x3b\x3b\xbc\xf3\xce\x3b\xbc\xf9\xe6\
\x9b\xdc\xb8\x71\x93\x38\x8a\x08\x8b\x21\xd5\x6a\x95\xa9\xa9\x29\
\x0b\x52\x2e\x5c\xb8\xc0\x6b\xaf\xbd\xc6\xa5\x4b\x97\x34\x73\x93\
\xaa\xb2\x8b\xc5\x22\xf7\xee\xdd\xe3\xdd\x77\xdf\xe5\xe7\x3f\xff\
\x39\x57\xaf\x5e\xa5\xd5\x6a\x01\x3a\x90\xb4\xb1\x41\xea\xa6\x86\
\xe8\xc5\x62\xd1\x82\x94\x5a\xad\x46\xbb\xdd\xb6\xa1\x1b\x0c\x83\
\xea\x9a\x8c\x28\xa5\xd8\xdd\xdd\xb5\xea\xb8\xa5\xa5\x25\x40\x7b\
\xff\x99\x80\xa6\x53\x53\x53\x36\xa4\x43\xa7\xd3\xe1\xd6\xad\x5b\
\x74\xbb\x5d\x6a\xb5\x1a\x53\x53\x53\x9c\x3d\x7b\x96\x46\xa3\xc1\
\xf5\xeb\xd7\xad\xdd\x6f\xb9\x5c\xe6\xc4\x89\x13\x94\xcb\x65\xcb\
\xd6\x29\xa5\xa8\x54\x2a\xcc\xcc\xcc\x50\x2e\x97\x2d\xe8\xf2\x7d\
\x9f\xd9\xd9\x59\xa6\xa7\xa7\x69\xb5\x5a\xac\xad\xad\xd1\x6c\x36\
\x53\x36\xaf\xca\x99\x33\x67\xec\x5c\x64\x8c\xdb\xd7\xd6\xd6\xf0\
\x7d\x9f\x99\x99\x19\xb6\xb6\xb6\xf8\x4f\xff\xe9\x3f\x71\xfe\xfc\
\x79\x2e\x5f\xbe\xcc\xbf\xfe\xd7\xff\x9a\xe7\x9f\x7f\x9e\x72\xb9\
\x6c\x01\x31\x40\xbb\xdd\xc6\x13\x61\xfa\x52\x1c\x7c\x8f\x06\x17\
\x15\x39\x2a\x42\xfb\xfb\xfe\x17\xae\xc7\x3d\x9e\x4d\xaa\x82\x3b\
\xcc\xf5\x0e\x33\x26\x8e\x3b\xf6\x7e\xeb\xe7\xff\xc7\xff\xf8\x1f\
\xff\x00\x8e\x87\xf2\x3e\xca\xc0\x93\x37\xc8\xe4\x0d\x28\x6e\xd0\
\x3b\xa5\x0c\x7d\x3f\x18\x6d\xba\xbf\x0a\xf6\x88\xe3\x64\x60\x00\
\x1f\x48\x75\x03\xe0\x09\x02\xe3\xa9\x02\x7d\xfa\x5c\x4a\xc2\x74\
\x7b\x10\x14\xd2\xe0\x75\x81\x35\x92\x15\x9e\x09\xb8\x78\xff\x39\
\x09\xdd\x7b\xbd\x9f\x63\x8e\xa3\x8c\x49\x8f\xf9\xb2\x94\xf1\x65\
\x91\x49\x3a\x6a\x16\x78\x1c\x05\x80\xe6\x25\x8c\xce\x03\x2b\x66\
\x22\x76\x8f\x31\x60\x4b\x1b\xb9\x0f\x1a\x9d\x9b\x73\xdd\xfe\x39\
\x8a\x89\x11\xc2\xb1\x85\xe2\xa0\x7a\x2f\x0b\xd4\xb2\xf7\x3f\x4a\
\x9d\x36\x8c\xf5\xc9\xde\x6f\xff\xbe\x0f\x32\x64\xae\x8c\x63\x99\
\xdc\x6d\x59\x36\x29\x2f\x2e\x95\x3b\x8e\xb9\xdb\x7d\xe7\xb7\xbb\
\x3f\x5b\xa6\xf1\xec\x74\x99\x47\xdb\x3e\xf4\xef\xcd\x7d\x3e\xee\
\xc7\x2d\xa3\xd7\xeb\xb1\xb9\xb9\xc9\xe6\xe6\x26\x4a\x29\x66\x67\
\x67\x79\xea\xa9\x27\xd9\xdc\xdc\xe4\xea\xd5\xab\xfc\xf5\x5f\xff\
\x35\x6f\xbe\xf9\x26\x7b\x7b\x7b\xd4\x6a\x35\x4a\xe5\x12\xb3\xb3\
\xb3\x9c\x3a\x75\xca\xe6\x21\x7c\xf1\xc5\x17\xf9\x97\xff\xf2\x5f\
\xf2\x95\xaf\x7c\x05\x21\x04\xdd\x6e\x0f\xdf\x0b\xe8\x75\x7b\x7c\
\xfc\xf1\xc7\xbc\xfe\xfa\xeb\xfc\xdd\xdf\xfd\x1d\x2b\x2b\x2b\x96\
\x5d\x32\x6a\xbc\x42\xa1\x30\xe0\x95\x67\x80\xd4\xec\xec\x2c\x61\
\x18\xd2\x6a\xb5\x6c\x0c\xb6\x42\xa1\xc0\xd4\xd4\xd4\x80\x2a\xad\
\x58\x2c\xb2\xb5\xb5\x65\xd3\xaa\xf5\x7a\x3d\x5a\x2d\x6d\x3f\x56\
\x2e\x97\xad\xed\x53\x92\x24\xec\xee\xee\xb2\xb3\xb3\x03\xc0\x99\
\x33\x67\x58\x5c\x5c\x44\x4a\xc9\xd6\xd6\x16\x2b\x2b\x2b\x56\x1d\
\x67\x54\x7c\x4a\x29\x76\x76\x76\xac\x8d\x96\xef\xfb\x4c\x4f\x4f\
\xb3\xb0\xb0\x40\x10\x04\xdc\xb9\x73\x87\xcd\xcd\x4d\xcb\x74\x4d\
\x4f\x4f\x23\xa5\x64\x63\x63\x83\x24\x49\x98\x9e\x9e\x66\x6e\x6e\
\x8e\x7a\xbd\xce\xda\xda\x1a\x37\x6e\xdc\xe0\x1b\xdf\xf8\x06\x2f\
\xbd\xf4\x92\x05\xa6\x46\xd5\xa9\x94\x0e\xf7\xf0\xc9\x27\x9f\x70\
\xed\xda\x35\x4a\xa5\x12\x67\xce\x9c\xa1\x9a\xda\xbd\xf5\xfb\x83\
\x51\x05\x4f\xbe\x10\xe8\xbf\xb8\xe9\x7e\xf5\x70\x34\x21\x47\x39\
\xf6\x57\x95\xc5\xfa\x42\x19\xac\x3c\x71\xc1\x52\x76\x50\x05\x13\
\xbe\x41\x0f\xf2\x3a\x45\x41\x91\x62\xb1\x94\x06\x6e\xab\xa4\x9d\
\x1f\x4b\x41\xbb\x83\xaa\x05\x5c\x9e\x87\x97\x98\x60\x8a\x69\x1e\
\xc3\x48\x27\xec\x2c\x16\x42\xda\xed\xb6\xcd\x1d\x65\x3a\xb9\xef\
\x4b\xed\xf9\x98\xae\x12\xf4\xdf\xfb\x67\x8e\x26\x69\x8f\xc7\x0c\
\xd6\x97\x57\x8e\x73\xc5\x77\x5c\x2a\xac\x71\x80\x62\x14\x30\x18\
\x65\xc7\x34\x0c\xec\xb8\x2c\x94\x72\x6c\x49\x86\x3d\xeb\x61\x6c\
\x9b\xd9\x37\x58\x9e\x6b\xc0\x9d\x7f\x5f\x59\x36\x4b\x47\xab\x57\
\x36\x94\x5d\x96\x49\xcf\x3b\xef\x8b\x04\xfd\xc3\xc0\xaa\x11\xa5\
\xd4\x01\x80\x35\xb0\x4f\xf5\x6d\xeb\x4c\xdc\xbf\x7a\xbd\xce\xe6\
\xe6\x26\x9d\x4e\x87\x93\x27\x4f\x72\xe1\xc2\x05\x3c\xcf\xe3\xf6\
\xed\xdb\x5c\xbe\x7c\x99\x8f\x3e\xfa\x88\xcd\xcd\x4d\x16\x17\x17\
\x99\x99\x99\xa1\xd7\xeb\xd9\x68\xed\xcd\x66\x93\xb9\xb9\x39\x9e\
\x7f\xfe\x79\x9e\x7d\xf6\x59\x82\x20\x60\x6b\x6b\x0b\xa5\x34\x73\
\xb5\xb9\xbf\xc5\x7b\xef\xbd\xc7\xcf\x7f\xfe\x73\x76\x77\x77\xa9\
\xd5\x6a\x36\xde\x53\xbd\x5e\x27\x8e\x63\x6b\x67\xe4\x02\x73\xa3\
\xc6\x33\xa1\x0f\x00\x0b\xc6\x66\x66\x66\xac\xc1\xb7\x01\x3c\x06\
\xd0\xf4\x7a\x3d\x6b\x67\x15\x86\x21\x67\xce\x9c\xb1\x01\x4b\x0d\
\x3b\x27\xa5\xe4\xfc\xf9\xf3\x9c\x3b\x77\x0e\x21\x04\xbd\x5e\x8f\
\x1b\x37\x6e\x00\xb0\xbc\xbc\xcc\xf4\xf4\x34\xd3\xd3\xd3\x74\xbb\
\x5d\x36\x36\x36\x68\x36\x9b\xa9\xba\x74\x8a\x42\xa1\x40\xb5\x5a\
\xc5\xf3\x3c\x1a\x8d\x06\x3b\x3b\x3b\xec\xec\xec\x50\x2c\x16\xb9\
\x78\xf1\x22\xa5\x52\x89\x9d\x9d\x1d\x84\xd0\x21\x25\x5a\xad\x16\
\x8d\x46\xc3\xa6\xf2\x69\x36\x9b\xcc\xcf\xcf\xf3\xe4\x93\x4f\x72\
\xf9\xf2\x65\x94\x52\x36\xc1\x75\xb9\x5c\xa6\xdb\xed\xb2\xbf\xbf\
\xcf\x1b\x6f\xbc\xc1\xec\xec\x2c\x2f\xbc\xf0\x02\xcb\xcb\xcb\x56\
\x55\x1f\x86\x21\x9d\x76\x9c\xbe\xfb\xc3\xdf\x93\x2f\x23\x83\x35\
\xec\xfc\xe3\x28\xe3\x38\xae\x73\xbf\xfb\x1f\x6e\x1c\x2c\x67\x90\
\x74\x7f\x67\x8f\x19\x36\xc0\x1a\xe4\x1f\x04\x85\x54\x05\xa8\xd2\
\x8e\xa9\x3d\x03\xcd\x0a\xad\xd9\x6c\x02\x82\x66\x53\xe7\xbd\xea\
\x7b\x69\xf4\x57\x73\x71\x2c\x49\xa2\x98\x24\x48\xb4\x97\x91\x94\
\xf4\xda\x1d\x1a\x08\x36\x53\xd6\xaa\x50\x08\x09\x82\x02\xbe\x5f\
\x40\x78\x3e\xbe\x0f\x1e\x09\x02\x90\x48\xfc\x47\x0f\x9f\x3e\x96\
\x2f\x99\x1c\x65\x30\xb9\x7f\x36\xeb\xe0\x04\x0c\x7d\xcf\x42\x33\
\xf1\xb9\xf1\xb0\x82\x20\x40\x01\xb1\x94\x24\x4a\xa1\xe2\x58\xff\
\x55\x19\xc3\x79\xdf\x07\x87\xc5\x72\x2e\xa4\xb7\x4b\x70\x13\x35\
\xe7\x49\x56\xf5\x97\xdd\x9e\xfd\x98\x7d\x42\x88\x01\xfb\xb1\xec\
\xe2\xca\x5d\xbc\x09\xd5\xcf\xcf\x98\xc7\x4a\x3d\x4c\x19\x06\x4a\
\xf3\x40\x6e\xb6\xae\xf6\x3e\xbd\x7c\x9b\x35\xf3\xdd\xb8\xff\xc7\
\x71\x4c\x1c\xc7\xac\xad\xad\x59\x7b\xaa\xb3\x67\xcf\x12\x86\x21\
\x7f\xf4\x47\x7f\xc4\x9d\x3b\x77\x68\xb7\xdb\x04\x41\xc8\xcc\xcc\
\x1c\x7b\x7b\x75\x3a\x9d\x1e\xe7\xce\x9d\x43\x4a\xb8\x72\xe5\x2a\
\x2f\xbe\xf8\x22\x3f\xf8\xc1\x0f\x78\xfa\xe9\xa7\x69\xb5\xda\xd4\
\xeb\x75\xab\x16\x7b\xef\xbd\xf7\xf9\xf1\xeb\x3f\xe6\xf3\xcf\x3f\
\xa7\x58\x2c\x72\xe9\xd2\x25\xd6\xd7\xd7\x59\x5d\x5d\x05\xb0\x9e\
\x79\x49\x92\xb0\xb0\xb0\x60\x41\xd7\xc2\xc2\x82\x0d\xa7\x50\xaf\
\xd7\x6d\x34\x75\x13\x1a\x21\x08\x02\x6b\x70\x5e\x2a\x95\xf8\xd6\
\xb7\xbe\x65\x8f\x05\x9d\x91\xa3\x58\x2c\x32\x3b\x3b\xcb\xe2\xe2\
\x22\xa0\x03\x7f\xfa\xbe\x4f\xad\x56\xb3\x01\x73\xdf\x7f\xff\x7d\
\x0a\x85\x02\xd3\xd3\xd3\x94\x4a\x25\x66\x66\x66\x6c\x9c\x2b\xdf\
\xf7\x39\x71\xe2\x04\xbb\xbb\xbb\xb4\x5a\x2d\x2a\x95\x0a\xf3\xf3\
\xf3\x56\x3d\xf8\xfe\xfb\xef\xb3\xb2\xb2\xc2\xc2\xc2\x02\x3f\xf8\
\xc1\x0f\x10\x42\xf0\xe6\x9b\x6f\xb2\xb5\xb5\x65\x41\x67\xad\x56\
\xe3\xe4\xc9\x93\x9c\x3d\x7b\x96\xa9\xa9\x29\x4a\xa5\x12\xed\x76\
\x9b\x9f\xfc\xe4\x27\xac\xac\xac\xf0\xce\x3b\xef\xe0\xfb\x3e\xff\
\xfe\xdf\xff\x7b\xe6\xe7\xe7\xf9\xc3\x3f\xfc\x43\x16\x17\x17\x11\
\x42\x70\xe7\xce\x1d\xfe\xec\xcf\xfe\x8c\x95\x95\x15\x7e\xff\xf7\
\x7f\x9f\x1f\xfe\xf0\x87\x84\x61\xc8\xf6\xf6\x36\xa8\x60\xe4\x7b\
\xf9\x65\x5e\x94\x7e\x59\x98\xac\xa3\x2c\x70\x1f\xaa\x8a\x70\xd8\
\x00\x96\x1d\x30\xcc\x5f\xf7\x63\x5c\xb4\x4d\x5a\x1d\x93\xf2\x43\
\xaf\x74\x94\x75\x27\x97\xaa\x9f\x72\xc3\x44\xc8\xed\x0f\xc2\x5e\
\xdf\x2b\x43\x2a\x3c\x5f\xab\x01\x85\x00\x3d\xd6\xf6\x6d\x39\xfa\
\x99\xe2\x43\x0a\x61\x48\x21\x08\x52\x00\x17\x60\xf2\x14\xda\xd8\
\x3a\x0f\xa1\xcd\xee\xf7\x98\x5f\xa7\x32\x7e\xd5\x24\xdb\x37\x8c\
\x1c\x6e\x20\x19\x54\x8f\x65\xfb\x19\x30\x60\x7b\x95\x05\x27\x89\
\x92\xe0\x79\x69\x0c\x29\x69\x99\xdd\x2c\xcb\x33\x4c\x45\x37\xb0\
\xdd\x68\x2c\x86\xb0\x57\xc3\xd4\x70\xa3\xbe\x67\xaf\x35\x8e\x19\
\x33\xc6\x02\x2e\x90\xcb\x82\x9a\xbc\x85\xe0\xb0\xba\x8d\x52\x11\
\xe6\xa9\x0b\xdd\x8f\x3f\x66\xbf\xf5\x68\xce\x80\xac\x01\x40\x25\
\xf2\x01\x96\x11\x63\xd4\xbe\xbd\xbd\xcd\xfa\xfa\x3a\xdb\xdb\xdb\
\x3c\xf3\xcc\x33\xbc\xf8\xe2\x8b\x5c\xbb\x76\x8d\x3f\xf9\x93\x3f\
\xe1\x93\x4f\x3e\x61\x67\x67\x87\x46\xa3\x61\x03\x72\xfa\xbe\x4f\
\xa9\xa4\xf3\xb6\x9e\x3a\x75\x8a\x67\x9f\x7d\x96\xef\x7e\xf7\xbb\
\x3c\xf1\xc4\x13\x6c\x6e\x6e\xd2\xeb\xf5\x78\xe2\x89\x27\x58\x5f\
\x5f\xe7\x8f\xff\xf8\x8f\x79\xe3\xef\xff\x9e\x95\x95\xdb\x96\xed\
\x59\x5d\x5d\xa5\xd9\x6c\x52\x2e\x97\x99\x9a\x9a\x62\x7a\x7a\x9a\
\x93\x27\x4f\x52\xaf\xd7\xf1\x7d\xdf\xda\x5a\xbd\xf2\xca\x2b\x2c\
\x2d\x2d\xb1\xbb\xbb\xcb\xe6\xe6\x26\xb3\xb3\xb3\xd6\x60\xfd\xd2\
\xa5\x4b\x54\xab\x55\x5a\xad\x16\x77\xee\xdc\xe1\xc4\x89\x13\xac\
\xaf\xaf\xd3\x6c\x36\xad\xbd\x14\x60\x55\x8b\x57\xae\x5c\x61\x73\
\x73\x93\xa9\xa9\x29\x16\x16\x16\xa8\x54\xb4\xe3\xd2\xce\xce\x0e\
\xfb\xfb\xfb\x56\x33\xf1\xcc\x33\xcf\x58\x36\x6c\x77\x77\x97\xcb\
\x97\x2f\xd3\x6c\x36\x99\x9a\x9a\xe2\xdc\xb9\x73\x9c\x3b\x77\x8e\
\xb5\xb5\x35\x3e\xfa\xe8\x23\x9a\xcd\x26\x8b\x8b\x8b\x74\x3a\x1d\
\x96\x96\x96\xa8\xd5\x6a\x7c\xfe\xf9\xe7\xcc\xcc\xcc\xd8\xfc\xb6\
\x0b\x0b\x0b\x9c\x3e\x7d\x9a\x4a\xa5\xc2\xcf\x7f\xfe\x73\xde\x7c\
\xf3\x4d\xd6\xd6\xd6\xb8\x7b\xf7\x2e\xcb\xcb\xcb\xbc\xf6\xda\x6b\
\x36\x07\x62\xb5\x5a\x65\x77\x77\x97\x5b\xb7\x6e\x51\x2c\x16\x99\
\x9b\x9b\x63\x69\x69\x09\x29\x25\x57\xae\x5c\xe1\x93\x4f\x3e\xb1\
\xf7\xff\xc4\x13\x4f\xd0\x68\x68\xfb\x35\x93\x83\xf3\x00\xc0\x1e\
\x25\x56\xad\x78\x0c\x63\xeb\x03\x04\x72\xc7\x01\x8c\x1e\x16\xd0\
\x9c\xf4\x3a\xc1\xb0\xc1\x3b\x2b\xf7\xa3\x86\x1a\x36\x08\xe6\x6d\
\x33\x29\x0b\xb2\x54\xbd\x19\x58\x34\x70\x8a\x50\x4a\x5a\x6f\x11\
\x9d\x4f\x70\x9f\x72\x59\xbb\xfa\x96\x8a\x15\x04\x3e\x32\x81\x5e\
\x2f\x4a\xcb\x34\x13\x86\x8e\xd2\x5b\x08\x4b\xc8\x28\xa6\xd7\xee\
\x50\x2c\x16\x28\x94\x42\x1b\x83\xc4\xb8\xfd\x96\x4a\xa5\x54\xfd\
\x58\xc1\x0f\x02\xfc\x24\xc1\x2b\x04\x14\x7c\x0f\xa1\x14\x52\x1e\
\x1c\x8c\xcd\x80\x9d\x67\x94\xfb\x45\xca\x63\xf0\xf3\x60\x64\xdc\
\xf3\xcd\xcb\xf9\x76\x58\xc9\xaa\xbf\x5c\xc6\x29\xaf\x2e\x79\x2c\
\x4f\xe6\xd0\x03\x40\xcb\x7c\x77\x8d\xdc\xe3\x38\xb6\xaa\x9b\x52\
\xa9\x44\xa7\xdb\x03\x21\xf0\x02\x9f\x42\x31\x44\x09\x06\xd4\xe8\
\x49\x92\x50\x2a\x95\xac\x8d\x23\x4e\x62\x77\x01\x69\xfe\x40\x50\
\xa2\x6f\x70\xed\x82\x34\x03\x20\x46\x45\xb7\xce\xde\xfb\xb0\xfe\
\x66\xec\x5b\xcc\x42\xcb\x2c\xd0\x2c\x83\x9d\x24\x90\xf4\xcf\x75\
\x0d\xfd\xe1\xe0\x24\x36\x6c\x42\x73\xc3\x1c\x64\x81\x96\x7b\xbc\
\x3b\x4e\x98\x77\x22\x8f\x95\xca\x53\xc7\x66\xc3\x29\xe4\xb6\x8b\
\xe3\x50\x90\xad\x4b\x92\x68\xf3\x87\x7a\xbd\xce\xde\xde\x1e\xbd\
\x5e\x8f\x17\x5f\x7c\x91\xa7\x9f\x7e\x9a\x37\xde\x78\x83\xff\xf2\
\x5f\xfe\x0b\x77\xee\xdc\xb1\x86\xe6\x9d\x4e\x87\x5e\xaf\x47\xb1\
\x58\xa4\xdd\x6a\x53\xad\xd6\xf8\xd6\xb7\xbe\xc5\xb7\xbe\xf5\x2d\
\xe6\xe6\xe6\xf0\x7d\x9f\xed\xed\x6d\xaa\xd5\x2a\x27\x4f\x9e\xe4\
\xe3\x8f\x3f\xe6\x4f\xff\xf4\x4f\x35\x58\x08\x35\x2b\xb4\xb3\xb3\
\x43\xbb\xdd\xb6\xec\xa7\x31\x46\x9f\x9b\x9b\xb3\xc9\x9f\x8d\x3d\
\xd5\xcc\xcc\x0c\xb7\x6e\xdd\xa2\x5e\xaf\xdb\x72\x8d\xea\x6f\x79\
\x79\x99\x4a\xa5\xc2\xad\x5b\xb7\x58\x5f\x5f\xe7\xd9\x67\x9f\xe5\
\xb3\xcf\x3e\x43\x4a\xc9\xab\xaf\xbe\x4a\xab\xd5\xe2\xc6\x8d\x1b\
\x34\x1a\x0d\x82\x74\x11\x1c\xa4\x41\x46\xdb\xed\x36\x37\x6e\xdc\
\xc0\xa8\xd9\xcc\xfb\x66\xee\x7f\x6f\x6f\x8f\x1b\x37\x6e\xd0\x6e\
\xb7\x29\x16\x8b\x94\xcb\x65\x6b\x1c\xdf\xed\x76\xb9\x7a\xf5\xaa\
\x55\x3d\xae\xae\xae\x12\x86\x21\x5f\xff\xfa\xd7\x59\x58\x58\xe0\
\xee\xdd\xbb\xdc\xbc\x79\xd3\x2e\xfa\xa7\xa7\xa7\x29\x16\x8b\x6c\
\x6c\x6c\xd8\xb6\x3c\x71\xe2\x04\xed\x76\x5b\x47\xb2\x7f\xfe\x79\
\x3e\xff\xfc\x73\xde\x79\xe7\x1d\xa4\x94\xac\xac\xac\xf0\xa3\x1f\
\xfd\x88\xb9\xb9\x39\x96\x97\x97\x79\xe9\xa5\x97\x10\x42\xf0\xbf\
\xff\xf7\xff\x06\x60\x6d\x6d\x8d\x3f\xf8\x83\x3f\x60\x6e\x6e\x8e\
\xff\xfa\x5f\xff\x2b\x5f\xff\xda\x4b\x5c\xbb\x76\x8d\xe9\x99\x9a\
\xf5\x90\x34\x2a\x49\x50\xd6\x76\x6c\x94\x3c\x08\xf5\x5e\x76\x1c\
\xc9\x2e\x7a\xf2\xc6\x99\x61\x92\x77\xde\xfd\xc8\xb0\xf2\xb2\x8b\
\xc2\xec\xf6\x49\xd8\xb0\x49\xeb\xfa\xc8\xeb\xb8\xb2\x00\x50\xb3\
\x48\xfe\x81\x41\xc7\x0c\xf4\x7a\x82\x28\x10\x45\xb1\x4d\xd6\x29\
\x10\xf4\xa2\xae\x65\xbb\x0c\x03\xa5\x94\xe8\x7f\xa4\x19\xbc\xb4\
\x41\xbc\xc9\x51\xd5\x6c\x36\xa9\xd5\xa6\x28\x84\x21\x32\xb5\xed\
\x02\xcd\x82\xe9\x29\xa4\x2f\xd9\x95\xff\x63\x79\x2c\xc7\x21\x79\
\x2a\x2f\xf7\x6f\x1e\xfb\xeb\x8a\xde\x3f\x7e\xd0\xc8\xaa\xdc\x06\
\xbc\xd5\x54\x7f\x9b\xab\x3a\x3c\x00\x5c\xd2\x81\xdf\xed\xa7\x36\
\x1a\x3b\x07\x81\x93\x6b\x47\x65\x24\x9b\xcf\x30\x7b\xaf\xf9\xf7\
\x97\x3f\x70\x66\xff\x5a\x80\xa2\xfa\x49\xe7\xf3\x62\x79\x0d\x63\
\xe3\x46\xb1\xf0\xe6\xef\xa8\x4f\xde\xb1\xd9\x32\x8e\x22\x26\xfd\
\x8b\x51\x85\x99\xfb\x32\xed\x5b\xaf\xd7\xd9\xd8\xd8\xe0\xc4\x89\
\x13\x36\x3a\xf9\x7f\xfb\x6f\xff\x8d\xf7\xdf\x7f\x9f\x30\x0c\x29\
\x14\x0a\xdc\xbb\x77\xcf\xaa\x87\x4d\x6c\xa8\x20\x08\x78\xfe\xf9\
\xe7\xf9\xee\x77\xbf\xcb\x89\x13\x27\x88\xa2\x88\x7a\xbd\xce\xdc\
\xdc\x1c\xad\x56\x8b\xff\xfc\x9f\xff\x33\xef\xbf\xff\xbe\x55\xf9\
\x6d\x6d\x6e\xb3\xb3\xbd\x63\x9f\x85\x31\x5e\x4f\x92\x84\x66\xb3\
\xc9\x2f\x7f\xf9\x4b\x4a\xa5\x12\xa7\x4e\x9d\xa2\xd7\xeb\xe1\x79\
\x9e\x4e\x6d\x93\x86\x60\x98\x9f\x9f\xa7\xd3\xe9\xb0\xba\xba\xca\
\xf9\xf3\xe7\x59\x58\x58\xe0\xe6\xcd\x9b\x6c\x6e\x6e\xda\x30\x0b\
\x52\x4a\x7e\xe3\x37\x7e\x83\x20\x08\xf8\xe8\xa3\x8f\x00\xf8\xdd\
\xdf\xfd\x5d\xca\xe5\xb2\xcd\x69\xb8\xbf\xbf\xcf\xd6\xd6\x16\xbd\
\x5e\x8f\xa9\xa9\x29\xa6\xa6\xa6\x38\x7f\xfe\x3c\x61\x18\xb2\xb1\
\xb1\xc1\x67\x9f\x7d\xc6\xf6\xf6\x36\xbe\xef\xf3\xe4\x93\x4f\xb2\
\xb0\xb0\xc0\xcc\xcc\x0c\xbb\xbb\xbb\x6c\x6d\x6d\xd9\x18\x56\xda\
\xf8\xff\x29\xca\xe5\xb2\x05\x73\xff\xf0\x0f\xff\x40\x1c\xc7\xcc\
\xcf\xcf\x53\xaf\xd7\xad\x2a\x71\x76\x76\xd6\xda\x5e\x19\xe7\x01\
\x13\x86\xe2\xb3\xcf\x3e\xa3\xd1\x68\x30\x37\x37\x87\x10\x82\x97\
\x5e\x7a\x89\x17\x5e\x78\x81\xcd\xcd\x4d\x2e\x5f\xbe\xcc\x87\x1f\
\x7e\xc8\x13\x4f\x3c\x41\x10\x04\x3c\xfb\xec\xb3\xf8\xbe\xcf\xd5\
\xab\x57\x59\x5f\x5f\xe7\xb7\x7e\xeb\xb7\xf8\x9f\x7f\xf6\xbf\xf8\
\xcd\xdf\xfc\x26\xeb\x1b\x9a\x35\x34\x2a\xd3\x5a\xad\x46\x1c\x47\
\xd6\xe3\xf2\x51\x92\x47\x85\x4d\x7a\x10\xc0\x72\x52\x09\xdc\x41\
\xec\x51\x90\x6c\x5d\xb2\x93\x48\xfe\xaa\x52\x20\xa5\xfe\x5b\x28\
\x14\x2d\xc0\x8a\xe3\x84\x5e\x1a\x0d\x58\x36\x13\xa2\xa8\x97\x46\
\x35\x96\x78\x22\xd0\xb4\x7a\x22\x51\x89\x44\x26\x09\x2a\xf1\x50\
\x08\xa4\x80\x6e\xb7\xc3\xde\xde\x0e\xa5\x72\x89\x62\xa5\x44\x10\
\x16\x08\x43\x0d\xd0\xf0\x04\x55\xbf\x96\x46\x4d\x1e\xed\xb1\xf4\
\x58\x1e\xcb\xfd\x8a\x0b\x00\xcc\xdf\x3c\xf0\x91\x27\xfd\xfe\x34\
\x7e\x75\x66\x3c\x69\x5d\xd6\xc4\xd8\x64\x99\x6d\x41\xe0\x23\x55\
\x30\xc0\x0a\xb9\xf5\xeb\x2f\x72\xfc\x01\x56\xc6\xd6\x5d\x4a\x94\
\x60\x60\x7b\x1e\x2b\x64\xee\x2f\x5b\xc7\xbc\xf1\x2a\x4f\x95\xe7\
\xb2\x7b\x86\x15\x33\x6c\x8e\xbe\x4f\xbd\x3c\xca\x02\xc3\x3c\x2f\
\xbe\x61\xe0\x69\xd4\xb6\xbc\xe7\x30\x0e\x60\x1d\x7c\x66\xc3\xd5\
\xc3\x79\xe7\x0c\x84\xc3\x48\xdb\xce\x24\x6a\x6e\x34\x1a\x9c\x3f\
\x7f\x9e\xf3\xe7\xcf\xe3\xfb\x3e\x3f\xfe\xf1\x8f\xf9\xc5\x2f\x7e\
\x81\x94\x92\xfd\xfd\x7d\xee\xde\xbd\xcb\xf4\xf4\xac\x35\x3e\x97\
\x12\x4e\x9e\x3c\xcd\x0b\x2f\xbc\xc0\x73\xcf\x3d\xc7\xec\xec\x1c\
\x1b\x1b\x3a\x85\xcc\xd7\xbf\xfe\x75\x36\x36\x36\xf8\x1f\xff\xe3\
\x7f\xf2\xf1\xc7\x1f\x53\x28\x14\xd8\xdb\xdb\xe3\xda\xb5\x6b\xa0\
\x14\x9e\xf0\x2c\x63\x55\x2e\x97\x2d\x0b\x95\x24\x09\xeb\xeb\xeb\
\x74\xbb\x5d\x6d\x57\x04\xbc\xfc\xf2\xcb\xb4\xdb\x6d\xde\x7a\xeb\
\x2d\x1b\x8e\xa7\x50\x28\x70\xf2\xe4\x49\x2e\x5e\xbc\x48\x14\x45\
\x6c\x6e\x6e\x72\xf6\xec\x59\x9e\x7b\xee\x39\xda\xed\x36\xb7\x6f\
\xdf\x66\x79\x79\x99\x77\xdf\x7d\x17\x80\x52\xa9\xc4\x95\x2b\x57\
\x6c\x1b\x74\x3a\x9d\xd4\x0e\x57\x47\x59\x9f\x9a\x9a\xc2\xf7\x7d\
\x56\x57\x57\x29\x95\x4a\xc4\x71\x6c\x55\x94\x95\x4a\x85\x76\xbb\
\xcd\xdd\xbb\x77\xad\xe1\xb9\x89\x95\x15\x04\x81\x0d\x4b\x51\xa9\
\x54\x88\xa2\xc8\x32\x5a\xd3\xd3\xd3\xbc\xfa\xea\xab\x96\x21\xdd\
\xde\xde\xe6\xd3\x4f\x3f\x65\x6f\x6f\x8f\x52\xa9\xc4\xd2\xd2\x12\
\x27\x4f\x9e\xa4\x5a\xad\xf2\xf4\xd3\x4f\xf3\xf7\x7f\xff\xf7\x5c\
\xbe\x7c\x99\xc5\xc5\x45\x36\x36\x36\x28\x97\xcb\x48\x29\x79\xeb\
\xad\xb7\x00\x98\x9e\x9e\xd6\x71\xc4\x4e\x9d\x62\x6b\x6b\x8b\x46\
\xa3\xc1\xd3\x4f\x3f\xcd\xe9\xd3\xa7\xf9\xd9\xcf\x7e\xc6\x3f\xff\
\xe7\xff\x9c\xbf\xfc\xcb\xbf\xe4\xbb\xdf\xfb\x36\xef\xbc\xf3\x0e\
\x8b\x8b\x8b\xcc\xcd\xcd\xd1\x6c\x36\x00\x65\x9d\x03\x1e\x15\x99\
\x84\x05\x7a\x18\xd7\x99\xa4\x1e\x0f\xb2\xae\xc1\x83\x28\xf4\x7e\
\x24\x0f\x40\xb9\xbf\xb3\x2b\x79\x43\x09\x87\x61\x48\xa5\x5c\x23\
\xf0\x43\x50\x1e\x51\xa4\xd5\x1b\x51\xd4\xa3\xd7\xd3\x49\x9d\xb5\
\xaa\x30\x5d\x45\x0b\x80\x7e\x2e\x35\x99\xe8\x09\x46\xe1\x99\xa9\
\x88\x56\xab\xc5\xce\xce\x0e\x95\x5a\x8d\x4a\xa5\x0a\x69\x5a\x0a\
\xad\x12\x89\xf0\x3c\x72\x53\xd0\xe4\x0d\xf8\x0f\x52\x8e\x9b\x4e\
\x7d\x90\xd7\xf9\x55\x93\x2f\xaa\x4d\x86\x81\x8c\x61\xc7\x48\x79\
\x10\xa8\x64\xbf\xbb\xe9\x74\x5c\x70\xe5\xfb\x3e\x4a\x40\xa0\x20\
\x90\x52\xe7\xad\x1b\x02\xb0\x5c\x0f\x30\xb7\x3c\x53\xa6\x0a\x3c\
\x10\x0a\xef\x40\xfa\x9b\xc1\xb0\x0f\x79\xe0\x2a\x2b\xc3\xc6\x08\
\x73\xad\xc1\xfb\x1f\xac\x8b\x54\xda\x9c\xc4\x4c\x90\x66\x1c\x70\
\xc1\xab\xcb\x66\xb9\x26\x0a\x79\xed\x9b\xdd\x36\x09\x83\x95\xe7\
\x95\x39\xac\x1f\x8e\x6b\x8b\x42\xa1\x60\xc3\x27\x18\x26\xa3\xd7\
\xeb\xd9\x98\x50\x0b\x0b\x0b\x9c\x3f\x7f\x9e\x7b\xf7\xee\x71\xed\
\xda\x35\xeb\xb1\xd6\x6a\xb5\xf8\xe4\x93\x4f\xe8\xf5\x7a\x9c\x3f\
\x3f\x6b\x8d\xdf\x67\x66\x66\xac\x8d\x96\xef\xfb\x96\xb5\x3a\x77\
\xee\x1c\x9f\x7c\xf2\x09\x7f\xf3\x37\x7f\xc3\xf5\xeb\xd7\xa9\x56\
\xab\x6c\x6f\x6f\x73\xf7\xee\x5d\x2a\x95\x0a\x71\x14\x83\x52\x94\
\x4a\x25\x2a\x95\x0a\xd5\x6a\x95\x62\xb1\x68\x9f\x81\x09\xa3\x60\
\x54\xcf\x97\x2f\x5f\x66\x6d\x6d\x8d\xb3\x67\xcf\x5a\xb5\xde\xcd\
\x9b\x37\x6d\xb9\x2b\x2b\x2b\x16\x64\xbd\xf9\xe6\x9b\xd6\x69\x69\
\x6a\x6a\x8a\x76\xbb\xcd\xf3\xcf\x3f\x8f\x52\x8a\x2b\x57\xae\x90\
\x24\x09\xd5\x6a\x95\xe9\xe9\x69\x96\x96\x96\xac\x0a\x2d\x8e\x63\
\x5a\xad\x16\x1b\x1b\x1b\x78\x9e\xc7\x13\x4f\x3c\xc1\x13\x4f\x3c\
\xc1\xf4\xf4\x34\x51\x14\xb1\xba\xba\xca\xde\xde\x1e\x00\xa7\x4f\
\x9f\xe6\xdc\xb9\x73\xd6\xe3\xf2\xde\xbd\x7b\x5c\xb9\x72\x85\x20\
\x08\x98\x9e\x9e\xb6\xe0\xaa\x56\xab\xf1\xf6\xdb\x6f\x53\x2e\x97\
\xad\xfa\xb1\x5e\xaf\x53\x2a\x95\x38\x7d\xfa\xb4\xb5\x19\xdb\xdf\
\xdf\xe7\xaf\xff\xfa\xaf\x91\x52\xda\xf3\x4e\x9e\x3c\xc9\xcb\x2f\
\xbf\x8c\x10\x82\x52\xa9\xc4\xf4\xf4\x34\xd5\x6a\x95\x38\x8e\xd9\
\xd9\xd9\xe1\xe3\x8f\x3f\x66\x73\x73\x93\x8b\x17\x2f\x72\xe6\xcc\
\x19\x7e\xf3\x37\x7f\x93\x7f\x78\xf3\x1d\xfe\xdd\xbf\xfb\x77\xfc\
\x5f\xff\xf7\x9f\xf0\x4f\xff\xe9\xf7\xb8\x7e\xfd\xa6\x8d\x21\xa6\
\x94\xb4\xac\x25\x23\xbc\x08\x27\x19\xaa\xc6\x02\xf9\xf1\x45\x0c\
\x05\x2c\x87\x19\x2b\x8f\xaa\xaa\x1c\x76\x6e\xde\x42\x6d\x92\x32\
\xee\x97\xfd\x7a\xb4\x38\x45\x47\x86\x0f\x34\x12\xa5\x4c\xb0\x43\
\x2f\x55\x45\x78\x84\x85\x12\x28\xdf\xea\xe1\x15\x52\xa7\xcc\x91\
\x31\x51\xd4\x23\x49\x34\xb8\xea\xf5\x7a\x44\x51\x8c\xa7\x84\xb6\
\xfd\x93\x0a\xe5\xe4\x38\x43\x80\xf0\x04\x4a\x08\x7a\x49\xcc\x7e\
\xa3\x4e\x75\x77\x97\xe9\xe9\x19\x84\xa7\x6d\x4f\x92\x24\xd6\xa9\
\x26\x02\x1d\x13\xcb\xa4\xf7\x79\x2c\x8f\xe5\x41\xc8\x38\xf0\x9b\
\x65\x80\xc6\xb1\x1e\xe3\x06\xc0\x2c\xc8\x92\x29\xeb\x24\x11\xf8\
\x28\x7c\x01\x01\x8a\x04\xa5\x7f\xa3\x50\xb1\xc0\x13\xe0\x25\x3a\
\xd6\x51\x24\x13\x0b\x50\x0c\x88\xf0\x3d\x0f\xdf\x4f\x81\x4a\xda\
\xe7\x0c\x3b\x06\x58\xa0\xe3\xda\x53\xe5\xd9\x1c\x8d\x5b\xc0\x98\
\x32\xf2\x98\x26\xf3\x5d\x2a\x81\x94\x7d\xfb\x2f\x37\x8d\xcc\x60\
\xde\xc6\xe1\x71\xb6\x84\xd3\xf7\xb3\xec\xe2\xb0\x3a\x8e\xaa\x53\
\x16\x68\xb9\xcf\x71\xec\xc4\xa7\x06\xd3\x0b\x45\x51\x44\xb3\xd9\
\xb4\xaa\xac\xa5\xa5\x25\x3e\xfb\xec\x33\xde\x7a\xeb\x2d\xea\xf5\
\x3a\x17\x2f\x5e\xe4\xf2\xe5\xcb\xbc\xf5\xd6\x5b\x78\x9e\xc7\xf9\
\xf3\xe7\xd9\xdb\xdb\x63\x7f\x7f\x9f\xe5\xe5\x65\xbe\xf3\x9d\xef\
\xf0\xf2\xcb\x2f\x53\x2e\x97\x6d\x4e\xc2\x46\xa3\xc1\xca\xca\x0a\
\xff\xfd\xbf\xff\x77\xf6\xf6\xf6\x58\x5a\x5a\xe2\xf2\xe5\xcb\xdc\
\xb8\x7e\x1d\x2f\x7d\x4f\x2a\xe5\x0a\x9e\x10\x34\x1a\x0d\x5a\xad\
\x16\xdb\xdb\xdb\x36\xd7\x9f\x09\x22\x7a\xe3\xc6\x0d\xa6\xa6\xa6\
\x98\x99\x99\xe1\xce\x9d\x3b\x00\xcc\xce\xce\x5a\xc0\x79\xf1\xe2\
\x45\xe6\xe6\xe6\xd8\xd8\xd8\x40\x29\xc5\xf2\xf2\x32\xfb\xfb\xfb\
\xac\xaf\xaf\x33\x3f\x3f\xcf\xbf\xf8\x17\xff\x82\x5f\xfe\xf2\x97\
\x78\x9e\xc7\x8d\x1b\x37\xac\x27\xa1\x10\x3a\x77\xdf\x89\x13\x27\
\x90\x52\x72\xf7\xee\x5d\x76\x76\x76\x1c\xf0\x01\x27\x4f\x9e\x64\
\x7a\x7a\x9a\xad\xad\x2d\x2e\x5f\xbe\xcc\xdc\xdc\x1c\x51\x14\x59\
\x15\xa5\x94\x92\x6e\xb7\x4b\xa3\xd1\x40\x29\xc5\xfe\xfe\x7e\x6a\
\x16\x02\x8b\x8b\x8b\x3c\xfb\xec\xb3\x36\xb4\xc2\xad\x5b\xb7\xb8\
\x7d\xfb\x36\xd3\xd3\xd3\x2c\x2e\xea\x20\xad\x46\x1d\x7a\xef\xde\
\x3d\xab\x7a\x35\xaa\xd5\x33\x67\xce\xd8\xbc\x85\x6f\xbe\xf9\x26\
\x2b\x2b\x2b\xb4\x5a\x2d\x6e\xde\xbc\x69\x53\xf9\x9c\x3e\x7d\x9a\
\x24\x49\x78\xf2\xc9\x27\x79\xe5\x95\x57\x38\x7b\xf6\x2c\xed\x76\
\x9b\xd9\x99\x45\xfe\xd7\xff\xf3\xbf\xf8\x57\xff\xea\x5f\xf1\xa7\
\x7f\xfa\xa7\xfc\xf0\x87\x3f\xe4\xda\xb5\x6b\x84\xa1\x76\xd2\x32\
\xaa\xdd\x47\x49\x1e\x45\x16\x6b\x92\x63\x8e\xb3\xae\x8f\x1c\xc0\
\x1a\x37\x39\x0c\xaa\x1c\xfa\x86\xb4\xbe\x2f\x08\x02\xa3\xf7\x8f\
\x75\x14\xf6\x42\x48\xa1\xa0\xa3\x04\x87\x61\x68\x3b\x50\x92\x24\
\x08\xe9\xd9\xf3\x51\xae\x91\xfa\xe0\xb5\x4d\x87\x6b\x77\x3a\x14\
\x42\x9d\x87\xca\x94\xa1\x7c\x65\xed\x38\x1e\x25\x35\xeb\x51\xe4\
\x51\xb9\x87\x47\xa5\x1e\x93\xc8\xa3\xc4\xe8\x4d\xda\x66\xa3\x06\
\x92\x61\x8c\x8c\xe7\x79\x78\x28\x7c\x20\x50\x81\x65\xb0\x8c\x91\
\xb2\xf6\xe8\x35\x21\x53\xfa\x91\xb6\xb3\x60\xc3\x30\xc7\x42\x08\
\x70\xc0\x8a\xab\xc2\xcb\xbb\xfe\xb0\x7a\xe6\x81\x18\xf7\xfd\xc9\
\x63\x86\xec\xd8\x61\x57\xfb\xfd\xf3\xb2\x40\x26\xab\x8a\xcd\x63\
\xa3\x46\x49\xf6\xde\xc7\xb1\x5f\x93\xec\x1b\x26\x66\x82\x15\x42\
\x3b\x0a\x99\x20\x9b\xc6\x63\xad\xd1\x68\x70\xef\xde\x3d\x00\x6b\
\x4f\xb4\xb1\xb1\x41\xa9\x54\x62\x61\x61\x81\x30\x0c\x89\x63\xc9\
\xd2\xd2\x12\x97\x2e\x5d\xe2\xd2\xa5\x4b\xd6\x7e\xc8\xc4\x9f\x5a\
\x59\x59\x61\x7d\x7d\x9d\x6a\xb5\x8a\xef\xfb\xec\xed\xed\xb1\xbb\
\xbb\x4b\xa9\x5c\xb6\x5e\x71\x61\x58\xd0\x36\xaf\x4e\xba\x17\xc3\
\x0c\x1a\x95\x9c\x61\xb7\x4c\xf4\xf4\x6a\xb5\x6a\xe3\x63\x05\x41\
\x60\x03\x81\xb6\x5a\x2d\x92\x24\xa1\xd1\x68\xd8\xb8\x86\xcb\xcb\
\xcb\x54\xab\x55\xf6\xf7\xf7\x69\xb7\xdb\x84\x61\x98\xd6\x5d\xa7\
\x94\x31\x51\xd0\x0d\x30\x32\xf1\xab\xa4\x94\xb4\xdb\x6d\x44\x0a\
\xfe\x0c\x63\x65\x18\xa4\x4e\xa7\x63\x99\x54\xa3\x62\x34\x71\xb0\
\x6a\xb5\x9a\xb5\xe7\x35\x71\xb0\x4c\xac\x44\xf3\xac\x4c\x0c\xaf\
\x30\x0c\xe9\x74\x3a\x34\x1a\x0d\x0a\x85\x82\x4d\xf5\x63\xb6\x19\
\x75\xb4\xf1\x66\x3c\x75\xea\x14\x4a\x69\x23\xfc\x4b\x97\x2e\x51\
\x2a\x95\xb8\x75\xeb\x16\x5b\x5b\x5b\x7c\xf6\xd9\x67\xec\xec\xec\
\x58\x15\xe4\x4b\x2f\xbe\xc4\x8d\x9b\xd7\xf8\xf3\x3f\xff\x73\x9e\
\x79\xe6\x99\x34\x57\x62\x87\x28\xea\x1d\x0b\xb8\x3a\x8e\xf1\xec\
\x61\x8f\xdf\x87\x05\x46\x93\x00\xb0\xa3\x5e\x3f\x4f\xfc\xff\xf0\
\x1f\xfe\xc3\x1f\xc0\xf8\x4e\xfd\xb0\x1a\x2d\x6f\x25\x97\xfd\xde\
\x3f\x46\x1b\xa4\x7b\x42\x27\x71\xd6\x61\x18\x06\x57\x7d\x52\x26\
\x24\x49\x4c\x9c\x44\xc4\x71\x64\x5f\x70\x54\x80\x87\xce\x02\xef\
\x79\x02\xcf\x17\xf8\x7e\x3a\xf0\xa7\xdb\x84\x27\x9c\xfd\x7a\x85\
\x56\x2c\x15\x29\x84\x45\x3c\x21\x28\xf8\x05\x04\x83\x34\xff\x38\
\x5b\x8c\xbc\xfb\xbd\x9f\xfd\xc7\x25\x93\x4c\x1a\x0f\x03\x50\x7c\
\x59\xc0\x95\x91\x87\xdd\x26\xc3\x26\xea\x2c\xe3\x71\xb0\x8e\xe3\
\x55\x84\x59\xc0\x32\x70\x1d\x4f\x20\x3c\x1f\xe1\xeb\x3e\xe3\x5e\
\xd7\x65\x9d\xdc\xf3\xb3\xde\x80\x42\xe9\xd0\x26\x1e\x9e\x5e\xda\
\xe4\x80\x95\x71\x4c\x4e\xde\x7d\x8f\xda\xe6\x8a\x0b\xe8\x3c\xd3\
\xaf\x87\x04\x4f\xcd\x03\x5c\xd9\xfa\xba\xf7\x3d\x8a\xe5\xca\xaa\
\x19\xb3\xbf\xb3\x91\xdc\xb3\xc7\x4c\xc2\x60\x25\x32\xb6\x29\x65\
\xf6\xf7\xf7\xe9\x76\xbb\x78\x9e\x4e\x89\x13\x86\x21\xd7\xaf\x5f\
\xe7\xce\x9d\x3b\x96\x91\x7c\xf7\xdd\x77\x59\x5b\x5b\xe3\xcc\x99\
\x33\x2c\x2d\x2d\xa5\x1e\x7b\x27\x79\xfe\xf9\xe7\x79\xe5\x95\x57\
\xf8\xea\x57\xbf\x6a\xd5\x6b\x41\x10\xb0\xba\xba\xca\xea\xea\xaa\
\x65\x7a\xf6\xf6\xf6\xf8\xec\xb3\xcf\xd8\xdd\xdd\x65\x76\x76\x96\
\xe5\xe5\x65\xe6\xe6\xe6\x98\x9a\x9a\x42\x08\x41\xb9\x5c\xb6\xe1\
\x0c\x8c\xdb\x1a\xb8\xec\x00\x00\x20\x00\x49\x44\x41\x54\x67\xb8\
\x71\x7a\x98\x99\x99\xe1\xcc\x99\x33\x08\xa1\xf3\x19\x96\xcb\x65\
\x9b\x0b\xb0\x58\x2c\x32\x33\x33\x63\xd3\xd1\x54\xab\x55\xab\x76\
\xae\xd5\x6a\x36\x94\xc3\xd5\xab\x57\xe9\xf5\x7a\x5c\xba\x74\x89\
\x8b\xa9\xad\xd6\xcc\xcc\x8c\x55\x33\xae\xae\xae\xe2\x79\x1e\xe7\
\xce\x9d\xb3\x81\x44\x4d\x0c\xb0\x76\xbb\x4d\xa3\xd1\x60\x7e\x7e\
\x9e\xe9\xe9\x69\x1b\xaf\x4a\x29\x65\x55\xaa\x26\x69\xf4\xf2\xf2\
\x32\x8b\x8b\x8b\x14\x8b\x45\x5a\xad\x16\xad\x56\xcb\x86\x88\x58\
\x5c\x5c\x4c\x03\x5c\x97\xf1\x3c\xcf\x82\xb0\xfd\xfd\x7d\x1b\xbf\
\xab\x58\x2c\xe2\xfb\x3e\xd5\x6a\x95\x99\x99\x19\x36\x36\x36\xd8\
\xdb\xdb\xa3\x5a\xad\xd2\x6c\x36\xa9\x54\x2a\x04\x41\xc0\xcc\xcc\
\x0c\x0b\x0b\x0b\xf4\x7a\x3d\x56\x56\x56\x58\x5b\x5b\xb3\x69\x7f\
\x0a\x85\x02\xb7\x6f\xaf\xf2\xfd\xef\x7f\x9f\xd3\xa7\x4f\xf1\xb3\
\x9f\xfd\x8c\x38\x8e\x79\xf5\xd5\x57\xf5\x3c\x25\xdc\xbe\xf6\x80\
\x55\x84\x47\x18\x9f\x8f\xc2\x0e\xdd\x8f\x8a\x70\xd8\xf9\x93\xd4\
\x23\x6f\x81\x75\xd8\x6b\xbb\x32\x71\x1c\xac\x87\x3d\xf1\xe5\x51\
\xeb\x5a\xcc\xcd\x18\x1b\x09\x0f\x37\x05\x80\x41\xd0\x5a\x0d\x20\
\xb5\x81\xbb\x4c\x48\x64\x4c\x1c\x6b\x23\xc0\x24\x91\x24\xb1\xc4\
\x33\x60\xca\x07\x2f\x30\xa0\x2a\xf5\x4e\x14\x46\x45\x12\x68\xa2\
\x4b\x41\x12\xeb\xc8\xbb\xa5\x4a\x39\x4d\x06\xad\x53\xe8\xe8\x41\
\xd1\xd8\xbb\x4f\x0e\xae\x26\x39\xee\xb8\xda\x7d\x92\xeb\x3c\x0a\
\xe0\xe6\x51\xa8\xc3\xa3\x28\x07\x98\x20\x67\xfb\xb0\x36\x73\x8f\
\x1f\xd6\xac\x93\x0c\x34\x00\x9e\xef\xe1\xf9\x29\xc0\x42\x0f\xea\
\xc2\x58\x64\x98\x3a\xe4\xb0\x4d\x6e\x59\x52\x29\x0b\xac\x40\x59\
\x02\xd9\xbe\x7b\x9e\xc0\x13\xf9\x21\x29\x46\x81\xab\x51\xef\x4c\
\x1e\x40\xf2\x3c\x0f\x4f\xdf\xc0\x01\x55\xa2\x39\x67\x14\x90\x75\
\x8f\x33\x2a\xc2\x2c\xbb\x95\x05\x58\x79\x8b\x30\x6b\x4c\x2f\x46\
\xc7\xcc\x9a\x68\xa0\x17\x3a\x0e\x94\xf1\x16\x04\x98\x9b\x9b\xb3\
\x8c\xc8\xcd\x9b\x37\xf1\x3c\x8f\x9d\x9d\x1d\x3e\xff\xfc\x73\x3e\
\x78\xff\x03\x66\xe7\x66\xa9\x56\xab\x6c\x6c\x6c\x50\x2c\x16\xf9\
\xce\x77\xbe\xcb\xf3\xcf\x3f\xcf\xc9\x93\x27\x2d\x3b\x99\x24\x09\
\xb7\x6f\xdf\x66\x6f\x6f\x8f\xe9\xe9\x69\x66\x67\x67\x79\xfb\xed\
\xb7\xf9\xe4\x97\xbf\xa4\xd1\x68\x80\xd2\x6d\x58\xab\xd6\x98\xaa\
\x4d\xe1\x7b\xbe\x4d\x3d\x33\x33\x33\x03\xe8\x80\x9f\x36\x82\xbe\
\x94\x36\x0c\x82\x89\x0e\x6f\xd2\xe2\x98\x64\xc9\xdb\xdb\xdb\xda\
\xf6\xb5\x52\xe1\xfc\xf9\xf3\xd4\x6a\x35\x40\x7b\x24\x36\x9b\x4d\
\xae\x5c\xb9\x62\x13\x28\x97\xcb\x65\x6a\xb5\x1a\x8d\x46\xc3\xa6\
\xc8\xd9\xde\xde\xa6\xd5\x6a\x11\x86\x21\x42\x68\xc7\x06\x03\xf2\
\x4c\xf8\x8e\x99\x99\x19\xe6\xe7\xe7\xd9\xdf\xdf\xd7\xf7\x01\x36\
\xad\x8e\xe7\x79\xd6\x30\x5e\x29\x65\x8d\xc7\xbb\xdd\x2e\x7b\x7b\
\x7b\xd6\x0e\x4b\x87\xf1\xd1\xda\x91\x28\x8a\xd8\xd8\xd8\xb0\xc6\
\xfb\x33\x33\x33\x36\x77\x61\xb5\x5a\xb5\xd7\x35\x6a\xd3\xb3\x67\
\xcf\xb2\xbb\xbb\x4b\x14\x45\x4c\x4f\x4f\xe3\xfb\x3e\xeb\xeb\xeb\
\xd6\xf3\xb1\x58\x2c\x32\x3f\x3f\xcf\xdc\xdc\x1c\x4f\x3d\xf5\x14\
\xd7\xae\xe9\x7c\x89\x17\x2f\xe9\xe4\xd4\x6f\xbe\xf9\x26\xd3\xd3\
\xd3\x14\x0a\x01\x4b\x4b\x27\xec\xfd\xf5\xad\xa4\x44\xff\x63\xe6\
\x25\xe5\x6c\x1b\x38\x66\x72\x39\xec\xf8\x7c\x54\xd5\xdb\x71\xb0\
\x4a\xd9\xbe\x3a\xae\xec\x07\xa1\x26\x1c\xab\x22\xfc\xa2\x27\x3c\
\x77\xb5\xa8\xbf\x7b\x18\x90\xe5\x79\x6e\x23\x28\x84\xa7\xf0\xd1\
\x2b\x6d\x44\x88\x54\x65\xe2\xb8\x47\x1c\x47\x44\x51\x4f\xaf\xea\
\x84\x4f\x14\xc5\x24\x71\x1d\x29\x63\x40\x20\xbc\x20\x5d\x09\x08\
\x47\xe9\xe8\x81\xf4\x48\x62\x45\x2c\x12\x7a\xed\x2e\x42\x41\x63\
\x6f\x8f\xe9\xa9\x0a\xe5\xa0\x40\x1c\x75\xf1\x45\x1a\xe6\x01\x1f\
\x94\x66\xd1\x34\xf8\x1b\xac\xbf\xa9\xa3\xde\x36\xf9\xfd\x8f\x52\
\x95\x1e\x46\x26\x55\x69\x1c\x45\xbe\xe8\x77\xe4\xa8\x72\x1c\xab\
\xb5\xc3\xdc\xfb\x51\xdb\xf7\x78\x3a\x7b\x76\xb0\x31\x13\xb7\x7b\
\x1d\x32\xdb\x0d\x20\xd0\x2c\x8d\x6f\xee\xd5\x07\xa1\x04\x5e\xfa\
\xbe\x0b\x25\x88\xbd\x18\xdf\x0b\x40\x41\xec\xc7\xf4\x73\x7f\x46\
\x80\x31\x22\x4f\xe8\xc5\x11\xb1\x88\xf0\x3d\xcd\x3c\x7b\x9e\x97\
\x2e\x72\x3c\x90\x02\x95\x48\x48\x52\xf0\xa3\x84\xad\x97\x40\x7b\
\x88\x49\x65\x80\x99\xb2\xc0\x4e\xa1\xfa\x0b\xf7\xf4\x63\xb7\x09\
\x75\x70\x41\x9f\x2e\x86\x7c\xd1\x07\x47\x76\x97\x03\x6a\xb2\x0c\
\x9c\x4a\x55\xa3\xe6\xbb\x99\xbc\xf3\xd2\xf4\xb8\x0b\x3d\x53\x16\
\x0c\xc6\x34\x33\xc0\xc9\x65\xff\x5c\x30\x65\x73\x40\x3a\x51\xe8\
\xe3\x38\xb6\x49\x91\x4d\x48\x06\x21\xb4\x2d\x58\xa7\xd3\xb1\xcc\
\x49\xad\x56\xa3\x52\xa9\x70\xef\xde\x3d\x56\x56\x56\x28\x14\x0a\
\x6c\x6c\x6c\xf0\xf6\xdb\x6f\x73\x77\xf5\x2e\xd5\x34\xe1\xf1\xca\
\xca\x0a\x8d\x46\x83\x6f\x7f\xfb\xdb\x3c\xf7\xd5\xaf\x52\x2c\x16\
\x89\xa3\xc8\x26\x33\x36\x69\x63\x96\x4e\x2c\xb1\xb2\x72\x8b\x4f\
\x3e\xf9\x84\x77\xff\xf1\x5d\xda\xad\x16\x61\x31\x44\xc6\xb1\xce\
\x82\xd1\xe9\x72\x6b\x73\x13\x2f\x05\x9c\xc6\x60\xdb\xd4\xd3\x38\
\x45\x08\x21\x6c\xcc\xab\x0b\x17\x2e\xf0\xcd\x6f\x7e\x93\x8f\x3f\
\xfe\xd8\x32\x52\xed\x76\xdb\xb6\x69\x14\x45\xf6\x7e\x94\x52\x34\
\x9b\x4d\x3a\x9d\x8e\xcd\x57\x18\x45\x11\xd7\xaf\x5f\x67\x6b\x6b\
\xcb\xa6\x00\x32\x09\xa5\x67\x67\x67\xe9\x76\xbb\x6c\x6e\x6e\xda\
\xf6\x39\x73\xe6\x8c\x6d\x27\xc3\xf4\x19\x3b\xaf\xb9\xb9\x39\x1b\
\xec\xd3\x3c\xbb\x5e\xaf\xc7\xce\xce\x0e\x9d\x4e\xc7\x7a\x23\x1a\
\x50\x38\x35\x35\xc5\xad\x5b\xb7\xf0\x3c\x8f\xf9\xf9\x79\xcb\x54\
\x09\x21\x2c\xb0\xeb\x76\xbb\xf6\xb9\xae\xaf\xaf\xdb\x72\xe6\xe7\
\xe7\xad\xdd\x9b\x61\xde\xba\xdd\x2e\xf5\x7a\x3d\xcd\x7d\xdb\x57\
\xb9\x47\x51\xc4\xad\x5b\xb7\x68\xb6\xea\xbc\xf1\xe6\xcf\x88\xe2\
\x2e\x4b\x4b\x27\x68\xb5\x9a\xfc\xf4\xa7\x3f\x61\x7b\x7b\x8b\x72\
\xb9\xcc\xe9\xd3\xa7\x6d\x3c\x3a\xd3\x5f\xad\x5d\x96\x4c\xed\xf3\
\x3c\x77\xac\x92\xce\x98\x70\x70\x11\x73\xa0\xd3\x88\x83\x2c\x98\
\xfd\xea\xf6\x11\xf2\x45\x0f\x27\xfd\x05\xd9\x81\xfd\x99\x6d\x47\
\xd5\xa6\x8c\x1b\x2b\x0f\xee\x37\x75\xca\x1e\x93\xb3\x78\x53\xe6\
\xcf\x81\x41\x73\xa8\x58\x80\x35\x89\x7d\xc0\xfd\x0e\xf4\x47\x01\
\x05\xd9\x15\x7a\x7f\x5b\x66\x75\xab\x14\x9e\x52\xe0\x09\x84\x14\
\x28\xe5\x11\x86\x05\xca\xe5\x12\x71\x5c\x25\x8a\x7a\xb4\xdb\x1d\
\x04\x3e\xdd\x5e\x97\x5e\xd4\x22\xea\xe9\xb0\x0d\xc2\xef\xab\x16\
\x0d\xd2\x17\xf8\x20\x05\x32\x4a\x90\x08\x92\x28\x22\x16\x82\xc6\
\xfe\x1e\x8d\xbd\x0a\x95\x62\x89\x82\x97\xda\x7e\x29\x1f\x24\x08\
\x74\x40\x47\x21\x7c\xeb\xb5\xe5\x79\x6e\xdd\xcd\x37\x45\x3f\x01\
\xe7\x68\x03\xf9\x49\x6c\x37\x8e\x03\xe0\x1c\xf6\xd9\x3e\x48\x50\
\xf5\x20\x68\xea\xc3\x5e\xe3\x41\xcb\x51\xae\x9f\xed\x0f\x79\xec\
\xce\xb0\xf3\xf2\xae\xef\x02\x2a\xbd\x0d\xfb\x37\xef\x3b\x29\xd0\
\xf1\x85\x87\xf0\x03\x3c\x44\xaa\xf2\x13\x24\x41\x42\x10\x45\xa0\
\x20\xf2\x22\x94\x5d\x64\x08\x84\x88\x2d\xc0\x88\x93\x1e\x89\x4a\
\x48\xa4\xc0\x17\x3e\x81\x57\xd0\x65\x08\xcd\x2a\x49\x3c\xbc\x40\
\xe7\x2c\x14\x69\x1f\x52\x12\x94\x30\xea\x7b\x85\x42\x6a\xdb\x47\
\xe1\x54\xd2\x41\x57\xca\x7c\x17\x86\x7c\xce\xac\x4c\x15\x03\xea\
\xb7\xac\x7a\xd3\xfc\x76\xd3\xee\xb8\x60\xcb\x6d\x6f\x37\xbc\x83\
\xcb\x68\x65\x23\xb9\xe7\xb1\x50\x2e\xf0\x1a\x7c\x2e\x83\xf1\xb8\
\x0c\xfb\x63\xea\x94\x4d\xc6\x6d\xb2\x5a\xdc\xbb\x77\x8f\x56\xab\
\xc5\x85\x0b\x17\x28\x95\x4a\xec\xef\xef\x73\xf3\xe6\x4d\x40\xb3\
\x48\x1f\x7e\xf8\x21\x77\xee\xac\x22\x84\xe0\xe4\xc9\x65\x0b\x1e\
\xbe\xf1\x8d\x6f\xf0\xda\x6b\xaf\x11\x14\x0a\x48\xa5\xf0\x7c\x9f\
\x6e\xa7\xc3\xda\xda\x1a\x41\x10\xf0\xe2\x0b\x2f\x70\xfd\xda\x75\
\x7e\xfc\xfa\x8f\xf9\xf4\xd3\x4f\x11\x42\x30\x95\xe6\x17\x2c\x2f\
\x2c\x32\x55\x9b\x42\x26\x09\x3b\xbd\x88\x5e\xaf\xa9\xc7\xe0\xb4\
\xde\x46\xbd\x66\xbc\x13\x1b\x8d\x06\x61\x18\xda\xb0\x02\x26\x1f\
\xa2\xb1\xbb\x72\x3d\x3a\xa3\x28\x62\x65\x65\x85\x4a\xa5\x62\x01\
\xd0\xfa\xfa\x3a\x41\x10\xd0\x68\x34\x6c\x48\x87\x4e\xa7\x63\x55\
\x8e\xad\x56\xcb\xaa\x14\x8d\xfa\xd7\x44\x44\x37\x09\xa2\x93\x24\
\xa1\xd5\x6a\x59\xb5\xa0\x0b\x5c\x8d\xc7\xa4\x31\x8c\xd7\x4e\x51\
\x11\xd5\x6a\x95\xc5\xc5\x45\xea\xf5\xba\xb5\xa9\x32\x40\xcd\x30\
\x7b\xb3\xb3\xb3\xd6\x66\xad\xd9\x6c\xd2\x6a\xb5\x28\x16\x8b\x9c\
\x3e\x7d\x9a\x52\xa9\x64\x9d\x0e\x0c\x83\x77\xf2\xe4\x49\xee\xdc\
\xb9\xc3\xed\xdb\xb7\xd9\xde\xde\xb6\x2a\x49\x13\x83\xb1\x54\x2a\
\xb1\xb8\xb8\xc8\xd6\xd6\x16\x42\xc0\xc2\xc2\x3c\xe5\x72\x89\xd9\
\xd9\x19\x96\x97\x97\xb8\x71\xe3\x3a\xdb\xdb\xdb\x4c\x4d\x4d\xf3\
\x3b\xbf\xf3\x3b\xda\x66\xae\x17\x51\x28\x84\x7a\xd1\x22\x02\xba\
\x9d\x2e\x73\x73\x0b\x29\xf0\x34\xef\x8d\x42\x13\x15\x2e\xc0\x1a\
\x01\xae\x9c\x6d\x72\x82\x61\xeb\xa8\xea\xbd\x49\x30\x88\xbb\x7f\
\xdc\xf8\x37\x8c\x91\xb2\x0c\x97\xd3\x06\x2e\xa8\x72\x6f\x7f\x80\
\x05\x33\x04\x09\x59\xa6\x7e\xf8\xfd\x8e\x65\xb0\x46\xa9\x20\xbe\
\x68\xe9\x37\xb2\xfe\x18\xd0\x25\x84\x06\x36\x85\x82\x8e\xab\x62\
\x8c\x3e\x3b\x9d\x2e\x9e\xe7\xd3\xed\xb5\x68\xb5\xf7\x50\x2a\x26\
\x8e\x25\x38\x01\x10\x95\x54\x28\xa1\x07\x75\x3c\x85\x27\x04\x4a\
\x2a\xa2\x5e\x84\x92\x4a\xeb\xc5\xf7\xf7\x29\x97\x4a\x14\x82\x02\
\x7e\xe0\x11\x04\x21\x41\xa0\x01\x16\x98\x01\x7a\xb4\xda\x42\xe4\
\x64\x45\x7f\x90\xf2\x20\x01\xc5\xa3\xfc\x8e\x0c\x13\xb7\x83\x3e\
\x0c\x39\x0e\xfa\xf9\xb0\x34\xf7\x24\xfb\x0f\x0d\xac\x01\x2f\xb5\
\x7d\x14\xbe\xd5\x8b\x93\xf8\xda\xd8\x3d\x91\x29\xa3\x83\x5e\x43\
\x18\x80\xa1\x57\xd6\x20\x3c\x45\x22\x41\x49\x49\xa2\x12\x54\x0c\
\x9e\x97\xe6\x3b\x14\x3e\x9e\xaf\x17\x46\x52\x2a\x54\x6c\x42\xaa\
\xe8\xa1\x4d\xdb\x59\x2a\xa4\xd2\x9f\x2c\x13\x94\x05\x27\x66\x5f\
\xde\xf7\xec\xbd\x67\xd5\x73\xae\xb8\x01\x3b\xcd\xb1\xe6\x18\x13\
\xf7\x2b\x6f\x9f\xf9\x9d\x8d\x56\xef\x32\x54\x06\x88\x98\x7d\x79\
\xf5\x33\xc7\x98\xe3\x83\x20\x18\xc8\x78\x21\x84\x60\x77\x6f\xcf\
\xe6\xc3\x2b\x97\xcb\x34\x9b\x4d\xae\x5f\xbf\x6e\x19\xa1\x8f\x3f\
\xfe\x98\xd5\xd5\x55\xa6\xa7\xb5\xbd\x11\xe8\x3c\x7e\xcf\x3e\xfb\
\x2c\xff\xf6\xdf\xfe\x5b\x1d\xb2\xa1\xd3\xd3\x06\xe3\x69\xc2\xe2\
\xe9\xe9\x69\xbe\xf2\x95\xaf\xb0\xbd\xb5\xcd\x5f\xfd\xd5\x5f\xf1\
\xd1\x47\x1f\x91\x24\x89\xf6\x96\xf3\x35\x68\x39\x71\xe2\x04\x4a\
\x29\xf6\x53\x5b\x2c\x21\x04\xd5\x5a\x15\x84\xb0\x86\xde\x42\x08\
\x6b\x00\xee\x3a\x34\xd4\xeb\x75\xde\x7d\xf7\x5d\x84\x10\x3c\xfd\
\xf4\xd3\x24\x49\xc2\xce\xce\x0e\xdb\xdb\xdb\xf6\xfe\x8c\x97\x69\
\xad\x56\xa3\x56\xab\xb1\xbb\xbb\xcb\xfa\xfa\x3a\xc5\x62\x91\xfd\
\xfd\x7d\x0d\xf6\xa6\xa6\x38\x7b\xf6\x2c\xf5\x7a\x9d\x66\xb3\x69\
\x55\x6c\x26\x16\x97\x89\x19\x75\xe7\xce\x1d\xb6\xb6\x34\xe3\x73\
\xe2\xc4\x09\x1b\x8e\x02\x74\x98\x0b\x13\x2f\xac\xd3\xe9\x58\x15\
\xa0\x89\x44\x6f\xda\xab\x5e\xaf\xd3\x6e\xb7\xad\x17\xa4\x31\x56\
\x17\x42\x50\xad\x56\x69\xb7\xdb\xf6\x1d\xec\xf5\x7a\x74\x3a\x1d\
\x9e\x7e\xfa\x69\x66\x67\x67\x89\xe3\x98\x52\xa9\x44\x92\x24\xdc\
\xbd\x7b\xd7\x86\xd5\x30\x4c\x97\xc9\xb9\x68\x12\x4f\x57\x2a\x15\
\xfb\xec\x0d\x90\xbe\x76\xed\x1a\x0b\x0b\x0b\xdc\xbb\x77\x8f\xb5\
\xb5\x35\x5a\xad\x36\xef\xbd\xf7\x1e\x17\x2e\x5c\xb0\x5e\x9f\x49\
\xd2\x5f\x44\x94\x4a\xda\xa1\x41\x29\xd5\x57\xe9\x0b\x07\x4c\x7c\
\xc9\xe5\x38\x54\x7f\x93\x8c\x81\x47\x1d\xbf\x73\x01\xd6\xa8\x81\
\xe8\x51\x90\xec\x0a\xde\x6c\x73\xeb\x9d\xf5\x66\x92\x52\xda\xc8\
\xc1\xdd\x5e\x8b\x7a\x7d\x07\xa5\x12\x94\x8a\xe8\x47\x76\xd7\x40\
\xcd\xac\xa4\x7c\x3c\x54\x5a\x86\x8d\x14\xef\xc3\xde\x9e\x1e\x2c\
\x4a\x25\x9d\xe3\x2a\x2c\xa4\xab\x58\x01\x26\x01\xb5\xc8\xc9\x53\
\x38\x6a\xb0\x7f\xd0\x32\xc9\x33\x3c\xac\xba\x2b\xfb\x8e\x7c\xd9\
\x98\xa5\x87\xd5\xfe\x0f\x03\x5c\x4d\x02\x9c\x26\x65\xbc\xc6\x49\
\x1f\x44\x28\x02\x87\xad\xf0\x7d\x9f\x44\x49\x3b\xb1\xf9\x9e\x87\
\x17\xf8\x74\xbb\xdd\x3e\xc0\x4a\x14\x24\x8a\x58\x45\xc8\x24\x41\
\xa2\xf0\x64\xda\x67\xd2\xb2\x0a\xa9\xb7\xaf\x4c\xbd\x7b\x95\x50\
\x08\x1c\xb6\x47\x79\xa0\xfc\x94\x25\x3b\x08\xae\xdc\xfb\x9c\x04\
\x5c\x99\x7b\x72\x19\x2d\xf7\xf8\x6c\x7e\x46\x73\x3c\x30\x10\xf7\
\xcb\x05\x53\x6e\xdc\x2c\xd3\x36\xe6\x18\x97\x9d\x02\xa3\x52\x1d\
\xb4\xcf\x32\x75\x34\x65\x99\x31\xc9\xb4\xad\xc9\x13\x68\x80\xc1\
\xed\xdb\xb7\x59\x5c\x5c\xe4\xe2\xc5\x8b\xdc\xbd\x7b\x97\x5b\xb7\
\x6e\xb1\xba\xaa\xd9\xaa\x9b\x37\x6f\xb2\xba\xba\x6a\x6d\x82\x00\
\x56\x6e\xad\xf0\xd4\x53\x4f\xf1\xa3\x1f\xfd\x88\xe5\xe5\x65\xa4\
\x94\x16\xb8\x6d\x6f\x6f\x53\x29\x97\x79\xed\xb5\xd7\x68\x36\x9b\
\xfc\xc5\x5f\xfc\x39\x1f\x7e\xf8\xa1\xf5\xd6\x53\x4a\x59\x86\xc6\
\xde\x73\x92\x30\x9f\xb2\x50\xc5\x62\x11\xe1\x79\xb4\x5a\x2d\x3a\
\x9d\x8e\x05\x0e\xa6\x4d\x8c\xcd\x97\x51\xa7\x15\x0a\x05\xb6\xb7\
\xb7\xe9\x74\x3a\xec\xed\xed\x59\xd6\xc9\x00\x25\xdf\xf7\x6d\x74\
\xf4\x7b\xf7\xee\x11\x04\x01\xe7\xce\x9d\xb3\x49\x96\x97\x96\x96\
\x6c\xe4\x76\xb3\xdf\x04\xf2\x9c\x99\x99\x61\x7a\x7a\x9a\x5e\xaf\
\xc7\xbd\x7b\xf7\x2c\x7b\x54\x2a\x95\x9c\x48\xe8\xb1\x65\xcc\x4c\
\x3b\x94\x4a\x25\xeb\x2d\x19\x45\x11\x7b\x7b\x7b\x6c\x6f\x6f\xdb\
\xfd\x61\x18\xda\x64\xd5\x71\x1c\xdb\xbc\x8c\xad\x56\x0b\xcf\xf3\
\xac\x81\x7b\xaf\xd7\x63\x63\x63\xc3\x26\xa0\x36\xf6\x69\x3b\x3b\
\x3b\xc4\x71\xcc\xcb\x2f\xbf\xcc\xda\xda\x1a\xbd\x9e\x8e\xd3\xb8\
\xb7\xb7\x67\xcb\xbf\x79\xf3\x26\xbf\xf8\xc5\x2f\x2c\x7b\xb9\xbf\
\xbf\x4f\xa5\x52\xb1\x39\x17\x0d\xc3\x05\xf0\xce\x3b\xef\x50\xa9\
\x94\x79\xfe\xeb\x2f\xe0\x79\xd8\xb9\xae\x5c\x2e\x73\xf7\xee\x1a\
\x53\x53\x53\xf7\xd5\xe7\x27\x95\x87\x35\x7e\x67\xfb\xe3\x51\xc0\
\x95\x35\x23\x18\x72\xfc\xc4\x65\x8c\x90\x20\x6f\xa0\x71\x0b\x7a\
\xd4\x99\x89\x61\x60\x0b\xb0\x1d\xd5\xb0\x58\xc6\x65\xb6\x52\xae\
\x52\xad\xd6\x90\x2a\x26\x49\x34\x5b\xa5\xcf\xd1\x1c\x94\x4b\xdd\
\x0b\x4f\xdb\x58\x25\x89\x44\x29\x49\xa7\x03\xcd\x66\x8b\x72\x59\
\x0f\x30\x85\x42\x81\x52\x51\x0f\x76\x08\x61\xed\xc2\x86\xb5\xa3\
\x61\xd8\xec\xbe\x87\xf8\x42\x8e\x92\xc3\x30\x3a\xa3\xee\xed\x61\
\xc8\x24\xf7\xf2\x30\xae\x73\x3f\xe5\x3d\x2c\x16\x6b\xd4\x31\x87\
\x05\x5c\xda\x46\x31\x05\x35\x68\x26\x4b\x6b\xd4\x3d\xf0\xf4\xa2\
\xa6\x52\x2e\x13\x05\x05\x9b\x4a\x47\x74\xb5\xc7\xa0\x9e\x98\x25\
\x8a\x44\x27\x64\x17\x9e\x56\xf1\x49\x40\x29\xe4\xff\xcf\xde\x9b\
\xc5\xc8\x75\xa5\x67\x82\xdf\x39\x77\x8b\x7d\xcd\x9d\x49\x26\x29\
\x95\x54\xa2\xaa\x54\x5a\xdd\x28\x0f\x5c\xf5\x52\x30\xe0\x86\x8d\
\x06\xfc\xd8\x2e\xcf\x3c\x78\x5e\x0c\xdb\x0d\x34\xe0\xb7\xe9\x17\
\xa3\xde\xdd\x03\x03\x8d\x81\xc7\x9e\x79\xb0\x0d\xb8\x3c\x68\xc3\
\x30\x60\x63\xac\x2e\x1b\xd0\xd8\xa5\x82\x5d\x25\xd1\x92\x2c\x51\
\x25\x8a\x62\x8a\xb9\x30\xd7\xc8\x8c\x7d\xbb\xdb\x99\x87\x73\xff\
\x3f\x4e\x44\x46\x6e\x64\x92\x22\x55\x3c\x40\x30\x83\x11\x37\xee\
\x7e\xcf\xf9\xce\xf7\x7f\xff\xf7\x23\x42\x18\xeb\xeb\x66\x4b\x0d\
\x46\x78\x92\x14\x2b\x44\x32\x42\x14\x69\xef\x2a\x99\x84\xf0\xc9\
\xe4\x77\xb2\x5c\x0f\x3d\xbf\x67\x95\x3a\x98\xe0\xc6\xfc\x6e\x32\
\x84\x38\x0d\x64\x99\xfa\x28\xda\x17\x73\xfb\x04\x8e\xcc\x7d\x9b\
\x64\xca\x6c\x69\x1d\xd1\x61\x4d\x5e\xa7\x49\xc0\x47\x03\x35\x39\
\x8f\x07\x41\x80\x4a\xa5\x82\x30\x0c\xf1\xf9\xe7\x9f\x63\x7b\x7b\
\x9b\x6b\x0f\x7e\xfc\xf1\xc7\xe8\xf7\xfb\x1c\xae\x0b\xc3\x10\x0a\
\xc0\x37\xbf\xf9\x4d\xbc\xfa\xea\xab\xb8\x7d\xfb\x36\x66\x67\x67\
\xd1\x49\xd8\x98\x42\xa1\x80\xeb\x2f\xbc\x80\x30\x0c\xf1\xd7\x7f\
\xfd\xd7\xf8\xe1\x0f\xdf\xe6\x2c\xbe\x30\x0c\xb5\x65\x02\xb4\x49\
\x26\xd5\x2d\x54\x51\x84\x30\x31\xbc\xb4\x6d\x07\xb6\x63\x73\xff\
\x58\x28\x14\x30\x1c\x0e\xd1\xeb\xf5\xd0\x6e\xb7\xb1\xb4\xb4\x84\
\x6e\xb7\xcb\xe1\x4e\x72\x52\x57\x4a\x21\x9b\xcd\x62\x71\x71\x91\
\x05\xf9\x64\x99\xd0\xef\xf7\xc7\xc2\x7d\x80\x36\x05\xdd\xdf\xdf\
\x47\xbb\xdd\xc6\xc6\xc6\xc6\x98\x39\xae\x0e\x9d\xe5\xd9\x2c\xf4\
\xf0\xf0\x10\x9e\xe7\xc1\xf3\x3c\x74\x3a\x1d\x6c\x6f\x6f\xa3\x58\
\x2c\x22\x9f\xcf\xa3\xd9\x6c\x62\x38\x1c\xf2\x18\x41\x4e\xef\x41\
\x10\x20\x93\xc9\x30\x73\x46\x61\x49\xd2\x7f\x51\xe1\x67\x3a\x2e\
\xca\x52\xf4\x3c\x0f\xd9\x6c\x16\x8e\xe3\x20\x0c\x43\xec\xef\xef\
\x73\x28\xb3\xd5\x6a\xb1\xa9\x28\x5d\xd3\x62\xb1\x88\x83\x83\x03\
\x0c\x87\x43\x38\x8e\xc3\x65\x8f\x28\xac\x38\x1c\x0e\xf9\x9c\x2d\
\x2d\x2d\x41\x08\xc1\xde\x5d\x14\x4e\x7c\xfb\xed\xb7\xf1\xe9\xa7\
\x9f\xe2\xd7\xfe\xe3\x77\xf1\xfa\xeb\x6f\x30\x6b\x5c\xaf\xd7\x13\
\x31\xbc\x03\xdf\x27\x4d\xd8\xe4\xf3\x9e\x84\xd6\xf9\xfe\x9e\x0c\
\x19\x8e\x7e\x73\x96\xae\xe2\xd4\xfe\xf9\xf4\x55\x9c\xab\x7f\x3c\
\xcf\xe4\xd2\x7c\x2f\x70\xfc\x84\xeb\x3c\x40\xeb\x24\x90\x75\x84\
\x66\x79\xdc\xd8\xaa\xfb\x6d\xa6\xfe\x81\x1e\x3c\x12\x10\x52\x7d\
\x2c\xdb\x76\x12\x8b\x07\x83\xd2\xc7\xf8\xec\x71\x52\xfc\x46\x33\
\x16\xaa\x75\x48\x7e\x33\x34\xe8\x98\xdb\x36\xdb\x45\x0c\xae\x8f\
\x4b\x7b\xd2\xf7\xff\x8b\x68\x17\x71\xce\x1e\x26\x95\x7d\xd6\x26\
\xc4\x28\x2c\x08\x24\x61\x40\xe3\x7b\xdb\xb2\xe1\x24\xc5\x7d\x6d\
\x5b\x67\xda\x3a\x96\x0d\xdb\xd2\xcf\x1e\x69\xad\xa4\x94\xfc\xec\
\x09\x00\x88\x47\xcf\xd6\x91\x02\xd0\x96\x7e\x09\x99\x6c\x5b\x90\
\x7d\xca\xd1\x8c\x3b\xde\xc7\x69\xfb\x3d\xf1\x7e\x12\x30\xd1\x77\
\xe6\x8b\xfa\x8f\x69\x2f\x21\x46\xf5\x16\x27\x99\xa7\x49\x97\x7a\
\x02\x13\x94\x99\x77\xdc\xeb\x38\xb0\x48\x83\xb1\xf9\x7f\x1a\x44\
\x49\xaf\xe3\x79\x1e\x0e\x0f\x0f\x71\x78\x78\x88\xe1\x70\x88\x20\
\x08\xb0\xb7\xb7\x87\x46\xa3\x81\xe1\x70\x88\xe1\x70\xc8\xbf\x2d\
\x14\xf2\x58\x5a\x5a\xe2\xcc\x3c\xc7\x71\x18\x28\x54\x2a\x15\xac\
\xac\xac\x60\x73\x73\x13\x6f\xbf\xfd\x36\x0e\x0f\xb5\x88\x9c\x8a\
\x7e\x13\x4b\x55\x2a\x95\xd8\x5b\xb0\xd7\xeb\xb1\xb5\x80\x52\xfa\
\x38\x29\xeb\xae\xd9\x6c\x8e\x80\x98\x52\xb8\x74\xe9\x12\x0a\x85\
\x02\x33\x66\xb4\xaf\x71\x1c\x23\x9d\x4e\xb3\xe3\xb9\xe7\x79\x63\
\x99\x7b\x8e\xe3\x68\xb7\xf8\x30\xe4\x6c\x3f\xdb\xb6\xd9\x16\x81\
\x7e\x2f\x84\x40\xb7\xdb\xe5\xfe\xba\xd9\x6c\xa2\xd3\xe9\x20\x97\
\xcb\x71\xb8\xb7\xd5\x6a\x21\x95\x4a\x21\x97\xcb\xc1\x75\x5d\xbe\
\x8e\xa9\x54\x0a\xb6\x6d\xa3\xdf\xef\x33\x83\x96\xc9\xe8\x48\x05\
\x85\x83\x09\x38\xb5\xdb\x6d\x76\x61\xa7\xeb\x4f\x6c\x1d\x4d\x30\
\x88\xc5\xaa\xd5\x6a\x1c\xc2\xa4\xac\xc5\x38\x8e\xb1\xb7\xb7\xc7\
\xc5\xa2\x33\x99\x0c\x83\x60\x29\x25\xaa\xd5\x2a\x2e\x5d\xba\xc4\
\xb5\x0e\x09\xb4\xed\xec\xec\x40\x29\xc5\x8c\xd7\xe6\xe6\x26\x56\
\x57\x57\xf1\xce\x3b\xef\xe0\xa3\x9b\x1f\x21\x8e\x63\x38\x8e\x83\
\x7e\xbf\x8f\x76\xbb\xcd\xa1\xd9\x9f\x85\x76\x16\x76\xff\x51\xac\
\x83\x9a\xf5\x5b\xbf\xf5\x5b\xbf\x47\xff\x99\xd6\x09\x1d\xf7\xff\
\xfb\x69\x17\xb5\x8e\xe3\x3a\xd2\xe3\x80\x0d\xbd\x68\xd6\x10\x86\
\x41\xf2\x0a\x93\x07\x9b\xf4\x1d\x49\xe7\x0d\xb3\x83\x15\x49\xf6\
\x45\xb2\x4d\x08\xd8\xb6\xa3\xdd\xe3\x13\x7a\x3b\xe5\x65\x92\x38\
\xbd\x80\x94\x16\xbf\x8e\x36\x9a\x85\x1a\x33\x04\x75\xbe\x1b\x7f\
\xda\xb1\x3f\x4a\x96\xf1\x61\x6f\xf7\x2c\xeb\x3c\xcb\xcd\x7e\x11\
\xeb\x79\x18\x00\xe5\x2c\x33\xa5\xf3\xae\xe7\xbc\xb4\xf6\xb4\xe5\
\x26\x43\x68\xd3\xda\x71\xc0\x44\x4f\x2e\xf4\xff\xa9\x92\x82\x30\
\x3c\xa6\x00\xe8\xec\x32\xc2\x47\x40\x62\x4d\x20\x13\x3d\x57\xa2\
\xe3\x8a\xf4\xc0\x0c\xa5\xd7\x29\x0d\x8f\x39\xfd\x57\x1e\x7d\x7e\
\x26\xf6\xc7\x7c\x3f\x0d\x78\x1d\xa7\x71\x3a\xee\x78\x4f\x03\x5b\
\x66\xe1\xeb\x69\x1a\xae\x69\x21\x3f\x13\x24\x29\xa5\x46\xac\xa0\
\xf1\xf9\x71\x25\x84\x4c\x16\x0c\xd0\xba\xa0\xc3\xc3\x43\x7c\xf5\
\x85\xaf\xa2\x50\x28\xe0\x9f\xff\xf9\x9f\x59\x2b\xb5\xb3\xb3\x83\
\xdb\xb7\x6f\x27\x4c\x47\x80\x30\x8c\x90\xcb\x65\x91\xcd\x66\xf1\
\x8b\xbf\xf8\x8b\x78\xfe\xf9\xe7\xb9\x76\xde\x70\x38\xc4\x47\x37\
\x3f\xc6\x37\xbf\xf9\x4d\xbc\x78\xfd\x45\x6c\x6f\x6f\xe3\xf7\x7f\
\xff\xf7\xf1\xf6\xdb\x6f\x23\x95\x18\x2c\x53\x98\xcf\xb6\x6d\x5c\
\xb9\x7c\x05\xa5\x52\x09\xf5\x7a\x1d\xbe\xef\xa3\x52\x2e\xc3\xf3\
\x34\x38\xc9\x64\xb3\x98\x9d\x9b\x85\xe7\x79\xe8\x76\xbb\x68\x34\
\x1a\xcc\xc4\x58\x96\x85\x4a\xa5\xc2\x46\x9d\x87\x87\x87\x6c\x10\
\x9a\xc9\x64\x30\x1c\x0e\x51\xaf\xd7\xd9\x64\x94\xfa\x6d\x32\x27\
\xa5\x10\x26\x79\x44\x55\xab\x55\x58\x96\x85\x62\xb1\xc8\xa6\xd0\
\x14\x56\xa4\x8c\xbf\x99\x99\x19\xb6\x42\x68\xb5\x5a\x28\x14\x0a\
\x0c\xb2\xc8\x06\x42\x08\xc1\x75\x18\xa3\x28\x82\xe7\x79\x98\x99\
\x99\xc1\xec\xec\x2c\xf2\xf9\x3c\x3a\x9d\x0e\x1a\x8d\x06\xfb\x66\
\x0d\x06\x03\xf4\x7a\x3d\xbc\xf0\xc2\x0b\x70\x5d\x17\xbe\xef\x33\
\x0b\x46\x2e\xfa\xed\x76\x1b\x83\xc1\x00\x2f\xbe\xf8\x22\x6e\xdd\
\xba\x05\xa5\x14\x6b\xb1\x16\x17\x17\x91\xc9\x64\x70\xfb\xf6\x6d\
\x00\xda\x25\x9e\xfc\xc5\x36\x37\x37\xb1\xbe\xbe\xce\xe7\xeb\xf6\
\xed\xdb\x58\x5b\x5b\xc3\xc2\xc2\x02\xa4\x94\x78\xe7\x9d\x77\xd0\
\xef\xf7\xb1\xb7\xb7\xc7\xa2\xff\xeb\xd7\xaf\x23\x95\x4a\xa1\x7e\
\xd8\xc0\xd2\xd2\x25\x36\x2d\x2d\x16\x8b\x58\x5d\xfd\x1c\x99\x4c\
\x06\x4a\x99\x22\x77\xb3\x3d\x62\x06\xeb\x82\xfa\xf8\x93\xfa\xd2\
\x33\x81\xa4\x29\x9b\xb8\x9f\x08\xc1\x49\x0c\x16\x1b\x8d\x52\x3b\
\x6e\x00\x7d\x9c\x00\xd6\xb4\x75\x9d\xc4\x18\x99\xd4\xba\xee\xa4\
\x62\x0c\x87\x7d\xf8\x7e\x80\xe1\xd0\x4f\x3e\xa7\xce\x11\x80\xd0\
\x61\x3c\x21\xc1\xba\x10\xfe\x0e\x02\x96\xa5\x07\x11\xc7\xb5\x93\
\x8c\x98\xac\x06\x58\x4a\x03\x35\x29\xb5\xf1\x29\xed\xc7\x68\xdf\
\xa8\xa3\x04\x38\x8b\xf0\x28\x89\x78\xee\xe3\x3f\xcb\x79\x9d\x1c\
\x2c\xa6\xbd\xce\xbb\x0f\x67\xdd\xf6\x79\xda\x45\x83\xf0\xc7\xa9\
\x3d\x2e\xe0\xea\xb8\xfd\x38\x0b\xc0\xd2\xfd\x6f\x12\xda\xa6\x7b\
\x11\x89\xf0\x1d\x80\xb0\x12\x40\x25\x12\x0d\x96\xa5\x41\x88\x63\
\xdb\xb0\x2d\x4b\x97\xd3\x81\xce\x20\xd4\xd9\x24\xfa\x99\x51\x0a\
\x49\x81\x40\x23\xe4\x97\x64\x0a\xc6\x88\x81\xe4\x59\x94\xb6\x95\
\x6c\x56\x1d\x7b\xff\x4e\x03\x54\xc7\x4d\xcc\x26\xc3\x82\xd3\x8e\
\x79\x04\xf0\x8e\x07\x59\xc7\x01\x2f\x13\x64\x4e\x86\xfa\x68\xdd\
\xb1\x8a\x13\xe1\x7e\xcc\x02\xfe\x98\x3a\x6e\x01\xfe\x7f\x14\x47\
\x80\xd0\x9e\x64\x96\x6d\xa3\xd9\x6a\xa2\xde\x68\xc0\x71\x1d\x5c\
\xb9\x72\x19\x9f\x7d\xf6\x19\xde\x7f\xff\x7d\x6c\x6f\x6f\x73\x01\
\xe7\xe1\x70\x98\xd4\xe7\xcb\xa3\x5c\x2e\x63\x65\x65\x05\x5f\xf9\
\xca\x57\xf0\x0b\xbf\xf0\x0b\xac\x2f\x72\x1c\x47\xdb\x24\x04\x21\
\x7e\xe3\x37\x7e\x03\xfb\xfb\x7b\xf8\xdf\xff\xeb\x7f\xc5\xdf\xfe\
\xcd\xdf\x20\x9f\xcb\xc1\xb2\x6c\xf4\x7b\x3d\x0e\x47\x79\x9e\x07\
\xdb\x1a\x69\xeb\xca\xe5\x32\x9e\x7f\xee\x39\xbc\xf2\xea\xab\x28\
\x97\xcb\x80\xa1\x97\xcb\xe7\xf3\x78\xee\xb9\xe7\xb0\xb2\xb2\x82\
\x52\xa9\x84\x62\xb1\xc8\xe0\x28\x9f\xcf\x23\x9d\x4e\x73\x99\x99\
\x99\x99\x19\xe4\x72\x39\x66\x8f\x2a\x95\x0a\xae\x5c\xb9\x82\x7c\
\x3e\x3f\xc6\x6e\x52\x88\x6d\x79\x79\x19\xcb\xcb\xcb\x38\x3c\x3c\
\x64\x96\x8e\x40\x16\x69\xa1\x66\x67\x67\xd9\xb9\x7e\x75\x75\x15\
\x42\x8c\x32\x06\xa9\x20\x74\xbd\x5e\x67\x0f\x2b\xd2\x8d\x49\x29\
\x59\xd4\x4e\xe1\x51\x40\x6b\x9b\x0e\x0e\x0e\xd0\xef\xf7\xf9\xfc\
\x91\x10\xbf\xdb\xed\x42\x08\x2d\xc8\x97\x52\x32\xfb\xf5\xca\x2b\
\xaf\x60\x63\x63\x83\xc1\x62\xbf\xdf\x47\x2e\x97\x43\xa9\x54\xc2\
\xcc\xcc\x0c\x83\xb7\x76\xbb\xcd\x06\xa9\xc4\x3a\x09\x21\xd8\x96\
\xe2\xa5\x97\x5e\xe2\x0c\xc6\x99\x99\x19\x5c\xbe\x7c\x19\xe5\x72\
\x05\xcb\xcb\x97\xf1\xdc\x73\xcf\xc1\xf7\x7d\xdc\x5d\x5b\xc3\x27\
\x9f\xdc\x82\xe7\x79\xb8\x7a\xf5\x2a\x4a\xa5\x12\xa2\x28\x4a\xc4\
\xf5\x89\x57\xd6\xfd\x24\x58\x71\xc6\xee\xe3\x81\x03\x26\xdb\xfd\
\xf4\x79\x64\xca\x74\xd2\x3a\xa6\x4d\xc8\x8e\xfe\xff\x1c\x00\xcb\
\x5c\xe9\xe3\x0c\xb0\xce\xb3\x5e\xea\x18\xa9\x73\x8b\xe3\x08\xdd\
\x6e\x87\x53\x6d\x29\xd5\xda\x6c\x66\xc7\x38\xd9\x81\xeb\xef\x2c\
\xa4\xbc\x14\xd2\xe9\x14\xb2\x99\xbc\xf6\x3e\x49\xc0\x97\x09\xb0\
\xc6\xf7\xc3\xf8\xfb\x88\x01\xd6\x45\xb7\x93\xc2\x31\x17\xb1\xde\
\x07\x5d\xc7\x69\xeb\x99\x16\x1e\x7a\x94\xed\x51\x84\x0c\xcf\xc2\
\x5c\x99\xed\x6c\x33\xcb\xf1\xce\xc7\x0c\x97\x49\x29\xb5\x4f\x95\
\xf9\x5d\xa2\xa3\x22\xb0\x01\x23\x04\x7f\x84\xa1\x49\x7e\x67\x86\
\x08\xa9\x69\xd0\x92\xd4\x32\x4c\x96\x35\xb7\x3d\xb9\x3f\xe4\x57\
\x35\x79\x5c\x27\x75\x98\xc7\x7d\x46\xbf\x3b\xed\x75\x1c\x08\x3b\
\x0e\x00\x9a\x42\xf8\x69\xac\xa0\xf9\x1b\x3a\x57\x24\x6c\xb7\x6d\
\x1b\x7b\x7b\x7b\x68\xb5\x5a\x98\x99\x99\x41\x36\x9b\xc1\x9f\xff\
\xf9\x9f\x63\x67\x67\x87\x6b\xed\xd5\xeb\x75\x06\x30\x7a\x30\x2e\
\xe3\xfa\xf5\xeb\x78\xf5\xd5\x57\xb9\x3c\x4d\xa1\x50\xc0\xc6\xc6\
\x06\x1a\x8d\x06\xbe\xfb\xeb\xff\x33\x76\x76\x76\xf0\x17\x7f\xf1\
\x17\xf8\xcb\xff\xfe\xdf\x91\x4a\xa5\xb4\x26\x29\x08\x11\x24\x0c\
\x0d\xed\xd7\xee\xce\x0e\xea\xf5\x3a\xaa\xd5\x2a\x84\x10\x58\xbd\
\x73\x07\xb7\x3f\xfb\x4c\x5b\x45\xf4\x7b\x88\x92\x70\x1d\x15\x5f\
\xa6\xf2\x35\x24\xe2\x6e\xb7\xdb\x78\xf6\xd9\x67\xf1\xcc\x33\xcf\
\x20\x08\x02\x7c\xf0\xc1\x07\xa8\xd5\x6a\x1c\x4e\x8c\xe3\x98\x4b\
\xf4\xdc\xbb\x77\x0f\x7b\x7b\x7b\x68\xb7\xdb\x1c\xea\x24\xad\xd4\
\xea\xea\x2a\x87\xc2\x72\xb9\x1c\x66\x67\x35\x73\x16\x45\x91\xf6\
\xf6\xba\x7e\x1d\xef\xbf\xff\x3e\xd6\xd6\xd6\x30\x33\x33\xc3\x76\
\x0e\xbe\xef\xe3\xd5\x57\x5f\x85\xe7\x79\xb8\x7b\xf7\x2e\x7c\xdf\
\x47\xb1\x58\xc4\xfc\xfc\x3c\x00\x8c\xf4\xb5\x46\xd6\x1f\x99\x88\
\x12\x4b\x9b\xcb\xe5\xb0\xb3\xb3\x03\x32\x26\x1d\x0e\x87\x9a\xc1\
\x4b\xea\x36\xb6\xdb\x6d\xf4\x7a\x3d\xd4\x6a\x35\x06\x9c\x64\xdd\
\x50\xaf\xd7\xd1\x6a\xb5\xf0\x9d\xef\x7c\x07\x8e\xe3\x60\x6f\x6f\
\x8f\x1d\xde\xe7\xe7\xe7\x59\xef\x46\xcb\x17\x0a\x05\xf4\xfb\x7d\
\xdc\xba\x75\x8b\xc3\xa2\x57\xaf\x5e\x85\xeb\x6a\x96\x70\x67\x67\
\x07\xbb\xbb\xbb\x58\x5f\x5f\xc7\xcd\x8f\x3f\xc6\xed\x4f\x6f\xe3\
\xc6\x8d\x1b\xf8\xce\x77\xbe\x03\xcf\x4b\xa1\x5e\xaf\x73\x36\xe4\
\x97\x11\x60\x51\x3b\x0f\xf3\x35\x09\xb0\xa6\xad\xe3\xb8\x7d\x1d\
\xdf\xce\xf1\xdb\x3c\x73\x2d\xc2\x2f\x5a\x77\x73\xbf\x03\xba\x39\
\x43\x25\x77\x62\xc7\xf1\x90\xcd\xe4\xd1\xcf\xf6\xd1\xed\xf6\x10\
\xc7\x6a\x4c\xfb\xa1\xa9\x54\xcd\x58\x11\xc8\x32\x53\x65\x95\x02\
\x82\x40\xc7\xe0\xbd\x94\x83\x5c\xb6\xa4\x85\x97\x8e\x80\x6d\x47\
\x49\x7d\xb6\x8b\xc9\xaa\x3b\xdb\x05\x7e\x34\xed\x22\xb6\xf9\x28\
\xc0\xe0\x59\xc0\xd3\x59\x40\xd8\xb4\x42\xc3\x93\xeb\x38\xcb\xbe\
\x9c\xf6\xdb\x47\x71\x2d\x4f\x63\x69\x4e\x5a\x86\x9f\x3d\xc3\x19\
\x3a\x09\x2a\x00\x04\x0e\x92\x65\x6d\xa1\xab\x20\x44\x49\xc8\x01\
\x31\xe0\xda\x0e\x94\x65\xc3\x73\x5c\xa4\x5c\x0f\x69\x2f\x85\x7e\
\xbf\x87\xae\xdd\x45\x4f\x5a\x23\x1d\x4e\xb2\x12\x9a\x0c\x05\x51\
\x88\x30\xd6\xec\x80\x1d\x25\xba\x2e\xcb\x86\x9d\xe8\x60\x4c\x80\
\x36\x6d\x12\x64\x86\x0d\xa7\x1d\xcf\x34\xf1\xfa\x64\x48\x6f\xda\
\xf9\x31\xb7\x63\x66\x07\x4e\xfe\x5e\x4f\xe6\x62\x96\x26\x50\x68\
\x8f\xc4\xfb\xb4\x9c\xe9\xa5\x45\xdb\x31\xed\x0c\x08\x50\xd1\xfd\
\xa8\x94\x76\x04\xd7\xfe\x48\x02\xcb\xcb\xcb\x78\xfb\xed\x7f\x62\
\x31\xf8\xea\xea\x2a\xb3\x2a\xa4\x6d\xb2\x2c\x0b\xcb\xcb\xcb\x78\
\xf6\xd9\x67\x91\xcb\xe5\xd0\x6c\x36\xe1\xba\x2e\x94\x52\xf8\xe4\
\x93\x4f\xf0\xc6\x1b\x6f\x20\x9f\xcf\xe3\x57\x7f\xf5\x57\xd1\x6a\
\x36\xd9\x7a\x20\x93\xc9\x20\x9d\x4e\x41\x25\x2c\x8e\x94\x52\x97\
\xa3\xc9\xe6\xd0\x6e\xb7\x19\xf8\x64\xd3\x69\x7c\xed\xa5\x97\xb0\
\xbd\xbd\x8d\x9d\xdd\x5d\x64\xb2\x19\x66\x92\x88\x29\x02\xc0\x96\
\x04\xd7\xae\x5d\xc3\xed\xdb\xb7\xd1\xe9\x74\x10\x45\x11\x0b\xd2\
\x29\xc4\x47\x96\x07\xc4\x16\x2d\x2f\x2f\x63\x76\x76\x16\x51\x14\
\xe1\xce\x9d\x3b\x28\x97\xcb\xd8\xdd\xdd\xc5\x60\x30\x40\x2e\x97\
\x43\xb9\x5c\xe6\xcc\xc4\x7e\xbf\x8f\x2b\x57\xae\x60\x30\x18\xe0\
\xcd\x37\xdf\x44\xb3\xd9\x44\x3e\x9f\x47\xad\x56\x43\xa1\x50\x40\
\xb1\x58\x64\x96\xe8\xdd\x77\xdf\x65\x6d\x16\x65\xe6\x5d\xbb\x76\
\x0d\xed\x76\x1b\x42\x68\x5f\xad\x8d\x8d\x0d\xe4\xf3\x79\x54\x2a\
\x15\xae\x51\x48\xcb\x13\xd3\x05\x80\x3f\xa3\x49\xbb\xeb\xea\x3a\
\xb8\xdb\xdb\xdb\xb8\x72\xe5\x0a\x9b\x9a\x92\x88\x7f\x7b\x7b\x1b\
\x6f\xbe\xf9\x26\xb2\xd9\x2c\x32\x99\x0c\x0b\xe7\x37\x36\x36\xf0\
\xcc\x33\xcf\xe0\xf5\xd7\x5f\x87\xeb\xba\xf8\xbb\xbf\xfb\x3b\xf4\
\xfb\x7d\xbe\xa7\xe8\x7c\xbe\xf5\xd6\x5b\xb0\x6d\x07\xe9\x74\x06\
\x9e\xe7\x21\x9d\x4e\xa3\x5a\xa9\xe2\xe5\x6f\xbc\x82\x6b\xd7\xae\
\x21\x08\x02\x7c\xff\xfb\xdf\xc7\xaf\xfd\xda\x77\xb1\xb4\xb4\x84\
\xd5\xd5\x3b\xb8\x76\xed\x1a\x0e\x0e\xf7\xf9\x9e\x53\x4a\xc1\xf3\
\x5c\x16\xee\xeb\x7b\x6c\x14\x32\x9c\x7c\x7e\x26\xfb\xbc\xc9\x65\
\x26\x9f\xc3\x69\xeb\x38\x12\x7c\x3c\xe6\x39\x3d\xe9\xfb\xf3\xf6\
\xbd\x53\xdf\x0b\xc3\xba\xe2\x3e\xd7\x21\xc4\xf4\xbe\x9c\x31\xc7\
\x69\x2b\x7f\x1c\x43\x2d\x67\x69\xe6\xcc\x90\xfe\x6f\x52\xf7\xba\
\xb3\x76\x61\x49\x67\x62\x26\x0a\x28\x35\xbd\x5c\x05\x35\x15\x8f\
\x42\x8e\xf4\x50\x0c\x87\x43\x08\x48\xb8\xae\xee\xf0\xa9\x83\x9b\
\x76\xfe\xf4\x79\x7d\x34\xe7\xe1\x49\x6b\x67\x05\x47\x4f\xdb\x17\
\xdb\xc6\x83\xde\x80\xc0\xd1\x8e\x13\x18\x67\x8f\x95\x52\x49\x0a\
\xba\x07\xa5\xc0\x66\xbc\x34\x98\x53\x1b\x01\xa7\x11\xbb\x15\x45\
\x21\x84\x50\xc9\xcb\x86\x95\x08\xe4\xe9\x99\xa6\x46\xcc\xd5\x24\
\xc0\x9a\xec\x0b\x4c\xbd\x93\xf9\xd9\x89\xc7\x7c\x02\x7b\x7e\x1c\
\xc0\x22\xcd\x92\x09\xb0\x26\x59\x2d\x93\x6d\xa3\xe5\x4c\x6f\x2c\
\x0a\x8f\x11\x73\x12\x86\x21\x36\x37\x37\x01\x68\xc7\xf2\xdd\xdd\
\x5d\xbc\xf7\xde\x7b\xd8\xda\xda\xe2\xf0\x5a\x36\x9b\x4d\xb2\xdf\
\x9a\x58\xbd\xb3\x0a\xd7\x75\xf1\xed\x6f\x7f\x1b\xb9\x5c\x0e\x9b\
\x9b\x9b\x6c\x8a\x79\xf7\xee\x5d\x34\x9b\x4d\x54\xab\x55\xfc\xde\
\xef\xfd\x1e\x6e\xdf\xba\x05\xc7\x71\xd8\x3d\x3d\x0c\x43\x78\xae\
\x66\x50\xa8\x6e\xe1\xdd\xbb\x77\x71\x6f\x63\x13\x4a\x29\x38\x8e\
\x03\x00\xc8\xe5\x72\x6c\x92\x39\xf4\x87\x90\x89\x61\x67\xbb\xdd\
\x46\xb9\x5c\xc6\xe5\xcb\x97\x91\xc9\x64\xb8\x16\x1f\x89\xf3\xfb\
\xfd\x3e\xaf\x9b\x18\xab\x7a\xbd\xce\x59\x75\x42\x08\xce\x96\x6c\
\xb5\x5a\x9c\xad\xb7\xb5\xb5\xc5\xc5\xa3\xc9\xe2\x80\x92\x8e\x8a\
\xc5\x22\xda\xed\x36\x3e\xff\xfc\x73\xf8\xbe\x8f\x54\x2a\x05\xd7\
\x75\x31\x37\x37\x87\x4e\xa7\x03\xdf\xf7\xb1\xb0\xb0\x80\x77\xdf\
\x7d\x17\x51\x14\x71\x98\x94\x44\xf5\xe4\xf5\x45\xa2\xfd\x42\xa1\
\xc0\x16\x15\x51\xa4\xcb\xa5\x2d\x2e\x2e\x62\x6d\x6d\x8d\xbd\xbf\
\x28\x34\xe9\xfb\xfe\x18\x80\x8e\xa2\x88\x01\x6d\xa5\x52\xc1\xec\
\xec\x2c\x1b\x8e\x92\x53\x3e\x95\xf5\x31\x0b\xa8\x6f\x6f\x6f\xf3\
\x75\xfc\xfa\xd7\xbf\x8e\x9f\xfe\xf4\xa7\x70\x1c\x27\x61\x2b\xb3\
\xd8\xd9\xd9\xc1\xfe\xfe\x3e\x4a\xa5\x32\x5e\x7b\xed\x75\xa4\x52\
\x29\x7c\xfc\xf1\xc7\x48\xa5\x5c\x76\x9c\x4f\xa7\xd3\xf8\xde\xf7\
\xbe\x87\x37\xdf\xfc\x1f\xf8\xab\xbf\xfa\x2b\x5c\xb9\x72\x05\x1b\
\x1b\x1b\xf0\x52\x0e\x16\x16\x16\x38\x13\x71\x30\xd0\xb5\x19\xe9\
\xfe\xa2\xfb\xf0\xb4\xf6\x20\x0c\xfa\xa3\x5c\xc7\x59\xda\xc3\xda\
\x8f\x53\x7d\xb0\x9e\x44\x90\x65\xee\xbb\xd9\x81\x9a\x19\x84\x9e\
\x97\xe6\xcc\x18\x4b\x3a\x88\x44\x52\x56\x00\xa3\xe5\x09\x70\xe9\
\x95\x09\x40\x09\xa8\x58\xdb\x36\xc4\x11\x38\x53\xa6\xd7\xeb\x25\
\x33\x0c\x99\xac\x37\xe6\x32\x05\x66\xe7\xff\xa4\x9f\xd7\x47\xd1\
\x9e\x02\xac\x27\xa8\x4d\x5c\x26\x01\x70\x88\x30\x09\xae\x23\x12\
\xe3\x4c\x91\x25\xb4\xa1\xa8\x23\xf5\xcb\xb3\xf5\xcc\xb9\x67\x69\
\x36\x60\x38\x1c\x42\x89\xc4\x45\x3d\xf4\x11\x86\x11\x62\x05\x44\
\x10\x88\x23\xad\x45\x82\x02\x84\x25\x74\x2d\x51\x21\xc6\x3c\x96\
\x00\x24\x0c\xb2\xc5\xf7\xd1\x34\x1f\x2b\xe0\xe8\xcc\xf3\x24\x00\
\x75\xda\xff\x27\x01\x96\xc9\x92\x99\xec\x93\x19\x4a\xa4\xed\xca\
\x04\x80\xc5\x71\x0c\x18\x93\x33\x2b\x39\x8f\x51\xf2\x9d\xb0\x2c\
\x0c\x83\x00\xc3\xe1\x10\x6b\x1b\x1b\xa8\x56\xab\xf0\xd2\x69\x7c\
\xf0\xe1\x87\xb8\x73\xe7\x0e\x03\x00\xf2\x9e\xd2\x8c\x44\x84\x52\
\xb9\x84\xd7\x5e\x7b\x0d\x2b\x2b\x2b\xb0\x6d\x1b\xb3\xb3\xb3\x28\
\x97\xcb\xd8\xd8\xd8\xc0\x7b\xef\xbd\x87\x6f\x7e\xf3\x9b\xb8\x75\
\xeb\x16\xfe\xf2\x2f\xff\x12\x50\x0a\xae\xe3\x20\x95\x4e\xb3\x90\
\x3b\x0c\x02\x08\x08\x7c\xf8\xe1\x87\xe8\xf7\xfb\x28\x16\x8b\xb8\
\x7a\xf5\x2a\x7b\x2b\xf9\xbe\x0f\x09\x60\x6b\x6b\x0b\xbd\x5e\x0f\
\xc3\xa1\x8f\x76\xa7\xcd\x19\x7b\xbd\x5e\x0f\xf7\xee\xdd\xe3\x12\
\x32\xe4\x01\x45\xf7\x05\x39\xbc\x9b\x13\x56\x02\x3d\x54\xac\x1a\
\x00\xdb\x24\x7c\xfb\xdb\xdf\xc6\x0f\x7f\xf8\x43\x38\x8e\x83\x6a\
\xb5\xca\xd7\xb5\xd3\xe9\x30\x5b\x95\xcf\xe7\xa1\x94\xe2\xfa\x8c\
\x54\x0f\x71\x38\x1c\x62\x7e\x7e\x1e\xa5\x52\x09\xbe\xef\xa3\x5a\
\xad\x62\x30\x18\x30\x48\x22\x1f\x2e\x02\x69\xa4\xf9\x22\xc3\x56\
\x0a\x5d\xbe\xf8\xe2\x8b\x28\x97\xcb\xb8\x79\xf3\x26\x00\x30\x4b\
\x49\x3e\x63\x94\x75\x48\x86\xad\x41\x72\xdd\x84\x10\x68\x34\x1a\
\x9c\xf1\x98\x4e\xa7\xa1\x94\xe2\x0c\x4b\xc7\x71\x50\x2e\x97\x11\
\xc7\x31\x03\xcd\xe5\xe5\x65\xf8\xbe\x0f\x21\x04\x3c\xcf\xc3\xf2\
\xf2\x32\x66\x66\x66\x70\xf7\xee\x5d\xc4\xb1\xc2\xfa\xfa\x3a\xd7\
\x60\x1c\x0e\x7c\xec\x6c\xef\xf2\x39\xc9\x66\xb3\xf8\xd1\x8f\x7e\
\x84\xef\x7d\xef\x7b\xf8\x2f\xff\xe5\x7f\x43\x3e\x9f\x47\xab\xdd\
\xc0\xe1\xe1\x21\x03\x7e\x1d\xd5\x71\xf8\x9e\x39\x8e\xb5\x39\xee\
\xb3\xd3\x96\x39\x8d\x99\x7a\x98\xeb\x38\x4b\x7b\x98\xc7\x7b\xa2\
\x0f\xd6\x79\xd0\xac\xf9\xdb\x87\xd9\xce\x12\xea\x98\xf6\x7f\x73\
\xb6\x4b\x37\x93\xe3\x78\xb0\x6d\x77\x4c\x6f\xa5\x97\x9d\xb2\x5d\
\xa8\x64\xd6\x4d\x33\x6c\xc1\xe6\xa5\x54\x65\x5d\x08\x0b\xd9\x4c\
\x98\x74\x2c\x8a\x3b\x98\xa3\x1d\xb9\x71\x2c\x8f\x20\x3c\x74\x96\
\xf6\xa8\x40\xcb\x45\x84\xee\xbe\xe8\x70\x35\xb5\xc7\x65\x3f\xbe\
\xc8\x36\xc9\x64\xf1\xe7\x04\x30\x0c\x66\x48\x29\xa5\x45\xda\x62\
\xdc\x3a\x85\xd9\x19\x5b\x87\xc3\x94\x40\xe2\xe4\x9d\x58\x1c\x24\
\x69\xff\xb1\x8a\x10\x4b\x01\x15\xc7\x50\x96\xd2\xa2\x79\x83\x95\
\xa6\xed\xd2\xa0\x31\x59\x52\x66\x1a\x93\x65\xb6\xe3\x42\x10\xe7\
\x01\x59\x66\xa8\xcf\x04\x53\x93\x9f\x99\xdb\xb4\x0d\xc6\xca\x64\
\xb3\x26\x41\x99\x52\x0a\xcd\x66\x13\xad\x56\x8b\x33\xeb\xea\xf5\
\x3a\x6e\xdc\xb8\xc1\xce\xe7\x74\x2e\xa5\x94\x08\xc3\x10\xd9\x6c\
\x16\xaf\xbe\xfa\x2a\x5e\x7f\xfd\x75\x2e\x23\x33\x33\x33\x83\x5e\
\xaf\x87\xf7\xde\x7b\x8f\x43\x70\x7f\xf6\x67\x7f\x06\xc4\x31\xf2\
\xa5\x12\xac\x64\x9f\xc9\x62\x20\x08\x02\x6d\xbf\x91\x4c\x48\xc9\
\xd7\x6a\x7b\x7b\x1b\xfd\x7e\x1f\x0b\x0b\x0b\x98\xad\x56\x99\x99\
\x49\xa5\x3c\x14\x4b\x45\xac\xac\xac\x60\x76\x76\x16\xad\x56\x0b\
\x5b\x5b\x5b\x1c\xda\xba\x7a\xf5\x2a\x84\x10\x58\x5c\x5c\x64\x56\
\x4a\x4a\xc9\xac\xcb\xf2\xf2\x32\x87\x41\x09\xe4\x51\x16\x22\xd5\
\x58\xfc\xd6\xb7\xbe\x85\xf7\xdf\x7f\x9f\x3f\x37\x8d\x42\x0b\x85\
\x02\xe6\xe7\xe7\x71\xe7\xce\x1d\x34\x1a\x0d\x66\xf5\x88\xb5\x6b\
\x34\x1a\xf8\xc7\x7f\xfc\x47\x5c\xb9\x72\x05\x96\x65\x61\x67\x67\
\x67\xac\xbc\x0e\x65\xff\x11\x30\x27\xb7\xf6\x74\x3a\xcd\xfa\xa7\
\xfd\xfd\x7d\x16\xec\x13\x38\x23\xc0\x04\x80\x45\xf1\x9d\x4e\x07\
\xf5\x7a\x1d\x33\x33\x33\x9c\x71\x49\x56\x10\xbd\x5e\x0f\xe5\x72\
\x99\x45\xf7\xe6\x04\x81\xac\x23\x86\xc3\x21\x6e\xdd\xba\x85\xd9\
\xd9\x59\xb4\xdb\x6d\xdc\xba\x75\x0b\xdb\xdb\xdb\x98\x9f\x9f\x4f\
\xb4\x5e\x5d\xac\xad\xad\x71\x08\x51\x29\x20\x15\x46\xb8\x72\xe5\
\x0a\x16\x16\x16\xb0\xb9\xb9\x89\x37\xde\x78\x03\xf5\x7a\x1d\xff\
\xfa\xaf\xff\x8a\x6f\x7f\xfb\x7f\x42\xa7\x5b\xc1\xea\xea\x2a\xbb\
\xec\x0b\x01\xd8\xb6\xc5\x20\x71\xda\xf3\xc0\xef\x4f\x00\x1b\x67\
\x05\x1e\xc7\x85\x08\xcf\xb3\x8e\xfb\x59\xe6\xe8\x8f\x70\xb4\x8c\
\xd6\x19\xf7\x63\xfc\xff\xc7\xaf\xe3\x4b\x13\x22\x3c\x2b\xc5\x3f\
\xea\x04\xb5\x10\x7d\x32\x14\x38\x79\xf9\xf5\x2a\xa9\x63\xa6\xf7\
\x14\xde\x10\x1c\x0e\x8c\xa2\x08\xd1\x98\x8e\x6b\xfc\x44\x3f\x29\
\xe7\xf1\x69\x7b\xda\x4e\x6a\x7c\x17\xab\xb1\x3f\x47\xbf\x37\xfe\
\x2f\x20\x46\x1d\x59\x32\xa7\x10\x10\x90\xc2\x82\x9d\x64\xe4\x46\
\x51\x04\x2f\xf2\xa0\x94\xc2\x30\xd0\xb3\xf5\x30\x0e\x20\xe3\x08\
\x2a\x02\x62\x45\xf6\x05\x0a\x91\x8a\x10\xaa\x50\x87\x25\x93\x67\
\x6b\x12\xc8\x98\xe5\x6d\x26\xfb\x86\x87\xf5\x2c\x4e\x86\x07\x8f\
\xfb\x7e\x52\x76\x60\xee\xb3\xf9\xb9\x09\x08\x29\x34\x48\x6c\x39\
\xd9\x26\xec\xee\xee\xa2\x5e\xaf\x43\x29\x85\x7e\xbf\xcf\x75\xf3\
\x32\x99\x0c\x03\x22\x62\x73\x00\xad\x43\x35\x9d\xc9\x4b\xa5\x12\
\xde\x7f\xff\x7d\xed\x2b\x65\x59\x7a\xf2\x18\x45\x80\x52\xf0\x3c\
\x4f\xef\x57\x14\x21\x93\xce\x8c\xed\x43\x2f\xd6\x8c\x10\x89\xc0\
\x0f\x0e\x0e\xd0\xee\x75\x13\x0f\x28\x3d\xac\x34\x1a\x0d\xfd\xfb\
\xb1\x17\x00\x00\x20\x00\x49\x44\x41\x54\x2e\xe0\xdc\xe9\x74\x58\
\x24\x5f\xad\x56\xc7\x00\x25\x81\x03\x62\x8b\x28\x3b\x8f\x98\x2d\
\xd2\x0b\x91\xbb\xfb\xfe\xfe\x3e\x7b\x55\x79\x9e\x37\x96\xc9\x47\
\xfb\x43\x85\xa1\xc9\xea\x80\x2c\x1e\x94\x52\xac\xc1\xa2\x08\x04\
\x6d\x1b\x00\xeb\xd2\x94\x52\xcc\x42\x11\x68\xa5\xf0\x9d\xef\xfb\
\x58\x5f\x5f\xe7\xec\x3e\x0a\xa5\x92\xcf\x19\xed\x2b\x01\x29\x12\
\xc7\xd3\x75\x26\xf3\x6b\xca\x08\x24\x26\x89\x58\x57\xba\xc6\x66\
\x21\x71\x5a\x2f\x00\x36\x2c\x25\x00\x6c\x59\x16\x27\x13\xf4\x7a\
\x7d\x44\x61\x8c\x6a\xb5\x8a\xa5\xa5\x25\xf6\x45\xab\xd5\x6a\xf8\
\xc1\x0f\x7e\x00\xcf\x73\xf0\xf2\x2b\x2f\x73\x96\xa2\x52\x0a\xb6\
\x6d\x31\x83\x7a\x9e\x67\xe3\x51\xb0\x47\xe7\x5d\xc7\xfd\xb6\xf3\
\xae\xe3\xac\xcb\x1f\x01\x58\x93\x60\xe0\x71\x06\x07\x27\x51\xfe\
\xc7\x7d\xc6\x1d\x1c\x2c\x08\x31\xf2\xac\x92\xd2\x3a\xb2\x3e\xfd\
\x7f\xa5\x59\xab\x88\x00\x56\x0c\x21\x62\x08\xa1\x07\x0a\x8a\xe1\
\xeb\x0c\x12\x97\x1f\x76\xcb\x3a\xba\x2e\x93\xb9\x3a\xeb\x29\x7d\
\x54\xe7\xff\x71\xb9\xce\x8f\x8a\x15\x7a\x5c\x8e\xf7\x89\x6a\x6a\
\x3c\x01\xe9\x2c\x57\x8a\x97\xd7\x8f\x52\xc2\xda\x6a\x80\x65\x49\
\x0b\xd2\xd5\x36\x05\x42\x08\x28\xa9\x43\x3a\x31\x74\x69\x2a\x61\
\x0b\x08\x29\x11\x86\x01\xe0\x27\x83\x98\x52\x08\xe2\x00\x2a\x54\
\x50\x06\x88\x22\xfd\x08\x65\x2b\x8e\xf9\x4c\x4d\x48\x06\x26\xc1\
\xd6\x24\xd3\x65\x7e\x67\xbe\x3f\x8e\xb9\x3a\x4b\x78\xd1\x64\xb7\
\xcc\xec\x41\x02\x82\x00\x78\x80\x9d\xdc\x1f\x3a\x96\x20\x08\xd0\
\x6a\xb5\x98\x35\x52\x4a\xe1\xce\x9d\x3b\xd8\xdf\xdf\x87\x25\x14\
\xda\xed\x36\x97\x4f\xa1\x8c\xb1\x42\xa1\x80\x85\x85\x05\x08\x21\
\x58\x67\x14\x45\x11\x3e\xf8\xe0\x03\x1c\x1e\x1e\x62\x69\x69\x09\
\x7f\xf7\x77\x6f\x62\x30\x18\xc0\x4a\x00\x44\x1c\x45\x90\x09\x48\
\x00\x80\x48\x48\x36\xd3\xec\xf7\xfb\x5a\x3b\xd5\xd5\xd9\x6d\xc5\
\x62\x11\x96\x65\xa1\xdb\xed\xa2\xd9\x6c\x72\x39\x9e\xfe\x60\x80\
\xf5\xf5\xf5\x23\x99\xa2\x64\xc3\x40\x42\x70\x62\x78\x4c\x50\x29\
\x84\x60\x07\x77\x02\x10\xc4\x0c\x75\xbb\x5d\xb6\x3c\xe8\xf5\x7a\
\x28\x16\x8b\xdc\xff\x66\x32\x19\x64\x32\x19\xd4\xeb\x75\x34\x9b\
\x4d\x16\xaa\x93\x38\xbf\x56\xab\x21\x93\xc9\xe0\x85\x17\x5e\xe0\
\xfa\x8c\x83\xc1\x80\x43\x90\x64\xa0\x4a\x6c\x20\xf9\x83\x11\x13\
\x68\x5e\xab\xb5\xb5\x35\xd4\xeb\x75\x16\xbc\xd3\x35\x26\xa0\x46\
\x21\xd0\x54\x2a\xc5\xb5\x21\x49\x58\x4f\xba\xac\x42\xa1\x80\xbd\
\xbd\x3d\x06\x66\x14\x22\x24\xe3\x55\x02\x75\x80\x66\xc2\xa4\x94\
\x1c\x32\x0d\x92\x7a\x91\x71\xac\x18\xd0\x55\x2a\x15\x54\xab\x12\
\xdd\x8e\xae\x3d\xb8\xbb\xbb\x8b\x20\x08\xb0\xb5\xbd\x8e\x7e\xbf\
\x8f\x7f\xf9\x17\xed\x91\xf6\x87\xff\xe7\xff\xc1\x2c\x24\xb1\x65\
\x41\xe0\xb3\x99\x2b\x8d\x7b\x63\xcf\xc4\xc4\xed\x7d\x12\xd3\x35\
\x2d\xf2\x75\xd1\xcc\xd4\xb4\x89\xd3\xb9\x41\x12\x46\x1e\x74\xc7\
\x6d\xf3\xd4\xfd\x48\xea\x49\x1c\xb7\x8e\xb1\x10\xe1\x71\x1d\xc6\
\xe3\x14\x22\x04\xee\x7f\x7f\xa8\x73\xd5\x0f\xbd\xd2\x05\x9d\xc9\
\x1c\x54\x58\x88\x45\x64\xb0\x54\x31\xb3\xa1\x2a\xd6\x8c\x15\x89\
\x72\x45\x02\xb2\xf4\x7a\x46\x20\xcb\xf7\x7d\xa6\xd4\x1d\xc7\xe3\
\x6d\x9e\x18\x76\x3d\x03\xeb\xf6\x28\x40\xc7\xe3\x74\xed\xce\xc2\
\x44\x3e\x68\xbb\xa8\xf3\xfa\x28\xf6\xf5\x71\x69\xc7\x1e\x89\x1a\
\x85\xd5\xd5\xc4\xb2\x0a\xd3\x80\x8d\x66\x8a\xf5\xb9\x91\xb0\xa4\
\x16\x32\x2b\x09\x38\x4e\x90\x00\x2c\x1f\x96\x6b\x25\x6c\x86\x0f\
\x21\x81\xa1\x3f\x44\x18\x46\x50\x41\xa4\x3d\x7d\x94\x62\x80\x44\
\x02\x61\x02\x5a\x94\x65\x68\xce\xfe\x4d\x76\xd9\x04\x32\x93\xcf\
\xe7\x49\xd7\x74\x92\xa1\x3a\xee\xf9\x1e\x3b\x3d\x6a\x94\xe5\x38\
\x09\xb0\x00\x40\x28\x05\x21\x25\x24\x14\xa4\xb2\x92\x93\xa9\x27\
\x74\x34\xd4\xf9\x41\x80\x4e\xa7\x8d\x58\xc5\xc8\x64\xb3\x28\x95\
\x4b\xf8\xfc\xf3\xbb\x58\x63\x10\xa3\x59\x9e\x72\xb9\xcc\xc0\xc0\
\xb6\x6d\xac\xac\xac\x60\x69\x69\x89\xc1\xdb\x60\x30\x40\xbf\xdf\
\xc7\x47\x1f\x7d\x04\xd7\x75\xf1\xd9\x67\x9f\xa1\xdb\xe9\xc0\x71\
\x9d\x64\xc2\x99\xf8\x97\x25\x7a\x38\xba\x8a\x14\xde\x0b\x82\x00\
\xd5\x6a\x15\xc3\x4c\x16\x83\xc1\x80\x33\xfe\x54\x14\xc1\xe9\xf5\
\xd8\x5d\xbc\x3f\x18\xc0\xb2\x2c\xe4\x72\x39\x66\x94\x88\xf1\xa2\
\x9a\x7e\xa4\x15\xcb\x66\xb3\xbc\xad\x20\x08\xb0\xbf\xbf\xcf\x80\
\xa9\x58\x2c\x1e\xb9\x56\xcd\x66\x93\x85\xe1\xae\xeb\x22\x9b\xcd\
\xb2\x8e\x48\x29\x85\x46\xa3\x31\xc6\x68\x91\x33\xba\xeb\xba\x58\
\x5e\x5e\x46\x26\x93\xc1\xea\xea\x2a\x1f\x13\x81\x18\x32\x0b\x05\
\xc0\xc5\xa9\x4d\x76\x94\xfc\xb1\x08\xa4\xd2\x7d\x47\xeb\xa0\x30\
\x35\x95\xea\xe9\x76\xbb\x7c\x0e\xf6\xf6\xf6\xd8\xf6\x82\x84\xfa\
\xcb\xcb\xcb\x00\xc0\xe0\x94\x34\x5a\x85\x42\x01\x42\x08\x06\x5a\
\xd4\xa4\x94\x1c\x86\xec\xf7\xfb\x09\xf3\x27\xe0\x38\x1a\xb4\xed\
\xed\xed\x21\x97\xcd\x43\x08\x89\x7b\xf7\xee\xf1\xfa\x84\x10\xd8\
\xd9\xd9\xc1\xd5\xab\x2b\xb8\x71\xe3\x06\x7e\xf4\xa3\x1f\xe1\x5b\
\xdf\xfa\x16\x33\x56\x26\xf3\x76\x12\xd8\xd0\x93\xa3\x93\xbf\x3f\
\xcb\x3a\xce\x1b\x22\x3c\xcb\x76\xa6\x6d\xf3\x2c\x7d\xef\xa9\xc7\
\x7b\xda\x7e\x60\x3c\xcc\x38\xb9\x8c\x3d\xf9\xc5\x69\x9d\xc5\x93\
\xd2\xb8\xf3\x9a\xb8\x10\x23\x87\xe4\x08\x23\x67\xdb\x49\xc1\x2b\
\x65\x30\x01\x80\x1c\x03\x65\x80\x42\x24\x02\x88\xa4\x2e\x9a\xd6\
\x64\xe9\x2c\x9f\x30\x08\xe0\x07\x3e\xc2\x30\x30\xd6\xaf\x4d\x14\
\xc7\xcf\x2b\x70\xc2\x70\xf5\x33\xdf\x9e\xe4\xfb\xee\xcb\xdc\x14\
\xa0\x5d\x1a\xd4\x14\xf6\xea\x18\x4c\x62\x02\x1a\xdd\x21\xc9\x84\
\x75\x8a\xf9\x59\x50\xd0\xec\x8d\x23\x74\xd8\x22\x27\x04\x82\x50\
\x67\xa2\x09\x00\xbe\xef\x70\xc7\x2e\xe0\x23\x88\x14\xe2\x28\x86\
\x8a\x35\xd3\x10\xa9\x08\x51\x1c\x69\x43\x52\x01\x48\xa9\xb5\x5d\
\x82\x98\x13\x21\x20\x92\x01\x84\x9d\xd2\xa3\x98\xbc\xa9\x21\x20\
\xa1\x10\x27\x7f\x8f\x76\x9a\x27\x69\xb0\x26\x27\xa8\xd3\x26\x51\
\xd3\x34\x5a\x63\xfd\x52\x14\x69\x43\x63\x25\x21\xad\xe4\x9c\x28\
\x12\xf4\x2b\x58\xb6\x85\xa1\x3f\xc4\x60\x30\x44\x3a\x01\x1d\x96\
\x65\xe1\xde\xd6\x3d\x1c\x1c\xd4\xe0\x38\x0e\xa2\x20\x66\x86\x8a\
\x42\x4c\x97\x2e\x5d\xc2\xd7\xbe\xf6\x35\x76\x4e\x07\x80\x8d\x8d\
\x0d\x6c\x6e\x6e\x62\x7f\x7f\x1f\x8b\x8b\x8b\xf8\xf8\xe3\x9f\xc2\
\x76\x92\xc2\xca\xa9\x0c\x1c\xdb\x86\x25\x25\xc2\x20\x60\x33\xd0\
\x54\x2a\x8d\x4e\xc2\x06\x65\xb3\x59\xe4\xf3\x79\xd8\xd2\x82\xeb\
\xba\x98\x99\x99\x81\x52\x0a\xcd\x44\x83\x14\x45\x11\xc2\x04\xec\
\xb8\xae\x8b\x5c\x2e\xc7\xec\x5b\xb7\xdb\xe5\xfa\x82\xc4\x14\x15\
\x0a\x05\x16\x9f\x93\x6e\xcc\x2c\xa0\x6d\xdb\x36\x7b\x5f\x29\xa5\
\x38\x5b\x90\x34\x4a\xf5\x7a\x1d\xe5\x72\x19\x85\x42\x81\x5d\xe3\
\xa9\x54\x0c\xd9\x7f\x08\x21\xd8\x70\x33\x08\x02\xdc\xbc\x79\x13\
\x8d\x46\x43\x1b\xa6\x26\x09\x06\x8e\xe3\xb0\x0e\x2c\x9f\xcf\x63\
\x76\x76\x96\xb5\xb5\x52\xca\xa4\x04\x90\xe2\x9a\x82\xf4\x3b\x62\
\x50\xcd\x4c\x59\x02\x63\xa6\xab\x3c\x7d\x6f\x59\x16\x17\x7b\x4e\
\xa7\xd3\x28\x97\xcb\x50\x4a\x31\xb8\x1b\x0c\x06\x28\x95\x4a\xa8\
\x56\xab\x6c\xa0\x4a\x59\x89\x52\x4a\x0c\x06\x03\x0e\x9b\xd2\x76\
\x01\x3d\xae\x69\x9f\x30\x1f\x96\xd4\x20\xdd\xb1\xf5\x31\x55\x2b\
\x15\xb4\xdb\x1d\xbc\xf6\xda\x6b\xb8\x73\xe7\x0e\xfe\xf8\x8f\xff\
\x2f\xac\xac\xac\xa0\x5c\xae\x20\x9d\x4e\xa1\xd7\xeb\x42\x1b\x64\
\x4f\x12\x12\x23\xe7\xf7\xd3\x26\x92\xe7\x65\xa0\x1e\xd6\x3a\xce\
\xba\xcc\xfd\x6c\xe7\x7e\x80\xa0\xf5\xdb\xbf\xfd\xdb\xbf\x77\x52\
\x07\x72\xd2\x67\xa7\xb5\xb3\xac\xf7\x7e\xda\xa4\x01\xe8\x51\x1d\
\xd5\x78\xe7\xc6\xbe\x3a\x41\xc0\x0f\x68\xab\xdd\x42\xb7\xdb\x41\
\xb7\xdb\x41\x10\x0c\x13\xb0\x34\x9a\xe1\x9a\x25\x2b\xa2\x58\x77\
\xe0\x2a\x8e\x10\x2b\x2d\x60\xb7\x1d\x0b\x5e\x4a\x17\x35\x75\x1c\
\x07\x8e\xeb\x40\x5a\x9a\x12\xf6\x52\x29\xd8\x8e\x05\xcb\xb6\xb4\
\x60\x14\x14\x16\x31\x7c\x33\x92\xac\xc4\xe3\x62\x85\xd3\x42\x12\
\xc7\xb5\x8b\x62\x74\x4e\x5b\xcf\xe4\x39\xbe\x9f\xed\x1f\x77\xcd\
\x2e\xf2\x05\x1c\x1f\xea\x39\xef\xfe\x3e\x68\x3b\x6d\x5b\xe7\xa6\
\xb5\x27\x8e\x6b\x1a\x4b\x7b\xbf\x6d\xf2\x1c\x4e\x02\x03\x62\x53\
\x34\xf1\x24\xc6\xe7\x08\x42\xf1\x77\xcc\x66\xf1\xbe\x28\xfd\x0c\
\x24\xf7\xbe\x20\xbf\xd1\xe4\x81\xa0\x67\x42\x88\x24\x6c\x28\xf4\
\xba\x05\x2c\x58\x42\xc2\xb1\x1c\x58\x42\x42\x28\x5d\xf8\x59\x29\
\xed\xf0\x1e\x41\x83\xaa\x48\xe9\x77\x4a\x24\x9f\x27\x8c\x9a\x90\
\x32\x79\x03\x00\x02\x42\xe8\xff\x2b\x9d\xac\xa7\x4b\xf1\xc0\x4a\
\xca\xf6\x58\xba\x78\x75\xe2\x2e\xaf\x60\x14\x65\x46\x92\xb1\x38\
\x76\x8e\x00\x29\x8f\x3a\xc5\x1f\x77\xbd\x27\xd9\x2b\xf3\xfc\xc4\
\x71\x84\x18\x0a\x22\x8e\x01\x29\x60\x25\xe5\x83\xa8\x66\xa3\x25\
\x05\x06\xfd\x3e\x06\xfd\x3e\xaa\x95\x32\xe6\xe7\xe7\xd0\x6a\x34\
\xf1\x8f\x3f\xfc\x27\xec\x6e\x6d\xc3\x92\x12\xb9\x5c\x0e\xbd\x6e\
\x17\x64\x04\x99\xcb\xe5\xf1\x8d\x6f\xbc\x8c\x17\xaf\xbf\xa8\xb7\
\x11\x29\x04\x41\x88\x77\xdf\x79\x17\x3f\xf9\xf1\x4f\x00\x08\x04\
\xbe\x8f\xed\xed\x1d\xb8\xae\x07\x28\x05\x15\x2b\xd8\x96\x0d\xd7\
\x71\x01\x08\x44\x61\x88\x42\xbe\xc0\x56\x08\x14\xf2\x6a\x34\x1a\
\xe8\xf5\xba\xb0\x6c\x2b\x11\x8d\x37\x11\xc5\x31\x72\xb9\x2c\xdc\
\x94\x87\x72\xb9\x8c\xb9\xb9\x39\x2e\x49\x43\x19\x70\xe9\x24\x33\
\xf1\x6b\x5f\xfb\x1a\x80\x11\xeb\x63\xdb\x36\xbb\xb3\x47\x51\x84\
\x4c\x26\xc3\xfa\x25\x21\x74\x88\x2f\x97\xcb\xb1\x41\x69\x3e\x9f\
\xe7\x32\x65\xa4\x47\xbb\x7e\xfd\x3a\xd7\xfc\xb3\x6d\x9b\x6b\x12\
\x92\x8e\x89\xd6\x73\xef\xde\x3d\xd4\x6a\x35\x94\x4a\x25\x0c\x06\
\x03\x66\xfb\x5c\xd7\x65\xf6\xaf\x50\x28\xc0\xf3\x3c\xd4\x6a\x35\
\x06\x58\x14\xb2\xa3\xf5\x11\x28\xa4\x4c\x4a\x53\x53\x66\x32\x2c\
\x93\x76\x1b\x42\x08\x2e\x21\xd4\xed\x76\x91\xc9\x64\x38\x5c\x4a\
\x63\x14\xb1\xb1\xe4\x6d\x45\x99\x90\xa4\x41\xa3\xfd\x9d\x2c\xab\
\x94\x4e\xa7\x50\xa9\x94\x21\x2d\x81\x4e\xa7\x83\xfe\xa0\x8f\x74\
\x52\x18\xdb\xb2\x25\x1c\xc7\xc5\x60\x30\xc0\x8f\xff\xe5\xc7\xda\
\xa1\x3e\x52\x78\xe6\xda\xb3\xfa\x5e\x08\xa2\x64\x9d\x7a\x82\xe1\
\xb8\x0e\xa2\x48\xbb\xce\x7b\x29\xad\xe5\x1b\xaf\x78\x92\x38\x48\
\x99\x7f\x85\x38\x1a\x91\x51\xa3\xd0\xaf\xf9\x2c\xf0\xd7\x13\x7f\
\x8d\x85\xc6\x3b\x93\xa4\xff\x31\x3f\x63\x96\x7c\x62\x9b\x67\x1f\
\x3b\xc5\xa8\x1f\x02\x40\x85\x55\x15\x0f\xd6\x13\x2f\xfa\xdc\x58\
\x96\x76\x69\xea\xda\x85\x38\xde\xa6\xe1\xb8\x1f\x9c\xd4\x4e\x9a\
\xcd\x5d\x54\x9b\x3c\x79\x67\x45\xb4\x34\x9b\xa1\x1b\xb4\xd7\xeb\
\x60\x30\xe8\x21\x08\x86\x88\xa2\xd0\x08\x1b\x26\x25\x2b\xe2\x91\
\x70\x71\x04\xb8\x68\x56\x05\x48\xcb\xe1\x01\x42\x21\x46\x14\x87\
\x88\xe2\x00\x91\x0a\x10\xab\x00\x51\x14\x20\x8e\x03\x28\xa5\x93\
\xad\x47\xb7\x84\x7e\x8d\x58\x80\xf1\x22\xd1\x5f\x64\xbb\xdf\x70\
\xd7\x79\x06\xf5\xfb\xa1\x6d\xef\x67\x1d\x67\xf9\xdd\xa3\x08\xef\
\x3d\x8a\x30\xe4\xb4\x65\xce\x3b\xeb\x3b\xe3\x9e\x24\x1d\xd0\x08\
\x14\xd1\xc0\xcc\xdf\x4f\x2c\x2f\x8c\xdf\x09\xfe\xdf\x08\x6c\xe9\
\x0e\x58\xf7\x15\x32\xe9\x3c\x85\xed\x68\x26\x49\x49\xd8\xc9\xc0\
\xe4\x5a\x2e\x6c\xe1\x40\xc2\x82\xb0\x04\x54\xa0\x10\xf9\x11\xa2\
\x30\x46\x14\x46\x10\x71\x8c\x28\x8c\x11\xc6\x21\x84\xf0\x11\x46\
\x2e\x3c\xd7\xe3\x9a\x87\x10\x02\xc2\xb2\x92\xec\x5e\x40\x46\x34\
\x48\x08\xc4\x50\x90\x42\x21\x56\x02\x10\xb1\x96\x0a\xc4\xa3\xfd\
\x45\xa2\xcc\xd7\x58\xcd\x64\xa5\x14\xa8\x62\xc3\x34\x60\x4f\xff\
\x37\xd9\x0d\x73\xd0\xe5\x49\x20\x81\x2b\x28\x48\x68\xe0\x26\x81\
\x64\x02\xa6\xf5\x3c\x51\xe8\x23\xe5\xb9\x28\x16\x0a\xc8\x67\xb3\
\x78\xff\xc6\x0d\xac\x7f\xfe\x39\x54\x1c\x21\xf0\x87\x90\xd9\x3c\
\xa0\x04\xba\x9d\x2e\x4a\xc5\x12\x56\xae\xac\xe0\xf9\xe7\x9e\x07\
\x14\x30\x1c\xf8\xb0\x6d\x1b\x1b\x5b\x1b\xf8\x7c\xf5\x73\xd4\xf6\
\x35\xc0\xa8\x1f\xd6\x01\x05\x58\xd2\x82\x92\x8a\xaf\x81\x6d\x59\
\xb0\x13\xf6\x50\x00\x08\x13\x70\x41\x1a\xb0\x46\xa3\x81\x5c\x2e\
\x07\xc7\x75\x51\x4f\x4a\xd4\x54\xab\x55\x64\x12\x77\xf8\x56\xab\
\x05\x40\xb3\x92\x94\xb9\x48\xc5\x9b\x95\x52\x78\xee\xb9\xe7\x10\
\xc7\x31\x5a\xad\x16\x3a\x9d\x0e\xb2\xd9\x2c\x56\x56\x56\x50\xaf\
\xd7\x59\x58\x4f\x99\x7d\x14\x2a\x24\x3b\x06\x02\x1f\x9d\x4e\x07\
\x41\x10\x40\x4a\xc9\x82\x7d\xc7\x71\x30\x37\x37\xc7\xe1\x48\x00\
\x0c\xca\x9a\xcd\x26\xbe\xf2\x95\xaf\xf0\x79\x27\x2b\x08\x02\x34\
\x83\xc1\x00\x95\x4a\x05\x99\x4c\x86\x33\x35\x95\x52\x0c\x6a\x28\
\x7b\x92\x58\xb0\x38\x8e\xd9\x4e\x81\x7c\xca\x00\xb0\xb1\x2c\x85\
\x0b\x49\xd7\x44\xa4\x00\x69\x9e\x48\x47\x75\x70\x70\xc0\xbf\x21\
\x7b\x11\x72\x7f\xaf\x56\xab\xac\x3d\x23\xbf\x31\x4a\x04\x98\x99\
\x99\xe1\xb0\x62\x10\x04\x09\xa3\x27\x99\x28\x88\x63\xbd\xbe\x28\
\x0e\xd0\x69\xb6\x20\x84\xc0\x8d\x1b\xef\x62\x69\xe9\x12\xb2\xd9\
\x2c\xfe\xe2\xfb\xff\x0f\xf6\x76\xf7\x71\xfd\xfa\x0b\x78\xf6\xd9\
\x67\xe1\xfb\x11\xa4\xb0\x11\x85\x3e\x94\x8a\x74\x81\x75\x39\xaa\
\xb3\xa9\xc7\xc8\x08\xb6\x51\x63\x57\x81\xe6\x2e\x23\x60\x75\x96\
\x9e\xc6\x5c\x66\xac\x9f\x32\x3e\x3f\x4b\xcf\xfb\xe0\xfd\x9a\xb9\
\x6d\x35\xf5\xf3\xa9\xcb\x0b\x8c\x01\xc9\x93\x76\x63\xac\xd8\xf3\
\x49\xed\x3c\x8c\x0a\x2d\x6f\xfe\x1d\xbd\x7f\xd0\xd7\xe9\x83\x07\
\xcd\x16\xe9\x7b\x02\x57\x66\xda\xef\xee\xee\x0e\xda\x09\x8b\xc5\
\x45\x3e\x43\xcd\x54\xe9\x07\x26\xe2\x82\xd0\x3a\x4b\x30\x64\x86\
\xcb\xb6\x6d\xd8\xae\x03\xcf\x73\x21\x6d\x5d\x67\xcd\x71\xec\x64\
\xe6\x94\x41\x26\x71\xd6\xd5\x59\x3c\xba\x4a\x9b\xc0\xb8\xb9\xa0\
\x54\x12\x2a\xe9\xa4\xcd\xbb\xe9\xe8\xf9\x3a\xfb\xb9\x7e\x90\x76\
\x96\x75\x3c\xaa\xed\x3c\xe8\x3a\x4e\x62\xb6\x2e\x72\x3b\x8f\x53\
\x3b\x8e\x7d\x9a\x7c\xff\xa0\xdb\xb8\x98\xf5\x9d\xfc\x7b\x29\xa5\
\xb6\x72\x10\x42\x3b\xb7\x5b\x36\x7f\x66\x59\x16\x62\x09\xcd\x58\
\xe9\x9d\x41\x14\x03\x8a\x98\xe6\xe4\xb9\x55\xc9\x04\x26\x8e\x63\
\x66\x9e\x34\x83\x24\x8c\xe9\x8e\x5e\xe7\x11\x55\x88\x00\x7f\xae\
\xfb\x17\x7a\x1d\x3d\x04\x13\x60\x4d\xb2\x59\x63\x8b\x4f\xb9\x0f\
\x47\x21\x25\x73\xb5\x13\x5a\x2d\x68\x2d\x4e\xa7\xad\x0d\x2f\xab\
\x95\x0a\x54\x1c\xe3\x07\x3f\xf8\x01\xee\xdc\xb9\xc3\xe6\x98\x8e\
\xed\xf0\xa0\xfe\xec\xb3\xcf\x62\x65\x65\x05\x2b\x2b\x2b\xbc\xde\
\x5e\xaf\x87\xf7\xdf\x7f\x1f\x77\xef\xde\x85\xeb\xba\x6c\x7d\x40\
\x02\x72\xea\x47\x89\x9d\xa1\xf7\x14\xb2\xa3\x81\x96\xf6\xbf\x58\
\x2c\x72\x78\x8b\x32\xde\x82\x20\xe0\x6c\xc1\x38\x8e\x71\x70\x70\
\x80\xfd\xfd\x7d\x36\xfa\xec\xf7\xfb\x09\xfb\xd5\xc3\xce\xce\x0e\
\x1b\x8e\x92\xf7\x52\xaf\xa7\xc5\xd9\x9d\x4e\x07\x7b\x7b\x7b\x0c\
\x82\xba\xdd\x2e\xf7\xbb\x94\xb1\xd8\xeb\xf5\x38\x93\x90\x32\x11\
\xa9\x20\x74\xab\xd5\x62\x9b\x05\x0a\xe5\x91\xcf\x14\xf5\xe7\xae\
\xeb\x32\x33\xe7\x38\x0e\x9b\x95\x0a\x21\xb8\xae\x21\x69\xbb\x48\
\x08\x9f\xcd\x66\x51\x2e\x97\xd1\x6a\xb5\xd8\x58\xb5\x56\xab\x8d\
\x99\xdb\x12\x98\xa6\x75\x11\x30\x02\x46\x8c\x1d\x69\x9f\x28\x5b\
\x92\xae\xb7\x59\x2d\x04\x00\x8f\x59\x94\xa5\x4e\xd7\x25\x93\xc9\
\xb0\xf9\x29\x5d\x23\xf2\x5a\x33\x8f\x5d\x08\x91\xc8\x57\x34\xc0\
\x8d\x39\x14\x6a\x63\x71\x71\x01\x99\x4c\x36\x31\x79\xbd\x8c\x5c\
\xae\x90\x5c\x87\x98\xf7\xdf\xb2\x24\xd2\xe9\x54\x32\x0e\x26\xfb\
\x29\x2c\xbe\x77\xcd\xfb\x78\xda\x7d\x3e\xed\x79\x10\x06\x03\x75\
\xd2\x38\x7e\xdc\x84\xe5\x7e\xda\x79\x42\x7f\xf7\xbb\x8e\xe3\x9a\
\xfd\x68\xb5\x56\x26\x1f\x77\xbf\xed\xec\x65\x50\x68\x39\x9a\xf9\
\x50\x67\x11\x04\x01\x57\x73\xa7\x19\x0c\x6b\xb3\xd4\x48\xa3\x45\
\x37\x36\x75\xb2\x4a\x8d\xb2\x96\x78\x6f\x26\x42\x8a\xe3\xfb\xf1\
\x80\x87\xfa\xb4\xdd\x57\xbb\xc8\xb0\xd9\x93\xd0\xcc\x7b\xfd\x51\
\x6c\xeb\x51\x6c\x83\x06\x1d\xfa\x4b\xcf\x70\xa4\x22\xa4\xd4\x10\
\xc3\xd8\x47\x14\xeb\x92\x56\x61\x18\x6b\x43\x52\x2d\x88\xd4\x4c\
\x0c\x34\xbb\x01\x4b\xc1\xe2\x75\x25\x3d\x90\x24\xa7\x77\x00\x4a\
\x40\xc4\xe3\xdb\x45\x02\x72\x10\x8f\x84\xbf\xc4\x58\xe9\xe5\xce\
\x77\x3c\xc7\x75\xce\xd4\x77\x98\xa1\x46\xda\x96\xd9\x87\xd1\x8b\
\x06\xd4\x7e\xbf\x8f\xdd\xdd\x5d\x0e\x57\x91\x10\x9a\xd8\x9f\x7c\
\x3e\x8f\x42\xa1\xa0\xb5\x59\x49\x58\x6a\x30\x18\xa0\x56\xab\x31\
\x70\x20\x2f\xad\x74\x3a\xcd\xe0\x89\x2c\x09\x88\x8d\x21\xe3\x49\
\x00\xcc\xba\xd0\x7e\x91\x27\x14\x01\x2c\x12\x8c\xa7\x52\x29\xd6\
\x44\x91\xb8\x9d\x12\x0e\x3a\x9d\x0e\x3a\x9d\x0e\x3b\xac\x53\xd9\
\x1d\x00\xa8\xd5\x6a\x1c\x36\xa3\x73\xe1\xba\x2e\x52\xa9\x14\x7b\
\x57\xd1\x3a\x88\x21\x5b\x58\x58\x40\xb3\xd9\x4c\x80\x44\xcc\xa0\
\x86\xfa\x6d\xd3\x80\x36\x8a\x22\x74\x3a\x1d\x66\x93\x6c\xdb\x46\
\x2e\x97\x43\xa7\xd3\xe1\xba\x86\xbd\x5e\x0f\x00\xc6\x74\x5e\x00\
\x58\x20\x4f\x21\x41\xcb\xb2\xc6\xec\x20\x68\x7d\x14\xee\xa4\x75\
\xd0\x3d\x45\xe0\x89\xee\x63\xdf\xf7\x39\x21\x63\x90\x24\x03\xd0\
\xb9\x04\x46\xd9\xa4\xfd\x7e\x1f\x4a\x29\xf6\xd4\x32\x3d\xd2\x28\
\x4b\x91\x8e\x91\xc6\x20\x3a\xaf\xc0\xa8\xd2\x08\x65\x96\x0e\x06\
\x3a\x84\x9a\xcd\xe4\xf1\xc2\x0b\x2f\xc0\x75\x5d\xdc\xbb\xb7\x85\
\x83\x83\x43\x94\xcb\x55\x74\xbb\xfa\xfc\xc4\x4a\x70\x56\xa1\x6d\
\x4b\x1e\x03\x2d\xcb\x02\x67\x02\x3f\x82\x76\x11\x2c\xfc\x45\xe8\
\xb7\x1e\xe4\x78\xed\xf3\xac\xe0\x41\x43\x2a\x17\x73\x61\xa6\x57\
\xa4\x9f\xdc\x0e\x85\xf7\x88\xbd\xa2\x82\xa0\xf4\xb7\xd9\x6c\x72\
\xba\x30\x81\x23\x9d\x06\x1e\x25\xe0\x2a\x64\xf0\xa5\xb7\xa3\xb7\
\x6d\x76\xfe\x23\x0d\x45\x3c\xf6\xa2\xfd\xa2\xc3\x55\x7a\xa7\x8e\
\x84\x4d\x19\xb8\x01\x47\x3a\xd8\x8b\x3b\x5f\x5f\xbe\x76\x96\xf3\
\x72\x1c\xc8\x32\xb5\x79\x17\xb1\x9d\xc7\x71\x1d\xe6\x7d\xf6\xb0\
\xef\xa1\x69\xb2\x80\x07\x6d\x66\xb1\x67\x7a\xde\xc8\x57\x48\x5a\
\x12\xc2\x91\xb0\x3c\x07\x6e\xc2\xde\x58\x56\x07\x03\x31\xc0\x70\
\xd8\x47\xe8\x07\x3c\xb0\x00\x40\x6c\x69\x4f\x27\x0d\x52\xb4\x90\
\x5d\x3b\xc1\x4b\x58\xc2\x02\x94\x42\x1c\xdb\x23\xed\x8c\x4c\xd8\
\x65\x83\x49\xd0\x7e\xea\xfa\x59\x15\x89\x2c\x40\x48\x7a\x46\x4f\
\x3f\x9e\xd3\x98\x54\x62\x33\xa8\x1f\x32\xb5\x5a\x04\x16\x3c\xcf\
\x43\x2e\x97\x43\xbd\x5e\xc7\xc6\xc6\x06\x76\x77\x77\x99\x79\x52\
\x4a\xb1\x23\x79\x2a\x95\xc2\x95\x2b\x57\xd8\xa9\x9c\xea\x10\x6e\
\x6c\x6c\x60\x63\x63\x83\x33\xf7\xe8\x3b\x02\x0e\xc4\x64\x11\xa3\
\x04\x80\xbd\xa3\xe8\xff\xe4\xd5\x54\x2c\x16\xb9\x74\x4c\x2a\x95\
\xc2\xd2\xd2\xd2\xd8\x84\xb5\xd7\xeb\x31\x00\xcb\x66\xb3\x3c\xa1\
\x25\xcd\xd1\x57\xbf\xfa\x55\xb4\x5a\x2d\xec\xee\xee\x32\x30\xa0\
\x5a\x84\xe5\x72\x19\xf9\x7c\x1e\xed\x76\x1b\xf5\x7a\x9d\x81\x1a\
\x65\xe5\x45\x51\x84\xcb\x97\x2f\x63\x7f\x7f\x9f\x05\xe4\x99\x4c\
\x06\xe5\x72\x99\x0b\x28\x13\xf8\x30\x8f\x9f\x00\x62\xb5\x5a\x45\
\xab\xd5\x42\x2a\x95\xc2\xc1\xc1\x01\x67\x7e\xd3\xf2\x9d\x4e\x07\
\xc5\x62\x11\x8e\xe3\xe0\xe0\xe0\x00\xe9\x74\x1a\x99\x4c\x86\x6b\
\x0a\xf6\x7a\x3d\x2e\x45\xf3\xd1\x47\x1f\x31\x4b\x46\x15\x42\x8a\
\xc5\x22\xa2\x28\x62\x47\x78\x3a\xa7\xa6\x17\x16\x9d\xa7\x5c\x2e\
\xc7\xc0\x96\x9e\xd7\x49\x76\x8b\xb2\xd3\xa9\x51\x08\x91\x5c\xed\
\xcd\xc9\x07\xd9\x4c\xa4\xd3\xe9\x31\x47\x7c\xcf\xf3\xb0\xb0\xb0\
\x00\xcb\x72\xf0\xd9\x67\x9f\x21\x8e\x80\x1b\x37\x6e\x20\x97\xcb\
\xe1\xa3\x8f\x6e\xe2\xc3\x0f\x3f\xc2\xef\xfc\xce\x7f\xc2\x1b\x6f\
\xbc\x8e\x66\xb3\x01\xcf\x73\x91\x49\x67\x51\x6f\xec\xa3\x56\x6b\
\xa1\x54\x2e\x30\xe8\x3b\x4d\x8a\x30\x4d\xbe\x73\xd2\x6f\xa6\xad\
\x63\xb2\x1d\xfb\xfd\x39\xfa\x9a\xd3\xf6\xe1\xbc\xfb\x71\xdc\x32\
\x93\xed\xcc\xc5\x9e\x2f\xae\x09\xdc\x77\x45\x6e\x31\x4e\xd5\x9b\
\xa1\x40\x6a\x66\x48\xd0\x0c\x0d\x36\x1a\x0d\x9e\x25\x51\x9a\x2f\
\xdd\x80\xf4\x90\x53\x69\x89\x28\x0e\x11\x45\xe1\xd8\x8d\xaf\x67\
\x99\xa3\x6d\x52\xe7\x7b\xd2\x49\x9e\xec\x4b\xcd\x41\x4f\xa9\xf1\
\xd0\xe0\x24\xb0\x7a\x92\xc2\x53\x8f\x63\x9b\x7c\xb8\xa7\x75\x0e\
\x5f\xd6\x73\x7c\x5c\xc7\xf6\xa4\x6c\x63\x1a\x1b\x2c\xa5\x2e\xf0\
\x2c\xa4\x84\x72\x24\x84\xab\x4d\x4a\x7d\xcf\x87\x23\x1d\x74\x45\
\x0f\x3d\x69\x61\x20\x06\x7a\xd0\x1c\x68\x8f\x9f\xd0\x92\x88\xe3\
\x00\x51\xec\xea\x82\xd1\x96\x03\x4b\x5a\x70\xa4\x0b\x8b\x26\x49\
\x31\x58\x20\xaf\x22\x05\x44\x11\x20\x62\x48\x41\x32\x03\xca\xa6\
\x1a\x99\x11\x93\xbf\xd7\x69\x47\x6f\x86\xfb\xcc\x8a\x11\xd3\xee\
\x45\x96\x0f\x18\xcb\x91\x19\x66\x3a\x9d\x46\x36\x9b\xc5\xda\xda\
\x1a\x3e\xfe\xf8\x63\x1d\x16\x4c\x32\xda\x66\x66\x66\x20\x84\x16\
\x36\x5f\xbe\x7c\x19\x8b\x8b\x8b\xec\x14\xee\xba\x2e\xba\xdd\x2e\
\x3e\xfd\xf4\x53\x34\x1a\x0d\x04\x41\x80\xed\xed\x6d\x1e\xc8\x29\
\xac\x47\xee\xe7\x94\xc9\x46\x19\x89\x94\xed\xd7\xef\xf7\x71\x78\
\x78\xc8\x00\x83\x5c\xc6\xb3\xd9\x2c\x4a\xa5\x12\x87\xef\x2e\x5f\
\xbe\x8c\x4b\x97\x2e\xa1\xd3\xe9\xe0\xf0\xf0\x10\x42\xe8\xd2\x38\
\xc4\x0e\x65\x32\x19\x6c\x6e\x6e\x32\x2b\x04\x80\xcd\x30\x81\x91\
\xd1\x27\x30\xb2\x6c\x20\x41\x3b\x00\x16\x7b\x57\xab\x55\xdc\xbe\
\x7d\x9b\x43\x65\xab\xab\xab\x0c\x52\x2d\xcb\x82\xe7\x79\x2c\x1e\
\x4f\xa5\x52\x6c\xc4\x99\x4e\xa7\x19\x88\x05\x41\xc0\x00\xce\x64\
\x0e\x89\x39\x4a\xa5\x52\x1c\x16\x6d\xb5\x5a\xc8\x66\x47\xd6\x14\
\xa4\xf3\x22\x06\xce\x2c\x51\xe4\xba\x2e\xd2\xe9\x34\x87\x2c\x89\
\x39\xcc\x64\x32\xa8\x54\x2a\x70\x1c\x07\xcd\x66\x93\x6d\x1f\x4c\
\x73\x52\x02\x4a\xc4\x6a\x11\x2b\x95\xc9\x64\xf8\x5e\x21\xd0\x45\
\x61\x53\x62\xc8\xcc\x50\x65\xb1\x58\x44\xa1\x50\xc0\xc1\xc1\x01\
\x06\x83\x01\x6e\xdc\xb8\x81\x7a\xbd\xa9\xb5\x73\x8e\x83\xad\xad\
\xad\xe4\x7a\x64\xb1\xbf\xbf\x8f\x37\xdf\xfc\x7f\x71\xf5\xea\x95\
\x84\x61\x1b\xb2\xe0\x7f\x30\xe8\xb1\x8f\x57\x10\x04\x70\x6d\x8f\
\xf7\x63\x1a\x20\x39\x09\x84\xf1\xa4\x69\xa2\x92\xc1\xb4\xf7\x67\
\xfd\xfe\x2c\xed\x8b\x02\x57\x80\xe1\x83\x75\x11\xec\xd3\xa9\x03\
\x96\x22\x56\xe7\x7e\x3b\xe5\xa3\x5a\x88\xc9\x4c\x0a\x13\x60\x99\
\x6c\x55\xbd\x5e\xe7\xac\x90\x76\xbb\x8d\x20\x18\x72\xdc\x9d\x66\
\x00\x7a\xc6\xa3\x01\x96\x52\x23\x36\x4a\xa7\xd9\xda\x47\x66\xa2\
\xe6\xb9\x1b\xef\x44\x27\x28\xff\x13\x8e\x57\x03\xad\xa7\xec\x15\
\xb5\x8b\x60\x96\x2e\xea\xdc\x3d\x28\x63\x7b\x51\xfb\x72\x9e\x75\
\x5c\x44\x87\x74\x5c\x9b\xbc\x37\xa7\x81\x84\x8b\xd8\xe6\x71\xac\
\xb4\x10\xda\x78\x54\x29\x09\x25\x25\xa0\x6c\x78\x76\x00\x4b\xd8\
\xb0\xa5\x93\x84\x69\xba\xb0\x6d\xcd\x64\x45\x91\xce\xfc\x55\x49\
\xb8\x5f\x0f\x7e\x31\x3c\x37\x05\x05\xed\x08\x0f\x43\xf3\xa4\x37\
\x1e\x03\x42\x20\x8e\x47\x5a\x24\x66\x9a\x79\x10\x36\x8e\xdd\x10\
\xfd\x9e\x74\x2c\xd3\x34\x59\x26\x03\x4e\xa9\xfc\x66\x91\x78\x93\
\x81\xcf\xe7\xf3\x10\x42\x60\x77\x77\x17\xeb\xeb\xeb\x2c\x79\x08\
\xc3\x10\xf3\xf3\xf3\xa8\x1f\xd4\xd1\xed\x76\x31\x3f\x3f\x8f\x5c\
\x2e\xc7\x13\x4c\x29\x25\x36\x37\x37\xb1\xb6\xb6\x06\x00\x2c\x10\
\xf7\x3c\x0f\xa9\x54\x6a\x2c\x14\x3b\x18\x0c\xc6\x8c\x32\x29\x83\
\x2e\x95\x4a\x31\xcb\x93\xcb\xe5\xb0\xb8\xb8\x88\x28\x8a\x38\x63\
\x8f\x04\xf0\x71\x1c\xa3\xd7\xeb\x61\x7b\x7b\x1b\xf5\x7a\x1d\x8e\
\xe3\x60\x71\x71\x91\xad\x18\x0a\x85\x02\xbb\x8b\xd3\xc0\x4f\xc0\
\x8b\xd6\x49\xfb\xe1\x79\x1e\x56\x56\x56\xb0\xbf\xbf\x8f\x56\xab\
\xc5\x99\x85\xed\x76\x1b\x5b\x5b\x5b\xb8\x7c\xf9\x32\xae\x5d\xbb\
\x86\xdd\xdd\x5d\xde\xdf\x54\x2a\xc5\xe7\x70\x76\x76\x16\xf9\x7c\
\x9e\xf5\x5a\x14\x72\xa3\xfe\x3f\x8a\x22\x54\xab\x55\x2e\x79\xa3\
\x94\x62\xad\x19\x9d\x03\x32\x57\xa5\x7d\x4a\xa7\xd3\x63\xa1\x3f\
\x32\x1f\xa5\x31\x47\x29\xc5\x45\x93\x29\x24\x69\x32\x69\xb6\x6d\
\xa3\x5c\x2e\x23\x97\xcb\x31\xb0\x25\xb7\x7d\x33\xc4\x68\xfa\x52\
\x11\x93\x35\x19\x02\xa4\x0c\x4d\x22\x06\x68\xf9\x30\x0c\x39\xcc\
\x4a\xac\x6f\x18\x86\xa8\xd7\xeb\x58\x58\x58\x82\x52\x0a\xfb\x7b\
\x07\xb0\x2c\x0b\xa5\x52\x19\x95\x4a\x85\xc3\xb0\x83\x41\x17\x97\
\x2e\x5d\x42\xad\x56\xd7\xfb\xe6\x5a\x48\xa7\xb3\xf0\x87\x21\xc2\
\x40\xb3\x9d\x2a\x3a\x3b\x38\x39\xcb\xfb\xfb\xf9\x9e\xff\x7f\xce\
\xbe\xe6\x22\x80\xd6\x59\x97\xa1\xf6\x05\x30\x58\x0f\xd6\x46\x1d\
\x55\x9c\x98\x7f\xc6\x4c\x63\x93\x80\x91\x6e\x32\xca\x2e\x31\x9d\
\x7d\x09\x78\x11\x15\x4e\xb3\x17\x9a\x29\x2a\x15\x43\x81\x5c\xa0\
\x4d\x97\xe5\x24\x1b\xc9\x68\xc7\x01\xac\x91\x18\x3f\x59\x2e\xf9\
\xcf\xf4\x10\xe1\x53\xf6\xea\x61\xb7\x31\x81\xe5\x97\xb4\x4d\x63\
\xec\xcc\xf6\x30\x8f\xfd\xa2\xd7\x6d\xb2\xc3\x93\x33\x62\x29\x25\
\x6c\x08\x78\x42\xc2\x12\x0e\x62\x37\x82\xeb\x38\xf0\x9c\x14\x5c\
\xdb\x81\x63\xd9\x18\x0c\x3c\xa8\x48\x1b\x59\xc6\x51\x88\x28\xa4\
\xb0\xa1\x9f\x08\xe0\x15\x62\x3b\x86\x80\x0d\x21\x24\x1c\x69\x25\
\x59\x53\x02\x88\x6d\x3d\xe1\x89\x03\xc4\x61\xb2\x5d\x9d\xe0\x67\
\x1c\xe7\xf9\xb5\xa4\x93\xc7\x62\xfe\x5f\xa9\x78\xac\x96\x22\x35\
\x1a\x50\x89\x91\x69\x36\x9b\xd8\xda\xda\x42\xad\x56\xe3\x81\x95\
\xc2\x44\x61\x18\xa2\x5a\xad\xe2\xca\x95\x2b\x63\x59\x6d\x9d\x4e\
\x07\x9f\x7e\xfa\x29\x33\x44\x94\xa9\xe6\x38\x0e\x03\x86\x4a\xa5\
\x02\x00\xd8\xdd\xdd\xe5\x12\x3c\xd4\x87\x16\x8b\x45\x6d\x01\xd1\
\xeb\xf1\xc0\x4f\xdb\x36\x33\xf0\x28\xdc\xb8\xbf\xbf\x8f\xb5\xb5\
\x35\x08\xa1\xbd\xa7\x48\x7f\x45\x0c\xdb\xf6\xf6\x36\x3a\x9d\x0e\
\xb6\xb6\xb6\x30\x37\x37\x87\x85\x85\x05\x5c\xbe\x7c\x19\xaf\xbc\
\xf2\x0a\x5a\xad\x16\x17\x38\xb6\x6d\x9b\xad\x1e\xd6\xd6\xd6\x98\
\xc1\x5c\x5e\x5e\x46\x2e\x97\xc3\xc1\xc1\x01\x7e\xe5\x57\x7e\x05\
\x7f\xff\xf7\x7f\x8f\x7b\xf7\xee\x71\xf9\x1d\x02\x3a\x71\x1c\x63\
\x66\x66\x06\x00\x98\x2d\x22\x60\xa5\x94\x0e\xc3\x1e\x1c\x1c\xb0\
\x11\xaa\x10\x02\xf9\x7c\x1e\x33\x33\x33\x90\x52\xa2\xd5\x6a\x71\
\x28\x8f\xb4\x4e\x04\x98\x28\x14\x47\x61\x4f\x21\xc4\x58\xb1\x64\
\x53\x50\x6f\x66\x11\xfa\xbe\x8f\x7a\xbd\xce\xa2\x7f\xcf\xf3\xd8\
\x54\x94\x26\xf8\x74\x1f\x50\x58\x96\x00\x1e\x85\x71\x69\x7c\xa0\
\x44\x05\x12\xc9\x93\xa5\x45\x18\x86\x7c\x3d\x68\x5f\xc9\x37\x6d\
\x30\xd0\x91\x9c\xb9\xb9\x05\xec\xed\xed\xe1\xda\x33\x2b\xf8\xea\
\xf3\x2f\xe0\x27\x3f\xf9\x09\xde\xfa\xff\xde\xc2\x37\xbe\xf1\x0d\
\xfc\xea\xaf\x5e\x46\xa1\x50\x40\xbb\xdd\x42\x14\x07\x6c\xcb\x91\
\xcd\x66\x61\x5b\x0e\x82\x68\x14\xae\xa4\xfb\xd8\x7c\x7f\xa6\x49\
\xe7\x94\x67\x63\xda\xfb\xb3\x7e\x7f\x96\xf6\x33\x14\x22\xbc\x98\
\x46\x0f\x11\x09\x12\xc9\x8c\x8e\x66\x5e\xf5\x7a\x9d\x6b\x30\xd5\
\xeb\x75\x2e\x0a\xca\x75\x03\x93\x4e\x88\x66\x2b\x74\x83\x13\xc0\
\x4a\xb6\x32\x56\x48\x96\xb6\x4b\xdb\x06\xc6\x0b\xcc\x9a\x0c\xd6\
\x71\xfb\x7c\x96\x10\xe1\xd3\x76\x31\x6d\x12\x58\x99\x7f\x47\xd7\
\xf0\xc9\x6f\x93\x03\xb7\xf9\x39\xb5\x8b\xba\xb7\x4e\x62\xa9\x2e\
\xfa\xfe\x25\x16\x67\xf2\x5a\x59\xd2\x82\xb0\x6d\x58\x52\x5b\xa7\
\xd8\xb6\x0d\xdb\x72\x93\xed\x4b\xc3\x04\xb2\x89\xc0\xf7\x31\x88\
\x63\x84\x61\x80\x20\xa0\x30\x8a\x40\xec\x02\xb6\xa5\xc3\x80\xc2\
\xf1\x60\x0b\x40\x5a\x36\xac\x58\x33\xca\x22\xb6\x47\xdb\x4c\xd2\
\xb2\xcd\x67\x94\xfe\x46\xea\xe4\x7b\x68\x1c\x48\x8d\x5f\xa7\x51\
\x39\x9f\x91\xf6\xca\x5c\x37\xf5\x6f\x9e\xe7\xc1\x75\x5d\x6c\x6f\
\x6f\x63\x6f\x6f\x8f\x4b\xc0\x90\xd8\xba\xdd\x6e\x23\x97\xcb\xe1\
\xd2\xa5\x4b\x58\x5c\x5c\x64\xe9\x03\x15\x26\xde\xd9\xd9\x61\x1d\
\x0f\xf9\x4c\x99\x82\xe9\x5c\x2e\x87\x76\xbb\x0d\xa5\x14\x0b\xcb\
\x49\xe7\x43\x9e\x50\x41\x10\xb0\xf6\x8a\x4c\x3d\xc9\x43\x8a\x4a\
\xf4\xcc\xce\xce\x72\x9d\xbc\x4c\x26\x83\x74\x3a\xcd\xb2\x0c\xea\
\x6f\x49\xab\xd4\xef\xf7\x51\x28\x14\xd0\xe9\x74\x38\x74\xb9\xb7\
\xb7\xc7\xa5\x63\xe2\x58\xd7\xd3\xab\x54\x2a\x98\x9d\x9d\xe5\xed\
\x74\x3a\x1d\x9e\x2c\xbf\xfd\xf6\xdb\x78\xe9\xa5\x97\xb0\xb9\xb9\
\xc9\xe0\x87\xc0\xcc\xfa\xfa\x3a\x94\x52\x6c\x38\x0a\x8c\xbc\xa8\
\xd2\xe9\x34\x47\x2f\x7e\xf7\x77\x7f\x17\x7f\xfa\xa7\x7f\x8a\x4e\
\xa7\x83\x85\x85\x05\x3c\xf3\xcc\x33\x58\x5f\x5f\xc7\xc6\xc6\x06\
\x83\x31\x0a\xfd\x11\x03\xb5\xbf\xbf\xcf\xae\xf1\x94\x58\x40\x85\
\x93\x07\x83\x01\x84\xd0\x9e\x5b\x42\x08\x66\xaf\x00\xed\xd8\xbe\
\xb6\xb6\xc6\xa0\x2a\x9f\xcf\x63\x7e\x7e\x9e\xed\x1a\x7c\xdf\x67\
\x5d\x19\x19\xab\x12\x18\xa6\xf2\x3a\xc4\xb0\x99\xa2\xfc\x42\xa1\
\xc0\xd7\xc2\x64\xbe\x34\xa8\x1a\xf0\x35\x91\x52\xe2\xea\xd5\xab\
\x68\x36\xdb\xa8\x54\x2a\xf8\xf8\xe6\xc7\x58\xbd\xf3\x39\x0a\x85\
\x02\x0e\xeb\x75\xfc\xc9\x9f\xfc\x09\x2e\x5d\xba\x84\x7f\xf7\xef\
\x7e\x8e\xb7\x93\xcb\xe9\x30\xa3\xeb\xa6\xd0\xe9\xb4\xe0\x1a\x59\
\x91\x93\xf7\xb9\xf9\xdc\xd2\xdf\xb3\x00\x95\xd3\x3e\x3f\xeb\xf7\
\x67\x6d\x17\xb1\x9d\x73\x87\x08\xcd\xf6\x20\x33\xfe\xc9\x19\xa7\
\x49\x41\x9b\x5e\x38\xd4\xcc\x8e\xd3\xbc\x20\xd4\x99\x51\x0c\x3c\
\x8e\x63\x84\x51\x88\x38\x09\xdf\x85\xa1\xcf\xb3\x85\xe1\x70\x88\
\x6e\xb7\xcb\x75\xba\xa8\xda\x39\x55\x6a\xef\xf7\xfb\x3c\x9b\x30\
\x3d\x47\x68\x46\x66\x66\x11\x92\xce\x4b\x08\x30\x6d\x4f\x34\xb8\
\x65\x69\xdd\x00\xd7\xe8\x32\xe2\xe5\x54\x07\x4b\x1b\xe4\x39\xc9\
\x6f\xf4\xbe\x8f\xd5\x6f\x7b\x08\x40\xea\xb8\x9b\xfb\xb8\xf3\x7c\
\x5c\x7b\x1c\x00\xde\x45\xdc\xdc\xa7\x85\xb2\x2e\x72\x5f\x4e\x6b\
\x8f\x3a\xe4\x69\x6e\xef\xa4\x6d\x4f\xbb\x4f\xcc\x41\xf7\x34\xc0\
\x66\xb6\x8b\x06\xaa\x93\xf7\x33\xf5\x21\x4a\x29\x28\x01\x44\x89\
\x5f\x9d\x2d\x25\x20\x24\x2c\x5b\x40\x2a\x00\x71\x06\xb6\x90\xf0\
\x53\x1e\x1c\x69\x21\xed\xea\xba\x6e\xed\x8e\x83\x6e\xaf\x8b\x81\
\x3f\x44\x10\x85\x18\xb4\x9a\x70\x9c\x3e\x32\x5e\x06\x96\x94\x48\
\xa7\x63\xa4\xa4\x0b\xc7\x92\x90\x96\x36\x3a\x15\x4a\xc1\xa6\x10\
\x61\x1c\xb3\xc1\x29\x30\xb2\x52\x20\x03\x53\x73\x5f\xcd\xbf\xc0\
\x48\x4f\x35\x79\x5d\xcc\x89\x56\x2a\x95\x42\xbf\xdf\x47\x3e\x9f\
\x67\x03\x4b\x0a\xbb\xf5\xfb\x7d\x66\x2e\xf6\xf6\xf6\xb0\xb3\xb3\
\x8b\x5e\xaf\x8f\x42\x21\x3f\x06\x54\x8a\xa5\x22\x5e\x79\xe5\x15\
\x38\x8e\x83\x9d\x9d\x1d\xd6\x06\xbd\xf7\xde\x7b\xb8\x7b\xf7\x2e\
\x0f\xb8\x94\x89\x57\xa9\x54\x98\xd5\xf1\x3c\x0f\xf3\xf3\xf3\xa0\
\x52\x36\x04\x2c\x0a\x85\x02\x00\xb0\xfb\x3a\x0d\xde\xbb\xbb\xbb\
\xec\x03\x35\x3f\x3f\x8f\xbd\xbd\x3d\x74\x3a\x1d\xd6\xe9\x04\x41\
\xc0\xfa\x2b\x02\x34\x04\xce\x48\x8f\x35\x37\x37\x87\x54\x2a\x85\
\xbd\xbd\x3d\xb6\x90\x00\xc0\xa5\x73\x08\x28\x1d\x1c\x1c\xf0\xe4\
\x18\x00\xdb\x52\xa4\xd3\x69\xdc\xbe\x7d\x1b\xc3\xe1\x10\x5f\xff\
\xfa\xd7\x11\xc7\x31\x9a\xcd\x26\x8b\xcb\x5d\xd7\x45\xad\x56\x63\
\x20\x44\xd9\x74\x96\x65\xc1\xf7\x7d\x14\x0a\x05\x34\x9b\x4d\x6c\
\x6e\x6e\xe2\xe7\x7e\xee\xe7\xb0\xba\xba\x8a\xcf\x3f\xff\x1c\xf7\
\xee\xdd\x63\x6b\x84\xc5\xc5\x45\x38\x8e\x83\x46\xa3\xc1\x99\x8b\
\x87\x87\x87\xec\xe9\xd5\xed\x76\x39\x1c\x4b\x9a\x38\x02\x3a\xbd\
\x5e\x0f\xd9\x6c\x16\xd9\x6c\x16\x3b\x3b\x3b\xb0\x6d\x1b\x0b\x0b\
\x0b\x90\x52\xea\xda\x91\x89\xf0\xfe\xee\xdd\xbb\x3c\x8e\xd1\x38\
\x93\x4a\xa5\xb8\x26\xa1\x52\x8a\x43\x91\x74\x5d\x68\x2c\x4b\x25\
\x26\xa2\xe4\xef\x48\xe6\xa4\x66\x56\xa1\x65\x59\xe8\xf7\xfb\xc9\
\xfd\x34\x44\xad\xb6\x07\xcb\x72\x60\x59\x0e\x32\xd9\x0c\xa4\xb0\
\xd0\x68\x34\x21\x85\xc4\xda\xda\x1a\xde\x7a\xeb\x2d\xbc\xf4\xd2\
\x4b\xb8\x7a\xf5\x2a\xde\x7f\xff\x7d\xd8\x8e\x64\xa0\x56\x2a\x55\
\xd0\xeb\xb6\x4f\x7d\x76\x4f\xeb\x0f\xce\x32\x41\x3b\x09\x97\x00\
\xf4\xe8\x9d\x2e\xa8\xff\xa2\xdb\x89\x0c\xd6\x79\xc1\xc0\x71\x9d\
\x32\xad\x47\x83\x23\xfd\xb9\x14\x36\x84\x54\x80\x92\x10\x52\x41\
\xc0\xd2\x7f\x95\x2e\x5b\x41\x1d\x5a\x14\x29\x28\xe8\x9b\x2a\xf0\
\x03\x84\xd1\x10\x4a\x45\x4c\x85\x92\xce\xea\xe0\xe0\x00\xb5\x5a\
\x8d\x7d\x40\x3a\x9d\x0e\x67\xb6\x98\x3a\x2b\x13\x60\xd1\x67\xe3\
\x59\x4b\x3a\x8d\xdb\x14\xb3\x13\xd0\x32\x5f\xa6\x20\x95\x84\x8d\
\x24\xc6\xb4\x6d\x6b\x2c\x54\x78\xdc\x79\xba\xa8\xf3\xfe\xb0\xd6\
\xf1\xb3\xde\x9e\x9e\xbf\xc7\xaf\x69\x03\xe5\xa4\x9f\x49\x5c\xa7\
\x75\x99\x0f\x09\xc7\xf6\x80\x14\x58\x03\xa3\x07\x31\x1f\xfa\x39\
\x94\x80\x94\x18\x0e\x07\x50\x2a\x40\x14\x46\xe8\x43\x8b\x8c\x95\
\x14\xd0\x92\x83\x44\x0b\x95\x30\xd3\x34\x91\x52\xb1\x2e\x2c\xcd\
\x7d\x59\xb2\x2f\x0a\x80\x88\xd5\x89\x39\x3b\xd3\xf4\x57\xe6\x77\
\xc0\x08\xa0\x9a\x92\x03\xf3\xff\x94\x89\x46\xba\x25\xda\xb7\x74\
\x3a\x8d\x46\xa3\x81\xad\xad\x2d\x5c\x5a\x5c\xe6\x90\x1f\x31\x1d\
\xb5\x5a\x0d\x8d\x46\x63\x4c\xcf\x25\x84\x60\xc3\x4f\xca\xf2\x23\
\x61\xb7\xe3\x38\x1c\xf2\x22\x4b\x88\x6e\xb7\x8b\x5e\x4f\x17\x76\
\xce\x64\x32\x1c\x86\xa2\x49\x25\x69\x91\xe6\xe6\xe6\xb0\xb2\xb2\
\x82\x5a\xad\x86\xdd\xdd\x5d\x06\x6f\x54\xaa\x86\xfa\xe2\x76\xbb\
\xcd\x9e\x58\x34\x31\xbe\x74\xe9\x12\xae\x5e\xbd\x8a\x76\xbb\x8d\
\xf5\xf5\x75\x76\x2a\xa7\xc9\x33\x85\xd2\x00\x1d\xee\xf3\x7d\x1f\
\x4b\x4b\x4b\x0c\x26\x7e\xfe\xe7\x7f\x1e\x6f\xbf\xfd\x36\xf7\xd5\
\xc4\xd6\x11\x83\x44\xcc\x0e\x80\xb1\xbf\x4a\x29\xfc\xcd\xdf\xfc\
\x0d\x3c\xcf\x83\xef\xfb\xcc\xfc\x11\x93\xb8\xb5\xb5\x85\xc5\xc5\
\x45\x5c\xbd\x7a\x15\xbd\x5e\x0f\xb7\x6e\xdd\xc2\xec\xec\x2c\x5e\
\x7c\xf1\x45\xb4\x5a\x2d\x7c\xfc\xf1\xc7\xa8\xd5\x6a\xcc\x32\xd1\
\x78\x42\x8d\x18\xca\x42\xa1\xc0\x4c\xa2\xc9\x7c\x91\x66\x8d\xc6\
\x99\x28\x8a\x38\x14\x4b\x61\x47\x0a\xff\x91\xac\x65\xe4\x6f\x15\
\x8f\x85\x11\x49\xcb\x05\x80\x89\x04\xda\x3e\x11\x15\x4a\x69\xbf\
\x30\x29\xb5\xb8\x5f\xa9\x08\x03\xdf\x47\xe0\x47\x28\x95\x4a\x58\
\x5a\x5a\x42\xb7\xdb\xc5\xdd\xbb\x77\xb1\xb0\x30\xaf\x0b\x42\x0f\
\x02\xcc\xce\xce\x63\x30\x18\x60\x6b\x6b\x0b\xa5\x62\x9e\x8f\xef\
\x71\x01\x33\x8f\x82\x91\xba\xdf\x63\x3d\x35\x44\x78\x9e\x81\xfa\
\x38\xf6\xc4\xfc\x9c\xbe\x92\x22\x29\x99\x41\xae\xd0\x10\x80\x48\
\xc4\xea\x2a\x1a\xcb\x24\x52\xb1\x9e\x81\x0c\xfd\x21\x7c\x7f\x80\
\x38\x0e\x31\xf4\x75\xb5\x75\xa2\x8c\x0f\x0e\x0e\x70\x70\x70\x80\
\x76\xbb\xad\x1f\x96\xbe\xce\x26\x0a\x12\xfd\x85\x52\xba\xfe\x18\
\x75\x34\x31\x03\xb8\x91\x81\x9b\xc9\xb2\x99\x61\xbf\xf1\xfd\x1f\
\x9f\x89\x12\xc3\x45\x14\xb2\xe9\xbd\x72\xde\xf1\xd9\x3c\xd7\xf7\
\x0b\x90\x2e\x62\x1d\x4f\x9b\x6e\xa7\x9d\xbb\xc7\xa5\x83\xf9\x59\
\x6b\x82\x5f\x8a\x19\x71\x29\x25\x6c\xcb\x02\xe0\x40\x0a\x89\x54\
\x2a\xcd\x9f\x87\x61\x80\x30\x8a\x10\x2a\x92\x07\x68\xf7\xf7\x30\
\x0a\x21\x95\x80\x1f\x58\xb0\xa4\x00\x24\xe0\x08\x07\xb6\xd0\x59\
\xc3\x52\x26\x9a\x49\x29\xa0\x20\x35\xc8\x02\xa0\x4b\xe9\xd0\xf3\
\x3d\x5e\x30\xfa\xdc\xc7\x72\x0c\xeb\x05\x8c\x80\x17\x81\x86\x4e\
\xa7\x83\x28\x0a\x79\x80\xa5\x89\x9d\xef\xfb\x48\xa7\xd3\x5c\x84\
\x98\xdc\xbf\xdb\xed\x36\x7a\xbd\xde\xd8\x36\x4c\xdf\x24\x21\xc4\
\x98\x07\x14\x59\x00\xd0\x72\xb4\x6e\xd2\x80\x91\x36\xcb\x34\xf0\
\xec\xf7\xfb\x3c\x99\x25\x2d\x2c\xad\x57\x29\x85\x74\x3a\x8d\x5c\
\x2e\x87\x54\x2a\xc5\xec\x1c\x81\x1b\x62\x3b\x48\xb8\x6e\x86\xb8\
\x08\x34\xd0\xb6\x4c\x83\x4e\xb2\x96\xa0\xfe\xf6\xa7\x3f\xfd\x29\
\x0e\x0e\x0e\xd8\x17\x8c\x34\x69\xd4\xef\x13\x73\x95\xcb\xe5\xe0\
\xfb\x3e\xba\xdd\x2e\x83\x44\x62\xdd\xcc\x73\x4f\x7a\x26\x02\x31\
\xc4\xce\xe5\x72\x39\xed\x80\x5f\xaf\x73\xf1\x66\x33\x39\x81\xc0\
\x19\x65\x47\xfa\xbe\xcf\xa1\x5a\x02\xeb\x74\x1c\x74\x2c\x74\x5e\
\x28\x8c\x69\x86\x52\xe9\x3c\x8c\xcc\xae\x47\xfa\x31\xf3\xfe\x98\
\x8c\xf4\x98\x5a\xb9\xc9\x71\xcc\x71\x6c\x4e\xd8\x02\xc6\x49\x91\
\x20\x08\xb0\xbe\xbe\x8e\x8f\x3e\xfa\x10\xa5\x52\x09\x97\x2f\x2f\
\x61\x67\x67\x8f\xc3\xaf\xd9\x6c\x96\xcf\xd3\x45\xe8\xa2\x2e\xa2\
\x9d\x77\x3f\xce\x13\xb2\x3c\xcf\x3a\x8e\x6b\xc7\x96\xca\x99\xa4\
\xeb\xce\xd3\x81\x1c\xb7\x2c\x59\x1d\x24\x6b\x85\x60\xdb\x85\x18\
\xb1\x52\x5a\x90\x1a\x29\x50\xf1\x64\x93\x71\xa2\x58\x72\xb7\xdb\
\xc6\x60\xd8\x47\xb7\xab\x63\xf7\x8d\x46\x83\x63\xf2\xed\x76\x9b\
\x05\x7e\xe6\xef\x01\x8c\xdd\x74\x61\x18\x42\x0a\x7b\x4c\x07\x41\
\xb3\x08\x02\x57\x26\x73\x65\x02\x2b\x53\x4b\x41\x34\x2f\x55\x38\
\xa7\xba\x51\xd4\x89\x8d\x8e\x94\x64\x1c\x13\x02\xf7\x29\xe7\xe9\
\x29\xc8\x7a\xf0\xf6\x24\x1d\xf3\x53\x90\x76\xfe\x96\xf0\x51\x00\
\x95\xe2\x51\x80\x25\x04\x84\xe3\xc0\xb6\x25\x83\x22\x2a\x47\xe2\
\x38\x2e\x6c\xd7\x83\xe5\x38\x9a\x39\x47\x17\x7d\xd5\x45\x10\xfa\
\x40\x04\x44\x71\xa4\x25\x07\x91\x0e\x23\xa5\x1d\xc0\x11\x76\x52\
\x69\x21\x01\x73\x52\xea\x8a\x8a\x04\xb2\x80\x91\x7f\x9d\x78\x30\
\xb6\x73\x92\xc1\x32\x43\x3c\x04\x76\x1a\x8d\x06\xf6\xf6\xf6\x92\
\xc1\xd7\x62\x80\x41\x22\xed\xf9\xf9\x79\xe4\xf3\x79\x2e\x7e\x4c\
\x82\xf2\x83\x83\x83\x31\x6b\x08\x02\x65\xdd\x6e\x17\xb6\x6d\xa3\
\x58\x2c\xa2\xd1\x68\x60\x30\x18\x70\xb8\x8f\x58\x2e\x72\x2f\x07\
\xc0\x7d\x9b\x39\xd8\x53\xb4\x00\xd0\xac\xc9\x67\x9f\x7d\x86\x54\
\x2a\xc5\x25\x67\xa8\x4f\xcd\xe7\xf3\x50\x4a\x31\x33\xb5\xb4\xb4\
\x84\xb5\xb5\x35\x04\x41\x80\x99\x99\x19\x14\x0a\x05\x0e\x2d\x52\
\x23\x46\x8d\xc2\x8c\x14\x22\x24\xe0\x41\x20\x42\x9b\xea\x00\x00\
\x20\x00\x49\x44\x41\x54\x06\xab\x61\x18\xe2\xc6\x8d\x1b\x63\x3a\
\x59\x7a\x4f\xfe\x61\xa5\x52\x89\x6d\x1a\x9a\xcd\x26\xb6\xb7\xb7\
\xd9\x22\x01\x00\xd7\x4a\xa4\xdf\x9a\xfd\x7d\xbf\xdf\x67\xa6\x89\
\x40\xe5\xe6\xe6\x26\x0e\x0e\x0e\x38\x94\x49\x16\x0a\x87\x87\x87\
\x0c\xa8\xcc\xeb\x09\x80\x8b\x53\x13\xab\x46\x20\x8a\xea\x33\x9a\
\xcc\x19\x31\x8d\x04\xc6\x68\x1f\x28\x2b\x94\x74\x5f\xd4\xcf\xd1\
\xe4\x9e\xee\x25\x02\x69\x63\xe3\x9a\xd0\xdf\x15\x4b\x79\x58\xd2\
\x81\xef\x27\xd5\x0e\x94\x1e\x97\x89\x71\x6c\xb7\xdb\xf8\xfe\xf7\
\xff\x02\x3f\xfe\xf1\x4f\xf0\xc7\x7f\xfc\x87\x49\x42\x41\x0d\x95\
\x6a\x59\x8f\xd7\x4a\x19\x1a\xe5\xfb\x13\x7e\x5f\x44\xa3\xc4\xb1\
\xd3\xb6\x7b\x1a\x00\x3b\xcb\xfe\x3f\x08\x98\x3c\xa2\xc1\x9a\x44\
\xb6\x93\xff\x7f\x90\xa6\xe8\xe2\x28\x05\xa5\x04\x14\x22\x40\x49\
\x5d\xc3\x2f\x54\x08\x43\x1f\x80\x44\x14\x87\xf0\x87\x9a\xb2\x1d\
\x0c\x75\x18\xb0\xdb\xd1\x54\x75\xa3\x59\x4f\x8a\x34\x77\xd9\xcf\
\x84\xfc\x4e\xc6\x1c\xd9\x0d\x40\x35\xf9\x3e\x8e\x63\xd8\xd6\x78\
\xf8\x12\x20\xbd\x84\x48\x80\xd5\x08\x5c\xd1\xbe\x8f\x44\xa9\xfa\
\x5c\x90\xcf\xc9\x48\x7f\x95\x4e\xa8\x75\x6b\x1c\xe0\x4c\x5c\xa0\
\xf1\x73\x3a\x6e\x34\x3a\x7d\x99\xb3\xb7\x69\xc0\xea\xac\xeb\xf8\
\x32\x0d\xf6\x17\x75\xbf\x3e\x8a\xf6\x28\xb6\xf3\x65\xba\xb6\x42\
\x08\x48\xc4\x09\x93\x04\xd0\x48\x21\x85\xd0\xf6\x0d\x00\x3c\x37\
\x05\xcb\xb2\xe1\x3a\x11\x2c\xcb\x86\xb4\x6d\x08\x69\x43\xc0\x86\
\x65\x39\x10\x12\xe8\xf6\x74\xe5\x86\x20\x0c\xf8\x15\x45\x21\x44\
\x0a\x88\x3d\x17\x8e\xe5\x40\x00\xd0\x65\xa0\x13\x1d\x18\xb4\xd5\
\x8c\xe2\x02\x3b\xf2\xcc\xb6\x7e\x34\x70\x4f\xb2\x56\x23\x09\xc5\
\xa8\x54\x0a\x0d\x92\xd4\x07\xd1\x64\x12\x00\xeb\xb3\x00\xb0\xf1\
\xe7\xa5\x4b\x97\x90\x4e\xa7\x71\x70\x70\xc0\x9a\x99\x5a\xad\xc6\
\x02\x6d\xd3\xd6\x81\x1c\xc4\xc9\xab\x89\xb2\xdf\x48\x34\x4f\xfd\
\x25\xb9\x94\x53\x08\x8d\x4a\xcc\x10\x70\x6d\xb5\x5a\x88\xe3\x18\
\x4b\x4b\x4b\xb0\x6d\x9b\xc3\x8b\x04\x8a\x68\xb2\x4b\xd9\x78\xc4\
\xe8\x54\xab\x55\xec\xee\xee\xa2\x54\x2a\x61\x65\x65\x05\x96\x65\
\xb1\x28\xbd\x52\xa9\x20\x0c\x43\x6c\x6e\x6e\x32\x88\x24\xd6\xca\
\xf3\x3c\x14\x8b\x45\x0e\x13\x12\x6b\x46\xf7\x36\x31\x6c\x26\x40\
\xc9\x66\xb3\xac\x99\x6a\xb7\xdb\x38\x3c\x3c\x64\xab\x83\x20\x08\
\xb8\x1c\x0e\xbd\x4c\x5b\x05\xd3\x16\xc1\xb2\x2c\x74\x3a\x1d\x66\
\xf4\xd2\xe9\x34\x3a\x9d\xce\xd8\x7e\x91\x98\x9c\xc2\xaf\x64\x50\
\x4a\xba\x30\x53\x96\x22\x84\x18\xd3\xda\xd1\x31\xd2\x38\x33\xe9\
\xda\x4e\xfb\x47\xda\x34\x33\x84\x48\x1e\x61\x74\x2e\xa6\x11\x24\
\x4a\xe9\xc8\x90\xe3\x38\x10\xa0\x50\x39\xf4\xb3\x00\x2b\x29\x35\
\xa4\xb5\x72\xab\xab\xab\x78\xef\xfd\xf7\xf0\x9b\xbf\xf9\x9b\xb8\
\x7e\xfd\x05\x34\x1a\x8d\x44\x2f\xd7\x40\x26\x95\x66\xe5\xcb\x71\
\xc0\xe3\x51\x84\xec\xcc\x47\xee\x22\x40\xd2\xc3\x02\x5a\x47\x18\
\xac\x07\x61\xaf\x26\x97\x33\xe9\x47\xcd\xd8\xc4\xda\x97\x46\xc5\
\x88\x42\x85\x58\x85\x88\x23\x20\x8c\x7c\x0c\x07\x01\xfc\x60\xc8\
\x35\x00\xbb\xdd\x1e\xda\x6d\x2d\x52\x6f\xb7\xda\x68\x26\x85\x41\
\x5b\x2d\x9d\x72\x4b\x42\x42\xf2\x5f\xa1\xed\x98\xef\xcd\x07\xc7\
\x04\x46\xc0\x38\xbd\x4a\x0f\x10\x01\x2c\xd3\xcb\xca\x64\xac\xc8\
\x33\x87\xe8\xf3\x7c\x3e\x8f\x7c\x3e\x8f\x5c\x2e\x97\xcc\xf0\x3c\
\x9e\x2d\xe8\x7d\x80\xf1\xfe\x64\xc0\x33\x0d\xd0\x3e\x4a\xf6\xea\
\x49\x62\x7d\x1e\x55\x3b\xcb\x43\x74\x11\x5a\xb9\xa7\xed\x7c\x4d\
\xeb\xae\x80\x58\x29\x40\xd1\xa4\x07\x1a\x6d\x49\x01\x08\x01\x29\
\x2d\xd8\xd0\xb5\xd3\x84\x10\x1a\x5c\x09\x1b\x52\xd8\x70\x5d\x0f\
\xd2\x16\x10\xb6\x42\x18\x05\xe8\x75\xb5\x1e\xa8\x3f\xd0\xf5\x46\
\xe3\x28\x86\xe7\xbb\xc8\xa6\x73\xba\x1e\xa2\xb4\xe1\x58\x7a\x60\
\x93\xa6\x85\x04\x80\x48\x68\x0d\xd6\x71\x1d\xf4\x49\x1a\x2c\xfa\
\x1e\x50\x9c\x52\x6f\x6a\x6c\x48\x47\x06\x80\x0b\x23\xd3\xe0\x4d\
\x00\xa2\xd5\x6a\xa1\x54\x2a\x61\x6e\x6e\x0e\x00\x58\x47\x75\x70\
\x70\x80\x66\xb3\xc9\xdb\xa1\x75\xd3\x60\x4e\xdb\xa6\x41\x9b\xcc\
\x24\x49\xbf\x45\xa1\x3b\x00\x89\xe1\xe4\x80\xad\x02\xca\xe5\x32\
\x4a\xa5\x12\x94\x52\x5c\xcb\xcf\x64\xf5\xa3\x28\x62\xfd\x15\x80\
\x31\x43\xe7\x4c\x26\x83\xed\xed\x6d\xf4\xfb\x7d\x16\xbd\x93\xab\
\xbb\xe9\x13\x15\x86\x21\xda\xed\x36\x83\x43\x12\xbf\x57\x2a\x15\
\x44\x51\x84\x8d\x8d\x0d\xcc\xce\xce\xa2\xd1\x68\xa0\x58\x2c\xe2\
\xe0\xe0\x00\x33\x33\x33\x78\xf1\xc5\x17\xd1\x68\x34\xb0\xbe\xbe\
\xce\xa1\xd5\x7a\xbd\xce\x20\x95\x92\x06\x28\x6c\x66\x96\xba\x21\
\xb0\x63\xb2\x61\x00\x78\x5f\xb3\xd9\x2c\x1f\x13\x19\xb1\x52\x78\
\x95\x18\x3a\xaa\x13\x48\x21\x37\x12\xaa\x93\xad\x02\x65\x19\x12\
\x98\x22\x96\x89\xc6\x20\x33\xb3\x9d\xa2\x28\x04\xe6\x4c\x86\xcb\
\xac\x0b\x69\x6a\xae\x00\x4c\x4d\xaa\x50\x4a\x25\xe6\xab\x7d\xf8\
\x7e\x94\x1c\x67\x52\x9e\x47\x80\x35\x61\x42\x48\x94\xcb\x15\xc4\
\x2a\xc6\x3f\xfc\xc3\x3f\xe0\xe5\x97\xbf\xa1\x43\xa9\x9d\x1e\x3c\
\x2f\x75\xe4\xfe\x3e\xe9\xfd\xc3\x6c\x66\x54\xe8\xb4\x6d\x7f\x91\
\x2c\xd6\x18\x83\x75\xdc\xc0\x7c\xd6\x15\x4e\x86\xd1\xc6\x99\xa3\
\x08\x4a\xe9\xea\xde\x51\x14\xc2\xf7\x43\x04\xc1\x10\x41\x10\x61\
\x30\xe8\xa1\xdb\xed\x27\x3e\x1d\xcd\xa4\xc0\x67\x07\xad\x56\x1b\
\x9d\x4e\x1b\x9d\x4e\x97\xe3\xfc\x83\xc1\x10\x51\x44\x88\x9e\x6e\
\x28\x3d\xab\xd4\xb3\x17\xea\x40\x84\x46\xed\x66\xf6\x8f\x18\x37\
\x15\x34\xc1\x15\x3f\x74\x53\x8e\x9b\xce\x07\xcd\xe6\xb2\xd9\x2c\
\x72\x85\x3c\x4a\xa5\x12\x0a\x89\x4f\x8c\x8e\xc7\x53\x68\xf0\xe8\
\x3a\xa6\x85\x08\x93\xb5\x1f\xc9\x86\xf8\x22\xd8\xab\xfb\xd9\xde\
\x17\xd5\xce\x02\x6a\x9e\x24\xf6\xe9\x29\x83\x75\xde\x36\x92\x16\
\xe8\x30\xa1\xa2\x60\xa1\x76\x65\x97\xba\x58\x33\xcc\xf0\xbe\xb4\
\x00\xa1\x0d\x83\x5d\xcf\x83\x74\x01\xdb\x03\x82\x50\x03\x84\x76\
\xbb\x0d\x7f\xe0\xc3\x0f\x02\xc4\x51\x17\x03\xd1\x87\x50\xfa\xf7\
\x9e\xed\x02\x2e\x20\x1c\x01\xdb\xb2\x38\x83\x49\xef\xc5\x88\xc1\
\x9a\xec\x2f\xf4\x62\xe3\x03\xdd\x34\xc0\x45\xff\x37\x07\x49\xea\
\x3f\x4d\xc0\x62\x96\x4c\x49\xa7\xd3\x90\x52\x62\x30\x18\x60\x71\
\x71\x11\xd9\x6c\x96\x5d\xd6\x6b\xb5\x1a\xb6\xb6\xb6\xc6\xea\xf4\
\x51\xd8\x8f\xc2\x8f\xf9\x7c\x9e\x6d\x1c\x68\x9b\xcd\x66\x13\xf9\
\x7c\x9e\x93\x75\x48\x20\x4e\xbf\x25\x9d\x10\x59\x30\x50\x78\x90\
\x32\xd8\x16\x17\x17\x39\x9c\x46\xc5\x97\xf3\xf9\x3c\x87\xbf\x84\
\x10\x5c\xd2\xa6\xdf\xef\xb3\x53\x3b\xed\xdf\x70\x38\xc4\xfa\xfa\
\x3a\x66\x67\x67\x91\xcb\xe5\x38\x24\x69\x5a\xec\xd0\xf9\x4b\xa7\
\xd3\x63\x7d\x1c\xb1\x70\xd5\x6a\x75\xcc\x49\x9e\xd8\x23\x02\x19\
\xc5\x62\x91\x43\xae\xe9\x74\x9a\xb3\x37\xc9\x4c\x95\x6a\x13\x9a\
\x25\x6a\xc8\xc2\x27\x97\xcb\x41\x29\xc5\xcc\x99\x59\x94\xd9\x14\
\xa6\x93\x75\x10\x31\x78\x71\x1c\xa3\x52\xa9\xc0\xf3\x3c\xd4\x6a\
\x35\x00\x60\xe6\xd0\x75\x5d\x0c\x06\x03\x66\x08\x4d\x80\x45\xf7\
\x93\x19\x5e\x24\xe0\x46\x40\x9b\xfe\x6f\xb2\x76\x93\x00\x91\x9e\
\x99\x54\xca\x43\xbf\xdf\xc3\x60\x10\xc2\x4d\x98\x30\x40\x8f\x4d\
\x85\x42\x1e\x61\x18\x27\x25\x98\x52\x48\x79\x29\xbc\xf3\xce\x3b\
\xe8\xf7\x07\xa8\x54\x2a\xd8\xde\xde\xc6\xec\x5c\x15\xc3\x7e\x2f\
\x79\xf6\xc6\xef\xf9\xc9\xfb\xff\xa4\x76\x51\x0c\x96\xb9\xc4\x45\
\x81\xa4\xf3\x80\xb1\xb3\x1c\x87\xcd\x58\x40\x70\xb0\x0a\x62\xe2\
\xfd\xc4\x26\x8e\x5d\xd9\x60\xd8\x87\x52\xd0\xb3\xc0\x58\x19\x06\
\xa0\xfa\x06\x08\xa3\xa1\xae\x17\x16\x06\xe8\xf5\xfa\xe8\xf7\xbb\
\xe8\xf5\x86\x68\xb7\x9b\x68\x36\x5b\xe8\x76\x3a\x38\x38\x38\x4c\
\x34\x57\xfd\xe4\xc6\x0b\x0c\x7a\x7b\xa4\xa9\xd2\x20\x6b\x84\xd8\
\x01\x8c\xd1\xc3\x80\x39\x7b\x1c\x3f\x0e\xa5\xf4\xac\x53\xcf\x6c\
\x93\xd4\x6c\x4b\xea\xfa\x62\xc9\xb1\xc7\x4a\xc1\xa2\xf3\x20\x00\
\x69\x49\xd8\x8e\x83\x54\xda\x43\xbe\x90\x43\xa1\x58\x40\xa1\x50\
\x44\x3e\x97\x47\x26\x93\x85\xeb\x7a\x10\x42\x26\x2f\xc1\x7f\x79\
\x66\x6d\x6c\x5b\x08\x31\x0a\x2b\x88\x8b\x63\x8f\x9e\xb2\x50\x17\
\xdb\x4e\x3b\x97\x5f\x2e\xd0\xf2\xe4\x34\x85\x44\x3c\x82\xd1\x4b\
\x0a\xca\x2d\x14\x09\x93\x05\x48\x08\x28\xea\x03\x84\xd0\x61\x3e\
\x68\x31\xbc\x65\xc7\x70\x5c\x81\x30\x0a\x90\x72\x52\xb0\x2d\x1b\
\xed\x56\x07\xfd\x5e\x4f\x0f\x8e\x51\x04\x4b\xd8\x90\x96\x85\xd0\
\x0d\x8d\x6b\xad\x19\x07\x91\x48\xec\xa5\xa5\xc3\x86\x50\x80\x12\
\x2a\xf9\x7b\x34\x4d\xfd\xe8\xbd\x94\xd4\x35\xe4\x02\xd2\x23\x81\
\x32\x81\x2b\x12\xb2\x53\x56\x34\xf5\x67\xa6\xae\xd4\x71\x1c\xbc\
\xfe\xfa\xeb\x1c\x16\xac\x54\x2a\xf8\xf4\xd3\x4f\xb1\xb7\xb7\xc7\
\xec\x0c\x2d\x6f\x8a\xb7\x89\x81\xa2\x9a\x7e\x80\xee\x3f\x89\x29\
\x21\x26\x86\x9c\xc9\x81\xd1\xfd\x4e\xb5\xf5\x28\x1c\x46\x21\xa4\
\x52\xa9\x84\x74\x3a\x8d\x56\xab\x85\x7b\xf7\xee\xb1\x5b\x3c\xd5\
\xfb\x03\x34\x9b\xd5\x68\x34\xe0\x38\x0e\x4a\xa5\x12\x83\x31\x62\
\xaa\xe2\x38\xc6\xe1\xe1\x21\x0b\xc5\xb5\xb0\x7f\x94\xf4\xd4\x6c\
\x36\xd9\xb1\x3d\x8e\x63\x2e\xdb\x43\xf5\xf7\x3e\xfc\xf0\xc3\xa4\
\xee\x9e\x35\xc6\xd6\xd1\x39\xf0\x3c\x6f\xcc\x0e\xe3\xb9\xe7\x9e\
\x43\xb9\x5c\xe6\x02\xda\xc4\x7a\x99\x26\xa1\xc4\xe0\x51\xb9\x1c\
\x0a\xb1\x12\x10\xa5\xeb\x45\x20\x54\x57\x0a\x09\xc6\xb2\x1a\x29\
\xf2\x41\x99\x9b\x85\x42\x81\xcb\x12\xd1\xb5\x36\x0b\x6d\x13\x3b\
\x48\x61\x62\x93\xe1\xa2\x75\xbb\xae\x6b\x24\x6d\x8d\x04\xed\x74\
\x3f\x8d\x83\x7b\x95\x80\x65\x09\xdb\xb6\x38\xc2\x03\xc4\xb0\xac\
\xd1\xf9\x09\x02\x1f\x41\xe0\x23\x8a\x42\xdc\xbc\x79\x13\xff\xf4\
\x4f\xff\x84\x7f\xff\xef\x7f\x09\xfb\xfb\xfb\x08\xfc\x10\xa3\x14\
\x13\x18\xe3\xda\xd1\xf2\x38\x5f\x64\x7b\x5c\xc0\x15\x00\xd8\x91\
\xa2\x19\x80\xcd\xcc\x13\xfb\xbc\x00\x7a\xa6\xa6\xf4\x6c\x51\x1b\
\xe2\x19\xd9\x7d\xc4\x52\xc5\xfa\x01\x18\x26\xf5\xbf\xfc\xc0\x47\
\x1c\xc5\x4c\x91\x6a\x2d\x55\x1f\xbd\x7e\x07\x9d\x6e\x0b\x61\xe0\
\xa3\xd5\x6a\xa1\xd5\x6c\xa1\xdd\xe9\x6a\x7d\x55\xbf\x87\x70\xe8\
\xa3\xdb\xd5\x82\xbe\x28\xd4\xa1\x3d\x28\x22\x03\xf5\x5b\x6d\x04\
\xaa\x10\xc7\x21\xe2\x78\x1c\x54\x10\x5b\x15\xc7\xba\xf3\xd2\xe9\
\xdb\x06\xc8\x82\x66\x97\x14\x04\xa4\x6d\x41\x48\x01\x61\x49\x48\
\xdb\x82\xb4\xad\x24\x8b\x51\x21\x0a\x23\x58\x2a\x06\x2c\xbd\x9c\
\xe5\x5a\x48\x65\x53\x48\xa5\x52\xc8\x15\x73\x28\x94\xb4\xef\x4c\
\x21\x5f\x42\x2e\x9d\x87\xe7\x66\xe0\x58\x29\x66\xa2\x04\x24\x46\
\xfd\xb1\x48\x66\xd7\x06\xf8\x61\x00\x3b\xba\x47\x4d\x96\xed\x41\
\x80\x12\x03\xb8\x89\x1b\xe0\x51\x01\xaf\xc7\x01\xe0\x3d\x4e\x0f\
\xfb\xa3\x6a\xa7\x31\xce\xf7\xc3\x48\x3f\x8c\xa6\x8c\xd9\x86\xf9\
\x7e\x6c\x16\x32\x76\x0b\xa9\xd1\x1f\xa3\x00\xa0\x02\x34\x68\x12\
\x62\xd4\x47\xa8\xd1\xcf\xb5\x10\x57\x7b\xd0\xc5\x4a\x41\x02\xb0\
\x2d\x01\xe1\xd9\x70\xec\x14\x1c\x57\xc0\x73\x1d\x84\x51\x88\x94\
\x4c\xc3\x91\x1e\x5c\x99\x42\x4b\xb6\xd0\xe9\x68\xb6\xa8\x3b\xe8\
\x41\x0a\x81\x61\x30\x84\x1f\xf9\x08\x11\x22\x23\x53\x70\x84\x93\
\xd4\x29\x14\x70\xed\x0c\x10\x27\xfa\x29\x4e\x8b\x97\x7c\x0c\xa3\
\xd3\xae\x81\xe0\xa8\xae\xa1\xee\xa3\xa4\xa4\x7e\x4b\x1f\x86\x6d\
\x3b\xc9\xe4\x34\x82\x52\x80\x94\x16\xfa\xfd\x01\x3a\x9d\x2e\xa2\
\x28\x86\x94\x56\x92\x59\xe7\x60\x7f\xbf\x86\xb9\xb9\x39\x5c\xbd\
\x7a\x8d\x41\x88\x94\x12\x1b\x1b\x1b\xd8\xdf\xdf\xe7\xc1\x99\x98\
\x1f\xfa\xab\x94\x62\x1f\x25\x2a\x18\x6d\xda\x07\x50\xf6\x1e\x2d\
\x6f\x66\xe6\x45\x51\x84\xbd\xbd\x3d\x2e\x56\xec\x38\x0e\xf6\xf6\
\xf6\xd8\xc8\x92\x34\x5a\xc5\x62\x11\xc5\x62\x11\x54\x6a\x07\x00\
\x1b\x6a\x9a\xba\x58\xb2\x9a\xa0\xba\x87\x94\xc9\x48\xf6\x0c\xa4\
\x2b\xa2\x10\x16\x85\x44\x7f\xe9\x97\x7e\x09\x87\x87\x87\xf8\xe8\
\xa3\x8f\x50\xaf\xd7\x39\xcc\xb7\xb3\xb3\xc3\xf5\x0a\x81\x51\xb8\
\x8c\x8c\x52\x9b\xcd\x26\x7b\x4d\x91\x08\xbe\x5e\xd7\xa5\x61\x28\
\x24\x4a\x40\x88\x40\x08\xfd\x1e\x00\xdb\x21\x10\x00\x24\x3d\x9a\
\xc9\x20\x11\x18\x1a\x81\x18\x30\xd8\xa5\xcf\x47\x49\x5b\x5d\x0e\
\xad\x9a\x56\x0f\x34\xb6\x9a\xd1\x13\xfa\x2d\x31\x58\xe6\xe7\xc7\
\xc9\x7a\xe8\xba\x47\x51\x88\x28\x0e\x21\x85\x80\xe7\xba\x4c\x80\
\x84\xa1\xd6\x9d\x0d\xfd\x1e\xc2\x20\x82\xb4\x04\x5c\xc7\x45\x14\
\x59\xd8\xdd\xdd\xc5\x9f\xff\xf9\xf7\xf1\x1f\xfe\xc3\xaf\x40\xc5\
\x12\x80\x44\xac\x04\xdb\x98\xe8\x6d\x45\xc9\x3d\x9d\x8c\x3b\x50\
\x18\x33\x7e\x04\x30\xc6\x26\x4c\x3e\xeb\xf7\xd9\xce\x12\xea\x3b\
\xae\x9d\x16\xdd\x99\x16\xd5\x9b\xfc\xfe\xac\xeb\xb0\xa3\x04\x94\
\x38\x42\x26\xe0\x45\x3f\xe8\xd2\x98\xf9\x51\x96\x9f\xc2\xb8\x85\
\x02\xa1\x67\xba\xc1\x28\x13\x84\x50\xb9\x69\x02\xda\xed\x76\xd0\
\xea\x34\xd1\x6a\xd7\x11\x04\x3e\x9a\xf5\x06\xea\xf5\x3a\xda\xed\
\x2e\x53\xac\x52\x01\x41\x90\xd0\xa3\x49\x79\x0a\xfd\x77\xa4\xb3\
\x88\x55\x88\x28\xd6\xc5\x58\x91\x54\xbd\x1f\x1d\x94\x98\x78\xaf\
\x7f\xa3\x01\xa3\x84\x10\x16\x90\xb8\xe8\x48\x3b\x71\x61\x97\x12\
\xc2\x92\x10\x96\x66\x9b\x62\x24\x86\xa6\x4a\xc2\xb2\x2d\x28\xa1\
\x60\x3b\x36\xbc\x94\x87\x54\x3a\x85\x74\x26\x8d\x54\x26\x85\x74\
\x26\x03\xcf\x4b\xc3\x75\x52\xb0\xa5\x0b\x29\x0c\x39\x5b\xb2\xdf\
\x42\x8e\xd0\xfe\x94\xdb\x61\xea\xc5\x9c\x04\x48\xf7\xab\xc3\x3a\
\x6f\xbb\x08\x60\xf4\xa8\xc0\xd5\x93\x14\xfe\xfb\x22\xdb\x71\xfb\
\x6f\xde\x5f\x5f\xc4\x31\x8e\x65\x21\xf1\x44\xc3\x78\x0e\xc6\x25\
\xac\xf4\x21\x78\xd6\x22\xe8\x9f\xc9\x0e\x7b\x44\x17\xab\x38\x89\
\x15\x82\x7e\xa7\x43\x89\xb6\x25\x60\x49\x5b\x6b\x2d\xa1\x53\xe0\
\x55\x0a\x88\x82\x08\x71\x10\x23\x0c\x29\x65\x5e\xa0\x3f\xe8\x02\
\x00\x82\x38\x84\x12\x31\xa4\x23\x61\x7b\x56\x22\xa6\xb7\x00\x25\
\x20\x2d\xca\xde\x1a\x81\x24\x40\x87\x28\x75\xff\x69\xec\x93\x31\
\x39\xa5\x01\x49\x4a\x81\x28\x8a\x93\x49\xa1\x60\x26\x27\x8a\xe2\
\x64\x82\x68\x41\x29\x20\x08\xf4\x60\xa8\xfb\x31\xc0\x75\x3d\xec\
\xee\xec\xe2\x2b\x5f\x79\x0e\xb6\xed\x20\x0c\x42\x16\x6e\xef\xee\
\xee\xa2\xdb\xd5\xfb\x6e\x02\x2f\xd2\x74\xc5\x71\xcc\x4e\xec\xd9\
\x6c\x96\x6b\xe2\x85\x61\x88\x7c\x3e\xcf\xa0\x8b\xbc\x97\x80\x11\
\xe8\xa0\x70\xa5\x6d\xdb\x28\x95\x4a\x5c\x1e\x87\x96\xa3\x4c\x6e\
\x62\x8a\x06\x83\x01\x0a\x85\x02\xf2\xf9\xbc\x4e\x52\x6a\x34\x90\
\xc9\x64\xf8\xfd\xcc\xcc\x0c\xa2\x28\xe2\xf2\x31\x66\x79\x1a\xd2\
\x29\x0d\x06\x03\xae\xd1\x07\x68\xe7\xf2\xef\x7e\xf7\xbb\x78\xeb\
\xad\xb7\xf0\xc1\x07\x1f\xa0\xd1\x68\x30\x23\xa7\xaf\xc5\x88\xcd\
\x31\x6b\xf4\x55\xab\x55\x1c\x1e\x1e\x72\x2d\xc6\x4c\x26\x83\xdd\
\xdd\x5d\x36\x4e\x25\xe6\x8e\x58\xb1\x38\xd6\xa6\xac\xa6\x71\x66\
\xaf\xd7\xe3\xf0\x65\xbf\xdf\x67\xf6\x8f\xfa\x3e\xd3\xa6\x81\x98\
\x25\x40\x87\x51\x29\x2c\xd8\xed\x76\xd9\x8d\x9f\x00\x15\x65\x14\
\x12\xf8\x25\xd0\x45\x16\x19\xc4\xc6\xd1\x71\x99\xe0\x8d\x00\xf0\
\x34\xad\x31\xdd\x03\xc3\xa1\x0f\xd7\xb5\xe1\xfb\x01\x3c\x2f\x05\
\xc7\x19\xdd\x57\x5a\x62\x13\x63\xe8\x0f\x20\xa5\x85\x6c\x36\x83\
\xb4\x95\xc6\xc1\xe1\x21\x3e\xf9\xe4\x16\x3c\xd7\x46\xbf\x3f\x44\
\xa1\x58\x40\x1c\x43\x8f\x97\x82\xc6\xd7\x48\x6b\x21\xa1\xa0\xc9\
\xb3\x69\x6c\xd6\x24\xc0\x3a\xbd\x9d\xa9\x5f\x7a\xc0\x50\xe4\x34\
\x22\xe2\x2c\x6d\x72\x7c\x3e\x29\x4c\x6a\xdb\x6e\xe2\x74\x1b\x8d\
\x6a\x38\x01\x80\x0a\x47\x3e\x51\x61\x18\x20\x8a\x7c\xd6\x4f\x99\
\x8e\xe8\x14\xab\x26\x2b\x05\xaa\x01\x48\xa6\x72\xed\x76\x5b\x0b\
\x34\xbb\x6d\x74\xbb\x2d\xf4\x87\x3d\x44\x71\x8c\xc8\x1f\xd5\xb2\
\x12\xc2\x82\x95\x98\x05\x46\x7e\x92\x3d\xa1\xa0\xd9\x9f\x38\x99\
\xae\xc6\x3a\x6f\x27\xe6\xfc\x1d\x05\x80\x32\x2d\xc6\x6b\x04\x0a\
\x21\x47\xe2\x56\x68\x60\x25\xa5\x0d\xdb\x76\x18\x34\x3a\x8e\xad\
\xf7\x23\x8e\xe1\xf7\x3b\x00\xc0\x26\xa1\xe9\x6c\x06\xd2\x12\xb0\
\x6d\x0b\x99\x5c\x06\x85\x52\x01\xe5\xaa\x4e\x3d\xae\xcc\x54\x51\
\xae\x56\x50\xcc\x97\x92\x4e\x21\x05\xdb\x76\x13\xf0\x66\x5e\x54\
\x71\x64\xbf\xcc\x8b\x70\x12\x18\x79\x1a\xea\x7b\xda\xee\xb7\x3d\
\xe9\xa0\xf0\x42\x5b\x12\xaa\x13\x50\xb0\xa0\x41\x9c\x52\xba\xf7\
\xb0\x84\x84\x23\x5d\x48\xcb\x46\xec\x29\xc4\xa1\x42\x1c\x8f\x42\
\x25\x8e\xd3\xd5\x49\x38\xb1\xce\x32\xec\xf6\xbb\x08\xa2\x21\x82\
\x68\x80\x6c\x2e\x83\x94\x97\x86\x25\x6c\xa8\x4e\x0b\xae\x35\xaa\
\xde\xa0\xfb\xd0\x91\x91\xb1\x96\x82\x99\x03\x8c\x09\xb8\xa6\xcf\
\x94\x27\x07\x49\xd3\xc2\x80\x42\x40\xe6\xe0\x4a\x7d\xb1\xe3\x38\
\xe8\xf5\x7a\xe8\xf5\x7a\xcc\x5e\x51\x5f\x42\xd6\x31\xf4\x97\x4c\
\x42\xe9\xfb\xc1\x60\x80\x97\x5f\x7e\x99\xad\x1d\x06\x83\x01\xca\
\xe5\x32\x2c\xcb\xc2\xbd\x7b\xf7\xe0\x38\x0e\xae\x5d\xbb\x86\xe7\
\x9f\x7f\x1e\xdd\x6e\x17\x3f\xfe\xf1\x8f\x59\xc7\x14\x86\x21\x5e\
\x7d\xf5\x55\xa4\x52\x29\x6c\x6f\x6f\x33\x5b\xb3\xbd\xbd\x8d\x20\
\x08\x50\x2e\x97\xf1\x8d\x6f\x7c\x03\x97\x2f\x5f\x46\xb5\x5a\xc5\
\x8d\x1b\x37\x90\xcf\xe7\xf1\xd5\xaf\x7e\x15\x9f\x7d\xf6\x19\x66\
\x66\x66\xb0\xbd\xbd\xcd\x20\x4b\x4a\x89\xe1\x70\xc8\x7a\x25\xa5\
\x46\x7e\x5a\xc4\xb0\xfd\xd1\x1f\xfd\x11\xfe\xf6\x6f\xff\x36\x71\
\x18\x2f\xb1\xee\x89\x8e\x85\x42\x9d\xc4\x60\x65\x32\x19\xac\xaf\
\xaf\x03\xd0\x09\x03\xd5\x6a\x15\xcd\x66\x13\xae\xeb\x32\xb0\xa5\
\x0c\xc2\x6e\xb7\xcb\x75\x14\xe9\x3c\x17\x0a\x05\xac\xac\xac\x40\
\x08\x81\xad\xad\x2d\xf4\x7a\x3d\x54\x2a\x15\x06\xb2\x74\xcd\xcc\
\x01\x96\xc0\x2d\xe9\xd0\x4c\x4f\x2c\x12\xbf\x13\x23\x46\xc7\x4c\
\xa5\x8c\xa8\xd4\x0e\x59\x54\x98\xb6\x14\x80\x06\x6f\x8d\x46\x03\
\x64\x74\x4d\xf7\x85\xe9\x91\x65\xb2\x8f\xfa\x5e\x10\xb0\xed\x51\
\xc6\xa1\x94\x02\xa5\x52\x91\x5d\xff\x01\x85\x76\xbb\x83\xbd\xbd\
\x5d\xd8\x96\x8b\x9f\xff\xe6\xcf\x63\x75\xf5\x2e\xfe\xdb\x7f\xfb\
\xbf\xf1\x3b\xbf\xf3\xbf\xe2\xdd\x77\x6f\xea\x2c\x53\x11\x27\x11\
\x22\x8a\x2e\x11\xd8\xa2\xb0\xf7\x93\xd7\x1e\x96\x6e\xcc\xee\x77\
\x3b\xcc\x36\x99\xb4\x24\xdd\x1c\xc4\x42\xc5\x71\x88\x28\x1e\x85\
\xfc\x82\x20\x40\xaf\xd7\x43\xb7\xdb\x65\x57\xde\xdd\xdd\x5d\x36\
\x9e\x23\xc0\xc5\xe9\xb9\x61\x80\x28\x0e\xb4\x35\x43\xd2\x84\xd0\
\x9a\x08\x01\xad\x63\x88\x22\x85\xe1\x30\xf1\x42\x61\x79\xc5\x88\
\xfa\x57\x4a\x19\x9c\xfb\x78\xac\xd9\xec\xa0\xa4\xb4\xd9\x2a\x41\
\x08\x09\xcb\xb2\xf5\x4b\x26\x29\xae\x16\xd0\xeb\x75\x61\xdb\x9a\
\x5e\x45\x32\xc3\x09\xe2\x18\x2a\xb2\x21\x21\x90\xcf\xe7\x50\x2a\
\x17\x51\x2e\x97\x31\x37\x37\x8b\xb9\xb9\x59\x64\x32\x19\x54\xab\
\x55\x94\xcb\x65\x64\x32\x39\xa4\xec\x2c\x5c\xdb\x1b\x13\x20\x9e\
\x76\x01\x8e\x4b\x24\x38\xcb\xf7\x4f\xdb\xd3\x76\x52\xbb\x1f\x8d\
\xc0\x97\xb5\x4d\x7b\xb6\xcc\xcf\xa5\x14\x49\x19\x10\x95\x4c\xa6\
\x6c\x38\x9e\x0d\xc7\xb1\x12\x76\x22\x05\x88\x38\x11\x59\x77\xd0\
\xed\x76\xd0\x19\xf6\xe1\xfb\xba\x2c\x49\x2e\x1b\xc1\xb1\x1d\xc4\
\x96\x84\x70\x05\x97\xd2\xd2\x2c\x16\x69\x61\x08\x60\xe9\xf7\x4a\
\x1d\x9d\xe1\x8e\xf6\x69\x7c\x80\x36\xfb\x01\x0a\x27\xe9\xfd\x96\
\x3c\x70\xda\x8e\xc3\x85\x7c\xbb\x89\xd9\xe8\xf6\xf6\x36\x0b\xe2\
\x4d\xfd\x15\xe9\x96\xa8\x5f\x09\xc3\x90\xc3\x88\x00\x98\x99\x7a\
\xed\xb5\xd7\xd0\x68\x34\x70\xf7\xee\x5d\x0e\x23\x92\xee\xc8\xf7\
\x7d\xac\xaf\xaf\x43\x4a\x89\xe7\x9f\x7f\x9e\xb3\xf0\x32\x99\x0c\
\xfe\xed\xdf\xfe\x0d\x80\x16\xc0\x93\x81\x27\xe9\x97\x5a\xad\x16\
\x6e\xde\xbc\x89\x9d\x9d\x1d\x04\x41\x80\x85\x85\x05\x2c\x2c\x2c\
\x60\x7e\x7e\x1e\xf5\x7a\x1d\xaf\xbc\xf2\x0a\x7e\xf4\xa3\x1f\x31\
\x48\x22\xd6\xc6\xf3\x3c\x54\x2a\x15\xb6\x57\xe8\x74\x3a\xc8\xe5\
\x72\x58\x5b\x5b\xc3\xea\xea\x2a\x7c\xdf\x47\x36\x9b\x45\xa3\xd1\
\x60\x60\x46\x9e\x54\xbe\xef\x8f\x89\xc3\x85\x10\xec\x48\xef\xfb\
\x3e\xfb\x5a\x99\xf6\x0c\x14\x0a\x24\x81\xbe\x65\x59\x98\x99\x99\
\x81\xe7\x79\x98\x99\x99\x41\x2a\x95\x62\x81\x3e\x01\x59\xd7\x75\
\x79\x1d\x24\xf6\x27\xd0\x44\x20\xd6\xb2\x2c\x0e\x3f\x52\x12\x81\
\xa9\x4b\x33\xc3\x79\x14\x52\x25\x03\x58\x7a\x91\xa6\x8c\x74\x77\
\x66\xf6\x3c\x81\x2c\x0a\x53\xd2\x18\x4e\xeb\x34\xeb\x19\x9a\x16\
\x20\xe4\xa3\x96\xcb\xe5\xd0\xed\x76\xf9\x9c\x85\x61\xcc\xd9\x96\
\xe5\x72\x19\x7f\xf0\x07\x7f\x80\x5f\xff\xf5\xff\x85\xfd\xd5\x20\
\x88\x7d\x1d\xdd\xbf\x09\x89\x35\x11\xf6\x7f\x32\xda\x79\xb4\x57\
\x67\x59\xc6\x7c\x6f\xef\xef\xef\x23\x8a\x03\x84\x41\x8c\x30\xf2\
\xe1\x0f\x43\x0c\xfd\x3e\x06\x7d\x5d\x79\xbe\xdf\xef\x63\x30\x1c\
\xa0\xd5\x6a\xa0\xd5\xd2\xcc\x14\x65\x80\x90\x40\xb1\x97\x08\x43\
\xcd\x1b\x82\xda\x28\x43\x4f\x20\x16\x12\x51\x14\x02\x89\x0a\x55\
\xa9\x18\x2a\x8a\x11\xc7\x43\xa8\x58\x03\x14\x3b\xc9\xc2\xe3\x30\
\xee\x68\xc2\x07\xad\xb3\x20\x31\xeb\xb8\x98\xdc\x7c\x99\x33\x17\
\xfd\xde\x4a\x74\x51\xc4\xd0\x29\x20\x8a\x11\x4b\xc5\xb3\x4b\xcb\
\xb2\xf8\xe1\x48\xa5\x52\x28\x57\xca\x58\x5a\x5a\x44\xa5\x52\xc1\
\xdc\xdc\x1c\xaa\xd5\x2a\x67\xc5\x64\x32\x19\xb8\x4e\x0a\xae\x35\
\x2a\x4f\x60\xce\x60\x4c\xc0\x37\x09\x94\x26\x41\xd4\xb4\x0e\xf5\
\xb4\xf8\xee\xd3\xf6\xe5\x6a\x17\x7d\x9d\xa7\x3d\xec\x3f\x6b\x60\
\xfd\xb8\x30\x3b\x3f\x9f\xd0\xe1\x39\x08\xc0\xb2\xf5\x00\x65\xbb\
\xa3\x3e\xa0\xdf\xf7\x00\x4b\x22\x08\x7c\xb8\xae\x9e\xf5\xb7\x3b\
\x6d\x0c\x06\x5a\xce\x10\x06\x11\x6c\xcb\x85\x2c\xd8\x90\xd0\xfd\
\x87\x82\x05\x01\x0b\x10\x31\x6c\x67\xd4\x2f\xe9\xe7\x5c\x87\xfc\
\xc6\x59\x0e\x62\x90\x70\x64\x60\xa4\xfd\x36\x27\xb9\x14\x4a\xa2\
\xc1\x7b\x76\x76\x16\x4b\x4b\x4b\x1c\x4a\xa3\xda\x7e\x14\xd6\x1a\
\x6d\x7b\x14\x8d\x20\x8b\x19\xdb\xb6\xd1\xe9\x74\x38\xf4\x44\x22\
\xef\x72\xb9\x0c\x2a\x2c\x6c\x7a\x2f\x55\x2a\x15\xd8\xb6\x8d\x7a\
\xbd\x8e\x7a\xbd\x8e\x4a\xa5\x82\x5e\xaf\x87\x42\xa1\x80\x97\x5f\
\x7e\x19\x6b\x6b\x6b\x1c\xb9\xb0\x6d\x1b\x97\x2f\x5f\x46\x18\x86\
\xa8\xd7\xeb\x78\xf6\xd9\x67\x39\x14\xb9\xba\xba\xca\x21\xaf\x0f\
\x3e\xf8\x00\xe9\x74\x1a\xd9\x6c\x16\xc5\x62\x11\x87\x87\x87\xe8\
\x76\xbb\x63\x06\xcf\xb6\x6d\xa3\x50\x28\x70\x3d\x44\x02\x7a\x41\
\x10\x60\x71\x71\x11\x80\x66\x63\xc8\xc4\x94\x00\xc8\xf2\xf2\x32\
\xdb\x1b\x90\x19\x75\x26\x93\x61\xe0\xd7\xe9\x74\xb0\xbc\xbc\xcc\
\x84\x00\x01\x16\x0a\xd1\x35\x1a\x0d\x90\x8b\xbc\x52\x0a\x07\x07\
\x07\x1c\x95\x51\x4a\xfb\x75\xe5\x72\x39\x6c\x6c\x6c\x30\x03\x46\
\x6e\xf7\x74\x9f\x99\x56\x10\x74\x3d\x69\x9c\x21\xed\x96\xa9\xed\
\xa2\x2c\xcf\x28\x8a\xf8\x5c\x9a\x3a\x3a\x33\x6c\x48\x21\x53\xf2\
\x2e\x33\xaf\xb3\x39\x0e\xd1\x5f\x02\x56\xc0\xa8\x4c\x10\xdd\x5f\
\x14\x65\xd2\x19\x95\x05\x64\x32\x1e\x6c\x6b\x80\xd5\xd5\x55\x5c\
\xba\x74\x19\xef\xbc\x7b\x03\x7f\xf8\x87\x7f\x88\xff\xfc\x9f\xff\
\x13\x6e\xdd\xfa\x94\xc3\xa9\x2a\x21\xb0\x48\xe3\x4c\x5a\xac\x23\
\x4d\x99\x83\xf9\xfd\xb3\x41\x63\xcf\xf7\xa9\x6b\x38\xff\x76\xee\
\x17\x68\x9d\xb4\x0e\xfb\x93\x5b\x1f\x23\x08\x86\x38\x38\xa8\x63\
\x38\xec\xa3\xdb\xed\xa3\xd3\x69\xa1\xdb\xed\x33\xc0\xd2\xc5\x24\
\x87\x4c\x51\x4e\x96\x3a\xa0\x07\x31\x93\xc9\x8c\x5d\x58\xa5\x14\
\xdf\x44\x4a\x29\xc4\x2a\x4e\x32\x6c\x14\x10\x8d\xa7\x2f\x4b\xa5\
\xc1\x92\x8a\x47\x21\x36\x41\xf4\xa3\xd1\x41\x0a\x58\x49\xd8\x6f\
\x1c\x50\x99\x19\x14\x80\xd6\x40\x49\x9b\xe8\x51\xad\x23\x0b\x29\
\x0c\x8a\x08\xa9\x94\x0d\x3f\x1e\xa2\xd7\xd7\xbe\x24\xd9\x6c\x16\
\xb3\xb3\x55\xe4\x72\x79\xcc\x54\x67\x51\xa9\x54\x50\x2e\x97\x51\
\x2e\x97\x51\xad\x56\x51\x2c\x16\xf9\x21\x70\x6c\x87\x19\x32\x33\
\xac\x4a\xc7\x72\xdc\x85\x79\xca\x5e\x3d\x6d\x0f\xbb\x3d\x65\xb1\
\x46\xed\xd8\x67\x88\x59\x71\xc5\x03\x84\xce\xb0\xf3\x92\x89\x5d\
\x0c\xd7\xb5\x13\x61\x77\x80\x94\x37\x2a\x83\xd5\xe9\xb4\x31\xf4\
\x87\x68\xfa\x6d\xdd\x3f\x05\x40\x36\xa5\x6b\x05\x66\xb3\x69\x2d\
\x19\xb0\xec\x31\x56\x5b\x0f\xb6\x47\x27\x62\x71\x04\x40\x44\xe3\
\xbb\x36\x11\x1e\x24\x60\x34\x39\x70\x52\xa8\x6c\x76\x76\x76\x2c\
\xd3\x6c\x67\x67\x87\x43\x4a\x66\x79\x19\xf2\x6a\x2a\x97\xcb\x1c\
\x6e\x23\x76\x8c\xca\xbc\x5c\xbf\x7e\x1d\x8d\x46\x83\xa5\x1f\xe6\
\xb6\x37\x37\x37\x79\x40\x9f\x9b\x9b\x43\xad\x56\x83\xef\xfb\x0c\
\x04\xde\x78\xe3\x0d\x1c\x1e\x1e\x62\x6f\x6f\x0f\xb5\x5a\x0d\x9d\
\x4e\x87\xa3\x1d\xcd\x66\x33\xb1\xd8\x19\x60\x69\x69\x09\xad\x56\
\x8b\xf7\xc7\xb2\x2c\xdc\xbc\x79\x13\xcf\x3e\xfb\x2c\x8a\xc5\x22\
\x16\x16\x16\x70\xe5\xca\x15\xa4\xd3\x69\xac\xad\xad\x71\x78\x90\
\x04\xf2\xbd\x5e\x0f\x00\x30\x37\x37\x87\xed\xed\x6d\x5c\xbe\x7c\
\x19\xbf\xfc\xcb\xbf\x8c\x37\xdf\x7c\x93\xc7\x00\xb2\x98\x20\xe1\
\x3a\x79\x78\x91\x87\x15\x59\x3c\xb4\x5a\xad\x23\x13\x64\xba\xce\
\xc4\x1a\x51\x0d\x48\x40\xb3\x73\x04\x78\xf3\xf9\x3c\xae\x5c\xb9\
\x82\xad\xad\x2d\x78\x9e\x87\x72\xb9\xcc\xfe\x57\xad\x56\x8b\x0d\
\xb0\xe9\x1c\x12\xab\x45\x26\xa6\x94\xf9\x48\xcb\xd0\x3e\x98\x7e\
\x65\x14\x55\x22\x40\x6a\x32\x72\x54\x41\x04\xd0\x00\xd3\x34\x5d\
\xa5\xbf\xe6\xf8\x68\xb2\x74\x42\x48\x06\xd9\xbe\xef\x27\x25\x95\
\xfa\xb0\x2c\x0a\x5d\x0a\xe4\x72\x39\x00\xc0\xce\xce\x0e\x32\xa9\
\x0c\xde\x7b\xef\x3d\x16\xc4\x53\xe8\x7d\x32\x24\x48\xd9\xbd\x4f\
\xe2\xd8\xf5\xb0\x58\x2c\xfb\xef\xff\xfe\x7f\xf0\xcd\x48\x02\x75\
\xf2\xe4\x30\x2f\xb8\xe3\x38\x9c\x5d\x42\x3f\x36\x3d\xa4\x94\x52\
\x7c\xf3\x4f\x6e\xd4\x2c\x47\x23\x2d\x8b\xad\x0f\x80\x11\x2d\x6a\
\x27\x22\x74\x7a\x08\x92\x5f\x8f\xd1\xa7\x80\x36\x10\x64\x7d\x55\
\x22\xf8\x34\x41\x16\x44\x3c\xb6\x8f\xe6\xf6\x39\xfc\xa9\x42\xb4\
\x3b\x3d\x08\x5b\x70\x21\x51\x9a\x0d\xe6\x72\x79\x54\x2b\x33\x2c\
\xcc\xcc\xe7\x0b\x28\x16\x8b\xc8\x66\xb3\x3c\x73\x90\xd2\x86\x23\
\x2d\x90\xc8\x7e\x92\xb5\x32\x67\xae\x93\xe7\x62\x92\x9d\x3a\x0e\
\x58\xfd\xac\x0f\x8e\x3f\x4b\xed\x61\x5c\xeb\xc9\x87\xfd\x49\xec\
\xf4\x1e\xa4\x1d\xc7\x1a\x03\x7a\x20\x10\x52\x50\x19\xc1\xb1\x09\
\x10\x89\x8d\xc9\xd2\x20\x8a\x22\x38\x9e\x0b\x2b\xe9\xff\x1c\xc7\
\x41\x33\x01\x08\x3a\xcc\xb6\x8b\x7e\x3a\x83\x30\xf4\xa1\x54\x15\
\xf9\xbc\x80\x65\x09\xc4\xb1\x38\xb2\x2f\xa4\x09\x55\xc9\x3e\x40\
\xc6\x88\x63\x00\x22\x1a\x63\xb0\xcc\xfd\xa1\x7e\x6b\xa4\xa3\x19\
\x01\x2d\xd7\x75\x99\x95\x21\x0d\xcf\xce\xce\xce\xd8\x6f\xcd\xed\
\x53\xc8\x90\x98\x91\xc1\x60\xc0\xa5\x6c\xca\xe5\x32\xd6\xd7\xd7\
\x51\xab\xd5\xd8\xa2\x81\x4c\x31\xaf\x5d\xbb\x86\x7c\x3e\x8f\x3b\
\x77\xee\x60\x63\x63\x03\x9e\xe7\x71\x61\xe7\x5a\xad\x86\xe1\x70\
\x88\xbb\x77\xef\xb2\x7b\x7b\xb5\x5a\x85\xe7\x79\x38\x3c\x3c\x84\
\x94\x12\xcd\x66\x93\xad\x05\x82\x20\xc0\xec\xec\x2c\xf6\xf7\xf7\
\x01\x68\xdb\x84\x6e\xb7\xcb\x76\x11\x71\x1c\xe3\xc3\x0f\x3f\x64\
\x3d\x2f\x00\x54\x2a\x15\x8e\x94\x50\x31\xeb\xe1\x70\xc8\x3a\xa5\
\x30\x0c\x31\x37\x37\xc7\xa6\x9f\xc4\x34\x91\x98\x7d\x61\x61\x01\
\xe5\x72\x19\x1f\x7e\xf8\x21\xb3\x57\xb9\x5c\x0e\xad\x56\x8b\x3d\
\xb0\xf8\xfa\x24\xf7\x00\xa0\x85\xfd\x14\xaa\xa4\x44\x2c\x8a\xce\
\xb4\x5a\x2d\x7c\xf2\xc9\x27\x48\xa7\xd3\x9c\xfd\xd7\xef\xf7\x79\
\x2c\x0d\xc3\x90\x41\x0c\x65\x39\x9a\xd1\x1d\x0a\x41\x92\x1b\x3b\
\x00\x0e\x19\x52\xd9\x35\x0a\x59\xd2\xd8\x46\x63\xad\x09\xb8\xa9\
\x40\x74\xbf\xdf\xe7\xfb\xcd\x9c\xf0\x9b\x24\x08\x1d\x8f\x10\x6a\
\x6c\x5d\x7a\xbb\x9a\x65\x8d\xa2\x08\x81\x1f\x20\x0c\x3a\xa8\x54\
\xaa\x68\xb7\xbb\xc8\xe7\xf3\x68\x34\x1a\x9c\xdc\x10\x27\x99\xb0\
\xe3\x76\x29\x18\xdb\xe6\xc4\x07\xfc\xe4\x4d\xfd\x7e\x4a\x3b\x75\
\x19\x21\x4e\x65\xb1\xee\x67\x3b\x67\x99\xa0\x4e\x2e\x73\xd2\x3a\
\xec\x9b\x1f\xfe\x1b\xc2\x30\x44\xa1\x50\x60\x30\x25\x84\x80\x6b\
\x8f\xdc\x6e\x85\x90\x08\x83\x10\x81\x3f\xf2\xa2\x32\x01\x02\xbd\
\xcc\xb2\x02\x26\xe8\xb1\xa5\x0d\x61\x49\x84\x71\x04\x7f\x18\x40\
\x5f\xcc\xe4\xa1\x4f\xf6\xc5\x17\x5a\x14\x4e\xb6\xff\x93\x61\x3f\
\xfa\x4c\x4a\xc1\x66\xa0\xfa\xbb\x04\x45\xcb\x68\x64\x93\x20\x14\
\x54\x1c\x21\x52\xba\xb6\xa1\x20\x22\x8c\xc2\x81\x00\x67\xc1\x2c\
\x2c\x2c\x60\x6e\x6e\x0e\x95\xca\x0c\x4a\xa5\x12\x3c\x2f\x85\x5c\
\x2e\x8f\x42\xa1\x88\x42\xbe\x80\x74\x3a\x83\x74\x3a\xc3\x62\x48\
\x21\x04\xa4\x48\x34\x5e\x86\x36\x6c\x72\x5f\x8f\x63\xb5\x9e\xb2\
\x57\x4f\xdb\xc3\x6e\x4f\x59\xac\xd3\x35\x58\x16\xf4\xe4\x4c\xf7\
\x5d\x91\xd6\x8f\x08\x1d\xea\xf3\x84\x0b\x5b\x5a\xb0\x2c\xc1\x03\
\x93\x2d\x2d\xb8\xb6\x03\xd7\xf5\xe0\x79\x29\xb4\x5a\xba\x5c\x4b\
\xfb\xb0\x81\xde\xb0\x8f\xb0\x1e\x61\x18\x06\x18\x04\x3a\x6b\xce\
\x75\x53\xc9\x60\xed\xc0\xb6\x1c\x50\xe2\x0d\x12\xbd\x8a\x52\x89\
\x39\xaa\x00\x44\xd2\xe7\x4e\xdb\x4f\x93\x45\xa2\xfe\x18\x00\x0f\
\xe0\x64\x37\x20\x85\x40\xa7\xd3\xc1\xfe\xfe\x3e\x87\xd8\xa8\x2f\
\x31\xa5\x0f\xa4\x3b\xa2\x92\x31\xd4\xdf\x56\x2a\x15\x5c\xbf\x7e\
\x1d\xef\xbd\xf7\x9e\x4e\xe6\xa9\x54\x50\xaf\xd7\x71\xef\xde\x3d\
\x04\x41\x80\xab\x57\xaf\x62\x7e\x7e\x1e\xd9\x6c\x16\x9f\x7c\xf2\
\x09\x4a\xa5\x12\x0b\xcc\xdf\x78\xe3\x0d\xdc\xb9\x73\x87\x07\xe0\
\x5e\xaf\x87\xbd\xbd\x3d\x2c\x2f\x2f\xe3\xeb\x5f\xff\x3a\xee\xde\
\xbd\x8b\x0f\x3e\xf8\x00\xbe\xef\x63\x65\x65\x05\x9e\xe7\x31\x83\
\x65\x9a\x96\x0e\x87\x43\x66\xc4\x08\x7c\x00\x1a\xcc\x50\x62\x15\
\xf5\xc3\x9d\x4e\x07\x73\x73\x73\x68\xb7\xdb\xf8\xc1\x0f\x7e\x80\
\x6a\xb5\x8a\xe1\x70\xc8\xe1\x51\xd7\x75\x91\xcb\xe5\x90\xcd\x66\
\xb1\xbc\xbc\x8c\xc5\xc5\x45\x6c\x6c\x6c\xa0\x5e\xaf\xf3\x38\x77\
\xe5\xca\x15\x00\x40\xbd\x5e\xe7\x73\x4d\x80\x44\x08\xc1\xba\x24\
\xd2\x44\x1d\x1e\x1e\x02\x00\x8a\xc5\x22\x84\x10\xa8\xd5\x6a\x28\
\x97\xcb\x88\xe3\x98\x41\x24\x31\x7f\x9e\xe7\x71\x01\xee\x76\xbb\
\xcd\xd7\x90\xea\x06\x12\x00\xa6\xa4\x03\x62\x11\x99\x70\x48\x42\
\xc1\xa6\x55\x86\x59\x7d\x84\x18\x2e\x62\xbb\x88\x15\x33\xc7\x5f\
\x0a\x5d\x9a\xf7\x54\x26\xa3\x27\x03\xa4\xb1\x32\x59\x2e\x02\xed\
\x96\x74\xd0\xed\xf6\xb9\xf0\x77\x1c\xc7\x58\x5b\x5b\x43\xbd\x5e\
\xd7\x1a\x2d\xf2\x25\x4b\x12\xcf\xe8\x51\x13\x89\xe5\xef\x93\xda\
\x1e\x06\x8b\x65\xd3\x05\x27\x6b\x85\x49\x44\xc6\xe8\xd7\x72\x60\
\x59\xce\x98\x19\xde\x24\xa8\x20\x5a\x71\x5a\xf8\x50\x08\xad\x9d\
\x12\x42\x77\x10\x76\x02\xe0\x6c\x41\x61\x3d\x39\x06\x2e\x26\x01\
\xd6\xf8\xe7\xb4\x5c\xc4\xef\x05\xa1\x9d\x24\x2d\x5a\x48\xed\x1e\
\x1f\xc7\x11\x00\x35\x56\x5f\xd0\xb2\x05\x5e\x78\xe1\x05\x94\xcb\
\x65\xcc\xce\xcc\xa3\x50\x28\x20\x9d\xce\x26\x25\x6f\x32\x28\x95\
\xca\xc8\x65\x73\xf0\xbc\x14\x5c\xf7\xff\x67\xef\xcd\x9a\x23\x47\
\xd2\x6b\xc1\xe3\xd8\x02\x01\xc4\x46\x46\x92\xcc\x64\x56\x2e\x55\
\x95\xdd\x35\x9d\xd5\xd5\xb2\x36\xb5\x46\xd3\xd3\x7d\x35\x66\xb2\
\x2b\xbd\x5e\x9b\x17\xbd\xdf\xb1\xb1\xb1\x59\xfe\xc4\xfc\x27\xe9\
\x45\x66\x32\x99\x66\x34\xa6\x17\xa9\xd5\x6d\xad\xaa\xae\xce\xae\
\x9b\x95\x95\x6b\x31\x49\x46\x30\xf6\x1d\xf0\x79\x70\x1c\x87\x03\
\x44\x90\x11\x64\x90\xc5\xac\xce\xcf\x8c\x99\xb1\x20\x1c\x0e\x07\
\xe0\x7e\x70\xbe\xef\x3b\x5f\x29\xc9\x3e\x4c\x34\xb4\x0c\x60\xe9\
\xd8\x86\x76\x98\xd1\x47\x73\xa0\x97\xc5\x82\x14\x9d\x98\xf7\xc0\
\xea\xbd\x6d\xd2\xfe\x58\xc1\x55\x91\x9d\x02\x30\x96\xca\x24\x8c\
\xe3\x14\xc0\x40\x3f\x14\x26\xf3\x84\xeb\x24\x31\xa3\xc9\xef\x84\
\x05\x91\xcc\x21\xae\xe3\x60\x3e\x9d\x01\x51\x8c\xf1\x48\xd5\x46\
\x25\xfb\x1f\xc7\x31\x6a\xb5\x86\x9a\x73\x84\x0d\x69\x19\x8b\x90\
\x71\x8f\x73\xd1\x94\xd2\x82\xb0\xd2\x98\x2b\xb3\xcf\x04\x58\x74\
\xf1\x98\x4c\x16\x03\xa2\xa5\x94\x88\x17\x91\x8e\x27\xe2\xc2\xc9\
\xdf\xd0\xed\x45\x30\xc3\x45\xd9\xb2\x2c\x8c\x46\x23\x1c\x1c\x1c\
\x60\x32\x99\x60\x77\x77\x17\x7b\x7b\x7b\x58\x2c\x16\x68\xb5\x5a\
\x18\x0e\x87\xd8\xdd\xdd\xd5\x0a\xed\xc7\xc7\xc7\x88\xe3\x18\x1f\
\x7c\xf0\x81\x2e\x0f\xf6\xec\xd9\x33\xfc\xf3\x3f\xff\x33\xc2\x30\
\x44\xbb\xdd\xce\xb8\x46\x19\x9f\xb4\xb7\xb7\x87\xbb\x77\xef\xe2\
\xf9\xf3\xe7\x68\xb5\x5a\xa8\xd5\x6a\xb0\x6d\x5b\x8b\x86\xd2\x1d\
\x47\xef\x45\x18\x86\xda\xed\x49\x77\xe5\xee\xee\x2e\xc2\x30\xc4\
\xee\xee\x2e\xda\xed\x36\xfa\xfd\x3e\xbe\xfe\xfa\x6b\xad\xcc\xee\
\xfb\x3e\xc6\xe3\xb1\x76\x9f\x12\x84\x1c\x1f\x1f\xeb\x20\x73\xc6\
\x53\x3d\x78\xf0\x00\x0f\x1e\x3c\xc0\xbd\x7b\xf7\xf0\xec\xd9\x33\
\xb4\xdb\x6d\x3d\xff\x4a\x29\x8d\xec\x76\x35\xa7\xb3\x5f\xac\xd3\
\x38\x1a\x8d\x74\x1c\x9c\xe9\xe5\x31\xa5\x25\xa4\x94\x3a\x01\x2c\
\x08\x02\x2d\xa6\x4a\x76\x6f\x30\x18\xe8\x82\xd3\xa6\x7a\x3b\xcf\
\x2d\x5d\x9a\xcc\x0e\x65\x16\x21\xe3\xb7\xc8\xd6\x01\xd0\x00\xda\
\xcc\x12\x35\x63\xd8\xd8\xb7\xd9\x6c\x86\x52\xa9\x84\x28\x9a\xa3\
\xdf\x1f\xc2\x71\x6c\x94\x4a\x4a\x52\x42\x69\x82\xf9\xda\x65\x5a\
\xa9\x54\x60\x59\x16\x8e\x8e\x8f\x10\xf8\x15\x44\x91\xc4\xb7\xdf\
\x7e\x8b\x8f\x3f\xfe\x38\xc9\xc9\x85\xd6\xa1\x04\x52\x12\xe3\x1d\
\xc6\x57\xda\x36\xc1\xb0\x69\x17\xa1\x96\x65\x38\xe3\x07\x7c\x6a\
\xca\xd3\xd7\xe6\x64\x61\x02\x09\xb3\xad\xcc\x84\xa2\x66\x11\x40\
\xa8\xd7\x16\x4c\xd0\x92\xd6\xb2\x4a\xdb\x90\xfc\xa1\x01\xb4\x90\
\xa8\x36\x4b\xa3\xb2\xbd\xc2\xce\x48\x80\x96\x92\x92\x98\x27\xbf\
\x8f\x61\xdb\x16\x4a\xbe\x8b\x5a\xb5\x8a\x92\xef\xa3\x52\x51\x01\
\xa2\xd5\x8a\x52\x63\xaf\xd5\x6a\x08\xc3\x4a\xa2\x6f\xa2\x9e\x3c\
\x5c\xcf\x83\x6d\x3b\x1a\x58\xf1\x8f\x34\x3f\xa4\xc8\x8c\xc7\x2a\
\x83\x5e\x64\xcb\x62\xb6\xde\x45\x46\xeb\x5d\xea\xeb\x1f\x83\x15\
\x01\xfe\xfc\xfb\x75\xaf\xd9\xfc\x75\x79\xca\xfd\xb6\xe4\xde\x37\
\xf6\x0c\xc6\x07\x5c\xe6\x7a\x39\xef\x77\x45\xf7\x65\xe6\x7e\x95\
\x48\xe2\x45\xd2\x45\x2d\x4e\x5c\x1e\x64\x98\x44\x32\x4f\xb9\x8e\
\x87\xb8\xa4\x9e\xcd\xe3\x38\xc2\x62\x3e\x07\x22\x89\xb9\x37\xc3\
\x74\x3a\x81\x65\x49\xc4\x52\xc9\x29\x0c\x86\x83\xa4\x2a\x84\x85\
\x52\xc9\x87\xb0\x2c\xc4\x09\x33\xa0\x3e\x57\xfb\x96\xb1\xd2\xce\
\x8a\xd5\x2a\x95\xa9\x4a\x61\x32\x15\x5c\xc0\x81\x54\x9a\x81\x35\
\xfc\xee\xdd\xbb\xa7\x15\xdc\x5d\xdb\x41\xab\xd5\x02\x0b\x32\x33\
\x0e\xc7\x5c\xb0\x7b\xbd\x1e\x18\xbf\xc3\x45\x5f\x08\xa1\xc3\x21\
\x18\xd8\xcd\x6d\xc8\x1a\x51\xcd\x9d\xc1\xf6\x8b\xc5\x42\x17\x38\
\xde\xde\xde\xc6\xe1\xe1\x21\xc6\xe3\x31\xea\xf5\xba\xee\x2f\x41\
\x43\xbf\xdf\xd7\x20\x30\x08\x02\x84\x61\x08\x21\x04\x6e\xdf\xbe\
\xad\xdd\x6a\xd4\x8d\x62\x7f\x4d\x70\x68\xca\x18\x90\x35\x32\x4b\
\xf1\x70\x6c\x18\xcb\xc4\xb5\xca\x14\xfa\x24\x10\x99\x4e\xa7\x9a\
\xd1\x99\xcd\x66\x78\xf2\xe4\x09\xde\xbe\x7d\xab\xd7\x1d\x82\x18\
\x02\x26\x00\x3a\x08\x9d\x8c\x92\x79\x7e\x98\x8d\x47\xf7\x9d\x19\
\x9f\xcc\xf8\x37\x5e\xe3\x9e\xe7\x25\xd9\xe7\x01\x06\x83\x81\xee\
\x93\xa9\xc4\xce\xf7\x66\x49\x24\xb2\x58\xfc\x9f\xdb\x31\x5c\x25\
\x7f\x0f\x71\x9d\x34\xd7\x75\xee\x83\x01\xf7\xea\x9a\x4d\x3d\x2d\
\x64\xba\x18\x02\x14\xc7\x31\x3c\xd7\xd1\x6c\xdb\x7c\x31\xc7\x4e\
\xb5\x8a\x5e\xaf\x07\xdf\xf7\x31\x68\x75\xf4\x2d\xa4\xae\xaf\x28\
\x61\xd0\x2c\x25\xa3\xb4\x81\x07\xbb\xb3\xe6\xae\x65\x9f\xad\x62\
\xab\xb8\xfd\xd6\xdd\x77\x51\x58\x0f\x3f\x73\xcc\x13\x5b\xd4\x90\
\x06\x52\x52\x64\x6e\xfc\x55\x3a\xcf\x9b\x3b\xdd\xa9\xa5\x19\x2c\
\x01\xa1\xc5\xf8\x84\x48\xdb\x4c\x0b\x87\x26\xc1\xf0\x6a\x96\x4b\
\xf0\x0d\x27\xbd\x44\x11\x4b\xa4\x13\x67\x24\x23\xc4\x8b\x44\x08\
\x35\x8a\x20\x2c\x01\xdf\xf7\x50\x2e\x07\x08\x82\x00\xf5\x46\x5d\
\xd5\xb8\x0a\x43\x6c\x6d\x35\x51\xaf\x6f\xc3\x2f\x85\xa8\x56\x6b\
\x49\xc1\xe6\xaa\x8e\xbd\xf0\xbc\x52\x22\x46\x68\x43\x65\xfe\x40\
\x8b\x95\x26\x47\x02\x29\x8b\xc7\x2c\x7f\xb1\x5f\xd4\x8a\x18\xb0\
\x65\x76\x93\x40\xcd\x4d\x60\x4d\x6e\xd2\x78\x5c\x97\xad\xfa\x44\
\x95\x7f\xbf\xce\xf9\x2a\x1a\xd7\x8b\x5c\x9f\xeb\x5c\xdb\x17\xb5\
\xf3\xe9\x7c\x3e\x9a\x19\x31\x52\xb1\xb9\x38\x08\x40\x4a\x05\xb0\
\x5c\x05\x8e\x1c\xc7\x51\x65\x76\x2c\x1b\x25\xb7\x84\x45\x34\x87\
\x65\x09\xf4\x07\x25\x58\x09\x23\x33\x1a\x8e\x30\x99\x4e\x30\x9b\
\xcf\x51\x2e\x97\xb1\xd5\xd8\x46\x10\x84\x88\xe2\x32\x20\x04\x3c\
\x4f\x40\x58\x36\x6c\x2b\x79\x48\x94\x16\x90\xe8\xf1\xe5\xc7\x84\
\x0b\x65\xbe\x36\x9d\x6d\xdb\x5a\x5c\x93\xa0\xc0\xf7\x4a\xf8\xf6\
\xdb\x6f\x31\x9d\x4e\x51\xaf\xd7\xf5\x62\xcc\xf9\x9b\xf2\x07\x26\
\x03\x16\x86\xa1\x96\x55\x70\x1c\x47\x97\xb7\x61\x32\x53\x18\x86\
\x5a\x20\xb4\xdd\x6e\xeb\xf6\x6c\xdb\xc6\xe1\xe1\x21\x66\xb3\x19\
\x6e\xdf\xbe\x0d\xdf\xf7\xf1\xea\xd5\x2b\x00\xd0\x99\x7c\xf3\xf9\
\x5c\xbb\xf8\xda\x6d\x55\xfe\xac\x5e\xaf\xeb\xc5\xbe\x52\xa9\x60\
\x7b\x7b\x1b\xaf\x5f\xbf\xd6\xc7\x65\x82\x2a\x82\x15\xb2\x33\xf3\
\xf9\x1c\x83\xc1\x00\xad\x56\x4b\x83\x19\xee\x0b\x80\x8e\xd7\x62\
\x80\x3a\x03\xc4\xc9\xdc\x90\xc5\x61\xcd\xc6\x17\x2f\x5e\xa0\xd5\
\x6a\x69\xb0\x48\x17\x2a\x33\xe4\x99\x9d\x47\x40\x65\x8e\xa5\xe9\
\xa1\xe1\x71\xd2\x75\x69\xc6\x47\x11\xe4\xb2\x6e\x24\xe3\xe4\x7a\
\xbd\x9e\x06\x7b\x26\x73\x45\xe3\x38\x98\x61\x29\xb4\x3c\xc0\x32\
\xaf\x0d\xf3\x8f\xe0\xce\x04\x8c\x9e\xe7\x25\xee\xca\x39\x1c\x27\
\x75\x0f\xb2\x2d\xc5\xd6\x4e\xb9\xfe\x20\x00\x00\x20\x00\x49\x44\
\x41\x54\xcd\x54\x26\xac\x3a\x75\xf0\x5c\x0f\xf3\xb9\x02\x78\xff\
\xf2\x2f\xff\x82\x5f\xfe\xf2\x97\x1a\x3c\xaa\xa0\x77\x3b\xb9\x4e\
\xaf\x7e\xde\xcf\x60\x09\xac\x47\x96\x5d\x94\x08\x59\x75\x6e\xcb\
\xb7\xcf\xb1\x75\x74\xd6\x9e\xd1\x8e\x48\x58\x25\x1d\x46\x26\xd3\
\x6f\xcc\xad\x4e\xed\x4c\x6b\x53\x65\x7a\xa0\xff\x4b\xd9\xa0\xb4\
\x05\x81\x44\xdb\xc5\x32\xb4\x63\x84\xe4\xcc\x97\xb0\x52\xe9\xcf\
\x24\x22\x44\x92\xa5\x72\x62\x1d\x70\x27\x2c\x15\x63\x65\x01\xf0\
\xcb\x65\x54\xab\x15\xd4\x1b\x35\x6c\x6f\x6f\xa1\xde\xa8\xa3\x5e\
\xab\xa3\xde\xa8\xc3\xf7\x4b\xa8\x06\x75\x54\xab\x5b\x28\xb9\xa1\
\x0e\x28\x54\xee\x40\x4f\xd3\xac\x80\x05\xc6\xe2\xab\xae\x48\x18\
\xd5\xce\x8c\x57\xeb\xdb\x7b\xa6\xe7\xbd\xbd\xcb\x76\x59\xd6\xf6\
\xa6\x19\xef\x44\xde\x93\x96\x04\x24\x04\xe2\x24\x0a\x5e\x15\x8e\
\x76\x21\x5c\xce\x5f\x16\x1c\xc7\x43\x14\x29\xb1\xc6\x52\xc9\x83\
\x65\xd9\xaa\xd8\xbb\xe8\x62\x38\x1c\xe2\xe4\xe4\x04\xbd\x5e\x0f\
\xb3\xd9\x0c\xdb\xdb\x4d\xa3\xbc\x89\x52\x61\xb7\x2c\x1b\xae\x9b\
\xc4\x79\x21\x06\xa2\x94\xf1\x58\x06\x0e\x99\xc5\xcc\x1a\x7f\xe6\
\x02\xcd\xb8\x24\x32\x2e\x26\x8b\xe1\x38\x8e\x2e\xee\xcc\xca\x1a\
\xfd\x7e\x1f\x9e\xe7\x61\x67\x67\x07\xbe\xef\x63\x3a\x9d\xe2\xf5\
\xeb\xd7\xa8\xd5\x6a\xba\xc4\x19\xe3\x88\x18\xa8\x0e\x28\xf7\xdd\
\x70\x38\x54\x7a\x48\x80\x0e\x20\xef\x74\x3a\x98\x4e\xa7\x3a\x78\
\x5b\x26\xac\x1d\x0b\x4a\x33\xfe\x87\x00\xe9\xd5\xab\x57\x19\x79\
\x06\x2a\xab\xfb\xbe\x8f\x7a\xbd\x8e\xd9\x6c\x86\x83\x83\x83\x8c\
\x80\x2a\x41\x16\x05\x3e\x5d\xd7\x45\x18\x86\x98\xcd\x54\x4c\x11\
\xc1\x99\xe3\x38\x3a\x9e\xa9\xc8\x5d\x3a\x1e\x8f\x75\x3f\x28\x97\
\x60\x59\x16\xca\xe5\xb2\x06\x35\xb5\x5a\x0d\x77\xee\xdc\xd1\xec\
\xdf\xc9\xc9\x09\x46\xa3\x51\x86\x19\x02\xa0\xd9\x25\x8e\x79\xd1\
\x03\x36\x41\xdf\xd1\xd1\x91\x3e\xbf\x8c\xbb\xe2\x76\xa6\x60\x68\
\xd6\x8b\x03\x0d\x94\xb8\x6e\xe4\x93\xb6\xc8\x98\x11\xd4\x99\xa5\
\x73\x08\xb0\x4c\x2f\x14\x90\xca\x27\x31\xa0\x9f\x09\x0a\x51\xa4\
\xd8\x2b\x29\x55\x36\xa4\xe3\x38\xa8\x56\xea\x18\x0e\x87\xf8\xbb\
\xbf\xfb\x3b\xfc\xcd\xdf\xfc\x0d\xee\x3f\xd8\x4f\xb2\x24\x47\xb0\
\x2c\xc0\xb6\x93\x4c\xc5\x24\x24\xc7\x04\x8b\x97\xb5\x4d\xcc\x2f\
\xdf\xe5\x7c\xe5\xc8\x08\x09\x6d\x4d\xd8\x90\xfc\x2f\xf3\x00\xc0\
\x90\x4d\x40\xf1\xd3\xac\x45\x76\x2a\x13\x2f\x75\x3a\xa6\x0a\x30\
\x5d\x80\x0a\xb8\xf0\x82\x11\x89\x0b\x11\x50\xb4\x3b\x49\x2c\x61\
\x09\x08\x4b\xa8\x32\x36\xd1\x1c\x51\xbc\x40\x1c\xa5\x55\xe2\x2b\
\xd5\x0a\x6a\xb5\x2a\xca\x65\x55\x5f\xab\xd1\x68\xa0\x56\xaf\x61\
\xab\x51\x47\xb5\x56\x43\x18\x86\x08\xc3\x10\x9e\xeb\xa1\x5c\x2a\
\xa3\x5e\xb9\x05\xd7\xf1\x92\x49\xc0\x55\x8c\x95\x6d\xf4\x31\xd1\
\xdb\x52\x47\x4c\x70\x45\xc6\xca\x02\xa4\x04\x50\x54\xb5\x3c\xb5\
\x22\xf7\xc9\xba\xae\xbf\xeb\x02\x63\xdf\x27\xd0\xf7\x2e\x1d\xcb\
\xa6\x27\x90\xab\xb4\xf3\x59\xa1\x55\xda\xd8\x54\x6f\x36\x6f\xfa\
\x8a\x11\x22\xe9\x68\x3a\x77\xd9\x42\xd5\x05\x14\x09\x90\x72\x5d\
\x4f\x2d\x26\xb6\xaa\xe3\x6a\xdb\x0e\x3c\xb7\x04\xcf\x2d\x25\x85\
\x90\xfb\x5a\x5a\x60\xb1\x58\x60\x6b\x6b\x1b\x8e\x63\xc3\x71\x2c\
\x48\xc4\xb0\x2d\x5b\xc7\x46\x21\x4a\xcb\x6c\xe9\x39\x50\x77\xe5\
\xb4\xc6\x9f\x10\x02\xbe\xef\x6b\xd9\x00\x21\x84\x2e\x32\x0c\x64\
\x19\x42\xb6\xa9\x12\x78\x4a\x38\x38\x38\xd0\xd9\x6e\x8c\x25\xba\
\x73\xe7\x0e\x6a\xb5\x1a\xb6\xb7\xb7\x75\xa2\x92\xe3\x38\x3a\xa8\
\x7b\x67\x67\x07\xcd\x66\x13\xa3\xd1\x08\xae\xeb\xea\x62\xcd\xfb\
\xfb\xfb\x98\x4c\x26\x3a\x4b\x8e\x25\x64\x2a\x95\x0a\x7c\xdf\x47\
\xa7\xa3\xca\xa1\xa5\x02\x96\x0b\x9d\xb5\x46\x51\xce\x20\x08\x74\
\xb0\x7c\x10\x04\x70\x5d\x57\x07\xbd\x53\xd6\x80\x2c\x12\xc1\x83\
\xef\xfb\x85\x80\x92\xe5\x79\x98\x0d\xcf\xf8\x26\x96\xfc\xb1\x6d\
\x1b\xb5\x5a\x4d\x67\x2b\x9a\x75\x06\xcd\x20\x71\x21\x04\xca\xe5\
\xb2\x16\x4c\xa5\xee\x16\x01\x11\x90\x96\xc1\x21\xf8\x31\xe3\xe5\
\x08\xa0\x08\x94\xa6\xd3\xa9\x8e\x7d\x63\xbf\x08\x8c\xca\xe5\xb2\
\x6e\x97\x4c\x18\x19\x3a\xba\x63\xa9\x50\x6f\xba\x2d\x4d\xe5\x76\
\xfe\xe5\x63\xf5\xf8\x1b\xea\x79\xf1\xbc\xc6\x71\xfa\x3b\x5e\x1f\
\x66\x49\x25\x09\x05\x2a\x27\xd3\x29\x82\x72\x05\xf5\x7a\x1d\xc3\
\xe1\x18\xcf\x9e\x3d\xc3\xdf\xff\xfd\xdf\xe3\xff\xfc\xbf\xfe\x37\
\x35\x56\xc9\xf1\x29\x37\xa9\xc4\xa9\x1a\x84\x97\xb4\xb3\x80\x51\
\x7a\x77\x5e\xbc\x8d\x4d\x58\x91\x27\xc0\x5c\xe3\x1d\x0a\x7e\x42\
\x26\xfa\x16\xd2\x02\x10\x27\x6c\x54\x4a\x97\x0b\x51\x0c\xae\x32\
\x31\x56\xd6\x69\x75\x75\x13\x60\xa9\x96\x92\x58\x29\x90\x99\x12\
\x49\x01\x1c\x40\x22\x86\xe7\xb9\x90\x90\x88\xe2\x08\x51\x92\xd6\
\x1a\xcb\x48\xb9\x06\x6d\x1b\x2c\x9d\xec\x97\x4a\x28\x97\x43\x5d\
\x99\x7c\x6b\x6b\x0b\x8d\xad\x06\x82\x72\x39\x89\xb3\xaa\x26\x25\
\x07\x14\x0d\x5e\xf6\x15\x53\xe5\xb8\x2e\x3c\xb7\x84\xc0\xad\xe8\
\x49\x4e\xf5\xcd\x82\xaa\x79\x08\x4d\x5b\x69\xf7\x65\x52\x63\x09\
\x42\x26\xec\xde\x69\xd7\xe0\x79\x27\xa0\x08\x58\xad\x72\xc2\xaf\
\xd2\x8d\xf2\x5d\xec\xe7\x3a\xec\x5d\x3b\x96\x77\x09\x64\x15\xed\
\xef\x5d\x66\xb4\xf4\x63\x65\xd1\x03\xa3\x44\x92\x15\x95\xd4\x2f\
\x15\x02\xc2\x4e\xe6\x2e\x08\xc4\x32\x46\x2c\xe7\xb0\x6c\x0b\x96\
\xed\xc2\xf1\x3c\xb8\xa5\x12\x5c\xcf\x83\xe3\x79\x98\x4d\x95\xc6\
\xd0\x49\xb7\x93\x94\xf8\x8a\x31\x8f\x17\xa8\x56\x2a\x70\x3d\x17\
\x65\xdb\x87\x2d\x54\x1d\x54\x2b\xb6\x32\x73\x85\x39\x77\x9a\xb1\
\x3f\x8c\xcf\xf1\x3c\x0f\x61\x18\xea\xf9\x84\x9a\x4f\x8c\x95\xa2\
\x1c\x80\x72\xfb\x4c\x71\x74\x74\x84\xbd\xbd\x3d\x34\x9b\x4d\x2d\
\x90\x19\x45\x91\x66\xdb\xee\xde\xbd\x8b\x5b\xb7\x6e\xa1\xdb\xed\
\x66\xb4\x9a\x84\x10\x19\xb7\x99\x6d\xdb\xd8\xdb\xdb\xd3\x00\x6d\
\x3c\x1e\xeb\xef\xb9\x6f\xa5\x29\xb8\x83\xd1\x68\xa4\x03\xd9\xa9\
\x4d\x05\x40\x67\xd7\x71\xf1\xa7\x24\x01\x75\xb3\x28\x73\x00\x40\
\xc7\x4b\x11\x30\xb8\xae\x8b\x5e\xaf\x87\x1f\xff\xf8\xc7\xf8\xe2\
\x8b\x2f\xb4\xd4\x42\xbd\x5e\x47\x10\x04\x9a\x25\xa3\x16\x98\x09\
\x9c\x08\xb8\xc8\x5c\x0d\x06\x03\xed\x86\x24\xd0\x22\x30\x62\x95\
\x12\xb2\x56\x64\x89\xb8\x2d\xdb\xe2\xe7\xe6\x3e\x4c\x41\x4f\x00\
\x5a\x37\x8b\x65\x85\x00\xe8\xc0\x79\x13\xd4\xf1\x58\xcd\x18\x36\
\x9e\x5f\x82\x41\x73\x5f\x9a\x71\x35\xc0\x94\xf9\x1b\x9e\x7f\x6e\
\x93\x02\x3f\x37\xe3\xe2\xe4\x75\x47\xc5\x80\x68\xa1\x8a\x43\xcb\
\x24\x46\x90\x55\x04\x5c\xd7\xc5\x3f\xfd\xd3\x3f\xe1\x7f\xff\x3f\
\xfe\x57\x00\x48\xc6\x42\x26\xc7\x24\xd3\xca\xa0\xf9\x39\x40\xbf\
\x5f\x3d\x2c\xe1\xbc\xf9\x65\x15\x17\xe1\x26\xe6\xa8\xcb\xc6\x7a\
\x39\xda\x6d\x27\x44\xf6\x7f\x9c\x7e\x8a\x32\xdf\x9f\xf7\x79\xfe\
\x7b\xc5\x0a\x25\x55\xb7\xf5\x36\x32\x89\x43\x88\x11\xc9\x18\x52\
\x46\x18\x4d\x16\xe0\xb4\x26\x65\x0c\x08\x09\xdb\xb6\xe0\x79\x8a\
\x1e\x0f\x83\x10\x7e\xc9\x47\x10\x94\xb1\xb5\xb5\x8d\x46\xa3\xa1\
\xe2\xa8\x2a\x55\x04\x61\x90\xf8\xd3\x55\xec\x55\x39\x79\xca\x2b\
\xf9\x3e\x3c\xd7\x83\xe3\xba\xb0\x2d\x5b\xb1\x55\xd2\x82\x9d\x64\
\x0c\xf1\x81\x55\x1a\x55\xbf\xd3\x62\xd7\xcc\x00\x92\xba\xcf\xe9\
\xa9\x5d\x15\x47\x5f\x8c\xbd\x5a\x77\xdb\xcb\xd8\xbb\xc4\xfa\x9c\
\x67\xef\xd2\xb1\x7c\x9f\xc0\xd5\x8a\xbf\xde\x6c\x67\x2e\x6a\x4b\
\x1e\xb8\x33\x0f\x8c\x50\xf3\x82\xae\x68\x28\x93\xb5\x42\x0a\x35\
\x6f\x00\xf0\x4b\x01\x6c\xcf\x85\xed\x94\x60\xbb\x0e\x1c\xc7\x83\
\xed\x38\xb0\x12\x77\x9c\xed\xaa\x0c\xb6\x4e\xb7\x83\xd1\x78\x84\
\xf1\x74\x02\x88\x3d\x84\x08\xe1\x95\x5c\x2c\x16\x73\xad\xeb\x67\
\xea\x1d\x99\x31\x3f\x66\xa1\x65\x2e\xbc\x64\xb0\xb8\x68\xb2\x9c\
\x0e\x65\x1b\xc8\x46\x94\x4a\x25\xcd\xb2\x0c\x87\x43\x1d\x6f\xd4\
\x68\x34\xd0\xe9\x74\xb4\xc6\xdf\xb7\xdf\x7e\xab\x17\xf1\x72\xb9\
\x8c\xad\xad\x2d\x00\xc0\x60\x30\xc0\xe1\xe1\xa1\xbe\xa7\xa4\x94\
\x78\xf8\xf0\x21\xa2\x28\xc2\xd7\x5f\x7f\x9d\x64\x9f\x29\x05\x72\
\x8a\x5d\x46\x51\x84\xdd\xdd\x5d\x15\x10\x9d\xd4\x04\x64\x49\x19\
\xca\x2f\x6c\x6d\x6d\x69\x91\x4b\xdb\xb6\x75\x8c\x17\x90\x96\x7e\
\x61\x8c\x15\xfb\xc5\x80\xf7\x4e\xa7\xa3\xc7\x89\xae\x45\x29\xa5\
\x96\x7a\xa0\x7e\x57\xfe\xe1\x5f\x08\xa1\xc1\x02\x7f\xcf\xb1\x34\
\x19\x22\x16\x72\x36\xb7\xd5\x6c\x23\xa0\x99\xa2\x38\x8e\x71\xf7\
\xee\x5d\xbd\x0f\xba\x56\xc9\x3c\x99\x5a\x92\xac\x3d\xc8\xf3\x6a\
\xb6\x65\x06\xf6\x33\xfe\x8d\xac\x13\xc7\x6b\x38\x1c\x6a\x59\x0e\
\xc6\xb6\x11\x8c\x99\xfb\xe1\xff\x66\xbc\x34\xcf\x1b\xd5\xee\x5d\
\x37\x0d\x98\x27\xfb\xa6\xf4\xb8\x92\x78\x63\xa1\x4a\x49\x05\x41\
\x19\xb6\xed\xa2\xdd\x6e\xc3\x75\x4b\x99\x6c\x4c\x93\x4c\x51\xfd\
\x89\xb1\x58\xcc\x13\xd9\x86\xcd\xcd\xbd\x4b\x41\x12\x56\x0f\xd0\
\xb9\xca\x07\xc0\x3c\x81\x92\x7f\xb8\x77\x4c\x85\x61\x5a\xd1\x00\
\x91\xcd\xc9\x37\x96\xbf\x90\xf3\xbf\x29\xe8\x12\x10\x4b\x44\x90\
\x4a\x46\x21\x01\x58\x71\xe2\x82\x9b\x45\xea\x09\xa3\xe4\x2b\x86\
\x2a\x08\x7c\x04\x61\x88\x6a\xad\x86\x4a\xa5\x82\x7a\x6d\x0b\x81\
\xaf\x40\x13\x83\x34\xfd\x92\x4a\x3f\x0e\x83\x0a\x4a\x7e\x09\x8e\
\xad\x02\xd5\xbd\x52\x09\x25\x4f\x15\x62\x55\x15\xc3\x09\x70\x8c\
\xbe\xc3\x81\x9a\x42\x25\x18\xc4\x6e\x59\xc5\xc7\x9a\x39\x06\xfd\
\xff\xd9\xa7\x79\x19\xb0\x5a\xf5\x44\xbf\x67\xb0\xd6\xb7\x77\xed\
\x58\xae\x03\x64\x6d\x6a\xd2\x3b\x93\xb6\x2f\x88\x1f\x3a\xdd\x91\
\x8d\x74\x63\x43\x96\x8b\xa4\x14\x8c\x3d\x45\x12\xfb\x99\x15\xf6\
\x4c\x37\x53\xdf\x59\x00\x6c\xd7\x82\x63\x79\x70\x93\x9a\xa4\xb6\
\x95\x66\x9b\x71\x41\x2b\x95\x4a\x68\xb5\x5a\x18\x8f\x47\x68\xb7\
\x01\xd7\xb5\x31\x9b\x4f\x20\x2c\x89\xb2\x57\x46\xd9\x53\xf2\x36\
\x66\x06\x1c\x01\x12\x19\x18\x53\xf8\xd4\x5c\x14\xb9\x40\x73\xb1\
\x2c\x97\xcb\x7a\x31\xa7\x0b\x8a\x99\x7b\xf3\xf9\x1c\xbd\x5e\x0f\
\x71\x1c\xc3\xf7\x7d\xfc\xe0\x07\x3f\x80\x6d\xdb\x38\x3e\x3e\xc6\
\xe1\xe1\x21\xb6\xb6\xb6\xd0\xed\x76\xb5\xf0\xa8\xe9\x5e\x13\x42\
\xe8\x38\xa8\xd7\xaf\x5f\x63\x7f\x7f\x1f\xcd\x66\x13\xaf\x5f\xbf\
\x86\xef\xfb\xa8\xd5\x6a\x78\xfd\xfa\xb5\x76\x6f\x0d\x06\x03\xcd\
\x28\xcd\xe7\x73\x0d\x84\xc2\x30\xc4\xab\x57\xaf\x34\x10\x9a\x4c\
\x26\x5a\xa9\x9d\xa0\x42\x9f\x9d\x64\xbe\x64\x6c\x92\x10\x22\x01\
\x08\x2e\xde\xbc\x79\xa3\x33\x07\x09\x84\x4c\x00\xda\x68\x34\x50\
\x2e\x97\x75\xf9\x1d\x29\xa5\x16\x91\xe5\x58\x98\x1a\x51\xfc\x2d\
\xdd\x7a\xa6\xa2\x3b\x80\x8c\xb4\x05\xc1\x99\x65\x59\xd8\xd9\xd9\
\xd1\x40\x71\x36\x9b\x69\x65\x7c\x02\x5f\x9e\x33\x66\x6c\x12\x60\
\x51\x4a\x82\xee\x3f\xb2\x5f\xdc\x3f\xd9\x2f\x53\x24\x94\xc7\x6e\
\x8a\x8d\x92\xed\x32\xaf\x53\x53\x3b\xcb\xd4\xdc\x22\x0b\xe9\x38\
\x66\x8c\x54\xba\xbe\x91\xc1\x82\x63\x21\x8e\x54\xbc\x5d\x1c\x03\
\xe3\x51\x1f\x42\xd8\x98\xcf\xa7\x5a\x03\x2c\x95\x18\x91\x70\x5d\
\x3b\xdd\x7f\x51\x16\xe1\x25\x19\xac\xfc\x7b\xde\xa3\xeb\x30\x58\
\x45\x6d\xac\x62\xeb\x6e\x67\xce\xb3\x52\x4a\x32\x58\xd0\x6e\xaf\
\x65\xee\x3f\x21\xf8\x57\x1c\x1f\xb0\x4a\x07\x14\x11\xa4\xe4\x15\
\xa2\x44\x35\x56\x26\xec\x10\xa5\x18\x54\xd6\x88\x83\x20\xf0\x51\
\xab\xd7\x50\xab\x29\xfa\xb7\xbe\xd5\x40\xb5\x56\x47\xad\xd2\x80\
\xef\x95\xe1\xba\x6a\xe2\xf2\x3c\x35\xb9\xf9\xbe\x8f\xb0\x52\x4b\
\x82\x2c\x1d\x38\x8e\x9b\x04\x3c\xaa\xf8\x2a\xf3\x02\x94\x51\x0c\
\xe8\x8b\xcc\x64\xeb\xa4\x9e\x3c\x91\x68\x7b\x24\x5e\x4c\xfd\x7d\
\xf6\xff\xf5\xed\x5d\x62\x57\xde\xdb\x7b\x5b\xd5\xde\x25\x40\xab\
\xcc\xe8\x2f\x99\x6b\xe3\xb6\x54\x20\x2b\x99\x07\x10\xab\x09\x5d\
\xdf\xbb\x02\x14\x82\x17\x42\x26\xb1\x9b\xaa\xac\x8e\x62\x6a\xca\
\x08\xe6\x53\xad\x41\x14\x45\x0b\x4c\x26\x63\xcc\xe7\x53\xcc\xe7\
\x33\x0c\x87\x03\x40\xc4\xf0\xfd\x12\x1c\x61\xc3\x77\xb3\xe0\x8d\
\x0b\xb3\xe9\xde\xc9\xab\x78\x73\x5b\x02\x30\x00\x1a\x20\x98\xee\
\x23\xd6\xf2\x1b\x0e\x87\xfa\x6f\x3c\x1e\x63\x7b\x7b\x1b\xf7\xee\
\xdd\xc3\x68\x34\xc2\x37\xdf\x7c\xa3\xc1\xc7\x9b\x37\x6f\x00\x40\
\xcb\x08\x10\xa4\x11\x00\x09\x21\x70\x78\x78\x88\x7a\xbd\xae\x03\
\xe7\x59\xb6\x85\x99\x7d\x41\x10\x68\x96\x83\xcc\x95\xeb\xba\x5a\
\xf8\xf3\xd9\xb3\x67\x18\x0e\x87\x99\xb8\x26\x32\x74\x3c\x4e\x93\
\x85\xa1\xb6\x94\xb9\x2d\xdd\x92\x04\x54\x2c\xf2\x2c\xa5\xd4\x85\
\x8c\xc3\x30\x44\xb7\xdb\xd5\x40\xc0\xb2\x2c\xd4\x6a\x35\xd0\xa5\
\xca\xb1\x9e\x4c\x26\xba\x1d\x02\x07\x02\x2c\xb3\xb2\x08\x19\x33\
\x93\xc1\x21\xc8\x21\xb8\xa2\x1b\xd4\x8c\x83\x22\xc8\x32\x05\x60\
\xf9\x9a\x0a\xec\x1c\x2b\x33\x40\x9d\x63\x40\x60\x44\xa0\x44\x45\
\x78\xb2\x50\xe6\x03\x80\xf9\x00\xcf\x63\x66\x5b\x26\xcb\x95\x82\
\xba\xec\x03\xbf\xe3\x38\x80\xb4\x30\x8f\x79\x9d\x09\x7d\xfd\x8d\
\xc7\x8b\x44\x47\x2b\x8d\x45\xcb\xc7\x20\x5d\xc5\xda\xb6\x09\x06\
\xea\x2a\xe7\xa7\xb3\xd6\x74\xa7\x88\xa1\x39\xed\xfa\x83\xe2\xd3\
\x45\x9c\x3c\xd9\x29\xfc\xa8\xdc\x6b\x31\x54\xe1\x65\xaa\xb3\xc7\
\xc9\xff\xa7\x0f\x28\x5a\xcc\xb1\x48\x7c\xbe\x3c\xf9\x6e\x72\x73\
\xfa\x81\xca\xe0\xb8\x77\xef\x1e\x1c\xcf\x41\x18\x56\x10\x86\x4a\
\xcc\xce\xf7\x7d\xf8\xe5\x32\xfc\xb2\x0f\xc7\x76\x81\xa4\x56\x12\
\xe9\x6d\xc7\xf6\xb4\x6f\x99\xd9\x14\x80\x80\x8c\x80\x45\xbc\x40\
\x24\x62\x58\xc2\x52\xba\x56\x96\x05\xcb\x01\x90\x08\x90\x66\x2d\
\x45\xf6\xa9\x3b\x50\x24\xff\x99\x6c\xd5\x3a\x04\xe5\xd5\x5e\x7c\
\xef\xed\xbd\x7d\xd7\xf6\xae\x81\x2b\x7d\x17\x1b\xb7\xb3\xc6\x58\
\xc2\x94\x49\x50\xe1\x00\xe6\x23\x18\x59\x2d\x21\x2c\x58\x52\x60\
\x32\x1b\xc3\x73\x3c\x78\xb6\x03\xe9\x07\xb0\x2c\x47\xb3\x0c\x2a\
\x00\x5b\x68\xb7\x5b\x18\x56\xf0\xf6\xed\x5b\x1c\x1e\x1e\xc3\x3a\
\x16\x88\x16\x12\xf6\xdd\x12\x42\x3f\x86\x90\x12\x96\xe5\xc0\xb2\
\xa0\x17\x3e\x32\xe9\x42\x00\xb6\x6d\xc1\x75\x1d\xc5\xf6\xc7\x2c\
\xad\xb3\x40\x34\x5f\xc0\xb5\x1d\xcd\x1a\x51\xe2\x80\x81\xde\x64\
\x73\x82\x20\xd0\x60\xc1\x75\x95\xdb\xe7\x6f\xff\xf6\x6f\x71\xef\
\xde\x3d\xdc\xb9\x73\x07\xc7\xc7\xc7\x9a\x09\x1a\x0e\x87\x78\xfe\
\xfc\x79\x22\xc0\x5c\xd6\xbf\xa1\xae\xd5\xfe\xfe\x3e\x84\x10\xe8\
\x74\x3a\x08\xc3\x10\x00\xd0\xed\x76\xb1\xbb\xbb\x8b\xd9\x6c\xa6\
\x83\xdc\x4f\x4e\x4e\xf4\xa2\xde\xe9\x28\xed\xa4\xad\xad\x2d\x1d\
\x47\x65\x02\x00\x02\x34\x02\x27\x82\x8d\x3b\x77\xee\x68\x20\x78\
\x72\x72\x82\xe9\x74\xaa\xd9\xb4\x5b\xb7\x6e\xe9\xb2\x38\xcc\x72\
\xa4\x5b\x74\x34\x1a\xe9\xb2\x39\x2c\x67\xf3\xe9\xa7\x9f\xe2\xa3\
\x8f\x3e\xc2\xd1\xd1\x11\x3e\xff\xfc\x73\x7c\xfb\xed\xb7\x68\x36\
\x9b\xda\x25\xc7\x0c\xc8\xd1\x68\xa4\xd9\x37\x32\x44\x66\x56\x22\
\x99\xaf\xc5\x62\x81\x5f\xff\xfa\xd7\x7a\x3d\x63\x6c\x17\xb3\x18\
\x59\x5e\x07\x48\x2b\x87\x70\xac\xd8\x57\x82\x4f\x32\x5a\xa6\x9b\
\x90\xeb\x30\x19\xcc\x38\x8e\xb5\xa0\x2d\x17\x75\xca\x58\x90\xe9\
\xca\xc7\x41\x9b\xba\x5f\xf9\xb8\x2d\xf6\x8b\x81\xf4\xa5\x92\x72\
\xcd\x4e\xa7\x33\x8c\xc6\x03\xf4\x07\x7d\xf8\xa5\x32\x82\xa0\x82\
\x4a\x25\xc0\x60\xd0\xc3\x68\x30\x46\xbf\x3b\x82\x94\x80\x6b\x7b\
\x98\xcd\x46\x98\x4d\x27\x88\xe4\x02\xb6\x6d\xc1\xb2\xec\x54\xbe\
\x48\xe6\xb3\x09\x57\x8f\x5d\x2e\xb2\x4d\xcd\x33\x9b\x9c\xaf\xce\
\x6a\x4b\x4a\x09\x87\xfa\x2b\x7c\xfa\x31\x91\x32\x37\x12\x00\x84\
\x15\x43\x38\xb1\x2e\x37\x83\x24\x10\x5d\xca\x08\x80\x05\x01\x89\
\x28\x52\x65\x27\xe2\x58\x09\xf2\x99\x1a\x1f\xb6\x6d\x23\x2c\x97\
\xb1\x7d\x6b\x1b\xb6\x6d\x21\x0c\xab\xa8\x54\x2a\xa8\x56\xea\xa8\
\x54\x94\xd0\x67\xc9\x53\x60\xca\xb2\x1d\x78\x9e\x0f\xdf\x0f\x50\
\x2e\x87\x3a\x28\x52\x3d\x05\x05\x28\x97\x7d\x08\x2b\x5b\xcc\x52\
\x98\xc0\xcf\x12\x49\x41\x68\x2b\xb7\x8d\x04\x90\xa0\x6f\xa1\x5c\
\x92\x12\x91\x0a\x9c\x17\x79\x60\xa9\xa6\xd5\x1c\xbb\x99\xb8\x15\
\xf9\xf4\x72\x36\x51\xb9\x8c\xe1\x33\xdf\xe7\x95\x9b\xf3\xdf\x6f\
\xca\x8a\x5c\xc0\xeb\xee\xe7\x3a\xdc\x50\x57\xe1\xca\xba\xe8\x7e\
\xae\xcb\xed\x76\xd9\x7e\xac\x62\x45\x9a\x6d\x79\xcb\xd3\xdb\x45\
\xfb\x2e\xea\x4b\xfe\x7a\x5e\xf6\x54\xab\xee\x9d\x5c\x0d\xb1\xf3\
\x48\x61\xb9\xe4\xf5\x79\x6d\xe4\xb7\x2d\xda\x86\xcf\x4e\x96\xd4\
\x25\x3e\xa4\x94\x1a\x4d\x91\xd5\xb7\x74\x11\x10\x55\x82\x4b\x00\
\x88\x13\x77\x48\xe0\x97\x11\xc5\x31\xe6\x89\x2b\xc9\xb5\x5c\xd8\
\x9e\xd0\x81\xc4\x9e\xe7\xa3\x53\xea\xa0\xd7\xef\x21\x8a\x6d\x48\
\xb8\xe8\x76\x3b\x98\xcd\xa6\x68\x9f\x0c\x30\x9d\x3c\x87\xf3\x91\
\x83\x4a\x25\x40\x10\xb8\x90\x88\x11\x8b\x18\xc2\x11\xb0\x5d\x0b\
\x62\x2e\x51\xf6\x3d\x94\x5c\x07\x8b\xf9\x14\x96\x00\x5c\xcf\xc1\
\x7c\x3a\xc1\x74\x32\x42\x35\x08\x21\x84\x44\xbb\xdd\x86\xe7\xa9\
\xac\x68\x96\xc0\x89\xe3\x18\x87\x87\x87\x38\x39\x39\xc1\xf6\xf6\
\x36\xb6\xb7\xb7\x21\x84\xd0\xa5\x61\xee\xdd\xbb\x87\x30\x0c\xd1\
\xe9\x74\x50\xad\x56\x11\xc7\xb1\x56\xf0\xbe\x73\xe7\x0e\x1a\x8d\
\x86\x96\x4a\x08\xc3\x50\xc7\x1e\x31\x23\xb1\xdb\xed\xc2\x75\x5d\
\x0d\x46\x3e\xfb\xec\x33\x3c\x79\xf2\x04\xff\xf1\x1f\xff\x01\x20\
\x2d\x8e\xcc\xac\xc5\xc9\x64\x82\x83\x83\x03\xec\xef\xef\xe3\xd5\
\xab\x57\x1a\x20\x00\xc0\x87\x1f\x7e\x88\x83\x83\x03\xcd\x2c\x6d\
\x6d\x6d\xc1\xf3\x3c\xb4\x5a\x2d\x74\x3a\x1d\x0c\x06\x03\x0c\x06\
\x03\x34\x1a\x0d\x8c\xc7\x63\x4c\xa7\x53\x44\x51\x84\x7a\xbd\x0e\
\xdb\xb6\x75\x41\xe6\x54\xcf\x69\x9a\x61\xad\xca\xe5\x32\x8e\x8e\
\x8e\xf0\xe4\xc9\x13\xcd\x6a\x35\x1a\x0d\x5d\x13\x91\xa2\x9d\x6c\
\x77\x3a\x9d\xea\x64\x01\x82\x36\x20\x8d\xdd\xa2\xcb\xcd\x04\x61\
\x26\x5b\x65\xba\x01\x7f\xf6\xb3\x9f\xa1\xdf\xef\xa3\xdd\x6e\xa3\
\xd3\xe9\x40\x4a\x99\x29\x76\x0d\xa4\x82\xa6\xdc\x47\x9a\x7c\x95\
\x82\x7e\x53\x85\xdf\x5c\xaf\x4d\x97\xb2\xef\xfb\x7a\xbf\x3c\x1e\
\xc6\x84\x71\xac\x67\xb3\x2c\xfb\x45\x66\x8e\x6e\x6d\x55\x9f\x32\
\xc4\x70\x38\x56\x15\x51\xe4\x14\xb3\xb9\xc0\xc3\x07\xf7\x30\xea\
\x8f\xf1\xfb\xff\x78\x8a\x7b\xf7\xef\x22\xa8\x86\x98\xcf\xc6\xb0\
\x0d\x97\xa1\xea\x87\x03\x29\x01\x09\xcb\x98\x0b\x22\x40\x24\xfb\
\xb3\xdc\x25\x37\x72\x6a\xe7\x69\x4c\xea\x7b\x35\xf7\x7a\xa5\xb9\
\xb2\x60\x9e\x5b\xbb\x0d\xfe\x06\x86\x77\x0e\xd0\x4c\xb7\x94\x12\
\xb1\x94\x70\x6c\x47\x5d\x14\x25\x3f\x15\x43\x33\x29\x47\x85\x94\
\x81\x48\xce\x11\x61\x8e\x45\x32\x88\x66\x70\x9d\x29\xa2\xc6\x82\
\x92\x8e\xa3\xea\x37\x95\xcb\xe5\x24\x8b\xcf\xc7\x56\xbd\x81\x46\
\xad\x0e\x3b\xb9\x60\x7d\x5f\xc5\x4f\xf9\x7e\x00\xdf\x2f\xc3\x75\
\x4a\xa8\x54\x1a\xb0\x84\x0d\xc7\x71\xe1\x79\x3e\x4a\x9e\xaa\x50\
\xef\xba\x5e\x82\x90\x63\xa8\x2c\xc7\x48\x67\xf3\x68\xd9\x2c\xa4\
\x93\x78\x4a\xed\x27\x82\xa6\xc9\x6b\x9e\xa8\x58\x67\x02\xc6\xe0\
\x53\xe6\x19\x67\x04\xc8\x0c\xe1\x19\x03\x2e\xb3\x71\x56\x45\xc0\
\x26\xff\xfa\xac\x36\xae\xd2\xde\xbb\x2b\xdf\x5b\x91\xbd\x6b\x8c\
\xd4\x85\x4c\x18\x98\xeb\xbc\x80\x0e\x32\x59\x6a\xf6\x4c\x26\x54\
\x55\x30\x24\x8a\x63\x1d\x63\x62\x41\x40\x5a\x02\x80\x03\x27\x61\
\xba\x82\xa0\x02\x40\xb1\xeb\x96\xe5\xc2\x12\x0e\x04\x6c\x0d\x12\
\x66\xb3\x05\x5a\xed\x36\xa4\x8c\x34\x03\x42\xe6\x8c\x7f\x96\x25\
\xe0\xb8\x36\x6c\x3b\x65\x1d\x4a\x9e\x83\x92\xeb\x29\xd9\x07\x23\
\x53\x8e\xd9\x7d\x8e\xe3\xa0\x5e\xaf\x6b\xb5\x73\x21\x84\x16\xfb\
\xac\x54\x2a\x28\x95\x4a\x3a\xbb\x6d\x7b\x7b\x5b\xd7\xf0\xfb\xab\
\xbf\xfa\x2b\x74\x3a\x1d\x7c\xf3\xcd\x37\xba\x80\x33\xe5\x1c\x1e\
\x3d\x7a\x84\x30\x0c\xf1\x6f\xff\xf6\x6f\xe8\xf7\xfb\xa8\x54\x2a\
\x88\xe3\x18\x07\x07\x07\x70\x5d\x17\xbb\xbb\xbb\x18\x8d\x46\xba\
\x38\xb2\x19\xd4\x4e\xf6\xab\xd9\x6c\x42\x08\xe5\x81\x50\xe3\x13\
\x68\x50\x40\x61\x53\x4a\x17\x9c\x9c\x9c\x9c\x72\x8b\x96\xcb\x65\
\x0c\x87\xc3\xa4\xa6\xde\x02\xbd\x5e\x0f\x00\x34\x31\x40\xe1\x55\
\x00\xba\xdd\xc9\x64\x82\x7e\xbf\x9f\xa9\x71\x48\x10\x44\x45\x79\
\x16\x69\x66\x36\x24\xeb\x36\xd2\x7d\x48\x17\xea\x60\x30\xd0\xba\
\x5e\xf7\xee\xdd\x43\xb7\xdb\xd5\xee\x4b\xba\x16\xf3\xea\xf3\xcf\
\x9f\x3f\xd7\xc5\xab\x99\xb5\x47\x90\xc6\x75\xd4\x14\x55\x35\xbf\
\xe3\x9f\x19\x1f\xa6\x2f\x4b\x91\x06\xb0\x9b\xb1\x5b\x0c\xf2\xe7\
\x7b\x8e\x0b\xa5\x31\x38\x56\xdc\x0f\xfb\x69\xd6\x51\x64\xd6\xe7\
\x74\x3a\xc1\x62\x31\x83\x6d\x0b\xb8\x35\x1b\xff\xf1\xdb\x2f\xf1\
\x9b\x7f\xff\x2d\x2c\xcb\xc2\x47\x1f\x7f\x00\x19\x49\x08\x3b\x49\
\x80\x10\x46\x9d\x4d\x69\x72\xbf\xea\xfa\x93\x50\xd8\x66\xd3\xf3\
\xcb\x26\xda\xbb\x2a\x76\x2c\x01\xb5\x12\x71\x3c\x43\x9c\xd4\x16\
\x62\xc0\x9f\x06\x08\x02\x88\xa4\x92\x4b\xb0\x2c\x33\xdb\xc5\x81\
\x57\x4a\x33\x1b\x76\x77\x77\xb5\x38\x1d\xd3\x88\x19\x88\x5e\x2e\
\x97\xe1\x39\x2e\x5c\xc7\x81\x9d\xf8\x9b\x4b\x5e\x39\x11\xce\x2b\
\xc3\xf3\x4a\x70\x9d\x12\x3c\x2f\x80\x10\x56\x12\x2c\xea\x2a\xf1\
\x3e\xcb\x4e\x32\x6d\x80\x18\xf3\x04\xdd\x9e\xae\x55\x98\x67\x8c\
\xce\x8b\x0f\x3b\x8b\x59\xba\xc8\xc0\x9a\xc0\xca\x64\x01\xcf\xda\
\x66\x9d\xef\x37\x65\xd7\xb5\x9f\xf7\xf6\xee\xd9\x26\xe2\x1d\x78\
\xed\xaf\xfa\x40\xf1\x2e\x9a\x3e\x1e\x99\x7d\x2f\x58\xd6\x2b\x4e\
\x16\xbe\xa4\xbe\x1b\x95\xc2\x83\x84\x8d\xa7\x3c\xc2\x64\x3c\x44\
\xbb\xdd\x86\x25\x04\x5c\xb7\x94\xb8\x09\x1d\x38\x8e\x05\xcf\x95\
\x88\xdc\x18\xae\xe7\xa3\xe4\x07\x70\xdd\x12\x16\xf3\x05\x04\x6c\
\xd8\x8e\x07\xdb\xf1\xe0\xba\x0a\x40\x98\x01\xd8\x04\x54\xac\xdd\
\x47\x3d\xa7\xb7\x6f\xdf\x6a\x96\xea\x67\x3f\xfb\x19\x4e\x4e\x4e\
\xf0\xbb\xdf\xfd\x4e\x67\xf2\xb9\xae\x8b\xcf\x3f\xff\x5c\xbb\xa4\
\x6a\xb5\x1a\x16\x8b\x05\x26\x93\x09\xbe\xfd\xf6\x5b\x2d\xd1\x40\
\x17\x95\xa9\xdf\x34\x9f\xcf\xf1\xf9\xe7\x9f\xa3\x54\x2a\x61\x77\
\x77\x57\x1d\xdb\x64\x82\x30\x0c\xc1\xba\x83\x40\x9a\xf9\x16\x86\
\xa1\x4e\x02\x60\xff\x08\xa4\x7a\xbd\x9e\x06\x0a\x9e\xe7\xe1\xe1\
\xc3\x87\xf8\xf0\xc3\x0f\x31\x18\x0c\xf0\xe5\x97\x5f\x62\x6f\x6f\
\x4f\x07\xeb\x0b\x21\xf4\xfa\xc3\xf5\x8a\x6e\x36\x53\x53\x8c\xcc\
\x0f\xe3\x99\xc8\x8e\x55\xab\x55\xcd\x46\xb9\xae\x8b\x7b\xf7\xee\
\xe1\xf6\xed\xdb\x10\x42\xe0\xf5\xeb\xd7\xba\x0f\x52\x4a\x0d\xa6\
\xc2\x30\xd4\xe7\x90\x00\x28\x1b\xd7\x94\x06\xac\x0b\x21\xf0\xe6\
\xcd\x9b\x0c\x43\x65\x16\xdd\xa6\xc2\x3a\x81\x8f\x29\x8c\x6a\x92\
\x1c\x66\x4c\x57\x3e\x38\x3f\x8e\x63\x0d\xcc\xa8\x9f\xc5\xef\xf9\
\x9b\xbc\xf8\xaa\x29\x06\xaa\x19\x97\x9c\x3b\x34\xbf\x5f\x00\x98\
\x44\x13\xbc\x78\xf1\x02\x8f\x7f\xfc\x03\x94\xcb\x1e\x86\x63\x81\
\x58\x4a\x40\x8f\x03\x09\xa2\xb4\xf0\x33\x6f\x15\x7d\x2e\xa2\xcb\
\xb9\x0a\x4d\xdb\x74\x7c\xd6\xa6\xc0\x9a\x8e\x69\x1b\x4f\x94\x22\
\xaf\x99\x16\x0c\xa8\xf8\x4e\x2b\x01\x51\x8e\xe3\xa0\x54\xf6\x51\
\x0e\x02\x9d\x2a\x4a\x91\x38\x66\x86\xf0\x09\x84\xfe\x64\x32\x59\
\xcc\x7c\x70\x5d\x17\xae\x65\xc3\xb5\x1d\x9d\x86\xeb\xba\xa5\x04\
\xb5\xab\x40\x75\xc7\xf1\x92\x2e\x0a\x08\x50\xca\x5f\xb9\x1d\x23\
\x4a\x3c\x88\x54\x95\xf6\x2c\x50\x55\xf4\xbe\x68\xc2\xbf\x0c\xc8\
\x2a\x0a\x2c\x2c\x7a\x7d\xd6\x42\x63\xa6\xd3\x16\xb5\xb1\x69\xbb\
\xae\xfd\x7c\xd7\x76\x93\x9e\x6a\x6e\xca\x7e\xce\xb3\x65\x13\xcd\
\x3a\xfd\x2b\x7a\xb0\x30\xbf\x7b\x57\xad\x08\x34\x72\x01\xca\x30\
\xd5\x56\x36\xbc\x42\xca\x38\xc3\x88\x78\x89\x4e\x16\x6b\xf0\xf5\
\x7b\x1d\x74\x5a\x6d\x8c\xc7\x63\x0d\x74\x18\x3c\x2e\x7c\x20\xca\
\x04\x8e\xbb\x98\x4e\xa6\x1a\x10\x90\x59\x61\x90\xb5\x94\x52\x07\
\x60\xcf\xe7\x73\x74\xbb\x5d\x94\x4a\x25\x1d\xe4\x4e\xb5\xf5\xa3\
\xa3\x23\xb4\x5a\x2d\x6c\x6d\x6d\x69\x99\x81\xf1\x78\x8c\x6f\xbe\
\xf9\x06\x5f\x7d\xf5\x15\x2a\x95\x0a\x6a\xb5\x9a\x0e\xf4\x0e\xc3\
\x10\x93\xc9\x04\xcf\x9f\x3f\xc7\xcb\x97\x2f\x51\xad\x56\x75\x4d\
\x3d\xaa\xb1\x1f\x1f\x1f\xa3\xd3\xe9\xe8\xf8\x2b\x1e\xff\xd6\xd6\
\x96\x2e\x0a\x3d\x9b\xcd\x70\xff\xfe\x7d\x9c\x9c\x9c\xe8\x40\x75\
\x32\x79\x04\x58\x54\x65\x6f\x36\x9b\xd8\xde\xde\x46\xab\xd5\xc2\
\x60\x30\xc0\x4f\x7f\xfa\x53\x7c\xfc\xf1\xc7\x78\xfa\xf4\x29\x0e\
\x0e\x0e\x50\xad\x56\xe1\x79\x1e\x9a\xcd\x26\xca\xe5\x32\x3a\x9d\
\x4e\x46\xc0\x94\x8c\xcc\x68\x34\x42\xa5\x52\xd1\xc5\xa9\x59\xaf\
\x91\x6e\x31\xb2\x57\x52\x4a\x54\x2a\x15\x34\x1a\x0d\x38\x8e\x83\
\xb7\x6f\xdf\xe2\xe8\xe8\x48\xcb\x50\x98\x1a\x64\x74\x97\x52\xe3\
\x4b\x4a\x79\x4a\x85\x9d\xeb\x29\xaf\x0f\x9a\x99\xb0\xc0\xeb\xa9\
\x52\xa9\x68\x81\xd4\xe9\x74\x9a\x09\xde\x37\xc5\x4c\xb9\x6e\x12\
\x24\x99\xd7\xa5\x09\xf0\x80\x54\x08\x95\xee\x4d\x82\x32\x73\xff\
\xec\x67\x3e\x68\x9e\x6c\x26\xc7\x84\x00\x70\x36\x9b\xa1\x1e\xd4\
\x95\x36\x98\x9c\xc3\x72\x12\x86\x4c\x2e\x60\x39\x69\xe8\x90\xbe\
\xfe\x71\xf1\x87\xac\x55\xe6\x9c\x4d\xcc\x57\x9b\x68\xe3\xac\xdf\
\x3a\x76\xa2\x5e\x5e\xa9\xd4\x34\x28\x22\x0b\x45\xff\xba\xef\xfb\
\x70\x3d\xf5\xe7\xfb\xbe\x9e\x2c\xb8\x2d\x9f\x42\x78\x01\x94\x4a\
\x25\xfd\x14\xc4\x3f\xcb\xb2\x50\x2e\xf9\x28\x27\xfe\x61\x35\xd8\
\xc9\xc5\x11\xa7\xac\x98\xba\x40\x54\x56\x8e\x80\x59\x68\x59\x31\
\xf1\x96\x95\x14\x4c\x45\x2e\xb6\xe3\x1c\x80\x75\x96\xad\xb2\xcd\
\x79\x83\x7b\x1e\x33\xc5\xfd\xe4\x41\xd9\xaa\x6d\x6c\xca\xde\xb3\
\x57\xef\xed\x3c\xbb\xec\x13\x5d\x1e\xb8\x5f\xf6\xfe\xba\x69\x66\
\x1e\x8b\x6d\xa5\xee\x1c\x5a\x2c\xd3\x8c\x65\x21\x01\x1b\x02\xb0\
\x6c\xc0\x01\x02\x4b\xe9\xef\x55\x12\x66\x27\x28\x97\x20\x17\x2a\
\x96\x75\x30\x1c\x26\x45\xa2\x93\x39\xd5\x71\x60\xb9\x0e\xdc\x92\
\x97\x3c\xc4\x7a\xe8\x76\xd2\x85\x73\x34\x1a\x41\x58\x16\x20\x84\
\x0e\x12\xa7\x4b\x48\x4a\x89\xe1\x70\xa8\xe3\x9a\x1a\x8d\x06\x3e\
\xfb\xec\x33\xb4\x5a\x2d\xb4\xdb\x6d\x74\xbb\x5d\x6c\x6d\x6d\xc1\
\xb2\x54\x01\x60\x02\x81\xfb\xf7\xef\xa3\x52\xa9\x68\x49\x07\x4a\
\x30\xb0\x74\x0e\x95\xd0\xbb\xdd\x2e\x6a\xb5\x1a\xee\xdf\xbf\x8f\
\xd7\xaf\x5f\x03\x00\x1e\x3f\x7e\x8c\xc9\x64\x82\xd1\x68\x84\x72\
\xb9\x0c\x29\xa5\xca\xee\x4e\x3c\x19\xa6\x70\x29\xb3\xd1\xe8\x7e\
\x34\xb5\xaf\xa4\x94\xba\xf0\x34\x75\xaf\x9e\x3c\x79\x62\xc8\x0c\
\x38\xba\xb0\x34\x5d\x5f\x8c\x99\x62\x60\x39\xe3\x8d\xa8\x08\x0f\
\xa4\x4a\xe9\x64\x93\x08\x48\xa9\x1d\x36\x9b\xcd\xf0\x87\x3f\xfc\
\x21\xa3\x9e\x4e\x60\x41\x42\x61\x34\x1a\xe9\x80\x7d\xba\x39\xcd\
\x35\x87\x60\x25\x25\x11\x94\x32\x3d\xe3\xb9\x38\x06\x5c\xeb\xd8\
\x4f\xee\x93\xdb\x99\x5a\x5b\x04\x3b\x4c\x00\x30\x55\xdc\xcd\x7b\
\x8b\xe7\xde\x64\xc7\xcc\x0c\x4a\x82\x3a\xb3\x44\x8f\xf9\x30\x60\
\x02\x34\x20\xad\x77\x48\x46\x8d\xa0\xad\xdd\x6e\x63\xd8\x1f\x63\
\x3e\x8b\x30\x9f\x2f\xe0\x95\x12\x17\xad\x54\x45\xcb\x75\x5d\x42\
\xed\x0e\x94\x86\x6b\x70\xbd\x04\xb1\x55\xec\xa6\xb0\x58\xe6\x58\
\xd2\x9c\x3f\xf9\x93\x3f\x81\xed\x08\xd4\xaa\x0d\xb8\x9e\xad\xdc\
\x76\xbe\x0b\xbf\x14\xc0\x71\x55\x59\x82\x92\xe7\x23\x96\x16\x24\
\x54\x85\x78\x95\x6d\xa1\xea\x71\xa9\x3a\x44\x2a\xfb\x25\x0c\xab\
\xca\x57\xeb\x96\x32\xae\x44\xcb\xb2\x60\x0b\x3b\x8d\x95\x32\x2e\
\x8a\x58\xc6\xaa\x8e\xa0\xb0\x33\x17\x4c\x11\xeb\x04\xaa\xbf\x2b\
\x5d\xe5\xa5\x0c\x51\x1e\x60\xe5\xb7\x29\x7a\x5f\xb4\xed\x79\x03\
\xbd\x0c\xac\x64\x9f\x60\x4f\x83\x98\x65\xef\xdf\xb3\x57\x9b\xb3\
\xef\x13\x83\x75\x5d\xe0\xa4\xc8\xa5\x6d\xbe\x5e\xb7\x1f\xdf\x27\
\x50\x05\x14\x03\x47\x18\xcc\x56\xd1\x79\xd4\x73\x91\x10\x90\x42\
\xbd\x27\xa3\x10\x4b\x09\xd7\x71\x20\x17\x11\x86\xc3\xbe\x16\xb7\
\x1c\x8f\xc7\x90\x52\xea\xba\x78\xac\xb9\x17\x04\x81\x5e\xec\x28\
\xb9\xc0\x05\x95\xfa\x44\xd4\x9c\xe2\x43\x32\xfb\xc5\x5a\x7d\xbe\
\xef\x63\x6b\x6b\x0b\xb7\x6e\xdd\xc2\xfe\xfe\x3e\xda\xed\x36\x66\
\xb3\x19\x1e\x3e\x7c\x88\x4a\xa5\xa2\x81\x8d\xef\xfb\x19\x09\x84\
\x6a\xb5\x0a\xdb\xb6\x75\x21\x69\x82\x94\x4a\xa5\x82\xad\xad\x2d\
\x1c\x1c\x1c\xe8\xf9\x9b\x01\xe1\x14\x10\xed\x76\xbb\xe8\xf7\xfb\
\xe8\xf5\x7a\xda\xfd\x47\x69\x07\xc6\xed\xb2\xb0\x32\x45\x3f\x29\
\x00\x4a\x1d\xb1\x83\x83\x03\x7c\xfd\xf5\xd7\x18\x8d\x46\xd8\xdb\
\xdb\x83\x94\x52\x07\x8e\x9b\xe5\x60\x18\x3b\x44\xb6\x29\x8e\x63\
\xbd\x5f\xba\x41\x19\x23\xb6\x58\x2c\x30\x1c\x0e\x75\xbd\x45\x21\
\x84\x76\xb7\x9a\x85\x96\x4d\x19\x8c\x20\x08\xd0\x6c\x36\x51\xab\
\xd5\x60\x59\x16\xde\xbc\x79\x03\x29\xa5\x76\xad\xcd\x66\x33\x9d\
\x19\xc8\xdf\x72\x0d\x24\x88\x25\x10\xe2\xb9\xa5\xe2\x7d\xde\x25\
\x67\xb2\xa3\xcc\x70\x34\xdb\x30\x5d\x7b\x00\x32\xba\x57\x66\x1c\
\x97\xf9\xbf\x09\x00\x4d\x26\x8b\xfb\x23\x28\x14\x42\x68\x76\x6b\
\x38\x1c\xaa\xb1\xb3\x52\xb9\x8e\xe9\x34\xc2\x62\x01\x38\x8e\x0d\
\x3b\x91\x2e\x4b\xab\x07\x28\x62\x24\x93\x73\xa2\xc1\xd5\x6a\x00\
\x6b\x5d\x06\x2b\xff\x7e\xd5\xb9\x7b\x13\x6d\xe4\x7f\x6f\xce\x0f\
\xce\xcf\x7f\xfe\x0b\x58\x16\x50\x2a\x95\x61\xdb\x02\x8e\xa3\x02\
\x27\x2d\xcb\x81\x10\x2c\x0a\xe9\xc0\xb1\x3d\x38\x8e\x52\x49\x57\
\x74\x68\x0a\xac\xf8\xff\x7c\x1e\xe9\xf7\x80\x84\x8c\x24\x62\x19\
\x43\x0a\x89\x58\x48\x45\x41\x49\x64\x2e\x3c\xf3\x8f\x99\x08\xca\
\x52\xf1\xcf\xd3\x00\x2a\x9b\xfe\x59\x04\x58\x96\x01\x2b\x7e\xb6\
\x8c\x49\x5a\x77\x51\x58\x85\x11\x5a\xb6\xaf\x75\xda\xd8\x84\xbd\
\x67\xaf\xde\xdb\xaa\x76\x59\x17\x61\xd1\x3d\xf6\x7d\x01\xf5\x19\
\x37\x61\xa4\x24\x16\x64\x1c\xc3\x12\x02\xb1\x48\xdc\x40\x52\x32\
\xef\x10\x10\x29\x17\x1f\x89\xac\x7b\xc7\xb1\x6d\x78\xb6\x85\x5e\
\x2f\x44\xbb\xdd\x56\x8b\xf4\x3c\x82\xb0\x16\xb0\x2c\x17\xb6\xe5\
\xc2\x75\x7d\x94\xca\x21\x82\x4a\x0d\x9e\x5f\x46\x24\x55\xa9\x95\
\xf1\x74\x06\xdb\x76\xe1\x38\x9e\x66\x7b\x18\x34\x6d\xdb\xb6\xd6\
\xa3\xa2\xc2\xba\xeb\xba\xba\x90\xf2\x93\x27\x4f\xf0\xe6\xcd\x1b\
\x54\x2a\x15\x08\x21\xf0\xfb\xdf\xff\x1e\xbf\xfc\xe5\x2f\xf1\x0f\
\xff\xf0\x0f\x58\x2c\x16\xda\xf5\x35\x9d\x4e\x75\xad\xc2\xa3\xa3\
\x23\x7c\xf9\xe5\x97\x9a\xa9\x49\x33\xce\x94\xbb\xee\xb7\xbf\xfd\
\x2d\xe2\x38\xd6\x19\x69\x51\x14\x61\x30\x18\xe8\x98\x5c\x4a\x45\
\x30\x1e\xea\xce\x9d\x3b\x19\x55\x76\x2e\xe8\x00\xf0\xd9\x67\x9f\
\xe1\xd1\xa3\x47\xf8\xdd\xef\x7e\x87\x83\x83\x03\x9d\x21\xb9\xbb\
\xbb\x8b\xb7\x6f\xdf\x6a\x56\xc8\xd4\x64\x22\x5b\x64\x59\x16\x06\
\x83\x81\x06\xa9\x9e\xe7\x9d\x72\x9d\x51\x36\x81\xc1\xef\x04\x72\
\xa6\x99\x22\xaf\x74\x25\x36\x1a\x0d\x3c\x7a\xf4\x08\xb6\x6d\xeb\
\x24\x00\x33\xb3\x8f\xe7\x95\x25\x66\xc8\x4c\x99\x0f\xdd\xdc\x8e\
\xde\x1d\xc6\x86\x01\xa9\x8a\x7d\x3e\x26\xeb\xd6\xad\x5b\x9a\xd5\
\x22\xc8\x31\xe3\xa4\x09\xbc\xb8\x7e\x9a\xac\x15\xa0\x62\xdf\x82\
\x20\xd0\x19\x9d\xec\x37\x80\xcc\x7e\xf2\x2a\xed\xdc\xcf\x6c\x36\
\x83\x67\x8f\x50\x2e\xd7\xb0\xb3\xb3\x83\x72\x50\xd6\x1a\x68\x12\
\x29\xeb\x66\xdb\xcc\x7e\x4c\x33\xf0\x4d\x70\x25\x65\x8c\x35\x2a\
\xcd\xad\x6c\xdf\x15\x8b\xa5\x89\xa2\xb8\xb8\x50\xbb\x53\x09\xab\
\xb0\x6c\x01\xcf\x2d\xc1\x76\x2c\xb8\x8e\x07\xc7\x4d\x83\xca\x2d\
\xdb\x86\x65\xd9\xb0\x2d\x17\x96\xa5\x8a\x9a\xda\xb6\x65\x4c\x96\
\x8c\x23\x2a\x62\x9d\x54\x0c\x15\x41\x91\x95\xfc\x99\x54\x64\x4a\
\x21\x16\x01\x21\x00\x06\x0e\x56\xed\x9c\xcd\x3e\x6d\xea\xb3\x4d\
\xd9\x32\x96\x8d\xf6\xae\x2f\x36\xef\xed\xbd\xfd\x31\x5b\x7e\x52\
\x5d\x06\x26\x35\x23\x11\x43\x33\x59\x64\x5c\xa4\xef\x63\x3e\x9f\
\x6b\x50\x63\xb4\x9e\x61\x1a\xcc\x45\x97\x6d\xb3\x5d\xea\x43\xd9\
\xb6\xad\xd9\x1b\x2e\xe0\xa3\xd1\x48\x17\x2c\x26\x00\x31\xcb\xcb\
\x70\x21\x7d\xf2\xe4\x89\x06\x41\x66\x09\x17\x06\x94\x4b\xa9\xb2\
\xd5\x26\x93\x89\x6e\x7b\x30\x18\x24\x19\xe1\xbe\xde\xaf\xb9\xe0\
\x33\xa8\x9d\xb1\x5c\x04\x33\x96\x95\x16\x87\x26\x6b\x63\x02\xac\
\xd1\x68\x84\x57\xaf\x5e\xa1\xdf\xef\x67\x34\xa5\x6e\xdf\xbe\x8d\
\x93\x93\x13\x0d\x18\x4b\xa5\x92\x16\x2c\x2d\xf2\x64\x90\xb1\xa3\
\x0b\xf5\xf8\xf8\x58\xbb\x3b\xe9\x8e\xe3\xf1\xf3\x5c\x9a\x7f\xa6\
\x30\x28\xb3\x1b\x99\x2c\xd0\x6e\xb7\x35\xb0\x60\xbf\x4d\x96\x29\
\x5f\x20\x3a\x3f\xef\xf3\x5c\x33\xe8\xde\xdc\x16\x48\x5d\x80\x40\
\x56\xa5\xde\x8c\xcd\x32\x8f\x95\xdb\x99\x9f\x99\x42\xa3\x74\x8f\
\x12\xfc\x9a\xc6\x6d\x09\x9e\xcd\x92\x3e\x4a\x1b\x4b\xb9\x60\x2b\
\xa5\x54\xd2\x41\xc6\xca\x1d\x18\xab\xba\x2c\xc9\xb5\x6a\x81\x1c\
\xc9\x32\x56\xf7\x8f\xc9\x9c\xbd\xbd\x0f\x52\x16\xca\x16\xb0\x85\
\x03\xcb\x11\xb0\x60\x03\x22\x29\x1b\x03\x0b\xc2\x4a\x62\xa2\x4c\
\x2c\xa2\x5d\xad\x02\x90\x02\x8e\x6d\xf8\x84\x8d\xed\x84\x50\x52\
\x09\xac\x03\x98\x7e\x27\x0d\x80\xa5\x3e\x31\xd1\x73\xba\x93\xc4\
\xb7\x08\x01\x20\x9b\xaa\x7a\x96\x9d\xc5\x1c\x9d\xc7\x26\xad\x73\
\x61\x6c\x82\x0d\x32\xfb\x9a\xdf\xf7\x26\x01\xe0\x59\xee\xc1\x4d\
\x1c\xc3\x79\x6d\x14\x1d\xdf\x55\xf4\x63\x13\x76\x1d\x0c\xdf\xbb\
\x30\x01\xad\x33\x0e\x67\x1d\x4f\x51\x8c\xc2\x55\xd9\x79\x7d\x96\
\xc6\xbf\xab\xb4\xb1\xb4\xcf\x79\x96\x4e\xa6\xc1\xbd\x42\x08\x20\
\xa6\x53\x24\x5d\xf0\x24\x54\xd1\x78\xd7\x71\x60\xf9\x65\x78\x8e\
\x0d\xdb\x71\x00\x21\xd0\xed\x75\x11\xcd\xd5\x02\xb7\x88\x22\xf8\
\x25\x5f\x67\x64\x57\xaa\x55\xb8\x9e\x87\xd9\x7c\x8e\x66\xb3\xa9\
\xd8\xaa\x38\xd2\x5a\x3c\xd4\xc0\x62\x69\x16\xba\x0b\xd9\xf7\x6e\
\xb7\x8b\xa3\xa3\x23\xb8\xae\x8b\x9d\x9d\x1d\xad\x3c\x5e\xad\x56\
\x71\x78\x78\x88\x67\xcf\x9e\xe9\x0c\x3a\x02\x21\x29\xa5\x2e\x8a\
\x6c\xc6\xf1\x54\xab\x55\x2d\x7f\xc0\x7b\x9a\x60\x07\x50\x81\xe0\
\x64\xb9\xf8\x19\x45\xa3\xe9\xfe\xa3\xba\xfb\x64\x32\xd1\xba\x5d\
\x40\xea\xd6\x6b\xb7\xdb\xe8\xf7\xfb\xb0\x2c\x4b\xb3\x28\xd3\xe9\
\x14\xcd\x66\x13\xed\x76\x1b\x52\xa6\xc1\xe5\x93\xc9\x44\xb3\x77\
\x74\xbd\x95\x4a\x25\x6c\x6f\x6f\xa3\x56\xab\xc1\xb6\x6d\x2d\x6e\
\x6a\x8a\x79\x9a\xe7\xce\x2c\x94\x6c\x82\xab\xe9\x74\xaa\xe3\xc8\
\x46\xa3\x11\x9e\x3d\x7b\x06\x20\x8d\xef\x32\xdd\x88\x04\x26\x74\
\xb5\xf1\x7b\xb2\x54\x64\x99\xcc\x7e\x32\x0e\xcb\x14\x26\x35\xc1\
\x91\x10\x42\x33\x72\xa6\x74\x43\x7e\x7d\x33\xcf\x0f\xaf\x3f\x32\
\x66\x3c\x36\xc6\xa1\x31\x13\x94\xe0\xd7\x94\x79\x20\xf0\xe4\x31\
\x70\x1f\xbe\xef\xc3\x75\x5c\x95\x9c\x30\x4a\xe3\xc1\x04\x2c\x55\
\xea\x6e\xc5\x79\x62\x13\x04\x43\x11\x5b\x74\x11\xb7\xe2\x79\xdb\
\x98\xeb\x55\xd1\x6f\xcf\x9b\xd3\x9c\x4a\xb8\x95\xb0\x4c\xaa\x2c\
\x04\x60\x29\x11\x4f\xd8\x80\x90\x89\x76\x94\x2a\x0d\x71\xca\x9d\
\x66\x65\x9f\xd6\xcc\x3a\x52\xe6\xe7\xe9\xeb\x84\x36\x94\x8c\x5f\
\x40\xc2\x48\x59\xd0\x25\x55\x0d\x60\x95\xfe\xdc\x98\x0e\x35\xdd\
\x78\x7a\x1f\x45\x07\x6e\xba\x2c\xf2\x9f\x2f\xb3\xcb\x2c\x00\x79\
\x90\x61\x9e\x80\x55\x16\xaa\x22\xb0\xb1\x89\x05\xe9\xbc\x8b\x7a\
\x95\xfd\x5c\xa4\xff\xab\xf6\xe3\x5d\x00\x1a\x45\x76\x1d\xfd\xde\
\xc4\x3e\xae\x62\xf2\x59\xf5\xfb\x8b\x4c\x84\x97\xb5\xfc\x75\x76\
\xfa\xda\x95\x58\xa7\x1b\xcb\x26\x5a\x21\xa8\xba\x97\x7c\x9e\xfc\
\x99\x0f\x8c\x52\xca\x44\x03\x48\x40\x48\x15\x26\x21\x65\x0c\x21\
\x01\xc7\xb6\x21\x85\x83\xb2\x15\x40\xd8\x16\x84\x6d\x61\xd0\xed\
\xe9\x45\x14\x02\xf0\x4a\x25\x5d\x9a\xc6\x76\x1c\x48\x40\xc7\x2f\
\x2d\xa2\x08\x10\xd0\x40\xc3\x8c\xef\x91\x52\xea\xe0\x6c\x02\x9b\
\x4e\xa7\xa3\x63\x8c\x18\x4f\x45\xfd\x2a\xd7\x75\xd1\x6c\x36\x31\
\x18\x0c\x30\x1e\x8f\xb1\xb7\xb7\xa7\x6b\x0f\x52\x80\x94\x35\x06\
\xf7\xf6\xf6\xd0\xef\xf7\x75\x90\x3a\x15\xc1\xf9\x7a\x7b\x7b\x5b\
\xab\xc9\xd3\x2c\xcb\xd2\xc0\x8b\x0c\x92\xe7\x79\xe8\xf5\x7a\x99\
\x85\x9c\xfd\x66\xd1\x65\xd3\x55\xd7\xe9\x74\xb0\xb5\xb5\xa5\x83\
\xcf\xcd\xa0\x6f\x0a\x84\x9a\x2c\xe2\x6c\x36\xc3\xc1\xc1\x81\xd6\
\x07\xe3\xb5\x40\xb0\xc3\xf3\x69\xb2\x60\x66\x3d\x42\x7e\x47\xd6\
\xcb\xbc\x9e\xc8\x7c\x99\x6a\xea\x42\xa8\x18\x34\x66\x53\x12\x1c\
\x11\x54\xb1\x5f\x64\x89\xcc\x9a\x83\xf9\xf9\xd0\xcc\x44\x64\xdf\
\xf9\x7b\xb2\x7e\xdc\x96\xf1\x65\xe6\x58\xd0\x75\x49\x70\x35\x1c\
\x0e\xf5\x79\x30\x81\x37\x7f\x6f\x8e\x83\x59\x36\xc8\x3c\xa6\xf9\
\x28\xc6\xef\x7e\xf7\x3b\xfc\xe8\xf1\x27\x4a\x03\x2e\x01\x56\x02\
\x02\x51\x1c\x83\x05\xa3\x93\x3b\xac\xf0\x3e\x5a\x16\x83\xb5\xce\
\x7a\x50\x04\xb0\xce\xdb\x3e\xff\x7a\x1d\xa0\x57\xb4\x3f\x5e\xab\
\xcb\x7e\x2b\xa5\x84\x23\x60\x43\x09\x81\x39\x50\x02\x77\x96\x01\
\x7a\x08\x4a\x05\x2c\x91\x4c\x1a\x26\x39\x25\x44\xe6\xb5\x65\x4e\
\x62\xb9\xef\x04\x0f\x88\xa0\x4d\x9c\x0d\x74\xd4\xe7\x26\x73\x85\
\x84\x5b\x3f\x73\x1c\x2e\x65\xcb\xc0\x57\x1e\xa0\x9d\xfb\x74\x7c\
\xce\x36\x9b\x60\xbc\xbe\x0b\x3b\x4f\x0d\x3c\xeb\x1e\x5e\xaf\x8d\
\x77\x71\x3c\xde\xdb\xd5\xda\x26\x00\xf8\x75\x81\xf8\x3c\xb1\x2f\
\xb8\xc8\xe4\xbe\xa0\x26\xbc\x39\x9f\x48\x09\x38\x8e\x8b\x30\x54\
\x0a\xd8\x42\x0a\xcc\x17\x73\xc4\x51\x04\x40\xb1\x1c\x95\x6a\x15\
\xb5\x5a\x1d\xe5\x72\x80\x7e\x7f\x80\xc3\xa3\x63\x9c\x74\xba\x90\
\x10\xb0\x84\x9d\xd1\x56\x32\xf5\x92\x4c\x8d\xa5\x5b\xb7\x6e\xa1\
\xd1\x68\xe8\x2c\x38\xdf\xf7\x35\x7b\xf4\xf0\xe1\x43\x1c\x1c\x1c\
\xe8\x3e\x51\x9e\x20\x08\x02\x1c\x1e\x1e\xc2\xb6\x6d\x1d\xf8\xce\
\x18\x2d\x66\x33\xb2\x6c\xd9\xdb\xb7\x6f\x33\x2e\x32\x21\x54\x76\
\x23\x45\x41\xe3\xeb\xce\x00\x00\x20\x00\x49\x44\x41\x54\x3a\x29\
\xdc\x29\x84\xca\x24\x64\x11\x66\x32\x50\x66\xe5\x8f\x5a\xad\x86\
\xdd\xdd\xdd\x4c\x20\x39\xd9\x1e\x6a\x6a\x11\xd4\x90\xbd\x33\x81\
\x47\x1c\xc7\xba\x5c\x0e\xc1\x86\x99\xa9\x68\x59\x96\x16\x0c\x65\
\xbb\x6c\x83\xc7\x08\xa4\xc0\x87\x40\x51\x15\x40\x8e\x75\xdf\x4d\
\xe6\x87\x40\x24\x48\xe4\x8c\xc8\x92\x15\xb1\x4f\x6c\xdb\xcc\x72\
\x24\xb8\x23\x63\x47\x46\x2a\x0c\x43\x0d\x34\x09\x36\xcd\xd8\x30\
\x7e\x46\x80\xcd\xcf\xc8\x5e\x71\x8c\xc9\x4c\xf1\x7c\x00\xc8\x00\
\xaa\x7c\xfc\x15\x01\x04\xdd\xca\xd3\xe9\x14\xf3\xa9\x4a\x98\x80\
\x50\x00\x74\x38\x9a\xab\x78\x41\x87\x2c\x9a\x40\x14\xad\x76\x9f\
\x5d\xd7\xbd\x79\xde\x7e\x36\x31\xb7\x2c\x33\xc7\xb2\x55\xf8\xa5\
\x6d\x91\xb1\x52\x32\x08\xca\x1d\x98\x90\xdb\x09\xae\xb1\x04\xd4\
\x36\xa7\x98\x29\x65\x66\x8a\x67\xfe\xbb\xf4\xa9\x02\x20\x03\x55\
\xfc\xbd\xe9\x1a\x44\x5a\x58\x83\xac\xd7\x15\x20\xac\x22\xd6\x69\
\x5d\x90\x95\x07\x67\xcb\x4e\xe4\x3a\x40\x6d\x9d\xed\x2e\x6b\xd7\
\xb9\x1f\xd3\x96\x5d\x4b\xd7\xd1\x8f\x9b\xe2\x8a\x7c\x57\xec\x3a\
\x8f\xf7\xaa\xc1\xd5\x55\x1e\x0a\x19\x2d\xbe\x86\x10\x7a\x87\x64\
\xb2\xcc\xf9\x42\x08\x0b\x96\xad\x04\x98\x2b\x15\x35\xc7\xcd\xe7\
\x73\x4c\xc7\x13\xc4\x51\x04\xcb\xb6\xe1\x97\x03\x6c\x37\x6f\xe1\
\xd6\xad\x1d\xcc\x66\x73\x3c\x3d\x6e\xa1\xd5\x3e\xc1\x6c\xbe\x80\
\x90\x40\xb5\x5a\x45\x18\x86\xe8\xf5\x7a\x3a\x9e\x67\xb1\x58\x60\
\x34\x1a\x61\x32\x99\x68\xd0\x43\xf9\x9d\x56\xab\xa5\x5d\x81\x8b\
\xc5\x02\x8d\x46\x03\x51\x14\x69\x51\xcc\xd9\x6c\x86\xa7\x4f\x9f\
\x6a\xa6\x8c\xcc\x15\x63\xba\x5a\xad\x96\x5e\xd4\xa9\xdf\x45\xa0\
\x43\xc0\x64\x66\xd5\x99\xd2\x12\x61\x18\xe2\xe8\xe8\x48\x6f\x4f\
\x76\x0d\x80\x06\x47\x14\xf1\xac\x54\x2a\x3a\x06\x88\x00\x62\xb1\
\x58\xe0\xd6\xad\x5b\x7a\xdf\x64\x97\x4c\x40\x41\xb0\xc4\xfa\x8b\
\x79\xc9\x01\x5e\x13\xb5\x9a\x0a\xda\xa6\x76\x23\x95\xda\x55\xa6\
\x5c\x1a\x8b\x66\x2a\xb5\x73\xcc\xa8\x08\x6f\x1a\xa5\x27\x46\xa3\
\x91\x06\x2f\xa6\xb0\xa7\xa9\x96\x4e\x0d\x33\x33\xce\xcb\x74\x17\
\x12\x2c\xd1\xcd\xc8\x3e\xe7\x59\x13\x32\x69\x74\x43\x9a\xee\x45\
\xce\x73\xd4\xa3\xe4\xf6\xfc\x8e\xe3\x49\x10\x6e\x06\xbe\x13\xe8\
\x11\x1c\xf7\x3b\x63\x60\x61\xe1\x2f\xff\xf2\x2f\xf1\xdf\x7d\xf2\
\x49\x72\x59\x2b\xb6\x51\x22\xd2\xc7\xb1\x8a\xdd\x04\x70\xb5\x09\
\xb6\xfd\xbc\xef\x1d\xc7\xb1\x35\x4b\x85\x53\x81\xea\x42\x7f\x67\
\x69\x77\x5e\xb6\x81\xfc\x02\x79\xca\x8d\x58\x40\xcd\xa7\x9f\x9f\
\xc5\x62\x15\x09\x83\x6e\x4e\x4f\xa7\x08\x10\x2d\xa3\x0c\x8b\xb6\
\x31\x2f\xf2\xb3\xc0\xd9\x59\xfb\x59\xe5\xc2\xda\x94\x8b\xf0\xba\
\xf6\xb3\xce\x05\x99\x77\xdf\xae\xf2\xfb\x4d\xd9\x75\x1d\xef\x4d\
\xb1\xeb\x72\x11\x6e\xc2\x96\x4d\x8a\xcb\x18\xe6\x8b\xb4\xb1\x49\
\x33\x01\xd5\xa9\xef\x8c\x2f\x24\xb7\x25\x31\x9f\xb0\x59\xa6\x3e\
\x91\xe9\x46\x73\x6c\x1b\x93\xf1\x04\x80\x5a\x90\x9b\xcd\x6d\xec\
\xdf\xdd\x87\x84\xc4\xb3\xaf\xbf\x46\xb7\xdb\xd5\x65\x63\xe8\xa6\
\x12\x22\xd5\x41\x32\xb3\xd5\xa2\x28\xd2\x22\xa1\x0c\xd6\x26\x6b\
\xf1\xe6\xcd\x1b\x74\x3a\x1d\xed\xb6\xe3\x3c\xde\xed\x76\xb1\x48\
\x84\x4e\x99\x11\xc8\xf1\x6b\xb5\x5a\x08\xc3\x10\xb5\x5a\x0d\xdd\
\x6e\x57\xbb\x0a\x09\x98\x78\x8e\xc8\x24\xf1\x3e\x77\x5d\x57\x17\
\x97\x1e\x8d\x46\x9a\x55\xe2\xfd\x48\xd6\x66\x32\x99\xa0\xd5\x6a\
\xe9\x80\x6a\x82\x0f\x53\x6a\x82\xae\x3e\x82\x11\xc6\x69\x01\x0a\
\x70\xfa\x49\xf2\x00\x41\x97\x99\x41\x48\x16\xc8\xcc\x32\x64\x4c\
\x59\xbf\xdf\xcf\xf4\xd7\xb6\x6d\x1d\xd3\x36\x18\x0c\x34\x68\xf4\
\x7d\x5f\x03\x3f\xb2\x86\x52\xa6\x81\xfd\x26\xb0\xe4\x98\x72\x5b\
\x96\x2b\x62\xbf\x18\x13\x65\xba\xed\xc8\x42\x99\x75\x15\x39\xae\
\x26\x33\x45\x00\xc8\x71\x30\xb5\x27\x69\xa6\x3e\x25\xc7\xc9\x94\
\xdb\x60\x7b\x04\x84\x26\xc0\xe2\x58\xcc\xe7\x73\xc4\xf3\x29\xfe\
\xfc\xcf\xff\x1c\xf7\xee\xdf\x4b\xfb\x20\x2c\xcc\xa3\x38\x75\x93\
\xb3\x56\x6f\xa6\x00\xa8\xf1\xb7\xc2\xbd\x79\x11\x97\xdd\x79\xdb\
\xe7\x5f\x9f\xb5\xee\x98\xdb\xe4\xcf\x0b\x6d\x95\x75\xdc\xb1\x9d\
\xa4\x91\x58\x6a\xf7\x5f\x06\x48\xe9\xcf\x52\x17\xe0\x32\xd6\xe1\
\x34\x0b\x95\xdf\x26\xf1\xd9\xaa\x6e\x21\x05\x4c\xe6\xd3\xdc\xe9\
\xc9\xf3\xaa\x98\x2b\xa0\x18\xf0\x5c\x84\xbd\x2a\x02\x59\xf9\x93\
\xba\x2e\x7b\xb5\xee\xb6\x97\xb1\x55\xf6\xb3\xe9\x7e\x98\xe3\x74\
\x5d\x40\x32\xbf\xef\xcb\xb6\xf1\xc7\x64\xd7\x7d\xbc\x67\x4d\xbe\
\xeb\xdc\x3f\x45\xaf\x97\x43\xa2\xf5\x4c\x13\xf2\x67\x74\x87\x60\
\x8a\x5d\x16\x52\x43\x2d\x15\xf5\x6a\x59\x98\x27\x81\xc8\xd4\x32\
\xd2\x0c\x04\xa0\xa4\x20\x00\x34\xb6\xb6\x70\xfb\xce\x1d\x40\x08\
\x84\x95\x0a\xba\xdd\xae\x8e\x49\xc2\x62\xae\x81\x94\x79\x2f\x99\
\x35\xfe\x08\x84\x08\x1a\x5c\xd7\xc5\xdd\xbb\x77\x75\x59\x1a\x32\
\x60\xae\xeb\x66\x8a\x2a\x73\x5b\xc6\x3c\xdd\xbf\x7f\x5f\x17\x2e\
\xde\xde\xde\x56\x8a\xf4\xfd\xbe\x06\x62\x74\xf7\x31\xd6\x07\x48\
\x99\x1b\xea\x5f\x99\x35\xf8\x3c\xcf\xcb\xc4\x24\x51\xc0\x73\x30\
\x18\xe8\x0c\x48\x02\x47\xb6\xd7\x6a\xb5\x40\x91\x54\x93\xed\xe1\
\x76\x64\xaa\xf2\x73\x3a\x01\x1d\x59\xb3\xf1\x78\x8c\xd7\xaf\x5f\
\x43\x4a\x99\x01\x6b\x26\xe8\x33\xcb\xd1\xf0\xfc\xd0\x5d\xc7\x63\
\x31\x99\x1f\xcf\xf3\x34\x03\x46\x66\x89\xe0\x8a\x20\xc7\x0c\x8a\
\x37\x17\xef\xbc\x8b\x2f\x8e\x63\xad\x8b\x66\x82\x29\x33\x9e\x8b\
\xfd\xe1\xf1\x73\x5f\x04\x49\xec\x1f\xdd\xc1\xcc\x34\x35\x59\x43\
\x53\xf9\xdd\x8c\x29\x23\x70\x25\xc0\x1d\x4d\x17\x38\x38\x38\xc0\
\x9d\xbb\x7b\x08\xab\xa5\x4c\x9f\x15\xc0\x3a\x4d\xc2\x2c\xb3\xef\
\x9a\xc5\x5a\xb6\xee\x2c\xeb\xcb\xba\xec\x16\x00\x38\x22\x89\xad\
\x92\x82\x75\x9b\xa4\x46\x58\xa6\xbb\x4e\xe9\x51\x9d\xad\x3f\x55\
\x64\x59\x97\x1f\xff\xf4\xb7\x2b\xfe\xde\x64\xaf\xf2\x6d\x5c\xcc\
\xce\x02\x3c\xe7\x3d\x29\x9b\x37\xc4\x2a\x0c\xd8\xb2\x7d\xae\x62\
\x37\x89\xc1\x5a\x97\x39\x58\xc7\xae\x7b\xf1\x7e\xcf\x60\x5d\xdd\
\x36\x97\xb5\x77\xea\xbc\x9c\xb3\x9b\xa2\xfb\x3d\x7f\xed\xf1\xbd\
\x8e\x4f\x4c\x16\x46\x1d\x67\x63\xc5\xb0\xa0\xb2\xb8\x58\xc6\x86\
\x85\x87\xc7\xe3\xb1\x5a\x60\x8d\x22\xc1\xdc\x1f\x17\x5f\xdf\xf7\
\xb1\xb7\xb7\x07\xd7\x75\xb5\xea\x3a\x99\xa0\x66\xb3\x89\x93\x93\
\x13\x9c\x9c\x9c\xa0\x5a\xad\xa2\xd5\x6a\xc1\x71\x1c\x54\x2a\x15\
\x00\x2a\xf3\x90\x2e\x2a\x29\x15\xdb\xd6\x6c\x36\xd1\xeb\xf5\xd0\
\xe9\x74\x50\xab\xd5\x32\xf1\x4f\x00\x74\xe9\x1b\xb2\x43\x64\xa4\
\x08\x02\x18\x3b\x04\xa4\xc1\xd8\x26\xd0\x60\x3c\x19\x35\x9b\xe8\
\x8e\x23\xc8\x98\x4e\xa7\xda\x2d\x49\xa0\xc0\xfd\x13\x84\xe5\x99\
\x1f\x93\x65\x22\x83\xc5\x98\x30\xba\x11\xb9\x7f\x6e\x47\x70\xa4\
\x4e\x89\xad\xb3\x39\xa9\x43\x45\xd0\x45\x91\x51\x33\x18\x9f\xa0\
\xc3\x0c\x62\x27\x70\x26\xa0\x21\xbb\x66\xb2\x24\xf9\xb1\xe0\x18\
\xf1\x3a\xc9\x93\x10\x3c\x6e\xf3\x41\xd5\x6c\x8f\xaf\x4d\xe9\x05\
\x93\x08\x31\x8f\x95\x7d\x64\x3f\xf9\x7b\x02\x2d\xc7\x71\x20\x10\
\xe3\xc5\x8b\x17\x78\xf8\xe1\x7d\xdc\xbd\xb7\xab\xbe\x97\xa7\xcb\
\xbd\xa9\x5b\xe3\x7c\x06\xab\xc8\x56\x61\xa7\xd6\x65\xb0\xcc\x7e\
\x9d\xf5\xd9\x2a\xa0\x2f\xbf\x8e\x9f\xc9\x60\x01\x8b\x0c\xea\xcc\
\x9e\x40\xd3\x55\x28\x50\x9c\xe9\x67\x2e\xba\x52\xff\x2e\xb5\xbc\
\x4f\x31\x05\x48\xc2\x20\xd7\x85\xc8\xcb\x2f\x98\x82\xa2\x22\x29\
\x9b\xb3\x19\x70\xa5\x7b\xbb\x06\x33\xb5\x69\x76\xeb\x5d\xb4\x55\
\x82\xdc\xcf\xb3\x53\x37\x61\xc1\xc5\xf9\xae\x8e\xcf\x7b\xdb\xbc\
\x15\x4d\x80\x17\xb9\x3e\x4e\x4d\x9c\x1b\xbe\xc4\x38\xad\x31\xa8\
\x3d\xdf\xbc\x10\xa2\x70\x61\x51\x0b\x98\x48\x34\x06\x13\xf7\x4f\
\x94\xce\x89\x25\xaf\xac\x17\xd8\xb0\x52\xc3\xed\xbd\x7d\x04\xe5\
\x0a\xee\xdd\x7b\x80\xdf\xfc\xe6\x37\x78\xfb\xf6\x08\x00\xb0\xbd\
\xbd\xad\x6b\x18\x12\x08\xd1\x6d\xd4\xeb\xf5\x70\x7c\x7c\xac\x19\
\x17\xcb\xb2\x50\xaf\xd7\x11\x04\x01\x00\xe5\x4e\x7b\xfd\xfa\x35\
\xee\xdd\xbb\x87\x4e\xa7\x83\x72\xb9\x8c\xfd\xfd\x7d\x9c\x9c\x9c\
\xa0\xd5\x6a\xa1\xd1\x68\x68\xe0\xe0\xba\x2e\xaa\xd5\xaa\x06\x53\
\xa3\xd1\x48\x03\xb5\xd9\x6c\x86\x66\xb3\xa9\xf5\xa6\x46\xa3\x11\
\x1a\x8d\x86\x96\x6f\x20\x13\xf3\xd9\x67\x9f\xe1\xcd\x9b\x37\x78\
\xf1\xe2\x85\x2e\xc9\x43\xe0\xb3\xb5\xb5\x85\x07\x0f\x1e\xe8\xba\
\x81\xac\x5b\xc8\xd8\xa8\xf1\x78\xac\x4b\xf1\xc4\x71\x8c\x20\x08\
\x10\xc7\xaa\x7e\x1e\x03\xc3\xc9\x18\xe5\xdd\x72\x66\x7c\x57\xaf\
\xd7\xc3\xce\xce\x4e\x66\x5b\xd3\xcd\x4a\x46\x8b\xb1\x4b\xfb\xfb\
\xfb\xd8\xd9\xd9\xc9\x88\xa7\x52\xa3\xcb\x94\x60\xa0\xa8\xa8\x19\
\x28\x6f\x16\xa2\xe6\x79\x19\x0e\x87\x1a\xbc\x71\xbf\xa6\xd0\x36\
\x83\xf1\x4d\x99\x07\x00\x19\x00\x46\x40\x66\x96\x48\x62\x1c\xd5\
\x6c\x36\xd3\xf5\x16\x01\x64\x40\x24\x81\x2f\x80\x53\xec\x1c\x99\
\x35\xc6\xcf\xd1\xa5\x18\xc7\x31\x82\x52\x0d\x5e\x23\xd0\x2e\x60\
\x0d\x96\xa1\x18\x46\x3b\x01\x96\xab\x06\xb9\xd3\xae\x83\xc9\x5a\
\x65\x1e\x39\x8b\xe9\xba\x68\xbf\x1c\x95\x0a\x2c\x61\x09\x5b\x07\
\xb5\x2b\x31\x97\x7c\x64\x81\x12\x13\x5d\x65\x66\x5a\x69\x12\x94\
\xa9\xa6\xd6\xf9\xae\x29\x60\x93\xc0\x2a\xd3\x8d\x73\xfa\xba\xca\
\xb1\xac\xd2\x06\xf0\xee\x03\x87\x55\x2e\xb2\x55\xdc\x8c\x45\xd4\
\xec\xf7\x65\x8c\xde\xdb\xd5\xd9\x4d\x62\xb6\x38\x25\x69\x40\x65\
\xbc\x5e\xfa\x9b\x02\xd6\x54\x48\x20\xc6\x02\xb6\x25\xe0\x58\x1e\
\xa2\x78\x8e\xc5\x3c\x0d\xa5\x50\xc2\x8d\x6a\x11\xf4\x7c\x0f\xdb\
\xb7\xb6\x51\xa9\x06\xb8\xb3\xbf\x8f\x7f\xff\xcd\xaf\xd0\x6a\xb7\
\x31\x99\x4c\xd0\xa8\x55\x20\x6c\x0b\xb0\x04\x5c\xc7\x85\x3d\x71\
\x80\xa4\x70\x72\xbf\xdf\xd7\xb5\x03\x01\xe8\xcc\x3a\xdb\xb6\xf1\
\xea\xd5\x2b\x34\x9b\x4d\xb8\xae\x8b\x5f\xfd\xea\x57\x68\x36\x9b\
\xe8\xf7\xfb\xf8\xfd\xef\x7f\xaf\x59\x2e\xdb\xb6\x35\xa3\x35\x99\
\x4c\xd0\xe9\x74\xe0\x38\x0e\xf6\xf6\xf6\x50\x2e\x97\x75\x10\xfd\
\x68\x34\xd2\x01\xd3\x74\xc1\x91\xa9\x61\xcc\x52\xbd\x5e\xc7\x3f\
\xfe\xe3\x3f\xe2\xab\xaf\xbe\x42\xa9\x54\xc2\x9d\x3b\x77\x32\x6a\
\xf3\x51\x14\xe1\xeb\xaf\xbf\xd6\xec\x5c\xa9\x54\xd2\xc0\x91\xe5\
\x7e\xca\xe5\xb2\xca\x64\x03\x74\x39\x1d\x4a\x10\x70\x8c\x77\x77\
\x77\xb1\xbb\xbb\xab\x4b\xf4\x90\xe9\x62\x10\x39\x41\x05\x6b\x22\
\x52\xff\x89\xa5\x7b\xca\xe5\x32\x4a\x49\xdd\x5c\x8a\xa4\x2e\x16\
\x0b\x3c\x7b\xf6\x0c\x27\x27\x27\xda\x0d\xc8\xac\x48\xba\x1e\xcd\
\xb8\x25\x32\x7b\x94\x94\xa0\xab\x8d\x60\xcf\xac\x8d\xc8\xf1\xe1\
\xfc\x47\xb6\x8c\x81\xe9\xc3\xe1\x30\xc3\x7a\xf1\x3a\x32\x65\x18\
\xc8\x3e\x99\xdf\x33\x8b\x94\xee\x41\xf6\x83\x05\xb9\x69\xe5\x72\
\x59\x83\x3f\xca\x6b\xcc\x66\x33\x94\xcb\x61\x02\xf0\x23\x54\x03\
\x1b\x61\xa3\x8c\xff\xfc\x57\xff\x13\xb6\x9a\x0d\x8c\x46\x7d\xc0\
\x8a\x21\xe3\x18\x8b\x78\x0e\x3f\xf9\x3d\x63\xb0\x84\x8c\x55\xe2\
\x7f\x72\x6f\xa8\xff\xcf\x5f\x27\xaf\xda\x56\x61\xc7\xce\xfb\x7c\
\xd5\x07\x3d\xfb\x7f\xf9\xaf\xff\xf5\xff\xb6\x2d\x4b\x09\x8c\x5a\
\x4a\x60\x54\xff\x9f\xb8\x05\x15\x7b\xa4\xf4\x2d\x4c\xe6\xc1\x44\
\x76\xf9\x1d\x16\xc7\x63\x09\xe3\x8f\x2e\xc7\x6c\xe9\x9b\x6c\x1b\
\x00\x4e\xe9\x61\xe5\x26\xa8\xc2\xfd\xac\x67\xcb\xda\x58\xc5\x65\
\x96\xa7\x6c\x97\x7d\x7f\xd6\x36\xe7\x59\x7e\xac\x57\xfd\xdd\x75\
\xdb\x45\x8f\x65\xdd\x36\x36\xd1\x8f\x7c\x5f\x2e\xfa\xf7\xae\x98\
\xc9\x3e\x16\xb9\xb2\x57\x05\xcf\xe7\xfd\x5d\x94\xb6\x5f\x36\xa6\
\xeb\xec\x27\x7f\xaf\x15\xbd\xd7\x9f\x43\x80\x2a\x30\x04\x4b\xe6\
\xff\x09\x6f\x9f\x99\xb1\xcc\x6d\x8c\x23\x80\x4c\xe8\x2b\x29\x24\
\x20\x58\x1e\x47\x1a\x6c\x3d\xe9\xad\x18\x02\x52\x25\x0c\x41\xaa\
\x6a\x6d\x42\xc5\x64\x89\xc4\x75\x22\x64\x0c\xdb\xb2\x94\xc0\xb3\
\xa5\xda\x57\xf5\xde\x2c\x94\xcb\x3e\x6c\xc7\xc2\x7c\x31\x03\x2c\
\x81\x56\xfb\x18\x5f\x3d\xfd\x6f\xf8\xf9\x2f\xfe\x07\xc4\x52\x62\
\x34\x1a\xe3\xbf\x3d\x7d\x8a\xfe\x60\x90\x08\x90\x4a\x44\x71\x84\
\x7a\xa3\x81\x4a\xb5\x8a\xfe\xa0\x8f\x52\xc9\xc7\xde\xee\x2e\x0e\
\x0e\x0e\x50\x2e\x97\x51\x2e\x97\xf1\xea\xd5\x2b\x3c\x7c\xf8\x10\
\xed\x76\x1b\x6f\xdf\xbe\xd5\xf1\x53\x80\x62\x3e\x8e\x8e\x8e\xd0\
\xeb\xf5\x34\x8b\x24\x84\xca\xce\xeb\x74\x3a\xba\x6c\xcc\x6c\x36\
\xc3\xee\xee\x2e\x00\xe5\x56\x9c\xcd\x66\xd8\xd9\xd9\xc1\x9d\x3b\
\x77\x10\x04\x81\x66\x56\x6e\xdf\xbe\x8d\xf1\x78\xac\x6b\x03\x12\
\xa0\x11\x88\x2c\x16\x0b\x74\x3a\x1d\x2d\x13\x41\xf7\x14\xc1\x08\
\x01\x10\x45\x50\xa9\x83\x45\x56\xa6\x52\xa9\xe0\xfe\xfd\xfb\x68\
\x36\x9b\x98\x4c\x26\x1a\xa8\x99\x6e\x3d\x02\x12\x82\x0e\x93\x55\
\xa7\xcb\x8c\x6d\xd2\xed\xfa\xea\xd5\x2b\xbc\x7c\xf9\x52\x33\x49\
\xec\x1f\x99\x20\x93\x45\x32\xf5\xa3\x4c\xf6\xc9\x04\x62\x8c\x71\
\x32\x65\x24\xa8\xb6\x6e\xca\x22\xd0\x85\xc9\x78\x2e\x33\xd6\xca\
\x0c\x46\xe7\xf8\x00\x69\xbc\x9b\x10\x22\xa3\x94\xcf\xa4\x02\x53\
\xaf\x52\x9d\x67\x81\xe9\x74\x8e\xf1\x78\x82\x28\x8a\xe1\xba\x1e\
\x4a\x25\x1f\x42\x58\x98\x4e\xe6\x00\x04\xc2\xa0\x02\xd7\x75\xd0\
\xed\x1e\xe3\xe7\xbf\xf8\x19\x2a\xd5\x12\x5c\x17\x98\x4c\x55\x2d\
\xc7\xd9\x74\x8a\xc5\x7c\x8e\x92\xe7\x43\x48\x01\x2b\x11\x24\x81\
\x50\xd7\xb4\x04\x20\x62\x45\xe2\x2a\x00\x08\xa4\x98\x42\xfd\x59\
\x96\x9d\x54\x8a\x71\xa0\x0a\x46\x8b\x33\xfe\x4e\xdd\x88\xa7\xec\
\x2c\x46\xea\xac\xed\x57\xdd\xf6\x2c\x97\x23\xbf\x57\x23\x4d\x36\
\x49\x26\x59\x0a\xfa\x51\x4c\xe8\x63\x58\x06\x14\xd6\x5f\x10\x57\
\x63\xc1\x4e\xdb\xf9\x83\x79\xd5\x4c\xd4\xaa\xdb\x5c\x87\xdd\x94\
\x7e\xbc\xb7\xf7\x76\x51\xbb\x29\x4f\xac\x97\x69\x83\x53\xe5\x29\
\xc2\x7f\x45\xa3\xc4\xb2\xc2\x62\x31\x04\x04\x62\xa8\xa0\x76\x21\
\xa5\x8e\x63\x89\xe3\x08\xf3\x45\x0c\xcb\xb1\x10\x56\x2b\xb8\x73\
\xf7\x36\xee\xdc\xdd\xc7\xdb\xa3\x43\x7c\xf3\xe2\x39\x7e\xfe\xb3\
\xff\x1e\xcd\x9d\x5b\xba\x90\xb1\xe3\x38\x10\x96\x85\x28\x59\xb4\
\xf7\xf7\xf7\x11\x04\x01\x4e\xda\x2a\xde\xca\xb2\x2c\x3c\x78\xf0\
\x40\x67\x11\xbe\x78\xf1\x42\x2b\xbc\x57\x2a\x15\x2c\x16\x0b\xf4\
\xfb\x7d\x1d\x94\x3d\x1e\x8f\xb1\xbd\xbd\x8d\x9d\x9d\x1d\xbc\x7d\
\xfb\x16\x95\x4a\x05\xd3\xe9\x14\xbf\xfa\xd5\xaf\xb4\x40\xe9\x57\
\x5f\x7d\x85\x5a\xad\x06\xd7\x75\x31\x9f\xcf\xd1\x6e\xb7\x75\x06\
\x21\xc1\xcb\xd3\xa7\x4f\xd1\x6c\x36\xd1\x68\x34\x30\x1c\x0e\xb5\
\xf6\x16\x41\x54\xa3\xd1\x80\xef\xfb\x18\x0c\x06\x19\xb7\x1d\x90\
\xb2\x53\xa3\xd1\x48\x67\x17\xba\x46\xec\x19\x65\x29\xa8\x9b\x65\
\x06\xdb\x13\x8c\x90\xdd\xb1\x6d\x5b\x8b\x92\x4a\x29\x33\x2c\x10\
\xe3\x8e\x66\xb3\x99\x06\x5c\x04\x88\xfc\x9f\xf3\x2f\x03\xf0\x59\
\xf4\xba\x5e\xaf\x43\x4a\xa9\x81\x9d\x19\x28\x6e\x96\xd5\x31\xc1\
\x96\x19\xe3\x96\xdf\xce\x2c\x59\x63\x82\x33\x33\x19\x82\xc7\x95\
\x17\x4f\x25\x2b\x07\x20\xa3\xb7\x65\xba\x18\xb9\x5f\x33\xa8\x7e\
\x32\x99\xea\x0b\x9b\x4c\x5e\xa9\xe4\xc3\xb2\x6d\x74\xfb\x2d\x9c\
\x74\xde\xe2\xed\xa1\xaa\x6b\xa9\x5c\x94\x73\xcd\x8a\x45\x51\x5c\
\xf8\x30\x27\xe2\xf4\xe6\xb0\x85\x93\x8b\xf1\x3e\xff\xc1\xfb\x32\
\xb6\x4a\x9b\x17\x65\xb5\xce\xdb\x26\x23\xbd\x5e\xc4\x40\x2d\xfb\
\xbe\x68\xfb\xef\xe2\x89\xde\x04\x1a\xcb\xfc\xaa\xdf\xa7\x38\xaa\
\xf3\xfa\xfa\xde\xae\x6f\xe1\x7e\xd7\xac\xc8\x35\xcb\xcf\x57\xfd\
\xfd\x26\xfb\x72\x15\xed\x2e\xdb\xc7\x65\xf6\x73\x1d\x7d\x05\x0a\
\x82\xdf\x01\xd8\xc9\x03\xe9\x42\x4a\x44\x73\x05\x42\xdc\x20\xc4\
\x83\x07\x0f\xf0\xe9\xa7\x9f\xe2\x9b\x6f\xbe\xc1\xef\x7e\xf7\x3b\
\xfc\x8f\x7f\xf6\xe7\xd8\xd9\xd9\x81\xef\xfb\x68\xb7\xdb\x19\x65\
\xee\xd9\x6c\xa6\x65\x00\x7c\xdf\x47\x90\x30\x24\x95\x4a\x45\x67\
\xff\xed\xee\xee\xe2\xf0\xf0\x10\xb5\x5a\x0d\x61\x18\x62\x30\x18\
\xa0\xdb\xed\x6a\xd7\x91\x65\x59\xd8\xdd\xdd\xc5\xa3\x47\x8f\xf0\
\xc5\x17\x5f\xa0\x52\xa9\xe0\xd6\xad\x5b\x78\xfd\xfa\x35\x26\x93\
\x89\x56\x9a\x67\xe6\x9f\x09\xd2\x00\x60\x77\x77\x17\x8d\x46\x03\
\x5f\x7c\xf1\x05\x8e\x8e\x8e\xd0\x6c\x36\x75\x3c\x13\xe5\x21\x5c\
\xd7\xc5\xf6\xf6\x36\x5c\xd7\xc5\xc1\xc1\x81\xce\x20\x64\x2c\x10\
\x63\xb4\x28\x33\x60\xc6\x0c\x11\x04\x31\xa6\x8b\xe3\x68\x66\xc5\
\x31\xc3\x11\x80\x2e\x52\x5d\xa9\x54\xf4\x3e\x98\xd1\x48\x06\x8a\
\xa0\xd0\xcc\xdc\xcb\x67\xeb\x11\xb8\x05\x41\x80\x72\xb9\xac\xd9\
\x3d\x0a\xa9\xd2\x15\xcb\x0c\x4c\x00\x19\x50\x68\xae\x49\x7c\xcd\
\xf1\x16\x22\xcd\x84\x64\x86\x9f\xa9\x95\x65\xc6\x97\x01\x29\x4b\
\x6d\xae\x0f\x04\x5d\x8b\xc5\x02\x41\x10\x64\xd8\x32\x93\xd1\x35\
\xc7\x4b\xd5\x21\xb6\x4e\x01\x3f\x40\xe2\xd1\xc7\x8f\xd0\x6c\x36\
\x35\x88\xe4\x58\x31\x28\xde\x14\xba\x35\x63\xdf\x68\x12\x8a\xad\
\x52\xbb\x4e\xfb\x59\xe4\x11\xdb\x84\xad\xc3\x5c\x2d\xdb\x66\x95\
\x79\x64\x59\x1b\x4e\x91\x7b\x6c\xd9\xeb\x7c\x90\x73\xfe\x04\x5d\
\xd7\x62\x9f\x07\x4a\x45\x20\x6a\xd9\xf7\xab\x6c\x63\x9e\xe4\x65\
\xe0\xec\x3a\x17\xf1\x55\x8f\xf7\xbd\xbd\xb7\x65\xb6\x0a\xc3\xbb\
\xa9\xfd\x5c\x74\xfb\x75\x7e\xbb\xee\x13\xe7\x45\xf6\xb3\x52\x1b\
\x2b\x4c\x79\xcb\xf6\x97\x9f\x7b\xf3\xdb\x99\x0b\x1f\xb7\xa1\x1b\
\xaa\x5e\xaf\xe3\xd3\x4f\x3f\xc5\x17\x5f\x7c\xa1\xe3\x82\xb6\xb6\
\xb6\xd0\x6c\x36\xf1\xcd\x37\xdf\x68\x40\x21\x93\x00\xf0\xd7\xaf\
\x5f\x43\x08\x81\x5a\xb5\xa6\xc1\x4f\xaf\xd7\x43\xab\xd5\xd2\x0c\
\x17\xeb\x02\x9a\x6e\x2d\x66\xc9\x31\x98\x9a\x81\xdd\xdd\x6e\x17\
\x61\x18\xe2\xd6\xad\x5b\x38\x3c\x3c\x84\xe7\x79\xf8\xf8\xe3\x8f\
\xf1\xe5\x97\x5f\xa2\xd3\xe9\xa0\x5e\xaf\xeb\x5a\x84\x5c\xdc\xf7\
\xf7\xf7\xf1\xed\xb7\xdf\xa2\xd7\xeb\xc1\x71\x1c\x34\x1a\x0d\x5d\
\x17\x8f\xfb\x38\x3c\x3c\x44\x10\x04\x1a\xa0\x10\x20\x55\x2a\x15\
\x54\x2a\x15\xec\xef\xef\x43\x08\x81\xcf\x3f\xff\x1c\x80\x72\x37\
\x8d\xc7\x63\xed\xce\x63\xf0\x3b\xd9\x28\x29\x53\x05\x78\x26\x0b\
\x70\xdf\x3f\xfa\xd1\x8f\x60\xdb\x36\x8e\x8f\x8f\x31\x18\x0c\xb4\
\x6b\x92\xf1\x47\xae\xeb\x22\x0c\xc3\x8c\xdc\x81\x09\x82\x00\x64\
\x14\xd1\xdf\xbe\x7d\x9b\x91\x7a\x20\xb8\xa0\x2e\x16\x80\x8c\xe0\
\xa7\xb9\x9e\xb2\x6f\x45\x81\xe9\x3c\x17\xcb\xd8\x29\x53\x7d\x9d\
\xff\x9b\xf7\x3a\x99\x2e\xba\x58\x8b\xe4\x2b\xd8\xa6\x10\x02\x9e\
\x5f\x82\xeb\xa6\xb1\x5b\xa3\xd1\x28\xa9\x34\x10\xe0\x2f\xfe\xe2\
\x2f\x74\x99\x24\x53\x9a\x83\xdb\x52\x8a\xc2\x64\x1f\xb9\x7f\x21\
\x04\x62\x01\xc8\x58\x79\xc9\x84\x4c\xb3\x14\x4d\x46\xcd\xec\xd7\
\x72\x5b\x2d\xd3\xb0\xe8\x75\xd1\xfb\xf3\xb6\xbf\x68\x1b\x4e\x7e\
\x83\xcb\xb0\x58\xd7\x6d\xeb\xb2\x57\x45\x7d\x7d\xcf\x5e\xbd\xb7\
\x3f\x16\x2b\x62\x70\xaf\x8a\x96\x5f\xa7\x3f\xf9\xd7\x37\x71\x3f\
\x9b\x6e\xe3\xac\x38\x32\x2b\xf9\x38\xe6\xf7\x52\xc2\xb5\x6c\x58\
\x10\x98\xce\xd3\x72\x27\x0f\xee\xdd\xc7\xe3\xc7\x8f\xf1\xe2\xc5\
\x0b\xbc\x7a\xf5\x0a\x3b\x3b\x3b\xf8\xf0\xc3\x0f\xf1\xdb\xdf\xfe\
\x56\xcb\x0a\x44\xbe\x8f\x79\x92\xd9\xe6\xba\x2e\x06\x83\x01\xa6\
\x49\xa0\x3a\xb3\xf5\xc6\xe3\x31\xde\xbc\x79\x03\xdf\xf7\x35\xeb\
\x32\x1e\x8f\x51\xab\xd5\xf0\xd1\x47\x1f\x69\x30\x36\x9d\x4e\xf1\
\xf4\xe9\x53\x1d\x78\xce\x4c\xb8\x52\xa9\x84\xc9\x64\x82\x7f\xfd\
\xd7\x7f\x45\xb7\xdb\xc5\x7c\x3e\xd7\xae\x41\xba\xc8\x26\x93\x89\
\xd6\xd5\x9a\x4e\xa7\x78\xfd\xfa\xb5\xce\x4e\x9c\x4c\x26\xda\x15\
\xc5\xf7\x40\xaa\xe1\xc5\xc2\xd0\x96\x65\xa1\xd3\xe9\xe8\x6c\x44\
\x32\x34\x45\x99\x80\x94\x78\x30\xc5\x39\x09\xd4\xc2\x30\xc4\xf6\
\xf6\x36\x0e\x0e\x0e\x74\x11\x68\xb3\x28\x35\xe7\x56\x66\x04\x32\
\xb6\x89\x8c\x95\xe9\x56\x24\xb8\xa1\x58\x28\xdb\xf0\x3c\x0f\x41\
\x10\xc0\x75\x5d\xcd\xe2\x51\x66\x83\xca\xf4\xe3\xf1\x58\x33\x4a\
\x64\xd0\x38\x66\x52\x4a\x1d\x90\xce\xf6\xcc\x6b\x88\xdf\xf3\xb5\
\x59\xea\xc7\x54\x7e\xa7\x6c\x05\x59\x34\x33\x06\x8d\x7f\x71\x9c\
\xbe\x8e\xa2\x08\xd3\xd9\x14\x71\x9c\x06\xcd\x0b\x21\xb4\x0b\xb2\
\x52\xa9\xa0\xd7\xeb\xa1\xdb\xed\xea\x24\x04\x26\x43\x70\x9f\x74\
\xbd\x32\x2e\xcc\x2c\xd7\x24\x2d\x01\x01\x1b\xc2\x52\xca\x00\xe6\
\xf9\xe1\x18\x6f\xda\xbe\x2b\x70\x05\x24\x2e\xc2\x55\x62\xab\xf2\
\xdb\x14\xbd\xbe\x8e\x89\xfa\x22\x4f\xc8\xeb\x80\x12\x6e\x93\x1f\
\xac\x8b\x9c\xf8\x4d\x80\xa0\xeb\x5a\xfc\x36\xd5\xd7\x9b\xd0\xc6\
\x7b\x3b\xdb\x8a\xae\xf1\xef\xa2\x0f\xd7\xf1\xdb\xef\x1a\x5c\x9d\
\xe5\xf2\x28\xf2\x00\xac\xc2\x62\x49\x29\xb5\x36\xd4\xce\xce\x0e\
\x9a\xdb\xdb\x1a\x24\xd4\xeb\x75\xbd\x18\x03\x89\x8a\x7b\x02\xc8\
\x5c\xd7\xc5\x68\x36\x42\x9c\xb8\xbb\x58\xae\x85\xec\xc3\x60\x30\
\xd0\xee\x2b\xca\x1d\x98\xec\x8b\xb9\x08\xf3\xb7\xdd\x6e\x17\x52\
\xaa\x98\xa6\x7e\xbf\xaf\xd9\x8c\x3c\xd3\x23\xa5\x8a\x9d\xa2\x70\
\xa9\x59\x57\xcf\x71\x1c\x2d\x1b\x51\x2a\x95\x34\x80\x22\x58\x90\
\x52\x69\x5a\xb1\x60\x33\x19\x2f\x00\x99\xd8\x21\x32\x30\x26\xd3\
\x54\xb4\x36\x2d\x16\x0b\x0c\x87\x43\xcd\x90\xe5\x59\x1d\xd3\xd5\
\xc6\x63\x26\x93\xc6\xe3\x21\xe3\x66\x82\x3b\x66\xe1\x99\xe7\x92\
\x2e\x42\xb6\x61\xba\xf3\xe8\x76\xcc\x82\x9d\x38\x13\xa3\x45\x80\
\x93\x5f\xc3\xe8\x9a\xcc\x6b\x66\xf1\x77\xf9\x6b\xc8\xdc\xd6\x1c\
\x2f\xe5\xda\x53\xdb\x11\xa0\xf1\xb8\x4c\x16\x6e\xb1\x50\xd9\x85\
\x8c\x5d\xa3\x66\x16\x00\x3d\x06\x64\xe6\x18\x97\x96\x3f\x2e\xc7\
\x71\x00\x4b\xc0\xb2\x90\x04\xc2\x9f\xbe\xc6\x8b\xde\x17\xd9\xa6\
\xee\xe5\x8b\xcc\x83\xab\x00\x30\x9a\x53\xb4\x98\x2d\x07\x57\x67\
\xbb\x13\xbf\x0b\x30\x90\x7f\x6d\xda\x65\x5d\x88\xab\xee\x67\x99\
\x6d\x6a\x11\xbb\x6c\x3f\x56\xb1\x4d\xf4\xf5\xa6\xb4\xf1\xde\x96\
\x5b\x7e\x52\xd9\x34\x8b\x74\xd9\xc9\x6a\xd5\xdf\xaf\x3b\x01\x5f\
\xe4\x81\xe9\xbc\x36\x00\x30\x98\x64\xad\x76\xf2\x26\x90\xbd\xee\
\xb9\xb5\xd9\xb4\x4c\xb6\x71\x6c\x1b\x42\xaa\x45\xac\x54\x2a\xe1\
\xa3\x0f\x3f\xc2\xa7\x8f\x3f\xc5\xf1\xf1\x31\xda\xed\x36\xee\xdc\
\xb9\x83\x5a\xad\xa6\x99\x22\x82\x25\xb3\x1e\x5e\x1c\xc7\x2a\x16\
\x2b\x08\x74\x66\x59\x14\x45\x68\xb7\xdb\xf8\xe8\xa3\x8f\xb4\x24\
\xc1\x78\x3c\xc6\xe1\xe1\xa1\x96\x17\xa0\xbb\x8c\x00\xa0\x5a\xad\
\x42\x4a\x99\x61\x94\xcc\xac\x36\x20\x15\xed\x94\x52\xa2\xd3\xe9\
\x60\xb1\x58\xa0\x52\xa9\x40\x08\xa1\x63\x96\x82\x20\xd0\x25\x7c\
\x1c\xc7\xd1\x99\x81\x40\x1a\x9c\x6d\xc6\x40\x31\xdb\x90\xc7\x02\
\xa4\xae\x53\x9e\x5b\x82\x4c\x02\x04\x73\xb1\x1f\x8f\xc7\x5a\x16\
\x82\xe7\x87\x63\x64\x02\x8f\x52\xa9\xa4\xd9\x33\xb6\xcb\x7e\x31\
\x08\x5d\x4a\x99\x29\xaa\x6d\x4a\x24\xd0\xc5\x57\x2a\x95\x74\xf0\
\x3a\x3f\x23\xd8\x34\x81\x98\xb9\x0f\x93\x85\x22\xab\xc7\x71\x37\
\x99\x3a\x1e\x03\x8f\xc3\x04\x7a\x04\xb1\xd4\x07\xcb\xab\xc6\x13\
\xf8\x58\x96\xad\x99\x2e\x21\x04\x46\xc3\x31\x16\xd1\x42\x9f\x77\
\x8e\x8f\xe7\x79\xd8\xd9\xb9\x85\xc9\x64\x0c\x21\x00\xcf\xa3\xda\
\xfb\x02\xd3\x69\x0c\x29\xb3\xf1\x69\xd3\x69\x1a\xff\xc6\x3f\xdb\
\xb6\xe1\x78\x3e\x84\x95\x08\xbe\xd2\x7d\x98\x5c\xdf\xb0\x2c\x40\
\xe2\xfc\x7c\x11\x99\x26\x80\x2c\xdf\xe4\xfc\x39\x60\xa5\x7b\x7c\
\x8d\xef\xf3\x9f\x9f\x72\x11\xe6\xed\x3a\xd9\xa9\x75\x6c\x15\x66\
\xea\xbc\x89\x74\xdd\x36\xbe\x4b\x76\xe5\xa6\xf4\xe3\x5d\xb1\x73\
\x17\xb5\x3f\xb2\xf1\x5b\xe5\x5e\x58\xb5\x9d\xab\xb2\xeb\x98\x63\
\xbe\x0b\x10\x79\x9e\xe5\xcf\x8a\x06\x0a\xe0\x02\x20\x10\xc7\x2a\
\x46\xc7\xf7\x4a\x10\x25\x81\xde\x70\x80\xf9\x7c\x8e\x9d\x5b\xb7\
\xf0\xf8\xf1\x63\xfc\x7f\xff\xcf\xff\x8b\x5e\xaf\x87\x0f\xf6\xef\
\x62\x6b\x6b\x4b\x4b\x25\xc4\x86\x1b\x6b\x3e\x9f\xc3\x75\x1d\x38\
\xb6\xa3\x63\x96\xda\xed\x36\x06\x83\x01\xc2\x30\xd4\xf1\x44\x8c\
\x9b\x62\xcc\xce\x68\x34\xc2\xd6\xd6\x96\xd6\x78\x6a\x36\x9b\x1a\
\x20\x50\x1f\xab\xd3\xe9\xa0\x52\xa9\x60\x34\x1a\x69\x41\x53\xdb\
\xb6\x31\x1c\x0e\xf5\x75\xc7\xba\x89\x51\x14\x69\xed\x2d\x96\xee\
\xa1\xdb\xc9\xac\xdd\x47\x9d\x29\xf3\xbd\x10\x02\xb5\x5a\x2d\x03\
\x90\x80\x94\x11\x62\x1c\x96\x09\x5a\x08\xce\x6c\xdb\x86\xef\xfb\
\x1a\x3c\xe6\xd9\x2e\x8e\x13\xe5\x1e\x98\x51\x69\xdb\x36\x3a\x9d\
\x0e\x0e\x0f\x0f\x33\x8c\x13\xfb\x6a\xaa\xc4\x9b\x46\x80\x53\xad\
\x56\xb5\x0b\x91\x00\x8c\xee\x4b\x06\xf8\x73\xbf\xd4\xf5\x22\x4b\
\x69\x02\x22\xf3\x78\xe8\x32\x25\x38\x66\x7f\x08\xd0\xf8\x9e\x6e\
\x46\x82\x56\x53\xed\x3f\xcd\xae\x74\x60\x59\x29\x53\x28\x21\xf5\
\x58\xd0\x75\xd9\x68\x6c\xe1\xde\xbd\x0f\xf0\xe1\x87\x0f\xd1\x6a\
\x1d\x25\x6e\xc3\x79\x02\xaa\xad\xcc\x7b\x73\x1c\xe6\x73\x0b\xb3\
\x99\xad\x63\xb1\x6c\xdb\x86\xeb\x2f\x32\xc9\x07\xa6\x36\x18\xf7\
\x6b\x4a\x49\x6c\xc2\xd6\x05\x46\x9b\x00\x57\x52\x16\xc4\x60\x71\
\x83\x3c\x2d\xb9\x8a\x71\x70\xcc\x36\xf2\xb6\xce\xc2\x66\xa2\xcc\
\xf3\xdc\x93\xeb\xb6\x91\xff\xbe\xe8\xf3\xcb\xda\xa6\x80\xd0\x59\
\x0c\xdd\x55\xb0\x64\x57\xd9\xc6\x45\xf7\xb1\x2e\x53\x6a\x8e\x59\
\xd1\x35\xfd\x2e\xd9\xa6\x16\xf4\x3c\x33\x7b\x59\xb6\x69\x53\xfd\
\xa1\x9d\x35\xdf\xac\xb2\xef\xf3\x26\xbd\x8b\xb0\x58\xeb\xec\xf3\
\x3c\x56\x70\xe9\x31\x68\x32\x2c\xf1\x10\x24\x7d\x33\x63\xb0\xd4\
\x13\x7b\xda\x6f\xc7\xb2\x11\x2f\x22\x38\xae\x83\x87\x0f\x1e\xe0\
\xf9\xbd\x7b\xe8\xf5\x7a\xb0\x3e\xb8\x87\x0f\x3f\xfc\x10\x2f\x5f\
\xbe\x44\xb7\xdb\x45\x94\x2c\xf2\x64\xb3\x3c\xd7\xd3\x8c\x4c\xa7\
\xd3\xd1\xee\x9c\x30\x0c\x35\x0b\xd4\xe9\x74\xd0\xeb\xf5\x32\xf1\
\x35\x41\x10\x60\xb1\x58\xa0\xd5\x6a\xe9\xf7\x2f\x5e\xbc\xc0\x64\
\x32\x41\xb3\xd9\xc4\xf1\xf1\xb1\x66\xb8\xe2\x38\xd6\x81\xec\x5c\
\xe8\xe9\x46\xaa\xd5\x6a\x38\x3c\x3c\x44\xa7\xd3\xd1\x4c\x0b\x81\
\x1c\x5d\x92\xbe\xef\x23\x0c\x43\xad\x00\x0f\xa4\x99\x75\x0c\xee\
\x0e\xc3\x10\xed\x76\x1b\x52\xaa\x42\xd8\xe5\x72\x59\x8b\x73\x52\
\xf3\x69\x34\x1a\xe9\x36\xa5\x94\x3a\x43\x90\x82\x9b\x04\x0f\x26\
\x40\x22\xe8\x08\x82\x00\x96\x65\xe9\x02\xd7\x74\x7f\x9a\x32\x0a\
\xbc\x87\xcc\x42\xc9\x00\x32\x3a\x57\x8c\x3f\x23\x03\x64\x96\xc7\
\xd1\x8c\x4e\x52\x4b\x90\x35\x1f\xe9\x9e\x35\x19\x37\xf6\xdf\x54\
\xc4\x37\x8b\x49\x9b\xe5\x6d\xcc\xf9\x8e\xe0\x92\xac\x9e\xe7\x79\
\xba\x94\x50\x7a\x0f\xa4\x6e\x41\x05\x5a\x55\xf9\x1b\x02\xe4\x7a\
\xbd\x8e\xd9\x7c\xa6\x41\xb8\x10\x40\x14\x2d\x30\x9b\xcf\x61\x5b\
\x16\x5c\xc6\x87\xc5\x71\x86\x53\x92\x52\x22\x8e\xe2\x44\x28\x37\
\xc2\x62\x61\xc3\xb2\x6c\x2c\x64\xea\xca\x34\xcb\x16\xd1\xed\xc9\
\xbe\x92\x8d\xd3\xf7\x85\x79\xbf\x0a\xa1\xee\x8b\x35\x6d\xd9\x1c\
\xb0\xce\x3d\xbb\xce\x5c\xe4\xe4\x3f\x3c\x0b\x1c\xad\x62\x17\xf9\
\xdd\xb2\x0e\x17\x2d\x02\xab\xb6\x6f\x1e\xc7\x45\x17\x94\x55\xf7\
\xb1\xcc\x36\xe5\x32\x5b\x76\x11\xac\x0b\x56\xcf\xdb\xcf\x26\x58\
\x9f\x4d\xb6\x71\x99\x05\xd0\x8c\x01\x30\xdb\x35\x41\xe9\x75\x30\
\x26\xab\x3c\x00\x9c\x67\x9b\xda\xe6\x32\xdb\x5f\xf6\x77\x17\xb5\
\xa2\xc9\x2e\x3f\xa6\x45\xc0\x66\x95\x36\xce\x03\x47\xcb\xda\x38\
\xaf\xed\xfc\xb6\xe7\x6d\x23\x72\x3e\x41\x1e\x9d\x40\xea\x2a\xb1\
\x84\x85\xd8\x58\xcc\x2d\xa1\x44\x50\xe3\x45\x84\x7a\xb5\x86\x4f\
\x3e\xf9\x04\x4f\x9e\x3c\xc1\x64\x32\xc1\x87\x1f\x7e\x88\xe9\x74\
\x8a\x97\x2f\x5f\xc2\xb1\x6d\x44\x89\x6b\xca\xf3\x3c\x40\x02\xf3\
\x44\xb1\x3c\x8e\x63\xed\xae\x63\x8d\xbd\x4a\xa5\xa2\x17\x70\x1a\
\x5d\x54\x64\x43\x58\x3e\x87\x40\xa5\x5c\x2e\x63\x36\x9b\xe9\x05\
\x5c\x08\x81\xc1\x60\x80\x7e\xbf\x8f\xad\xad\x2d\x78\x9e\x87\x6e\
\xb7\x0b\x00\x08\x82\x00\x61\x18\xea\x60\x7a\xba\xe0\x4c\xc1\x4f\
\xca\x30\xd0\x45\x47\xb7\x1a\x17\x65\xc6\x9f\x11\x14\x95\xcb\x65\
\x54\x2a\x15\xed\xa6\x1b\x0e\x87\x18\x0c\x06\x3a\x8e\x88\x46\x16\
\x89\x66\xea\x6b\x99\x6e\xd4\x38\x8e\xd1\xed\x76\xd1\x6a\xb5\x32\
\x31\x68\xdc\x9e\xcc\x19\xd9\x32\x9a\xd9\x06\xd9\x31\xb2\x4b\x1c\
\x67\x82\x33\x1e\xef\x6c\x36\xd3\xee\x39\x32\x4e\x26\x1b\xc7\xf6\
\xb8\x1d\x41\x26\x81\x95\xb9\x5f\x33\x0e\xcd\x74\x67\xd2\xb8\x5f\
\xba\x79\x09\x18\x91\x88\x7d\xd3\xf5\xb8\x58\x44\x19\x26\xb1\x52\
\xa9\xe0\xf9\x8b\x17\x70\x3d\x07\xa3\xd1\x08\xb6\x63\x23\x96\x31\
\x2c\x4b\xc0\xb2\x2d\xc8\xa4\x16\x21\x84\x16\x5e\xe0\xd5\x0e\x20\
\x49\xd6\x88\x81\x58\xc6\x10\x22\x42\x2c\xd2\x2b\x9c\x20\x8a\xb1\
\x80\x66\xfc\x1f\x03\xf7\x19\x87\xc6\x73\x95\xdc\x40\xa7\xee\x29\
\x5a\x7e\xdb\x22\x92\x25\x7f\x1f\x2e\xbb\x67\xd7\x9d\x7b\xf3\xbf\
\xdb\x28\x0f\x97\x45\xc5\xa9\x5d\x74\xa1\xcc\x0f\xc8\x55\xb3\x0f\
\x67\x4d\xe0\xdf\xa5\x7b\x6e\xdd\x49\xff\xbb\xb4\x4d\xb0\x60\xe6\
\xeb\x8b\x8e\xfb\x32\x00\xb5\xce\x8d\x73\x1d\xb6\x0a\xd0\x7b\x17\
\x59\xb7\x4d\xd8\x26\x9f\x24\xcf\xda\xfe\xbc\x76\x56\x62\xa1\x36\
\x60\xe6\x59\x96\x12\x59\x49\xe6\x04\x50\xa9\x85\x45\xaf\x64\xfa\
\xfa\xd9\xdf\xdf\x47\xbb\xdd\xc6\x62\xb1\xc0\xee\xee\x2e\xda\xed\
\xb6\x12\x03\x4d\x00\x05\xdd\x7e\x8b\xf9\x1c\x48\x18\x84\x20\x08\
\xb4\xa8\x67\xbf\xdf\xd7\x00\x84\xa0\xa5\x5e\xaf\x6b\x70\x45\xc0\
\x60\xc6\x46\x71\x61\x67\x26\x1f\x41\x58\x18\x86\x1a\xb0\x51\xea\
\xa0\xdf\xef\x63\x38\x1c\x6a\xb7\x62\x1c\xc7\xda\x4d\xa7\x0e\x2f\
\x15\xb2\x36\x19\x37\x06\x95\x93\x69\x23\xab\x36\x9d\x4e\x11\x86\
\xa1\x66\xa2\xfa\xfd\xbe\x66\x6c\xa8\x8e\x6e\x06\x88\x93\xf1\x99\
\x4c\x26\x1a\xa8\x00\xd0\x4c\x13\x19\x1c\xb2\x5c\x0c\xaa\xcf\x07\
\xad\x9b\x81\xe7\x8e\xe3\x60\x7f\x7f\x5f\xd7\x7c\xa4\xea\x3a\x59\
\x33\x02\x21\x33\xf8\xdd\x2c\xdc\x6c\x16\x58\x26\x5b\xc7\xf3\x24\
\xa5\xd4\x4c\x23\x01\x2c\xf5\xc0\xe8\x6e\x33\xdb\x30\x6b\x1f\x02\
\xd0\x6c\x96\xf9\x30\xc9\xf3\x41\xc0\xc6\xdf\x38\x8e\x0b\xdf\x2f\
\xeb\xec\x46\xdb\xb2\xe1\xb9\x4a\x2a\xa2\xd1\x68\x60\x3a\x9d\x62\
\xab\xb1\x85\xc7\x8f\x7f\xa4\x81\x79\x7e\x6e\xce\x3f\xbc\xf2\x73\
\x5a\xaa\x6c\x2f\x31\x9b\x4e\x12\xec\xa5\xae\x63\xad\xef\x65\x3b\
\xb0\x12\x77\x63\x54\xf2\xe1\x95\x3c\x5d\xf1\x40\x5d\x07\x02\x10\
\x42\x69\xa0\x8a\xcc\xdd\x71\x29\x3b\xeb\x81\xe8\xa2\x6d\xd0\x36\
\x0e\xb0\x4c\xdb\x84\x4b\xa6\x08\x75\x6e\x82\x15\x58\xb6\x8f\xa2\
\xf7\x45\xfd\x58\x95\x89\xb9\x6a\xb7\xdb\xa6\x00\xdf\x75\x01\xc7\
\x75\x16\x33\xf3\x66\x5d\x76\xe3\x5e\x45\x1f\x36\x69\xd7\xb1\xaf\
\xeb\x3a\x9e\x4d\xec\x67\xd5\x36\xce\x02\x35\xab\x82\xad\xab\x6e\
\x63\xe3\x26\x8d\xbf\xe4\xbd\x00\x52\x66\x8b\xe0\x0a\xa9\xbb\x90\
\x56\xad\x56\x71\xff\xfe\x7d\x74\x4f\x3a\xb8\x75\xeb\x16\xee\xde\
\xbd\xab\xea\x0a\xf6\x7a\x88\x16\x0b\x4c\x12\x49\x80\xb2\x5f\x86\
\x97\x2c\xd0\x61\x18\x6a\x30\xc3\xb8\x24\xdf\xf7\x75\xc9\x16\xba\
\xf8\xc8\x24\x30\x83\xaf\x5a\xad\xa2\x56\xab\x65\x6a\x1a\x9a\x35\
\x09\x19\xe7\x43\x10\x65\x02\x8b\xd1\x68\xa4\x6b\x22\x02\xc8\xb0\
\x2e\xac\x83\x27\x13\xa6\x6e\x3c\x1e\x6b\x66\x83\xf1\x3a\xbe\xef\
\x6b\x8d\x2c\xc6\x36\xf5\xfb\xfd\x8c\x7c\x02\x80\x4c\xb9\x19\x5d\
\x2c\x3b\x01\x7e\xac\x23\xd8\x6e\xb7\x35\x73\x44\x80\x34\x9f\xcf\
\x75\x09\x21\x00\x99\x5a\x83\xa6\x0b\x0b\x80\x3e\x4e\x02\x2c\x32\
\x66\x8c\x79\x52\xa7\x4e\x09\x8f\x9a\x60\x27\xaf\x3e\x4f\x49\x0d\
\xc7\x71\x32\xdb\x12\xf4\x95\xcb\x65\xcd\xe4\xb1\xce\x23\x03\xd7\
\x09\xde\xc8\x48\xf1\xf8\xf3\x2e\x4f\xd6\x6b\x64\xdb\x66\xf2\x01\
\x7f\x4f\x06\x32\x8e\x25\x1c\x5b\xa9\xf1\xd7\xeb\x75\x74\xbb\x5d\
\xfc\xf0\x87\x9f\xe0\xf1\xe3\xc7\x18\x8f\x47\x58\x44\x8b\xcc\x7a\
\x51\x94\x75\x09\x9c\x71\x3f\xe5\x1e\x2a\x63\x21\x10\x5b\x16\x22\
\x6b\x9e\xf6\x2b\x8a\x10\x2d\xe6\x40\x1c\x43\x26\x60\x59\x27\x6a\
\x88\x24\x18\x7e\x49\x89\xbd\xcc\xbe\x8a\x6e\xb3\x82\xfe\x5d\x14\
\x64\x15\x3d\x20\x9b\xef\xaf\x0c\x60\x15\xb1\x58\xab\x3c\xad\x2f\
\xfb\xfd\xb2\xfd\x5c\xd4\xf2\x60\xad\x08\x64\xe5\xfb\x51\x04\xf6\
\xce\xb2\x4d\xb9\x08\x97\xed\xcf\xbc\x69\x2f\x6b\x9b\xec\xeb\x59\
\xb6\xce\x3e\x8a\xc0\xd5\x2a\x6d\xac\x32\x66\xeb\xf6\xe5\xbb\xb4\
\x75\x99\x9a\xab\xb4\xeb\x04\x59\x45\xdb\x2e\x7b\xf8\x59\xa7\xed\
\x4d\xb5\x01\x60\x53\x0f\xd1\xa7\xcc\x74\x0f\xea\xcf\x0a\xee\x51\
\xf3\x1e\x69\x34\x1a\xe8\x75\xba\xf0\x7d\x5f\x2b\xb2\x67\x5c\x45\
\x52\xc2\xf3\x5c\xf8\x25\x5f\x33\x43\x64\x9f\x80\x34\x13\xcf\xcc\
\x94\x63\xfc\x92\xe9\xc2\x0b\xc3\x50\x0b\x7f\x92\x69\x22\x00\x30\
\x85\x35\xa5\x94\x5a\x8f\x8a\xfb\x20\x33\x44\x99\x83\xfc\x82\x4c\
\x96\x88\x80\xcb\x04\x58\x04\x00\x0c\xb0\xaf\xd5\x6a\xda\xa5\x67\
\x32\x60\x2c\xe2\x9c\x0f\x60\xaf\x56\xab\xd8\xdd\xdd\xd5\xae\xcd\
\x56\xab\x55\x08\x36\x78\xbc\xf9\x1a\x82\x45\xc1\xec\x54\x9b\x27\
\xd8\x34\xdb\x30\x83\xd0\xc9\x64\x99\x01\xdd\x45\x25\x71\xe8\x32\
\x63\x7f\x78\x0c\xec\x33\x7f\x6b\x6e\x4f\x16\x8b\x63\x68\xb2\x64\
\x66\x30\xb9\x79\xad\xd0\xa5\x68\xea\x78\x71\x9c\xad\xe4\xf0\x78\
\xfc\xf3\xf9\x5c\x2b\xf1\xb7\xde\xbe\x82\x44\xba\xef\xfc\xb5\xb8\
\xd2\xba\x2d\x73\xef\x71\x5a\xc4\x9c\x71\x6a\xe6\x58\x48\xa9\x98\
\x2c\xc1\x73\x20\x63\xc5\xec\x2e\xb9\x97\x2f\x32\x6f\x5e\xf6\x81\
\x2a\xff\xfb\x8d\x03\xac\xa2\x49\xe0\x22\x8b\xf7\x45\x18\xa3\x8b\
\xd8\x79\xfb\x59\x85\xdd\xba\x4a\x3b\x6f\xdc\xcc\x9b\xe4\xfb\x62\
\x67\x1d\xf3\xaa\x20\xee\xac\xf3\x64\x96\x89\x78\x6f\x37\xd7\xd6\
\x65\x9d\xce\x7b\x62\xbd\xca\x36\x2e\x6b\x82\xe4\x54\xf1\xce\xd3\
\xb8\xac\xe4\xba\xb5\x64\x12\xdb\x22\x55\x7f\x7a\xbd\x1e\xee\xdc\
\xb9\x83\xf6\x71\x0b\xae\xeb\xe2\xd6\xad\x5b\xf8\xe0\x83\x0f\xf0\
\xd5\x1f\xfe\x80\xe9\x64\x02\x4f\xbb\xa0\x66\x88\x12\x4d\x23\x53\
\xc3\xa9\x52\xa9\xe8\x05\x8c\xa0\x88\xc2\xa0\xbe\xef\x6b\x85\xf1\
\xed\xed\x6d\x8c\xc7\x63\xbc\x7e\xfd\x5a\xb3\x41\xad\x56\x0b\x93\
\xc9\x04\x41\x10\xa0\x52\xa9\x20\x08\x82\x53\x20\x8b\x0b\x26\x99\
\x2f\x29\x65\x52\xe3\xae\x84\x20\x08\x20\x44\xaa\x1e\xef\xfb\xbe\
\x76\x99\xe5\xb5\x9e\xa6\xd3\xa9\x8e\xdf\x02\x14\xd8\xa3\x91\xf5\
\xa2\xfc\x01\xc1\x05\x03\xbb\x9b\xcd\x26\x82\x20\xc0\x70\x38\x44\
\xab\xd5\xd2\xf1\x5a\x04\x96\x94\x8d\x88\xa2\x08\x9d\x4e\x27\x53\
\x34\xd9\x04\x3c\x26\xa8\x79\xf3\xe6\x4d\x26\x66\x8a\x2e\x38\x82\
\x29\xdb\xb6\x71\xf7\xee\x5d\xcd\x56\x31\x90\xdc\x74\xe9\xd1\x35\
\x68\x0a\x9a\x9a\xb2\x0a\x8b\xc5\x42\xd7\x98\xe4\x38\x91\xcd\x22\
\x50\x36\x81\x5f\x5e\xe6\x01\x80\xee\x1f\xd9\x36\xb3\xf6\xa2\x94\
\xd0\x2c\x1e\xeb\x09\xf6\x7b\x03\x4c\x67\x53\x0d\x10\x3f\xf9\xe4\
\x13\x1d\x1b\xe7\xb8\xca\x3d\x67\x02\x1f\x91\xb8\xec\xcc\x5b\xc3\
\xb2\xcc\x75\x93\x00\x2a\xcb\x3a\x99\x60\xc8\x04\x8a\x40\x9a\x85\
\xc9\xf8\x33\x02\x6c\xcb\xb6\xe1\x78\x1e\x2c\xdb\xc9\x00\xe4\xb3\
\x1e\x9a\x96\xcd\xf7\x79\xd2\xe7\x32\xf7\x76\x51\x3b\x1b\x05\x58\
\xab\xd0\x74\xab\x32\x3f\xdc\xf6\x22\x6c\xc3\xba\xee\xbb\x65\xfb\
\x39\x8f\xdd\xba\x0e\xcb\xbb\xc9\x4c\x5b\x07\xa9\xdf\x14\x5b\xf7\
\xa9\xa2\xc8\x4d\xb8\x0e\x7d\x7b\xd3\xc7\x6c\x15\x37\x7a\xfe\xe9\
\xae\xc8\xbe\xaf\x0c\x56\xd1\x6f\x6e\x14\xd0\xda\x00\x50\x17\x2b\
\x0c\x87\x94\xa7\x55\x7f\xcc\x7b\x83\x4c\x53\xbd\x5e\xd7\x6c\xcd\
\xc3\x87\x0f\xb1\xb7\xb7\xa7\x00\x96\xe7\x25\x3a\x4c\x13\x4c\xa5\
\x5a\x84\x99\x15\xc6\xa0\x71\x96\xd0\xa1\xbb\x8c\xb1\x4a\x8e\xe3\
\xe8\x98\x22\x82\x8b\x57\xaf\x5e\xe9\x80\x75\x0a\x8f\xd2\x55\x57\
\xad\x56\x11\x04\x81\x5e\xb0\x99\x81\xd8\xef\xf7\xd1\x68\x34\x74\
\x1c\x15\x8f\xc1\x14\x1e\xa5\x96\x94\xc9\xa4\x31\x36\xcc\x94\x23\
\x00\x80\xc1\x60\xa0\x4b\xe0\x98\xd9\x7d\x66\x7c\x15\x33\xf4\xc6\
\xe3\x31\x9e\x3e\x7d\xaa\xa5\x1f\xa4\x94\xa8\xd5\x6a\xa7\xdc\x79\
\x9c\x33\x08\x8e\xcc\x32\x2f\xdc\xb7\x09\x5e\x4c\xb6\xca\x54\x3e\
\x37\xe7\x29\xdf\xf7\x31\x4b\x12\x0b\xc8\xe0\x99\x42\xab\x00\x32\
\xe2\x9e\x74\x1b\xf2\x8f\xb1\x53\x3c\xd6\x34\xdb\x4f\x99\xc9\xf2\
\x98\x19\x79\xbc\x2e\x08\x4a\xd3\x6b\x60\xaa\x1f\xcc\xe9\xae\x8c\
\x63\xa9\x65\x23\xe6\x33\xe5\x02\x74\x6c\x07\x83\xc1\x00\x3f\xfc\
\xe1\x0f\x71\xf7\xee\x5d\x9c\x9c\x9c\x24\xc7\x94\x8d\xbd\xca\x5f\
\x8b\x67\x83\x99\x05\x14\xc8\x12\x85\x4c\x16\x8d\x31\x64\xbc\xe6\
\x08\x5e\xa9\x4a\xef\x95\xfc\x04\x64\xd9\x59\xf7\x21\x70\x6a\x2d\
\xcf\x13\x3c\xe6\xf7\x45\xeb\xc1\x45\xc8\xa0\x65\xef\xaf\x14\x60\
\x99\x9d\x5f\x87\x31\xb8\x89\xec\xd5\x79\x17\xcf\x55\xd9\x2a\xb4\
\xeb\x4d\x62\x63\xce\xbb\x38\x57\x05\x58\x67\xdd\x24\xab\xde\x00\
\x67\xdd\xe8\xd7\x35\x66\x9b\x18\x8f\xef\x93\xad\x02\x90\xcf\x7a\
\x98\x39\x0b\x34\x17\x6d\xbf\x6c\x9b\x4d\xb4\xb1\x69\x13\x12\x30\
\x45\x16\x55\x50\x3b\x54\x29\x13\xca\x2a\xe6\x00\x39\x5f\x57\xab\
\x55\xb4\x5a\x2d\xed\xb6\xb3\x2c\x0b\xf7\xef\xdf\xc7\x27\x9f\x7c\
\x82\xd6\xf1\xb1\x06\x4c\x32\x8e\x01\xa9\xc0\x07\x83\xdc\x85\x50\
\xd9\x6c\xb5\x5a\x2d\xa3\x61\x45\x16\xc9\x04\x38\xbe\xef\x63\x6b\
\x6b\x4b\x03\x0b\xb2\x2b\xf5\x7a\x5d\x97\xd8\x79\xf9\xf2\xa5\xbe\
\x5f\xa9\xf8\x4e\x50\x74\x70\x70\x80\xed\xed\x6d\xed\x22\x9b\x4c\
\x26\x9a\x15\xe2\x98\x4e\x26\x13\x0c\x87\x43\x0d\x56\x08\x20\xc8\
\xde\x10\x14\x10\xd0\x29\xd6\x25\xd1\x09\x4b\x74\xa4\x00\x68\xa0\
\x42\x50\x42\x06\xc8\x14\x0f\xa5\xe6\x14\x01\x4f\xb9\x5c\x46\xad\
\x56\x83\xef\xfb\xba\xbc\x0f\x59\x2d\xea\x55\x99\x81\xe6\xd4\x97\
\xca\x33\x48\x00\xb4\x44\x82\xc9\x72\xe5\x8b\x2d\xe7\x5d\x1c\x3d\
\xb3\x4f\x00\x00\x20\x00\x49\x44\x41\x54\x8e\xcc\xc2\xa4\xab\x53\
\x08\xa1\x15\xf6\x59\xb7\x91\xfd\x30\x6b\x2b\x32\x58\xdf\x74\x75\
\x02\xe9\xfd\x96\x07\x18\xa6\x00\xad\x10\x16\xe2\x38\xd2\xd7\x41\
\x1c\x49\x5d\xd6\xe7\xf0\xf0\x10\x3f\xff\xf9\xcf\x51\xad\x56\x71\
\xd2\x39\x86\x63\xf4\x97\xed\x9a\x59\x93\x7c\x9f\x37\xd3\x1d\x6c\
\x19\x0e\xf0\x65\xf7\x61\x1c\x2d\x32\xdf\x2d\xe6\xc0\x7c\x36\xc5\
\x7c\x36\x85\xb0\x2c\xb8\xa5\x29\xdc\xc4\xd5\x6d\x6a\x6c\x99\x0f\
\xac\x45\xf7\x89\xf9\x7a\x95\x39\x60\xdd\x75\x22\xdf\xc6\xc6\x01\
\xd6\xb2\x89\xc7\xf4\x19\xaf\x62\xd7\xb5\x08\xbe\x0b\x00\xc6\x3c\
\xd9\xf9\x8b\xfb\x26\x2d\xd0\x9b\xec\x4b\xfe\x02\xbf\x08\x48\xe7\
\xef\x97\x8d\xd9\x77\x7d\x5e\x69\xeb\x00\x8e\x3f\x66\xdb\x14\x78\
\xbf\xea\x36\xd6\x35\x99\x9c\x5e\xc1\xd7\xa7\x9a\x97\x4b\xd9\x32\
\x5e\x1b\xdb\x5b\xdb\x78\xf2\xe4\x09\xee\xdf\xbf\x8f\x45\x1c\x01\
\x12\xd8\xde\xde\xc6\xfd\x07\x0f\xf0\xeb\x5f\xff\x1a\x68\x29\xd7\
\xe1\x2c\x09\x68\x1f\x8d\x46\x78\xfd\xfa\x35\xca\xe5\xb2\x2e\xdc\
\xfc\xf2\xe5\x4b\xed\x0e\xac\x56\xab\x1a\xac\x91\x5d\xa1\x7e\x15\
\xc1\xc6\xde\xde\x1e\x46\xa3\x11\x0e\x0e\x0e\x30\x9f\xcf\x51\xab\
\xd5\x10\x45\x11\x86\xc3\xa1\x56\x6c\x67\x00\xfd\xee\xee\x2e\x2c\
\xcb\xc2\xd3\xa7\x4f\x75\xdc\x16\x81\x0f\x00\xed\x6e\x24\xe0\x33\
\x0b\x40\xd7\x6a\x35\x04\x41\xa0\x03\xd3\x09\xdc\xc6\xe3\x31\x82\
\x20\xc0\xed\xdb\xb7\x75\x5c\x17\x41\x0c\x81\x1b\x41\x04\xcf\x1b\
\x5d\x61\xe3\xf1\x18\xdb\xdb\xdb\x9a\x21\x71\x5d\x17\xcd\x66\x13\
\x1f\x7f\xfc\x31\x6a\xb5\x1a\x5a\xad\x16\x5e\xbe\x7c\x09\x00\xda\
\x4d\x45\xb9\x08\x53\x77\x8a\x40\x86\xaf\x4d\xd0\x43\xa0\xc3\x60\
\x7d\xba\x44\xcd\xc4\x02\x33\xdb\xd1\x04\xb5\x66\x89\x1d\xfe\x51\
\x07\xcb\x64\xfa\x98\x90\x40\x09\x09\x02\x62\xce\x97\xa6\x98\x27\
\x99\x4a\xdf\xf7\x33\xc0\x6e\x3e\x5f\xe8\xb6\xba\xdd\x2e\x2c\x61\
\xc3\xf3\x4a\x6a\x1c\xda\x47\xf8\xf4\xc7\x3f\x02\x20\x11\xc7\x0b\
\xc0\xb5\x20\x44\x76\x2e\xcd\xcf\xb1\x66\xd0\xbb\xc9\xe6\xa5\x00\
\x6c\x89\xb6\x95\x61\x26\x5e\xe0\xef\xb5\xac\x84\x10\xb0\xe7\x73\
\x38\xb3\x19\x1c\xc7\x85\x47\x95\xf8\x64\x1c\x2d\x21\xd4\x36\x96\
\x05\xcd\xb7\x09\x71\xea\x7f\x32\x8e\xec\xb7\xbe\xdb\x36\xc8\xd2\
\x3b\xf9\x0f\xcc\x83\x32\x4d\xf0\x71\x0a\xe6\xff\x40\x76\xb3\xe5\
\x0b\x41\x72\xcc\xe7\x32\xea\xd9\xef\xc9\x58\xac\xb6\x0f\x73\x9b\
\xf4\x84\x17\xf5\x33\xbf\x60\x33\x1b\x22\x7f\xcc\xd9\x36\x4e\xf7\
\xd5\x3e\xb5\x6d\xfe\x82\x59\xe6\x7a\xe4\xdf\x2a\xee\x1f\x5a\xd1\
\xb6\x67\x81\xda\x8b\x58\x11\x95\xba\x0e\x30\xde\x84\x9d\xc5\x3c\
\xad\xfa\x7b\x93\xd2\xcf\x03\xaa\xbc\x20\xee\x77\x6d\x37\x05\x40\
\xad\x73\x2d\x9e\xd5\x46\xfe\x5e\x58\x77\xf2\x5a\x05\x04\xad\x0b\
\x94\x56\x65\x3f\xd7\x0d\x05\x28\x3a\xb6\x75\xaf\xab\x18\xe9\xef\
\x4c\xa9\x46\x99\xa4\x11\x5a\xb6\x0d\x91\x73\x67\x68\x1c\x26\x04\
\x22\x00\xad\xce\x09\x1a\xcd\x6d\x4c\xe6\x33\x44\x49\x2a\xa2\xe7\
\x97\xf0\x83\x4f\x7e\x88\x47\x3f\xfc\x21\x5a\xed\xb6\x72\x51\xcd\
\x66\x0a\x80\x89\xb4\x80\xf0\x70\x38\x44\xb9\x5c\xd6\x99\x79\x64\
\x02\xba\xdd\x2e\x16\x8b\x05\xb6\xb6\xb6\x20\xa5\x92\x0b\xa0\xeb\
\xf1\x37\xbf\xf9\x0d\x6c\xdb\xc6\xee\xee\x2e\x5a\xad\x16\xa2\x28\
\xc2\xab\x57\xaf\xf4\x62\xcf\xb6\x29\x9b\x00\xa8\xcc\xbe\xbd\xbd\
\x3d\xcc\xe7\x73\xf4\xfb\x7d\x54\x2a\x15\x94\x4a\x25\x1c\x1f\x1f\
\xeb\x6d\x08\xf0\xd8\x87\xd9\x6c\xa6\xeb\x2c\x9a\x59\x84\x42\xa8\
\xa0\xfe\x07\x0f\x1e\x60\x6b\x6b\x4b\xb3\x44\x14\x18\x25\x70\x01\
\x90\xe9\x0f\x95\xe6\x5d\xd7\xd5\xca\xf2\x64\x8a\x16\x8b\x05\xbe\
\xf9\xe6\x1b\x0c\x06\x03\x0c\x06\x03\x0d\x7a\x38\x8f\x70\x4e\x61\
\xa9\x1d\x00\x19\xb7\x14\x81\x0c\xd9\x24\xc6\x2c\x99\xba\x53\x41\
\x10\x68\xc0\x47\x00\x44\x97\xaa\x09\x8e\x58\x30\x9b\x60\xaa\xd7\
\xeb\x61\x30\x18\x68\xb7\x1e\xe5\x2f\x08\xfe\x78\xbc\x74\x79\x9a\
\x25\x8b\x08\x88\xab\xd5\x50\x03\xab\xc5\x22\x36\x62\xf2\x14\xe8\
\x89\x16\x12\x73\x39\x47\xc9\x13\x58\x44\x33\x3c\xfb\xe6\x29\x80\
\x18\x7b\x7b\x3b\x78\xf5\xea\x85\x72\x07\x2f\xa6\x98\x6b\x69\x31\
\x0b\x10\xc0\x3c\x92\x40\x14\x01\x10\x80\xb0\x0d\x81\x5c\xae\xe7\
\x89\xce\x96\x6d\x27\xd2\x23\x29\xc3\x75\xea\x4e\x31\xef\x3f\x70\
\xed\x4d\x81\x83\x4c\xfe\x89\xe6\x0b\x15\x4b\x68\x59\x98\x31\x79\
\xc0\x56\x19\x86\x36\x04\xa4\xa5\x8a\xa6\xc7\x02\xfa\xbd\x23\x2c\
\x08\x43\xab\x0c\xb6\xd0\xef\xb3\x8c\x9e\x30\xd6\x8a\x74\x8d\x37\
\xef\xbf\xf4\x1e\x17\xe9\x13\x12\x4e\xcf\x01\x67\x32\x58\x37\x81\
\xbd\x79\xd7\xec\x3c\xf7\xc3\x7b\x7b\x6f\xef\xed\x7a\x6d\x93\x4f\
\xa4\x97\xd9\xc7\xb9\x6d\x14\xb2\x57\xa9\x15\x3d\x4c\x65\xde\x5b\
\x69\xdc\x52\x2c\x25\x16\x32\x46\x10\x86\x78\xf4\x83\x47\x78\xfe\
\xfc\x39\x5e\x3c\x7f\xae\x5c\x68\xae\x8b\x6e\xa7\x83\xd1\x68\x84\
\x5b\xb7\x6e\x61\x67\x67\x07\xbe\xef\xe3\xc1\x83\x07\xf0\x7d\x1f\
\xfd\x7e\x5f\x2b\xad\x93\x69\xd9\xde\xde\xd6\x60\xe8\xde\xbd\x7b\
\x78\xfc\xf8\x31\xfa\xfd\x3e\x5a\xad\x96\x76\x6b\xed\xed\xed\x69\
\xb7\x9a\xa9\x17\xc5\x07\x49\x02\x88\x7e\xbf\xaf\x17\x33\x32\x4f\
\x80\x62\x5f\xba\xdd\xae\x8e\xd1\x1a\x0e\x87\x08\xc3\x10\xdb\xdb\
\xdb\x10\x42\xc9\x1d\x50\x21\x3e\x08\x02\x48\x29\xf1\xe6\xcd\x1b\
\xbc\x78\xf1\x42\xb3\x61\x0c\x88\x36\xdd\x92\x1c\x23\xc6\x3e\x11\
\xd8\x50\xca\x81\x6c\x5a\xb7\xdb\xcd\xc4\x40\x91\xe9\x31\x8b\x32\
\xb3\x3f\xbe\xef\x6b\xb0\x45\x75\x75\x6a\x55\xcd\xe7\x73\xf8\xbe\
\x8f\x9d\x9d\x1d\x38\x8e\x83\x57\xaf\x5e\x9d\xca\x20\x24\x93\x05\
\x20\xc3\xfa\x01\x69\x70\xb7\x19\xdf\x45\x57\x2b\xb7\xe7\x78\x12\
\xc8\xd1\xdd\xcb\x36\x4c\x31\xd2\x52\xa9\x84\x5a\xad\xa2\x8a\x5b\
\xdb\x80\x6d\xa5\xe5\x69\x4a\x25\x1f\x91\x1d\x2b\x37\xb4\x94\xa8\
\x06\x55\x94\xcb\x3e\x62\x19\x61\xb1\x98\xe1\xbf\xfc\x97\xff\x19\
\xfd\x7e\x17\x7e\xd9\x43\x2c\xd3\xb8\xaf\x75\x6d\xd3\x58\xc2\xd4\
\x27\x8b\x96\x64\x78\xf2\x7e\x31\x1f\xac\xb5\xcb\xd9\xb2\x60\x39\
\x36\x6c\xc7\xd6\x71\x5c\xa6\xb2\x3c\xef\x23\x82\x61\xd3\x8a\x1e\
\x1c\x8b\xde\x03\x80\xb3\x0c\x10\x5c\x47\x0c\xd4\xf7\xc9\x96\x8d\
\x59\x1e\xd1\x6e\x9a\x71\xda\x94\xad\xb2\x80\xbc\x2b\xd7\xc1\x32\
\xc6\x84\xc7\x70\xd3\xc6\xff\x3a\x00\xc0\x75\xda\xb2\x71\xbe\xee\
\x3e\x6e\x6a\xff\xe7\x31\x70\xab\x30\x74\x97\x71\x41\x14\x79\x15\
\xcc\x98\x96\x58\x4a\x08\x2b\x9b\x4d\x45\x97\x4a\x18\x86\xf8\xf1\
\x8f\x7f\x8c\x97\x2f\x5e\xe0\xe0\xdb\x6f\x11\x47\x11\x6c\xcb\x82\
\xed\x38\x5a\x07\xca\x75\x5d\x9c\x9c\x9c\xa0\x5c\x2e\xe3\xce\x9d\
\x3b\x60\xe1\x67\xba\xa9\x2c\xcb\xd2\xc0\xe6\xce\x9d\x3b\xf8\xf7\
\x7f\xff\x77\x34\x9b\x4d\xec\xec\xec\x60\x77\x77\x17\x51\x14\xa1\
\xd5\x6a\xe1\x4f\xff\xf4\x4f\x75\x20\x37\x63\xac\x08\xae\xc8\xb4\
\x90\x5d\x61\x80\xfd\x68\x34\xd2\x3a\x4d\x74\x73\x0d\x06\x03\x54\
\x2a\x15\xfc\xf4\xa7\x3f\xc5\xf6\xf6\x36\x26\x93\x09\x8e\x8e\x8e\
\x34\xf0\x99\xcf\xe7\x68\xb5\x5a\x08\x82\x40\x07\x5e\x37\x1a\x8d\
\x4c\xf0\xb9\x94\x52\x6b\x3b\x71\xf1\x24\x93\x44\xf0\x34\x1a\x8d\
\x20\x84\xd0\x72\x16\xd3\xe9\x34\xc3\x5c\x99\x65\x66\x18\x5c\xbd\
\xbd\xbd\x8d\x66\xb3\x09\x96\x03\x62\x36\x26\x81\x0d\xdb\x21\x98\
\x23\x90\x62\xdf\x98\x99\x48\xf0\x49\x96\x8b\xfb\x32\x03\xe5\x19\
\xe8\x4d\xb6\x8a\xef\xcd\x32\x3f\xf9\x6b\xc2\x74\xcf\x01\xd0\x31\
\x72\x14\x7b\x5d\x44\x0b\x40\x2e\x12\x20\xe1\xc2\x75\x4b\xb0\x2d\
\xa5\xde\x2e\xa5\x52\x9c\x2f\xf9\x1e\xc6\xe3\x11\x1e\x3d\x7a\x84\
\xbf\xfe\xeb\xbf\x46\xaf\xd7\xd1\xed\x9f\x5f\x85\x19\x30\xbd\x4c\
\xca\xb3\x2d\x32\xaf\x37\x35\xdf\x99\x49\x17\x67\x61\x18\xdd\x2b\
\xc3\x73\x04\x21\x60\x39\x36\x1c\xd7\x81\x65\x64\x7f\x6a\xa9\x0a\
\x03\xb0\x65\x7e\x77\x46\x7f\x8a\x5e\xaf\x14\x83\x75\x93\x62\x56\
\x6e\xf2\x42\x5f\x04\xac\x6e\xe2\x82\xbe\xaa\xdd\xe4\xb1\xfe\xbe\
\xd8\xf7\x0d\x5c\x5d\x87\x5d\xe4\x78\x8b\xc0\xd6\x2a\xd7\xf6\x26\
\x62\x33\x36\x1d\xdf\x51\x64\x42\x08\x24\xd1\x25\xa7\x1e\xf4\xc2\
\x30\x44\xb3\xd9\x44\x18\x86\x18\x27\x6e\x27\xcf\xf3\x30\x9e\xa7\
\x25\x69\x98\xbe\x4f\xd6\x83\x82\xa3\xcc\x4a\xa3\xab\x2b\x08\x02\
\xcd\x0e\xf5\x7a\x3d\x04\x41\x80\x20\x08\xd0\xe9\x74\x70\x74\x74\
\x94\x71\xab\x31\x1e\x89\xe0\x89\xd9\x82\x93\x24\xab\x91\x20\x82\
\x2e\x2f\x33\x58\x99\x99\x77\x47\x47\x47\x18\x0e\x87\x19\xd7\x1e\
\xdd\x60\x0c\xf6\x36\xe3\xac\xb8\x0f\x21\x54\x3d\xbb\x72\xb9\xac\
\x19\x31\x66\xd0\x71\x6c\x08\xc2\xc8\x12\xe5\x17\x54\x8e\xa5\xc9\
\x62\x30\x30\x7f\x36\x9b\xa1\xd3\xe9\xe8\x36\xcc\x50\x04\xb6\xcd\
\x38\x32\x1e\xa7\x19\xb6\xc0\xb6\xcd\xf8\x22\x53\x21\xdd\x94\xa7\
\x28\x62\x51\xcc\xf0\x07\xfe\x9e\xe7\xcf\x64\x60\x08\xba\x08\xea\
\x16\x51\x8c\xc5\x5c\x62\xb1\x88\x00\xd8\x70\x1c\x09\xdb\xb2\x61\
\xdb\xd0\x99\x98\x5e\xac\xce\xc3\x47\x1f\x7d\xa4\xc7\x77\x36\x4f\
\xc6\xfa\xaa\x84\xdf\x2e\x60\xf9\x60\xfa\x55\x1e\xa6\xf5\x7b\x4b\
\x20\x5e\xa8\xd4\x11\xcb\x08\xce\xe7\x78\xf1\x7a\x30\x59\x47\xb3\
\x34\x11\x90\xdc\x67\xf2\xec\x7b\xda\xc9\x77\xac\x08\x20\x14\x1d\
\xc0\x77\x65\x37\x09\xb0\x2c\x1b\xa3\x65\xec\x15\xcd\xfc\xfe\xa6\
\x1c\xcb\xb2\x58\xb1\x77\x11\x28\x2e\x73\xd1\xde\x54\xd7\xed\x4d\
\x01\x59\x9b\x6a\xa3\x08\xb8\x6c\xfa\x5a\x5f\xc7\x65\x57\xf4\x7a\
\x95\xeb\xf9\xbc\x36\x80\xec\x03\xfd\x3a\x4c\xd7\xb2\x6d\x96\xd9\
\xb2\x78\x36\xfe\xa9\x5a\x85\x69\x0c\x9c\x25\x54\x8d\xb8\x38\x8e\
\x11\x04\x01\x1e\x3d\x7a\x84\xaf\xfe\xf0\x15\xba\x9d\x0e\x86\x83\
\x81\x8a\xdf\x89\x62\xcc\xe6\x33\x04\x61\x88\x72\x10\x40\x00\xba\
\x64\x4e\xbd\x5e\xcf\x94\x91\xe9\xf7\xfb\x1a\xe4\x10\x7c\xd1\xad\
\x55\x2a\x95\x50\xad\x56\xd1\x6e\xb7\x75\xa0\x36\xd9\x22\x32\x56\
\x04\x4f\x04\x0c\x64\x73\x00\xe8\xc0\x76\xc6\x31\x91\xf5\x39\x3a\
\x3a\xd2\xba\x56\x5c\xec\x7c\xdf\x47\xbd\x5e\x47\xa7\xd3\xd1\xb1\
\x58\xa6\x28\x28\x05\x39\x1d\xc7\x41\xa5\x52\x41\xb9\x5c\xd6\x31\
\x56\xcc\x84\xa4\xc6\x97\x65\x59\x3a\x9e\x8a\x12\x08\x5c\x5c\x09\
\x8a\x08\xf8\x08\x0c\xbb\xdd\xae\x66\x90\x7a\xbd\x1e\x6a\xb5\x9a\
\xde\x96\x2e\x3b\x1e\x2f\xd9\x15\x82\x47\xb2\x4f\xf9\x7b\xc4\x74\
\x07\x9a\x00\x8b\x46\x85\x77\x53\xb6\x22\xad\x23\x08\xcd\x84\xd1\
\x58\xee\x47\xca\x54\xe8\x95\xca\xef\x22\x16\x90\x32\x4e\xe4\x2c\
\xd2\x42\xd1\x32\x71\xff\x0d\x06\x03\x04\xa1\x8a\x95\xfb\xc5\x2f\
\x7e\x81\x5e\xaf\x07\x21\x52\x30\xea\xda\x29\x27\xb3\x2c\xee\x38\
\x3f\xdf\xe6\xd7\xc4\x4d\x4c\x03\x45\x8c\x52\x1e\xe0\x16\xdd\x6f\
\xe9\x36\x80\x8c\x22\x2c\xa2\x85\x72\x17\x1a\x80\x8a\xa0\x8a\xe3\
\xca\x87\x80\xbc\x1b\xd1\xe8\xcd\xa9\x3e\xf0\xf5\x29\x06\x2b\x7f\
\xf2\x4d\x24\x78\x13\xd8\x8c\x9b\xd2\x0f\xd3\x96\x8d\x19\x5f\xe7\
\xb7\xbd\x89\x76\x53\xfb\x75\x11\x33\xaf\xd9\x8b\x2e\xae\xd7\x65\
\x37\x05\x18\x6d\xd2\x8a\x26\xd8\xab\x68\x7f\xdd\x6d\x8b\x9e\x70\
\x2f\xd3\xc6\x3a\xdb\x5c\x96\xc5\x2a\x5a\x30\xf4\x02\x07\x25\xf1\
\x20\x60\xa6\xca\x0b\xc4\x0b\x55\xd8\x59\x08\x81\xfd\xfd\x7d\xfc\
\xe4\x27\x3f\xc1\xb7\x6f\xde\xe0\x75\x52\x48\xb7\xe4\x2b\xf1\x4a\
\x09\x89\x5a\xbd\x06\x5b\x58\xba\x48\x32\x01\x82\x94\x52\x03\x2a\
\x66\xd2\x51\x3b\xab\x56\xab\x69\xd1\xce\x46\xa3\x91\xd1\xd0\x62\
\xc6\x1b\x59\xac\xf1\x78\xac\x81\x44\xb5\x5a\x3d\x55\x5b\xcf\x54\
\x7c\x27\xa0\xe1\x31\x9a\x41\xe2\xd4\xeb\x62\xdd\x3c\x66\xc9\x0d\
\x87\x43\x2d\x3d\xc1\x71\x21\xd3\xc6\x8c\x42\xb6\x4f\xf6\x8b\xc0\
\x8e\x6e\x3b\xfe\x26\xaf\x1e\x6e\x8e\x35\x63\xd2\x4c\x81\x67\x2e\
\xba\x66\x46\x64\xbd\x5e\x87\x94\x2a\x58\x7d\x38\x1c\x6a\x06\x8d\
\xe7\xd2\x2c\xca\xcc\xf6\x4d\xd7\xae\x59\x87\x91\xec\x94\xc9\xae\
\x99\x01\xd9\x66\xbc\x1b\x01\x2c\xc7\xda\x0c\xb6\x9f\x4e\x67\x10\
\x96\x84\xeb\x32\xf8\x3f\x39\x56\x2b\xbd\x4f\x27\x93\x09\x1a\xf5\
\x06\x7e\xf2\x93\x9f\x60\x7f\x7f\x1f\x4f\x9e\x3c\x41\xa5\x12\xa0\
\x1c\x94\x14\x38\xb4\x96\x5f\xbb\xf9\x79\x35\xbf\x0e\x6e\x7a\xdd\
\x5e\x86\x53\x56\x31\x19\x2b\xd9\x13\x55\x88\x3a\x75\x31\xe6\xd9\
\x2a\x2a\xdc\x33\x03\xd4\x0c\x82\xb7\x2c\x4b\xb3\xc6\xcb\xd6\x79\
\x67\x19\x7b\x75\x99\xce\x5f\xa5\x6d\xaa\x1f\x9b\x38\xd9\x45\x40\
\x6a\x9d\x45\xe5\xa6\x8c\x29\xb0\xfc\x62\xbd\xaa\x45\xf2\x2a\xed\
\xbc\x71\x5d\xc6\x2c\x7e\x17\x76\x93\x00\xd6\x55\x02\xa1\x4d\x8f\
\xf9\x3a\xec\x53\x51\x5f\xd6\x65\xb0\x8a\xda\x00\x4e\x87\xa4\x5c\
\x84\xc5\x3a\x6f\x2e\xca\x3f\x99\x03\x39\x5d\x1f\x24\x15\x1d\x84\
\x40\x14\x47\x90\xb1\xca\x32\xe4\xa2\x1e\x47\x31\xc2\x30\xc4\x8f\
\x7e\xf4\x23\xbc\x7c\xf1\x02\x96\x65\xe1\xcd\x9b\x37\x88\xe2\x18\
\xb3\xe9\x14\xfd\xc1\x00\x7e\xa9\x04\xc7\x4a\x65\x02\xfa\xfd\x3e\
\xfa\xfd\xbe\x96\x4e\x60\xbd\x41\xaa\xb5\x0f\x87\x43\x5d\x28\x7a\
\x92\x14\x94\xa6\x4b\xcc\x94\x05\x30\x63\x9f\xc8\xa4\x50\x72\x81\
\x00\xcb\x2c\xb0\x3c\x99\x4c\x34\x0b\xc6\xa0\x6d\x82\x06\x02\x8e\
\x56\xab\xa5\x59\x2a\x6a\x5a\x31\x7e\xc9\x14\xd8\xec\xf7\xfb\x1a\
\xb0\x98\xc1\xed\xec\xd3\x74\x3a\x45\xbd\x5e\xd7\x6a\xf0\xdc\x96\
\x20\x8c\x60\x8a\xc7\xce\x02\xd6\xa6\x1e\x16\xd9\x2f\x93\xb5\x62\
\x40\xba\xa9\x04\xcf\x36\x09\x80\x59\xbc\xda\x04\x83\x64\xbc\xa8\
\xb0\x4f\x57\x2b\xc7\x37\xaf\x16\x6f\x96\xc4\xe1\x71\x11\x58\xd1\
\xdd\xc7\x6b\x86\x63\x5f\xf2\x1d\x38\xb6\x97\x51\xa4\x07\x22\x0d\
\x68\xab\xd5\x2a\x3e\xfc\xe8\x43\x7c\xfa\xe9\xa7\xba\x80\xf6\x6c\
\x36\x43\x10\xfa\x09\x2b\x96\xbd\x36\x55\xff\xb3\xd9\xf8\xd9\x75\
\xe3\x74\x36\xfe\x26\xe7\x80\xa2\x38\x2b\x5a\x5e\x1a\x2a\x33\x07\
\xe5\x99\x60\xbe\x8e\x63\xc4\x82\xc9\x22\x89\xdb\x5d\x02\x8e\x6d\
\x23\x76\x1c\x58\x42\x28\x70\x96\x68\xd3\x15\xa9\x04\x9b\xc7\xe7\
\xe4\xbf\xb8\x4a\xc4\xf9\x7d\xb4\x75\x26\x48\xe0\xea\x9e\xea\x37\
\x65\xe6\x45\x98\x77\x11\xbe\x6b\x96\x5f\xd4\x6f\x12\x13\x6b\xda\
\x4d\x02\x59\x97\xb5\x9b\x0e\xce\xaf\x72\xac\xd7\x65\xa9\xd6\x65\
\xe2\x8a\x40\xaa\x10\x2a\xe9\x7d\xb1\x58\xc0\x71\x5d\xc4\x12\x5a\
\xcd\x5c\xb9\x0a\x55\x2a\x7a\x1c\xc5\xd8\xd9\xd9\xc1\x4f\xfe\xe4\
\x4f\xe0\xb8\x2e\xda\x27\x27\x98\xcd\xe7\x28\xf9\x3e\xe6\x2c\x81\
\x62\x59\xf8\xa0\xf6\x81\x0e\xb8\xa6\x5b\x84\x41\xdb\x6c\x93\xae\
\x39\x33\xb5\xdd\x75\x5d\x54\xab\xd5\x8c\x3b\xcf\x54\x56\x37\x63\
\x94\x00\x68\x50\xc4\x8c\xbb\x52\xa9\x04\x20\x1b\x33\x94\x7f\xcd\
\x63\xa7\x72\x7c\xad\x56\xd3\x00\x24\x0c\x43\x48\x29\x75\xcc\x13\
\x5d\x82\x66\xe0\xb7\xe7\x79\x19\x4d\xac\x5a\xad\x86\x87\x0f\x1f\
\x6a\x51\xd1\x7e\xbf\xaf\xdd\x9e\x66\x80\x3e\x5d\x9d\xa5\x52\x09\
\x42\x08\x0d\xd8\x4c\x5d\x2a\xc6\xaa\x01\xd9\x7a\x8b\x51\x14\x69\
\x05\x75\xb2\x73\x40\x2a\x82\xca\x36\x39\x66\x2c\x38\x4d\x10\x45\
\x16\x8c\x2e\x46\x13\x28\x16\xc5\x70\xb1\xcf\x66\x80\x3e\xa0\x00\
\xa7\x02\xcb\x1e\x20\xad\x44\x16\x23\xc6\x62\x11\xc3\x75\x3d\x50\
\x6a\x60\x7f\x7f\x1f\x1f\x7f\xfc\x31\x1a\x8d\x06\x9e\x3f\x7f\x96\
\x28\xf5\xcf\xb5\xd8\x69\x34\x37\xe3\xc7\xd2\xeb\x33\x7d\x5f\x0c\
\xac\xb2\x0f\xf0\x97\x97\x83\xe1\x3e\xcf\x7a\x4d\x46\x91\x9f\x15\
\x3d\x54\x9d\xba\xa7\x12\xbc\x28\xa1\x58\x60\x8b\xf7\x10\x94\xdb\
\x9d\x91\x8e\x26\xac\x2c\x6a\x8f\xaf\x35\xc0\x32\x4f\xd6\xb2\x89\
\xf1\xb2\x0b\xd3\xb2\x09\x25\xcf\x9e\x9c\xb5\xcf\x65\x0b\xe4\xba\
\x7d\x5b\x65\xfb\x22\x60\xb4\x6c\xbb\xa2\x31\x3b\xcb\x47\xbd\x2e\
\x7b\x75\x16\x52\xdf\xa4\x2d\x6b\xf7\x26\x02\x93\x65\x76\x19\x66\
\xc2\x3c\x67\x9b\x5a\x8c\xcf\x1a\xd3\x4d\xd9\x3a\x20\xff\xa2\xb6\
\x32\xfd\x7e\xc6\xf8\x5e\xd5\x3e\x37\xb1\xaf\xb3\xda\xb8\x6e\xd6\
\x33\x3f\x51\xe7\xaf\xd1\xcc\x7b\x20\x79\xd2\x96\xc6\x6b\x00\x90\
\xea\xb5\x80\xce\xa8\xfb\xf8\xd1\x23\xd4\xea\x75\xbc\x7c\xf5\x0a\
\xbf\xff\xfd\x97\xb0\x1d\x1b\xa3\xd1\x18\xf3\xc5\x02\x11\xa0\x17\
\x73\xba\xda\x82\x20\xc0\x64\x32\xd1\x19\x77\x80\x62\x90\x98\x71\
\x48\x50\x35\x1e\x8f\x71\xfb\xf6\x6d\x4c\xa7\x53\x9d\x55\x47\x5d\
\x26\x06\xcd\x4b\x29\x75\xe6\x62\x5e\x75\x9c\xa0\x80\x40\x83\xb5\
\xe7\x08\x2c\xd8\x0e\x7f\x4b\xed\xa8\x6e\xb7\x8b\xc9\x64\x92\x01\
\x6c\x41\x10\xc0\xf3\x3c\x0d\x32\x4c\xb9\x03\x02\x43\xb2\x6c\xe3\
\xf1\x18\xc3\xe1\x50\xab\xc7\x9b\x62\xa5\x74\xbd\xb1\xc6\xa1\xc9\
\x08\x71\xc1\x26\x10\xca\x97\xf5\xe1\x36\x66\xba\x3f\xc1\x15\x75\
\xb9\xe8\x6e\x32\x63\xa9\x4c\x60\xc9\xcf\x78\x6c\xe6\x98\x71\xff\
\x3c\x66\xea\x65\x11\xe4\xf1\x38\x39\x96\x42\x48\x55\x87\x71\x34\
\x80\x00\x8b\x4d\xc7\x58\x2c\x66\x00\x04\x1c\xdb\xc5\xfe\xfe\x3e\
\x3e\xfb\xec\x33\x54\xc2\x0a\xfa\xfd\x3e\x00\xe8\xdf\x4e\xa6\x23\
\xcd\x60\x99\x7d\x58\xf6\x40\x6e\x7e\x96\xb7\xfc\x27\x45\xdb\x14\
\x65\x06\x16\xad\xa3\x45\xaf\xcd\xed\xcf\x7c\xc8\x13\xea\x5e\x29\
\xea\x27\xcf\xb3\xf9\xc7\x3e\x99\xc0\x55\x11\x78\x16\xf2\xeb\x06\
\xcf\x5f\x61\x16\xe1\x55\x4e\x22\xab\x82\x16\x7e\xbf\xec\xe0\xcf\
\x6b\x63\xdd\xa7\xc3\xf3\xfa\x79\x1e\x93\xb3\x0a\x78\xbc\x68\xff\
\xce\x62\x5e\x52\x9a\xf7\xfc\x36\x2e\x6a\x37\x89\x81\xb8\x8c\x2d\
\x63\x12\x97\x81\xfa\x4d\x2f\xd6\x45\x0f\x12\x37\x69\x6c\x37\xc1\
\xba\xac\xcb\xe2\xac\xb3\x3f\xf3\x1e\x5c\xf6\x50\x56\x74\x9f\xae\
\x7b\x5c\xe7\xcd\x07\x99\xef\xd7\xb8\xaf\xd6\x65\xbe\x56\xed\x37\
\xc1\x83\x72\x0d\x0a\x38\x86\x02\xb8\x39\x0e\x54\x57\xaf\x54\x2b\
\xf8\x4f\x7f\xf1\x9f\xf0\xf6\xf0\x2d\x5e\xbe\x7c\x09\xaf\xe4\x61\
\x9e\x30\x2e\xa3\xd1\x08\x61\x18\x6a\xf0\x41\x40\x43\x50\x53\xab\
\xd5\xb4\x6b\x8f\xb2\x06\xae\xeb\xa2\xdb\xed\x6a\x59\x02\xc6\x3e\
\x91\x95\x72\x1c\x07\x61\x18\x6a\x30\xc2\xf3\xc7\x12\x37\xcc\x62\
\x34\x45\x4a\x09\x40\xe8\xa6\x03\xa0\x5d\x75\x74\xaf\x51\xaf\x6b\
\x3a\x9d\x6a\xa0\x46\x80\xc3\x38\x24\x33\x56\xc9\x94\x3f\x28\x97\
\xcb\xe8\x74\x3a\xe8\xf5\x7a\x99\xcc\x31\xdf\xf7\xb5\x7b\x8f\xa0\
\x8e\xc7\xc0\x76\xe8\xba\x23\x38\x62\x9b\x26\xc8\x32\x19\x3b\xb2\
\x81\x42\x08\x9d\xc5\x48\xe6\xca\x54\x74\xe7\x6f\xf9\x1b\x1e\x27\
\x90\x6a\x38\x99\x19\x6c\xa6\x94\x04\x7f\xcf\x6d\x29\x79\x91\xf6\
\x2b\x05\x6d\x3c\x7f\x2a\xb8\x5d\x9d\x87\x9d\x5b\xbb\xf8\xb3\x3f\
\xfb\x33\x3c\x7e\xfc\x18\xc2\x52\xc1\xee\xbe\xef\x27\x6e\xce\x48\
\xcb\x63\x38\x96\x5b\xf8\x00\x75\x99\x07\x52\xf3\x3a\xcd\xdf\xb7\
\xab\x3c\x38\x2e\xbb\x67\xce\x9d\x23\x92\x87\x8f\x65\xdb\x90\xbd\
\x04\xb2\xb1\x59\x26\xe8\x52\x05\xa7\xb3\xc5\xb6\xcd\x3e\x9d\x52\
\x72\x7f\x57\x6d\x5d\x86\x65\x13\x17\xc3\x75\xd8\x75\xb0\x1f\xef\
\x2d\x6b\xef\xc7\xf6\x66\xd8\x26\x80\xd1\xba\xfb\xb9\xae\x36\xce\
\x03\x71\xeb\x5a\xd1\xd3\xbe\xf9\xe0\xc5\x85\x21\x8e\x63\x08\x4b\
\xe0\xe3\x8f\x3f\xc6\xf6\xf6\x36\x7e\xff\xe5\x97\xd8\xbf\x7b\x17\
\xe3\xe1\x08\x51\xc2\x14\xe5\xd9\x1b\xba\x97\x1a\x8d\x86\x06\x58\
\x9c\x07\x8f\x8f\x8f\xd1\x68\x34\x10\xc7\x31\x5a\xad\x96\x2e\xb1\
\xc3\xef\xe9\x2a\x24\xb0\xa8\xd5\x6a\xe8\xf5\x7a\xda\x3d\x46\x57\
\x1b\x01\x51\x5e\xd6\x00\x48\x0b\x21\x2f\x16\x0b\x5d\x27\xd1\x94\
\x6a\xc8\xbb\x1f\x27\xff\x3f\x7b\x6f\x1a\x6c\x49\x72\x9d\x87\x7d\
\x59\xdb\xdd\xdf\xbb\x6f\xe9\xd7\x6f\xba\x7b\xba\x7b\x76\x6c\x83\
\x19\x0c\x16\x61\x44\x82\x80\x00\xc2\x94\x4c\xd1\xdc\x2c\xca\xa2\
\x39\x92\x45\xc9\x61\x06\xc3\x0c\xcb\xb6\xec\x08\x2f\x11\xa4\xc3\
\x52\x48\x11\x22\x83\x14\x65\xd1\xa2\x6d\x38\xe8\x1f\x14\x4d\x8b\
\x12\x45\x22\x00\x2e\x12\x29\x12\x24\x01\x12\xc2\x36\x03\xcc\x8a\
\xd9\x97\xee\x7e\xfb\x7b\x77\xbf\x75\xab\x2a\xfd\xa3\xea\xe4\x3d\
\x95\xb7\xd6\xfb\xee\x5b\x7a\xd0\xa7\xe3\xf6\xab\x25\x2b\xb7\xca\
\xca\xfc\xf2\x3b\x27\x4f\x8e\x46\xea\x59\xee\x22\x82\xd2\xa0\x7a\
\xe1\x00\x8a\xea\x8c\xbb\x6b\xa0\xfb\x1c\x78\x51\x1e\x29\x3d\xae\
\x92\x24\x10\xc5\x41\x0f\x01\x48\x5e\x26\x0e\x9e\xc8\xf0\x9e\xd2\
\xe2\xe3\x0b\xb1\x56\xae\xeb\xa2\x5e\xaf\xc7\x40\x14\xa5\x4f\xf9\
\xe3\x2a\x41\xaa\xf7\x38\x43\x18\xd6\x57\xad\x1e\x6e\xe6\x1c\xbe\
\xd3\x2a\x1c\xa7\x82\x5a\xb5\x86\xcb\x97\x2f\xe3\xf2\xe5\xcb\x51\
\x3a\x9e\x72\x34\x1a\xd6\x55\x00\x61\x1c\x6f\xdc\xe3\xe5\x4a\x9a\
\xd0\x16\x01\x69\x79\x24\x47\xde\x73\xf3\x08\x77\xfa\xca\xf7\xb6\
\x9c\xb6\x93\x00\x30\xd2\x09\x18\xf3\xaf\xff\xf5\x27\x7e\x4a\xff\
\x18\x39\x9a\xd4\x1b\x7b\x96\xcc\xab\xa6\x4b\x7b\x2e\xef\x7e\x52\
\xba\x45\xf3\x90\x44\x01\xf2\x5f\x5e\xbc\xe1\x79\x7e\xbe\x8e\x0b\
\xc6\x28\x8e\x2c\x34\xbe\x88\x77\x73\x12\xef\xf7\x76\x94\xd3\x54\
\xbd\xde\x01\x72\xe9\x92\x34\x4b\x26\x29\xab\x2a\x28\x12\x66\xee\
\x38\x32\x66\xc0\x45\xe3\x48\x52\xad\x14\x95\xe9\x6c\x7c\xf6\x07\
\x62\x49\x01\x08\xc3\x80\x1f\x4c\xd5\x4c\xd7\xaf\x5f\xc7\x68\xe2\
\xe2\xe5\x57\x5f\xc1\xc4\xf7\x00\x29\x31\x1e\x0c\x63\xbe\xab\xc8\
\xd3\xf9\xe1\x61\xe8\x68\xd2\xb6\x6d\xf4\x7a\x3d\xb5\x07\xe0\xca\
\xca\x0a\xde\x7a\xeb\x2d\x6c\x6e\x6e\xc2\xb2\x2c\xb5\xe5\x0e\xad\
\xf0\xa3\x01\x7f\x30\x18\xe0\xe8\xe8\x08\xdd\x6e\x17\x2b\x2b\x2b\
\xd8\xd9\xd9\x51\x83\x14\xed\x1b\x48\x46\xda\x52\x4a\x0c\x06\x03\
\xa5\x66\xe3\x06\xdd\xc4\x4e\x75\xbb\x5d\x74\x3a\x1d\x35\xc8\xd1\
\x6a\x45\x0a\xbf\xb4\xb4\x84\x8d\x8d\x0d\xac\xae\xae\x2a\x7f\x5b\
\x52\x86\xb6\x5a\x64\x30\x4e\x2b\x21\x09\x7c\x71\xd5\x24\x00\x65\
\x57\xb5\xb2\xb2\x82\x0b\x17\x2e\xe0\xf2\xe5\xcb\x68\x36\x9b\x6a\
\x3c\x24\xc0\xd6\xef\xf7\x63\xcc\x12\x5f\xbd\x47\xef\x96\xc0\x17\
\x07\x68\xfc\x47\x6e\x1c\x38\x48\xa2\xd5\x91\xb4\x82\x8d\x36\xa5\
\xe6\xfe\xb2\x78\x5a\x54\x46\x29\xa5\x7a\x77\x64\xfb\x45\x7e\xbb\
\xea\xf5\x1a\x4c\xcb\x80\x6d\x3b\xd1\x86\xd6\x35\x04\x81\xc4\xea\
\xea\x1a\x3e\xf1\x89\x4f\xe0\xc1\x07\x1f\x44\xbf\xdf\x0f\x0d\xf2\
\xbd\x09\x26\x13\xf2\x7c\x1f\xae\x38\xb4\x2c\x0b\x81\x2f\x01\x69\
\x84\xdb\xdd\x48\x01\x48\x31\x7b\xcc\x5b\x21\xbf\x26\x05\x84\x00\
\x64\xe0\xa7\x7e\x83\x9c\x79\xcd\x63\xa0\xb2\x8e\xa9\xee\xf3\xbe\
\xab\x70\xf5\x2d\x98\x7a\x3d\xbc\x66\x40\x40\x48\x20\xf0\x7c\x20\
\x90\x80\x94\x90\x7e\x80\xc0\xf7\x21\xfd\x00\x88\x3c\xdf\x47\x6f\
\x39\x31\xbf\x52\xca\xa9\x1f\x2c\xfd\x63\xe7\x54\xe4\x22\x55\x26\
\x8b\x10\x1d\x00\x65\xa1\xe3\x34\xd1\x9d\x94\xa5\xa5\xa3\xc7\x1b\
\x3f\x2f\x67\xc7\x95\x24\x45\x80\x4f\x52\xd9\xce\xcb\xbb\xb8\x5d\
\x25\xad\xbd\xa4\x0d\x7a\xf3\x4a\x1e\x00\x3e\xad\xf7\x38\x2f\xab\
\x52\x36\xcc\xa2\xcb\x93\x05\xb4\xd2\xae\x9f\x2a\xc8\x92\xe9\xf7\
\xe7\x49\xa7\xcc\xf3\xfc\x2f\x3f\xe6\x06\xe1\x81\x24\x4f\xef\x46\
\xec\xfe\xd6\xd6\x16\x1e\x7f\xfc\x71\x8c\x46\x23\x7c\xea\x53\x9f\
\x82\xe3\x38\x68\x34\x9b\xf0\x27\xa1\x9a\x70\x3c\x1e\xa3\xdd\x6e\
\xa3\xdd\x6e\x2b\x3b\xac\x4e\xa7\xa3\xb6\x86\x21\x46\xab\xd9\x6c\
\xaa\x8d\x9a\x9b\xcd\xa6\x32\xfc\x26\x77\x0f\x8d\x46\x03\x95\x4a\
\x45\xb9\x65\xe8\xf5\x7a\x6a\xe0\x27\xc6\xa7\xd3\xe9\xc0\x75\x5d\
\xe5\x14\xd4\xf3\x3c\xf4\xfb\x7d\x0c\x87\x43\x2c\x2f\x2f\x2b\x37\
\x11\x64\x0b\x06\x40\xad\x32\x94\x52\x2a\x80\xe5\x38\x0e\x56\x57\
\x57\xb1\xba\xba\x8a\x46\xa3\xa1\x8c\xcd\x89\x25\x22\x3f\x58\x04\
\xa4\x48\x45\x49\xab\xfd\xe8\x98\xec\xbf\x08\xb4\xf9\xbe\x8f\x5e\
\xaf\xa7\x56\x56\x12\xab\x31\x1a\x8d\x14\x28\x24\x0f\xf6\x54\xf7\
\xa4\xea\x24\x2f\xf8\x04\x92\xa8\x7e\x88\x0d\xe1\xec\x18\x67\xfd\
\xb8\x9a\xd4\x71\x1c\x74\x3a\x9d\x99\xbc\x72\x7b\x1f\xc7\x71\x54\
\xdd\x71\x47\xa3\xb4\x7a\x51\x88\x50\x35\xe8\xf9\xc0\xfa\xda\x46\
\x64\x73\xd6\x83\x94\x02\x9b\x9b\x9b\xca\x59\x6c\xaf\xd7\x83\x08\
\xb7\xf4\x63\x3e\xa1\x00\x20\x72\x6c\x1a\x44\x20\xa9\x40\x3f\x99\
\x36\x3e\x0b\x18\x91\x66\x3d\x01\xf0\x68\xa4\x4a\xd1\x31\xaf\xcc\
\xb7\xad\xe7\x49\x0f\xc3\xaf\x73\x67\xae\xc4\x32\x2a\x3b\xbd\x20\
\x80\xcd\xfa\x00\x6e\x67\x47\x52\xc8\x93\xfb\x79\x95\x99\x17\x77\
\x02\xec\x83\x1e\xef\x49\xa5\x93\x95\xbe\x7e\xae\x77\xb0\xdf\x0a\
\xcc\xd2\xa2\x25\x0f\x08\x24\x19\x59\x1e\x37\xad\xa4\x19\xce\x1d\
\x49\x97\x32\xe0\xa3\x68\xa7\x4a\x52\xa6\x03\x3f\x31\xf6\xab\x44\
\x7e\xf3\xea\x42\xad\x16\x97\xe1\xb1\x9e\x42\x10\x44\xab\xf9\xa4\
\x84\xeb\x7b\x38\x3a\x3a\xc2\x7d\xf7\xdd\x87\x8f\x7e\xf4\xa3\xf8\
\xc6\x33\x4f\xe3\x1b\x4f\x7d\x1d\x8e\x61\x62\xd0\xeb\x2b\xdf\x4d\
\x52\x86\x5b\xa7\xac\xad\xad\x29\xdf\x56\x00\x94\x8b\x84\x37\xdf\
\x7c\x13\x96\x65\xe1\xe8\xe8\x08\x42\x08\xb4\x5a\x2d\xb5\x62\xb0\
\x52\xa9\x28\x36\xa5\xd5\x6a\xa1\xd1\x68\x28\x1b\xb0\x5e\xaf\x87\
\xc1\x20\x34\x9a\xa6\x38\x69\xc5\x9f\x10\x42\xb9\x8a\x20\x50\x47\
\xde\xdb\x7d\xdf\xc7\xf2\xf2\xb2\xda\x34\xba\xdf\xef\xab\x3d\x13\
\x09\x70\x59\x96\x85\xc3\xc3\x43\xdc\xbc\x79\x53\x31\x37\x00\x54\
\x5a\xc4\xf8\xf4\x7a\x3d\xf4\xfb\x7d\xc5\xd8\x71\x5f\x52\x64\xc3\
\x34\x1c\x0e\x71\x78\x78\xa8\x0c\xbe\x69\x85\x64\xad\x56\x8b\x79\
\x59\xa7\x67\xf9\xa4\x9d\xdb\x7e\x11\x08\xe2\x63\x07\x67\xb8\x08\
\xa8\x09\x21\x14\x03\x08\x40\xa9\x41\x09\xbc\x71\xb7\x0f\xba\x2d\
\x18\x77\x8e\x19\x04\x81\xb2\x4b\xa3\xd5\x9f\xb5\x5a\x05\xa3\xd1\
\x08\x77\x5d\xba\x08\xc3\x30\xb0\xb5\xb5\x03\x21\x0c\x3c\xf2\xc8\
\xa3\xf8\xb6\x6f\xfb\x36\xe5\x72\xa3\x56\xab\x29\x80\x45\x0e\x46\
\x83\xc0\x53\x76\x65\xb6\x51\xcd\x05\x54\xbc\x8d\x26\x8d\xcf\x61\
\xfe\x93\x9f\x4b\xfb\x2e\xf5\x31\x2f\x2b\xac\x2e\x45\xfa\x91\xa4\
\x38\x78\xbe\x92\x98\xc2\x20\x62\xb0\x24\x44\xe8\x53\x8b\x79\x84\
\x27\xb1\x78\x64\xbc\x02\xa8\x42\xce\xdb\x20\x40\x85\x3b\x0e\x7b\
\x05\x94\x5b\x75\x95\x04\xb2\xc2\x38\xf2\xf3\x7a\xdc\x7c\x64\xc5\
\x73\xde\x98\xc5\xdb\x51\xb2\x54\x77\x27\xcd\xc6\xe4\x5d\x3f\x8d\
\xb4\x17\x1d\xe6\xa4\xca\x92\xd6\x89\x9e\x39\x40\x92\x8b\xcb\x47\
\xda\xbd\x22\x61\x0d\xc6\x50\x09\x11\x75\xf8\x32\x00\x64\xa8\xde\
\xf0\x7c\x1f\x86\x11\x0e\x6c\x81\x17\xa0\xdd\x6e\x63\x67\x67\x07\
\xf5\x7a\x1d\x3f\xfc\xc3\x3f\x8c\xff\xab\xf7\x7f\xe2\x85\xaf\x3f\
\xad\x6c\x83\xc8\xa8\x79\x34\x1a\xa9\x8d\x95\x09\x30\x91\x7f\x2a\
\x02\x37\x04\x02\xfa\xfd\xbe\x02\x3a\x64\x2b\x45\x6c\x0b\x39\xf5\
\x24\x8f\xe9\x14\x5f\xad\x56\xc3\xfa\xfa\x3a\x8e\x8e\x8e\x14\x73\
\x44\xe1\xaa\xd5\x2a\x1c\xc7\x89\x79\x3a\x6f\x36\x9b\xd8\xd8\xd8\
\x50\x80\x83\x98\xb3\xe1\x70\xa8\x54\x80\xb4\x4f\x1f\x77\x65\xc0\
\x99\x08\x29\x43\x75\x21\x19\xd7\x13\xa3\xc5\xb7\xa7\xe1\x1e\xdd\
\x49\x3d\x69\x18\x06\x9a\xcd\x26\xea\xf5\xba\x62\xc7\x28\xaf\x8d\
\x46\x03\xf5\x7a\x1d\x86\x61\xc0\x75\x5d\x0c\x06\x03\x0c\x06\x03\
\xf5\x1c\xd9\x52\xf1\xfd\x03\xb9\x7d\x0f\xbd\xc3\x20\x08\x30\x1c\
\x0e\x63\x63\x0e\xb1\x64\xa4\x12\xa5\x7a\x22\xb6\x84\xd4\x8e\xa4\
\x96\x25\xf5\x2b\x00\x05\x58\xb9\xab\x88\x9b\x37\xb6\x60\x9a\x02\
\x0f\x3c\xf0\x20\x3e\xf2\x91\x8f\x44\xfb\x49\x4e\xc1\x43\x20\xfd\
\x28\x6f\xb4\x6a\xd2\x07\x44\x30\x83\x07\xf8\xb9\x7e\xcc\xdb\x67\
\x7c\x9c\x92\x10\xc2\x40\x16\x7b\x95\xd5\xe6\xb3\xc2\x1c\x17\x68\
\x25\x85\x27\x5c\x44\x6d\x82\xae\xd3\x79\x10\x48\xf8\x7e\xa0\xda\
\x11\xbd\x17\xf5\xae\x28\xb2\x24\x95\x19\x1f\x68\x16\x61\x4f\xb4\
\x48\x39\x2e\x7b\x55\x64\xe5\x1d\x30\x0b\x62\x4e\xbb\x0e\xb2\x1a\
\xc1\x1d\x80\x75\x72\x32\x4f\x9b\xca\x8a\x27\x0d\xa4\xdf\x79\x77\
\xd9\x52\xa4\x53\x3c\x53\x90\x25\x73\xee\x17\x88\xa3\xe8\xa0\xa1\
\x5f\x8b\xfd\xcd\x69\xab\x96\x65\x86\x33\xee\xc8\xb6\xa8\x5e\xaf\
\x63\x6b\x6b\x0b\x52\x4a\x5c\xbb\x76\x0d\x9f\xfc\xe4\x27\x21\x5c\
\x0f\x5f\x7f\xf2\x29\xe5\x0e\x41\x4a\x19\x03\x0a\x4b\x4b\x4b\xb0\
\x2c\x0b\x7b\x7b\x7b\x30\x0c\x03\x1b\x1b\x1b\x6a\xbb\x98\x6e\xb7\
\xab\x66\xf9\xe4\x27\x8b\x98\x14\x00\x6a\x75\x61\xaf\xd7\xc3\xea\
\xea\x2a\x5a\xad\x96\x72\x2d\xb0\xb9\xb9\x89\xe5\xe5\x65\x05\x6a\
\xc8\xc5\x03\xb1\x45\x04\xe2\x08\xfc\x1c\x1c\x1c\x60\x77\x77\x17\
\x00\xd0\x6e\xb7\xd1\x68\x34\xd0\xeb\xf5\x14\xcb\x02\x84\xdb\xef\
\x90\xcd\x14\xd9\x8d\xd1\xb6\x35\x2b\x2b\x2b\xa8\xd5\x6a\x00\xa0\
\xd4\x86\x94\x5f\x62\xca\x88\xc9\xd2\x3d\xb0\x93\xcb\x06\x5a\x19\
\xc8\xd5\x42\x94\x3f\x02\x32\xdc\xfb\x3c\xcf\x1b\x31\x64\x04\x96\
\xc2\xf7\x63\xa9\x55\x93\xc4\x3e\x51\xfc\x04\x92\x38\x98\xe6\xe0\
\x91\xe7\x9d\xb3\x28\xc4\xda\x11\x48\x74\xdd\x09\xf6\xf7\xf7\xd1\
\x6c\x36\xf1\xd8\x63\x8f\xe1\xea\xd5\xeb\x58\x59\x59\xc1\xd6\xf6\
\x16\x6c\xcb\x61\x8e\x5d\x03\x48\x04\x21\xb0\x02\x60\x18\xd3\x55\
\x72\xd2\x4f\x06\x54\x49\xed\x34\x6d\x7c\x0e\xeb\x41\xce\x34\x59\
\x1e\x47\x9a\x06\xa1\xac\x5d\x56\xda\x35\x85\x69\xe8\x18\xda\xf7\
\x18\xdd\x37\x18\xe9\x14\x10\xb0\xf2\x7d\x78\xd1\xb7\xe4\x07\x12\
\x93\x20\x80\x17\x01\x2c\x6e\x53\x67\x59\xd6\xac\x1f\xac\xdb\x49\
\x8e\x33\x08\xe6\x95\xf5\xa4\x55\x8f\x45\x45\xcf\xa7\xae\xa3\xbe\
\x1d\xdf\xdb\x79\x10\x5e\x67\x7c\x72\xc1\x67\xba\xe7\x69\x42\x71\
\x47\xce\x21\xb8\x5a\x70\x1c\x65\xc2\xeb\xe7\x31\xbb\xab\x20\x40\
\xc8\x15\x4c\x19\x1b\xdb\x71\xe0\x4e\x5c\x04\x5e\x68\xab\xd4\xed\
\x76\x51\xaf\x84\x5e\xd0\x6f\xbc\xf9\x16\xbe\xe3\x3b\xbe\x03\x55\
\xd3\xc6\xce\xce\x8e\x02\x55\x93\xc9\x04\xdd\x7e\x0f\x52\x86\xdb\
\xe5\xac\x6f\x5c\xc0\xa5\x4b\x97\xf0\xc7\x9f\xfb\x23\x78\x9e\x87\
\x47\x1e\x79\x04\xcf\x3c\xf3\x0c\x1c\xc7\xc1\xf2\xf2\x32\x9a\xcd\
\x26\x8e\x8e\x8e\xb0\xb3\xb3\x83\xc9\x64\xa2\x18\x19\x32\xf2\x0e\
\x82\x70\x4f\x43\x5a\x55\x47\x40\x69\x73\x73\x53\x31\x3f\xe3\xf1\
\x58\xd9\x75\x1d\x1e\x1e\x62\x34\x1a\x85\xae\x25\x9a\x4d\x00\xe1\
\x96\x3b\x5b\x5b\x5b\xb0\x6d\x5b\x19\xba\x2f\x2d\x2d\xa9\x6d\x4c\
\x88\xc1\xa1\x7d\x13\x1b\x8d\x86\x02\x1b\x41\x10\x60\x65\x65\x05\
\xd7\xae\x5d\x43\xbb\xdd\xc6\x2b\xaf\xbc\xa2\xca\x2a\xe5\xd4\x96\
\x8b\x18\x29\x1a\x30\xa9\x7e\xb9\xa7\xf4\x6a\xb5\x8a\x76\xbb\xad\
\xd4\x87\xe4\x47\x8b\xb3\x73\x04\xbe\x08\x74\x11\x33\xc8\x81\x99\
\x65\x59\x18\x0c\x06\x70\x5d\x37\xa6\x62\xa5\xbc\x10\x48\xbb\x78\
\xf1\xa2\x2a\x1b\x5f\xc9\x48\x0c\x21\x8f\x9f\x58\x35\xda\xd7\x31\
\x74\xa7\x31\x80\x69\x1a\xb8\x72\xe5\x32\xfe\xe2\x77\xfd\x87\x78\
\xf8\xe1\x87\xe1\xba\x13\x0c\x87\x63\x54\xab\x91\x5b\x88\x09\x2d\
\x36\x20\x5f\x5a\x21\x7b\x15\x02\x89\x09\x02\x1f\xb0\x2d\x01\xc8\
\xf8\x6a\xc7\xb4\xbe\x32\xfd\xba\x1f\xfd\x2d\xe7\x8a\xa9\xc8\x98\
\x57\xf6\xbb\xca\x93\x24\x12\x23\xb6\xc8\x20\x90\x30\xd8\xfb\xe6\
\xcf\x19\x86\x11\xae\x22\xe4\x0f\xa5\xcd\xac\xb3\xae\x73\x4a\x75\
\x1e\xa1\x38\xf4\x9f\x9e\x6e\xd2\xfd\xa4\xca\x48\xca\x67\x96\xc4\
\x75\xc3\xb3\x4c\x5d\x92\x8e\x38\x4c\x23\x3b\xed\xb4\xfc\xc6\xc3\
\xfa\xe1\x8c\x41\x86\xa8\x7e\x8a\xec\x67\x8f\xf9\x8f\x9e\x91\x32\
\x50\xd4\x7f\xd6\x8f\xc7\x9f\xf4\xcb\x7b\xbe\x48\x1c\x45\x7e\x69\
\xe5\x29\xf3\x0b\x02\x3f\x56\x7e\xfd\x57\x34\x1d\x0a\x1f\x04\xbe\
\xfa\xc5\xcb\x98\xbf\x00\x21\x5f\xa6\xf1\xe9\x79\xe4\xd7\xb3\xf3\
\xba\x18\x26\x2d\x37\xa7\x6c\x86\x9d\xe6\xd7\x65\x11\x52\x26\xae\
\x3c\xc6\x27\xed\x38\x2d\x1e\xfa\x1b\x1a\x7f\x07\xe1\xac\x34\xf6\
\x2f\xf9\x0d\x90\x77\x67\x05\x5c\xe8\xba\xf6\x7e\xf3\xde\x69\x52\
\x18\xde\x2e\xf4\xb6\x4d\xe7\xfc\xba\x1e\x06\x90\xb0\x2d\x27\xd6\
\x7f\x85\x75\x11\xf5\x6b\x00\x02\xb2\x21\x81\x40\xe0\xfb\x6a\xb5\
\x94\xef\x79\x10\x00\x7a\x9d\x2e\xee\x7f\xe0\x01\x18\x96\x85\x4a\
\xad\x86\xbd\x83\x03\x8c\xc6\xae\x52\x3d\x0d\x47\x23\x78\xbe\x0f\
\x77\x32\x41\xb3\xd9\x40\xa7\xdb\x45\x20\x03\xac\xad\xaf\xe3\xad\
\x1b\x6f\x41\x18\x02\xed\x95\x15\xc5\xc2\xb8\xae\x8b\xf5\xf5\x75\
\xac\xae\xae\xc2\x34\x4d\xb4\xdb\x6d\x5c\xb8\x70\x01\x6f\xbe\xf9\
\xa6\x5a\x95\xd8\x6e\xb7\xd1\xe9\x74\xd0\xef\xf7\xb1\xb6\xb6\x06\
\xcf\xf3\xd0\xeb\xf5\x10\x04\x81\x32\x60\xef\x76\xbb\xe8\xf5\x7a\
\x4a\x25\x58\xa9\x54\x94\xa1\x3b\xdf\x48\x9a\xef\x31\x28\x84\x40\
\xb3\xd9\x54\x71\xf0\x6d\x6c\x6a\xb5\x1a\xba\xdd\x2e\x9e\x7c\xf2\
\x49\xb5\xe1\x33\x31\x74\xdc\xf0\x9d\xb6\x00\x22\x50\x43\xf7\x88\
\x39\x22\x30\xb3\xbf\xbf\xaf\xd2\xe6\x4e\x55\x49\xb5\xc9\xfd\x5a\
\xad\xaf\xaf\xe3\xf2\xe5\xcb\x31\x55\x64\xbf\xdf\x8f\xa9\x23\x89\
\xfd\xa2\x6b\x64\xcb\x45\xed\x9b\x9c\xba\x12\xa8\x22\xf0\xcb\x7d\
\x8a\x5d\xba\x74\x49\xad\x92\xa4\x55\x8e\xed\x76\x1b\x47\x47\x1d\
\x3c\xfe\xe1\xc7\xf1\xbe\xf7\xbd\x4f\xdd\xa3\xf4\x83\xc0\x07\x22\
\xef\xe5\xd4\x17\xfa\xfe\x64\x6a\x2b\x86\x28\x1f\x52\x1b\x2f\x0c\
\xa8\xf1\xc7\x30\x04\x78\xff\xac\xda\xbd\x90\x90\x08\x94\xa1\xa0\
\x21\x66\x17\x6f\x71\x1c\x41\x0c\x5c\xd6\xf7\xcd\xc3\x96\xed\x9b\
\x28\x6d\xb5\x0a\x53\x4a\xc5\x4e\x49\x39\x5d\x18\xa2\x80\x94\x36\
\x86\x93\x0a\x5e\x52\x3f\x12\x48\x48\xf2\x9e\xef\x79\x08\x7c\x1f\
\x88\x58\xb1\xdb\xda\xc8\xfd\xed\x2a\x67\xc1\x9e\xdc\x61\xc1\xee\
\x48\x9a\x19\xc0\xed\xce\xe4\x2d\xa2\x6d\x9f\x45\x1c\x45\x54\x1d\
\xfc\x7a\xde\x0f\xf4\x03\x08\x1d\x86\x10\x2c\x7a\xbf\x23\x77\x8c\
\x4b\x97\x2f\xc3\xf3\x7d\xdc\xda\xde\xc2\x60\x30\x80\xef\x7b\xa8\
\x88\x2a\x26\xd1\x4a\xbc\xe1\x70\x88\x46\xbd\xae\x54\x6c\x04\x5a\
\xc8\x4d\x83\x8c\x56\xb4\x91\x8b\x07\xce\xac\x79\x9e\x87\x56\xab\
\xa5\x56\x12\x12\x78\x20\x1b\x23\x8a\x8f\xdc\x36\xf0\xad\x5f\xc8\
\xc0\x9b\xb6\xd5\x21\x77\x0b\xb4\x62\x91\x6c\x60\x48\xfd\x47\xea\
\x49\x02\x42\x52\x86\xea\xce\x5e\xaf\x17\xb3\xb7\x22\xbb\x19\xee\
\xec\x53\x08\xa1\xbc\xc1\x73\x36\x9b\x00\x50\x6c\x2b\x22\x6d\x22\
\xc2\x27\xeb\x7c\x1b\x21\x02\x66\x1c\x08\x72\x90\xc4\x41\x05\x77\
\xc6\x4a\x6c\x0d\x9f\xf4\xa4\x01\x0d\xb2\xcd\x22\x90\x0a\x00\xab\
\xab\xab\xe8\x74\x3a\xe8\x76\xbb\x58\x5e\x5e\x52\x65\x25\xb5\xa1\
\x61\x08\x58\x16\x7f\x07\xd3\xa9\x43\x99\xb6\x49\xf9\x3c\x4e\x1b\
\xbf\x2d\xc7\x20\x39\x7d\x07\xdc\x56\x4b\x01\xf3\x52\x71\xc9\x64\
\x7b\x92\xf3\x28\xf3\xe4\x2f\x69\x86\x4c\xd7\x8b\xaa\x0c\xd3\x98\
\xbe\xb4\xf8\xe6\x4d\x27\x29\xcd\xe3\x48\x91\x8f\x63\x5e\x86\xf2\
\xed\x2a\xb7\xc3\x77\x50\x46\xb2\x18\xab\xb3\x50\x45\xa7\x75\xbe\
\xbc\x1f\x4a\x0b\x9f\x17\xc7\x22\xf2\x51\x26\x4c\x99\x38\xca\x68\
\x0f\x48\x08\x1c\xf0\x59\x7d\x10\x30\x86\x8e\x83\xad\xf0\x61\x00\
\x08\xb7\x0a\x41\x58\x9f\x87\x47\x47\xb8\x7e\xef\x3d\x58\xbb\xb0\
\x0e\xcb\x09\x6d\x84\x5e\x79\xe9\xe5\x10\x38\x41\x62\x32\x71\x71\
\x70\x70\x10\x63\x19\x6c\xdb\x56\x6e\x14\x5c\xd7\x85\x1b\xd9\x10\
\x59\x96\xa5\x1c\x92\x02\x50\xb6\x4b\xeb\xeb\xeb\xf0\x7d\x1f\xf5\
\x7a\x1d\xb6\x6d\x63\x7d\x7d\x1d\x00\x14\x43\x34\x18\x0c\xd0\xef\
\xf7\x63\x7b\x1a\x2a\xfb\x9f\xe8\xbd\x93\x8a\x93\x80\x0b\x31\x59\
\xcd\x66\x13\xeb\xeb\xeb\xb0\x2c\x4b\xb9\x94\x20\x3b\x2f\x72\x9b\
\x40\xab\x17\xc9\xae\x8b\xec\xbc\x86\xc3\x21\x86\xc3\x21\x00\xa8\
\x95\x93\xc4\x6e\x49\x29\x95\x73\x50\xdd\xe1\xa4\x0e\x84\x08\x10\
\x72\x75\x1d\xa9\x02\x5d\xd7\xc5\xe1\xe1\x21\x5c\xd7\x55\x2c\x14\
\x6f\xc7\x54\x0e\xbe\x22\x51\x4a\xa9\xc0\x65\x52\x7f\x43\xe7\x64\
\x37\x17\x04\x01\x0e\x0e\x0e\xd4\x76\x47\x64\x83\xd5\x6e\xb7\xf1\
\xf0\xc3\xef\xc6\xd5\xab\x57\x21\x84\x50\x65\x09\xd3\x08\x22\xec\
\x9d\xfd\xbd\x25\x1d\x67\x89\xae\xb5\xd1\xf3\x9f\xf5\x4d\xe4\xf5\
\x3f\x67\x09\xc6\x62\xf9\x40\xc8\x5e\xe9\xf9\xa3\x36\x61\xcd\x3b\
\x48\x9c\x65\x61\x17\x3d\xa8\x25\xbd\xf8\xa2\x20\x2b\xad\xb3\xcf\
\x4b\xa7\x28\xc8\x2a\x9a\xff\x3c\xc9\xab\xb3\xdb\x72\xf6\x70\x0e\
\xe4\xb8\xf5\x76\x9e\xea\x3d\x6d\x16\xaa\xd3\xf9\xc7\x91\x79\xda\
\x74\x19\xc0\x12\xa3\xf1\x33\xe3\x38\x9d\x7c\xa4\x85\xcd\x3a\xcf\
\x0a\x97\x76\x2f\x90\x53\x6f\xe6\xfa\x8a\xb9\x44\x80\xc5\x84\xde\
\xad\xeb\xba\xa8\x56\xab\x58\x5a\x5a\xc2\xa3\x8f\x3e\x0a\xdb\xb4\
\x60\x9b\x16\x9e\x7b\xee\xb9\x08\xb0\x4d\x8d\xde\x83\xc8\xe5\x02\
\x19\x69\xfb\xbe\x8f\xa5\xa5\x25\x1c\x1e\x1c\xc2\xf3\xba\x4a\x9d\
\x46\xdb\xd6\x90\xaa\x91\xd8\x23\xb2\x25\x22\x2f\xf0\xa4\x5e\x23\
\xd6\x88\x3c\x97\x73\x83\x6e\x00\xca\x60\x9c\x98\x33\x62\xab\xb8\
\xfb\x84\xbd\xbd\x3d\x8c\x46\xa3\x58\x9a\xb6\x6d\xa3\xd9\x6c\xc6\
\xd4\x88\x3a\x18\x22\x9b\x25\xf2\xdd\x45\x6c\x13\x07\x57\x04\x2c\
\x7d\xdf\x57\xea\x35\xce\x64\x11\xb0\xe5\x06\xec\xbd\x5e\x4f\xb1\
\x6e\xba\xe7\x7a\xda\x4e\x28\x89\xa1\x22\x16\x84\x54\x86\x7c\x0f\
\x47\xee\x37\x8b\x40\x27\xa9\x0f\xa9\xbe\x68\x35\xe2\xd5\xab\x57\
\xf1\xd8\x63\x8f\xe1\xda\xb5\xbb\x63\x9b\x6a\x93\xd0\x6a\x46\x2a\
\x87\xde\x0e\xf5\x6f\x3f\xe9\x1b\x2b\x35\x0e\xa2\xdc\x37\xc3\xe3\
\x5d\xa4\xd9\x42\xd1\x31\x3b\xf3\x19\x19\x96\x87\xef\x4f\xc8\xbf\
\x3f\x2b\xf1\xa1\x9c\xc4\xd2\x80\xc1\x22\x06\x8b\x3c\x20\x90\x54\
\xd9\x45\xf2\xa7\x4b\xd2\x0b\x4b\x43\xd7\x69\xc0\x4a\xca\xe2\x75\
\x91\x3e\x03\x98\xcd\x73\x56\x5e\xce\x52\xce\x4b\x3e\x8a\xc8\x22\
\xf2\xba\x98\xf2\x96\xff\x88\xe7\x89\xe3\xf8\x69\x24\xdb\x11\xea\
\xd7\xca\xcc\x5a\x8f\x13\x26\x29\x6c\xd6\x73\x45\x67\xc3\x6a\x40\
\x40\xbc\xa3\x9f\x3f\x1f\xc5\xc1\x50\x5a\xde\x8a\x02\xad\xcc\x74\
\x52\x9e\x11\xe1\x82\xa8\x4c\x80\x45\x42\x20\x80\x98\xa9\x07\x1f\
\x7a\x10\x86\x08\x57\xb0\x3d\xfd\xf4\xd3\x89\x1c\x73\x62\x00\x00\
\x20\x00\x49\x44\x41\x54\x38\xd8\x3f\x50\x71\x04\x41\x80\x4e\xa7\
\x83\x66\xb3\xa9\x8c\xd6\x6d\xdb\x46\xbb\xbd\x0c\x19\xa9\xde\x1a\
\x8d\x06\x8e\x8e\x8e\x14\x20\xf2\x3c\x0f\xdb\xdb\xdb\x58\x5a\x5a\
\xc2\x70\x38\xc4\x60\x30\x50\x40\xe1\xf0\xf0\x50\xd9\x2e\x71\xf5\
\x1a\xfd\x25\x1b\x2c\x5a\x09\x48\x60\x23\x74\xa2\x29\x14\x2b\x33\
\x99\x4c\x70\x74\x74\xa4\xd4\x83\xa4\x0a\x23\x27\xa0\xdc\x1f\x15\
\xd9\x68\x01\x88\xd9\x69\x8d\x46\x23\x15\x9e\x56\xe6\xd1\x39\xe5\
\x8d\x18\x3b\x7a\x46\x07\x21\x04\x82\x4c\xd3\xc4\xc1\xc1\x81\x52\
\x99\xf2\x3d\x17\x01\xa8\x0d\x9a\x49\x8d\x29\xe5\xd4\xe1\x29\x95\
\x97\xc0\xa8\xbe\xe2\x90\x3b\x42\xe5\x0e\x60\x4d\xd3\x54\x86\xf3\
\xef\x78\xc7\x3b\xf0\xf8\xe3\x8f\xe3\xf2\xe5\xcb\x70\xdd\x91\x72\
\xe5\x40\x79\x24\x63\x7b\x3e\xb9\xca\x04\x15\x05\xda\x64\x1a\x79\
\x40\xf7\x0c\x31\x7b\x2d\x29\x0e\xca\x63\xf1\x49\x53\x7a\xbc\x69\
\xf7\x17\x39\xa6\xd1\xbb\xa0\x36\x06\xcc\x69\x83\x35\x0b\x34\xce\
\x9e\xc1\xd2\xf3\x54\x46\xbd\x96\xf4\x71\x14\x8d\x3b\x0d\xe5\x97\
\xcd\x5f\x1a\xe0\x3b\xcd\xba\x7d\xbb\xa8\xbb\x8a\xbc\xff\xf3\x02\
\x16\xcf\x4b\x3e\x80\xf8\x20\xcc\xaf\x2d\x3a\x8d\x79\xc2\xe6\xcd\
\x24\xb3\xbe\xbb\xe4\x30\x8b\x03\x79\x27\x75\xbf\x28\xc0\x4a\x92\
\x69\x3f\x42\x8b\x54\x8a\xad\xbc\x92\x52\x2a\xbf\x56\x15\xa7\x82\
\x77\xbd\xeb\x5d\x6a\x85\xde\xb3\xcf\x3c\x83\x6e\xa7\x1b\x32\x43\
\x11\xc0\xaa\xd7\xeb\xca\x53\xfb\x60\x30\x80\x6d\x4d\x41\x4a\xad\
\x56\x53\x2c\x51\xb5\x1a\xae\x58\xdc\xde\xde\x46\xb3\xd9\x54\x6a\
\x40\x29\x43\x46\x88\x00\x4c\xab\xd5\x82\x94\x52\xf9\xc5\xa2\xe7\
\x46\xa3\x91\x62\x64\xc8\x8b\x3c\x6d\xd6\x4c\x6a\x35\x62\xaa\xb8\
\xdb\x04\x52\xcd\x8d\xc7\xe3\x58\xb8\x6a\xb5\xaa\xca\x4b\x2a\x39\
\x02\x52\xc4\x34\x91\x03\x53\xd3\x34\x51\xad\x56\x31\x1c\x0e\x95\
\x7a\xb0\xd1\x68\xa0\x56\xab\x29\xf5\x1d\xf7\x69\xc5\xff\x72\xbb\
\x2a\x72\xaa\x4a\xc0\x91\xdb\x7d\xf1\xef\x8e\xd4\x90\xdc\x2b\x3c\
\x7f\x9e\xbb\x95\xe0\x3e\xba\x08\x2c\x4d\x26\x13\xac\xac\xac\x60\
\x7d\x7d\x1d\x1f\xff\xf8\xc7\xb1\xbe\xbe\x1e\x33\xd8\x27\x60\xc5\
\xdf\x37\xbd\x07\xce\x60\x25\xb6\xab\x84\x76\x93\xd6\xa6\x53\x49\
\x83\x02\x40\x29\x0d\x68\x95\x19\xa3\x16\x35\x19\xcc\x4c\x53\x84\
\x6a\x76\x1e\x9e\xde\xdb\x64\x32\x81\xf9\xc4\x13\x3f\xf2\x53\x40\
\xb2\xb5\x7e\x1e\xa3\x33\x93\xd6\x02\x06\xe8\xbc\x7c\x2c\x4a\xf4\
\x8a\x2b\x52\xa6\xd9\x30\xc9\xf9\x4b\x6a\x1c\xe9\x71\xa4\xeb\xd5\
\xf5\xf8\xd2\x44\x37\x8a\x4c\xfa\x15\xe9\x90\xdf\x2e\x00\x6b\x51\
\xb2\x18\x6c\xb1\x08\x46\xe7\x74\x56\x11\xf2\x6f\x82\xb7\x07\x5d\
\x15\xb0\x88\x74\xca\x48\x51\x00\x52\x86\xf1\x29\xcb\x60\xa5\xa7\
\x3d\x5b\x2f\x65\x41\x56\x91\xf2\x25\x7d\xc3\xb1\xfb\x30\x12\xef\
\x49\x76\x2e\xa7\x68\x4b\x0b\x13\x39\xdf\x74\xc7\x2a\x9c\x10\x02\
\x86\x08\xd5\x5c\xe4\x0c\xb4\x56\xad\xc2\xb1\x1d\x0c\x87\x43\x8c\
\x23\x10\x62\x59\x16\xba\xdd\x2e\x8e\x8e\x8e\xd0\x6a\xb5\x14\x23\
\x45\x1b\x44\x4b\x29\x95\xd1\x3a\xa9\xb1\x68\xa5\x1d\x81\xa7\x6a\
\xb5\xaa\x54\x7a\x34\x38\x11\xd0\x91\x52\x2a\xb5\x20\x01\x12\xd7\
\x75\xb1\xb2\xb2\x12\xdb\xfa\x86\xea\x88\xef\x09\x48\xed\x97\x0c\
\xc9\x57\x57\x57\xb1\xbc\xbc\x1c\x03\x22\xe3\xf1\x38\xe6\xb4\x93\
\xa7\x49\xdf\x00\x19\xc2\x13\x88\xb2\x2c\x0b\xad\x56\x0b\xad\x56\
\x0b\x93\xc9\x44\xa5\x41\xf9\xe3\xe5\x90\x52\x2a\x70\x47\xa0\x88\
\xe2\x37\x0c\x43\x95\xc1\x75\x5d\x95\x4f\xea\xcf\x09\x10\x3a\x8e\
\xa3\xf6\x24\xa4\xb2\x01\x53\xbb\x3b\xc3\x30\x14\xd0\x95\x52\x62\
\x6d\x6d\x0d\x1f\xfa\xd0\x87\xf0\xc1\x0f\x7e\x10\x9b\x9b\x9b\xd8\
\xda\xda\x8a\xca\x27\x63\x5e\xe7\x93\x48\x81\x2c\xa2\x40\x10\x1d\
\x7a\x4c\x21\x06\x2b\xeb\x9b\x48\xf3\x53\x59\x86\xd0\x59\x44\x5f\
\x95\x24\x31\x5c\x04\x9a\xc4\xc4\xd5\x83\x14\xee\xd8\xab\x08\x8b\
\x76\xbc\xa7\x2d\x65\x07\x94\x34\xa4\x9a\xc7\x5e\x15\x41\xd6\x45\
\xd8\xab\x3b\xe0\xe6\xf6\x94\x7c\xe0\x7a\x4a\x19\x59\x80\xf0\x8e\
\xa1\xac\x6a\xf0\xa4\xf3\x54\xf6\x38\x4b\x45\x71\xda\x79\x4a\xbb\
\x96\xd6\x77\xa6\xcd\xde\x33\xc3\x22\xd9\xb5\x0d\x10\x7f\xa7\x49\
\xcf\xd3\xb3\x04\x02\x48\x3c\xcf\x83\x17\xed\xcd\x77\xf7\xdd\x77\
\xa3\xd9\x68\xe2\x81\xfb\x1f\xc0\x93\x4f\x3e\x89\xe7\x9f\x7d\x16\
\xaf\xbf\xfe\x3a\x46\xa3\x51\xb8\xba\x70\x30\x08\xdd\x1e\x44\xaa\
\x31\x72\x10\x5a\xaf\xd7\x15\xf3\xe3\x38\x0e\x2e\x5c\xb8\x80\xbd\
\xbd\x3d\xac\xac\xac\xc0\x30\x0c\x6c\x6f\x6f\x47\xaa\xc5\xa9\x4f\
\xa9\x46\xa3\x01\xcb\xb2\x30\x1e\x8f\x15\x10\xe3\xee\x0e\x84\x10\
\x38\x3a\x3a\x8a\x19\xd1\x73\x06\x87\xdb\x29\xd1\x35\xdb\xb6\xb1\
\xb6\xb6\x06\xd7\x75\xd5\x7e\x82\x00\x94\x8d\x18\xad\x84\x24\xa3\
\x79\xaa\x33\x60\xba\x81\x33\x0f\x37\x99\x4c\xb0\xb7\xb7\xa7\x3c\
\xd3\x93\x9b\x86\xa4\x6f\xa5\xd1\x68\x28\xc0\x44\xde\xf1\x69\x35\
\x64\xa7\xd3\x51\xac\x07\x8d\x03\xc4\x9a\x11\xa0\xa3\x3c\x70\x66\
\x8c\x40\x1f\x00\xa5\x72\x34\x0c\x03\x9b\x9b\x9b\x78\xd7\xbb\xde\
\x85\xbb\xef\xbe\x1b\xb5\x5a\x4d\xed\x61\x48\x2c\x21\x01\x60\xbd\
\xde\x92\xda\x9d\xfe\x2d\x49\x19\x77\xc8\x99\x25\x7a\x5b\x8b\xb7\
\xe1\x78\xfb\xcb\x3b\x9e\x57\x16\x1d\x47\x62\x9f\x22\xe3\xe1\xa8\
\x6e\xe9\x7d\x99\x4f\x3c\xf1\x23\x3f\x95\xc5\xa0\xa4\xd1\x7c\x49\
\x33\x5d\xdd\x40\x2e\xaf\xb3\xe3\x69\xf0\x5f\x56\x21\x4f\x42\x8a\
\x30\x65\xc9\xf7\xca\xe5\x35\x39\x1d\x99\x18\xa6\x8c\xcc\x0b\xce\
\xb2\xea\x7c\x91\xe9\x2c\x3a\x8e\x3c\x29\xda\x5e\xf2\xf3\x92\x9f\
\xd7\x3c\xe6\xb0\x08\x83\x55\x20\xa7\x0b\x88\x63\x3e\x39\x4b\x70\
\xa5\x4b\x5a\x5b\x4d\x5a\xdd\x9a\xc5\xbe\x0b\x21\xc2\x2a\x4d\x7c\
\x5f\x65\xa5\x38\x90\x4a\x3b\xd7\xf3\x9b\xd4\xb7\xe6\xc5\x13\xf8\
\x71\x3f\x42\xd3\x1f\x62\xe7\xf4\x5c\xec\x47\x20\x2c\x52\x11\x01\
\x34\xa0\x47\xfe\x7c\xa2\x7c\x54\x2a\x15\xac\xb4\xdb\xb8\x7c\xf9\
\x32\x56\xda\x6d\xb5\x01\x32\x67\x8a\xfa\xfd\x3e\xfa\xbd\x3e\x46\
\xa3\x11\x84\x10\xca\xf6\x88\x00\x46\xb3\xd9\x54\xea\xc0\x7a\xbd\
\x8e\xa3\xa3\x23\x0c\x06\x03\x34\x9b\x4d\x05\x20\x48\x1d\x46\xfb\
\xf2\x71\x35\x9b\xef\xfb\x31\x17\x10\xdc\x61\x27\x6d\xe3\x43\xea\
\x37\x32\x0c\x27\x1b\x31\x02\x42\xdd\x6e\x57\xd5\x05\xf7\xb8\xce\
\x41\x0e\x10\xb7\x75\xe2\x00\x89\x6c\xbf\x86\xc3\x21\xea\xf5\x7a\
\x6c\x59\x3e\x10\xda\xb2\xd5\x6a\x35\x65\x53\x46\x1b\x3c\x53\xb8\
\xc9\x64\xa2\x56\x40\x92\xda\x93\xa7\x47\xe5\x21\x50\x42\xec\x1e\
\x00\xa5\xb6\x24\xa0\x44\xef\xb3\xd1\x68\xe0\xfa\xf5\xeb\x78\xe4\
\x91\x47\x70\xfd\xfa\x75\x04\x41\x80\x7e\xbf\xaf\x40\x61\xc8\xa2\
\x4d\x59\x2b\xbd\x9d\x70\xe6\x25\x49\xe6\xe9\x03\x52\xbf\xd7\x24\
\x9c\x92\xd3\xcf\xe8\x58\x22\xef\x9b\x95\xac\xdd\xa6\xf7\xcd\xb3\
\xf1\xa7\xa5\x9b\x76\x2d\xca\x55\xec\x3e\x4f\xc3\x4a\x7a\x88\x07\
\x4c\xfa\xa8\xf9\x75\x5d\x8d\x90\x56\x51\x04\xbe\xf2\x10\x61\x5e\
\x41\x8b\x74\x82\x45\xc2\xa4\xa5\x53\x6e\xe6\x7b\x7c\xc4\xad\x27\
\xa7\xc7\x73\x9c\xb2\xa4\x85\x99\x17\xe4\xe4\xb3\x35\x8b\xc9\xeb\
\x22\xa4\x48\x5e\xf3\xf3\x72\xfb\xd0\x4f\x8b\xac\xd7\xb3\x06\x55\
\x65\x01\x72\x12\xdb\x56\xb6\xad\x96\x29\x6f\xb1\xb6\x13\xcf\x4f\
\xd9\x78\xf5\x34\xf2\x8e\x83\x20\x85\xe1\x22\xa7\xa8\x0a\x4c\xa5\
\xd7\x11\x01\x04\x12\xc3\x30\xc2\x8d\xa3\x65\x68\xbc\x2b\x03\x09\
\x48\x89\xbb\xef\xbe\x1b\x55\xc7\xc1\x5b\x6f\xbd\x85\xed\xed\x6d\
\xb5\x4a\x2e\xf4\x83\x15\x6e\x25\x42\x60\x81\x1c\x7e\x92\x7a\x0c\
\x08\x19\x97\x9d\x9d\x1d\x34\x9b\x4d\x98\xa6\x89\xdd\xdd\x5d\xb4\
\x5a\x2d\x00\x50\x7b\x0a\xb6\xdb\x6d\x54\x2a\x15\x78\x9e\xa7\xd4\
\x8d\x8e\xe3\x28\xc3\x72\x5a\xc1\xc8\x0d\xb6\x69\x8b\x12\xca\x3b\
\xad\xfc\x73\x5d\x17\xae\xeb\xa2\xd7\xeb\x61\x69\x69\x49\x0d\x7e\
\x04\xe6\xc8\x85\x04\x31\x5d\xa4\x1e\x24\xef\xf3\x94\xa6\x69\x9a\
\xca\x95\x03\x81\x1c\x02\x5e\xdc\x31\xa6\x6d\xdb\xb1\x4d\x9b\x69\
\xe5\x22\x57\x1b\x12\xc8\xe2\x6d\x98\x6f\xf2\xcc\x01\x16\x19\xec\
\x93\x6a\x95\x56\x58\x92\xe1\xbf\xeb\xba\xb8\x70\xe1\x02\xae\x5f\
\xbf\xae\xbc\xe2\x13\x9b\x46\xf1\xb8\xae\x8b\x7a\xbd\xaa\xd2\xe2\
\xac\x95\x0e\x2c\xd3\x44\x4a\x09\xf3\x18\xce\xc4\x55\x7a\x29\xa6\
\x35\x3c\x9c\x7e\xcc\x85\x03\x18\x1d\x8f\xf0\xbf\x65\xc7\x23\x3d\
\x0e\xfd\x58\xc7\x3a\x00\x00\xa6\x6a\x4d\x2a\x53\xe6\x2a\xc2\xa2\
\x95\xce\x29\xc4\x22\x05\x99\x27\x9d\x45\x4b\xda\xde\x8b\xbc\x83\
\x3b\xa9\x3c\x9d\x45\x79\xcf\x73\x3e\xbe\xd5\x25\xff\x1b\x3b\xa5\
\x8c\xdc\xa6\x72\x5c\x30\x58\x76\x82\x92\x37\xab\x5d\x74\x3e\x68\
\x10\xcc\xce\x47\x32\xd8\xe4\x7d\x33\x01\xac\x99\x34\x45\x8a\xba\
\x52\x26\x5f\xef\xf5\x7a\x10\x42\xe0\x81\x07\x1e\xc0\x60\x30\xc0\
\x8b\x2f\xbe\x88\x83\x83\x83\x70\x12\x1d\x48\xb8\xd1\x4a\x35\x52\
\xc7\x71\x0d\x07\xa9\xbe\x68\x05\x5c\xa3\xd1\x50\x00\x46\x4a\x19\
\x63\xb2\x68\xfb\x19\xcf\xf3\xd4\x9e\x83\xb5\x5a\x0d\xbd\x5e\x4f\
\x81\xa1\xa5\xa5\x25\x8c\x46\x23\xec\xee\xee\x42\x4a\xa9\x6c\xba\
\x6c\xdb\x56\x1b\x50\x03\x50\xab\x0d\xb9\xa7\x76\xf2\x76\x5e\xad\
\x56\xb1\xbc\xbc\x8c\xd5\xd5\x55\xe5\xab\x8a\xf2\x4f\x36\x52\x8d\
\x46\x03\xad\x56\x4b\x3d\xcb\x57\x30\x92\x5d\x53\xab\xd5\x52\xe3\
\x46\xb8\x3d\x4d\x4f\x31\x6e\xae\xeb\x02\x80\x02\x36\x64\xe0\x4f\
\x6a\x50\xb2\x57\x23\xa0\xc5\xc1\x23\x6d\xdd\xd3\xeb\xf5\xe0\xba\
\x2e\x96\x96\x96\xd0\xe9\x74\xd4\x42\x80\xab\x57\xaf\xe2\xd1\x47\
\x1f\xc5\xa5\x4b\x97\x60\x18\x46\x6c\xdf\xc6\x7e\xbf\x1f\xdb\x2a\
\x88\xda\x48\xd2\xa4\x44\x6f\x3f\x69\x6d\xb1\xac\xe8\xf8\x80\x83\
\xa2\xe3\x4c\xf6\xb3\xf2\x72\x6a\xe3\x9a\x44\xa6\x2d\xa7\x95\x54\
\xb1\xfa\x87\x99\x36\xdb\xd3\xc3\x94\xad\xfc\xbc\x74\x4e\x52\x92\
\xd4\x99\x3c\xff\x86\x86\x4c\x17\x21\x67\x59\xde\xf3\x98\x8f\x3b\
\x52\x94\xf5\x3b\x85\x8c\xdc\xe6\x52\x66\x90\xd0\x9f\x4b\x3a\xce\
\x3b\x2f\x72\x5c\x34\xdd\xa2\x71\x64\xa5\x69\x08\x63\xe6\x9e\x10\
\x62\xaa\xfe\x63\x33\xfe\x24\x11\x42\x84\x0c\x15\x8f\x83\x7e\x2c\
\x0d\xc3\x30\xd0\xef\xf7\x71\xb0\xb7\x87\xbd\xbd\xbd\x90\xb5\x92\
\x12\xb5\x5a\x0d\xcd\x66\x13\xbe\xe7\x63\x10\x6d\xc1\xc2\x81\x0f\
\xdf\x83\xef\x9e\x7b\xee\x01\x80\x98\x61\x36\xad\xd4\x23\xc3\xf1\
\xe1\x70\x08\xdb\xb6\xe1\xfb\x3e\x0e\x0e\x0e\x94\x4b\x07\x00\x18\
\x0c\x06\x18\x8d\x46\xca\xb6\xc9\xf3\x3c\x65\x9c\x2e\xa5\x44\xa5\
\x52\x51\x76\x49\xdc\xed\x04\xa9\xcb\x84\x10\x2a\xfe\x20\x08\xd4\
\xde\x87\xf5\x7a\x1d\xa6\x69\x2a\x50\x27\x84\x50\x69\x8e\xc7\x63\
\x74\xbb\x5d\x05\xb8\xc8\x55\x04\xb1\x41\xdc\xb8\x9f\xc0\x23\x09\
\xf7\xe5\x45\xac\x1c\x00\xb5\x1a\x91\x6c\xa9\xa8\x0c\xe4\x7b\x8b\
\x33\x7e\x95\x4a\x45\xa9\x17\xf7\xf7\xf7\x21\x84\xc0\xdd\x77\xdf\
\x8d\x8b\x17\x2f\xe2\x91\x47\x1e\xc1\xe5\xcb\x97\x11\x04\x01\x7a\
\xbd\x9e\x4a\x93\x16\x07\x00\x88\x40\xde\x28\x06\xae\x92\x88\x91\
\xbc\xf6\x1b\x14\x60\x86\xd3\xd4\xda\x6a\xbc\xcd\x8c\x21\x3f\x1f\
\x79\xcc\x96\xca\x6b\x8a\xa1\xfc\x3c\x92\x85\x8f\xb2\xea\x44\x39\
\x1a\x4d\x03\x4d\x74\xac\x5f\xcb\x0a\x93\x94\x21\xfd\x38\x2b\x9d\
\xd3\x10\x5e\xf9\x49\x79\x2a\x92\x9f\x22\xfd\x78\x7e\x9d\x9d\xae\
\xca\xec\xac\xeb\xfd\xbc\x48\xb1\x32\x2f\xa2\x5e\x16\xc1\x6c\x14\
\x09\x73\x72\x0c\xca\xa2\xe3\xc8\x0b\x33\x0f\x48\xc9\x03\x47\x89\
\xcf\xe7\xc4\x95\xc7\x54\xe9\xdf\x6f\x59\x90\x54\xe6\x3c\x6d\xe0\
\x52\xdf\x31\x1b\x4b\xe2\xdf\xf5\xd4\x0e\x50\x08\x01\x43\x08\x04\
\xac\xcf\x97\x52\x22\xc8\x69\xa3\x2a\x9c\xf4\x11\x48\xa8\xd5\x6f\
\xaf\xbf\xfe\x3a\x5e\x7d\xf5\x55\x4c\x26\x13\x05\x14\x7c\xcf\x87\
\x11\xb1\x3a\xe4\x97\x8a\x80\x03\xb1\x57\xb5\x5a\x0d\xfd\x7e\x1f\
\x9d\x4e\x47\x19\xb4\xd3\xfe\x82\xc4\xc0\xf4\xfb\x7d\xb4\xdb\x6d\
\x2c\x2f\x2f\x2b\xdf\x4d\xa3\xd1\x08\xb6\x6d\xa3\xd5\x6a\x29\x35\
\x19\xd9\x61\xd5\xeb\x75\x65\x77\x45\xac\x0d\x31\x4c\xa4\x8a\x23\
\x66\x8c\x56\xe5\x91\x2a\x4f\x4a\x89\x4e\xa7\xa3\x5c\x3e\x90\x5a\
\x90\xd7\x31\x6d\x7e\xcd\x0d\xcc\xc9\x88\x9c\x87\x23\xe7\xa6\x1c\
\x54\x51\x58\x02\x7f\x04\x96\xc8\x6e\x8c\xbc\xd7\x53\x3c\xdc\xef\
\x95\x65\x59\x68\x36\x9b\x31\x57\x13\x17\x2e\x5c\xc0\x43\x0f\x3d\
\x84\xbb\xef\xbe\x1b\xf5\x7a\x1d\x4b\x4b\x4b\x6a\x83\x6b\x52\x3d\
\x72\xdb\x35\x4e\x20\x50\x7b\x29\x67\x0a\x53\xfc\xbe\x0e\xe0\x12\
\xdb\x2c\xb2\x27\xf6\x69\x78\x41\x3f\xd6\xbf\x8d\xb4\x71\xfc\x38\
\x92\x97\x47\x29\x80\x2c\x53\x92\x19\x06\xab\x08\x7b\x95\x06\x18\
\xf8\xd2\xd8\xb4\x0c\x25\x3d\x77\x16\x2c\x0a\x07\x58\xba\x0e\x75\
\xd1\xea\xc1\xac\x3a\x3e\x6d\x39\xeb\x7a\xbf\x23\x71\xd1\x99\xd3\
\x64\xb9\xb3\x45\x51\x9a\x14\x9d\x0c\x15\x89\x23\x2d\x9e\xe3\xb0\
\x4b\x79\x69\x66\x4d\x74\x16\x91\x17\xe8\x0c\x56\x18\x40\xa5\xcb\
\x41\xe2\x4c\x5f\x2f\x64\x0c\x85\x86\x9b\xd9\x86\xdb\xdc\x6c\x6c\
\x6c\xe0\xbe\xfb\xee\x43\xa7\xd3\xc1\xad\x5b\xb7\x62\x46\xde\xe4\
\xf6\x80\xec\x84\xc8\x51\x68\x10\x04\x18\x0c\x06\x78\xe6\x99\x67\
\x94\x11\x7c\xbd\x5e\x0f\x99\xaf\x88\xf5\xa1\x3c\x0d\x87\x43\x08\
\x21\xb0\xb4\xb4\x84\x46\xa3\xa1\xb6\x91\xa9\xd7\xeb\x58\x5b\x5b\
\x43\xa7\xd3\x41\xaf\xd7\x83\xe7\x79\x68\x34\x1a\x68\xb7\xdb\xb1\
\x7d\x02\x09\x48\x71\xdf\x4e\xe4\x7c\xb3\xd5\x6a\x61\x75\x75\x35\
\xf4\x48\x1f\x81\x29\x62\x8d\x48\xbd\xc8\xf7\x32\x04\xa0\xd4\x88\
\xe4\x8c\x95\x83\x3e\x5a\x61\x48\xea\x49\x60\x6a\x77\x25\xa5\x54\
\xce\x51\x09\x24\xe9\x46\xf8\xb4\xe2\x8c\x40\x11\x19\xb2\x73\x9b\
\xac\x6e\xb7\x0b\xdf\xf7\x71\xe9\xd2\x25\x7c\xe2\x13\x9f\xc0\x43\
\x0f\x3d\x84\xfd\xfd\x7d\x0c\x87\x43\xec\xec\xec\x28\x9b\x37\xb2\
\x77\x23\xe6\x0a\x80\xaa\x77\xdb\x36\x67\xda\x08\x1f\xeb\x8a\xf4\
\x45\x73\x2d\x03\xd1\xe2\x0c\xb4\x71\x27\x8f\x8c\xa1\xe3\x24\xb5\
\xe6\x49\x01\xab\x45\x49\xcc\x06\xab\x28\xbb\x91\xc7\xf8\x64\x51\
\x90\x79\x0c\xd8\x69\x89\xfe\xc2\xf2\xa8\xd3\x24\xc9\xc3\x26\x79\
\xa0\x32\xba\x5a\x22\xd7\xf3\x4b\x1a\xb0\x3a\x4f\x8d\x71\x51\x52\
\x14\x34\xe6\x97\xfd\x74\x18\xac\x45\xe4\xe3\x5b\x91\xc1\xe2\xe1\
\xe7\xe9\x64\xf5\x10\x7a\x87\x9e\xd5\xd9\xa7\xc5\x92\x05\x92\x78\
\x3f\x59\x86\x7d\xe3\xcb\xf5\xd3\xe2\x34\x60\x26\x3e\x4b\x46\xee\
\xfa\x37\x91\xc4\x08\xcc\x38\x99\x14\x22\x36\xa2\x1a\x86\x09\xc3\
\x0e\x97\xfb\xd7\x6a\x35\xbc\xe7\x3d\xef\x81\x94\x12\x9f\xff\xfc\
\xe7\xb1\xbb\xbb\xab\x36\x12\x0e\x22\xc0\x41\x3f\x62\x73\x68\xc5\
\x1e\xf5\xb5\xbd\x5e\x0f\xdb\xdb\xdb\xa8\x54\x2a\xca\x85\x80\x65\
\x59\xb8\x78\xf1\x22\xaa\xd5\xaa\xb2\xdf\x22\x3b\x2d\xcf\xf3\x94\
\x41\x7d\xaf\xd7\x53\x76\x54\xe4\x5f\x8b\x18\x26\xbe\x7a\x0f\x80\
\xb2\x5d\x22\x76\xab\x52\xa9\xa0\x5a\xad\x62\x67\x67\x47\x95\xdb\
\x71\x1c\x65\x74\x4f\x46\xe6\x9c\x09\x22\x70\x57\xad\x56\x95\x53\
\x55\x3e\x66\x10\xb8\x23\x90\x49\xe0\x48\x4a\xa9\xc0\x9e\xe7\x79\
\x6a\x2f\x44\xba\x4e\xaa\xcb\x46\xa3\xa1\xec\xa6\x88\xf1\x22\xf0\
\xb7\xb3\xb3\x03\xdb\xb6\x71\xfd\xfa\x75\x3c\xf6\xd8\x63\xd8\xd8\
\xd8\x50\xe5\x27\x63\x76\x00\x31\xff\x5e\x7c\x73\x6c\xbe\xbd\x90\
\x3e\x56\x73\x46\xab\x10\xc0\xca\xe9\x5b\x8b\x7c\xdb\x49\xab\x08\
\xd3\xe2\xd1\xbf\x6b\x3d\x0d\x0e\xb2\x8a\x4c\x50\xb8\x14\x19\x27\
\xf2\x71\x90\xc8\x44\x9d\x96\xfe\x91\xcd\xcb\x5e\xe5\x49\x16\xda\
\x3c\x0b\x16\x45\x37\x72\x4f\xa2\x1c\x17\x21\xc7\xa9\xb3\x45\xcb\
\x1d\xf6\xea\x7c\x4a\x7e\xa7\x75\x4a\x19\xb9\x4d\x84\x33\xe6\xc5\
\x18\xc0\x7c\x49\x03\x42\x79\x61\xf8\xab\x9b\x97\xc5\x4a\x1b\x3c\
\xf2\xe2\xc9\xcb\xb3\x94\x32\x34\x60\x67\xcf\x84\x9b\x3f\x4f\xfb\
\x3b\x29\x65\xa4\xe6\x88\xdb\xa5\x06\x41\x30\x03\xb0\x4c\xcb\x84\
\x69\x18\xa1\x5a\x2c\x62\x7b\x36\x37\x37\xb1\xb9\xb9\x89\x7e\xbf\
\xaf\x00\x46\xc0\xd8\x28\x60\xba\x91\x33\xf9\xb6\xa2\x7b\x83\xc1\
\x00\x6f\xbe\xf9\xa6\x8a\xdf\x71\x1c\x74\x3a\x1d\x5c\xba\x74\x09\
\xd5\x6a\x15\x93\xc8\x07\x17\x19\xc0\x4f\x26\x13\x1c\x1e\x1e\x2a\
\xc7\xa7\x7c\x4c\x21\x55\xe4\x68\x34\x52\x20\xac\xdd\x6e\xc3\xf7\
\x7d\x1c\x1e\x1e\x2a\x63\xf6\xd1\x68\xa4\x18\x1f\x2a\x33\xd9\x6c\
\x91\xea\x90\xbb\x80\x20\xe7\x9e\xc3\xe1\x10\x47\x47\x47\x4a\x7d\
\xe9\xba\x2e\x2c\xcb\x42\xbd\x5e\x07\x10\xf7\xbe\xce\x81\x19\xb1\
\x71\xed\x76\x5b\x31\x63\x7c\x9f\x42\xaa\x1f\x52\xa9\x06\x41\xa0\
\xdc\x32\x10\x13\x78\xf5\xea\x55\xdc\x75\xd7\x5d\x78\xf0\xc1\x07\
\x71\xf1\xe2\x45\xec\xee\xee\x62\x38\x1c\xa2\xd9\x6c\x2a\x83\x78\
\xcf\xf3\x62\xdb\xeb\x50\xd9\x84\x98\x6e\x3b\x44\x7a\x64\xdd\x19\
\x66\xa9\x71\xa0\x40\xd8\xb2\x13\xa8\xb2\x13\x62\x9d\x08\x49\x4b\
\xb3\xc8\x37\x58\x34\x6d\x8e\x5d\x78\xdc\x52\xe6\xd8\x60\x25\x65\
\x2a\x2b\xd1\xac\xfb\x49\x1d\x46\xda\xb3\x67\x3d\xc0\xeb\xfa\x69\
\x3a\x06\xa0\x3e\x82\xa4\x95\x86\xf3\x48\x5e\xbd\x9c\xa6\x9c\x75\
\xbd\xdf\x91\xb8\x14\x79\x17\x77\x00\x56\xbe\xf0\x76\xad\x77\x86\
\x65\xe3\xc9\xbb\x7e\x1c\x06\x2e\x89\xbd\x2a\xd2\x9f\xf2\xbe\x28\
\x29\x2f\x81\x97\x0e\x0a\xa5\x7e\x3d\x1a\x14\x04\xdd\x0b\x88\x01\
\x31\x14\x18\x13\x10\x90\x08\x55\x8a\x81\x24\x55\x61\xc8\xba\x54\
\x22\x76\x46\x08\x81\x95\x95\x15\xdc\x77\xdf\x7d\xe8\x76\xbb\x78\
\xed\xb5\xd7\x60\x5b\xb6\x32\x5c\x27\xb5\x1f\x67\xb1\x84\x08\x9d\
\x84\xd2\x36\x33\x64\x8b\x44\xe0\x60\x7f\x7f\x5f\xad\x8e\x6b\x34\
\x1a\x58\x59\x59\x51\xc0\x87\x7e\x4b\x4b\x4b\x4a\xdd\x26\xa5\xc4\
\xd2\xd2\x12\x36\x37\x37\x15\xc8\x01\x42\x83\x71\x52\xbf\x91\xba\
\xed\xca\x95\x2b\xe8\x76\xbb\x0a\x0c\xd6\x6a\x35\x65\xbf\x34\x1e\
\x8f\x71\x74\x74\xa4\xdc\x4a\xd0\x39\xbd\x1f\xbe\x87\xa0\x62\x0d\
\x23\x5b\x34\x02\x30\x3c\x9f\x7c\x7f\x40\xda\x02\x88\xde\x07\xdf\
\xd4\x9a\xb3\x59\xe1\x3b\x30\x15\xd3\xb7\xba\xba\x8a\x8b\x17\x2f\
\xe2\x03\x1f\xf8\x00\x5a\xad\x96\xf2\x6e\x0f\x40\xd9\x9c\x71\x77\
\x0c\x64\x3f\x46\x06\xee\xdc\x05\x45\xb8\x12\xb2\x16\x03\xd6\xc0\
\xd4\xac\xe7\x24\x4c\x63\xa8\xbc\x33\x2c\x90\x88\xb7\xed\xb4\x6f\
\x20\xeb\x3b\xc9\x53\xab\x9f\xd6\x38\x17\x3a\xe9\x4d\xbf\x9f\xe8\
\xc9\x3d\x2d\x93\x3c\xbb\x22\xe1\x9a\x21\x04\x20\xa2\x9d\x79\xa2\
\x8f\x97\x87\x8b\xe9\x7b\xb5\x67\x93\x24\x76\x3f\x45\x67\x5b\x46\
\x62\xcf\xb1\x5a\x11\xd3\x00\x00\xa3\x4c\xf3\x52\x91\xb2\xc8\x2a\
\x05\xde\xf1\x4f\xaf\x85\xcf\x17\xdb\x60\x3a\xb5\x0c\x39\x52\xaa\
\x9e\x66\x1a\x89\x9e\x67\xba\x46\x79\x8f\x3f\x28\x25\x00\xe3\xfc\
\x80\xb7\xa4\x3d\xb5\x92\xea\x52\x1f\xf0\xe2\x36\x09\xc7\xcf\xc7\
\x22\xd8\x95\xbc\x2f\xa5\x58\x1a\x8b\x08\x93\xdd\x09\x16\x95\xe3\
\xaa\xa7\xa5\xd4\x99\x2b\x19\xb5\x53\xba\x36\x6d\xa7\xe9\x91\xcc\
\x44\x1a\xff\x0b\x5e\xda\x74\x95\x60\x7e\x1f\xc1\x9e\x93\xe1\x1f\
\xde\xa3\x0a\x3d\xab\x7a\x78\x50\x3d\x51\x47\xce\x07\x1d\x7e\xae\
\xff\x8d\xe7\x31\x1e\x07\x14\x7c\x12\xec\x19\x21\x03\x05\xa4\x04\
\x67\xe8\xc2\xce\x5b\xd5\x39\xc5\x27\x03\x1f\x8e\x6d\x61\x75\x65\
\x05\x17\x37\x2e\xa0\xdf\xeb\x61\x3c\x1e\x2b\xe0\xc3\xfd\x2b\x11\
\x46\xb3\x6c\x0b\xcd\x56\x13\x52\x02\x4e\xc4\x0e\x19\x46\x38\x6e\
\x90\x73\x53\x89\xe9\x06\xc6\x64\x4f\x45\x20\x8d\x56\x19\x4a\x29\
\xb1\xbc\xbc\xac\x40\x06\x79\xa1\x27\x66\x6c\x3c\x1e\x47\x71\x1b\
\x8a\x39\x22\xef\xef\xb4\x2a\x8f\xd4\x8a\x5c\xa5\x46\xea\x58\x62\
\x7f\x28\xff\x04\x9c\x00\x28\x5b\x2b\x62\x9e\x78\x18\x02\x63\xc4\
\x66\x51\x1b\x25\xe7\xa6\x04\xc2\xc8\x90\x9d\x4f\x06\xc8\x08\xdf\
\xb2\x2c\xac\xaf\xaf\xe3\xde\x7b\xef\xc5\xda\xda\x1a\x1c\xc7\x41\
\xbf\xdf\x9b\x51\x15\xc7\xbb\xda\xf0\xfd\xd2\x77\x10\x04\xbe\xfa\
\x4e\x84\x08\xc1\xb3\xef\xd3\xb3\x71\x1f\x52\xaa\x45\xc8\xe4\x31\
\x28\x4b\x74\x72\x22\x0b\xa4\xe9\xe3\xa0\xae\xb2\xcc\x7f\x2e\x1b\
\x54\xe9\x61\x73\x27\x42\xdc\xc1\x02\x9f\x7f\x88\x78\x18\x41\x6a\
\x40\x21\x30\x75\xcb\x20\x62\xe0\x4a\x9f\x00\x51\xda\x96\x5e\x41\
\x33\x99\x20\xb4\x1e\x81\x27\x20\xbd\x53\x99\xa9\x20\x02\x59\x04\
\xbc\x52\xc0\x5a\xea\x48\x96\x14\x7e\x4e\x3a\x31\xed\x7e\x2c\x39\
\x16\x7f\x91\x54\x8a\x00\x2c\x31\xd3\x83\xea\x8d\xd2\x4c\x44\xea\
\x89\xc8\x7f\x26\x5e\xcc\xdc\x2f\x03\x70\xe2\xb3\xda\xa9\x2e\x21\
\x1e\x47\x1c\xd8\x4e\xc7\xb4\xe9\x5c\x57\xc5\x53\x04\x35\x97\xcd\
\x57\x82\xe4\x95\x31\xe9\x23\x2b\xca\x1a\xf0\x38\x82\x20\x3b\x1f\
\x45\x64\x11\x00\x6b\x31\x40\x6f\x51\x4b\x96\x67\xdb\x64\x99\x32\
\x96\xf9\x1e\xd3\x24\xec\xc0\xe2\x03\x0d\x7f\x3e\x6b\xb1\x8d\x16\
\xd1\xec\x71\x22\xc0\x02\x52\x41\x56\xd2\x65\x76\x6d\x0a\x6e\xc2\
\xb8\xa9\x77\x91\xda\x71\x5e\x9e\xb2\x06\x15\xbd\x3e\xb8\x70\x90\
\x18\x1b\x9c\x23\x00\x37\x05\x59\x00\x02\x02\x4f\x80\x41\x80\x0c\
\xd3\x3e\xcc\x0f\x24\x64\x10\xc0\x10\x21\xab\x15\xf8\x3e\x2a\x8e\
\x83\x2b\x97\x2f\xc1\x10\xc0\xea\xca\x0a\xfa\x83\x01\x0e\x8f\x3a\
\xca\xcb\xfb\x70\x38\x54\xae\x0b\xc2\x84\x05\x96\x96\x97\x43\x23\
\xf7\xc8\x18\xc7\xf3\xbc\x50\x75\x49\x7d\x5f\x20\xe1\x47\xc0\x89\
\x5c\x23\xd0\xf6\x31\x00\xb0\xbd\xbd\x8d\x76\xbb\xad\x56\xd7\x71\
\x57\x0c\x42\x08\x05\x9c\xc8\x0e\x8a\xec\x9f\x68\x2b\x9e\x66\xb3\
\xa9\x58\xad\xbd\xbd\x3d\x65\x50\x2f\x84\x50\xea\x39\xda\x40\x99\
\xaf\xc6\x23\x96\x88\x98\x31\x55\x6d\x8c\x35\x22\x57\x0a\xa4\x62\
\x24\xa0\x46\xf9\x69\x36\x9b\x00\xa0\x8c\xe3\xe9\xd9\x7a\xbd\xae\
\x56\x47\x2e\x2d\x2d\xe1\xd2\xa5\x4b\x58\x5f\x5f\x87\x65\x59\x38\
\x3a\x3a\x02\x30\xd5\xaa\x10\xa3\x39\x1d\x27\xc2\xf7\xcb\x01\x96\
\xef\x7b\x51\x75\x87\x20\x3e\x04\x7e\xe9\x6c\x55\x52\x3f\xc9\x81\
\x50\x52\xbb\x8b\xb7\xbf\xf0\x97\xa4\xf9\x49\x63\x9f\xb2\xd3\x2e\
\x37\xce\x27\xa5\x91\x0f\xb0\x8a\xf5\x3b\x92\x4d\x76\xf4\x34\xc3\
\xc3\xe9\x78\x23\xc4\xd4\xa1\xae\x10\x02\xd6\x3c\x8c\x83\x3e\xf8\
\xa7\x55\x98\x1e\x86\x27\xcc\xff\xea\x61\x33\xd3\x91\x32\x17\x64\
\xe5\xc6\x71\x8a\x52\x26\x4d\xbd\xb1\x64\xbd\xfc\x2c\x5a\xf5\xb8\
\xe5\x4d\x8b\x23\xcd\xaf\xc8\x79\x61\xad\x48\xf8\x0c\x22\x8f\xc5\
\x4a\x7b\xfe\x8e\xa4\xcb\xbc\xe0\x2a\x2d\x8e\x79\x44\xef\xf4\xf9\
\xf7\x52\xb6\x3d\xe6\x76\xc4\x05\xca\xbb\x88\x38\xb2\x44\xef\x1f\
\xcb\x96\x77\x26\xcd\x74\xc2\x4b\x01\x2e\x29\xe3\xc7\x86\x10\x30\
\x4c\x13\x32\x62\x95\xa8\x3f\xa8\xd7\xeb\xb8\x7a\xf5\x2a\x2e\x5c\
\xb8\x00\xcf\xf7\xd1\x1f\x0c\xd1\xed\x76\x95\x3a\xae\xd3\xe9\x60\
\x77\x77\x37\xf4\x9f\x75\x70\xa0\xb6\x9e\xe1\x5e\xd7\x39\x13\x24\
\x20\x10\x44\x2c\x10\xd9\x75\x91\x1b\x03\xee\x9a\x81\xef\x03\xc8\
\xb7\xe3\xe1\x6e\x18\x28\x4e\xae\x96\x23\xb0\xb5\xb6\xb6\xa6\xee\
\xf1\xf0\x04\xd0\x09\xd4\x09\x21\x94\x7d\x14\xfd\x88\xa1\xe2\x86\
\xe9\x9c\xb1\xa2\xf8\x28\x7e\x5e\xff\xa4\xd6\xb3\x6d\x1b\x8e\xe3\
\xa0\xdd\x6e\xe3\xae\xbb\xee\xc2\xda\xda\x1a\x96\x96\x96\x94\x97\
\x78\x00\x4a\x15\x5a\xa9\xd8\x89\xe3\x27\x7f\xf7\x69\x2b\xe3\xa7\
\xd7\x66\xdb\x41\xda\x24\x34\xd6\x54\x52\xc6\x91\xa4\xf1\x3b\x0b\
\xb8\x9d\xf6\x38\x51\xe8\xbb\xc8\x61\xba\xb9\x96\x43\x1f\xff\xf2\
\x80\xa2\x10\x25\x36\x7b\xd6\xc9\x89\xa4\x41\x38\x09\x58\xe9\x99\
\xd4\x9f\x4d\xcb\x24\x7f\x4e\x3f\x2e\x2b\x67\x0d\xb2\x78\x3e\xf4\
\xe3\xbc\xc6\x9d\x14\x47\x5e\x59\xe6\x2b\x6f\xfc\x0d\x67\xbd\x5f\
\x92\x99\x0f\x4c\x9c\x17\xc6\x27\x7d\x30\x4b\x6b\x5f\xfc\xfe\xf4\
\xfa\xc9\xb7\x93\xb3\x6c\x8f\xf3\xc8\x71\x81\xc2\x3c\x80\x37\x4f\
\x38\xe3\x5b\xe6\x3b\x2a\x92\x97\xb2\xe0\x2a\x29\xce\x45\x80\xab\
\xb4\x49\x6b\xde\x24\x6c\x91\xc2\x9d\x2f\x73\x8f\xe1\x00\xd4\xb6\
\x38\x7e\x20\x51\xab\x37\x14\x78\x11\x22\x74\xea\x79\xeb\xd6\x2d\
\x74\x3a\x1d\x6c\x6d\x6d\xe1\xd9\x67\x9f\x55\x8e\x48\x01\x28\x03\
\x73\xf2\x8e\x2e\x83\xa9\xdd\x16\x01\x2c\xb2\xe7\x22\xb0\x72\x70\
\x70\xa0\x00\x0c\xd5\x31\xd9\x49\xf1\xad\x6b\x28\xaf\x04\xa2\x68\
\xa0\xe4\x86\xe0\x94\x3e\xd9\x8e\x11\x28\xa2\x2d\x76\x00\xc4\x6c\
\xbb\xf8\x39\x77\x94\xca\xbd\xa5\x93\x84\xcc\x91\xaf\xde\x07\x07\
\xa5\xcb\xcb\xcb\x58\x5a\x5a\xc2\xc6\xc6\x06\x36\x37\x37\x15\x43\
\x37\x99\x4c\x62\xab\x2a\x43\x6f\xf5\xa1\x9f\x30\x02\xa7\x54\x17\
\x1c\xc0\xa5\x81\xef\x69\xff\x52\x6e\x72\x50\x64\x8c\xd7\x01\x95\
\xde\x97\xf1\xe7\xa7\x63\x5d\x62\x72\x89\xcf\x1d\x47\x72\x27\x3d\
\x05\x92\xe0\x3b\x28\xe8\xe5\x0c\xcf\xe9\x37\x4d\x93\x8f\xe9\x99\
\x7b\x11\x72\xe1\x8a\xae\xa4\xc1\x9b\x22\xd6\x3f\xfa\x22\x08\x39\
\x09\xf1\xa6\x82\x2b\x62\xb1\x0a\x4a\x5a\x5e\x17\x21\x65\x62\x49\
\x03\x42\x59\xe7\x49\x40\x95\xce\xd3\xca\x92\xf5\x6e\x32\x45\x4e\
\xeb\xb5\x48\x1c\xc9\xe5\x01\xca\xd5\xca\x7c\x72\x9c\xf7\x97\x47\
\x77\xf3\xeb\x0b\x1e\x9f\x52\x25\x9f\xfd\x38\xf9\x34\x8a\xcb\xe2\
\x54\x84\x27\x01\xb6\xe6\x8d\x2b\xaf\x3c\xc7\x05\x5a\x49\xd7\x16\
\x0d\x80\xb2\xd2\x59\xd4\xc4\x85\xc7\x63\x59\x96\x02\x2b\x0a\x00\
\x99\x21\x73\x33\x99\x4c\x00\x84\xef\xbb\xd1\x68\xe0\xea\xd5\xab\
\x98\x4c\x26\xb8\x76\xed\x1a\xda\xed\x36\xde\x7a\xeb\x2d\xbc\xfc\
\xf2\xcb\xd8\xdd\xdd\x55\x76\x51\x04\x76\x7c\xcf\x83\xef\x4d\x8d\
\xbe\x79\xfa\x34\xb0\x0d\x06\x03\xe5\x7a\x80\xd2\x27\x37\x05\xc0\
\x74\x5b\x1e\xfa\xab\x33\x49\x42\x08\xe5\x8b\x8b\x6c\xa7\x48\x2d\
\x48\x71\x10\x30\xe2\x76\x5c\xf4\xbc\x65\x59\x6a\x85\x21\x31\x6d\
\x64\xb4\x4f\x40\x8a\xea\x60\x3c\x1e\x2b\x15\x60\xad\x56\x43\xa5\
\x52\x51\x00\x8b\x1c\xad\x92\xcf\x2d\xca\x2b\xd9\x71\x51\xbe\x62\
\x9e\x64\xd9\x3b\xa6\xfa\xe0\xe3\x2f\x5d\xe7\xf7\xa9\x1c\x49\xef\
\x34\x49\xd2\xc7\x80\xf8\x84\x86\x87\xcd\x92\xb3\x98\x44\xe6\xb7\
\x79\x91\x3b\x87\xd6\x17\x01\xa4\xc5\xcf\xc3\x10\xf0\xb5\x2c\x6b\
\x3e\x06\x2b\x8b\x21\xc9\x1f\x2c\x8a\xd1\x90\xa9\x2f\x3e\x2c\x4d\
\xd1\x6c\x67\xe6\xf5\x34\x25\x0b\xac\xa4\x75\x80\x69\xec\x8a\x7e\
\x5c\x36\x4c\x4a\x0e\xc1\x07\xcf\x22\xe9\x90\x28\x00\xbc\x00\x06\
\xeb\xa4\x25\x69\x42\x90\x24\x61\xf9\x6e\x1f\x66\xe9\x34\xe5\x38\
\x8c\x4c\x1a\xf3\x32\x0f\x00\x38\x4e\x1c\x69\x65\x58\x34\xb8\x4a\
\x9a\x5c\xce\x0b\xfe\xca\x96\x37\x6f\x62\x3b\xaf\x70\x36\x89\x6f\
\x1a\x1c\xfe\x02\xf8\x5e\x1c\x74\x01\x50\x03\x4f\xbd\x5e\xc7\x63\
\x8f\x3d\x86\xcb\x97\x2f\x63\x65\x65\x05\x2f\xbe\xf8\x22\xb6\xb6\
\xb6\x94\xed\x93\x94\x52\xcd\x28\x08\xa8\x70\x77\x1c\x7c\xfb\x18\
\x5e\x36\xbe\x82\x90\x06\x3a\x72\xfe\x49\x00\x8a\x1b\xdd\xd3\x0a\
\x3b\xdd\x5f\x95\x94\x52\x39\x49\x25\xa7\xa5\xdc\x15\x02\xc5\x63\
\x59\x96\xf2\x48\x4f\x61\x69\x50\xa5\xf0\x40\x38\x40\x93\x1a\x70\
\x6d\x6d\x0d\xad\x56\x4b\xad\x46\x24\x9b\x2e\x5a\xc5\x28\x84\x50\
\xf7\xe8\x1b\x21\x87\xa7\x8e\x13\x1f\xaa\xe9\x9e\x0e\x76\x78\xf9\
\xf5\xbe\x2d\xcf\x11\x38\x7f\x26\x79\x0c\x60\x8b\x24\x12\xd2\x4d\
\x93\x59\x56\x2b\xf7\x91\x85\x48\x5e\xde\x8a\x30\x58\x49\x71\xf1\
\xb6\x28\x65\xe8\x1f\x8e\xaf\x94\x25\x37\x1d\x95\x4a\x65\x6a\xe4\
\x9e\x9b\x00\x10\x73\x58\x97\xc4\xa2\x24\xb1\x29\x3a\xfb\x92\x04\
\xa2\x78\xa7\x9b\x17\xc7\x3c\xb3\xe5\x2c\xc6\xe7\x38\x52\x24\xa6\
\x3c\xf5\x45\x11\xc0\x99\x75\xac\xa7\x95\x16\x26\xb7\xdc\x11\x83\
\x95\x15\x47\x5a\xba\x0a\xac\x2c\xc0\xab\x45\x91\x0f\xb6\xc8\x3b\
\x4c\x6b\x77\x45\x3a\x85\x45\x0e\x4c\x45\x3a\x93\xfc\x81\xf2\xd8\
\xd9\x38\x11\xb6\x64\x1e\x80\xa3\x7f\x07\xf3\x81\x24\x09\x20\x5b\
\xf5\x56\xa6\x8d\x24\x9d\x2f\x12\x68\xe5\xe5\xb3\x68\x9b\x2f\x9b\
\x7e\x56\xb8\x79\x84\x66\xe6\xdc\xfe\x8a\x03\x13\xc3\x30\xe0\x47\
\x20\x26\xc9\x0d\x0e\x01\x1b\xdf\xf7\xb1\xb1\xb1\x81\x56\xab\x85\
\x2b\x57\xae\xe0\x8d\x37\xde\xc0\xeb\xaf\xbf\xae\xbc\xc2\x4f\x26\
\x1e\xac\xc8\xe5\x00\x57\xe5\x01\x53\xa7\xab\x94\x0f\x00\x31\xf5\
\x1c\xd9\x67\x91\x9d\x14\x01\x22\x60\xba\x05\x0d\x01\x43\x29\xa5\
\x5a\x81\x48\x71\xd3\x35\x0e\xe6\xa6\xe0\x51\xaa\x70\x94\x1f\xc7\
\x71\x54\x9b\xa6\xbd\x15\x69\x0b\x1c\xca\x13\x39\x0e\x25\xc6\x8b\
\xec\xb9\x68\xe5\x22\x77\xb1\x40\x1e\xef\xc9\x01\x29\x67\xa8\x48\
\x38\xf8\xe2\xd7\x28\x4f\x1c\x60\xc5\xc1\x56\x80\xa9\x4a\x4b\x6b\
\x73\x6a\x42\x29\x00\x31\xf5\x04\x10\x3b\x86\x84\x10\x46\xb8\x30\
\x42\x46\x31\xc8\x40\x21\x15\xb5\xef\x65\xc4\x0c\x4d\xff\x46\x79\
\x62\xe7\xa7\x21\x85\xbe\xab\x9c\x51\x9c\x33\xa8\xc0\xf4\x7b\x22\
\xb5\x73\x08\xae\x2c\xa5\x9a\xe6\x3e\xd5\x62\x00\x6b\x1e\x66\x47\
\xef\x1c\x92\x06\xe2\x32\x4c\x48\x91\x38\x20\xf2\x55\x84\x67\xc5\
\x52\x65\x49\x16\xe8\xd1\x3b\xce\xc5\x32\x53\x27\x27\xb3\xef\xee\
\xf4\x66\x27\x59\x92\x04\xd4\x93\xc2\xe4\xdf\x3f\x07\x85\xb9\x4d\
\x64\x11\x03\x79\x99\x38\xb2\xbe\xa1\xe3\xa6\x3d\x6f\x5c\x65\xe3\
\x38\xad\xf2\x2e\xb2\xbf\xd0\x99\x11\x9d\x39\x32\x0c\x03\xc2\x88\
\xdb\x1d\x11\xb3\x43\x33\xfc\xed\xed\x6d\x34\x9b\x4d\xac\xac\xac\
\xa0\x5a\xad\x2a\xe0\xb1\xb3\xb3\x13\x1a\xc7\xfb\x1d\xf5\x2c\x67\
\x9c\x28\x0d\x4a\x97\xb3\x46\x3c\x7d\x62\x85\x28\x0e\x02\x4e\xba\
\x9b\x83\xd1\x68\x04\xd7\x75\xd5\x4a\x41\x9d\x05\x4a\x7a\x9e\xdb\
\x3b\xf1\xed\x6d\x00\x28\x10\xc5\x01\x96\x94\x52\xb9\x74\x90\x52\
\x2a\x00\x45\x86\xf8\x24\x94\x7e\x52\x1e\xc2\x72\xc6\xcb\x4f\x79\
\xa3\xbf\x7c\x91\x80\x7e\x5f\xc5\x97\x05\xb0\x62\xe1\x98\x68\x9d\
\x7a\x08\xac\xc2\xd5\x8a\x02\xa4\xb4\x90\xda\x73\x92\xd8\x18\x44\
\xb0\x2a\xf4\x42\x40\x2e\x0f\x6e\x23\xa1\x7a\xd5\xc1\xec\x94\xb1\
\xb2\xe1\x38\x15\x05\x88\x89\x81\xa4\x5f\x69\x80\x55\x94\x01\x28\
\x0b\x06\xf4\x15\x12\x8b\x00\x14\xe7\x05\x88\x2c\x4a\xf2\xca\xb3\
\x88\xf2\x66\xc5\x91\xc6\xc6\x4d\xdb\x10\x70\x1e\x40\x09\x7d\x10\
\x7a\x7e\xd3\x18\x38\x6e\x9b\xc0\xd5\x11\x6f\xa3\xa6\x73\xa2\x72\
\x16\xe0\x2a\x8f\x1d\x9a\xf7\x3b\x58\x04\x30\x3a\x09\x70\x55\x84\
\x0d\xd3\xaf\x17\x99\xb8\x95\x11\xee\x82\x80\xab\xb7\xe8\x5b\xb3\
\x6d\x1b\x81\x0c\xdd\x39\x10\xfb\x42\xa0\x86\xaf\xc2\x23\x5f\x56\
\xc3\xe1\x10\x96\x65\xe1\xca\x95\x2b\xd8\xd8\xd8\xc0\xd1\xd1\x11\
\xee\xb9\xe7\x1e\x7c\xfd\xa9\xa7\xf0\xca\xcb\xaf\xc4\x54\x7a\x24\
\xc4\x4c\x91\x4d\x14\x10\x77\x1a\xad\xdb\x63\x71\x90\x46\x60\x8c\
\xe2\xb3\x6d\x5b\x6d\x44\x4d\xe5\xa1\x7d\x09\xf5\x6d\x72\xa4\x94\
\x6a\x00\x25\xa1\x7d\x07\x09\x78\xd1\xbd\xf1\x78\xac\x98\x31\x29\
\x43\x4f\xee\xe4\x16\x42\x08\x81\x6a\xb5\x8a\x46\xa3\xa1\xca\x40\
\x6e\x21\x68\x55\x24\xf7\xa1\x45\x75\x68\x9a\x76\x22\x1b\xaf\x33\
\x84\x5c\x66\xc0\x96\x76\xae\xdf\x4f\xd3\x58\xc4\x85\x40\x5a\x3a\
\x1b\x9b\x96\x8f\xa4\x7b\x69\xb2\x88\x3e\x25\x6d\xd5\xbb\x12\x42\
\x89\x19\x42\x8c\x2b\xe5\x89\xde\x33\x6d\xda\x5d\xaf\x37\x50\xad\
\xd6\x62\x2e\x39\x38\xd3\x29\x3e\xf3\x99\x4f\xcf\x94\x24\x49\x9d\
\x17\xa5\x30\x73\xbd\xcc\x47\x5b\x56\x5f\x9b\xa8\x56\x44\x72\x47\
\xaa\xc7\xad\x37\x92\x99\x97\x3e\x47\x3e\x92\xf2\x52\x46\x52\xeb\
\xb5\x60\x3e\x4e\x32\x8c\x80\x40\x9e\x52\x3a\xaf\xc1\x0a\x43\xe4\
\xaa\x09\xf9\x47\xa6\xaf\xd0\xd0\xed\x39\xe8\x98\xe7\x9f\x53\xfe\
\x69\xc2\x1b\xba\xbe\x2d\x04\xdd\xd3\x67\xb3\xc9\x79\x35\x33\xef\
\x17\x93\xe3\xfb\x9f\x92\x65\x8c\x05\x52\xe3\xf0\x0b\x84\xc9\x63\
\x86\x0d\xe4\x7d\x39\xb9\x9d\x1a\x92\x41\x02\xbf\x96\xb7\x83\x42\
\xe8\x40\x31\x3b\x9d\x34\x66\x3c\x6d\xf0\x48\xca\x47\x91\x30\x79\
\x65\x49\xcb\x17\x0f\x93\xb7\xcf\x60\x91\x74\xf8\x1e\x7f\x49\xec\
\x0b\xb5\x7d\xfe\x6d\xe9\x2a\xb0\x22\x79\xe5\xd7\x92\x8e\x21\x98\
\xfb\x52\x96\xbe\xfe\xa3\xf4\x75\x66\x49\x4a\x89\x7e\xaf\x87\x97\
\x5f\x7a\x19\x5f\xfd\xea\x57\xf1\xe2\x8b\x2f\xc2\xf3\x3c\x34\x9b\
\xcd\x98\x3f\x2b\x02\x2b\xf4\x0c\xa9\x29\xf5\xbe\x84\x83\x95\xa9\
\x5a\xc7\x88\x95\x25\xcc\x76\x7a\x7f\xcf\x19\x0b\x02\x5c\xc4\x58\
\x70\x50\xc1\x0d\xeb\x79\x3a\x04\xea\xe8\x3e\xdf\xa3\x91\x3f\x4b\
\xe9\x24\xdd\x37\xcd\xec\x3c\xe9\xf1\xf0\xf2\xa9\xfb\xec\x59\xfd\
\x47\xf1\xf2\xb8\xf4\xfb\x00\x00\xdf\x43\xe8\x17\x36\x7e\x3f\xe9\
\x9b\xe5\xf5\x10\xab\x53\x63\x0a\x7c\x39\xb1\xa2\xfb\xd0\xca\xea\
\xbf\xf9\x24\x5a\x0f\xcb\x55\xd6\x3c\x5e\x1d\x98\xc2\x10\x10\xec\
\x9b\xe0\xf5\x45\xe1\xab\xd5\xaa\xb2\xc3\x23\x35\x20\xa9\x00\xc3\
\xfa\x37\x21\xc4\xec\x2e\x0b\xf4\x37\xd3\xc8\xbd\x2c\x5b\x75\x52\
\xb2\x88\x7c\x2c\x2a\x9f\x27\xcd\x12\x9d\x67\xc9\xdd\x3a\x48\x00\
\xe5\x61\xe7\x54\x16\xf9\x8e\xf8\xdf\x2c\xda\xfc\x8e\xdc\x91\xf3\
\xc8\x5a\x95\x95\x2c\xd6\x99\xa7\xcf\xbf\x8d\x3c\x66\xb7\x48\x9a\
\xb3\xcf\xc4\x6d\x86\xf4\x30\xba\x56\x22\x89\xf5\x58\x5d\x5d\x43\
\x7b\xb9\x8d\xcd\xcd\x4d\xbc\xf0\xc2\x0b\x78\xe1\x85\x17\xf0\xd6\
\x5b\x6f\xe1\xe0\xe0\x00\x00\x62\x9e\xd8\x89\x81\xe2\xdb\xd4\x00\
\xd3\x95\x7d\xe4\x2f\x8b\xd2\xe6\x7d\xd8\x64\x32\xc9\x05\x56\xba\
\x6a\x92\x06\x72\xb2\xd3\x4a\x02\x04\x54\x2e\x0e\x24\xb9\xaa\x49\
\x07\x35\x14\x3e\xcd\x41\x67\x78\x3f\x9e\x27\x1d\xb4\xe8\x60\x9a\
\xae\xf1\xf4\x2d\xb3\xf8\x84\x31\xa9\x2f\x36\x64\xa0\x9c\xc3\xea\
\x80\x2e\x0d\xb0\x25\xb1\x56\xba\x4a\x99\x03\x4f\xaa\x03\xb2\x4f\
\xe3\x75\xc9\x57\x66\xea\xc0\x56\x88\xa9\x5f\x35\xbd\x1c\xfc\x2f\
\xcf\x57\x10\x81\x31\x6a\x23\x04\xa4\xf8\x02\x84\x46\xa3\x11\x03\
\xc7\x3a\xb0\x0d\x02\xa9\x1c\x52\x27\xa5\x65\x25\x55\xa4\xfe\x92\
\xf2\xd8\xa1\x93\x02\x0c\x79\xf9\x28\x9a\x57\xbd\xc1\x95\xcd\xab\
\x1e\xef\xbc\xe5\x2d\x52\x9e\xb7\xbb\xe4\xbd\x03\x7d\x10\xe0\xd7\
\x93\x3b\xf4\xec\x74\xf2\xd2\xb8\x23\xc5\xe5\xed\x58\x67\x69\x2c\
\x51\x99\x30\x8b\x88\x63\x11\x92\x05\x94\xd2\xda\x3c\x1f\x0c\x95\
\xb7\xf5\x82\x69\xe9\x83\x56\x5a\xb9\xb2\xfa\x39\x9e\x3e\x89\xeb\
\xba\xb0\x4c\x13\xf7\xdc\x73\x0f\xae\x5f\xbf\x8e\xf7\xbf\xff\xfd\
\x78\xe9\xa5\x97\xb0\xb3\xb3\x83\xe7\x9f\x7f\x1e\xb7\x6e\xdd\xc2\
\x60\x30\x80\x6d\xdb\x58\x5e\x5e\x56\xcf\x04\x41\x80\xe1\x70\x08\
\x00\x31\x60\xa5\x3b\x07\xa5\x01\x96\xdb\x40\x25\xe5\x45\x67\x87\
\xa8\x0e\xb9\xca\x88\xd8\xa9\x24\xa0\xa6\x83\xcc\xb4\x71\x93\x06\
\x70\xbd\xfe\xf8\xfd\x20\x98\x65\xe0\xb8\xe8\x4c\x0f\x7f\x9e\x8e\
\xa5\xf4\x61\xc8\x59\x30\xa4\x40\x24\x04\x44\xc0\xf2\x24\x49\xb3\
\x31\x8d\x93\x98\xc1\x24\x50\xc5\xc1\x8e\xfe\x4e\x79\x9f\x9e\x04\
\x0e\xb9\x4d\x1d\x30\x05\xbf\xdc\xd0\x5f\x07\x6f\x7c\xe1\x03\x67\
\xae\xf8\x7b\x48\x62\xa6\x94\xfd\x94\x63\xc3\x66\x4e\x69\x49\xfd\
\x47\x00\x2b\x29\x9f\x7a\x9e\x83\x60\x76\x2f\xc2\x18\xc0\xd2\x2f\
\xa4\xbd\x9c\xe8\x20\x15\x68\x2c\xba\xd3\x48\x6d\x24\x40\x6e\x43\
\x4a\xba\x36\x2f\x8b\x91\x06\xce\x28\x2f\x65\xe2\x48\xcb\xeb\xb9\
\x91\x9c\xec\xe4\xe5\xb7\xe8\x2a\x42\x3e\x73\x4d\x02\x51\x49\x69\
\x96\x7d\x7f\x69\x1d\x7e\x19\x60\xbb\x98\xf7\x73\xfc\x38\x16\x91\
\x8d\xd3\x62\x58\x4e\x23\x8e\x45\x00\xe4\xa4\xc1\x2c\x2f\xfd\xa4\
\x30\x69\xcf\x9d\x36\xd0\x4a\x9b\x7c\x1e\xe7\xf9\xac\x70\x49\x03\
\x99\x10\xa1\x4d\x8b\x4c\x89\x2f\xe9\x9b\xd4\x81\x45\xd8\xaf\x4a\
\x4c\x26\x13\x65\x80\xbe\xb6\xb6\x86\x95\x95\x15\xb8\xae\x8b\x77\
\xbe\xf3\x9d\xd8\xda\xda\xc2\x97\xbf\xfc\x65\xec\xec\xec\x60\x77\
\x77\x17\x52\x86\x1b\x3e\x57\xab\x55\x98\xa6\x89\xf1\x78\x0c\xd7\
\x75\x15\x53\x42\xed\x45\x08\xa1\x56\x79\xd9\xb6\x8d\x7e\xbf\x3f\
\x53\x76\xfd\x38\x6d\xc2\x4e\x71\xf2\xbc\x13\x78\xd3\xed\x89\xb9\
\x73\xd0\x58\x39\x65\xb2\x01\xbf\x9e\x56\x18\x26\x5e\x5f\xc4\xe8\
\x24\xa5\xa7\x97\x41\x01\x05\x3f\x40\x90\x00\x88\xb8\xaa\x2d\xed\
\xbd\xf1\xf7\xa5\x03\x9d\xa4\x7a\xe2\xf9\x4f\x8a\x2f\xa9\xac\xfc\
\xa7\x03\x2b\xfd\x39\x0e\xa8\xb8\x1a\x9a\x87\xab\x56\xab\xaa\x8c\
\xb4\xf0\x80\xbb\xee\x70\x2a\x15\xd8\x15\x27\x06\xa4\x75\x46\x92\
\x1c\xcd\xa6\xf5\x17\x42\x18\x10\x19\x03\xdf\x8c\x8a\xb0\x0c\x23\
\x94\x55\x89\xc7\x95\x22\x6c\x4f\x99\xbc\xce\x9b\xcf\x45\x94\x37\
\x0b\x10\x7e\xab\x09\xef\x58\xf4\xeb\x49\xe1\xf4\xfb\x45\xea\x2d\
\x2d\x0d\x92\x22\x76\x42\x77\xe4\x5b\x47\x16\x01\x8c\xce\x12\x5c\
\x9d\x76\x1a\x24\x45\x26\x8a\xfa\x37\xc8\x01\x01\x17\x6e\x17\x25\
\x8c\x70\xd5\x99\xe7\x79\x18\x8d\x46\xca\x18\xde\x34\x4d\xdc\x7b\
\xef\xbd\x78\xe7\x3b\xdf\x89\xcd\xcd\x4d\x6c\x6f\x6f\xe3\xa5\x97\
\x5e\xc2\x37\xbf\xf9\x4d\x6c\x6d\x6d\x41\xca\x70\xfb\x99\x56\xab\
\x85\x66\xb3\x39\x63\x63\xc6\x99\x0e\xf2\x71\x95\x94\x4f\x7e\xac\
\xfb\x8e\xe2\xc0\x84\x6c\xb0\xb8\xa4\x6d\x57\x93\x36\xe1\xd3\x81\
\x0d\x07\x4e\x49\x20\x4c\x2f\x0b\x8f\x87\x1b\xf5\x53\x58\x55\xa7\
\x2c\x3e\x1d\x44\x24\x81\x25\x3d\x5f\xf4\xd7\x30\x0c\x18\x08\x40\
\x45\x13\x02\xd1\x71\x94\x56\x20\x11\x70\xa0\x13\xa5\x65\x10\xd8\
\x84\x50\x80\x93\x83\x3f\xbd\x9d\xe8\x4e\x6c\xf5\xf2\xd2\x3d\x6e\
\x13\xc7\x57\xf2\x99\xa6\x89\x7a\xbd\xae\x98\x4c\xfa\x71\x16\xd0\
\x0f\x02\xf8\x9a\x2d\x27\xa5\xc5\xe3\xd7\xdf\xa5\x5e\x67\xba\xf0\
\xfa\xb5\xf4\x97\xa4\x47\x10\xbb\xcf\x12\xd0\xc3\x2f\x52\x32\x99\
\xa9\x84\xeb\x59\xf9\x38\x0e\x63\x94\xc7\x80\x15\x89\xed\xb6\x61\
\xaf\x80\xdc\x02\xe5\x1a\x1f\x23\x7d\xd3\x59\x15\x46\x03\x3f\x49\
\x33\xbb\x22\xcf\x67\x49\x1e\xe8\x2e\x2a\x77\x18\xac\xc5\xa7\x53\
\x14\x20\xe7\xdd\x3f\x89\x74\xe6\x01\x49\x59\x71\xa4\xc5\x73\x12\
\x20\x88\x7f\x47\x7a\x9c\xc7\x86\x68\xda\x00\x00\x20\x00\x49\x44\
\x41\x54\x45\xfa\x9c\x22\xf9\xd0\xbf\xab\xc4\xb1\x63\x66\x73\xf8\
\xd9\x6f\x50\xff\xf6\x75\x50\x10\x44\x2a\xb8\x6a\xb5\x8a\x6a\xb5\
\x0a\xcf\xf3\xd4\xb6\x35\xae\xeb\xc2\x30\x0c\x5c\xbb\x76\x0d\xf7\
\xdd\x77\x1f\xde\xf7\xbe\xf7\xe1\xd5\x57\x5f\xc5\xd7\xbe\xf6\x35\
\xec\xef\xef\xe3\xc6\x8d\x1b\x18\x8d\x46\x18\x8f\xc7\x2a\x0d\x7d\
\x10\xa7\x55\x7b\xb4\x0a\x30\x6d\xb0\x4c\xab\x47\x3e\x48\xa7\x4d\
\xd6\x92\xde\xb1\xce\x3c\x51\x9c\xbc\x2e\xf5\x05\x0f\xd3\x7c\xc7\
\xdd\x05\xe8\xf5\x9a\xe4\x77\x2c\x56\x36\x76\x9e\xf5\xe3\x6a\xb1\
\x19\xb6\x0a\x12\x06\xe2\xe9\x27\x01\x4c\xba\xc6\xd9\x31\x3e\x66\
\x9a\x86\xad\x8e\xf9\xe2\x84\x24\x70\x48\x79\xe6\x40\x49\x08\x11\
\x33\x3a\x27\x76\x8a\xf6\x8e\xe4\x6e\x37\xf8\x8f\xd7\xbf\xe7\x79\
\x0a\x60\xe9\x00\x8f\xce\xb9\x4d\x58\xd2\x84\x3f\x3c\xcf\x26\x4b\
\x0a\x7b\x72\xe7\x95\x7a\xd2\xb2\x68\xe6\xe9\xbc\xc4\x71\x47\xd2\
\x65\x91\xa0\xfd\x4e\x9d\xdf\x91\x93\x90\xb2\xc0\x28\x0f\x5c\x9d\
\xa6\x14\x61\x8c\xcb\xc4\xa5\x0f\x80\x69\xcf\xe7\x81\x2c\x3d\x0f\
\x42\x08\x58\x96\x0d\xc8\xa9\xbd\x13\xb1\x2e\x3c\x1d\x72\x19\xe1\
\x79\x1e\xd6\xd6\xd6\xf0\xc8\x23\x8f\xa0\xd3\xe9\x60\x63\x63\x03\
\x37\x6f\xde\x54\x9b\x4b\xeb\x6e\x24\xe8\xc7\x57\x2e\xa6\xb1\x57\
\xfc\x9a\xce\xea\x64\x31\x18\x65\x85\x83\xae\x24\x15\xa0\x0e\x9e\
\x93\x26\xa9\x49\x79\xd6\xf3\x6e\x08\x01\x21\x00\xc3\x10\x30\xc4\
\x54\x25\x26\x0c\x76\x1f\x60\xab\x0d\x23\xe6\x49\x20\xd1\x7f\x95\
\x0e\xb2\xd2\x58\x2f\x1e\x5e\x6a\xc7\x1c\xb8\x24\xd5\x33\xa9\xf7\
\x08\x44\x11\xc0\xa2\x95\x7c\xdc\x40\x9e\x18\x2a\xee\x22\x84\xd2\
\x02\xe2\xab\x56\xa5\x94\x08\x34\x70\xc4\x81\x25\x49\xd2\x4a\xdb\
\x38\x18\xa4\x5f\xf2\x7b\x88\x01\xac\x22\x80\x62\x11\xa0\xa3\x88\
\xe4\xc5\x5d\x36\xaf\x8b\xc8\xc7\x59\x02\xb5\xf3\x20\xb9\x9d\xf0\
\x09\x6c\x95\xc3\x3f\xbe\x32\x75\x97\xd4\x01\xe9\xb3\xa3\xdb\xf5\
\x3d\x9c\xa5\x9c\x4b\xe6\x75\x01\x52\x96\x45\x3d\x6e\x1c\x45\xc3\
\x14\x95\xb4\x89\x49\xda\x37\xc0\x67\xf4\xc7\xc9\xcb\x2c\xd8\x02\
\x80\x64\x76\x8b\xd2\x49\xca\x0b\x8f\x2b\x1c\xe8\xe3\xec\x07\x19\
\xa4\x53\x9e\x39\x70\x6a\xb7\xdb\x58\x5f\x5f\x87\xe7\x79\x78\xe0\
\x81\x07\x70\x70\x70\x80\xd7\x5e\x7b\x0d\xaf\xbd\xf6\x1a\xf6\xf6\
\xf6\x70\x78\x78\x08\xd7\x75\xd5\xb3\x34\x00\xa7\xf5\x03\x49\x40\
\x21\xb4\xb5\xe1\x6c\xb2\x98\xf9\x1b\x86\x4f\xe8\x53\xe8\x21\x29\
\x21\x03\x19\x06\x91\x52\x5d\x97\x41\x80\x40\x46\xe9\x45\xd7\x65\
\x20\x61\x44\xc0\x07\x02\x90\x81\x09\x88\x70\xe5\x9b\x62\x88\x34\
\xd6\xc9\x10\x6c\x85\x21\x2b\x8b\x61\x18\x30\x85\x80\x69\x1a\x30\
\x01\x08\x83\x3d\xc3\x0d\xf9\x23\x37\xeb\x14\xaf\x80\x50\xaa\x3d\
\x2a\x5b\xb8\x60\x8e\x2a\x41\x40\x70\x86\x5e\x6a\xf6\x55\xc2\x00\
\x20\xd5\x33\x52\x22\xf2\x93\x36\xdd\xa7\x92\xb3\x53\x7c\x5b\x23\
\x02\x4f\x31\xa7\x9d\x91\x9a\x58\x67\xa6\x78\xdb\x01\xa6\x40\x8a\
\xb7\xf1\x24\x20\x67\x08\x81\x00\xe9\xdf\x8b\x10\x42\xd9\xf1\x85\
\xaf\x2f\xde\xa6\xc3\xf8\xe3\xe3\x8a\x3e\x4e\x59\xe1\xf7\xa0\x35\
\x30\xde\x30\xe8\x9e\xd6\x79\x14\x61\x1a\x92\x10\x6c\x99\x41\x2d\
\x8d\x86\x8c\xa1\xce\x02\x69\x8b\x30\xb2\x99\x72\x16\x49\x9b\x8e\
\x53\x12\x49\xce\x47\x4a\x3a\x73\x0d\xe7\x25\xf3\x9d\x19\x4f\xd6\
\x6d\xe8\x65\xa0\x3f\xac\x73\xcc\xf3\xe9\x34\x13\xc9\xac\xd0\x6d\
\x55\xa7\xd4\xe8\xa3\x63\x3d\x97\x33\xd1\x25\x94\x43\x85\x61\x6d\
\x55\x26\x84\xe5\xe1\x84\x16\x9e\xb2\xaf\x25\x96\x58\x86\xd3\x97\
\xf3\x93\x8f\xe3\x4f\x58\xd2\xda\x50\x19\x50\x53\x0e\xbc\x64\xb1\
\x2b\x49\xcf\xa5\x7d\xf7\x69\xea\x8b\xa2\x71\x94\x01\x33\xc9\xea\
\x88\xfc\x78\x92\x26\x13\x69\x60\x2a\x6b\xc2\x91\x34\x58\x64\x89\
\x4a\x17\x60\x83\x2e\xc5\xcf\xc2\x31\x25\xa2\x10\xd0\x42\x02\x52\
\x81\x33\x02\x18\xd3\x95\x62\x3c\x5f\xae\x2b\x61\x59\xc4\x54\xf8\
\x18\x8f\x43\x3f\x60\xad\x56\x13\x2b\x2b\x6d\x5c\xba\xeb\x2e\xbc\
\xe3\xa1\x87\xb0\xbf\x7f\x80\x9b\x37\x6f\xa0\xd3\xe9\xe0\xc6\x8d\
\x1b\x8a\xd9\x9a\x4c\x3c\xe5\xe3\xc8\x34\xb8\xfb\x82\xb0\x04\xd3\
\x3a\x8b\x18\x1d\x84\xa0\x25\x64\x37\x02\x04\x3e\x10\xf8\x3e\x2c\
\xcb\x81\x10\x52\x01\x92\x30\x9c\x00\xf7\x29\x68\x1a\x46\xe8\x3b\
\x0a\x02\x06\x24\x0c\x29\x61\x48\x44\xab\xf4\xc2\x0a\x12\x22\xb2\
\x4b\x8a\xd2\x09\x71\x55\x08\xea\x84\x90\xe1\xea\x3e\x43\x42\xc0\
\x80\x21\x25\x4c\x48\x90\x57\x3a\x13\x12\x86\x30\x60\x9a\x46\xc8\
\x4e\x19\x04\x08\xc9\x56\xcc\x80\x09\x01\xcb\x30\x62\xa0\x0c\x88\
\xaf\x94\x54\xf5\x4b\xfe\xd7\x65\x38\x67\xe6\xe0\x0b\x86\x19\x8e\
\x03\x12\x90\x08\xed\xad\x64\x10\x01\x18\x8d\xc9\x31\x84\x09\xc3\
\x14\x30\x0d\x0b\xa6\x25\x60\x18\x21\x78\xb2\x1c\x07\x42\x18\xb0\
\x4c\x0b\x96\x6d\xc1\xb1\x1d\xd8\xce\xd4\x86\xca\x10\x21\x6b\x05\
\xc1\xd4\xb1\xc2\x88\x0d\x06\x41\x10\x40\x32\x75\x64\xe8\x1b\x4f\
\x86\xf9\x8a\xda\xba\x65\x59\x2a\x4f\x32\xcc\x50\x58\x32\x02\x47\
\x00\xc4\xcc\xb7\x00\xd6\xce\x80\xac\x01\x2d\x2c\x67\x7c\x15\xa1\
\xfe\x4d\x59\xd9\x51\x20\xfe\x75\xc4\x2e\x67\x77\x12\x69\x1f\x67\
\x91\xe7\xb2\xc2\x0b\x21\x92\xf3\x9b\xd3\xe9\xe9\x61\xf2\xba\xb8\
\x24\x60\xa7\xe7\x27\x66\x93\x54\x00\xf4\x25\xe5\x23\x57\xe2\xd3\
\xa6\xb9\x25\xbf\xbc\x98\xf9\x40\xc2\x13\x1e\x49\x81\x7c\xe4\x91\
\x5c\x51\x79\x52\xdb\x41\xce\x75\x1d\x38\x25\xd2\xd1\xac\xce\x92\
\x66\x1d\xfa\xfb\x99\xce\xc7\x16\xcf\xd0\x94\x6d\xef\x29\xb1\x1c\
\x3b\x9d\xc5\xc9\x7c\xec\x4e\xd9\x30\x49\x61\xe7\x7d\x6e\x5e\x99\
\x17\x60\x65\xc5\x93\x07\xb2\xd2\xc2\x96\x05\x6a\x7c\xc0\xcc\x0b\
\x9f\x36\x89\x4d\x9a\xe0\xe6\xb6\x67\xd0\x20\x3d\x0d\xaf\x7f\x57\
\x22\xa3\x0d\x89\x08\x5d\x10\xc8\xd2\xcb\x4e\xd7\x0c\x43\xa5\x00\
\xc3\x98\x32\x09\xbe\xef\xc1\xf3\x26\x30\x0c\x13\x17\x37\x2e\x62\
\xf3\xe2\x26\xae\x5f\xbb\x86\xd1\x68\x84\x37\xdf\x7c\x13\x6f\xbc\
\xf1\x06\x76\x77\x77\x31\x1c\x0e\x71\xe3\xc6\x0d\x95\xe7\x78\x09\
\x10\x82\x1e\x4c\x01\x9e\x40\x08\x4e\x4c\xd3\x02\x20\x23\xff\x47\
\x80\xef\xf9\x11\x08\x32\x60\x9a\x22\xf4\x13\x25\x09\x14\x88\x10\
\x1c\x49\x09\x21\x83\xe8\xd8\x60\x9b\xd5\x44\x06\xec\x62\x6a\xd3\
\xa5\x54\x5e\x86\x09\xc3\x34\xa6\xaa\xbc\xe8\x19\xd3\x10\xb0\x2c\
\x13\xb6\x15\xb1\x3d\x86\x08\xc3\x72\x46\xca\x34\x14\x50\x31\xcc\
\x10\x40\x1a\x42\x28\x05\x83\x80\x98\xfa\xb3\xa2\x65\x9f\x52\xd2\
\x1d\x05\x9e\x20\x22\x23\x7f\x23\x64\x7b\xa4\x21\x30\x1a\x0f\x20\
\x8d\x29\x48\x0b\xd3\x33\x61\x46\xe9\x4f\xed\xa4\x00\xd3\xb0\x60\
\xd9\x66\xb4\x9d\x8c\x0d\xdb\x72\x60\x98\x06\x2c\xdb\x89\xea\xcb\
\x54\xac\x94\x6e\xdf\xcb\x27\x05\x81\x04\xfc\xc0\x8f\xb5\x85\xb0\
\x79\x27\xb4\xa3\xa8\xfd\x08\x30\x76\x2a\x06\xe4\x25\xa4\x52\x0d\
\x73\xc7\xc9\x7c\x72\x41\x7f\xd3\x19\x03\xca\x4b\x38\xa6\xc4\xaf\
\xf3\xbf\x16\x05\xcc\x75\x22\x79\x47\x0a\x4b\x59\xa6\xee\xbc\x89\
\x3e\x03\x3f\xcf\x65\x49\x9a\x69\x67\x0d\x5e\x59\x00\xfe\xf4\x40\
\xca\xdb\x57\x16\x59\x87\xc7\x79\x37\x65\x80\xcf\x49\x80\xb1\xe3\
\xc6\x71\x12\x6d\x31\xaf\x4e\x6e\x87\xf6\xaf\xb3\x71\xba\xaa\x48\
\x0d\xca\x7e\xb8\x3d\x8f\x69\x9a\xa8\xd5\x6a\xa8\xd7\xeb\x58\x5e\
\x5e\xc6\xbd\xf7\xde\x8b\xe1\x70\x88\xf1\x78\x8c\x57\x5f\x7d\x15\
\x07\x07\x07\xb8\x75\xeb\x16\x46\xa3\x11\x7a\xbd\x9e\xf2\x95\x45\
\x9b\x46\x9b\xa6\xa5\xc0\x5b\x08\x2a\x44\x04\x0e\x00\xc0\x4a\xa8\
\x33\x19\xb1\x29\x00\x8d\xec\xa6\x65\x84\x6c\x15\x31\x4a\x11\x20\
\x32\x0d\x33\x0e\x54\x34\x7b\x22\x52\x87\x85\x76\x52\x32\xa6\x4e\
\xe3\x06\xdf\xdc\xb7\x53\xa2\xda\x4f\x6a\xee\x8d\x88\x5d\x93\xe9\
\x5a\x26\x43\x08\x08\xd3\x08\xd9\x37\xcb\x84\x29\x4c\xc0\x14\x90\
\xa6\x01\x98\xd3\x95\x7b\xb4\x65\x0c\xa9\xf0\x48\x9d\x07\xc4\x17\
\x03\xf0\x3c\x4d\x26\x7e\xec\xbd\x85\x2c\xe4\xd4\x3e\x0a\x40\xcc\
\x69\xe8\x2c\xc8\x2e\x27\x69\xdf\x55\x99\xb1\x2d\xef\xdb\x4c\xcb\
\x9f\x75\x3b\x7c\x54\x65\xe5\x2c\x40\x81\x4e\xb3\x2f\x2a\x0f\xa7\
\x55\x16\x3d\x9d\xdb\x15\x64\x65\xdd\x4f\x3a\xe6\x61\xce\x42\x16\
\x51\xb7\xf3\xe6\xfd\x3c\x7f\xfb\xc7\x7d\x37\xf3\x30\x69\x8b\xa8\
\xc7\xb3\x8c\x23\x4b\xb2\xcc\x35\xf2\xbe\x9f\xb3\x10\x9e\x1f\x3d\
\x6f\x5c\xc5\xa5\x33\xd8\x8a\x39\x30\x2d\xc8\x20\x5c\x31\x48\x4e\
\x2b\x1d\xc7\x41\xbb\xdd\x46\xbb\xdd\x86\xef\xfb\xb8\x76\xed\x1a\
\x8e\x8e\x8e\xb0\xb7\xb7\x87\xd1\x68\x84\x6e\xb7\xab\xce\x43\x55\
\xe2\x00\xbe\x3f\xf5\xb1\xc4\x01\x90\x52\x83\x25\xac\x32\x23\x20\
\x64\x46\xec\x46\xc5\xb6\x43\x2f\xe8\x1a\x18\xe2\xf6\x44\x04\x3e\
\xf8\x56\x39\xfc\xbe\xed\x98\xb1\xb2\xf3\xf2\x72\x7b\x34\x7e\x9f\
\x03\x4f\xf5\xfe\x0d\x01\x4b\x18\x10\xc2\x54\x6a\x45\x33\x02\x3f\
\xca\xc1\x66\x94\x77\xd3\xb6\xe1\x58\x36\xac\x8a\x0d\xc7\xb4\x21\
\x4c\x03\x76\xb5\xa2\x18\x2c\x7d\x5b\x1f\x6e\xa0\x9f\x0a\x7c\x13\
\x5c\x1f\xe8\x13\x9d\x22\x80\x2a\x4c\x23\xbb\x0d\x65\x01\x2b\x16\
\x2a\x3b\x92\xcc\x67\xf3\xc1\x96\x55\xc4\x96\xaa\xa8\x9c\xd6\x20\
\x9c\x4b\x53\x9f\x72\x3e\xb2\x80\x49\x9e\x94\x55\x31\xcc\x1b\x47\
\x11\xc9\x02\x89\xc7\x9d\x45\x9c\xb4\x64\xa9\x3f\xe8\x7e\x9e\x6d\
\xcd\xcc\xf1\xa2\x33\x99\x22\x45\x3a\x93\xe3\xc6\x71\x5a\xcc\x5d\
\x11\x96\xa4\x4c\x7a\xf3\xe6\x33\x7f\x9f\xc9\xc5\xd4\x47\xb1\x4e\
\xfc\xe4\xe3\x78\x3b\x8a\x0e\xb2\x80\x69\x9d\x90\x47\x71\x2e\x71\
\x36\xdb\x80\x61\x4e\xf7\xac\x03\x66\x7d\x1c\x55\x2a\x15\xb4\x5a\
\x2d\x2c\x2d\x2d\xa9\xf8\xc7\xe3\x31\x0e\x0f\x0f\xb1\xb7\xb7\x87\
\x83\x83\x43\xf4\x7a\x7d\xb5\x59\xb5\xeb\xba\x6a\x7b\x9e\xf1\x78\
\x8c\xc9\x64\xa2\x5c\x3d\x24\x01\x2c\xcb\x0c\x6d\xaf\x2c\xc3\x84\
\x40\x30\x55\x07\x92\xda\xce\x8c\x80\x12\x69\xb2\x0c\x06\x5a\xd8\
\x7d\x21\x04\xdc\x89\x1b\x1e\x1b\x02\x26\xcc\xc8\x6e\x2c\x41\xc5\
\x68\x4e\x57\xdd\x99\x46\x5c\x05\xe7\x38\x0e\x60\x1a\xb0\x0d\x13\
\xa6\x63\xc3\x64\xa0\x4a\xf9\x92\xb2\x6c\xa5\xf6\x12\xa6\x19\xda\
\x6d\x59\x16\x6c\xc3\x04\x0c\x01\x4f\x4e\xcd\xc2\x75\x40\xc4\x0d\
\xc2\x39\xb8\x02\xa6\x7e\xab\xa4\x94\x30\x4d\x3b\xf6\x4e\xd3\xfe\
\x26\x01\x2f\xfd\x7d\x97\x91\x24\xf6\xaa\x4c\xdf\x9b\x74\x9c\xd7\
\x8f\x94\x72\xd3\x70\x47\x92\xe5\xbc\x33\x3c\xc7\x91\xdb\xbd\x6c\
\xb7\x13\x13\x77\x16\xc2\x3b\xaf\xf3\x56\x37\xa7\x05\x30\xce\x0b\
\x03\xf5\xad\x0e\xa8\x92\x24\x6d\x10\x4c\x63\xe4\x28\x6c\x10\x04\
\x10\x98\xaa\xd4\x48\xc8\xc9\xa8\xef\xfb\xa8\x54\x2a\x31\xf6\xc7\
\xb2\x2c\x34\x1a\x0d\xb4\x5a\x2d\x5c\xb9\x72\x05\x83\xc1\x10\xdd\
\x6e\x4f\x6d\x30\x7d\x74\x74\x84\xfd\xfd\x7d\xec\xed\xed\xc1\xf7\
\x7d\xb8\xae\x8b\x5a\xad\xa6\x40\x5c\x92\xeb\x07\x29\x69\x05\x64\
\x9c\x61\x32\x98\x4a\x4f\x39\x3e\x85\x11\x59\xb7\x87\x3f\x19\x4c\
\x81\x4a\x6f\xd0\x9f\x71\xaa\x69\x89\x68\x3b\x17\x03\xb0\x2b\xa1\
\x1f\x28\x52\xd3\x91\x4f\x28\xf2\x5a\x6f\x9a\x26\x9a\xcd\x26\x84\
\x11\xee\x49\x68\x45\xd7\x6c\x02\x63\x91\x93\xd2\x20\x08\x94\x9d\
\xab\xb2\x40\x8a\x54\x86\x10\x02\xde\x78\x32\xd3\xd6\x39\xb8\xa4\
\x3c\x66\x89\xee\xbc\x95\xbf\xd3\x45\x4f\xe8\x17\x35\x61\x29\x3b\
\xc9\x55\x4c\xea\x22\x12\x27\x39\x2d\x55\xd6\x79\xc8\x07\x50\x4c\
\xf5\x94\x27\x8b\x60\xb0\x16\x2d\xfa\x60\x9b\x36\x83\x38\x2b\x49\
\xaa\xb3\xac\x4e\xb8\xe8\xbb\x99\xe9\x38\x8e\x9b\x51\x2c\xe6\xfd\
\x2e\x9a\xc1\x4a\xa3\xe2\x17\xf1\x7e\x4f\xca\x4b\x7e\xd9\x7c\xe6\
\x3a\xc5\x4d\xe8\xc0\xe7\xa9\x8b\xbc\x59\xf5\x3c\xef\xee\xb8\x33\
\xf5\xa2\x69\x9d\x57\xb6\x4c\xff\x56\x93\x98\x2c\xae\x9a\xd3\xff\
\x4a\x29\x01\x29\x01\xc4\xc3\xd0\xf3\xb4\x7a\xd0\xf3\xbc\xd8\xa0\
\x4e\x1b\x44\x13\xf0\x71\x1c\x07\x1b\x1b\x1b\x90\x52\x62\x73\x73\
\x53\xc5\x45\xdb\xf8\x78\x9e\x87\x5e\xaf\xa7\x18\xae\xe1\x70\xa8\
\x7e\xe1\xfd\x09\x82\xc0\x07\xbc\x49\x2c\x7d\x5d\x8d\x47\x4e\x33\
\x09\x9c\x58\x0c\xf4\x50\xd8\xd6\x52\x43\xf9\x84\xe2\xae\x0b\xb8\
\xca\x91\xdb\x71\x91\x4f\x28\xee\xbd\xbc\x3f\x18\xc4\xea\x50\x08\
\x01\x3f\x08\x10\x4c\x26\xc0\x64\x12\x63\x99\xf8\xf7\xc1\xfb\x4f\
\xc3\xb6\x12\xcb\xa1\xbf\x27\xfd\x5d\xc6\x55\x88\xc9\xac\x0f\x7f\
\x56\xf7\x36\x9f\x24\xc7\xff\x46\xe7\xeb\x57\xf3\xbe\x1b\x7e\xcd\
\xd2\x1b\xee\x1d\x29\x27\x6f\x27\x86\xe4\x76\x2d\x8b\xfe\x81\xa6\
\x01\xab\xac\xf2\x9c\xd7\xc1\xe6\x34\xe4\x3c\xf7\x01\xf3\x82\x8d\
\xe3\xaa\x0f\xe6\x91\x93\x60\xb1\x16\xd5\x16\x93\x06\xb1\xf3\xde\
\xe6\xb3\xec\xb0\x74\x20\xcf\x07\x72\x29\xa5\xf2\x05\x45\xce\x48\
\x29\xbc\x65\x59\x70\x4c\x07\xc2\x10\x90\xf0\x01\x01\x98\x56\x7c\
\xf2\xe1\xf9\x6e\xb4\x9d\x8b\x01\xd3\xb0\x54\xbc\x04\x7a\x6a\xb5\
\x0a\x6a\xb5\x0a\xa4\x94\xd8\xd8\x58\x8f\x3d\x9b\x04\x4e\x2c\x24\
\xf7\x4f\x49\x76\x52\xba\xa1\x3a\x5d\x1f\xbb\xc3\x58\x78\xfd\x39\
\xce\x9e\x49\x39\xdd\x0e\x88\xef\xa5\x67\x3b\x0e\x02\x81\xa9\x2f\
\x2d\x39\xcb\x40\xa9\x3e\x40\x00\x42\x33\x4e\x37\x0c\x43\xc5\x47\
\x71\xea\xf9\xd0\xe3\xd3\xdf\x4f\x18\x3e\x19\xf8\x26\x4d\x02\x8f\
\x23\x59\xed\x3b\x3c\x9f\xbf\x8f\xa0\xf3\x5c\x15\x21\x37\x8e\xbb\
\x23\xf3\xc9\xed\x04\x46\xf2\xe4\xed\x54\x16\xa0\x7c\x79\xce\xe3\
\x40\x73\x12\x92\xc4\x5e\x2d\xe2\xbd\xcf\xc3\x1c\x15\x95\x32\xcf\
\x95\xb5\xc1\x9a\x27\x8d\x34\x59\x34\x28\x5a\x94\xe4\x81\xac\xf3\
\x28\x69\x2a\x42\xbe\x9f\x1d\x7f\x97\xba\x8a\x89\x54\x6a\x64\x17\
\x45\xa0\x63\x30\x18\xa0\xd1\x68\x28\x23\x78\x60\x0a\xa2\x2c\xcb\
\x8a\xbe\x07\x43\x39\x3c\xa5\xe7\x78\xfc\xdc\xa1\xa5\xce\x4a\x71\
\x31\x1c\x0b\x08\xd2\x41\x07\x09\x07\x27\xfa\x06\xc6\x4e\x25\xdb\
\x9a\x47\x07\x64\x33\x76\x4d\x86\x81\xd1\x64\x0a\x8e\xf4\x30\x3a\
\x1b\xc5\xf3\x42\x75\xed\x47\x5b\x18\x25\x01\x3d\x4a\x5b\x07\x7a\
\x3a\x2b\x45\x60\x50\xcf\x07\x67\xe0\x00\xc4\x80\xdc\x71\xe5\x24\
\x26\x2d\x79\x71\xd0\x7d\x8b\x57\x0c\x89\xfe\x72\xf4\xe3\x34\xc9\
\xda\xe8\x32\x49\x92\xd2\xa1\x97\xb8\xa8\x7c\xa4\x49\x19\xb7\x14\
\x65\xd2\xd7\x51\x79\x9e\x14\x79\x51\x14\x86\x7f\xc0\xfa\xc7\x98\
\x27\x79\x79\x49\xea\x18\xca\x36\xc4\x45\x01\xb3\xbc\x74\xf5\x74\
\xf4\x76\x92\x04\x1e\xf2\xe2\x98\x27\x1f\x45\x84\x66\xd4\x7a\x7c\
\x7c\xc6\x98\xa7\x8e\x4d\x7b\x2f\x3c\x8e\xa4\x74\xf4\x19\xae\x2e\
\x49\xf5\x96\x27\x45\x3b\x96\xe3\x86\x49\x92\xb4\x19\x6e\x52\x9d\
\xe9\xdf\xb7\x1e\xe6\x38\x40\x2f\x2d\x4f\xfc\x5a\x19\x10\x93\x55\
\xff\x59\xd7\xd2\xe2\x2d\xc2\x52\xa5\xb5\x33\xde\xaf\xf0\xb6\x59\
\xa6\xae\x8a\xf4\x35\x59\xf9\xe0\x92\x36\x38\x72\x3b\x9f\x34\x66\
\x41\x07\x43\x7c\xdb\x9d\x6a\xb5\xaa\x80\x03\xb9\x04\xe0\xe1\x80\
\xd0\x51\xa6\x10\xd3\xbe\x37\x69\xcc\x28\x52\x2f\xdc\xf8\x3b\xfe\
\x70\x4a\x9e\x45\xe8\x6f\x2b\x5e\x8f\xd9\xe3\xb3\x94\x12\x3e\xd9\
\x36\xb1\xc9\x92\x8a\x53\xca\x90\xb5\x13\x2a\x92\xd0\xc6\x4a\x4c\
\xbd\x92\x05\x7c\x27\xc9\x88\xc1\xa2\xb8\x25\xe5\x51\x2b\x37\xfd\
\x4d\x2b\x23\xcf\x23\xf5\x41\x86\x11\x07\x8b\x9c\x71\x2b\x2a\x61\
\x35\x65\xf7\x07\x79\xe3\x62\x91\x77\x97\x85\x5d\xb2\x9e\xa7\xfb\
\x0b\x37\x72\x2f\x0b\x86\x80\xd3\x67\x4d\xca\x76\xae\xfa\x8b\x3c\
\x6b\x86\xa7\x2c\x88\xbb\x23\x71\x99\xed\xd4\x05\x58\xcf\x11\x5e\
\x11\xe5\xb6\xe6\xc9\x4a\x2b\x0d\xe0\x95\x9d\x59\x9d\x77\xb6\xe1\
\x2c\xe4\x24\x01\x5d\x91\x38\xd2\xde\x61\x51\xb0\x74\x47\xe6\x97\
\x79\x98\xb8\xbc\x81\xb1\x68\x98\xf3\x20\xbc\x7f\x4a\x62\xaf\xf8\
\x79\x20\xa0\xfa\xb6\xb4\x38\x92\xce\xf9\xf5\xf3\x2a\xa7\xc1\xc8\
\x16\xe9\xab\x93\xf2\x61\x2d\x12\x30\x24\x81\xab\x3c\x1d\x25\x9f\
\x65\x9c\x14\x58\xe0\x88\x96\x66\x29\x6a\x56\x1f\x78\x10\xde\x08\
\x9e\x59\x03\x10\x35\x54\x21\x94\x6f\x10\xae\xd3\xa7\xf2\x9c\x15\
\xc8\xd2\x99\x89\xbc\x70\xe7\x51\xce\x0a\x10\xea\x03\x5f\x10\x04\
\xd1\x4a\x9d\x60\xa6\xbe\xd4\x4c\x55\x6b\x9b\xf3\xe4\x3d\xcd\x56\
\x84\x8e\x93\x18\x82\x22\x83\x73\x91\x81\x9d\xf2\x7d\x9e\xdb\xc3\
\x71\xe4\xb8\x75\xb6\x88\x74\xf2\x18\xa2\xa2\xef\xf7\x8e\x94\x93\
\xdc\x7a\x8f\x3c\x91\x93\x84\x24\x8e\x9c\x39\xe6\xa2\x87\x81\x08\
\x90\xe2\xc8\x9b\xe7\x24\x37\xaf\x81\xc8\xd7\x96\x48\x10\x2b\x33\
\xcd\x4b\x7a\x77\xc3\xc7\x9f\xb8\x37\xf1\xf0\x2f\x67\xb0\xa2\xf3\
\xa8\x20\x6a\xbb\x58\x3e\x86\xd1\x31\xf5\x73\x98\x86\x01\xa2\x2a\
\x90\x51\xdd\xb0\xf1\x2f\x8d\x39\xcc\x2d\xeb\xc2\xda\x7f\x3e\x53\
\x7b\xec\x14\x0a\x7e\xfb\x69\xe1\xad\xa2\x19\x2a\x43\xa7\x65\x81\
\xab\xa4\x8e\x67\x1e\x1a\xba\x68\x7e\x7d\xdf\x87\x9c\x8c\xd0\x38\
\x7a\x16\xf6\xe0\x26\x2a\xc3\x5b\xa8\x8e\xb7\xd1\x70\x77\xd0\xf0\
\x76\xd1\xf0\x8f\x20\x10\xc0\x83\x8d\xbe\xd1\xc2\xc0\x58\xc6\xd0\
\x5a\xc6\xc8\x5e\xc5\x6e\xe3\x1d\x38\x58\x79\x0c\x4e\x7d\x09\xb6\
\xed\xc0\xb6\xa7\xde\x73\xcf\x1a\x64\xe9\xd7\x88\xc6\x8d\x2e\x4c\
\x07\xdc\xe8\x52\xb8\xed\x43\xfc\xb9\x34\xb6\x31\xab\x5c\x45\xdf\
\x91\xce\xb2\xa9\x99\x14\x5b\xa2\x3b\x6f\xfd\x95\x69\x27\x3c\x2c\
\xa9\x08\x7c\xdf\x87\x1f\x04\x6a\xd5\x10\x6f\x97\xe1\xfe\x59\xa1\
\xf3\x3d\xd3\x9a\x75\xa2\x57\x16\x68\xa5\xb1\x8d\x79\xf4\x76\x56\
\x39\xb3\x06\xf2\xbc\x6b\x45\xf3\x7a\x9c\x30\xc7\x95\xb2\xf9\x48\
\x3a\x2e\x02\x84\xca\x96\x25\x2f\x8e\x22\xf1\x96\x0d\x7f\x12\x7d\
\xe3\xed\x20\x69\xe5\xd5\xeb\x23\xb5\x0e\x19\xe8\xe0\xdf\x43\xde\
\xb7\x71\x56\x13\x92\x7c\xd6\x28\x7b\xdc\x2c\xd2\xcf\x24\x39\xf8\
\xd4\x8f\xf3\xfa\x9c\xbc\x71\xaf\x58\xdd\x2d\x1e\x60\xe9\x69\xeb\
\x75\xb2\x48\x29\x33\xb1\x3b\x51\x3f\x58\x67\x01\x42\xa8\x62\x7d\
\xdf\x87\xd3\x7d\x15\x97\x6e\xfc\x16\xae\x1c\xfc\x11\x2a\x41\x3f\
\xf3\x39\x0b\x13\x2c\x07\xfb\x58\x0e\xf6\x01\x0f\xc0\x08\x40\xf7\
\xf7\x31\xb9\x65\xe1\x35\xf3\x7e\xdc\x6c\x3d\x86\x83\xf5\x0f\xc3\
\x59\xde\x54\x5b\x03\x90\x1d\xc0\x59\xaa\xe9\x14\xb0\x92\xb4\x3f\
\x96\x0f\x5f\x4a\x48\x3f\x08\xf7\x93\x92\xda\x56\x48\xe1\xd4\x2c\
\x3c\xa4\x53\xe8\x36\x2b\x69\xe5\x49\x6f\x4c\x52\x86\x8f\x49\x7a\
\x9a\x37\x3c\x11\xed\xf4\x6e\x9a\x6a\xb3\x51\xd3\x34\x71\xd2\x0b\
\x2c\xa8\x2d\x90\xe1\xe5\x24\x32\x68\x95\xc3\x03\x98\xbd\x1b\xb0\
\x86\x3b\x30\x27\x23\xf4\xd1\x42\xcf\x5a\xc6\xc0\x5c\x51\x1e\x8d\
\x1d\xdb\x81\x53\x09\xfd\xc9\xd8\x96\x0d\xcb\x26\xe7\x7d\xf3\x01\
\xad\xa4\xbc\x95\xb5\xd5\xd1\xc3\x7c\xab\x0d\xba\xf3\xca\x22\xea\
\x6c\xd1\x71\xdc\x91\x62\x92\x07\x7e\xf8\x64\xb7\x28\x09\x90\x16\
\xc7\x79\x92\x93\x18\x3b\x95\xf9\x95\x64\x27\x52\x4e\x37\x72\xa6\
\x63\xc6\x78\x4d\x33\x14\xfd\x61\xa0\x55\x07\xa9\x67\x45\x3a\x50\
\xfa\xa7\x9d\x4e\x91\xf2\x9e\x08\xc0\xca\x9b\x31\xe8\x99\x5b\xc4\
\x8b\x51\x03\xe9\x64\x84\xf6\xd6\xe7\x70\x65\xeb\x77\x71\x61\xf8\
\x7c\xb1\x87\x85\x01\xc8\x64\x83\x38\x1b\x1e\xee\xf7\x9f\xc3\xfd\
\x87\xcf\x21\x38\xfc\x15\x3c\x67\xbe\x17\xcf\x6c\xfc\x20\x9c\xf5\
\x7b\xd1\x6c\x36\xe1\x38\x4e\x6c\xeb\x04\x3d\x4f\x8b\x28\x57\xd2\
\x31\x00\x06\xac\x42\x36\xc6\x8d\x96\x24\x87\x4b\x93\x7d\x04\x92\
\x39\xbe\x43\xc8\x39\x0b\x43\x40\xc8\x68\x13\x52\x21\x20\x05\x9d\
\x23\xda\x40\x35\x9d\x5d\x9a\xa6\x3f\x05\x55\x52\x22\xda\x24\x9a\
\xc0\x9c\x88\x9d\x2b\x75\xab\x19\x6e\x50\x6a\xdb\x16\x2c\xdb\x86\
\xcd\xb6\x59\x58\xf4\x87\xa9\x18\xbd\x08\x68\x4f\x3c\x0f\x41\xf7\
\x16\x2e\xdc\xf8\x37\xb8\x70\xf0\x45\xac\x8d\x5e\x4a\xdc\x70\x76\
\x17\xab\x78\x1e\x0f\xe1\x39\xfb\x11\xdc\xac\x5d\x45\x3d\xda\xc3\
\xac\xd9\xa8\xa3\x5e\xab\xa3\x52\xa9\xc0\xa9\x38\xaa\x3c\x28\x99\
\xef\xac\xc1\x62\x1e\xfa\x39\xe9\x5e\x1e\xbb\x75\x1c\x39\x2f\x83\
\x50\x11\x96\x2a\xe9\xda\xbc\x20\xe9\x38\xe0\xaa\x0c\x90\x4e\x1a\
\xf8\xe7\x49\xf3\x76\x97\x2c\x66\xaf\x68\x5b\xe6\xa1\xf4\x7a\x4c\
\x63\x7b\x17\xfd\xbd\x94\x91\xa2\xe3\x87\x3e\x6e\xf2\x67\xf3\xb4\
\x10\x4a\x3d\x38\x03\xa0\xf8\xb9\x64\xb3\xe4\x58\xc2\x14\x71\xac\
\x4d\x27\xb5\xed\xd3\xa8\xbf\x30\xcd\xd3\x99\x6c\x1e\xa7\x9f\x16\
\xff\xfa\xd7\xff\xa5\x04\xca\xdb\x4f\x25\x49\xe2\x4b\x65\x71\x25\
\xa1\x5c\xfd\x99\xbc\x7c\xa4\x35\x44\xcf\x1d\xe3\xd2\x6b\xbf\x8a\
\xeb\xdb\x9f\x41\xc5\xef\xcd\x84\xf1\xea\x17\x31\x5e\x7b\x27\xbc\
\xe6\x25\x78\xcd\xcb\xf0\x9a\x97\x30\x89\xfe\x06\x56\x0d\xe6\x68\
\x1f\xd6\x60\x07\xe6\x70\x1b\xd6\x60\x07\xce\xe1\x4b\xa8\xbf\xf1\
\x07\xb0\xfa\xb7\x66\xe2\x9a\x48\x13\x5f\x12\x1f\xc4\x4b\x9b\xdf\
\x87\xa5\x0b\x77\xa3\xd9\x6c\x28\x46\xab\xa8\xaa\xad\x4c\x18\x5e\
\x4e\xfe\x9c\x94\xe1\xca\x11\xaf\xbb\x83\xe5\xed\xcf\xa3\xd1\x79\
\x11\xad\xd1\xab\x80\xef\xc3\x93\x02\x3e\x0c\xf8\xd2\x80\x0f\x13\
\x81\x88\x7e\x30\x11\x08\x0b\x01\x8c\xe8\x6f\x74\x6e\x18\x08\x60\
\x21\x10\x26\x04\x0c\x84\x4f\x07\xe1\x4f\xfa\x10\x08\xc2\xfd\xb4\
\xa4\x1f\xde\x93\x01\x0c\xf8\x30\xa5\x07\x43\xfa\x30\xe0\x45\xe7\
\x3e\x0c\xe9\xc1\x84\x8f\x23\x63\x15\x37\xad\xab\x78\xcb\xbe\x1f\
\xbd\xca\x65\x38\x4e\x05\xf5\x5a\x15\xb5\x7a\x0d\xf5\x5a\x1d\xd5\
\x6a\x05\x8e\xc6\x04\x2e\xe2\xe3\x24\x5b\x3b\xdf\xf7\x31\x72\x5d\
\xac\xbc\xf1\x3b\x78\xe7\xeb\xff\x37\x9c\xa0\x0f\x0f\x16\x9e\x9b\
\xdc\x87\xd7\x26\x1b\xd8\x72\x9b\x18\x7a\x06\xd6\x8c\x23\x5c\xb2\
\xf7\xf1\x58\xe3\x65\x34\x8d\x11\x24\x04\xfe\xdd\xf0\x61\xfc\x1e\
\xbe\x03\xb5\x66\x1b\x4b\x4b\x4b\x68\x2f\x2d\xa1\xd5\x6a\xa1\xd9\
\x68\x84\xf9\x8e\x80\x56\xd1\x77\x98\xd6\xb9\xe7\xa9\x06\xd2\x3a\
\x59\xfd\x7e\xda\x60\x4c\xd7\x8b\xac\x34\x2d\xcb\xa0\x25\xc9\x22\
\x6c\x30\xe6\xc9\xab\x5e\x27\x69\xab\x08\xf9\xf1\x3c\x60\x49\x3f\
\x2e\x0b\x94\x93\xce\xf3\xf2\xa1\x87\xc9\xcb\x7f\x11\x50\x99\x14\
\x07\xef\xa3\x79\xbb\x4a\xcb\x63\x91\x7a\x2c\x9a\x57\x3d\x6f\xc7\
\x05\xc0\x42\x00\xc6\x8c\xad\x95\xc4\x6c\xb4\xfc\x5a\xfc\xbe\x60\
\x6c\x7f\x91\xb4\xd3\xc4\x30\xb2\x3d\x9b\x17\xeb\xf3\x82\xcc\xb1\
\x85\xbb\x58\x48\x0d\x23\xa3\x3e\x36\x1e\x88\x43\x2b\xf5\x9c\x88\
\xee\x85\x37\x98\x09\x8a\x69\xb0\x47\xcb\x99\x20\x4c\x9f\xcb\xae\
\x8f\x62\x12\xee\x45\x58\x16\xfc\x68\x39\x41\x01\x23\xbb\x99\xb8\
\x8a\x30\xa0\xaa\x1d\x2e\x12\x60\x25\x89\x0e\xb0\xf4\xeb\x45\x8e\
\xb3\x6c\x57\xa4\x94\x40\xf7\x26\xde\xf5\xc2\x4f\x63\x7d\xa0\x31\
\x56\xc2\xc0\xe0\xd2\xe3\xe8\x3c\xf4\x57\x30\xb8\xfc\x91\x90\xa9\
\x2a\x29\x95\xfd\xe7\x50\x7f\xe3\x0f\xd0\x78\xfd\xdf\xc1\x39\x78\
\x21\x76\xaf\x1f\x54\xf0\x79\xeb\x63\xb8\x75\xe5\x7b\xb0\xb6\xb6\
\x8e\x46\xa3\xa1\x7c\xae\xe8\x79\x4d\x93\x79\x00\x16\x95\xdb\x0b\
\x02\x34\x6f\x7d\x01\xef\x7a\xe9\xe7\x51\xf5\x8e\x00\x00\x01\x0c\
\xb8\xd2\x86\x05\x0f\xa6\x08\x12\x99\x9a\x93\x94\x00\x06\x3c\x69\
\x42\x02\xa8\x88\xd0\xbf\x8c\x84\xc0\xef\xb9\x1f\xc0\x1f\x1b\x1f\
\x45\xad\xd1\xc4\xf2\x52\x0b\xed\xe5\x65\x2c\x2d\xb5\xd0\x68\x34\
\x50\x71\x1c\xb5\x9d\x45\x19\xf7\x19\x49\x42\x4c\xe6\x64\xe2\x21\
\xe8\xdd\xc4\xfd\xcf\xfd\x3c\x36\xbb\x5f\xc1\x10\x35\xfc\x4a\xff\
\x7b\xf0\x6f\x0e\xde\x8d\xfd\xa1\xc4\xc8\x9d\xc0\xf3\x26\xe1\x66\
\xae\xd1\xf6\x10\x96\x11\xe0\xcf\x2d\xbd\x8e\x9f\xb8\xf2\x39\xdc\
\x5b\xdd\xc5\x4d\xb7\x85\xff\xe7\xe8\x23\xd8\xa9\xde\x8b\x95\x76\
\x1b\xab\x2b\x2b\x58\x5b\x5d\xc1\xd2\x52\x08\xb4\x6c\x62\x2f\x91\
\xfe\x1e\x79\xbb\x4f\xfa\x08\x75\x50\x59\x84\x81\xd2\xe3\xe3\x03\
\x61\xd2\x73\x42\x24\xbb\x69\x48\xaa\xbb\xe3\x86\x39\x0b\x80\x95\
\x74\x9c\xe7\xa6\xa1\x48\x3e\xd2\xd2\x4c\xeb\xc7\xca\x00\x9b\xb4\
\xf8\xd2\xd2\xbd\x03\xb0\xe2\x92\xfb\xcd\x80\x36\x03\x26\xd0\x14\
\xd2\x32\x52\x06\x88\xf4\x61\xec\x2f\x58\x18\x8a\x83\x6c\xb8\x16\
\x01\xb0\xb2\x15\x45\x45\x01\x96\x1e\x56\x3f\xce\x55\x57\x09\x63\
\xa6\xaf\xca\xea\xb7\xb8\x48\x29\x11\x48\x09\x61\x1a\x0a\x78\xcd\
\x0b\xb0\xc8\xc3\xfe\x71\x84\xde\x6d\x52\xda\xc5\xf3\x52\x0e\x40\
\x97\xe9\x9b\xe9\x58\xfc\xe6\xaf\xff\x2b\x6a\x91\x2c\xd9\xd8\x49\
\x14\x3a\x21\x6f\x5a\xd8\x58\xc1\x04\xbb\x17\x1d\x93\x19\x76\x68\
\x70\x3d\x3b\xb0\x48\x48\x18\x1c\x04\x51\x1c\x2c\x2e\xae\x03\xf6\
\x7d\x1f\xad\x5b\x7f\x8c\x87\x5f\xfd\x85\x98\x8d\x95\x5f\x5d\x45\
\xf7\x81\xef\x43\xe7\x81\x1f\x84\xd7\xbc\x14\xcb\x76\x10\x04\x18\
\x0d\x47\x18\x8f\x5d\x4c\xdc\x09\xdc\xc9\x04\x90\x40\xa5\xe2\xc0\
\xa9\x54\xe0\x38\x36\x9c\x8a\x9d\xb8\x9f\x52\xed\xc6\xe7\xb1\xf6\
\x95\x9f\x87\xb3\x1f\x07\x72\x4f\x8e\xef\xc1\xe7\xd7\xff\x06\x2e\
\x5e\xb9\x8e\x76\xbb\x8d\x4a\xa5\xa2\xca\x97\xd7\xe8\xd3\x6e\xa7\
\x31\x1b\xf4\x9b\x78\x1e\xee\x7a\xe9\x97\xf1\xc0\x5b\xbf\x02\x0f\
\x36\x7e\x63\xfc\x5d\xf8\xd3\xce\xbd\x78\xbe\xbb\x8c\xfe\x58\xc2\
\xf3\x43\x03\x6e\x4b\xf8\x30\x11\xc0\x31\x7c\xd8\xc2\x87\x65\x04\
\x70\x44\x78\xdd\x12\x01\x1c\x23\x80\x25\xc2\x7b\xe1\x71\x08\xca\
\x3c\x98\xf0\xa5\x09\x0f\x06\x3c\x19\x82\x26\x2f\x10\xe1\x35\x29\
\xe0\xc1\xc4\x24\x30\xe0\x06\x26\x26\xd2\x84\x27\x0d\xb8\xd2\x40\
\xa0\x5e\x10\x70\xa5\x72\x80\xf7\x34\x6e\xe0\x6f\x5e\xfc\x02\x2e\
\x3b\x07\x78\x7e\x74\x01\xbf\xd0\xfd\x6e\x34\x5a\xab\x58\x5b\x5f\
\xc1\x85\xb5\x0b\x58\x5d\x6d\x63\xa9\xd9\x44\xa5\x5a\x55\x2b\x37\
\xe7\x15\xaa\x1b\x77\x32\x41\xeb\xcd\xdf\xc7\x43\x2f\xfd\x53\x38\
\x7e\x0f\x4f\xfb\xef\xc4\xcf\xed\xfe\x00\x5e\xeb\x38\x18\x8e\x46\
\x70\x5d\x0f\x9e\xef\x21\x88\xec\xd4\xe2\xdf\xa3\x81\xaa\x15\xe0\
\xc7\xef\xfe\x02\x9e\xb8\xeb\x4b\x10\x00\x3e\xbd\xff\x20\x3e\x33\
\x7e\x1c\x6b\x2b\xab\xd8\xd8\x58\xc7\x85\xf5\x75\xac\xae\xb4\xd1\
\x68\x34\xe0\x54\x2a\x30\x53\x1c\x0c\x02\xbc\x0b\x07\xf5\xe2\x08\
\x28\x41\x29\x43\x72\x9e\x7d\x63\x62\x5a\x7d\x53\x80\xc4\xcb\xa8\
\xc5\x15\xbb\x9e\x05\xb0\x16\x00\x9e\x12\xa6\xff\xb3\x92\x37\x58\
\xd0\x4c\x38\x43\xc2\x7d\xe4\xd2\xe3\xd7\x57\x7e\x26\xd5\x89\xe0\
\xed\x88\xd2\xe4\x69\x97\x05\x57\x5a\x3c\x3c\x3f\xd3\x28\xf9\x7b\
\x45\xe2\x71\x2c\xbf\xfa\x73\x19\xd7\x72\x41\x53\x12\x78\xd2\xd3\
\xcc\xa9\x33\x5e\x46\x29\x65\xac\xeb\x9f\x02\x97\xd9\x3c\xa5\x82\
\x27\x16\x5f\x5a\x7d\x27\x02\x2c\x3d\xdf\x19\xcf\xc7\xc2\x68\xe1\
\xc8\x87\x55\x18\xb7\x04\x60\x40\x4a\x1f\xe1\x00\x1f\x20\xdc\xb2\
\x85\x80\x97\x54\x31\x4d\x01\xd6\xa2\x26\xc8\x79\x63\x40\x36\xf3\
\x14\x5e\x2b\x97\x76\xd2\x3d\x02\x58\xb1\xfb\x1a\x83\xc5\x99\x2b\
\x9d\x15\x97\x32\x64\x86\xf9\x4e\x37\x7c\x5c\xa7\x08\x66\xec\xb7\
\x66\x73\x97\x73\xbf\x88\x48\xad\x73\x05\xf4\x9e\x25\x3f\x1f\xd3\
\xbc\xf0\x32\xc8\x48\x4d\x2a\x99\xea\x54\xc6\x13\x8a\x1f\xce\x30\
\xa5\x2c\xf6\x4f\x47\x00\x2b\xaf\xa1\x14\x61\x9f\x92\xc2\xa4\xc5\
\xab\x7b\x8d\xd5\x37\xc9\x4c\x8b\x43\x8a\x70\x80\xf2\xdd\x21\xae\
\xbd\xf4\x29\xdc\xb7\xf7\x3b\xbc\x38\x38\x7c\xf8\x47\x71\xf0\xc8\
\x7f\x01\x69\xd8\xea\xaa\xeb\x4e\xb0\xbd\xb5\x83\xad\x9b\xdb\x38\
\xd8\x3f\x80\x10\xf1\x5d\xc4\xf9\x8e\xe3\xa4\xe6\xab\x37\x6a\x68\
\x2d\x35\xd0\x5c\x6a\xa2\x52\x71\x78\x4d\xa0\xf9\xf2\x67\xb1\xfa\
\xb5\x5f\x80\xd5\xbb\xa1\xae\xbe\x3e\x5e\xc6\x6f\x56\x7f\x04\xeb\
\xf7\x3e\x8a\xb5\xb5\x55\xd4\x6a\xb5\x44\xda\x56\x17\x21\x8a\xd7\
\x19\xcd\x2a\x27\x9e\x07\x73\xef\x79\xfc\xb9\xaf\xff\x5d\x6c\xcb\
\x0b\xf8\x47\x47\x7f\x0b\xcf\x1d\xd6\xd0\xef\xf5\x31\x1a\xbb\x11\
\x78\xf0\x11\xc8\x78\x47\x39\x2d\x41\x3c\xbd\xf0\x98\xfd\x4d\xeb\
\xcb\xa6\x8c\x71\xec\xaf\x1e\xb3\xe0\xf7\x04\xd0\xb0\x3c\xfc\xe4\
\xbd\xbf\x8f\x4f\xae\x7d\x13\xff\xef\xd6\x43\xf8\xec\xe0\x7d\x58\
\x5f\x5d\xc5\xe6\xc5\x8b\xd8\xdc\xbc\x88\x0b\x6b\x6b\x58\x6a\x35\
\xd5\x7e\x5c\xf3\xa8\x09\xa9\xed\x4d\x26\x13\x88\xbd\x6f\xe2\x83\
\x4f\xfe\x1d\x78\xd2\xc0\x3f\x1f\x7e\x3f\x7e\x6d\xfb\x51\xf4\xfa\
\x03\x8c\x46\x63\xb8\xb4\xe7\x96\x8c\xcf\x6c\xe3\x05\x0c\x2b\xe2\
\xfd\xcb\x37\xf1\xf7\x1f\xf8\x2d\x5c\xae\x1c\xe1\x9f\xbe\xf1\x5e\
\x7c\xd1\x7b\x0f\x2e\xac\xaf\x61\xf3\xe2\x06\x36\x2f\x6e\x60\x6d\
\x75\x15\xcd\x66\x03\x8e\xed\x44\x2b\x0d\xf3\xbf\x21\x19\x81\x28\
\xe5\xa9\x99\x57\xa4\x10\x6a\xb5\x67\xb8\x6a\x31\x0c\x5b\xe4\xdb\
\xe4\xb3\xfe\x24\x80\xb5\x08\x76\xea\xb8\xa2\xe7\x8f\xa7\x26\x58\
\x6f\x99\xd6\xd7\xf0\x78\xca\x7a\x6a\x2f\xca\x16\xa5\x49\x11\xe6\
\x2b\x8b\xa9\xcc\x8c\xbb\x44\x3a\x69\x71\x4b\x56\x1f\x45\x18\xac\
\x24\xd1\xeb\x74\x1e\xf6\xa9\x6c\x98\x45\xc4\x91\xf5\x4c\x74\xa6\
\x40\x13\xa0\x7f\xf7\xd3\x73\xce\x62\x15\x05\x01\x45\x26\x84\x65\
\xd8\xb8\xb4\x31\xa0\x4c\x9f\x98\x16\x9f\x21\xb3\xc3\xa4\x1d\xeb\
\x00\xab\x68\xda\x67\x2d\xc7\xd1\x0e\xa5\x31\x54\x33\xcf\x21\x74\
\xd0\x9a\x26\xe6\x0f\xff\x27\x7f\xf5\xa7\xca\x66\x46\x0f\x9f\x8c\
\xb8\xb3\xc1\x42\x2c\x93\x39\xe0\x2d\x06\xb0\x20\x21\x07\xfb\x78\
\xf4\xeb\xff\x23\x2e\x75\xbf\xac\xae\xfb\xd5\x15\x6c\x7d\xec\x67\
\xd0\x7d\xf0\x07\x81\x48\xc7\x7b\x78\x70\x84\xaf\x3f\xf9\x34\x9e\
\x7e\xea\x59\x6c\xdd\xdc\xc6\x70\x30\x84\x69\x5a\x6a\xc3\x4c\xfd\
\x2f\x1d\x87\x5b\x25\x00\xe3\xd1\x04\xdd\xa3\x1e\x7a\xdd\x3e\x04\
\x04\x9c\x4a\xa8\xfe\x73\x57\x1e\x44\xe7\xa1\x1f\x82\xe9\x76\x51\
\xd9\xfd\x06\x00\x60\xd9\x1a\xe3\x21\xef\x49\x7c\x6d\xd7\xc1\xd0\
\x5e\x87\x13\xa9\xbd\xf2\x58\x2c\x7e\x2b\x4b\x35\xab\x6c\x69\x22\
\x86\xe6\x1d\xcf\xfc\x43\x34\xdc\x1d\xfc\x6c\xf7\x6f\xe1\x6b\xbb\
\x4b\xe8\x74\xbb\x18\x8c\x46\x70\x5d\x17\x13\x8f\x36\xee\xf4\x63\
\xbb\xbc\x27\xfd\xa4\x8c\x9f\xfb\x7e\x08\x3e\x92\xc2\x86\xde\x76\
\x93\xe3\xe1\xd7\x7d\xed\xde\xd8\x07\x3e\xb7\x7f\x15\xdf\x7b\xf1\
\x79\x3c\xd2\xdc\xc6\xa7\xdf\x5c\x45\x6f\x12\x2a\x2f\x6d\xd3\x42\
\xa5\xea\xa8\xfa\x9a\x77\x65\x26\x0d\xba\xe3\xe1\x00\xef\xfe\xc6\
\x4f\xa2\x36\xd9\xc3\xcf\xf4\x7f\x1c\x9f\xd9\x79\x08\xdd\xde\x00\
\x83\xe1\x18\x93\x89\x07\x3f\x90\x08\x24\x00\xb5\x05\x46\x00\x21\
\x2c\x28\xba\x58\x18\x11\xd0\x31\x70\xcb\x5d\xc6\xef\xee\x3d\x84\
\x1f\xd8\xf8\x3a\x1e\x5b\xda\xc6\x6f\xdd\x58\x45\x77\x1c\xb6\x41\
\xd3\x30\xe0\x38\x36\x6c\xcb\x0a\xdb\x94\x99\x6c\x8f\xc5\xc1\x84\
\x0c\x02\x04\x92\x56\x33\x86\x3f\x77\x3c\x81\x3b\x71\xc3\x85\x09\
\x13\x2f\xaa\xff\x20\xf6\x81\x4f\xf1\xd7\x7c\xdf\xe8\x59\x77\x7a\
\xfc\xfb\x8e\xb5\x8f\xc8\x7b\xb3\x64\xed\x30\xa9\x63\x8b\x66\x80\
\x8a\xb9\xd2\x55\x48\xfa\x40\x90\x96\x87\x79\xeb\xa1\x0c\xb8\x3a\
\x8e\x94\x51\xed\x2d\x32\xdd\x93\x88\xeb\xac\x25\xfe\xae\x79\x1f\
\x3c\xbb\x45\x0c\x0f\x5f\x54\xf3\x90\x9c\xce\xf1\xf3\x3a\x2f\xc0\
\xca\xcb\xb7\x94\x12\x46\xc6\x98\x5d\x24\x0f\x45\xf3\x71\x5e\x84\
\xf7\x15\x49\x3f\x3d\x2c\x97\x32\x6d\x20\xeb\xab\x31\xff\xda\x5f\
\xfd\xa1\x9f\x9a\xb7\x52\xb2\x40\x56\x5e\xe7\x5e\xe4\xba\x1e\x87\
\x94\x12\x13\x77\x88\xf7\x3c\xf3\xbf\x62\x7d\xf4\x92\x0a\x37\xdc\
\xfc\x00\x6e\x7e\xf2\x17\xe1\xae\x3e\x04\x00\xe8\xf7\xfa\xf8\xc6\
\x93\xcf\xe2\xd9\xa7\x9f\xc7\xa0\x3f\x54\x71\x70\x10\xc5\xc1\x94\
\x0e\xae\xf8\x71\x68\x63\x23\x30\x1a\x8e\xd1\xef\x0e\x60\x98\xe1\
\xc0\x0a\x61\x62\x70\xf9\xdb\xe1\xd7\xd6\x51\x7b\xeb\xf3\x10\x90\
\xa8\x1a\x3e\xde\x6b\x3c\x83\x2f\xdc\xb4\x31\x74\xd6\x51\xad\x54\
\x72\x41\x56\x11\x80\xc5\xc5\xf7\x7d\xf8\xbd\x5d\xbc\xfb\xf5\x4f\
\xe1\x29\xff\x61\xfc\xf2\xce\x87\xd1\xe9\xf5\x30\x18\x0e\x31\x99\
\x4c\xe0\x07\x3e\xa4\x8c\xb3\x4b\x79\x8c\x80\x2e\xf4\xbc\xfe\x2b\
\x2a\x49\xe9\x4d\x02\x03\x03\xdf\xc6\x77\xae\xbf\x8a\x37\x7b\x16\
\x9e\x3e\x6a\x46\xef\xc4\x41\xb5\x52\x45\xb5\x56\x85\x63\x3b\x30\
\xcd\x74\x75\x5b\x56\x7a\x52\x4a\x4c\x26\x1e\x2e\xbe\xf4\xcb\xb8\
\x7c\xf0\x47\xf8\xc3\xc9\xb7\xe3\x57\xb6\x1f\x47\xb7\xd7\xc7\x70\
\x38\xc6\xc4\xf3\x11\x04\x21\xc3\xd5\xed\xec\x61\xd0\xdb\x47\xbf\
\x77\x80\xd1\xb0\x83\xd1\xb0\x03\xd7\x1d\xc1\x10\x26\x2c\xab\x0a\
\x01\x03\x04\xb8\xfa\x41\x0d\x3b\x6e\x13\x7f\x71\xfd\x79\x5c\xb1\
\x8f\xf0\xdb\xb7\xd6\xa3\xce\xca\x80\x65\x5b\xb0\x1d\x07\x8e\x65\
\xc3\xb2\xcc\xb8\x5a\x0a\x54\x67\xa1\xfb\x0c\xdf\x0f\x01\xd5\x78\
\xe4\x62\x34\x1c\x62\xd8\xdd\x87\x7f\xf8\x3a\x7a\xfd\x1e\x8e\xfa\
\x63\xf4\xfb\x03\x0c\x86\xc3\x50\x75\x3d\x99\xc0\xf3\xbd\xa9\xaa\
\xc2\x10\xaa\x73\x9c\x67\x26\x7b\x96\x9d\x1e\xb1\x74\x32\x5a\xe9\
\x3a\xf1\x3c\x8c\xc7\x63\x8c\x47\x23\x8c\xc6\x63\x8c\xc7\x13\xb8\
\x6e\x08\x7e\x3d\xcf\x57\xec\xab\xef\x4b\x48\x19\xc0\xf3\x19\x10\
\x93\x52\x4d\x00\x90\xd0\x49\xaa\xf4\x52\x66\xa3\x74\x8d\x64\x51\
\xf5\x52\x86\x25\x9a\x37\x8e\x3c\xc0\xb5\x10\xa5\xcb\xdb\x08\x60\
\x15\x91\xa4\x31\x2b\x8f\x38\xc8\x8b\xe3\xb8\xf9\x38\x09\x80\x45\
\xef\xd5\xd4\x6c\x90\x8b\xb0\x58\x7a\x1c\xb7\x1b\xc0\x3a\x95\x74\
\x32\xee\x15\x76\x34\x4a\xa2\xab\x04\x8b\xcc\x1e\x13\x33\x55\xf2\
\x59\x29\x25\x3c\xcf\xc3\xbd\xdf\xfc\x05\x6c\x0c\x9f\x53\xd7\x0f\
\xde\xfb\x9f\xe3\xe0\x91\x1f\x03\x44\xe8\x9f\xe8\x85\xe7\x5e\xc4\
\xcb\x2f\xbe\x3a\x13\xa7\xc9\xdc\x02\x10\x78\xe2\x60\x4a\x57\x15\
\xea\xaa\x2a\x62\x48\x0e\xf7\xba\xe8\x1d\x0d\xb0\x76\x71\x05\x96\
\x65\xa2\xf3\xe0\x7f\x8c\xc9\xd2\x35\x5c\xfc\xc3\xff\x0e\xc6\xf8\
\x08\x96\x90\xf8\x4f\x9d\xcf\xe0\x9f\x3c\x5b\x87\xc0\x87\x71\xf9\
\xf2\x25\xd4\xeb\xf5\x63\xab\xbe\xe8\x6f\x10\x04\xb0\x7a\x6f\x01\
\x00\x5e\x71\x2f\xa2\x3f\x18\x62\x34\x1a\x87\x6e\x1a\xc6\x63\x0c\
\x86\x03\xf5\x6c\x7c\xd6\x96\xfc\x37\x1e\x6e\xf6\xfd\x26\x1d\x27\
\xd1\xea\x9c\x5e\xa7\xb0\x96\x65\xa3\x5a\xad\xa9\xa7\x9e\xee\x86\
\x3b\xcf\xb7\xad\x11\x46\xa3\x21\xba\xbd\x3e\x8e\x8e\x8e\xd0\x69\
\x2f\x63\x79\x79\x09\x8d\x5a\x0d\xb6\x1d\xb2\x49\x45\x4d\xb1\x68\
\x00\xf7\x3c\x1f\xd6\xc1\xf3\xb8\xff\xe6\xbf\xc0\x81\x5c\xc5\x2f\
\xee\xfd\x47\xe8\x0d\x46\x18\x8e\x26\x98\xf8\x01\x02\x29\x30\xe8\
\x1f\xa1\xdf\xdb\x85\x94\x12\x57\xee\x5a\xc5\x3b\xee\xbb\x0b\xf5\
\x5a\x05\xcf\xbf\x7c\x13\x2f\xbe\xba\x85\xce\xd1\x2d\x54\xdd\x01\
\x9a\x4b\x9b\x31\x5b\xc0\x4f\xef\x3c\x8c\xef\x5a\x7f\x1e\xdf\xb1\
\xf2\x22\x3e\xb1\xfc\x32\xfe\xe0\xe8\x7e\x38\x96\x85\x4a\xb5\x12\
\x82\x43\xbb\x12\x2d\x6e\x30\x60\x98\xa1\x9d\x03\xb1\x31\x9e\xef\
\xc3\x9b\x4c\x30\x71\xc7\x58\xd9\xfa\x43\x5c\x38\xf8\xf7\x58\x1e\
\xbe\x8a\xa5\xc9\x96\x5a\x80\xd0\x47\x03\x2f\x89\xfb\xf0\xb2\xf9\
\x10\x5e\xad\xbe\x17\x95\x6a\x1d\xf5\x7a\x0d\x8d\x7a\x1d\xcd\x46\
\x03\xb5\x5a\x15\xb6\xed\x84\x20\xae\x24\xf8\x3c\x49\x29\xaa\xc2\
\xf2\x7d\x1f\xee\x64\x02\xf3\xe8\x0d\x54\xbb\x2f\xc3\x71\xfb\xf0\
\x3d\x17\x87\x62\x05\x07\xc6\x45\xb8\x66\x0d\xa6\x61\xc2\xb2\x4d\
\xd8\xa6\x05\xcb\xb6\x60\x1a\x66\x68\xdb\x66\x84\xac\xa2\xa1\xda\
\x6b\x38\x13\x37\x8c\xa9\x43\x58\x6a\xc7\x12\x12\x32\x90\xca\x86\
\x82\x44\x18\x22\x32\xee\x0d\xd5\xb8\x42\x84\x7b\x37\x26\x99\x25\
\x14\x2d\x6f\x19\x10\x74\x9c\x78\xb3\x40\xe2\x49\x80\xc5\xdb\x45\
\xe6\x51\xff\x70\x55\x79\x12\x7b\x75\x52\x03\xf2\x69\xbc\x1b\x2a\
\x0f\x8d\xab\x7a\x1b\x49\x52\x7b\x25\x8d\xc1\x59\x79\x4d\x62\x7e\
\xce\xb3\x94\xd5\x9e\x25\x3d\x97\xbb\x9f\x21\x30\x63\xfb\xc5\x45\
\x2d\x6f\x28\x62\xd3\xc0\x5f\x20\xcf\xe0\xbc\x0d\xa8\x68\x07\x47\
\x9d\xf4\x85\xd7\xfe\x15\xee\x39\xfc\x03\x75\xfd\xf0\xe1\x1f\xc5\
\xc1\xa3\x3f\x0e\x20\xdc\x6c\xf2\xab\x5f\x7e\x0a\x3b\x5b\xbb\x89\
\x79\xe7\x00\x2b\x09\x68\x71\xc6\x8a\x40\x96\x5e\xd1\xf4\xf3\x3c\
\x0f\xdb\x37\x76\xb1\xb6\xb1\x82\x4a\xd5\xc1\x70\xf3\x83\x78\xeb\
\x2f\xfd\x12\x2e\x7f\xf6\x6f\xc0\x70\x3b\x58\xb6\x27\xf8\x61\xeb\
\x37\xf0\x4b\xdf\x6c\xc2\x76\x6c\xdc\xb5\xb9\x89\x6a\xb5\x7a\x2c\
\x15\x05\xfd\x3c\xdf\x47\x7d\x70\x13\x00\xb0\xe5\xb6\x14\xdb\x41\
\x76\x45\xe3\xf1\x68\xae\x34\x4e\x42\x74\x7d\xfd\xae\x5b\x07\x00\
\xac\x39\x2e\x26\x9e\x8f\xd1\x68\x88\xde\xa0\x8f\xde\x20\xb4\x8f\
\x9a\x78\xa1\x8a\x8c\xec\x8f\x92\x64\x56\x05\x07\x48\x19\x60\x32\
\x99\xe0\xde\x37\x7e\x0d\x86\xf4\xf0\xcf\xba\x3f\x82\x9d\xbe\xc0\
\x68\x34\x81\xef\x4b\x04\x81\x40\xaf\xb3\x8b\x41\x7f\x1f\x17\xd6\
\x96\xf0\x3f\xfd\xc4\xf7\xe2\x43\x8f\xde\x1b\x8b\xe7\xe6\xf6\x21\
\xfe\xde\x3f\xfe\xd7\xf8\xea\xd3\xaf\xc1\xf3\x5c\xac\xac\xdd\x1b\
\xa5\x15\xa6\xf7\xbf\xbc\xfc\x97\xf1\xeb\x8f\xfc\x33\xfc\xe8\xb5\
\x57\xf0\x3b\x5f\xbe\x8c\xc3\x4e\x07\xb5\x7a\x0d\xcd\x46\x03\xcd\
\x66\x03\xd5\x6a\x35\x04\xe6\x81\x01\x29\x43\xd5\xa3\xe7\x4d\x20\
\xfa\x3b\xb8\x78\xf3\xb7\x70\x6d\xef\xf7\x50\xf7\x0f\x01\x00\x7d\
\xd9\xc0\x93\xee\xbb\xb0\xe3\xb5\x51\x13\x03\xbc\xc3\x79\x05\xef\
\xb5\x9e\xc2\x7b\xbd\xa7\xf0\xec\xfe\x17\xf0\xcb\x93\xef\x86\xdd\
\x58\x45\x7b\x79\x19\xab\x2b\xcb\x58\x5e\x5a\x42\xb3\xd9\x44\x15\
\x55\x58\xd6\xe9\x3a\xb7\x4d\xed\x50\x49\x65\x9d\x62\xfb\x43\xe7\
\x9e\x1f\xa0\xba\xff\x34\xee\x7b\xf3\xd7\x70\x57\xe7\x4b\x89\xab\
\x5a\x8f\x64\x0b\xdb\x58\xc7\xae\xd8\x40\xc7\xba\x00\xd7\x6c\x62\
\x62\xb5\x30\xb2\x9a\x70\xcd\x06\x3c\xab\x01\xdf\xac\x02\x08\x6d\
\x24\x0d\xd3\x80\x65\x5a\x70\xec\x50\x3d\x4b\xee\x32\xfc\xc0\x8f\
\xd4\x8f\x34\x10\x84\x0c\xa0\x21\x04\xcc\xe8\x19\xd3\x32\x61\x45\
\x8c\xa3\x11\xf5\x0b\x45\xfa\xb0\x93\x02\x57\x69\x71\xe4\xa5\x73\
\x3b\x0d\x74\x67\x2d\x3a\xb0\x4a\xab\xbb\x24\x80\xf2\x76\x14\x1d\
\x58\xa5\x41\xda\x96\x12\x00\x00\x20\x00\x49\x44\x41\x54\x4d\xaa\
\x79\x98\xb7\x63\x7d\x24\x81\x4e\xba\xbe\x28\xb1\xe6\x89\x2c\x09\
\x09\xf3\xf3\x32\x71\xd0\x71\x96\xee\x58\x4a\x89\xc6\xf6\x9f\xe1\
\xdd\xb7\x7e\x59\x5d\xef\xdf\xfd\x31\xec\xbf\xef\xbf\x0c\x8f\xfb\
\x03\x7c\xf9\xcf\xbe\x8a\x5e\x2f\xd9\x5b\x3b\x37\x60\xd7\xc1\x15\
\x3f\x26\x5f\x56\x9c\xc5\xe2\x79\x20\x3b\x24\x21\x04\x3c\xcf\xc3\
\xce\xad\x7d\xb4\x57\x5b\x68\x2e\x35\x30\x59\xba\x8e\xad\x8f\xfe\
\x23\x6c\xfe\xdb\x1f\x87\x90\x3e\xee\x6d\xf4\xf1\x97\x0e\x7e\x1d\
\xbf\xfb\xe2\x12\x1c\xdb\xc1\x85\x0b\xeb\x6a\x75\xe1\xbc\x22\x25\
\x62\xbb\x8e\xfb\xbe\x07\xcf\x0b\x57\xc3\x21\x52\x27\x01\xc0\x5f\
\xfe\xce\xf7\xe1\x89\x1f\xf8\x76\x78\x91\xcd\x54\xa8\x7a\x09\xff\
\x4e\xd8\x31\xbf\x37\xf1\x7c\x75\x0c\x00\x96\x69\x44\x83\x92\x09\
\xcb\x9a\xfe\x55\xd7\x4c\x03\x96\x65\x4e\xc3\x59\xa6\xba\xf7\xc5\
\xaf\xbd\x84\x9f\xf9\x3f\x3e\x1b\xda\x53\x09\xa1\x56\x62\x38\x91\
\x95\xa5\x17\x08\x04\x81\x1f\xda\x20\xb9\x2e\x86\xc3\x21\x86\xa3\
\x21\xc6\xe3\x31\xaa\x95\x0a\x84\x08\xd9\x06\xaa\x2a\x3e\xd3\x0c\
\xdf\x05\xab\x13\x48\xf8\x9e\x0f\x77\xe2\xa2\xdd\x7d\x1e\x7d\xd9\
\xc0\xe7\x3b\xf7\x63\x34\xea\x45\xce\x56\x01\xd7\x1d\x61\xd0\xdf\
\xc7\x7d\xd7\x2e\xe2\x7f\xff\x07\x7f\x13\xcd\x7a\x65\xa6\x6e\xef\
\xda\x68\xe3\x7f\xfb\x7b\xff\x19\x7e\xfa\x17\x3f\x83\x5f\xff\xed\
\x2f\x61\xd0\xdb\x41\x73\xe9\x2e\x75\x7f\x77\xb2\x8c\xdf\xd8\x79\
\x1f\x9e\xb8\xeb\x0b\x78\x57\x7d\x07\xcf\x0d\x6c\x1c\x1d\x75\x70\
\xd8\x3a\xc2\x52\xab\x85\x8a\x53\x81\x44\x08\x0e\x3d\xcf\x47\xf3\
\xf0\x69\xdc\xb7\xf5\x59\x5c\xe9\x7e\x09\x86\xf4\xd0\x95\x2d\xfc\
\xcb\xe1\xf7\xe0\x77\x8e\x3e\x88\x57\x86\x6b\xf0\x26\x1e\x3c\xdf\
\x0f\xc1\x00\x24\x1e\xa8\xde\xc0\xdf\xde\xf8\x1d\x7c\x64\xe9\x69\
\xfc\xed\xe0\x57\xf1\xf3\x37\x3e\x89\x4e\xe7\x22\xfa\x83\x01\x5c\
\x77\xa2\x56\x01\x56\x10\xa9\x9d\x8f\x31\xb1\x99\x6d\x57\xda\x6c\
\x57\xb5\xa4\x78\x18\xc5\xa2\x4a\x19\xd9\x93\x49\x04\xbe\x84\x94\
\xbe\x6a\x7e\x32\xda\xe3\x51\x18\x06\xa4\xef\x63\x79\xe7\x4f\xf1\
\x81\x97\x7f\x1a\x02\x01\x5e\xf2\xef\xc3\x1f\x0e\x1e\x43\xc7\xb5\
\xe0\xfb\x3e\xae\x58\xb7\x70\xd5\xd9\xc6\x3d\x95\x2d\xdc\x6f\xbf\
\x8a\x07\xf0\x4a\xb8\x8b\x82\x07\x60\xac\xa5\x0f\x81\x9e\xac\xe3\
\x1b\xe2\xdd\xf8\x8a\xf1\x01\xf4\xed\x0d\xd8\x8e\x83\xbb\x8c\x5d\
\x5c\xf7\x5e\xc0\x45\xef\x35\x18\xc1\x04\x86\x9c\x40\x48\x1f\x90\
\x12\x07\x62\x0d\xb7\x8c\xcb\x78\xc5\x7e\x27\xc6\xce\x2a\x1c\xa7\
\x82\x8a\xe3\xa0\x56\xab\x84\x4e\x63\x6d\x1b\x76\xa4\x96\xd6\xb7\
\x11\xc9\xab\x2b\xfd\x38\xeb\x5a\x9e\x14\x01\x56\x24\xdf\x2a\x20\
\x20\x4f\xf2\xca\xce\x09\x01\x3a\xcf\x1b\xa7\x4e\x8a\x19\x9c\x97\
\x49\x29\x23\x59\x6a\x70\xde\x5e\xca\xb0\x57\x8b\x6a\xdf\x67\x25\
\x65\x57\xa4\xcf\x53\xde\xc2\x0c\x56\xd1\x46\xb0\x28\xf6\x8a\x9e\
\xcf\x4b\x5b\x4a\x09\xf3\xe8\x15\x3c\xf2\xca\xcf\x41\x44\xbe\x40\
\xdc\x95\x07\xb0\xf3\x91\xbf\x0f\x40\x60\x34\x1a\xe3\x4f\xff\xe4\
\xdf\x63\x3c\x1a\xa7\xc6\x41\x60\x89\x83\x2c\x3a\x4e\xb3\xbb\xa2\
\xd5\x84\xd3\x41\x3d\x64\xd1\xf4\xd5\x8f\x7b\x3b\x87\x90\x00\x5a\
\x4b\x0d\x0c\xef\xfa\x10\xf6\x3e\xf4\xdf\x63\xfd\xcf\xfe\x01\x00\
\xe0\xf1\x95\x1d\x3c\x77\xe3\xb3\x78\xad\x5e\x47\xa5\xe2\x60\x65\
\x65\x45\xd9\x64\xcd\x57\x5f\xa1\xcf\xa6\x11\x42\x80\xd0\x10\x83\
\x48\x45\x26\x63\xcb\xfa\x01\xe0\xee\x4b\xab\x73\xa5\xb1\x08\xf9\
\x93\x2f\x85\xfe\xc2\x0c\xc3\x9a\xda\x33\x09\xe0\xae\x6a\x08\x80\
\xb7\x46\x0e\xa4\x04\x82\xc0\xc7\x78\x1c\x02\xac\x7e\x3f\x64\xb2\
\x2c\xcb\x82\x63\x57\x60\x9a\x11\x85\x1f\x2d\x2d\x26\x2f\xf3\x53\
\x5b\x03\x28\xc3\x67\xd7\x75\xe1\x77\x77\xd0\x9c\x6c\xe3\xab\xde\
\xc3\x18\x8e\x3d\x05\xae\xa4\x14\xe8\x1e\xde\x80\x65\x99\xf8\xc9\
\xff\xfa\xfb\x13\xc1\x15\x89\x10\xc0\x7f\xf5\xa3\xdf\x85\xaf\x7c\
\xfd\x55\xbc\xf6\xd6\x0e\xaa\xf5\x35\xd8\xf6\x54\xc5\xf9\x07\x07\
\xef\xc4\x13\x77\x7d\x01\x1f\x59\xdb\xc5\x53\xaf\xae\xa1\xd7\x1f\
\xe0\xf0\xe8\x08\xcd\x46\x03\x96\x65\xa2\xd1\x79\x0e\x9b\xfd\xa7\
\x70\xa9\xfb\x65\xac\x4c\x42\x35\xee\xcb\xde\x3d\xf8\x74\xef\x3b\
\xf1\x6f\x3b\x8f\xa1\x3f\x0e\xd9\x4f\xcf\x1b\x29\x43\x6f\x44\xea\
\xac\x67\xdc\x0d\xfc\xdd\xee\x13\xf8\x3b\x97\x3f\x83\xbf\xb6\xf1\
\x47\xf8\x84\xfd\x45\xfc\xf3\x5b\x1f\xc2\xc4\x75\xc3\xef\xcc\x30\
\x60\x9a\x56\xa8\x1a\x33\x0c\xc5\xda\xa4\x49\xd6\xa0\x9d\xa4\x12\
\x51\x2b\x2b\xd9\xea\x46\xf5\x7d\x46\xf7\x25\x80\x20\x5a\xcc\xe0\
\xf9\x3e\x3c\x6f\x12\xfd\xf5\x43\x90\x2f\x42\xf0\x1b\xba\xdb\x30\
\xb1\x3c\x78\x19\xef\x7b\xfd\x1f\xc3\x85\x8d\x9f\xed\xfc\x18\x3e\
\x77\x78\x1f\x86\x91\xad\xe0\xc4\xf3\x20\x83\x87\x20\x25\x20\x20\
\x51\xb3\x3c\xdc\x5b\xdb\xc5\x25\xe7\x08\x6d\x7b\x88\x25\x6b\x84\
\x25\x6b\x88\x25\x73\x84\x96\x39\x42\xd3\x1c\xe1\xba\xb3\x8d\xc7\
\xad\x2f\xe2\xc3\xc1\x17\xf1\x52\xf7\x22\x2e\x58\x3d\x2c\x1b\xf1\
\x49\x95\x84\xc0\x44\x5a\x10\x90\xb8\x22\x5e\xc3\xc3\xfe\x57\x10\
\x4c\x3e\x83\xa7\x8e\xee\xc1\xe7\xe5\x87\xf0\x46\xe5\x9e\x90\x75\
\x6c\x35\xd0\xac\x37\xd0\x68\xd4\xa3\xed\x90\xac\xdc\x0e\x79\x1e\
\x16\xab\xec\xb7\x9e\xf6\xde\x92\xc0\xc2\xb7\x9a\x5a\x70\x1e\xc9\
\x62\xaf\x6e\x77\x00\xc1\x85\xc6\xa8\xa4\x36\xa1\xda\x75\x10\x0f\
\x93\x36\x9e\xa7\x11\x28\xb7\x5b\x9b\x2b\xaa\x95\x03\x92\xbf\xdd\
\x45\x94\x57\x01\xac\x22\x9d\x4b\xd6\x4b\x2c\x22\x3a\xe5\xa8\x77\
\xfa\x49\x08\x7a\x32\x71\xf1\xee\x97\x7e\x1e\x8e\x0c\x8d\xd5\xfd\
\xea\x0a\x6e\xfd\x85\x9f\x43\x60\xd5\x11\x04\x01\xbe\xfc\xc5\xaf\
\x15\x06\x57\x3a\xd0\x4a\x63\xb5\xb8\x2d\x16\x35\xb8\x20\x08\x66\
\xc0\x15\x5d\xdf\xdb\x3e\x80\x6d\x5b\xa8\xd6\x2a\xe8\x3c\xf4\x43\
\x70\x0e\x5f\xc4\xd2\xf3\xff\x02\x00\xf0\xfd\xeb\xcf\xe3\x7f\xfe\
\xe6\x37\xd0\x6a\xb5\x50\xad\x56\xd1\x6c\x36\x8f\x01\xb0\x42\xc4\
\x3c\x16\xe1\xa0\x5f\x13\x63\xa5\x0e\x91\x52\x2a\x37\x01\xbd\xfe\
\xd9\xaa\x09\xb7\x77\x43\xa7\xa7\xa6\x19\x2e\x06\x08\x45\xe0\x52\
\x04\xb0\x1e\x68\x0d\xf0\xf1\x8d\x5d\x6c\xb9\x4d\x1c\xf9\x0e\x7a\
\xfd\x3e\x0e\x8f\x3a\x70\x2a\x0e\xbc\xc9\x04\x8e\x53\x89\xea\x3f\
\x5c\xcd\x67\x98\x21\x0b\x66\x98\x06\x4c\x31\x55\x13\x09\x08\xf8\
\x41\x80\xf1\x78\x84\xc6\xee\x53\x00\x80\x67\x86\xd7\xe1\xba\x3e\
\x3c\x5f\x42\x4a\x03\x9e\x37\x86\xef\x4f\xf0\xbd\xff\xc1\xfb\x71\
\xff\xf5\x8b\xb9\x79\x77\x1c\x0b\x3f\xf6\xc4\x27\xf0\x3f\xfc\xc3\
\x5f\x85\x3b\xee\xc2\x71\x9a\x2a\xff\x5f\xeb\xdf\x03\x57\x9a\xb8\
\xa7\x31\xc0\xc4\xf3\xe0\x8e\x06\xb8\xc7\x7b\x0e\x7f\xbe\xff\x79\
\x3c\x3c\x79\x03\x2d\x74\x01\x00\xae\x74\xf0\xb9\xf1\x9f\xc7\x6f\
\x76\x3e\x8e\xa7\x7a\x57\x31\xf1\x26\xf0\xfc\x09\x7c\xcf\x87\x1f\
\xad\xec\x0c\x55\x9b\x61\xbc\xf4\xbf\x27\x81\x9f\x7d\xe3\xbb\xf1\
\x91\xe5\x67\xf0\xf1\xd5\x37\xf1\x4b\x6f\xdc\x8b\xed\x08\x5c\x39\
\xb6\x8d\xaa\x53\x81\x63\x5b\xb0\x2d\x53\xed\x89\xc8\x85\x33\x4c\
\x02\xf1\x4e\x97\xfe\x0a\x21\x62\x7e\xb8\x82\x68\xe2\xe0\xfb\x7e\
\xb8\x48\xc2\xf7\x63\x60\x2b\x88\x00\x90\x1f\x04\x90\xfe\x04\xcd\
\xc1\x9b\x58\xe9\x3f\x8b\xf5\xc1\x0b\xb8\x30\x7e\x19\x56\x30\x46\
\x00\x81\x11\x6a\x78\xd2\xfa\x00\x9e\xb2\xde\x8f\xc0\xaa\xc3\x32\
\x2d\x7c\x5b\xf7\x53\x30\xe4\x04\xff\xf0\xf0\x27\xf0\x47\xfb\xf7\
\x61\x30\x1a\xc0\x75\xc7\x11\x20\xf3\xa1\xb6\x54\x02\xe0\x7a\x02\
\x5f\x1d\xad\xe3\x6b\x62\x3d\x02\xe5\x92\xd9\x4e\x85\x3f\x4b\x04\
\xf8\x68\xfb\x05\xfc\x95\x0b\x5f\xc6\x63\xcd\xd7\xd0\xf1\x6b\xf8\
\xbd\xce\xc3\xf8\x62\xff\x41\x7c\xa5\x7f\x1d\x87\x93\x2a\xc6\x7e\
\xc8\x8e\x42\x06\xb8\x52\xd9\xc7\xa3\x8d\x37\xf0\x7d\xeb\x5f\xc3\
\xa3\xb5\x97\xf0\x1e\xf9\x0a\xfe\xc9\xce\xc7\xf1\xfa\xe1\x83\x58\
\x5e\x5a\xc2\x4a\xbb\x8d\x15\xdf\xc3\x72\xb3\x05\x51\xab\xc2\x8a\
\x40\x56\x19\x16\x6b\x9e\xfb\x45\x45\x8f\x27\x8b\x7d\xf8\x56\x93\
\x22\xe5\xd6\x99\xef\xa2\x71\xcd\x0b\x8e\xcf\x83\xe8\xe3\x73\xdc\
\xce\xec\xf6\x04\x4a\xf3\x4a\x59\x96\x93\x9e\x59\x28\xc0\xa2\x08\
\x8a\xa0\x3d\x0e\xc2\x54\x67\xce\x9e\x2b\x33\x03\xd4\x01\x55\x12\
\x78\xf3\xfd\x00\xad\xad\x3f\xc1\xfa\xf8\xe5\xe8\x21\x03\x5b\x1f\
\xfd\x69\xe5\x3c\xf4\xa9\xaf\x3d\x8d\xa3\xc3\xa3\xdc\x7c\x53\xde\
\xa9\xf3\xcc\x03\x59\x5c\x55\x48\x2f\x80\x54\x83\x94\x57\x52\x17\
\x9a\xa6\x09\xdf\xf7\x71\xf3\xcd\x2d\xdc\x7d\xcf\x25\x58\x96\x85\
\xbd\x0f\xfc\xb7\xa8\xbf\xf1\x87\xb0\x06\xdb\x68\x3b\x3e\x3e\x1c\
\x7c\x01\x4f\xbf\x7e\x19\xab\xab\x2b\xa8\x56\xab\x70\x1c\x87\x95\
\x33\x19\x39\xeb\xf5\x36\xfd\x01\x63\x51\x05\x00\x34\x8d\x51\x4c\
\x95\x23\x22\xc3\xec\xee\x19\x03\x2c\x2b\x72\xb5\x20\xc9\xed\x01\
\x00\x20\x74\x52\x0a\x00\x1f\xdb\xd8\xc7\xc7\x36\xf6\x55\xf8\x8e\
\x5f\xc1\x51\xd0\x84\xbf\x53\x85\xbf\x5f\x85\x67\x54\xe0\x0b\x07\
\x9e\x70\xe0\x1b\x36\x46\xa2\x81\x2d\xfb\x3a\xb6\x2a\xf7\x40\x38\
\x75\x58\x96\x0d\xc7\x36\xb1\x36\x7a\x0d\x0d\x77\x1b\xad\xf1\x1e\
\x2e\xf5\x43\x80\xf5\x54\xef\x6e\x78\x13\x1f\xa1\xa6\x53\xc0\xf3\
\x42\xf0\xfd\xee\x07\x2f\x17\xce\x3f\x85\x9d\xb8\x43\xf0\x6d\x1d\
\x24\x0c\x6c\xbb\x6d\xdc\x55\xed\xe1\x89\xbb\x5f\xc7\xf7\x5d\xd9\
\xc6\xba\x13\xc6\xbf\xe7\xb7\xf1\xdb\xc3\x8f\xe1\xcf\x86\x8f\xe0\
\xcb\xfd\x87\xd0\xf7\x4c\x78\x9e\x07\xdf\x1f\x29\x6f\xf1\x81\x24\
\xbf\x57\xac\xd3\x63\x5e\xfb\x04\x80\x40\x00\xff\xdf\xce\xb7\xe3\
\xbf\xb9\xf2\x1b\xf8\x70\xeb\x4d\xfc\xfe\x91\x0d\xdb\x36\x51\xab\
\x55\xd1\x68\xd4\x51\xab\x57\x61\xdb\x36\x20\x84\x72\x70\x0a\x20\
\xc6\x3a\xc9\x20\x80\x1f\x52\x84\x21\xe7\x4b\xdf\x16\x10\x32\x61\
\xca\x66\x29\x50\x9b\x5f\xd7\x0e\x9f\x47\x65\xb4\x07\xe9\xfd\xff\
\xec\xbd\x77\x9c\x24\x57\x79\xef\xfd\x3d\x15\x3b\xf7\xe4\x99\xcd\
\x59\x2b\xad\x12\x92\x10\x12\x08\x2c\xa2\xc1\x24\x5f\x6c\x92\xc1\
\x38\x5d\x6c\x1c\xef\xc5\x17\x9b\xfb\xe2\x6b\x1b\xfc\x3a\x5c\x83\
\xfd\x1a\xfc\xfa\xda\xbe\xc6\x81\x60\x8c\x09\x0e\xe4\x0c\xb2\x90\
\x84\x90\x90\x40\x12\x4a\xbb\xab\x95\xb4\xbb\xb3\x93\x53\xe7\x50\
\xe1\xdc\x3f\x4e\x55\x75\x75\x4f\xcf\x4c\xf7\xec\xec\xb2\xcb\xe5\
\xf9\x7c\x7a\xba\xa7\xba\xea\xd4\xa9\x53\xd5\x75\x7e\xf5\x7b\x7e\
\xcf\xf3\x34\x91\x6e\x13\xfc\x26\x86\x5f\xc7\xf6\x2b\x24\xfd\x12\
\x43\xee\x0c\x43\xde\x1c\x3a\x6e\xd4\xdf\x25\x7f\x90\x69\x6f\x1c\
\x4d\x7a\xec\x30\x67\x78\x8e\xf3\x05\x9e\xde\xfc\x1a\xff\x54\x79\
\x0e\xd3\x6c\x63\x3c\x73\x9a\x6f\xd5\xae\xe4\x3f\x16\xf6\x53\x6f\
\xd4\x68\x34\x9c\x20\x9d\x47\xe8\xe6\x8d\x29\xb2\xda\xae\x79\x5f\
\x31\x94\x5e\xc0\xf0\xa1\x00\x56\x53\x4a\x3e\x37\x7b\x90\x2f\xcc\
\x1d\x62\xd4\x2e\xb3\xd4\x4c\x2b\x77\xa4\x08\x9b\x68\x46\xac\xa0\
\x94\x3e\x47\x6b\x69\x8e\x2e\x1f\xe6\x63\x67\x0e\xf3\xec\xa1\x27\
\xf8\xe3\x83\x9f\xe5\x97\x87\x6e\xe1\x0f\x4f\x3b\x4c\x55\xf6\xd2\
\x68\x34\xd4\x83\x93\xd0\x10\x9a\x46\x2a\x36\x9e\x9b\x11\xbe\x47\
\xe7\x71\x03\x46\xbe\x73\xbb\xcd\xba\x90\xfa\x01\x57\x6b\xad\x7b\
\x36\x0f\xce\xdd\xc6\xaa\xf3\xc1\xb9\x9b\x85\xf7\xd2\x6e\x32\x8c\
\x5e\xc1\xcd\x56\x08\x98\xd7\xda\x57\x3f\xda\xa3\x6e\xe7\xb1\x17\
\x57\x5b\xbf\xd6\x2b\x58\x58\x6b\x3b\x29\x25\xfa\x3a\xdf\x87\x6d\
\xac\x37\x66\xbd\xba\xa5\xb7\x02\xbc\x9d\x8f\x07\x87\x5e\x49\x9e\
\x6e\x84\x50\xb8\x3e\x5d\x70\x4c\xfc\xfd\x9c\x14\x7b\xde\x0a\x93\
\x52\xe2\xba\x0e\x3b\xe6\xbe\x14\x2d\x2b\x1d\x78\x39\xf5\xf1\x6b\
\x01\x38\x75\x72\x92\xa9\xc9\xe9\x0d\xdb\x69\xb9\x94\xda\x81\x56\
\x37\xb0\xb5\x16\x8b\x15\xb2\x57\x61\xbf\x42\x70\x15\x6f\xcb\x75\
\x5d\xce\x9c\x9a\x61\xcf\xfe\x9d\x48\xdd\x66\xf9\x29\xbf\xc4\xe8\
\x37\x7e\x0f\x80\x57\xee\x9a\xe1\x8e\xc7\x1e\x61\x66\x62\x82\x5c\
\x2e\xd7\x96\xef\xa9\x2f\x0b\x9e\xe4\x3d\x3d\x0d\x40\x46\xaf\xaf\
\x3a\xc1\x9a\xa6\x51\xf9\x1e\x03\xac\xd1\x91\x1c\x10\x82\xef\x16\
\xc0\xfa\xcc\xc2\x11\xee\x29\xed\x66\x4f\x62\x85\xdd\xc9\x15\xf6\
\x24\x57\xd8\x93\x2c\xb0\x2b\xb1\xcc\x36\xbb\x88\x2d\x56\x30\xa4\
\x07\x5e\x97\x46\xeb\x50\x29\x26\xf8\x86\x77\x1d\x43\x46\x85\x4b\
\x39\x4e\x9a\x76\xf7\x90\x8f\xc6\x7d\x85\xed\x4a\x47\x26\x05\x08\
\x1d\xcf\x51\x00\x68\xd7\x8e\xe1\x9e\xfb\x3f\x32\x94\x25\x61\x9b\
\x78\x6e\x3d\x00\xad\xa1\x18\x0c\x96\xdd\x34\x57\xa6\x17\x79\xe3\
\xfe\xd3\x14\xdc\x14\x1f\x9e\x7f\x0e\x5f\x29\x5e\xcf\x89\xe6\x5e\
\x84\x88\xe9\x93\x7c\x37\xc8\x27\xa6\xa8\xaa\xd0\xd9\xe6\xbb\x4d\
\x4a\xc5\x29\x2a\xe5\x19\x7c\xdf\x45\xd3\x0c\x32\xb9\x9d\xe4\xf2\
\xbb\xa2\xfd\x3f\x56\x53\x0f\x10\x49\xd1\xa4\x5e\x6f\x50\x2e\x57\
\x29\x14\x4b\x14\x4b\xc5\x40\xef\x65\xa1\x09\x81\x17\xe6\x0c\x03\
\xbc\xe0\xba\xf4\x5d\x2f\x72\xdf\x85\xb9\xc9\x42\x37\xb2\xae\x05\
\xd7\xb7\xae\x83\x80\x7c\xe1\x01\x9e\x72\xea\xfd\xe4\x1b\xa7\x37\
\x1c\x93\xaa\x4c\x72\xd4\xd9\xc7\xe3\xcd\x5d\x3c\x5c\xdf\xc7\x03\
\xd5\x03\x4c\xd5\x73\x81\xab\xd3\x23\xad\x55\x79\xd9\xe0\x37\xf9\
\xd9\xd1\x2f\xf1\x86\xd4\x57\xb8\xab\xb4\x1d\x81\x72\xab\x56\xaa\
\xf5\x00\x6c\x4a\xc5\x60\x39\x35\x74\xc3\xc6\x30\x4c\x40\x0b\x30\
\x54\x8b\xcd\x6a\xcf\x8c\xac\x9e\xbc\xc3\x5a\xec\x52\x4a\x7c\x24\
\x33\xd5\x14\x08\xa9\x20\x9a\xf4\x63\xdb\x04\x37\x42\x29\xdb\xda\
\xfc\xca\xfc\x1e\xfe\x9b\xfb\x62\xfe\xff\x23\x9f\xe1\x55\x43\xf7\
\xf3\xbb\x4f\x64\x71\x5d\x0f\x81\x72\x69\x1a\xba\x86\x19\x44\x69\
\x6e\xea\xb7\xf9\x7d\x6c\x5b\xa1\xf7\xea\x74\x3d\x75\x63\xe0\x2e\
\x34\x56\xe5\x7c\x68\xa7\x2e\x06\xfb\x7e\x65\xbc\xb6\xfa\xdc\x75\
\x6b\xcf\xd8\xcc\xe0\xf5\x82\x7a\xcf\xd6\x7c\xdf\x87\xd2\x14\x3b\
\x1a\x8f\x44\xcb\x0a\x97\xbe\x16\x80\xd9\x99\x39\xee\xff\xce\x77\
\xd1\x37\x28\xa2\x19\xf6\x6f\xad\x57\x1c\x68\x75\x82\xad\x90\xc9\
\x12\x42\xd5\x71\x0b\xdf\x3b\xc1\x55\xbc\xbd\x5a\xb5\x4e\xb1\x50\
\x22\x97\xcf\x52\x3a\xf0\x72\xf2\x0f\xfd\x23\x56\xe1\x71\x12\x86\
\xe4\xc5\xe9\x6f\x73\xeb\xa9\x03\x8c\x8e\x8d\xf6\x9c\xe5\xbd\x9b\
\x49\x29\x69\xea\xca\x45\x98\xd6\xea\xd1\xd3\x7b\x58\xb2\x40\x08\
\xb1\x69\x06\xeb\xf7\xde\xfd\xef\x2c\x17\xca\xb8\xae\xd2\xd8\x38\
\x81\x10\xde\xb6\x4c\x52\x49\x8b\x54\xd2\x26\x95\xb4\x48\xa7\xec\
\xe8\x73\x2a\x69\x93\x4a\x58\xd1\xe7\x64\xc2\xc2\x75\x03\x11\xbe\
\xef\x07\x0c\x96\x88\x1c\x61\xb3\x8d\x3c\xb3\x8d\x3c\x77\x17\xf7\
\x06\xe3\x16\x8e\xb9\x8a\x06\x33\x0d\x41\x42\x73\x49\x69\x2e\x09\
\xdd\x21\xad\x39\x0c\x59\x65\xae\x4d\x9d\xe0\x3f\x0d\xdd\xc9\x0b\
\x8c\x3b\x00\x58\xf6\x72\x7c\xbd\x7a\x13\x0f\xd5\x0f\xb0\xe8\x66\
\x58\x68\xa4\x98\xad\xa7\x58\xae\x1b\xf8\x9e\x2a\x87\x21\x00\x23\
\xd0\x50\x9d\x3e\xb3\xc8\xd5\x97\xed\xee\x69\x1c\xe6\x17\x4b\xd4\
\x1b\x0e\xc9\x54\x5e\x31\x58\xb1\x31\x1e\x32\x14\xa8\xfb\xca\xf2\
\x53\x78\xc7\xa9\xd7\xe3\x48\x95\x9e\x41\x08\x97\x70\xc5\xd6\x53\
\x0c\x01\x43\x25\x68\xd4\x57\x28\x15\x27\xa9\x55\x55\x9a\x88\xd1\
\xe1\x1c\x86\xae\x31\x3d\xb7\x82\x69\x26\xdb\x0a\xc2\xda\xba\x42\
\x13\x9e\x94\x41\xde\xa8\xba\xca\x97\xb5\x52\x22\x93\x2a\xa0\x1b\
\x3a\xcd\xa6\x83\x61\xe8\x01\xf1\x23\x91\xcd\x2a\xf9\xca\x31\x46\
\x4b\x8f\x30\x5c\x3d\x8e\xe5\x97\xd1\x7c\x87\x92\xc8\x73\xd4\xbc\
\x8a\x13\xe6\xe5\xf8\x46\x06\xdb\xb2\x30\x4d\x83\x1b\x57\x3e\xc6\
\xe1\xd2\xad\xf8\xe8\x7c\xdb\xb9\x8e\xa3\x8d\x7d\xcc\x35\x73\x34\
\x3c\x83\x86\xaf\x51\xf7\x75\x6a\x9e\x45\xd9\x4b\x52\xf0\x52\xcc\
\x35\x07\xf0\x51\x3a\x40\xdf\x57\x60\x4e\xfa\x8d\x20\x29\x2a\x34\
\x30\x78\x7f\xed\x26\x1e\x2a\x8d\xf3\xe7\x07\xde\xc7\xb3\xf2\x0a\
\xb4\xdd\x53\xd8\x89\xe3\xba\x81\x18\x1e\x9a\xcd\x0a\xc5\x65\xf5\
\x9d\x10\x22\x00\x5a\x09\x0c\xc3\xc6\x30\x6d\x84\x30\x10\x9a\x16\
\xb0\x4a\x3a\x31\xcf\x46\xbc\x4e\x00\xe1\x00\xfb\xe1\x32\x5f\x46\
\xe3\x1f\x34\x1e\x63\xc5\x14\xe8\xba\x75\x69\x2f\x77\x2e\xef\xe2\
\xa6\xc1\x53\xe4\xbc\x05\x96\x57\x84\xd2\xfc\xd9\x76\x24\x7c\xd7\
\x63\x5a\xac\xef\xa7\x49\x65\xa3\xfb\x74\xb7\x63\x5d\x4f\xbf\xb4\
\x99\xfd\x5e\x8c\xda\xb1\x7e\x99\xb4\x8b\xe9\xd8\x36\xb2\xf5\xf4\
\x5a\xdf\x0f\xd6\x0b\x43\xd9\xab\x50\x7e\x2d\x6d\x5f\xdf\x0c\x56\
\xbf\x94\xf8\x66\x2c\x74\xc9\x4d\xcc\x7d\x39\x72\x22\x34\x46\xaf\
\x8c\x12\x89\xfe\xcd\x5f\xff\x2d\x43\x83\xc3\xec\xdf\xbf\x7f\xbd\
\x66\x7a\xb6\xb5\xc0\x57\x08\xb4\x9c\xa0\xbc\x4a\x27\x28\x8a\xaf\
\x1f\xda\xcc\x99\x39\xb2\xb9\x0c\x42\x68\x2c\x5d\xfb\x5f\x98\xb8\
\xe5\xcd\x00\xbc\x70\xfb\x32\x1f\x7d\xe8\x71\x66\x77\xee\x64\x20\
\x9f\xef\x99\xc5\x6a\x03\xb3\xc1\x3e\xa5\x6e\xe1\x62\x92\xd6\xea\
\xd1\x9c\x12\x5f\x6b\xb3\x00\xeb\xee\xfb\x4e\xb0\x5c\xa8\xb4\x8e\
\x4d\x7d\xe8\xe9\x42\xec\xda\x77\xdf\x8b\x25\xed\x54\x6d\xb5\x34\
\x47\xe1\x67\x81\xef\x83\x94\x1e\x9e\x90\x38\xae\xa0\x26\x34\x56\
\xb0\x81\x44\xb0\xdd\x30\x5f\x17\xfb\x78\xff\xf4\x33\x78\xd9\xf0\
\x77\xf8\x6e\x75\x2f\x0f\xd7\xf6\xa2\x72\x9f\x85\xac\xa2\x6c\xb1\
\x47\x84\xbe\x75\x30\xed\x2c\x00\x0f\x1d\x3b\xc3\x4b\x9f\x7f\x4d\
\x4f\xfd\x7e\xf0\xa8\x02\x00\xb6\x9d\x55\x93\x7c\xb0\x5c\x43\x32\
\x66\xad\xf0\x6f\x0b\x37\xf1\xae\xc9\x57\x05\x95\xaa\xc2\x4c\xeb\
\x91\x9f\x2a\xf6\xd9\xa7\x5c\x9a\xa1\x54\x9c\xa4\xd9\x2c\x03\x70\
\xf5\x91\xdd\xbc\xfa\xa5\x37\xf0\x43\x37\x5c\xca\x1f\xff\xd5\xa7\
\xf9\xec\x57\xef\xc3\x4e\xe4\xdb\x5c\x91\x19\xbd\x09\x40\xcd\xd5\
\x49\x69\x4d\x2e\x4d\x56\xc8\x6b\x25\x86\xeb\xcb\x0c\x2e\x9e\x24\
\x57\xb7\x49\xeb\x1e\x69\xca\x0c\x3b\x67\x18\x76\xcf\x90\xf7\x16\
\x09\xaf\x02\x0f\x9d\xaa\x9f\xa2\x29\x4d\x76\xeb\xc7\xd9\xe3\x1e\
\xa3\x54\xf9\x2c\xff\x54\x7f\x21\x8f\xeb\xfb\x79\x81\x7d\x0f\x87\
\xf9\x3a\x27\xdc\x03\xfc\xc5\xca\x9b\x38\x5a\x99\xc0\x71\x9a\x41\
\xfd\xca\x30\x5b\xba\x1f\x8d\xad\x6a\xd7\x8d\x3e\x87\xae\xea\xd0\
\x2d\x89\x6c\x15\x8b\xb8\x6b\xe5\x20\x7f\x3f\xfd\x5c\x7e\x71\xfb\
\x97\x01\x58\x6c\xa6\xf0\xbd\xe0\x57\x2c\x54\x64\x21\xc0\xd3\xaf\
\x3d\x48\xb9\xda\xe0\xf1\x53\x73\x54\xaa\x2b\x6b\x9e\x0b\xf5\x5b\
\xd4\x41\x68\x58\x56\x9a\x4c\x7e\x02\x11\x31\x82\xaa\x3f\xcd\x46\
\x15\xdf\x73\x82\xca\x05\x2e\xbe\xef\xa1\xe9\x06\x86\x61\x61\x9a\
\x89\xb6\x9b\xe4\xa7\xe6\x2e\xe3\xa6\xc1\x53\xdc\x98\x9b\xe1\xdf\
\xe7\xd3\xd8\x45\x93\x74\x3a\x45\x2e\x93\x21\x1b\xd4\xc4\x34\x02\
\x69\xc0\xf7\xab\xad\xa5\xe5\xda\x2a\x5d\xd7\x7a\x60\xec\x42\x02\
\x59\x5b\xd9\x87\x0b\xe1\x78\xce\xd6\x2e\x94\xf3\x72\x3e\xed\x6c\
\x8f\x57\x46\x39\x20\xbb\x5b\x5f\x89\x46\xcf\xa7\x5f\xd4\x69\xd4\
\xd9\x5f\xbc\x3d\x5a\x5e\xbc\xe4\x55\x00\xd4\x6a\x35\x6e\xbf\xed\
\x0e\x9e\xf6\xb4\xa7\x6d\x19\xc0\x5a\xaf\x1f\x91\x8b\xa5\x8b\x1f\
\xb6\xdb\xb2\x7a\xbd\xc1\xc2\xfc\x12\xa3\x63\xc3\x54\x77\xdd\x8c\
\x93\xdb\x83\x59\x3c\x89\xa5\x4b\xf6\x78\xc7\x39\x33\x75\x80\x6d\
\xdb\x26\x48\xa5\x52\x01\x38\xdb\x78\x4c\xe3\x1a\x09\x4d\x08\x34\
\xa1\xd1\x10\x76\xa0\xc1\x6a\x2f\x69\xa9\x69\x82\x4a\x75\x6d\xd1\
\xff\x7a\xe6\x7a\x3e\xba\x6e\x30\x38\x38\x1c\x81\x07\x82\x08\x40\
\x10\xed\x13\x6b\xb7\x17\x32\x12\x4e\xe3\xfb\xe8\xba\x15\x31\x58\
\xaa\x85\xd5\x40\x4b\x4a\x95\x4c\x52\x22\x20\x12\x7e\xcb\x76\x32\
\x02\x01\xc2\x67\xd1\x4f\xf2\x81\xa9\x9b\x50\x91\x85\x1e\x08\xbf\
\xc5\x67\x84\xdb\x06\xac\x18\x52\xfd\x78\x2c\x2b\x8d\x6e\x58\x7c\
\xe6\xab\xdf\xe1\xc7\x7e\xe4\xa9\x1c\xda\x37\xb1\xee\x18\xd4\x1b\
\x0e\x7f\xfd\xc1\xaf\x22\x84\x20\x99\x1e\x09\x12\x8e\xaa\xce\x0c\
\x9b\x45\x3e\x32\xff\x1c\xfe\x72\xea\x47\x83\xc3\x50\xcb\xb5\x58\
\x67\x5d\xbf\x4e\xb5\x3c\x4f\xb5\xba\x40\xa3\xbe\x84\xef\xfb\x58\
\x96\xc1\xcb\x9e\x7f\x0d\xaf\x7a\xe9\x0d\x6d\x42\xfb\x47\x8e\x4f\
\xa1\x69\x06\xb6\x95\x6b\xeb\xc3\xa5\xa9\x49\x00\x5e\xb7\x67\x9a\
\xb7\x5c\xfa\x24\x7a\xe7\x35\x52\x6b\xff\xb7\xe4\x67\xb9\xdf\xb9\
\x82\x63\xcd\x03\xdc\x5f\x3b\xc2\x83\xb5\x03\x54\x3d\x03\xe9\x4b\
\x86\xf5\x25\x9e\x9f\xbb\x83\x9f\x1a\xfa\x14\x6f\x4a\x7d\x92\x2f\
\x17\x0e\xf2\x6c\xfb\x38\xb3\xee\x08\xff\xcf\xd4\x6f\xb0\xec\x24\
\x70\x1d\x15\xd5\x18\x66\x4b\x8f\x40\x55\x0c\xc8\x44\x5e\x3c\x00\
\x19\x16\x78\x55\x67\x34\x04\xb4\x6a\x91\xe4\xb3\x8b\x4f\xe5\x4d\
\xdb\xbf\x8c\x44\x50\x74\xd2\xc1\x77\xaa\x4d\x5f\x2a\x80\xf5\xcb\
\x3f\xfd\x02\x0e\xec\x19\x03\x14\x63\xf8\xc4\xe9\x39\x4e\x9d\x59\
\xa4\x50\xaa\x51\xae\xd4\x29\x57\xea\x94\x82\xf7\xc9\xe9\x25\xe6\
\x16\x8b\xe8\xa9\x21\x05\xd8\x85\xd2\x93\x39\x4e\x95\x72\x61\x06\
\xc7\x59\xfb\x81\x22\x9d\x1d\x21\x99\xca\x45\xfb\x2f\xb8\x8a\xd1\
\xf4\x7d\x89\xe3\x38\xd4\xea\x75\x2a\x95\x0a\xd5\x6a\x95\x7a\xa3\
\x49\xda\xf3\xf0\xa5\xa4\xbf\x00\xef\x8b\xc7\x3a\x1f\x10\xd7\x7a\
\x60\xee\xc6\x5c\xf5\xc2\x62\xc5\x01\xd4\x5a\xdb\xad\x37\xa9\x6d\
\x15\xc8\x3b\x5f\xf6\xfd\x06\x48\x3a\x75\x69\x9b\x01\xde\xe7\xeb\
\xdc\x5d\x88\xd7\x48\x27\x3e\xe8\x99\xc1\x5a\x0f\xdd\x6e\xf5\x45\
\xe6\x79\x1e\xb9\xc5\xbb\xc9\x48\x25\x60\xf7\xad\x1c\xe5\xbd\x2f\
\x04\x60\xf2\xd4\x14\xd9\x6c\x96\xe9\xe9\x8d\xf5\x57\xb0\x0e\x18\
\x58\xe3\x15\x77\x01\xc6\xa3\xaa\xc2\xf7\x6e\xdb\x74\xda\xec\xf4\
\x1c\xa3\x63\x4a\xf3\x53\xd9\xfd\x5c\x06\x1e\x7c\x1f\x00\x37\x0c\
\xcc\xf1\x2f\x33\xb3\xac\x14\x0a\x0c\x0f\x0f\x2b\xb1\x72\x0f\xfd\
\x6f\xff\x2c\xd0\x34\x41\x43\x24\x94\x8b\x10\x88\xa3\x11\x21\x34\
\x3c\xcf\xa1\x56\x77\x48\x26\x36\x6e\x3f\x6e\xaa\x2e\x1f\x28\xc8\
\x20\xda\x80\x10\x88\x20\xaa\xab\x7d\x59\xb8\x4e\xab\x1f\x21\x88\
\x6a\x69\xaf\x04\xe0\xb8\x75\xea\xd5\x22\xba\x61\x61\x18\xb6\x7a\
\xd7\x6d\xb5\x5e\x00\x8c\x08\xf8\x4a\x81\x88\x96\x89\xa8\x0f\x01\
\x00\x13\x22\x60\x30\xc2\xff\x43\xf7\xa8\x12\x3b\x47\xdb\xb7\x7c\
\xa7\x0c\x0d\x1f\x66\x7e\xf6\xbb\xbc\xe3\xcf\xfe\x8d\xbf\xfc\xc3\
\x9f\x61\x20\x97\xea\x7a\xfc\xbe\x2f\xf9\xb3\xbf\xfd\x3c\x93\x33\
\x4b\xe4\x07\xf6\x62\xdb\xf9\xd6\x71\x02\x05\x2f\xcf\x5f\x4d\xff\
\x18\x4a\xdb\xd8\x1a\xf3\x7a\x7d\x85\x6a\x65\x8e\x6a\x65\x3e\x62\
\xaa\x84\x80\x4b\x0f\x6e\xe7\xb9\xcf\xb8\x9c\x97\xbd\xe0\x1a\x72\
\x99\x64\xdb\xbe\x1c\xc7\xe3\xc9\xc9\x79\x6c\x7b\xb0\xcd\x0d\x09\
\x70\x79\xea\x49\x00\x26\x92\x0e\x0f\x56\x0f\xf2\x40\xed\x10\x0d\
\xdf\xc6\x17\x06\xbe\x30\x71\xb1\x28\xcb\x34\x25\x3f\xcb\xc9\xe6\
\x76\xe6\x9a\x83\x51\x16\xf3\x56\xaa\x05\x17\x29\x7d\xa6\xc8\xf2\
\x81\xda\x8b\xb8\xb3\x70\x84\x3f\xdb\xf3\x6e\x7e\x38\x7f\x1c\x80\
\x3f\x9d\xf9\x69\xe6\xab\x16\xbe\xef\x28\x57\x6e\xc0\x58\xb5\x8e\
\x57\x41\xd7\xc0\xf1\x1c\x60\x6c\x09\x12\x1c\xb7\x4a\xa3\x51\xa0\
\xd1\x28\xd2\xa8\x17\xd0\x84\xce\xd8\xb6\xa7\x80\x50\x20\x7b\xba\
\x39\xcc\x7b\x26\x5f\x86\x2d\x1a\xf8\xe8\xaa\x1d\xa1\x5a\xf3\x7d\
\x05\xb0\xe2\xe7\x60\x74\x38\xcb\xe8\x70\x96\xa7\x3d\xe5\x40\xd7\
\xf3\xf2\x7b\xef\xfe\x37\xbe\x78\xeb\x77\x03\xa6\x4f\xc3\xf7\x1d\
\xca\xc5\x59\x6a\xd5\x65\x84\x80\x97\x3c\xef\x29\xdc\xf4\xd4\x4b\
\x18\xcc\xa7\x19\xcc\xa7\x49\xa7\x6c\xfe\xea\x83\x5f\xe1\xf3\xb7\
\xdc\x8f\x69\x26\xa3\xeb\x41\x22\x49\xe9\x4a\xa4\x5f\x71\xb5\x28\
\x72\xb2\xd1\x68\x50\x6f\x34\x69\x36\x1d\x95\x57\xce\x97\x48\x6d\
\xf5\xef\xba\x53\xc0\x7a\xb1\x4d\xae\x9d\x22\xec\x6e\x02\xdf\xb5\
\x80\x55\xe7\xfa\xbd\xee\x6f\xbd\xb1\xda\x08\xdc\x9d\x6b\xdb\xe8\
\xfc\x6d\x46\xd0\x7d\x21\x4e\xfa\x9b\xb1\xcd\xba\x07\xcf\x17\x0b\
\xb6\x55\xe3\x7c\xd6\x7d\x0d\x1c\x16\x9d\xfd\x89\x44\xee\xfd\xdc\
\x2c\xba\xad\xbb\xd5\x83\xe9\x07\x91\x4d\x87\x96\xfe\x23\x5a\x56\
\x3a\xf8\x72\xa4\x6e\x01\x4a\x7f\x35\x3e\x3e\xce\xc9\x93\x27\x7b\
\x6e\x73\x23\x40\xb5\x96\xb6\x2a\xfe\x24\x16\x86\xb2\x47\x61\xec\
\x31\xb0\xd5\x5e\x3c\x59\x52\xab\x36\xa8\x55\x6b\x24\x53\x49\x2a\
\xbb\x9e\x13\x01\xac\x9b\xb7\xd7\x78\xef\x3d\xf3\x2c\x2f\x2d\x53\
\xdf\x5e\x57\x9a\x0f\xbd\x4f\x21\xa5\x00\x4d\x08\x1a\x22\xc9\x88\
\xb6\x12\x4c\x1c\xc1\x57\x31\x77\x65\xb9\x52\xdf\x14\xc0\x22\x8a\
\xfc\x5b\x0d\xa2\x3a\x97\x89\xf8\xff\x1d\x80\x4c\x20\x14\x18\x0a\
\xfe\xf7\x5c\x97\x5a\xb5\x15\x39\x18\xf6\x57\xd7\x2d\x34\xdd\x52\
\x39\xb3\x82\x68\x2e\x4d\xe8\x11\x13\xa5\x34\x5a\x26\xa9\xf4\x68\
\xb4\xaf\x10\x44\x49\xdf\xc7\xf5\xea\xf8\x9e\x83\xe7\x36\xf1\xbc\
\x06\x9a\x6e\x62\x59\x19\x4c\x2b\x13\xb4\x29\x48\xa6\x86\xc8\xe5\
\x77\xf1\xc4\xe9\xd3\xbc\xee\x57\xff\x8a\xdf\x78\xd3\x8b\x79\xce\
\x33\x8e\x10\xbf\x74\x4f\x9c\x9c\xe3\x8f\xfe\xe2\x93\x3c\xf2\xd8\
\x14\x96\x9d\x65\x70\xe8\xa0\xea\x47\x60\x09\xcd\xe1\xe9\xd9\x07\
\x39\x56\xdf\xcd\x54\x73\xa4\x6d\x2c\xa6\xcf\x7c\x0b\x29\x15\x53\
\xf5\xcc\xeb\x2f\xe1\x99\xd7\x1f\xe6\xa6\xeb\x2f\x61\x78\x30\xc3\
\x5a\x36\x3d\xb7\x82\xef\x4b\x2c\x3b\xdb\xa6\xbf\x02\x78\xb8\x76\
\x90\x8f\x2c\xfe\x08\xdf\xa9\x1c\xa6\xe6\x27\xa2\xb1\x22\x60\x30\
\x09\xdd\xb7\x51\xd8\x75\x90\xe8\x93\x16\x48\xf2\xdb\x5c\x95\x92\
\xa3\xd5\xdd\xfc\xe5\xcc\xab\xf8\xad\x1d\xef\x63\xd1\xcd\x73\x77\
\xe1\x30\x3e\x8a\xb1\x42\x42\xa3\x5e\x0a\xf4\x54\x7e\x10\x7d\xe8\
\x23\x7d\x0f\xcf\x77\x15\x08\xf3\x1a\x34\x1b\x25\x9a\xcd\x12\xbe\
\xe7\xb6\xf5\xd7\x30\x93\x2d\x20\x2c\x15\xfb\xf8\xe1\xb9\xe7\x00\
\x12\xa1\xc9\x16\xc5\x88\x44\x06\xdb\xe6\xd7\x00\xb9\x9d\xe6\xfb\
\x92\x6f\xdc\xfb\x18\x86\x61\x63\x9a\x49\x3c\xdf\x65\x79\xf1\x49\
\x5c\xa7\xce\x65\x07\xb7\xf3\x96\x37\xbd\x98\x23\x87\x56\x47\x88\
\x2e\xad\x94\x11\x42\x60\x98\x89\x68\x99\x40\xb2\x27\xa9\xdc\x91\
\x4b\x4d\x33\xf8\x5d\xfb\xb8\x8e\x17\xe4\xe6\x72\x82\x04\xb0\x2e\
\x22\xf8\x9d\x85\x16\xfd\xc6\x08\x0e\x31\x1a\xda\xde\x98\x99\x0b\
\xc5\xd6\xd2\x0c\x6d\x96\xb1\x5a\x6b\x1f\xeb\xb5\xb1\x1e\x73\x76\
\xb1\x59\xbc\xcf\x9d\xcc\xdd\xc5\x68\x1b\xb9\x8d\xcf\x97\xf0\xff\
\x7c\xec\xa7\x57\x46\xb6\xdf\x7e\x9c\x95\x06\xeb\x5c\x9b\x94\x92\
\x66\xb3\xc9\x60\xe3\x54\xb4\xac\xbc\xff\xc5\x00\xd4\x6b\x4a\x44\
\x3e\x31\x31\xc1\xa3\x8f\x3e\xca\xca\xca\x0a\x03\x03\x03\xeb\xb6\
\xd7\x8d\x75\x8a\x03\xa2\xf5\xc0\x55\x18\x4e\x1c\x6e\xa3\x92\x44\
\xba\x41\x44\xd4\xfa\x60\x6b\x71\x61\x89\x9d\xbb\x77\xd0\x18\xbd\
\x02\x2f\x35\x8a\x5e\x9d\x27\x6f\x4b\xf6\x68\x53\x2c\x2e\x2e\x52\
\xa9\x56\xc9\x66\xb3\x3d\x8b\xdd\xc3\x8b\x3d\xf0\xd6\xd1\x14\x09\
\x4c\xe1\x62\x6b\x1e\x15\x11\xb0\x37\x52\x31\x58\xa0\x00\xd6\xe8\
\x70\xb6\xaf\xb1\xf7\x3c\x0f\x34\x55\x0b\x70\x23\x60\x25\xdb\xd8\
\xaa\xd6\x7a\x22\xf6\x7f\xe4\x40\x13\x10\x86\x81\xfd\xd4\x2b\x9f\
\x49\x3e\x9b\x62\x72\x7a\x89\xc9\xe9\x25\x4e\x4f\x2d\x32\xbb\x50\
\x5c\xf7\x42\x4f\xa4\x86\x48\x65\xc6\x22\xf6\x4c\x22\x29\x17\xa7\
\x28\x15\x27\x23\x46\xa4\xd3\xb2\xf9\x9d\x0c\x0e\x1f\x8a\xe0\xde\
\xe0\xf0\x21\x4c\x33\xc5\xf2\xd2\x63\xfc\xf6\x9f\x7c\x9c\x64\xc2\
\xe2\xc0\x9e\x31\x52\x49\x9b\x13\x27\x67\x59\x5c\x56\xcc\x53\x36\
\xb7\x83\x91\x91\xcb\xd0\xf4\x70\x1c\xd4\xf6\x39\xa3\xc4\xef\xec\
\x7a\x3f\x77\x94\xae\xe6\x1d\xa7\xdf\xd4\xb6\x2f\x21\x04\xfb\x77\
\x8f\xf1\x77\x7f\xf2\xf3\xd8\x56\x6f\x3f\xa9\x33\x33\x0a\x6c\x5a\
\x56\x06\x5d\xb4\x03\xac\xf7\xce\xbd\x26\xfa\xac\xc5\x87\x1f\x14\
\x65\x17\x62\x96\x00\x6c\x86\xa8\x4a\xc6\x60\x97\x10\x7a\x4b\xe4\
\x1d\xb8\xd4\xbe\xb0\xf2\x4c\x7e\x64\xe0\x4e\x1e\xaf\x6f\xc7\x97\
\x5a\xb8\x26\x42\xc0\xd4\x99\x6f\xe1\xfb\xed\xc0\xa9\xd3\x34\x4d\
\xb0\x7b\xc7\x08\x87\xf7\x4f\x70\xe5\xa5\xbb\xb8\xea\xb2\xdd\xfc\
\xfe\x9f\x7f\x82\x13\x27\xe7\x03\x0d\x59\xc0\x54\x85\x2e\xc6\x18\
\xe0\x52\xa6\xa2\x2b\xd3\x29\x1b\x43\xef\xcd\x09\xf7\xc0\x23\xa7\
\x28\x95\x6b\xa4\x33\x63\x48\x09\x85\x00\x5c\xfd\xcc\xab\x9e\xc5\
\xcf\xbf\xee\xb9\xac\xf5\xd3\x79\xe4\xf8\x14\xba\x6e\x45\xfd\x52\
\x03\xe3\x73\x45\x66\x16\x80\x47\x8b\x2a\x12\x37\x4c\x9a\x1a\x16\
\xa1\xae\x35\xea\x2a\x2a\xd8\x34\x88\x5f\x92\x5a\xf0\x20\xa3\xc4\
\xf7\xea\x5d\xfd\x76\x63\xec\x0f\xb1\x2b\xe6\x22\x00\x0b\xfd\xba\
\x08\x37\xdb\xf6\x5a\x2e\xc2\xf5\x40\xd6\x85\x02\x52\xfa\x99\x80\
\xbb\xb9\x47\x2f\x46\xdb\x2c\x7b\x75\xb1\xd9\x66\x18\xca\x7e\xda\
\x0c\x5c\x84\xfd\x5c\x08\x6b\x23\xdb\xce\xce\xc4\x2f\xb4\x7e\x3a\
\xe9\x4b\x89\x53\xaf\x92\xa5\x18\x2d\x6b\xe6\xf6\x02\x30\x3b\x3b\
\x0f\xc0\xf8\xb8\xd2\xb1\x9c\x3c\x79\x72\x43\x80\xb5\x11\xa8\x0a\
\xf3\x58\x75\x26\x11\xed\x96\x9a\x21\x04\x59\x71\x36\xab\xd3\x85\
\x18\x82\xad\xf9\xb9\x45\x76\xee\xde\x01\x08\x2a\x3b\x6f\x26\x77\
\xec\x5f\x00\x38\x92\x59\xe2\x9e\x85\x05\xca\xc5\x22\xde\xf0\x10\
\xa6\x91\xe8\x50\x51\x75\x1e\x40\xe8\x02\x0b\x92\x89\x0a\x95\x6c\
\xb3\x19\x24\x1b\xcd\xea\x4d\x56\x62\x9b\x47\xc9\x46\xab\xfd\x0b\
\xdd\x3d\xdf\xc7\xd0\xe2\x0c\x96\x6a\xeb\x37\xf6\xdd\x46\x5a\x77\
\x28\x7b\xb6\x7a\xb9\xea\xbd\xea\x5b\x54\x3d\x8b\x9a\x67\x51\xf3\
\xd5\xab\xea\xd9\xd1\x7b\x84\x06\x69\x25\xb7\x7c\xda\x53\x0e\x70\
\xed\x15\x7b\xdb\xf7\xeb\xf9\xd4\xea\x4d\xea\x0d\x27\x7a\x35\x1d\
\x97\xaf\xdc\xf6\x20\x1f\xf9\xd4\x37\x49\x24\x06\x15\x9b\x85\xa0\
\x51\x2f\xb2\xb2\x7c\x02\xa7\x59\x65\x30\x9f\xe6\x79\xcf\xbc\x9c\
\xb1\xe1\x1c\x63\x23\x39\x46\x86\xb2\x7c\xf9\xeb\x0f\xf2\xc9\x2f\
\xdd\x8b\x65\x65\xd1\xd0\xda\xfa\x90\xcb\xef\x26\x95\x1e\xa3\xb0\
\xfc\x04\x8d\x46\x91\x87\x8e\x4d\x21\xa5\x8f\x69\xa6\x48\x67\x26\
\xc8\xe5\x76\x06\x40\x4e\x6d\xd3\xd2\x8c\xc1\xa2\x37\xcc\x07\x17\
\x5e\xca\x41\x7b\x32\xe8\x4b\xf0\x45\xb0\x8a\x6d\x99\x3d\x83\x2b\
\x80\x33\x33\xcb\xc1\x76\xab\x19\xac\x5e\x2c\x04\x56\x2d\x40\xab\
\xe0\x56\xbd\x51\xa2\x56\x5d\xa0\x5a\x5d\xa4\x5e\x5f\x62\xff\xfe\
\x17\x04\xeb\xab\xf1\xff\xb3\xe9\x9f\x26\xaf\x97\x22\x20\x2e\x82\
\xef\x4c\x2b\x4d\xa3\x5e\xe0\x8d\x3f\xf1\x6c\x4c\x43\xc7\x30\x74\
\x2c\xd3\x20\x97\x4d\x92\xcb\x24\x19\xc8\xa5\xd8\xbb\x6b\x74\xd5\
\x31\x8e\x0c\x66\x38\xfe\xc4\x8c\x6a\x2b\x04\x75\x22\xec\xa1\x6c\
\x51\x3e\x48\x40\xc7\xf7\xdd\x35\x5d\xb4\xdd\xec\x5b\xf7\xab\x1c\
\x78\x76\x62\x80\xc2\xf2\x49\x9a\xcd\x32\x2f\x7f\xc1\xb5\xfc\xc2\
\xeb\x9f\xbb\xe6\x36\xd3\x73\x2b\x14\xcb\x35\x12\x49\xe5\x52\x0c\
\xc1\xbd\x14\x1a\x57\x64\x67\x58\x6a\x9a\xcc\x35\x2c\x34\x4d\x89\
\xf9\x5d\xd7\xa5\x5e\xab\x53\x2e\x95\xc9\xea\x0d\xac\xb2\x4f\x4d\
\xcf\xd0\xd4\x52\xca\x49\x2a\x24\xba\xd0\x10\xba\x86\x46\x50\x16\
\xca\xd0\x31\x74\x13\x4d\x13\x41\x8d\x43\x2d\xc8\x60\xbf\x3a\x10\
\x26\x3a\x67\x6b\xdd\x2b\xbb\x1d\x44\xfc\xe6\x1f\x9e\x67\x68\x03\
\x71\x1b\x59\xb7\x09\x64\xad\x49\xa5\x1b\xb3\xd5\x8d\x79\x5a\xeb\
\x78\xe2\x7d\x6d\x3b\x20\xa9\xae\xaf\x76\x19\xa1\xfa\x5f\x43\x44\
\xd7\x65\x24\x32\x08\xd6\x8b\xd8\xc3\x40\x06\x10\xbd\xc7\xda\x5d\
\xcf\xc2\x88\xea\x0d\x56\xda\xf0\xeb\xbe\x60\x52\xec\x5e\xdd\xb6\
\xef\x7e\x1a\x09\x4f\xb0\x94\xb4\xcd\x0b\x1b\x9d\xf4\xce\x71\x8f\
\x6e\x5d\xbd\xb7\xd1\x09\x0e\x36\x0b\xac\xb6\xc2\xf5\xba\x15\xfb\
\x89\xcf\xe7\xfd\xec\xb3\x73\x1c\xd6\xda\x36\x7a\x80\xa0\xfd\xb7\
\x1a\x7e\x27\x00\x43\x86\x09\x66\x36\x18\x7d\x21\xda\x9f\x38\x7b\
\x41\xf6\xfd\xa2\x79\x29\x25\xbe\xe7\x63\xd4\x66\xa3\x4e\x7b\x89\
\x21\xa4\xa1\xc0\xc4\xe2\x82\x7a\xea\x1f\x1f\x1f\x47\x37\x0c\x8e\
\x1f\x3f\xce\xd5\x57\x5f\xbd\x71\x9b\xeb\x80\x2a\xd7\x75\xbb\xde\
\x38\xc2\xef\x43\xeb\x04\x58\x9d\x40\x2b\x0e\xb2\x3c\xcf\xa3\xb0\
\x52\x8c\xf6\xe5\x0c\xb4\xb4\x25\xc3\x66\x9d\xe5\xa5\x25\x2a\xe5\
\x32\x9e\xeb\x22\x64\xa7\x4c\x7d\xfd\x31\xd5\x50\x2e\xb4\xa6\x16\
\x00\x2c\xb3\x09\x58\xb1\xf1\x6e\x31\x58\xfd\x98\x2f\x83\x68\x08\
\x21\x88\xe7\xae\x42\x08\x7e\x78\xe4\x38\xdb\xed\xe2\x3a\x5b\xaf\
\xb6\xe7\xdc\xfb\x16\x96\x9c\x74\xcb\x95\x18\x5c\x67\xa9\x84\xb5\
\x6a\x5d\x5d\xd7\xc8\xa4\x13\x64\xd2\x89\xb6\xe5\xff\xfc\x89\x3b\
\x01\x48\x24\x15\xc0\x2a\x17\xa7\x58\x59\x7a\x1c\x21\xe0\x15\x2f\
\x7a\x2a\xbf\xf4\x86\xe7\xad\xda\xe6\xd6\x6f\x3e\x0a\x80\x65\xe7\
\x08\x73\x58\xb5\xce\xad\x12\xbd\x8f\x8e\x5f\x09\x84\xd7\xb0\x8f\
\xa6\x99\x08\x04\x9e\xdb\xa0\x5e\x5d\xa2\xd1\x28\xd2\x6c\x94\xc8\
\xe7\x77\x93\x4a\x8d\x44\x43\xf1\xf1\xc5\x17\xf3\xfa\x91\xcf\x44\
\x80\x28\x02\x59\xb1\x89\xa2\x57\x9b\x5b\x50\xe3\x69\xdb\xd9\x36\
\x57\x64\xa7\x79\x5e\x13\xcf\x77\x20\x64\x60\xf1\x83\x6b\x5a\xb9\
\x45\x1d\xb7\x46\xbd\xbe\x42\xbd\x5e\xa0\xd1\x28\x74\x65\xa1\x34\
\x4d\x8f\x00\xd9\xa4\xb3\x9d\xd3\x0e\x44\x97\xb6\x54\xba\x29\xcb\
\xca\xd0\xa8\x17\x78\xc9\xf3\xae\x61\x7c\x24\xb7\xaa\x8d\xb5\x6c\
\x68\x40\xb9\x41\xa5\xe7\xa2\x1b\x09\x64\x34\x93\xca\x08\x18\xa8\
\x65\xea\xb3\xef\x3b\x0c\xe4\x7a\xcf\x49\x76\xf2\x8c\x2a\xde\xde\
\x68\x14\xa9\xd7\x96\x79\xfa\xb5\x07\xf9\xcd\x5f\x7c\xc9\xba\xdb\
\x1c\x3d\xa1\xf4\x99\x86\x95\x82\xc8\xe5\x0d\xa3\x46\x89\x71\xab\
\xc4\x9d\x0b\x79\x2e\xc9\x56\xb8\x76\xb0\xc4\xb5\xc3\x65\x76\xa4\
\x9a\x0c\x59\x0e\x59\xd1\x40\x2b\xc4\x6e\xae\x08\x6a\x24\xa8\x92\
\xa4\x4a\x9a\x29\xb1\x9d\xd3\xfa\x3e\xa6\xcc\xfd\x60\x64\xb0\x6c\
\x1b\x43\xd7\xb1\x6d\x0b\xdb\xb6\x30\x0d\x53\x95\xdc\x32\x8d\xb6\
\x72\x46\x1b\x4e\x56\x72\xf5\x0d\x7a\xd5\xe7\xc0\x02\xac\xd1\xa5\
\x09\xb9\xe1\xe7\x8d\x34\xb4\x9b\x75\x97\xac\xda\x2e\x9a\x78\x5a\
\x13\x4d\xdb\x3a\x21\xb1\x4a\x07\x00\x08\x5c\xc9\x6d\xcb\x03\x12\
\x34\x7c\x50\x8a\x74\x70\x1b\xfc\xde\x7a\xb9\xa7\xf6\xfb\x9b\x5d\
\xa3\x91\x0d\xf7\xdd\xf7\x7e\xe4\xaa\x0f\xbd\x1d\x4f\x70\x8f\x8d\
\x02\x4e\xd4\x86\xab\x9b\x3d\x0b\xdb\x0a\x97\xda\x56\xec\xa7\x17\
\xd3\x82\x6a\x17\xdd\xb4\x93\xbd\x6a\xe7\x36\x4a\xc0\xae\xee\x73\
\xb1\x75\xc2\x76\x82\xf7\x0b\xd0\x45\xe8\x63\xd7\x67\xa2\xff\xdd\
\x6c\x4b\x5f\x51\xaf\x29\xd0\x60\x59\x16\xbb\x76\xee\xa4\x54\x2e\
\xb3\xb4\xbc\xcc\xd0\xe0\xe0\xba\x6d\xae\x05\xae\x3a\x73\x59\xc5\
\xd9\xae\xce\x27\xd1\x4e\x1d\x56\x37\x77\x61\xa7\xdb\xb0\x5e\x6f\
\x90\x4e\xa7\x70\x93\x23\x51\x3b\x63\x29\x97\xca\x4c\x95\x6a\xb5\
\x8a\xeb\xb8\x3d\x3f\x29\x44\xfd\x0b\xdc\x6f\xae\x50\x35\xf5\x92\
\x9a\x0b\x62\x75\x7d\xbd\x46\x73\x7d\x77\x4f\xa7\x79\x5e\x1c\x68\
\x8b\x60\x62\x0c\x72\x49\x09\x9f\x33\x35\x9b\x77\x7c\xf7\x00\x69\
\xc3\x23\x6d\x78\xa4\x0c\x8f\x94\xee\x93\xd0\x7c\x12\xba\x47\x42\
\xf7\x49\xe8\x3e\xcf\x1a\x5d\x61\xc4\x6e\x52\xf2\x92\xc4\x93\x74\
\xfa\x21\xc0\x4a\xae\x5d\x0b\x30\x6e\xbe\x94\xdc\x7d\xff\xe3\x98\
\x66\x12\xd3\x4c\x51\xab\x2e\xb1\xb2\xf4\x04\x23\x43\x59\xfe\xe7\
\x7f\x7f\x35\x97\x1f\xde\xd9\x75\xbb\x27\x4e\xcd\x01\x90\xb0\xb3\
\x54\x2b\xf3\xd1\xd3\x64\x2b\x5d\x44\x10\xac\xe0\x7b\x78\x7e\x13\
\xc7\xa9\xe2\x34\xab\x38\x4e\x05\xcf\x6b\xb6\xb5\x95\xcb\xed\x40\
\x68\x2d\xb6\xca\x13\x06\x1f\x5d\x7e\x59\x2c\xb2\xb0\x25\xf9\xef\
\xf7\x7e\x50\xac\xa8\x50\xc0\x56\x1a\x81\xee\xd7\xc0\xf4\xf4\x83\
\x2c\x2e\x3d\xb6\x61\x7b\x96\x65\x70\xe9\x81\x71\x0e\xed\x9b\xe0\
\xaa\xcb\x76\x71\xdb\xdd\x47\xf9\x8f\x3b\x1f\x41\xfa\x2e\x42\x37\
\x15\x33\x20\xc2\x07\xe4\xd8\xb3\x79\xe0\xd2\xb3\xad\x1c\x25\xce\
\x30\x39\xb5\xd8\x17\xc0\x1a\x1c\x08\x5d\x6d\x2e\x42\x0b\xa2\x37\
\x63\xb1\x87\x32\x10\xca\x43\x98\x80\xd5\xeb\x59\x7f\x05\x70\x7a\
\x4a\x3d\x54\xd5\x2a\xf3\x0c\x0f\x66\xf9\x83\xb7\xbe\x0a\x7d\x03\
\xf7\xe2\x23\x8f\x4d\x01\x60\x9a\x29\x84\xd0\x08\xa3\x5b\x2f\xcf\
\xaa\xfb\xca\xd3\x47\x0a\x3c\x7d\xa4\x55\x01\xa2\xe8\x26\x58\x76\
\x33\x3c\xd9\xd8\x46\xc1\xcf\x50\xf5\x13\xa4\xb5\x1a\x03\x7a\x85\
\xbc\x5e\x21\xaf\x97\xd9\xa5\x2f\xb3\x5b\x9e\xe6\x46\xf7\x2e\x7c\
\x57\xe3\xb4\x37\xca\x09\xb9\x87\xef\x88\x6b\x69\x26\xc6\x48\x26\
\x13\xa4\x12\x49\x12\xa9\x04\x49\x3b\x81\x6d\x5b\x41\x52\x57\x03\
\x4d\xfb\xde\xa5\x26\xd8\x8c\x17\xe1\x5c\xf6\xe3\x07\x76\x6e\xed\
\x7b\x7d\x9e\xe1\xc2\x72\xef\xae\xc5\xc2\x9e\x2f\x57\xf4\x05\x08\
\xb0\x24\xa9\xe6\x7c\xf4\xbf\x93\x69\x4d\xa4\xf5\x58\xcd\xc1\x23\
\x47\x8e\x70\xdf\xfd\xf7\x73\xea\xd4\xe9\x0d\x01\x56\x08\xa8\x3a\
\xc1\x55\x37\xe6\x2a\xce\x5e\x75\x7e\x17\x82\xb4\x6e\x20\xab\x1b\
\xd0\x6a\x04\x00\xcb\x4b\x8d\x46\xed\x6c\x4b\xfb\x4a\xeb\x51\xaf\
\xb7\xe5\xd7\xea\xc7\x84\x00\x19\xb0\x1e\xba\xe6\xb7\x4d\xcd\x61\
\x9f\xbd\x0d\x91\x77\xe7\x18\x85\x29\x1b\x45\x4c\x43\xa5\xde\x0d\
\xe1\x53\x70\x75\x1e\x2c\xac\x2d\xda\x0e\xed\x40\xe6\x61\x72\xa6\
\x87\x2b\x03\x0d\x53\xa8\xd9\x0a\x2e\xe4\x64\x17\x06\xab\x9b\x3d\
\x72\x7c\x8a\x52\xb9\x46\x26\xb7\x1d\xc7\xa9\xb0\xb4\xf0\x08\x09\
\xdb\xe0\x4f\x7f\xfb\x75\x5c\xb2\x7f\xed\x54\x0b\x27\x4e\xcd\x61\
\x9a\x29\x34\xcd\x64\x79\xf9\x71\x9a\x8d\x8d\x99\x37\xcb\x34\xd8\
\xbd\x63\x90\x3d\x3b\x46\x38\xb0\x67\x9c\xc9\xe9\x45\xbe\x78\xeb\
\x77\x55\x61\x65\x11\xb2\x55\x6a\x5c\x1d\x99\x54\xba\x28\x5a\x25\
\x5a\xd8\xc4\xe4\x51\x2a\xab\x87\x05\x53\x4f\xa1\x89\xb5\x7f\x86\
\x89\x84\x72\x81\x5f\x7d\x64\x37\x7b\x77\x8e\x62\x18\x1a\x96\x69\
\x44\x89\x5d\x47\x87\xb2\x1c\xda\x37\xc1\xae\xed\xc3\x91\x04\xdd\
\xfd\x43\x00\x00\x20\x00\x49\x44\x41\x54\x7b\x18\xe0\xf4\xd4\x22\
\x00\xbe\xdf\x44\x17\x99\x00\x5c\x85\x4f\x72\xe1\x5a\x21\x00\x52\
\x4c\x1a\xc0\xe9\xe9\x25\xae\xbb\x6a\x5f\xcf\xc7\x31\x98\x57\x00\
\xcb\xf3\x9d\x18\xcb\xdd\xd2\x60\x45\x60\x4b\x4a\xc5\xc4\x41\x5f\
\x2e\xc2\xd6\x71\x78\xfc\xc2\xeb\x9f\xd3\xd3\xf5\x13\x82\x6c\xd3\
\x4a\x12\x5d\xc7\xc2\xe7\x48\x7a\x16\x09\x9c\xa8\x8e\x72\x6f\x71\
\x17\xf7\x16\x77\x73\x6f\x69\x17\x8b\x6e\x16\x5d\x13\xe8\xba\x16\
\xd3\x74\xc9\x08\x8c\x4a\x29\xb1\x85\xcb\x15\x99\x29\xae\xcb\x9e\
\xe2\xba\xcc\x49\xae\x48\x4f\xb2\x47\xcc\x72\xb3\xbc\x87\x3b\x0b\
\x87\xb8\x65\xe9\x06\x16\x13\x63\x64\x33\x19\xb2\xd9\x0c\xe9\x54\
\x8a\x64\x32\x41\xc2\x4e\x62\x18\x1a\x86\xd1\x3a\xc7\xe7\x7a\x12\
\xdc\x8c\x30\xf9\x5c\xf6\xe5\x5c\x8b\xe6\x37\x6b\x17\x0a\x10\xd8\
\x2a\x3b\x97\xc1\x67\x17\xa3\x85\x72\x9d\xd0\x3a\xc1\x55\x68\x6b\
\x31\xbe\x5b\x61\x17\x1c\xc0\xf2\x7d\x9f\xb4\xbb\x10\xfd\xef\x64\
\x15\xc0\x92\x52\xb6\x15\x75\x3e\x70\xe0\x00\x47\x8f\x1d\x67\x6e\
\x6e\xae\x27\x90\x12\x82\x9e\x4e\x60\xd5\xe9\xa7\x0d\x59\xae\xf8\
\xc9\xe8\xd4\x71\xf5\xc2\x62\x79\x9e\x17\x01\x42\x37\xd9\x02\x58\
\x13\x69\x95\x7f\xa7\x5e\xaf\xd3\x74\x9a\x51\x9b\x1b\xd1\xf7\xd1\
\xff\x81\x76\xc1\x0f\x26\x7e\x4b\x84\x4f\xa7\xed\xce\x03\xd7\xdd\
\x1c\xc0\x8a\x5c\x7a\xe1\x4b\x28\x80\x95\xd4\xe1\x79\xe3\x4b\x24\
\x74\x1f\x5b\xf3\xb1\x03\xc6\xca\xd6\xd4\x2b\xa1\xab\x65\xfb\xd2\
\x75\x2a\x9e\x4a\xbf\xd0\xa2\xb5\x35\x64\x20\x46\x4f\x25\x7b\x03\
\x58\x8f\x07\x93\xa4\x61\x24\x59\x98\x7b\x08\x29\x3d\xde\xfe\xeb\
\xaf\x5c\x17\x5c\x15\x4a\x35\x96\x57\x2a\xa4\x33\xe3\x08\xa1\x61\
\xdb\x39\x9a\x8d\x22\x6f\xfc\x89\x67\x33\x98\x57\xf9\x98\x4c\x43\
\xc7\xb6\x0c\x6c\xcb\x24\x9d\xb2\xd9\x31\x31\xc8\xd8\x48\xbe\x4d\
\x2c\xfd\xe1\x4f\x7c\x43\x01\x2c\xa1\x47\x6c\x95\x08\x41\x15\xb4\
\xe9\xba\x22\x6d\x4c\xdf\x00\xab\x86\x10\x02\xcb\xb4\xc3\x06\xbb\
\x5a\x32\xa1\x52\x45\x3c\xe3\xba\x43\xbc\xe1\xc7\x9f\xd9\x73\xfb\
\x03\xb9\x00\xf8\x78\x0e\x9a\xd0\x23\x20\xa5\xbc\xc0\x71\x37\x9e\
\x72\xe1\x25\x82\xfd\x84\x80\xa6\x57\x0b\x5d\x84\xbe\xd7\x8c\xb4\
\x69\xb2\x4d\xbd\xd2\x02\x5b\x52\xba\x6d\x7d\xdb\xc8\x16\x96\x54\
\x46\x7d\x80\xfd\xbb\xc7\x78\xc9\x73\x9f\xd2\xd3\x76\x93\x33\xcb\
\xe8\xba\x81\x26\x4c\x42\x10\x89\xd4\xf8\xd2\xd2\xe5\xfc\xf3\xec\
\xf5\xac\x38\x49\x20\xfe\xfb\xf0\x91\x52\x04\x0f\x25\xa1\x96\x45\
\xb6\xbd\x9a\xc0\x9d\x8d\x71\xee\x5c\x1c\x43\x88\xeb\xb1\x75\x8f\
\x17\x0c\x1f\xe7\x8d\xdb\xee\xe4\x99\xa9\xa3\x3c\x5d\x1e\xe7\x8e\
\xca\x3e\xbe\x5a\xbe\x81\x62\x69\x1b\xb9\x5c\x96\x5c\x36\x4b\x36\
\xe3\x04\x40\xcb\x56\x7d\xd2\x35\xe5\x3a\xdd\xe2\x09\x70\x2d\x4d\
\xec\x79\x8f\xfe\x8a\xe9\x12\xbb\x81\xa2\xcd\x8a\x86\xcf\xa6\x8d\
\xb3\xb1\x8b\x11\xa8\xac\x15\x29\x7a\x3e\xec\x5c\x08\xc7\x37\x6b\
\x71\xf7\x5e\xb7\x7d\x76\x32\x5c\x9b\x03\x5a\xeb\xaf\x77\xc1\x01\
\x2c\x29\x25\x69\xb7\x75\x93\x0f\x0b\x3b\x37\x9b\x4e\xdb\x41\xdb\
\xb6\xcd\xae\x5d\xbb\x28\x14\x0a\xcc\xcf\x2f\x30\x3e\x3e\xb6\x6e\
\xbb\xa1\x7e\xaa\x1b\x8a\x8d\x83\xa7\x38\xcb\x05\xb4\x01\xac\x5e\
\x58\xac\x10\x6c\xf9\xbe\x4f\xb3\xa1\x5c\x4e\x5e\xcc\x45\x38\x98\
\x90\x08\x4f\xe5\xde\x71\x5d\xb7\xaf\x9b\x5a\x34\x65\x09\xd1\x62\
\xb0\x84\xd7\xf1\xad\xb2\x96\xcb\xaf\x37\x73\xbd\x98\xff\x3e\xd4\
\x60\x05\x8c\x84\x26\x24\x3b\x53\x0d\xfe\xe0\xaa\x8d\x5d\x55\x00\
\x93\x8d\x2c\x71\x80\xa6\x18\x2c\xd5\x7e\xb2\x47\x80\x35\x3b\xaf\
\x5c\x38\xd5\xf2\x2c\xae\x53\xe7\x17\x5e\xff\x5c\x6e\xbe\xf1\xd2\
\x75\xb7\x09\x99\x0b\xdb\x52\xfa\xab\x84\x9d\xa7\xc4\x24\x97\x1d\
\xdc\xce\xd3\xaf\x3b\xd4\xd3\x7e\xa1\x35\x76\x9a\xa6\xc7\xdc\x77\
\xad\x5c\x5f\x0a\x5f\xb5\x47\x4c\xf6\x3b\x37\x95\x2b\x75\x95\xa2\
\x62\x1d\xfd\x15\x40\x32\x60\xb0\x4e\x4f\x2f\xad\xbb\x5e\xa7\x85\
\x6e\x38\xdf\x6d\x06\x9a\xb1\x30\x59\x68\x4c\x11\x22\x25\x32\x88\
\x30\x4c\xd8\xca\x2d\x38\xd9\xe7\x7e\x86\x42\x17\xa1\xe7\xa0\xa1\
\x47\x7a\x2b\x05\x22\xe2\x6e\x42\xb5\x0e\xf4\xce\x60\xc5\x8f\xf9\
\x57\x7e\xfa\xf9\x6d\x0c\xdd\x5a\x26\x25\x4c\xcd\x2e\xa3\xeb\x76\
\x40\xf5\xaa\xe5\x42\x08\x1e\xaf\x8d\x06\x9f\x25\x12\x2d\xa0\xf2\
\x24\xaa\x22\x40\x7b\x82\xd5\x18\xdf\xa7\xfe\x0f\xea\x1d\x22\x25\
\x08\xf0\x3c\xf8\xe4\xf4\x21\x3e\x3b\x73\x90\x17\x8d\x1e\xe3\xe7\
\x77\xdc\xc5\x0f\x65\x4e\x70\x8d\x77\x9a\xbf\x9c\x7f\x16\x93\xa5\
\x03\x0c\x0c\x0c\x30\x90\xab\x33\x90\xcf\x91\xc9\xa4\x49\x26\x13\
\x58\x58\xe8\xba\x76\xce\xdc\x76\xdd\x22\xf6\xbe\x57\x4c\xcd\x85\
\xcc\x5e\x7d\xbf\xda\xf7\x12\x5c\x5d\x68\xb6\x16\x20\xdf\x28\xf8\
\x63\x2b\xaf\xb1\x0b\x0e\x60\xf9\x52\xe2\xc8\xd6\xa4\xa3\x05\x89\
\x1b\x8d\x2e\x65\x65\xf6\xec\xde\xcd\xd1\x63\xc7\x98\x99\x9b\x63\
\x64\x64\x78\xc3\xd2\x33\x61\xda\x85\x6e\x03\xbe\x56\xba\x86\x6e\
\xeb\x74\xb2\x58\x71\xa0\x15\x7e\x06\xd4\xd3\x2a\xa0\x39\xad\xa2\
\xc4\x4d\x0f\x6a\x8e\xa7\x92\x1a\x3a\xee\x2a\x1a\xb3\x9b\xb5\xf7\
\x37\xbc\xed\xab\x53\x67\x6a\x7e\x1b\x01\xb2\x59\x17\x61\x58\x3f\
\x30\x04\x45\xc4\xe0\xc4\x7b\x27\x6f\x52\x82\x5f\xcf\xa4\x21\x4d\
\xea\xbe\x45\xc3\x37\x69\xf8\x06\x75\x69\x53\xf7\x0d\x9a\x41\x14\
\x61\xd3\x37\xa9\xf9\x36\x22\x4c\xcf\x10\x80\x35\xe9\x7b\xd8\x96\
\xd9\x96\x5b\x68\x3d\x0b\x01\x56\xb3\x59\x66\xc7\xc4\x20\x6f\xf8\
\xb1\x9b\x36\xdc\xe6\xd4\x19\x05\xcc\x6d\x5b\x45\x10\xda\x01\x2b\
\x73\xe2\xe4\x5c\x7f\x00\xcb\x57\x63\xac\x09\x1d\x0d\x3d\x02\x53\
\xa5\xca\x2c\x86\x6e\x92\xb0\x07\x82\x3a\x98\x81\x56\xcd\x77\xc9\
\xa4\x7a\xd3\x96\x85\x56\x2c\x2b\x80\xa5\x6b\xeb\xff\x04\x53\x89\
\x01\x84\xd0\xfa\x66\x96\x06\xf3\x0a\xc4\x78\x5e\x33\x60\xe1\xd4\
\x31\xe9\x9a\xc7\xf5\xa9\x6f\x51\xf5\x92\xdc\x57\xbb\x2a\xd2\x27\
\x99\x46\x12\xc3\xb0\x39\xb5\x49\x06\xcb\xf3\x9a\x81\x06\xcb\x47\
\x48\xd1\x26\x76\x17\x01\x90\x0b\x05\xf8\xbd\x6a\xb0\x4c\x43\xe7\
\x59\x37\x1c\x26\x97\x4e\x76\x3d\x7f\xbe\x2f\x71\x5d\x0f\x2b\x16\
\xd9\xb8\xb4\x52\xa6\xd9\x74\x49\xa6\xf2\x44\xcc\x63\x04\xb2\x42\
\x3d\x56\x8b\x84\x94\x52\x04\x22\x55\x11\x80\xcf\x88\xe7\x6b\x13\
\xd6\xc9\x20\x1a\x51\x09\x88\xc3\xf2\x18\x12\x07\xc9\x67\x66\x0f\
\xf1\xf9\xb9\x83\xfc\xf8\xc4\x43\xbc\x75\xdf\xad\xfc\xc6\xf8\x2d\
\xbc\x6f\x76\x81\xbb\xa6\xaf\xa6\x56\xab\xd3\x68\x36\x70\x5c\x17\
\xcf\xf7\x49\x27\xc1\xb6\x4d\x34\x5d\xdf\x52\x26\xab\x1b\xc3\xb3\
\xd6\xff\xe7\xd4\x04\x6d\x92\x80\x0b\x99\xbd\xba\x98\xc0\x47\xbf\
\xe2\xf2\x5e\xa2\x42\xcf\x85\x5d\xe8\x63\xba\x11\x90\xea\x17\x68\
\x6d\x74\xb8\x17\x1c\xc0\x42\x4a\x8a\xb2\x95\xbf\xc9\x2c\xa9\xb2\
\x21\xba\xa1\xea\x02\x86\xe0\x05\x60\x64\x64\x98\xd9\xb9\x01\x10\
\x82\xc5\xe5\x15\xc6\x46\xd6\x8f\x4e\x92\x52\x46\xdb\x77\xb2\x52\
\xe1\x6b\x23\x7d\x56\x67\xb4\x60\x37\x16\x2b\xb4\x84\xad\x26\x5d\
\xa3\xda\x12\xed\x4f\x97\x85\xca\x14\x2d\xfd\x48\xf8\xdd\x8f\xa9\
\x7e\x81\x1f\xb0\x4b\x86\xf0\xdb\x22\x4c\x22\x80\xd5\x27\x83\xe5\
\x04\x00\xab\xe5\x6e\x0c\x19\x1a\x8d\xf7\x4f\xdd\x48\x9c\x8d\x8a\
\xbe\x8f\x03\x31\x11\x64\x53\x0f\xd7\x0b\xbf\x0b\xfa\xe3\x4b\x8f\
\x6c\xaa\x37\xf6\x0a\x60\x66\xa1\x25\x42\xfe\xb9\xd7\xdc\xbc\xa1\
\xb0\x19\x60\x6e\x51\xe9\xad\x4c\x33\x85\xd0\xb4\x48\xbf\xf4\xd8\
\x93\xb3\x3d\xef\x17\xba\x33\x58\x42\xc0\xf4\xcc\x7d\x54\x2a\x4a\
\x1f\x68\xdb\x19\x4c\x23\x89\xae\x5b\xf8\xd2\x5f\x15\xcd\xb8\x91\
\x95\xca\x35\x4c\x3d\xc8\x83\xd6\xf6\x4d\xe7\x2f\x56\xc7\xb6\xb3\
\x91\xd8\xbb\x57\x0b\xdd\x70\xae\xd7\x88\xa5\x81\x90\x98\x38\xfc\
\xf6\xf8\x3b\x79\xa8\x7e\x84\x07\xa6\xae\x06\x44\x10\x06\x2f\xb1\
\xed\x1c\x67\x66\x96\x54\xa9\x98\x1e\x6f\x94\x21\x83\xe5\x79\x8d\
\x96\x8b\x50\x10\x64\xdb\x57\xe1\xf8\x32\x40\x39\x11\x83\x95\xed\
\x0d\x60\x5d\x71\x78\x27\xef\x7c\xdb\x6b\xa3\xff\x9b\x4d\x97\xbf\
\xfe\xc7\xaf\xf2\xc8\x63\x67\x98\x9d\x2f\xb2\xb0\x5c\x42\xd7\x34\
\x6e\xba\xfe\x12\x7e\xf8\x87\xae\xe4\x59\x4f\x3b\xcc\x64\x90\x5f\
\x4c\x37\xec\x20\xb0\xc1\x5f\x3d\xb9\x08\x90\xbe\x8f\xd3\xac\xd0\
\x68\x14\x71\x9d\x26\xd2\x77\xa3\x3a\x86\x52\xfa\x84\x45\xc8\x85\
\xd0\xd1\x34\x1d\xc3\xb4\x30\xad\x24\xa6\x11\x30\x63\x6d\xa1\xd9\
\xe0\x48\xf8\xe8\xd4\x11\x1e\x2d\x0f\xf1\x9e\x4b\x3f\xc7\xcf\x4f\
\xdc\xcf\xce\x85\x15\x3e\x36\x77\x23\x8d\x46\x03\xc7\x75\xf0\x3d\
\x0f\xe9\xfb\x40\x1a\xcb\xb6\xd4\x03\xe1\x16\x4e\x7a\x3f\x60\xaf\
\xfa\x6f\x7f\x23\xbb\x18\x19\xb3\x1f\xb0\x58\x2d\xeb\x94\xfa\x40\
\xbb\x6b\xb0\x73\x8e\xef\xf6\xf9\x6c\xec\xc2\x03\x58\x42\x50\x16\
\xd9\xe8\xfe\x65\x94\x4f\x47\x5f\x25\x12\x36\xe5\xb2\x1b\x5b\x55\
\xb0\x6f\xef\x5e\xce\xcc\xcc\xd0\x68\x36\x71\x5d\x0f\xc3\x58\x9f\
\xc5\x8a\x83\xac\xf0\xff\xb5\xd8\xab\xb5\x00\xd6\x7a\x2c\x56\x9b\
\x1b\x33\x11\x00\xac\x4a\x6b\x82\x3f\x53\x6e\x15\x92\x56\x45\x6c\
\x37\x77\xf1\x87\x1a\x2c\x53\xf8\x91\x9c\x38\x18\x15\x20\xce\x48\
\xf5\x66\xd1\xfa\xa1\xe6\x28\xfa\xac\xda\x8c\x03\xaf\x76\xa0\xa5\
\x98\x01\xc2\xad\xe2\xdf\x85\x6e\xb4\x40\x83\x95\x4a\xf6\x0e\x42\
\x42\x06\x6b\xf7\x8e\x61\x5e\x78\xf3\x55\xbd\x6d\x13\x80\x32\xd3\
\x4a\x23\x10\x58\xa6\x62\x65\xfa\x06\x58\x7e\x08\xb0\x8c\x96\x06\
\x0b\x11\xb0\x70\x06\x4f\xb9\x7c\x0f\xa7\xce\x2c\xb2\x5c\x58\xa1\
\x5c\x51\xa0\xa1\xd7\xe8\x48\x50\x73\x6a\xb9\xda\x40\xd7\x25\xc7\
\x4e\x7c\x05\x4d\xe8\x84\x59\xeb\x85\x50\xb5\x26\x85\xd0\xd9\xb7\
\xeb\x46\x84\xd0\x48\xda\x79\x96\x56\x4e\x51\xad\x35\x7b\xd6\xb0\
\x85\x2c\x91\xe7\x36\xd0\x85\x16\xc1\x01\x47\xa6\x68\x48\x9b\x9d\
\xe6\x19\x95\xbe\x41\x86\x20\x48\x92\xb0\x73\x54\x2a\xf3\xcc\xcc\
\x15\xd8\x3e\xbe\x7e\x7e\xb9\xf8\x7e\x84\x10\xb8\x6e\x33\x38\xff\
\xe1\x35\x13\xb0\x42\x81\x86\x49\x48\x22\x91\x7b\x3f\x51\x84\xa1\
\x2d\x17\x2a\xbc\xf5\x0f\x3f\xc2\x43\xc7\x54\x1e\x32\xdd\xb0\x31\
\xcc\x2c\xbe\xe7\x70\xcb\x37\x1e\xe6\x96\x6f\x3c\xcc\x81\x3d\x63\
\x5c\x79\xe9\x2e\x40\x69\xf7\x14\xd9\xa4\xd8\x3b\xf5\x59\x52\xaf\
\x2c\x51\xab\x2d\xe3\x34\x2b\xc8\xd8\x03\x8e\x69\xe8\x0c\x0f\xa6\
\x19\x1a\xc8\x90\x49\xd9\x94\xab\x0d\x0a\xc5\x2a\x2b\xc5\x2a\xb5\
\x7a\x95\x66\xb3\x0a\x95\x15\x84\x10\x18\xa6\x4d\x32\x99\xc7\xb2\
\x55\xaa\x94\x90\x15\x93\x42\x70\x5f\x61\x82\xd7\xdc\xf7\x1a\xde\
\x73\xd9\xe7\xf8\x91\x91\x93\x78\x52\xf2\x4f\x0b\xd7\xe3\x7a\x9e\
\x2a\x48\x4e\x98\xbb\x0c\x2c\xd3\xc6\x30\xb6\xb6\xea\xe1\x5a\x40\
\xa4\x5b\x44\xd5\xb9\xb6\xad\x00\x45\xe7\x12\x24\x6e\x04\x3c\x2e\
\x46\x70\xd5\x69\xdf\xab\xc8\xd5\xf5\xec\x7c\x8d\xeb\x7a\xa2\xf6\
\xf5\x5c\xf4\x5b\xea\x22\x0c\x85\x60\x1b\xb9\xd7\x7a\xb1\xb5\x84\
\x64\x6b\x7d\xdf\x4d\x68\x2e\x80\xb2\x3e\x00\x01\x06\x0a\x19\x2c\
\x50\x80\xa5\x5c\xae\xb4\xb5\x91\x4e\xa7\x18\x1e\x1a\xc4\xf3\xa1\
\xd1\x03\xc0\x0a\xf7\xe3\x38\xce\x86\xec\x55\x37\x80\xd5\x8d\xc5\
\x0a\x01\x56\xa7\x85\x00\x4b\xaf\xb4\x18\xac\xa9\x92\xc0\x34\x0d\
\x6c\xdb\xc6\x34\x0c\xf4\x0e\x30\x17\x3f\xf1\x9d\x7d\x10\xc1\x32\
\xad\xab\x06\x2b\x14\x97\x6e\xce\x45\x18\x31\x58\x3d\x80\x2b\xba\
\x80\x2b\x82\xa4\x9e\xed\xe0\x2a\x64\xba\x40\x4a\xbf\x2f\x10\x12\
\xe6\x89\x7a\xe3\x6b\x9f\xdd\x93\xf6\x06\x60\x3e\x60\xb0\xac\x20\
\x3c\x1f\x04\xb6\x3d\xc0\xc9\x33\xf3\x38\xae\x87\xd9\xc3\xb5\x01\
\x2d\x71\xa4\x1e\x01\x1f\x75\x1c\xbe\xef\x31\x98\x4f\xf3\xee\xb7\
\xff\x64\xb4\xae\xe7\xf9\x94\xfa\xcc\x39\x56\xad\x35\x48\x26\x4c\
\xaa\xb5\x06\x0b\x4b\x27\xba\xae\x63\x1a\x36\x87\xf6\xfe\x10\x00\
\xe9\xe4\x20\xcb\x85\x53\x4c\x4e\x2f\xad\x2b\xf2\x8f\xdb\x60\x00\
\x62\x5c\xaf\xde\xd2\x60\x49\x95\xe6\xa3\xe8\xe5\x19\x35\xe6\xc8\
\xea\x75\xca\x5e\x0a\x55\x43\xb0\xa5\xf7\x9a\x9c\x5e\xec\x19\x60\
\x69\x42\x30\x90\x4b\xa9\x0c\xe8\x81\x96\x29\xd4\x35\x29\x6b\x01\
\x2d\x3f\x48\x83\xd1\x4f\x14\x21\xc0\xd2\x4a\x85\x37\xfe\xe6\xdf\
\x31\x33\xbf\x42\x26\xbb\x8d\xc1\xe1\x43\x04\x17\x15\x20\x69\x36\
\xca\x54\xca\x33\x3c\x7e\x6a\x86\x13\x27\xc3\xe0\x08\x1b\x55\x45\
\x40\xb9\xf3\x6a\xd5\x45\xca\xc5\x29\x5c\xb7\x81\x10\x70\xf8\xc0\
\x76\x6e\xbc\xe6\x00\x37\x5c\x73\x90\x83\x7b\xc7\x49\xaf\xe3\xe2\
\xad\x37\x1c\xbe\xfb\xe8\x69\xee\x79\xe0\x09\xee\x79\xe0\x71\x8e\
\x9e\x98\xa6\x58\x98\xc5\x30\x2d\x52\xa9\x01\x05\xb4\x42\x7d\x16\
\x30\xdb\x48\xf3\xb3\x0f\xbc\x82\x0f\x3d\xe5\x5f\x78\xe9\xe8\x29\
\x1e\x28\xe6\xb9\x6f\xf1\x20\x22\x18\x2f\x5d\xd7\xd0\x0d\x03\x43\
\xd7\x91\xd2\xec\x3a\x09\xf4\x6b\x1b\x89\x75\x7b\xd9\x47\x67\xce\
\x9f\xce\xfb\x73\x67\xdb\x9b\xb5\x6e\xed\x75\x8b\xf6\x3a\x5b\x3b\
\xdb\xbe\xc6\x03\xa7\xc2\xfb\x7e\xa7\x6d\x05\x0b\xd6\x4b\x1b\xbd\
\x9c\xbb\x70\xee\xe8\x04\x0f\xdd\xce\xe3\x66\xfb\xda\xcb\xf6\x1b\
\xb5\xd1\x19\x90\xd6\xed\x1a\xe8\x67\x7f\xe1\x7b\xe7\x31\xc7\xf3\
\x60\xc5\x7f\x07\xf1\x6a\x2d\x1b\x9d\xd3\x4e\x0d\xf6\x5a\xeb\x75\
\x2e\x0b\xdf\x8d\x0b\x8d\x3e\xd4\x34\x8d\xba\x3e\x14\x01\x2c\xa3\
\x3c\x15\x08\x4c\x35\x32\xd9\x74\x94\x6c\x34\x6e\x83\xf9\x3c\xe5\
\x5a\x03\xd3\x34\xd1\x0c\x13\xdf\x75\x7a\xda\x97\x2a\xec\xba\x36\
\x7b\xb5\x1e\xc0\xea\xcc\xde\xde\x69\x86\x69\x60\xdb\x8a\x6d\x30\
\x62\x00\xeb\x4c\x59\xc3\x34\x4d\x05\xb0\x4c\xb3\xef\x14\x0d\x00\
\xc4\x00\x96\x21\xc2\xfa\x81\xa2\x4d\xd3\xd1\xaf\x8b\xd0\x8b\x8b\
\xdc\xdb\x34\x1b\x12\xdf\x97\x81\x3e\x25\x78\x8f\x09\x82\x65\x50\
\x24\x58\xca\xb0\x60\xb0\x4a\x86\x09\x82\xfc\xc0\xde\x36\x70\xd2\
\x2b\xfb\x02\xf0\xe1\xff\xf5\x2b\x2c\xaf\x94\xb9\xec\x12\x95\x07\
\x6d\xa5\x58\xe5\xf6\xbb\x8f\x32\x35\xbb\xcc\x99\x99\x65\xe6\x16\
\x8a\x1c\xb9\x64\x07\xcf\x7d\xc6\x11\x8e\x5c\xb2\x13\x21\x60\x76\
\xbe\x88\x61\xd8\x08\x61\x44\x60\x34\x99\x1c\xa0\x52\x99\xe5\xe4\
\xe4\x02\x07\xf7\x8e\xf7\xb4\xef\x54\x00\x8c\x3d\xdf\x0d\xd8\xa4\
\xf0\x18\x1c\x92\x89\xf6\x08\x38\x5d\xd7\xfa\x06\x0c\xe9\x94\xcd\
\x57\xfe\xf9\x6d\xf8\x52\x52\xab\x35\x71\x5c\x0f\xd7\xf5\x70\x3d\
\x1f\xd7\xf5\x78\xc3\x7f\xfd\x6b\x2c\x33\x1f\x25\xaa\x4c\xa7\x86\
\x00\x38\x35\xb5\xd8\x33\xc0\xb2\x2c\x83\x84\x6d\xe2\xb8\x0a\xf8\
\x84\xd1\x82\x20\x29\xfa\x03\x8c\x32\xc7\x2e\xf3\x0c\x47\xfd\xc3\
\x91\x08\x3d\x69\x07\x82\xfa\xa9\xa5\x35\x0b\x2f\x77\xb3\xc1\x7c\
\x9a\xf2\x54\x31\x06\xc4\x7d\xa2\xf4\xdb\x42\x0b\xc4\xf4\x2a\xa2\
\x11\xfa\x67\xb0\x3e\xf6\x99\x6f\x32\x33\xbf\x42\x7e\x70\x2f\x03\
\x83\xfb\x02\x1c\xe3\x2b\xd7\xa3\x04\xcb\xce\x60\xda\x07\x48\x67\
\x27\x58\x59\x7e\x82\x46\x6d\x05\xc3\x4c\x82\x10\x34\xeb\x25\x0a\
\xcb\x4f\xe0\x38\x35\x2c\xcb\xe0\x27\x5f\x71\x13\x3f\xf1\x9f\x9e\
\x1e\xa5\x97\xe8\xb4\x27\x4e\xcf\x93\x4c\x58\x4c\x8c\xe6\xa3\x65\
\x09\xdb\xe4\xfa\xab\xf7\x73\xfd\xd5\xfb\x81\xe7\x31\x35\xbb\xcc\
\x07\x3e\x7e\x1b\x9f\xbb\xe5\x7e\x8a\x85\x39\xec\x44\x86\x4c\x76\
\x48\x1d\x7f\xa0\xcd\xaa\xfb\x06\x6f\x79\xe4\x85\x7c\xfc\x9a\x8f\
\xf1\x5f\xf7\x3e\xc2\xaf\x3d\x94\x63\x61\x49\xa0\xe9\x2a\x13\xbc\
\xa1\x9b\x18\xba\xaa\xbf\x19\x3e\x14\x5e\x68\xf7\xe2\x5e\xad\x9b\
\x6b\x12\x58\x73\xc2\xef\xa5\x8d\x0b\xdd\x2e\x86\x73\x75\x31\xf4\
\xf1\x62\x3a\xe7\xdd\x4c\x5d\xdb\x6b\x7f\x7f\x41\x02\x2c\x69\x26\
\x21\xc8\xc8\x20\x7c\x17\xa3\x32\x83\x9b\xd9\xce\xd8\xf8\x18\x27\
\x9f\x38\xdd\x75\x9b\x74\x32\x81\x61\xd9\x24\x92\x29\x7c\xcf\xa1\
\x5e\xad\xac\x5a\xaf\x9b\x75\x63\xaf\xd6\xaa\x0f\xd8\xc9\x78\xad\
\x77\x71\x8c\x8d\x8f\x46\x6d\x58\x2b\xc7\xa3\xe5\xd3\x65\x81\x69\
\x9a\x24\x13\x09\x0c\xd3\xe8\xeb\x69\x2d\xae\xb5\xf2\x03\xef\xae\
\x21\xfc\xd8\x09\x16\x81\xde\x65\x13\x1a\x2c\x47\x31\x58\xb5\xea\
\x32\xb5\xea\xf2\x59\x5f\xf8\x86\x91\x60\x60\x70\xaf\xea\x93\xf4\
\x00\xd9\x17\x83\xb5\x7d\x7c\x20\x62\x51\xa6\xe7\x56\x78\xf3\x3b\
\x3e\xb4\x4a\xe8\x7d\xff\x23\xa7\xf8\xe7\x4f\xde\xc9\xce\x6d\x43\
\xfc\xe2\x4f\x3e\x8f\xb9\xc5\x22\x86\x91\x0e\xf4\x43\x8a\x39\xb3\
\x4c\x35\x91\x4e\x4e\x2f\xf5\x0c\xb0\x42\xc0\xe4\x79\x8d\xb6\x34\
\x0d\x8e\x5b\x67\x20\x37\xba\xfe\xc6\x7d\x98\x26\xc4\x2a\xe6\xa4\
\x54\xae\xd3\x68\xba\x0c\xe4\xf2\x81\x90\x1e\xb2\x01\xc0\x9a\xec\
\x5b\xe8\x9e\x66\xa5\x58\x57\x2e\x42\x41\x04\x90\x8b\xbe\x02\x0f\
\x3b\xac\x29\x8e\x3b\x97\x45\xcb\x5b\x11\x8b\xfd\x0a\xdd\xd3\x3c\
\x71\x6a\x3e\x3a\x26\x49\x4b\x4c\x2e\x11\x88\xe0\x21\xc0\xf3\x9a\
\x08\x21\xc8\x66\x7a\x77\x15\xd7\xea\x0e\xff\xfe\x85\x7b\x31\x0c\
\x9b\x81\x81\x7d\xa8\x73\x21\x91\x52\x43\xc4\x40\x96\x40\xb9\x86\
\x47\xc7\x2e\xa7\x56\x5b\x42\xd7\x2d\x2a\xe5\x59\x0a\xcb\x4f\xa0\
\x09\xc1\x8f\xfe\xf0\x75\xfc\xe7\xd7\xde\xcc\xc8\xd0\xea\xfa\x9c\
\x5f\xbb\xe3\x61\xee\xbc\xf7\x38\x77\xdd\x77\x82\x85\xa5\x12\xa0\
\x5c\xd3\x37\x5e\x7b\x90\x17\x3d\xfb\x6a\x2e\x3d\xb0\xad\x6d\xfd\
\xed\xe3\x83\xbc\xed\x57\x5f\xce\xcf\xbd\xe6\x66\xfe\xe0\x2f\x3e\
\xc9\xbd\x0f\x3c\x81\xef\x39\x64\xf3\x23\x8a\x2d\x0c\x7e\x3b\x27\
\x6b\x79\xfe\xdf\xc7\x6e\xe6\x8f\x0f\x7f\x85\xdf\xda\x7f\x1f\x6f\
\x79\xf4\xe9\x2c\x19\x06\xa6\x69\x62\x59\x16\xb6\xa5\x4a\xec\x68\
\x9a\x8d\x6e\x6c\x9d\x5a\xe3\x5c\x6b\x97\xd6\xdb\x8f\x88\x98\xeb\
\xf6\x65\x6b\x31\x6c\xe7\xab\xaf\x9b\xb1\xb5\x98\xc0\xf8\xfb\x85\
\xd2\xdf\x4e\xd6\xe5\x42\x9b\xd7\xbb\xd9\xb9\x8a\xdc\xdb\x68\x9f\
\x71\x56\x6a\xab\xda\x5c\xcb\x2e\x38\x80\x25\x81\x1b\xeb\x5f\x8c\
\xfe\xf7\x12\x83\xf8\x96\x8a\x54\x6a\x4a\x41\xb3\xe9\x60\x59\xe6\
\xaa\xed\x74\x4d\xa0\x6b\x02\x3b\x61\x93\x4c\x0e\x50\x5c\xd6\x29\
\x97\x7a\x2f\xef\x12\x67\xa2\xd6\xba\x40\xfb\x39\x29\x13\x13\x2a\
\x6d\x84\xd6\x28\x90\x9c\xbe\x3b\x5a\x7e\xe7\xb4\x4d\x62\x87\x1d\
\xb9\x08\x7b\xf1\x57\x77\xfb\xf1\x84\x1a\x2c\x2d\x4a\x87\xa8\x18\
\x83\x70\xcd\x7e\x01\x96\x10\xb0\x7b\xfb\x30\xb6\xad\x6a\xea\x25\
\x6c\x93\x84\x6d\x62\x5b\xe1\xbb\x81\xdd\xb1\x2c\x61\x9b\xd8\xb6\
\xd1\x5a\xc7\x36\x49\x58\x26\xbf\xfa\x3b\x1f\xc0\xf5\x0d\x42\xb7\
\xa1\x0c\xa2\xf2\xd6\x73\xc3\xac\x65\x8f\x3d\x39\xcb\xaf\xbf\xe3\
\x43\x2c\xae\x94\x19\x1a\x3a\x48\x26\xb3\x0d\xd3\x4a\x61\x18\x09\
\xaa\x95\x79\x4a\xe5\x69\xa6\x66\x4f\xf1\xdb\x7f\xf2\x71\x00\xb2\
\xd9\x91\xd6\x4d\x5e\x28\x2d\x0e\xa8\xe8\xb2\x5e\x2d\x97\x55\xdb\
\xb8\x6e\x3d\x72\x11\xba\x6e\x1d\x29\x7d\x1e\x3b\x39\xcb\xaf\xfd\
\xee\x07\x49\x27\xed\x28\xd9\x67\x3a\x65\xf3\xc2\x9b\xaf\x64\xff\
\xee\xf5\x53\x85\xf4\x62\x61\x0d\x49\xcb\x48\x60\x44\x00\x4b\xa5\
\xf9\xd8\x4c\xaa\x86\x85\xa5\x45\xf4\x40\x6b\x15\x70\x8e\x94\x7c\
\x05\xa4\xb6\x1b\x53\x68\x01\x18\x92\x42\x92\x4a\xb5\x18\xac\x7e\
\x6c\x30\x9f\x46\x06\x22\x76\xdd\xb0\xa3\xac\xf1\x21\x9b\x15\x82\
\x21\xcf\x6b\x92\xcd\x24\x7a\x16\xd0\x03\x7c\xee\x6b\xf7\x51\x2a\
\xd7\x18\x1a\x3e\x84\x08\xc0\x8b\x84\x00\x64\x05\x95\xdf\x62\x20\
\x4b\x02\xc9\xe4\x20\x2b\x4b\x4f\x50\x2e\x4d\x33\x3c\x98\xe5\x9d\
\xbf\xf5\x1a\x8e\x1c\xda\xd1\xb5\xfd\x7f\xfb\xfc\xb7\xf8\xd3\xbf\
\xf9\x1c\x00\x9a\x6e\x90\x48\x0e\x20\xa5\xcf\xe4\xf4\x0a\x1f\xfb\
\xf4\x5d\x7c\xee\x6b\xf7\xf3\xc1\xf7\xfc\x62\x1b\xa3\x15\xda\xf8\
\x68\x9e\xf7\xbc\xfd\x27\xf9\xb3\xbf\xfd\x3c\xff\xfe\x85\x7b\x28\
\x2c\xcf\x92\x1f\x9c\x08\x8e\x4f\x0d\xc2\xa7\x67\x2f\xe1\x86\x81\
\x33\xbc\x62\xfc\x11\x9e\x3f\xf8\x04\x5f\x2e\x9a\x58\x96\x49\xc2\
\xb2\x48\xda\x09\x4c\xd3\x8e\x6a\x18\xae\xfb\x28\xbc\x81\x75\x4e\
\xf8\x9d\xc0\x65\xab\x6c\xa3\xfd\x08\xc4\x9a\xc0\xab\xd3\xce\xa6\
\xaf\xfd\xde\x37\x37\x63\x9d\xf7\xfb\x4e\xe9\x86\x10\xa2\xab\x34\
\xa4\xdf\xbe\x6e\xa5\xad\x25\xc3\xb9\xd0\xec\x7c\x80\xab\xb3\x71\
\x3d\xf6\xb7\x8f\x75\x00\xd6\xb9\xf8\x11\x6e\xc6\xa4\x94\x78\xbe\
\xcf\xd0\xfc\x1d\x1c\x72\xbf\x1b\x2d\x5f\xb8\xe1\x6d\xf8\x96\xca\
\xd1\xf3\xeb\x6f\x7d\x17\xd7\x5e\x32\xc1\x55\x57\x1e\xe9\xda\x86\
\xdb\x6c\xe0\x39\x4d\xac\x81\x01\x76\xed\xdd\xcf\xe9\x93\x8f\x53\
\x2e\xf6\x57\x43\x2f\xec\xcb\xd9\x9c\x14\x4d\xd3\x18\x1d\x53\x93\
\x62\xfa\xd4\xd7\x10\x41\x78\xfa\xc3\x0b\x82\x53\xd5\x04\xd7\xa4\
\x53\x24\x93\x49\xf4\x1e\x00\x56\xd8\x1f\xf5\x1e\x13\xdb\xd3\xee\
\x22\x14\xc1\x84\x16\xb9\x08\xfb\xd4\x60\x5d\x7a\x70\x3b\x1f\xf9\
\xab\x5f\xed\x6b\x9b\x6e\xe6\xfb\x92\x7a\xa3\x89\x65\xa7\x22\x4d\
\x56\xbf\x49\x46\x43\x93\x12\xfe\xc7\xbb\x3e\xce\xd2\x4a\x85\xf1\
\xf1\xab\x14\x83\x21\x94\xee\x4b\x00\x99\xec\x36\xb2\xd9\x6d\x8c\
\x8e\x1c\x61\x7e\xfe\x21\x56\x56\x4e\x62\x99\xe9\x48\x6c\x0f\x02\
\xd3\x50\x6c\xc9\xd2\x4a\x6f\x8c\x26\xb4\xb2\x93\xbb\x6e\x1d\x2d\
\x98\x34\x2c\x33\xc5\x55\x97\xbd\x8c\xef\x3e\xfa\x59\xee\x7d\xe0\
\x89\x55\xdb\x5c\x79\xe9\xae\x9e\x01\xd6\x17\x6f\x7d\x80\x6f\xdc\
\x73\x9c\x81\x7c\x9a\x7c\x56\x15\x52\xce\xe7\x52\xe4\xb3\x29\x1c\
\x27\x48\xf1\x21\xb4\x88\xc1\x4a\x27\x07\xd1\x35\x83\x53\x67\x16\
\xd6\x6b\x76\xf5\x71\xe4\x52\x38\xee\x94\x72\x97\x06\x7a\x04\x84\
\xa0\xe8\xab\xca\x07\xdb\xcc\xa9\x40\xa7\xa0\x12\x6d\x0a\xcd\xc2\
\xb2\xd2\x4c\xf6\xc9\x60\x85\xe5\x72\x5c\xb7\x81\x61\x24\x82\x28\
\x42\xd4\x1f\xa9\x81\xf0\x41\x6a\x78\x5e\x83\x81\xe1\xfe\xdc\x83\
\xb7\xdd\xfd\x28\x20\xc8\xe6\x76\x12\xea\x0c\x85\x0c\xe0\x4b\x20\
\xc3\x8a\x97\x0c\x46\x48\x16\xe7\x8e\x51\xab\x2e\x70\xe4\x92\x1d\
\xbc\xf3\x6d\xaf\x65\x78\xb0\x7b\x05\x82\xfb\x1f\x39\xc5\xbb\xff\
\xee\x0b\xe8\xba\xc9\xc0\xd0\x3e\x0c\x33\x64\xd6\x14\x3b\x5d\xab\
\x2e\x51\x2a\x4c\xf3\x3f\xde\xf9\x31\xfe\xf7\x1f\xff\x5c\x57\x0d\
\x9f\xae\x6b\xfc\xe6\x2f\xbe\x84\xa1\x81\x0c\x7f\xff\x91\xff\xa0\
\x5c\x5c\x24\x37\x30\x1a\xb0\x58\x8a\x6d\xfb\xd3\xc7\x9f\xc1\x8f\
\x8c\x1e\xe7\xc7\xb7\x9f\xe1\x53\xb3\x3b\x29\x16\x4d\x12\xb6\x4d\
\x3a\x9d\x22\x91\x4a\x60\xd9\x26\x86\x61\x44\x09\x8e\xcf\xc6\xbe\
\x97\xec\x55\x68\xeb\x4d\x9e\xbd\xb0\x57\x5b\x31\x17\x9d\xab\x63\
\x8f\x83\xab\xef\xf5\x9c\xd9\x69\x17\x62\x9f\xba\x59\x2f\xd7\xca\
\x56\x1f\x47\x2f\xfa\xa9\xad\x6a\x3b\x6e\x17\x4c\x14\xa1\x94\x12\
\xbf\xba\xc8\x55\x33\x1f\x88\x96\x55\x76\x3f\x8f\xca\x9e\x17\x00\
\xf0\xc1\x8f\xdf\xc2\xa3\xdf\xbe\x1d\xd3\xbd\x66\x4d\x80\x05\x50\
\x5c\x59\x26\x9d\xc9\x32\x30\x30\xc8\xfe\x43\x87\x39\xf9\xf8\x09\
\x0a\xcb\xfd\x3d\x91\x9f\xad\x8d\x4f\x8c\xa1\x07\x37\xe3\xcc\x93\
\x5f\x88\x96\x7f\xe2\xa8\x4e\x26\x9d\x66\x68\x68\x88\x4c\x26\x13\
\x4d\xa0\xbd\x5b\x38\x8d\x08\xa4\xd6\x02\x58\xc1\x73\x55\xf0\xbd\
\xd2\xed\xf4\x9b\xc9\x7d\xab\xac\x58\xae\x21\xa5\x8a\xc0\x0b\x45\
\xee\xbe\x54\x00\x2b\xdd\x87\x8b\x10\xe0\xee\xfb\x4e\x70\x7a\x6a\
\x91\x7c\x7e\x77\x0b\x5c\xc5\xa2\x25\xc3\xe3\xb6\xcc\x14\x3b\x77\
\x3c\x8d\xd1\x91\x4b\x71\xdd\x7a\xc4\x9e\x08\xc0\x34\x15\x1b\xb5\
\x5c\xe8\x1d\x60\x85\x2e\x42\xc7\xad\x23\xd0\x10\x9a\x02\x59\x83\
\xb9\x3d\x3c\xfb\x86\x5f\x0d\xea\x18\x3a\xf8\x9e\xc3\x13\x67\xee\
\x66\x6a\xee\xa1\x35\x35\x3d\xdd\xec\xd1\xc7\xa6\xf9\xf2\x6d\x0f\
\xae\xbb\x8e\xa6\xe9\x18\x41\x91\x66\x5d\x42\x26\x35\xc4\xc9\x33\
\x9b\x03\x3e\x4d\xb7\x46\xc2\xca\x44\x49\x3f\x8b\xbe\x72\x39\x6e\
\x33\xce\xb4\x22\xff\x02\xd4\x92\xb4\xf3\x4c\xcd\xce\xe0\x79\x7e\
\x4f\xa9\x31\x20\x06\x48\xbd\x3a\x02\xc5\x82\x75\x82\x2c\x29\x14\
\x83\x35\x90\x1b\x59\xa7\xa5\xd5\x76\xf4\xc4\x0c\xa6\x95\x42\xd7\
\x2d\x05\x04\x23\x84\x15\x5c\x07\xa1\xd4\x4b\xa8\x7b\x48\x69\xe5\
\x34\xb5\xea\x02\xcf\xbc\xfe\x12\xfe\xf0\xad\xaf\xc6\x34\xbb\xff\
\xc6\x96\x0b\x15\x7e\xeb\x8f\x3f\x86\xef\x4b\x06\x47\xf6\x06\x85\
\xa1\x65\x04\x8c\x10\x90\x4c\x0d\xe1\x3a\x0d\x1e\x79\x6c\x8a\xbf\
\xf9\xd0\xd7\xf8\xd5\x9f\x79\xc1\x9a\xfd\xfc\xb9\xd7\xdc\xcc\xa3\
\x8f\x4d\x71\xc7\x3d\xc7\xa8\x55\x8b\x24\x93\x59\x42\x16\xab\xe0\
\xd8\x7c\x72\xf6\x52\x5e\xb3\xed\x41\x6e\xcc\xcf\x72\x6f\xd5\xa4\
\x58\x2c\xb3\x92\x2e\x92\xcd\x64\x48\x25\x12\x58\x86\x89\xae\xeb\
\x9b\x66\x5e\x36\x02\x2b\x5b\x05\x36\x36\x04\x45\x72\x7d\x50\x25\
\xa5\x8c\xc4\xc7\x6b\xb6\xd1\x63\x3f\xd6\xb3\xad\x60\xb0\xb6\xca\
\x7a\xe9\xeb\x56\xef\xe3\x42\x39\xf6\xf5\xec\x7c\xb1\x58\xdd\xda\
\x3e\x5f\x2e\xc9\xad\x8d\x11\xde\xa4\x49\xa9\x52\x27\x1c\x7a\xf2\
\xef\x48\xf9\x4a\x03\xe1\xdb\x79\x16\x6e\x7c\x1b\xa0\x4a\x66\xfc\
\xaf\xf7\xbc\x07\x61\x26\x79\xe4\xc4\x34\x67\x66\xd7\x07\x4c\x33\
\x67\x4e\x53\x58\x5e\xc2\xf3\x3c\x46\x27\xb6\x31\x32\x36\xa1\x92\
\x20\x9e\x07\x13\x42\x70\xe8\x52\x25\x10\xd6\xeb\x4b\x24\x67\xee\
\x89\xbe\xfb\xf4\xe3\x16\xf9\x7c\x9e\xd1\x91\x11\xb2\x99\x4c\x4f\
\x11\x8f\xd0\x2e\xb0\x6f\x31\x58\x61\x1e\x2c\x2f\x72\x91\x10\xd3\
\x68\xf5\xeb\x22\xdc\x2a\x6b\x13\xcb\x07\x26\x03\x80\xd5\x6b\x1d\
\xc2\xd0\x3e\xf6\x99\xbb\x00\x02\xed\x0d\x11\x33\x95\xd6\x1a\x91\
\xa0\x3a\x74\x49\x80\x20\x91\x18\x20\x9b\x9d\x40\x15\x13\x52\x7d\
\x30\x37\xe1\x22\x1c\x88\x31\x58\x21\xb8\x12\xa8\xf4\x09\x2a\x0a\
\xcc\xc0\xb6\x52\xa4\x92\x03\xd1\x88\xaf\xc5\x92\x74\xb3\x42\xa9\
\x0a\xc0\xcd\xd7\xfe\x0c\xcf\xbe\xee\x67\x79\xc6\x55\xaf\xe1\xa9\
\x97\xbd\x9c\xab\x0e\xbe\x80\xc3\x7b\x6e\x62\xdf\xf6\x6b\x18\xcc\
\x6e\x43\x17\x3a\x46\xf0\xca\xa6\x46\x28\x57\xea\x7d\x31\x71\xa3\
\x43\x8a\xf9\x6d\x36\x2b\xc1\xd3\xad\x2a\x5f\x54\xf0\x95\x8e\x6c\
\x42\x9f\x54\x0c\x5d\xcc\xb5\x93\x4c\x0c\xe0\x79\x3e\xd3\x73\x2b\
\x3d\xef\x27\x4c\x36\xaa\xc0\x6d\xeb\xbc\x10\xb5\x4b\x90\x67\xca\
\xeb\xb9\x4c\x0e\xc0\xec\x42\x91\x42\xa9\x8a\x6d\x2b\xf7\x5c\x4c\
\xdd\x13\x83\xd9\x2d\xab\x55\x17\x28\xac\x9c\x64\xef\xce\x51\x7e\
\xef\x2d\x3f\xbe\x26\xb8\x02\xf8\xea\xed\x0f\xb1\x5c\xa8\x90\xce\
\x6e\xc3\x0a\x24\x08\xdd\xc0\x7b\x26\x37\x8e\x6e\x98\x7c\xfe\x96\
\xfb\x59\xef\x9e\x2c\x04\xfc\xee\x9b\x5f\xc1\xc4\x68\x9e\x6a\xa5\
\x80\xef\xb7\x5c\x47\x52\xc0\x3f\x4e\x5e\x89\x04\x5e\xbd\xf3\x0c\
\x8d\x46\x93\x6a\xb5\x42\xb1\x54\xa2\x50\x2a\x51\x8d\xd5\x25\x3d\
\x1b\xeb\x16\x39\xb6\xd6\xff\x67\xd3\xfe\x7a\xfb\x51\xa7\xbd\x9d\
\xe1\xe9\xb6\xfe\xba\x6d\x6c\x81\x6d\xd5\xf1\xae\xc5\x56\x6d\xa5\
\x86\x67\xab\x8e\xff\x42\x65\xd6\x3a\xad\x73\xec\x3a\x3f\x9f\x6b\
\x6d\xd4\x56\x83\xab\xce\xeb\x24\xfe\xd2\x42\x71\xf7\xf7\xca\x42\
\xe1\x78\x76\xee\x4e\xf6\x96\xef\x8a\x96\x2f\x5c\xff\x9b\x78\x09\
\x95\x38\xf4\xcd\x6f\xfb\x73\x1a\xb5\x2a\x9a\x99\x01\x33\xc5\x97\
\xef\x38\xba\x61\x9b\x4f\x3c\x76\x8c\xa9\xd3\xa7\x68\x36\x9a\x18\
\xb6\x4d\x7e\x70\x78\x4b\x85\xa4\x6b\xd9\xce\xdd\x3b\xc8\x64\xd4\
\x24\x92\x3b\xf6\xaf\x2a\x02\x12\x78\x60\x4e\x30\xdd\x48\x31\x34\
\x34\xc4\xc8\xf0\x30\xe9\x74\x6a\xd3\x2e\x01\xa5\x3b\x09\x34\x58\
\x5a\x27\xf5\xa9\xde\xfd\xef\x91\xf8\x32\x97\x51\x80\x46\x65\xed\
\x0e\x9e\x9e\x37\xe1\x22\x2c\x94\x6a\x7c\xf3\xdb\xc7\x49\x24\x07\
\x55\xc2\x50\x85\x98\x10\xc0\xaf\x4d\xfc\x23\xbf\x3e\xf1\x3e\xb2\
\x7a\x35\x58\x5b\x4d\xe2\xf1\xc9\x37\xfc\x6b\x98\x09\x84\x10\x7d\
\x01\x93\x5c\x26\x89\xa6\x09\x1c\xa7\x16\x81\x2b\x21\x44\xa4\x1d\
\x0a\x81\x8a\x10\x82\xa6\xa3\xfa\x30\xd4\x07\x83\x55\x28\xd5\x00\
\x18\x1d\xd8\xc9\xd8\xe0\x1e\x76\x8d\x1d\xe1\xe0\x8e\xeb\x38\xb2\
\xf7\x99\x5c\x73\xc9\x0b\xb9\xe1\xf2\x57\x70\xc9\xae\x1b\xd0\x35\
\x3d\x78\x69\xe4\x33\xca\xfd\x78\xb2\x0f\x37\xe1\xe8\x48\x08\xb0\
\xca\x84\x99\xf5\x85\xd0\x58\x91\x8a\x45\x4a\x6a\x55\x06\xf4\x15\
\x34\x5a\x20\x2b\x95\xec\xbf\x34\x4f\xdc\xa5\x1a\x9c\xa6\x96\x05\
\x9f\x9b\x4d\x35\xfe\x3b\x26\xd6\x2f\xcc\x1e\xb7\x63\x27\xa6\x01\
\xa2\x3a\x89\xad\x86\xc3\x93\x2d\xa2\xe5\xae\x53\x63\x69\xe1\x28\
\xe9\x54\x82\x77\xfd\x8f\xd7\x6e\x08\xe6\xbf\x7e\xd7\xa3\x00\xa4\
\xd2\xc3\x41\x8b\x9d\x90\xad\x75\xae\x2d\x2b\xcb\x72\xa1\xc2\xd1\
\xc7\xa7\xd7\x6d\x33\x9b\x49\xf0\x0b\xaf\x7f\xae\x72\x2f\xd6\x42\
\x40\xaf\x5a\x7e\xb2\x36\xc8\xad\x8b\x7b\xb8\x32\x5f\x62\x6f\xa2\
\x48\xbd\xd1\xa4\x5c\xa9\x52\x2e\x95\xa9\x56\xaa\x34\x1d\x07\xcf\
\xf3\xce\x7a\x82\x39\xd7\xc0\x65\xa3\xb6\x05\x62\x55\x24\x76\x30\
\xd1\xd0\x39\xd7\x5c\xe8\x40\x00\xe8\x9a\x17\xf1\x7c\x68\x7b\xfa\
\xb5\x8b\x61\x2c\x37\xb2\x73\x31\x9e\xf1\x73\x75\xae\x5c\xc6\xeb\
\xd9\xf7\xdc\x45\x28\xa5\xc4\xab\x2e\x73\xe5\x99\xbf\x8f\x96\x55\
\x77\x3e\x8b\xf2\xfe\x97\x00\xf0\xb1\x4f\x7f\x83\xef\xde\x73\x1b\
\xc2\x48\x21\xcc\x34\x9a\x99\xe1\xc9\xd9\x2a\x8f\x4d\x16\x38\xb8\
\x73\xb5\xf0\x34\x6e\xcb\x8b\x0b\x54\x4a\x25\xd2\xb9\x01\x3c\xdf\
\x47\x37\x13\xb8\x7e\x0d\x7c\x8f\x73\x71\x39\xea\xba\xce\xa1\xc3\
\x8a\xbd\x32\x2a\xd3\x0c\x3c\xf8\x0f\xd1\x77\x1f\x79\x58\x27\x9b\
\xcd\x32\x36\x36\xca\xe0\xe0\x20\x96\x65\x6f\xee\x47\x21\x44\xab\
\x16\x2d\x01\xee\xe8\xb2\x5a\xbf\x17\xd3\xe2\x72\x99\xf7\x7f\xfc\
\xeb\x64\x52\x09\xd2\x29\x3b\x7a\xc5\xff\x4f\x25\x6d\x6c\xcb\xc0\
\x32\x0d\x2c\xcb\xc0\x34\xf5\x55\x82\x65\xd3\xd4\x49\xd8\x66\xeb\
\x09\x5e\x88\xe8\x73\x3f\x51\x84\x27\x4e\xce\x22\x25\xa4\xd3\xab\
\x75\x4d\x57\xa7\x8e\xb2\xcd\x9c\xe3\x39\xd9\x6f\xf2\xd1\xe5\x97\
\xf2\xc9\xe5\x17\x51\x93\xc9\xf6\x81\x10\xad\xb1\x31\x8c\x44\x5f\
\x2e\x42\x21\x20\x9f\x4d\xd1\x68\xd6\x82\xff\x63\xd3\x6f\xf0\x39\
\xbc\xe1\x36\x9c\x2a\xa9\xa4\xdd\x56\xae\x65\x23\x2b\x96\xaa\x98\
\x86\x8d\xa1\x99\x10\x00\xb7\x78\xe4\x55\xe4\x6d\x09\xf4\x93\x52\
\x48\x06\x32\x8a\x75\x3a\x39\xb9\xc0\x35\x97\xef\xe9\x69\x3f\xa3\
\x41\xc4\x5c\xbd\x59\x0e\x5a\x57\x7a\xa8\x15\xbf\xe5\xa6\x9b\x30\
\x26\x29\xf8\x83\x84\x95\x6d\xa2\x5c\x58\x53\x8b\x70\xed\xc1\x9e\
\xf6\x13\x01\x2c\x27\x60\xb0\x3a\x2e\x3d\x81\x02\x79\x00\x3b\xb7\
\x0d\xf5\xd4\x26\xb4\xc0\xa4\x69\xa5\x69\xb9\xc0\x57\xbf\x0b\x24\
\x85\x95\x93\xf8\xbe\xc7\xef\xbe\xf9\x55\x1b\xee\xa3\x54\xae\xf3\
\x9d\x07\x4f\x62\x5a\xe9\xc8\xf5\xd8\xd5\x82\x5d\xd8\x89\x0c\xb5\
\xea\x12\xdf\xb8\xe7\xd8\xaa\x88\xc2\x4e\x7b\xfe\xb3\xae\xe0\x7f\
\xff\xe3\x57\x59\x58\x2e\x93\x4a\x65\xdb\x7e\xe3\x9f\x9c\x3d\xcc\
\xb3\x87\x4f\xf2\xd4\xc1\x25\xfe\x65\x3a\x4f\xad\x56\xa3\x5c\xa9\
\x52\xa9\x56\xa9\x37\xea\x24\x13\x89\x28\x09\xf1\x45\x6b\x11\xe6\
\x5d\xcd\xf8\x5c\x6c\xb6\xde\xfd\xf9\x62\x3c\x9e\x1f\xd8\xf9\xb7\
\x28\xd1\xe8\xc6\x2c\x56\x10\x83\xd4\x45\x2c\xd6\x42\xf7\xeb\x53\
\xdc\x2d\x77\x4e\xd0\xa2\xf4\xf1\x5c\x97\xfd\x27\xff\x81\xb4\xaf\
\xb2\x70\xfb\x56\x86\x85\x1b\x7f\x1b\x50\xb9\x8f\xde\xfd\xee\xbf\
\x42\xe8\x36\x9a\x91\x42\x98\xc1\xcb\x48\xf1\xa5\x7b\x66\xd9\x35\
\x9e\xc5\x36\xd7\xef\x77\xb3\xd9\xc0\x59\x9c\xc3\xb4\x13\x38\xae\
\x8f\xe3\xb8\x34\x9a\x0d\x84\x94\x24\x2c\x25\x2e\xdd\x2a\xbb\xe4\
\xb2\x83\x24\x82\x1c\x4a\x23\x77\xbf\x13\xe1\xaa\x88\xb0\x63\x8b\
\xf0\x4f\x8f\xa4\xd8\x77\x70\x88\x89\xf1\x71\x72\xb9\x6c\xe4\x1e\
\x0c\xeb\xb3\xc5\x2d\x1c\x62\xa5\x49\x8e\xff\xc8\x25\x6a\x8c\x25\
\x1a\x0a\xb4\xb8\x7e\x58\x98\x59\xcd\x06\xe1\xb6\x7a\x9f\xac\x64\
\xb9\x52\xe7\x5f\x3f\xf7\xad\xbe\xb6\x01\x25\xf2\xb5\xcc\x00\x74\
\x99\x3a\x96\x65\xd0\x74\x5c\x74\x3d\x9e\x2d\xbf\x7f\x06\x2b\x4c\
\x18\x69\x07\x01\x0e\x21\x00\x19\x36\x0a\x6c\x33\xe7\x38\x5d\x4d\
\x90\x35\x1c\xfe\xf3\xc8\xc7\x78\xcd\xe0\x67\xf8\x66\xe5\x3a\x66\
\xdd\x51\x1e\x6f\xec\xe3\xf6\xf2\x0d\xc4\x99\x08\xc3\x48\xf4\xe5\
\x22\x04\x18\xc8\xa7\x98\x9c\x2e\xb5\x01\x9f\xb0\xbd\xf8\x7b\xd3\
\xa9\x32\x36\xdc\xbb\x7b\x10\x14\x83\x65\x99\xc9\xa8\x4c\x8e\xd2\
\x79\x45\x0e\x4f\x84\x16\x32\x7f\x12\x95\x04\x54\x90\x0f\x80\xe6\
\xc9\xc9\x3e\x18\xac\x61\x35\x76\xf5\x46\x29\xa6\x75\x11\x2c\x79\
\xe3\x41\x59\x23\xc9\x36\x63\x92\xa3\xcd\x2b\x15\x96\x10\x9b\x2b\
\x2e\x1d\xd7\x60\x85\x16\x8e\x52\x78\xb7\x68\x34\x95\xeb\x7f\xd7\
\xf6\xf5\xcb\x59\xc5\x6d\x3e\x48\x99\x60\x18\xdd\xd3\x3a\x84\x10\
\xcb\x69\x56\xa8\x94\xe7\x78\xca\xe5\x7b\x78\xd6\xd3\x0e\x6f\xd8\
\xee\x37\xbf\xf3\x18\x9e\xef\x47\x6c\x5d\xd7\x46\x63\x66\x5a\x69\
\x84\x10\x7c\xfb\xc1\x27\xf9\xb9\xd7\xdc\xbc\x6e\xdb\x86\xae\xf1\
\x9a\x97\xdf\xc8\x5f\xbc\xef\x4b\x34\xea\x55\x12\xc9\x16\x38\xbc\
\xb7\xa0\x0a\xd7\x5f\x9d\x2f\xf2\x91\xd3\x2e\xcd\x46\x93\x4a\xb5\
\x42\xa5\x5c\xa5\x59\x6b\xe0\xa7\x1c\x84\x61\xa0\x69\xc1\x16\x6b\
\xcc\xe1\xf1\xfb\x43\xb4\x2c\xe6\x5e\xec\x42\x20\xae\x5a\xbf\x9b\
\x75\x6a\x42\x3b\x99\x1a\x41\x07\x68\xea\x78\x0f\xff\x89\x95\x13\
\xef\xca\xf6\x74\x03\x27\xfd\x3e\x6c\xb6\xcf\x23\xe7\x46\xcb\xb3\
\x56\x3f\xe3\xcb\xb7\x2a\x69\x66\xd8\x4e\xb7\xe3\xea\xb5\xad\x8d\
\xd6\xdb\x68\x8c\x7b\x73\x2f\x9e\xbd\xf4\x44\x6c\x50\xe0\x1e\x7a\
\x39\xe6\xce\xe8\x3d\x19\x05\x81\x85\x66\x18\x46\xb4\x4c\x88\x30\
\x19\xab\xfa\xce\xf7\xe5\xaa\xe3\xed\x36\xde\xed\x8c\x70\xb7\x3e\
\x74\xef\x77\xf8\xde\x37\xba\xd8\xaa\x68\x8f\xd0\x35\x98\x9e\xff\
\x16\x07\x4a\x77\x44\xcb\x17\xaf\xfb\x6f\xb8\x29\x35\x99\xbc\xe5\
\x77\xff\x86\x5a\xb9\x1c\x63\xaf\xd2\x08\x23\x89\x30\x92\x2c\x55\
\x34\x3e\xf1\xcd\x15\x5e\xfd\xcc\xa1\x2e\x07\xbe\x7a\x5f\xcd\x7a\
\x4d\xc1\x13\xcf\xc5\x69\x3a\x34\x1b\x0d\x16\x1b\x0d\x4c\xd3\x60\
\x30\x9f\x23\x99\x4c\x6e\xfa\x58\x40\xb9\x06\xf7\xed\x57\xcc\x42\
\x6a\xf2\x56\x52\xa7\x6f\x8d\xbe\x7b\xeb\xd7\x0c\x92\x99\x1c\xdb\
\x26\x26\x18\x1f\x1b\x23\x93\xce\x9c\x75\xc4\x90\x08\x00\x96\x87\
\xca\xd3\xd4\x69\xbd\x0a\x94\x3b\xcd\x4e\xe4\x48\xa5\x87\xa2\xf3\
\x43\x50\x33\x51\x06\x35\xda\x5a\x54\x6b\xf8\xd9\xc7\xf5\x25\x6e\
\xdd\xa7\x52\x73\x90\x34\x11\xc2\x68\x63\x05\xc2\x1a\x74\x23\x83\
\xab\x73\x10\xad\x65\x27\x82\xf2\x36\x96\x9d\x6b\x5b\x7e\x45\x4a\
\xe5\x14\xfb\xe4\x99\x51\xfe\x7d\x72\x8c\x57\xec\x98\xe3\x95\xbb\
\xe7\x78\x7e\xee\x36\x00\x16\xdc\xa1\x00\x60\xb5\xcc\x34\x12\x14\
\x4b\xcb\x34\x9a\x2e\x76\x8f\x4c\xd3\x60\x4e\xe5\x76\x8a\xe7\x4d\
\x11\x62\x35\x7b\xd2\x74\xaa\x0c\x0e\xf4\xee\xf6\x02\x28\x14\xab\
\xd8\xa6\x62\x59\x82\x9f\x23\x02\x41\x4e\xcc\xd1\x90\x19\x9a\x7e\
\xe8\x6e\x94\xd1\xf7\xb9\xd4\x08\x20\xfa\x8a\x24\x0c\xf3\x88\xd5\
\xea\x85\xb6\xe5\x4d\x69\xb3\xe2\x0f\x31\xa8\x2d\x32\xa1\x4f\xb6\
\x7d\x97\xb4\xf3\x08\x21\xfa\x2a\x2e\x3d\x3a\x9c\x45\xd3\x44\xe4\
\x06\xec\x66\xcd\x46\x00\xb0\xfa\x60\xb0\xc2\x9c\x54\x86\xbe\x3e\
\xf3\xb9\xb2\xfc\x24\x20\xf9\xf9\xd7\x3d\xa7\xa7\x76\xa7\x66\x97\
\x01\x22\xed\xd5\x46\xa6\x5c\x5c\x06\x8b\xcb\xbd\x81\xf4\xe7\x3f\
\xf3\x0a\xfe\xe2\x7d\x5f\xa2\xe9\xd4\x03\x80\xa5\x6c\xc9\x49\xf2\
\x64\x6d\x80\xab\x06\xca\x08\x7c\x1c\xc7\xa1\x5e\x6f\x50\xab\xd7\
\xa9\xd5\x1b\x34\x1d\x17\xcb\xf6\xd1\x2f\x20\x81\xf6\x56\xd9\x56\
\x44\xf5\x9d\xcb\xa8\xc8\xad\xee\xc7\x85\xd2\xd7\xff\x9b\x2d\xee\
\x16\x8c\x07\x3d\x9c\xcf\x00\x88\xb3\xa6\x6f\xce\x46\x54\xe7\xd5\
\x8b\x5c\x35\xd5\x72\x0d\xd6\xb6\xdd\x40\xe9\xd0\x2b\x00\xf8\xd4\
\x97\xbf\xcd\xb7\xbf\x79\x1b\xc2\xb0\xd0\xcc\x64\xc0\x5c\x25\xd1\
\x8c\x14\x9a\x91\x44\x33\x12\x3c\x31\x2f\xb8\xe5\x61\x97\xe7\x5e\
\xde\xdb\x61\x08\x20\x61\x99\x68\x02\x96\x9b\x4d\x1c\xc7\xa1\x5c\
\x2e\x33\x3b\x33\x0b\x02\x32\xe9\x34\x83\x03\x03\x0c\x0e\x0e\xf4\
\x45\xd3\x0f\x0e\x0d\x70\xc5\x55\x97\x01\xa0\xb9\x55\x46\xee\x7e\
\x57\xf4\xdd\xbf\x3c\x22\xb8\x67\x31\xc3\xa1\x03\x13\xec\xd9\xb3\
\x9b\xb1\xd1\x51\xec\xc4\x26\xdd\x83\x31\xd3\x02\x00\xe3\xc9\xce\
\x7e\xaa\x0b\x6a\xb3\x00\x4b\xd3\x0c\x2c\x3b\x43\x18\xff\x20\x62\
\x25\x73\xba\x09\x98\xe9\xf8\x1c\x89\xcf\x63\xc7\xe7\x06\x4c\xde\
\xd8\x48\x3b\x58\x5a\xcf\x4e\x4d\x2d\x06\xfa\x97\x54\x70\x54\x0a\
\x84\x5c\x91\x3c\x06\xc0\xfd\xcb\x59\xaa\xae\xce\x87\x4f\x6d\xe7\
\xa3\xa7\xb7\xb1\x3d\xd9\xe0\x7f\x5e\x75\x8c\xdd\xe9\xa2\xea\x4b\
\x90\x92\x00\x64\x94\x0b\x6b\xb9\x50\xe9\x9a\xcf\xa8\x9b\x0d\xe4\
\xd5\x7e\x9b\x6e\x15\x3b\xa8\x6d\xd8\x69\x8e\x53\xc7\xf7\xbd\x48\
\xe4\xdd\x8b\xf9\x52\x52\xae\xd6\x19\x1f\x4a\xe2\xf9\x7e\xa0\xed\
\x02\xcf\x97\xfc\x52\xea\x0d\x0c\x6b\xa7\xf1\x30\x79\xc0\x7d\x01\
\x1f\xaa\xbf\x2b\x3a\x76\x4d\x37\x48\x25\x72\x3c\xd9\x07\xc0\xca\
\x65\x92\xa4\x53\x36\x95\xfa\x0a\xad\x7c\x2d\x2a\x92\x70\xde\xdd\
\xce\xa0\xb5\xc8\xa8\x31\x15\xec\x43\xfd\xd1\x34\x1d\xd3\x48\x46\
\xe0\xa6\x17\x33\x0d\x9d\x1d\x13\x43\xcc\xcc\x17\x22\x9a\x44\xc6\
\xc0\x21\x28\x06\xcb\x32\x8d\x48\x17\xd6\x8b\x2d\x2c\x95\x94\x06\
\x46\x37\xbb\xb2\x2f\x12\x70\xdd\x1a\xd5\xca\x1c\xd7\x5d\xb9\xaf\
\x67\xd7\xe9\x52\x00\x94\x34\xbd\xcb\x7d\x63\x8d\x39\x51\x68\x7a\
\xcf\x3a\xbe\xd1\xe1\x2c\x13\x63\x03\xcc\x2d\x84\x63\xd8\xe2\x7a\
\xee\x59\xd9\xc6\x2b\xb7\x3d\xc2\x9e\x64\x85\x49\xc7\xa4\xd9\x74\
\xa8\xd5\xeb\x34\x9a\x0d\x1c\xd7\xc5\x97\x41\xbe\xb2\xef\x93\xc9\
\x79\xad\xa8\xc3\xad\x6c\x63\xad\x87\xfe\x73\x21\x66\xde\xe8\x58\
\xb6\xe2\x78\x7f\x60\xfd\xd9\x5a\xa9\x3f\xd6\x0a\x1a\xe9\x36\xf7\
\xae\xd5\xc6\xd9\x9a\xd6\x2b\x40\xea\x8c\x37\x0a\x16\x7e\x00\x00\
\x20\x00\x49\x44\x41\x54\x0a\x39\x9b\x28\x15\x29\x25\x8e\xe3\xb2\
\xf7\xc9\x0f\x92\xf1\xd4\xd3\xa4\x6f\xa4\x98\x7f\xfa\xef\x02\x50\
\xaa\xd6\x79\xd7\xff\xf7\x5e\xd0\x2c\xe5\x1a\x34\x52\x0a\x64\x19\
\x29\x84\x99\x44\x18\x89\xe0\x65\x73\xef\x29\x9d\xef\x9c\xee\x4f\
\xb3\x60\x99\x26\xe3\xa3\xc3\x6c\x1b\x1f\x25\x99\x4c\xe0\xba\x0e\
\xe5\x52\x89\x93\x27\x4f\x72\xd7\xb7\xee\xe6\xb3\x9f\xfb\x1c\x5f\
\xff\xfa\xd7\x79\xf4\xe8\x51\x96\x97\x97\xd7\x8d\xee\xc9\x64\x33\
\x5c\x77\xfd\x53\x94\xbb\xc7\x6b\x32\xfe\xb5\x5f\x57\xe5\x7d\x80\
\x52\x03\xde\x7e\xbb\xc5\xd0\xe0\x10\x7b\xf7\xee\x61\xcf\xee\xdd\
\x0c\x0c\xe4\x7b\x4a\x30\xba\xce\xe0\x01\x44\x2e\x42\x27\x0a\x04\
\x95\xf1\xaf\x37\x0d\xb0\x3a\x89\xff\xd6\x44\xa9\x6c\x1d\x55\x42\
\xb4\x7e\xfc\x1d\x29\xf1\x82\xfa\x6f\xe3\x23\xbd\x81\x1b\x50\x2c\
\x8f\xae\x5b\xed\x7b\x94\x92\x1d\x96\x62\xb6\x9e\xac\x24\x5b\xda\
\x28\xa1\x33\xd5\x48\x33\xdd\x48\x62\x08\x97\xb4\x5e\x01\xd1\x22\
\x91\x5b\xb9\xb0\xfa\x88\x24\x0c\xa2\xdd\x1c\xb7\x06\xb1\x49\x4f\
\xca\x20\xd9\x81\x94\x34\x1c\x35\xe1\xf6\x13\x41\x58\x2c\xa9\x34\
\x16\xa6\x91\xc4\x97\x3e\xbe\xf4\x70\x7d\x0f\xcf\xf7\x49\x8a\x15\
\xca\xae\x8e\xef\x7b\x6c\xd3\x1e\xc5\xf3\x5b\xdf\x79\xbe\x47\x36\
\x35\xc2\xcc\x5c\x81\x66\x73\xb5\x5b\x79\x2d\xdb\x31\x31\x48\xb5\
\xbe\x1c\xa5\x68\x08\x29\xf3\x59\x4f\x25\xde\xcc\x6b\xcb\xed\xc7\
\x85\xc4\x34\x12\xac\x14\xab\x1b\xb4\xdc\x6e\x7b\x77\x8e\xe0\x38\
\x35\x3c\xaf\x19\xf3\x45\xb5\xae\x85\x66\xb3\xcc\x8e\x6d\x83\x7d\
\x25\x19\x5d\x58\x2e\xa1\xeb\xa1\x7b\xb0\xc3\x21\x15\xec\xa3\x56\
\x55\x4c\xdb\x4b\x9f\x7f\x4d\xcf\xed\x86\x40\x49\xd3\xcc\xd5\xed\
\xc6\xdf\x63\x62\x47\x4d\xd3\x29\x57\x6a\x3d\x47\xe7\x5e\x7d\xd9\
\x6e\x7c\xdf\xc3\xf3\xda\xcf\xd5\x77\x8a\xaa\xd4\xd1\xa5\xd9\x32\
\x9e\xa7\x58\xac\x66\xb3\x49\xa3\xd1\xc0\x71\x54\x4d\x53\xb9\x89\
\x68\xc2\xf5\x22\x99\x7a\x7d\x6d\x85\x75\x6b\xaf\xf3\xf3\x66\xfa\
\xb4\x91\x78\xbf\xdb\x76\x5b\x31\x26\xfd\x1c\xcb\xd9\x1c\x6f\x3f\
\xe3\x7a\xae\x5e\x17\x9b\xad\x25\x5c\x0f\x8f\x67\x3d\x90\x14\x1e\
\x6f\x2f\x6d\x6c\xf4\x5a\xcf\xce\xbb\x8b\x30\x74\x3d\xa5\x16\xbf\
\xc3\xa1\xd2\xd7\xa3\xe5\x4b\xd7\xfd\x17\xdc\x8c\xd2\x28\xbc\xf5\
\xf7\x3f\x40\xb5\x54\x40\x33\x12\x01\xa8\x6a\x81\x2c\xcd\x48\x22\
\xcc\x00\x60\xe9\x36\x42\xb7\xb8\xe5\x78\x82\x42\xd3\xe7\x87\xf6\
\x57\xe8\xb1\x2e\x30\x00\xe9\x74\x9a\xfd\xe9\x34\x7b\x76\xed\x64\
\x61\x61\x91\x33\x53\x53\x9c\x39\x73\x86\x7a\xad\xce\xc9\x95\x02\
\xc7\x8e\x1f\xa7\xd1\x68\xe0\x3a\x0e\xb9\x5c\x8e\xe1\xe1\xe1\xb6\
\xd7\xe1\x4b\x2f\xe1\xa9\x37\x5c\x83\x61\x18\x08\xe9\x31\xfe\xf5\
\xb7\x92\x9c\x69\x65\x6d\xff\x9d\x5b\x75\xaa\x5a\x8e\x23\x3b\x77\
\xb0\x7f\xff\x3e\x26\xc6\xc7\x48\x24\x12\x5b\x70\x31\x4b\x44\xa0\
\x6b\xf2\xc3\x9a\x6f\xb1\xef\xa0\x7f\x0d\x56\x7b\xeb\x6b\xe8\x38\
\x62\xac\x50\x2c\xd1\x91\x02\x20\x42\x69\x7a\xba\x89\x90\x5d\xb7\
\xce\x60\x3e\xb3\x6e\xd8\x7c\xa7\x2d\x17\xaa\x8a\xb9\x08\x73\x7f\
\x49\xa5\x5a\xcf\xeb\x25\x5c\x29\xa8\x78\xea\xd2\xd5\x34\x0d\xc3\
\x34\x31\x74\x8d\xa2\xa7\x26\xe3\x01\xbd\x48\xc5\x4f\x13\x4e\x92\
\xc6\xa6\x92\x8d\x06\x0c\x96\x53\x43\x26\x21\xac\x87\x19\x81\x07\
\x01\x8d\xc0\x25\xd6\x4f\x04\x61\x31\x88\x20\xb4\xcc\x24\x9e\xf4\
\x41\xaa\x91\xd2\xf0\x49\x8a\x32\x77\x17\x72\xe4\x4c\x97\x43\xb9\
\xd3\xf8\xbe\x83\x1f\xe4\xea\x07\x49\x26\x35\xc4\xec\xd2\x09\x4e\
\x4f\x2f\x71\x60\x4f\x6f\x49\x4d\x77\x4c\x0c\x71\xec\xf1\x19\x1a\
\x4e\x15\xd3\x48\x44\x40\x6a\xce\x55\x62\xed\xac\x56\x08\x58\x93\
\x16\x70\x34\x8c\x04\x85\x62\xef\x69\x1a\x00\xf6\xec\x1c\xe1\xb6\
\xbb\x8f\x52\x6b\x14\x49\x25\x87\x5a\xec\x95\x54\x35\x08\x5d\xb7\
\xc1\xae\x6d\xbd\xeb\xaf\x00\x16\x16\x4b\xe8\x66\x2e\xa6\x39\x6a\
\x67\xc5\x40\x25\x03\x05\x82\x3a\x81\xbd\xd9\xd2\x4a\x19\x21\x34\
\x84\xa6\xb7\xf1\x6c\xeb\xfd\x2a\x35\x4d\x47\x4a\x28\x55\xea\x3d\
\xd5\x9e\xbc\xf2\xd2\x9d\x7c\xf1\xd6\x07\x70\xdd\x06\x9a\x9e\x24\
\x4c\x86\x3a\xdd\x50\x60\x7c\xc0\x72\xf0\xa5\xc4\xf5\x5c\x05\xb0\
\x9a\x8e\x4a\xd5\xd0\x43\x66\xf0\x8b\xc5\xb6\x82\xcd\xd9\x4c\x1b\
\xf1\xc9\x73\xab\xec\x07\xec\xd5\x0f\x6c\x33\xb6\xa9\x52\x39\xdd\
\x10\x7a\x3f\xe6\xd5\xcb\x5c\x39\xf9\x77\x84\x37\xca\xfa\xf8\xb5\
\x14\x0f\xbf\x1a\x80\x2f\xdd\xfe\x30\x77\xdf\x7e\xbb\x02\x4f\x81\
\xde\x4a\xb1\x58\xc9\x88\xb5\xd2\xf4\x04\x9a\x6e\x45\x2f\xa1\x9b\
\x3c\x30\x63\xb3\xd2\x4c\xf3\xa2\x43\x0b\x24\x8c\xfe\x9e\x00\x75\
\x5d\x67\x7c\x7c\x8c\xf1\xf1\x31\xae\xba\xf2\x0a\xce\x9c\x51\x40\
\x6b\x66\x66\x9a\xa9\xa9\x69\x1c\xc7\x61\x71\x71\x91\xc5\xc5\x96\
\x2e\xe5\x19\x37\x3d\x9d\x57\xbf\xee\xc7\x94\x48\x5e\xfa\x8c\xde\
\xfe\x3b\x6d\xba\xab\x3f\xb9\x53\xf0\xb1\xe3\x69\xf6\xec\x19\xe7\
\xc0\x81\xfd\xec\xda\xb9\x83\x6c\x36\xab\xc0\xd8\x59\x03\x2c\x11\
\x31\x58\x9e\xd4\x63\xf8\xaa\xf5\x83\xde\x3c\x83\x15\x34\x13\x80\
\x27\x21\x25\x13\x76\x91\xa2\x97\xa4\xea\xd9\xc1\x34\x21\x82\x09\
\x23\x0e\xaa\x82\x0d\x43\xe0\x25\x05\x52\xa8\x35\x3c\xaf\xc1\xc4\
\x68\x6f\x45\x8a\x41\x61\x98\x62\xb9\x8a\x9d\x18\x0a\x3b\x13\x4d\
\x84\x79\xbd\x4c\xc1\x89\x81\x2b\xc3\x20\x61\xdb\x24\x12\x36\x35\
\xa1\x80\xce\xa0\x59\xe4\x8c\xb3\x2d\xe8\x8e\x8c\x00\x56\x7f\xc9\
\x46\x83\x24\x9d\xcd\x2a\xbe\x54\xae\x3c\x11\xbd\x2b\x07\x6a\x3d\
\x04\x58\x7d\xb8\x08\xc3\x1c\x58\x86\x91\xc0\x0b\xa2\x2b\x05\x82\
\xa4\x58\x41\x20\x29\x3a\x06\x4b\x4d\x93\xcb\x72\x15\xb2\x4c\xb3\
\xe4\xab\x71\x93\x40\x32\x48\x57\x30\x33\xbf\xd2\x3b\xc0\x1a\x57\
\xfa\xb0\x4a\x6d\x99\x5c\x66\x22\x60\xe3\x24\xb3\xae\x6a\x37\x2b\
\x56\x5a\xe0\xca\x0f\x18\x2c\x33\x89\xeb\xf9\x54\xaa\x8d\x9e\xcb\
\x1b\xed\xd9\xa9\x22\x13\xeb\xf5\x15\x52\xc9\xe0\xbc\x49\xc5\x5e\
\x35\x1a\xaa\x9a\xc2\xae\xed\xbd\xeb\xaf\x8a\xe5\x1a\x8e\xeb\x61\
\x27\x6c\xba\xb1\x57\x8a\x51\xf4\x69\xd4\x97\x39\xb0\x67\x8c\xa1\
\x81\xde\x41\x6e\xd8\x96\xd3\x28\xc5\x26\xc1\x56\x01\xf3\xe0\x3f\
\xe2\x42\xda\x90\x89\x32\x7a\xfc\x5d\x85\x39\xc8\x7c\xdf\x8f\x22\
\x34\x05\xb0\xec\xa8\xf1\xcc\x9b\x2e\xe0\xe3\xf9\x8a\xcd\x6f\x36\
\x9b\x38\xae\x83\x17\x94\xec\x52\x02\xdd\xde\x27\xe8\xad\x60\x20\
\xb6\x32\xaf\x53\x37\xa0\xd1\x6f\x1f\xd7\x6b\xa3\x9b\x9b\x70\xbd\
\xff\xcf\xc6\xd6\xeb\x47\x67\x7f\x36\x73\xbc\xfd\x80\xc6\xb3\xb1\
\x5e\xda\xb8\x58\x40\x61\xc8\x1e\xad\xc5\x66\xf6\xba\xfd\x46\x6d\
\x6c\x94\x9b\x6e\xa3\x7d\xf5\xc5\x60\xad\x87\xca\x7b\x41\xec\x52\
\x4a\x3c\xcf\x63\xcf\xa9\x0f\x91\xf3\x94\x96\x44\xea\x36\xf3\xcf\
\x78\x07\x20\xa8\xd5\x1d\xfe\xe8\x4f\xfe\x01\x34\x03\xa1\xd9\x0a\
\x50\x99\x21\xc8\x8a\xb9\x06\x75\x3b\x00\x60\x0a\x5c\x69\xba\x89\
\xd0\x74\xce\x94\x13\xfc\xeb\xa3\x29\x9e\xb1\x6b\x91\x7d\xf9\xde\
\x35\x24\x71\x33\x0c\x83\x3d\x7b\x76\xb3\x67\xcf\xee\xa8\xcf\xcb\
\xcb\xcb\xcc\xcd\xcd\x31\x3f\x3f\xcf\xd2\xd2\x12\x2f\x7d\xf9\x4b\
\x78\xd9\x8f\xbe\x38\x3c\x2a\x46\xee\xfa\x23\x32\x4f\x7c\x3e\x6a\
\xe3\x1f\xee\x13\xfc\xe9\xb7\x52\x6c\xdb\x3e\xc6\xa1\x83\x07\x39\
\xb0\x7f\x3f\xa3\x23\xa3\x58\x56\x7f\x89\x36\xd7\x32\x29\x5b\x0c\
\x96\x23\xc3\xc2\xba\xed\xae\x93\xb3\x02\x58\x31\xf0\x64\x69\x1e\
\x5f\xb8\xe6\xdd\x00\xf8\x08\x1c\x5f\xa7\xe1\x1b\x38\xd2\xa0\xe1\
\x9b\x34\xa5\x41\xd3\x37\x68\x06\xff\x7f\x7a\xf1\x3a\x3e\xbd\x78\
\x7d\x04\xbc\x7c\xdf\xc1\xf7\x3d\x26\xc6\x7a\x77\x0f\x96\x2b\x75\
\x7c\x5f\xa2\x6b\x66\x04\x92\x44\xe0\xf3\xcb\xe9\x25\xe6\x6b\x06\
\x42\x4a\x34\xa1\x0a\x67\xa7\x52\x09\x72\x99\x0c\x0d\x53\xed\x63\
\xd0\x28\x04\x2e\x42\x89\x90\x02\x3d\x10\x49\xf7\xe3\x22\x0c\xdd\
\x7e\x0d\xa7\xa2\xae\xeb\x08\x74\x06\xb5\xfb\x68\xe5\xc0\xea\x27\
\x8b\x7b\x98\x03\xcb\x8c\x00\x96\x72\x73\x26\x75\xc5\xc4\x14\x1c\
\x83\x62\x00\x20\xb3\x62\x86\x39\xbf\x55\x5c\xda\x36\x55\x9f\xe6\
\x16\x7a\x2f\xff\xb4\x7d\xa2\x05\xb0\xb2\xe9\xb1\x88\x05\x7a\xbc\
\xa9\x52\x30\x64\xb4\x12\xbe\xf4\x23\xe0\x25\x69\x31\x7e\x2b\xc5\
\x6a\xcf\x00\x6b\xef\x4e\xd5\xcf\x46\xa3\x10\x5d\x8f\xa1\x4b\x32\
\x8c\x20\xec\x27\x45\x43\xa8\x01\xd3\x83\xbe\x74\x63\xaf\x9a\x8d\
\x22\xbe\xef\xf5\xc5\x5e\x81\xaa\x89\x29\xa5\x64\x71\xfe\x58\x5f\
\xdb\x01\x98\x66\x6f\xb7\xcc\x5c\x4e\xe9\xfe\x5a\xee\x3e\xd5\xef\
\x82\xab\x8e\x27\x67\xba\xa8\x18\x12\x0f\xcf\x77\x71\x1c\x17\xd7\
\x73\xf1\x3d\x2f\x72\x47\x5f\xcc\x76\x3e\xd9\xab\x4e\xb0\x03\x3f\
\x60\xaf\xfe\x6f\xb1\x38\x40\xea\x04\x3b\xf1\x8a\x01\xdd\x22\x4d\
\xbb\x09\xe0\xbb\xb5\x73\x36\x76\xde\xf2\x60\x85\x68\xd1\x5e\xfc\
\x2e\x87\x0a\x5f\x8b\x96\x2f\x5d\xf3\x2b\x38\xd9\x5d\x00\xfc\xd6\
\x3b\x3f\x4a\x69\x65\xa5\x05\xae\x02\x41\x7b\x08\xac\x34\x23\x89\
\xa6\xdb\x68\x01\xb0\x6a\xbd\x0c\xf5\xd2\x74\x4a\xae\xc1\x97\x4f\
\xee\x62\x22\x53\xe3\x69\x13\xb3\x4c\xa4\xfa\xd3\x92\x74\x9a\x10\
\x82\xa1\xa1\x21\xb6\x6d\x9b\xe0\xe0\xe1\x03\xec\xde\xbd\x33\x0a\
\xa3\xd7\xeb\x4b\x8c\xde\xf1\x76\x52\x67\x6e\x8f\xd6\xff\xc4\x51\
\xc1\x6f\xdd\x96\x62\x6c\x7c\x8c\xc3\x97\x1c\xe2\xc8\x91\xcb\xd8\
\xb5\x73\xe7\x59\x25\x16\x8d\xf5\x26\x7a\x0b\x01\x96\xe7\x87\xf2\
\x6b\xf5\xb4\x2d\x83\x30\xda\xb3\x05\x58\x2d\x17\xa0\xb2\x95\xa6\
\xc1\xb1\x52\x1a\x5b\xf7\xb1\x34\x1f\x5b\xf3\xb0\x75\x87\x8c\x26\
\xb1\x2d\x9f\x84\xe6\x61\x6a\x92\x2f\x2e\x5d\xdd\x02\x45\x52\x89\
\x90\xa1\x3f\xfd\x55\xa8\xff\xd1\x74\x2b\x00\x49\xaa\x3b\x9a\xf0\
\xc9\xe8\x35\x8e\x3b\x59\xe5\x92\xd4\x34\x4c\xc3\x20\x99\x48\x90\
\x49\x67\x70\x4c\x05\x26\x06\x8c\x00\x80\x04\x93\xbc\x61\x84\x00\
\xab\x77\x06\x2b\x64\xa5\x9a\xcd\x0a\x12\x55\xa2\x45\xc8\x90\xc5\
\x22\x00\x58\xea\xd8\xf2\x3d\xb8\x8c\x42\x0b\x19\x2c\x5d\xb7\x71\
\x7d\x3f\xe2\xfe\x12\xba\x72\xc9\x15\x1d\x9d\xd9\xba\x02\xe2\x79\
\x31\x83\xeb\xb7\xca\x42\x59\x96\x02\x72\xf3\x8b\xbd\x03\xac\x7d\
\xbb\x15\xf0\x29\x55\xe6\x19\x1d\x3a\x14\x31\x81\xa7\xdd\x5d\x54\
\xfd\x14\x29\xad\x4a\x4a\x14\x29\xcb\x4c\xf4\x1b\x0d\xa3\xf6\x56\
\x8a\xd5\x9e\x13\x83\xb6\x18\xac\x42\x0c\x5c\x05\x5a\xb5\x46\xff\
\x29\x1a\xa2\x08\x42\xc3\x8e\xdc\x9a\xc4\x80\x1b\x48\x95\x77\x0b\
\xd8\xd9\x47\xbb\x00\x2f\x7b\xfe\xb5\x5c\x79\xe9\xae\xbe\xb6\x09\
\xcd\xea\x11\x60\xe5\xb3\x41\x70\x86\x54\x69\x55\x40\xfd\x3a\x0b\
\x71\x06\x4b\x4a\x7c\x5f\xe2\x7a\x1e\x9e\xef\xe1\x7b\x7e\x00\xe6\
\xbb\xdf\xf8\x7f\x60\xdf\x3b\xfb\x01\x68\xba\xf8\x2c\xce\x2e\xc6\
\xf5\x54\xe1\xb2\xf3\x61\x7d\x01\xac\xf5\x3a\xb5\x16\xaa\x8f\x9b\
\xd3\xac\xf2\xd4\xc9\xf7\x06\xec\x06\x34\x46\xaf\xa4\x70\xd9\xeb\
\x01\xb8\xf5\xee\xe3\xdc\x76\xeb\xed\x01\x60\xb2\x5b\x2e\xc1\xb8\
\xee\x4a\xb7\x11\x86\xd2\x5d\x69\x86\x85\x16\xb0\x57\x9a\x66\xa0\
\x69\x3a\x42\xd3\x11\x9a\xaa\x1d\x37\x5b\x4d\xf1\xe9\xc7\xf7\xb1\
\x2b\x53\x66\xff\x40\x81\xdd\xd9\x12\x09\xbd\x3f\x7d\x83\x10\x82\
\xe1\x91\x21\xc6\xb7\x8d\xb1\x73\xe7\xf6\xa8\xbe\x20\x40\xea\xcc\
\xed\x8c\xde\xf1\x0e\xf4\x7a\xcb\x6d\xf8\x95\x27\x04\xbf\xfc\xa5\
\x04\x43\xc3\xc3\x1c\x3a\x78\x90\x2b\x2f\xbf\x9c\xfd\xfb\xf6\x32\
\x38\x38\x80\x65\x59\xab\xc6\xa3\x97\x31\xeb\xf6\xbd\x00\xf4\x28\
\x4d\x83\x8e\xaa\xd1\x16\x36\xaa\xde\xce\x0e\x60\xa9\x86\x64\x4c\
\xdf\x75\xb4\x94\xe6\xcd\xdf\x3e\xdc\xd6\xc7\xb8\xfa\xeb\xa7\xf6\
\x4e\xf1\x8b\x07\x4f\x33\xd5\x1c\x04\x54\x71\x5f\x29\x24\xae\xd3\
\x00\xe8\x39\x7a\x0f\xe2\x20\xc4\x54\x63\x14\x60\xbd\x9c\x51\x42\
\x20\x59\x69\x1a\xd1\xfe\x35\x5d\xc3\xb2\x6c\x52\xc9\x04\xae\xad\
\xd2\x12\x0c\x06\x60\x45\x06\x6e\x2a\x7d\x13\x2e\xc2\x91\xa1\x00\
\x60\x39\xd5\x20\x67\x4a\xa8\x33\x53\x2e\x42\x64\x8b\xc1\xea\x45\
\x93\x13\x5a\xa8\xc1\xd2\x75\x2b\xaa\xd1\x08\x90\x14\x21\xc0\x32\
\x22\x80\x35\x20\x66\x94\x4e\x2b\x38\x1a\x33\x88\xa8\x9c\xeb\x03\
\x60\x5d\xb2\x6f\x1b\x9a\x26\x28\x55\xe6\xf0\x09\x27\x70\x35\x36\
\xff\x56\x7a\x2d\xdb\xf4\x53\x34\x7c\x43\xe5\x88\x09\xce\x66\x98\
\x9b\xad\x9f\x6b\x28\x93\xb2\x19\x1e\xcc\x50\xaa\x14\x83\x2a\x02\
\x2d\xe1\x7c\x33\x60\xb0\x76\x6f\x22\x07\x56\x08\xb2\x3b\xc1\x95\
\x94\x12\xcf\x6f\x02\xfd\x69\xe0\x00\x9e\x75\xc3\x61\x9e\x75\xc3\
\xc6\xf9\xb2\xce\xc6\xf2\xd9\xb0\xa2\x41\x0b\x60\x09\xa0\xee\xe9\
\x34\x7c\x9d\x9c\xe9\xb6\x9c\x90\xbe\x54\x01\x0d\x9e\x0a\x68\x88\
\xbb\x2e\xba\xdd\x33\x36\xab\x7d\xdd\x68\x79\x27\x03\x14\x4e\x4a\
\x67\xfb\x74\xdf\x8d\x3d\xd8\x8c\x6d\xb4\xef\x0b\x09\x90\xf6\xc3\
\xa6\x75\x1b\xe7\xce\x36\x36\xb2\x8b\x15\xfc\xad\x75\xfd\x6d\x6c\
\x41\x04\x7b\x47\x5b\xf1\x36\x42\xf7\xde\x5a\xa0\x6a\xad\xfd\xf5\
\x33\x96\x1b\xb9\x18\x7b\x06\x58\xeb\x0d\xc4\x7a\x40\x21\xbc\x78\
\x3c\xcf\x63\xcf\xc9\x7f\x26\xef\xaa\x04\x92\x52\xb7\x98\x7b\xc6\
\xef\x81\xd0\x68\x38\x2e\xbf\xff\xa7\x1f\x02\xa1\x23\x34\x53\x81\
\xab\x10\x58\xe9\x01\x7b\xa5\x27\x14\x7b\xa5\x5b\x01\xc8\x0a\xd8\
\xab\x08\x58\xe9\x2a\xa4\xbb\xa3\x6f\xa7\xcb\x19\x4e\x97\x33\x08\
\x21\x99\x48\x55\xd9\x93\x2b\x91\xb7\x9a\xa4\x0c\x87\xa1\x94\x8f\
\x8e\x83\x94\x12\xd3\x34\xb0\x13\x36\xb6\x6d\x93\x4c\x26\x18\x1e\
\x1d\x66\x6c\x7c\xb4\xdd\x25\x20\x7d\xd2\x93\x5f\x27\xf7\xc8\x87\
\x49\xce\xb4\x27\xe5\xfc\xe0\x03\x82\xff\xfe\x1f\x09\x06\x86\x46\
\xb8\xe4\xe0\x41\xae\xba\xe2\x72\x0e\x1e\x3c\xc0\xc8\xf0\x30\xb6\
\x6d\xb7\xdd\x2c\xfb\xa1\xba\x3b\xd7\x0f\x3f\x87\x69\x1a\x1c\x19\
\xa4\x53\x88\x4d\x3c\xd0\xbb\x56\x64\xb5\xb5\x74\x27\xea\xbf\xee\
\x17\x65\x58\x42\x42\x0f\xd8\xbc\x6d\x29\x95\xeb\x6a\xaa\x31\x18\
\x20\x2f\x05\xb2\xc2\xe4\x93\x13\xa3\x5d\x92\x3a\xae\x61\x11\x83\
\x15\x44\x79\xc9\xc0\x3d\x97\xd3\x94\x8b\xaf\xe8\x06\x1a\x2c\x21\
\xd0\x35\x0d\xd3\xd0\xb1\x6d\x9b\xa6\x39\x08\x12\x06\xf4\x02\x61\
\x42\x56\x89\x02\x6a\xd0\xaf\x8b\x50\xe5\xec\x6a\x3a\x81\x06\x2b\
\x10\xf3\x0b\x84\xd2\xf9\xa3\x4a\xe9\x40\x7f\x0c\x56\x08\xb0\x0c\
\xc3\x8e\x34\x58\x00\x29\x54\x34\x6d\xd1\x31\x98\x0b\x00\xd6\x90\
\x36\x83\x17\x4b\x44\x6b\xe8\x2a\x72\xb2\x1f\x17\x61\x32\x61\xb2\
\x77\xe7\x28\xa7\xa7\xe6\xf0\x7d\xaf\xc5\xa5\x48\xc9\xbf\xae\xbc\
\x92\x48\x6d\x24\x5b\xe3\x55\x0f\x00\x51\x3f\xa0\x18\x14\x8b\xf5\
\x9d\x07\x4f\x2a\x80\x26\x34\xc2\xa4\x84\x8d\x46\x89\x64\xc2\x62\
\x64\xa8\xf7\x3c\x68\x8b\x4b\xea\x5c\x29\xf7\xee\x6a\x70\x05\x12\
\xcf\x55\x00\xab\x1f\x17\xed\xf9\xb2\x55\xbf\xe1\x98\x1b\xdf\x97\
\x22\x0a\xc6\x91\xbe\x8f\xef\xab\xc0\x1f\x19\x81\xab\xf5\xdb\xed\
\xe6\x8a\xea\x77\x82\xed\x76\x4f\xe9\x04\x52\x71\x90\xd5\xed\x98\
\xba\xf5\x29\xde\x5e\x2f\xa0\x6e\xab\xed\x7c\x00\x8d\xb3\x19\xf7\
\xf5\xda\xdc\xcc\x77\x17\xa3\x9d\xaf\xf3\xbf\xde\x7e\xd6\x7a\x78\
\xd9\x68\xbb\x8d\xf6\xd9\x69\x9b\x8a\x22\xec\xf6\x79\xbd\x9d\xfb\
\xbe\x8f\xbd\xf4\x30\x87\x57\xbe\x14\x2d\x5f\xbe\xea\x4d\x38\xf9\
\x7d\x00\xbc\xfd\xdd\x9f\x62\x65\x69\x09\xa1\x5b\xea\x65\x24\x10\
\x7a\x08\xb2\x12\x01\xa0\x0a\x35\x57\xed\xcc\x95\xd0\x8c\x18\x73\
\xa5\xad\x19\x0a\x24\xa5\x60\xba\x92\x66\xba\xa2\x6e\xc6\xdb\x07\
\x75\xde\xf1\xa2\x11\x46\x72\xaa\x82\xfd\x7a\x99\xec\xb5\x66\x89\
\xec\x63\x9f\x20\xff\xe8\x47\xa2\x14\x0c\xd1\x71\xd4\xe1\xcd\x5f\
\xd2\xf9\xc2\xc9\x24\xa3\xa3\x23\x1c\x3c\xb0\x9f\xab\xae\xba\x92\
\x43\x87\x0e\xb6\x81\xab\xad\xb0\x38\xd8\x89\x12\x8d\x76\x6a\xb0\
\x38\x3b\x0d\x96\x04\xd5\x56\xa4\x5b\x5f\x0d\xac\x75\x5d\xc7\x32\
\x0c\x2c\xdb\x8a\x00\xe8\xf6\x94\x02\x02\xb3\xee\x40\xa0\x57\x02\
\xa4\x8f\xe7\x2a\x06\x6b\xbc\x1f\x06\x2b\x72\x11\x9a\xc1\x4d\x5e\
\xb1\x69\xb9\xc0\xf5\xb7\xd2\x34\xd5\x4d\x4e\x88\xa8\xb4\x88\x61\
\xe8\x34\xcd\x3c\x34\x55\x14\x21\x04\xf5\x18\x25\x80\x40\xd7\xad\
\xbe\x18\x2c\xdb\x32\x48\xa7\x6c\x1c\xa7\x8a\x2f\xbd\x56\x9e\xaf\
\xd8\xdf\xa6\x5b\x43\x08\x41\x36\xd3\x3d\xd3\x78\xd7\x63\x0b\xd8\
\x39\xa1\x99\xb8\x31\x80\x95\x8e\x33\x58\x0d\x05\xb0\x06\xb5\x39\
\xbc\xf0\x29\x2c\x38\xaf\x96\x99\xee\x8b\xc1\x02\xb8\xec\xe0\x76\
\x1e\x3f\x35\x47\xb5\x5e\xc0\xb6\xb2\x51\x5b\x21\x50\x89\x83\x2e\
\xa4\x02\x44\x09\xdb\xec\x8b\x99\x03\xa5\xc3\xfa\xf6\x77\x9f\xa4\
\xd1\x2c\x62\xdb\xb9\x88\xc1\x72\x9c\x0a\x07\xf6\xf4\xe7\xc6\xab\
\xd4\xd4\x75\xd3\xd2\x51\xb4\x83\x2b\x75\x5f\x51\xa0\x7e\xb0\x4f\
\x81\xfb\x2d\xdf\x78\xb8\xef\x34\x14\xfd\x5a\xa9\xac\x1e\x2c\x44\
\xa8\x05\xa4\xf5\xd8\x62\xeb\x1e\x8e\x1f\x00\x18\xd4\xf7\xd2\x97\
\x78\x01\x73\x25\x45\xeb\x27\xd4\xcd\xce\x77\x74\xde\x66\x74\x47\
\x9b\x67\x26\x2e\x5c\x36\xe6\x42\xd6\x59\x7d\xbf\x81\xb0\xef\x17\
\x8b\x00\x56\xbf\x27\xa8\x1b\xd0\x5a\xeb\x82\x73\x9b\x35\xae\x3d\
\xfd\x5e\x44\xf8\x44\x3b\x74\x19\x85\x2b\x7e\x1a\x80\xbb\xee\x3f\
\xc9\xd7\xbe\x7a\x3b\x42\x0b\x75\x55\xa1\xde\xca\x8e\x5c\x85\x9a\
\x11\xea\xae\xac\x00\x64\xb5\x80\x95\xa6\xeb\xb1\x82\x9c\xbd\xf5\
\xfd\xd0\x36\x83\xb7\xff\xc4\x28\xe9\xc4\xea\xf2\x04\xea\x40\x7c\
\x8c\xca\x34\x66\x69\x92\xf4\xc9\xaf\x90\x7d\xfc\x33\x51\xd9\x9b\
\xb8\x7d\xea\x98\xe0\x6d\xb7\x18\x14\xc9\xb2\x6b\xe7\x18\x07\x0f\
\xec\xe7\xc8\x65\x97\x72\xf0\xe0\x41\x46\x47\x86\x49\x04\xb5\xc5\
\xb6\xda\xa4\x8c\x69\xb0\xa4\xd6\xfe\x05\x67\xcb\x60\x11\xe9\x9e\
\xd4\x1d\xbe\xfd\x9c\x6a\x9a\x86\x65\x18\xa4\x53\x29\x32\xd9\x0c\
\xc9\x64\x02\x01\x6c\x4b\x35\x59\x76\x33\xb8\xd8\x08\x11\x3c\x89\
\x23\xf0\x82\x71\xeb\x07\x60\xb5\x18\x2c\x83\x88\xc1\x02\x06\x34\
\xc5\xac\x84\x51\x84\xea\x29\x44\xc3\xd0\x75\x0c\xc3\xc4\x31\x4c\
\xfc\xa6\x46\x5e\x5b\x89\xd8\x8e\xb0\xe8\xb5\x61\xd8\x2c\x2d\xf7\
\x0e\xb0\x00\x46\x86\xb2\x4c\xcd\x56\x94\x0b\x56\x2a\xf7\xa0\xca\
\x16\xa1\x00\x96\xeb\xd6\x55\x61\xe8\x3e\x7e\x3b\xa1\xc8\x5d\xd3\
\x2c\xbc\xa8\x26\xa6\x20\x2d\x0a\xd1\xb1\x55\x5d\x9d\xb2\x6b\x30\
\xa4\xcf\xb5\xb1\x5c\x20\xb1\xac\x34\x73\x0b\xbd\x97\xb1\x01\xb8\
\xf4\xe0\x76\x3e\xfb\xb5\xfb\x58\x5a\x39\xf9\x7f\xd8\x7b\xef\x38\
\x4b\xae\xf2\xcc\xff\x7b\x2a\xd7\xcd\xb7\xfb\x76\x98\xee\xc9\x39\
\x48\x48\x64\x93\x31\x71\x97\x64\x92\x00\xe3\x00\x3f\xe3\xb0\x6b\
\xbc\xc6\x89\xc5\x01\x2f\x60\x03\x5e\x83\x31\x5e\x6c\x6c\xbc\x06\
\xdb\xac\x6d\x60\xcd\x02\xb2\x41\x24\x4b\xb2\x10\x0a\x48\xa0\x3c\
\x92\x46\x9a\x91\x26\xcf\x74\x4f\xe7\x70\x63\x85\xf3\xfb\xe3\x54\
\xd5\x0d\x7d\xbb\xfb\xf6\x4c\xcf\x30\xda\xe5\xfd\x7c\xba\x6f\xaa\
\x70\xea\xd4\xa9\x3a\x4f\x3d\xef\xf3\xbe\x2f\x43\x03\xfb\x96\x00\
\xaa\x66\xc4\x1c\x34\xfc\x2a\x95\xea\x34\x57\xef\x5f\xbb\x46\x69\
\xcb\xa8\x02\x51\xb5\xda\x3c\x66\x94\x25\x5d\xe5\xc6\xf2\xd8\x3c\
\x5a\x5a\x69\xd5\x25\x56\x6f\x28\xf0\xa4\x2e\xea\xc8\x05\x2e\x5b\
\x29\x7f\x99\xb8\x58\x6d\xcb\x5c\xd3\xb6\xbf\x7e\xe3\x7d\xdc\xfa\
\x83\xb5\x0b\xdc\xcf\xd7\x04\xcd\x7b\xa3\xa3\xf9\x68\x48\xea\x51\
\x89\xab\xe4\x32\x13\x91\xd3\x43\x2c\x2d\x94\x1c\x5b\x27\x68\x59\
\x8d\x59\xea\x66\x2b\x6d\xa3\x97\x88\xb8\xd5\x96\x69\xd5\xb9\x74\
\x5b\x4f\x08\xb1\x6a\x64\xd6\x7a\xd8\x7a\xbb\x0b\x57\xea\x93\x27\
\x8a\xf5\x02\x08\x57\x3f\xa6\xd5\xdd\xb4\x97\x8b\x5d\x8a\xc8\xcb\
\xd5\x8e\xf7\xbc\x44\xee\xbd\xb2\x58\xb1\x6b\x70\xd3\x89\x7f\xa6\
\xe8\xab\x4a\xf4\x52\x33\x98\x78\xce\x07\x90\x42\xc7\x0f\x02\xde\
\xf7\xd1\x2f\x20\xd1\x9a\xda\xab\x38\xc7\x95\xd1\xc1\x5e\xb5\xea\
\xae\x34\x53\x01\x2c\xdd\x48\x98\x2b\xd1\x63\x02\xac\xa7\xed\xb4\
\x78\xcf\x1b\x4a\x18\xba\x7a\x76\xcc\x1c\xfd\x26\x7a\x75\x12\x73\
\xe1\x14\xe6\xc2\x29\x8c\x85\x93\x18\xe5\xb3\x88\x2e\x35\x02\x01\
\xca\x0d\xf8\xdc\x83\x82\xbf\xbd\xcf\xe0\x58\xd9\x21\x9f\xcb\xb3\
\x6b\x64\x03\x3b\x77\xec\x60\xf7\xae\x9d\x6c\xde\xbc\x89\xbe\xbe\
\x3e\x1c\xdb\xbe\x28\xe0\x2a\xb6\x24\x93\x7b\x5b\xa9\x9c\xd8\x8d\
\x72\x21\x79\xb0\x92\xe9\x37\xd2\xb8\xb7\x3f\x95\x6a\x9a\xc0\xb4\
\x4c\x32\xd9\x0c\xa5\xfe\x3e\xf2\xb9\x1c\x02\x18\x30\xaa\x1c\x6b\
\x8c\xa0\x6b\x9a\x4a\x96\x18\xad\xe7\xfb\x75\x1c\xdb\x4c\x34\x29\
\xbd\xd8\x5c\x0b\xc0\x8a\xdd\x73\x42\x40\x4e\x57\x6e\xa3\x59\x4f\
\xa5\xba\xd0\x20\x61\xb0\x4c\x5d\xc7\x34\x2d\xca\xa4\x12\x17\x61\
\x5c\xda\x07\x21\xd0\x75\x87\xf9\xc5\x09\x82\x20\xec\x99\xdd\xeb\
\x2f\x64\x38\x71\x7a\x4a\x01\x21\xa1\x00\xbc\x90\x22\x02\x7c\x02\
\xcf\xaf\x51\x2a\xae\x8d\xe5\x99\x5b\xa8\xa8\x71\x21\xb4\x36\x0d\
\x56\x5a\x53\x00\x2b\x8e\x20\x3c\x57\x33\x29\xb9\xe7\x08\x64\xfb\
\x38\xb4\xad\x34\x0b\x8b\xe3\x2c\x96\x6b\x64\xd2\xbd\x31\x67\x3f\
\xfe\xec\xfd\x7c\xf2\xb3\xff\xc6\xe9\xb1\x7b\xe8\x2f\xee\x40\x68\
\x3a\xcd\xf3\x4c\xe4\x7e\x53\xe7\x7c\x6a\xfa\x71\xa4\x0c\x79\xd9\
\x0b\xae\x5c\xd3\x71\x41\x53\xe8\xde\x68\xcc\x23\xe5\x30\x48\xce\
\x4b\x7f\x05\x50\xab\x2b\x80\x25\x44\x93\xc1\x6a\xde\xcc\xd4\x7b\
\x5d\x53\x7d\x35\x37\x5f\x61\x68\x0d\x19\xe2\x37\x8f\xf6\x73\xeb\
\x0f\x20\x93\x1d\x42\x37\xac\x8e\x9b\x64\xeb\xe4\xdf\xce\x0c\xc7\
\x9a\xbe\xe4\x37\xe4\x92\xf7\x8a\x95\x8a\x93\x99\x48\x74\x5d\x6f\
\xdb\xfe\x8e\xb4\x72\x05\x1f\x2f\xb7\x9c\x3b\x11\xe9\xfa\x44\x2b\
\xcf\xb5\xd4\x3a\x59\x93\xf3\x61\x51\x56\x02\x48\xdd\xb6\xbb\x1c\
\xa0\x58\x2b\x03\xd6\xb9\xfe\x6a\x6d\xbc\xd0\x89\x7a\xbd\x19\xa6\
\xcb\x99\xbd\x8a\xed\x72\x68\xd3\xe5\xda\x37\x17\xcb\x56\x3b\xde\
\xf3\x66\xb0\x3a\xd7\xe9\xb6\x23\x29\x25\xd6\xec\xa3\xec\x9d\x69\
\xa6\x30\x98\xbd\xe2\xe7\x68\x14\x77\x01\xf0\x87\x7f\xf1\x2d\xa6\
\x26\xa7\x22\xf6\xca\x8a\x80\x94\xd2\x5b\xc5\xc0\x2a\xc9\x75\x15\
\x47\x0e\x46\xc0\x2a\x66\xae\x62\xf7\x60\x2f\xf6\x92\xab\x5c\x7e\
\xf9\x95\x7d\xea\x49\x31\xf4\x18\xb8\xf5\x7d\x6d\xe9\x15\x56\xb2\
\x47\xa7\xe0\x6f\xee\xd5\xf8\xe2\x21\x0b\x4f\x73\xc8\x66\x33\xec\
\xd8\x5e\x62\xe3\xe8\x08\xdb\xb7\x6d\x65\xeb\xd6\xad\x0c\x0f\x0f\
\x91\xcb\x66\x13\x41\xfb\xc5\x1a\x68\x12\x89\x16\xa7\x69\x08\xb5\
\x24\x68\x40\xfd\x78\x7e\x2e\xc2\x04\xa0\x4a\x88\x93\x6a\x4a\x24\
\x9d\x0f\x9b\x9a\xa6\x63\x98\x06\x69\xd7\xa5\x98\xcf\x53\xea\xef\
\xc3\x96\x15\xec\x79\x8f\x73\x7e\x3f\x9a\x26\x94\x4b\x2f\x8c\x0a\
\x6c\x06\x0d\x46\x37\xac\x4d\xcb\xb3\x58\x89\xdc\x2b\x9a\x0e\x32\
\x44\x0a\x81\x94\x82\xac\xae\x18\xa8\x79\xcf\x50\x90\x52\xd3\xd0\
\x63\x2d\x98\xa1\x63\x68\x1a\x15\x91\x51\x0c\x96\x94\x0a\x60\x21\
\x41\x8a\x68\x22\x55\xec\x58\xaf\x99\xd7\xfb\x8b\x2a\xb2\xae\xe1\
\x55\x30\xcd\x54\x33\x9f\x91\x88\x19\xac\x3a\x85\xdc\xda\x80\xc3\
\xfc\x42\x15\x43\xb7\x15\xb8\x6a\x39\x6d\x19\x31\x9f\x1c\x1b\xc0\
\x78\xcd\x62\x5b\x66\x16\x64\x83\x40\xc6\x97\xa9\xc4\x34\x14\xa0\
\x1b\x9b\x98\x63\x67\x8f\x00\xab\xaf\x90\xe6\x2d\x3f\xf1\x2c\xfe\
\xfe\x9f\x6f\xe6\xec\xc4\x41\x86\x07\xaf\x8c\xb6\x26\x13\x70\x85\
\x94\x34\xbc\x32\xe7\x26\x1e\xc4\x30\x74\x5e\xf4\xec\x03\x6b\x3a\
\x2e\x20\x61\xa9\xea\x51\x7e\x29\x95\x03\x6b\xed\x11\x84\x6a\x1b\
\x5e\xf2\xbe\xe9\x02\x6f\x82\x1c\x49\x88\xd0\x14\x73\x35\x3b\xbf\
\x36\x66\x72\x4b\xd4\x4e\xcd\x30\xb1\x9d\x1c\x09\x40\x8a\xfb\xa2\
\xe5\x73\xe2\x9a\x6c\xfb\xbc\xcc\x32\x09\xb8\x92\xc9\x35\xd9\x79\
\x0f\x78\x49\xe9\x18\x00\x87\xe6\x33\x6a\x1c\x09\x81\x26\x04\x9a\
\x1e\x8f\x65\x5d\x7d\xee\x60\xb0\x3a\x41\xce\x7a\xb3\x57\xdd\xbe\
\x5b\x0b\xb0\x5a\x49\x9f\xd5\xcb\x77\x9d\xed\xbc\x50\xf6\x61\xbd\
\x18\xac\xf5\x60\x0d\x2f\x85\x5d\x0a\x2d\x58\xb4\xc4\x25\x69\xc7\
\x7a\xd8\x85\xb2\x4f\xeb\xb1\x8d\x8b\x96\xa6\x41\x4a\x89\x57\xaf\
\x71\xf5\x89\xbf\x4e\x92\x62\x36\x8a\xbb\x98\x7d\xd2\x2f\x00\x70\
\xcf\xc3\x67\xf8\xd6\xb7\x6f\x55\xa2\x76\xad\x95\xbd\xb2\x23\x17\
\x61\x7b\xb6\x76\x4d\xb7\xa2\xe5\x62\xcd\x55\xe4\x22\x14\xb1\xe8\
\x78\x79\x13\x02\xde\xf4\x9c\x0c\x6f\x79\xbe\x9a\xe8\x35\xaf\xcc\
\xd0\x4d\xbf\x81\x7b\xf6\xce\x65\xd7\x99\xa8\xc0\x63\xd3\x70\x78\
\x46\xe3\x4b\x87\x34\x6e\x3b\x6b\x93\x72\x5d\x72\xa5\x1c\x03\x03\
\x25\x36\x0c\x0f\x33\x3a\x3a\xc2\xe8\xc8\x08\xc3\x43\x43\x14\x0a\
\x79\x5c\xd7\x6d\x4b\xc5\x70\x31\x2e\x42\x75\x42\x9b\x89\x46\x3d\
\xa9\xd3\xcc\x60\xd4\x7c\xe0\x5e\x2b\xc0\x6a\x32\x5e\xf1\xc4\x11\
\x82\x10\xf8\xd1\x05\xa5\x89\xe8\x78\xa4\xc4\xd0\x74\x4c\xd3\xc0\
\x75\x1d\xd2\xa9\x14\x45\x4f\xb9\xac\x26\x82\x7e\x10\x71\x5b\x42\
\xc2\x50\x65\xf1\x5e\x8b\x7b\x10\x54\xa5\x73\x88\x5c\x2b\x51\x44\
\xa2\x40\xa2\xa3\xd8\x9c\x20\x8c\x26\x26\x14\x30\xd4\xf5\xd8\x4d\
\x68\x50\x11\x69\x86\xb4\x31\x0c\xe1\xd3\x90\x61\x52\x35\xdd\xd0\
\x95\xae\x69\x66\xae\xdc\x33\xc0\x8a\x45\xd9\x0d\xaf\x8c\x6e\xd8\
\xc4\xce\x41\x35\xaf\x86\x84\xa1\xbf\x26\x81\x3b\xc4\x25\x80\xec\
\xc8\x3d\xd8\x1c\x1f\x59\x6d\x1e\x09\xcc\xfb\x2a\x52\x75\xa2\x6e\
\x21\x90\x14\xc5\x04\xe7\x82\x66\x52\x51\xd7\x55\xb9\xa4\xee\x7e\
\xe0\x18\x3b\xb7\x0e\xf5\xbc\xdf\x9f\x7a\xed\xb3\xf9\xca\x37\x7e\
\xc0\xd8\xf8\xfd\x48\x19\x32\x50\xda\xdf\x9c\xac\x91\x54\xab\x53\
\x9c\x3c\x75\x07\x9e\x57\xe5\x5d\xef\x78\x79\xa2\x2b\x7b\xf0\xd1\
\xd3\x1c\xd8\x3d\xda\xd3\x3e\x86\x4a\x79\x2c\xcb\xa0\xd1\x58\x4c\
\xc0\xad\xe7\x29\xd6\x31\x76\x1f\xf6\x6a\xb5\x04\x60\x89\x08\xf8\
\x84\x31\xdd\x96\x30\x5a\x9a\xa6\xfa\x6a\xad\x7a\xaa\xcd\x51\x5b\
\x02\xaf\x0e\x4e\x2b\xb8\x8a\x2e\x1e\xd9\xd4\xbd\xc5\x80\xa9\x1d\
\x5c\x45\x4f\x1d\x2d\xe0\x8a\x1e\xc0\xd5\x16\x77\x8e\x9f\xdd\xf8\
\x00\xe3\x35\x9b\x7f\x3f\x57\x54\x51\xb0\x89\x86\xd0\x44\xd7\xf5\
\xe8\x01\xa5\x3b\x28\xb9\xd4\xac\x4e\x37\xc6\xec\x42\xac\xd7\x7d\
\x5f\x4e\x0c\xd6\x13\x89\x91\x59\xad\x9d\xab\x9d\xbf\xcb\x0d\x34\
\x5e\x6c\xbb\x14\xe7\xf6\x82\x5d\x84\xdd\x3e\xc7\xc2\xf6\x8d\xa7\
\xbe\x44\xbf\x77\x2a\x5a\x48\x63\xe2\xd9\xef\x47\x6a\x06\x61\x28\
\xf9\x6f\x7f\xf2\x65\x42\xb4\x08\x30\x59\x08\x33\x66\xac\x9c\x66\
\x2a\x86\x28\x4b\x7b\xac\xbb\xd2\x74\xa3\x25\x25\x43\x6f\xae\x41\
\x5d\x83\x5f\x7a\x79\x9e\x97\x3e\x59\x4d\xaa\x7a\x75\x92\x0d\x37\
\xfc\x0a\xd6\xf4\x23\xc9\x32\x37\x1f\x87\xef\x9e\xd4\x78\x7c\x56\
\x70\x74\x5e\xe7\xd8\xac\x4e\xd9\xd7\xd0\x0d\x03\xcb\x32\x71\x1d\
\x97\x6d\x5b\xb3\x0c\x94\x4a\x0c\x6f\x18\x4e\x40\x55\x7f\x5f\x1f\
\xb9\x5c\x16\xc7\x75\x93\xfa\x82\x17\x7f\x90\xaa\x41\x61\x49\xa5\
\xe5\xa9\x84\xed\xc9\x4b\xe3\x01\x93\x76\x7b\x4b\x10\x19\x9b\x96\
\xf4\x63\xcb\x44\x22\x55\x72\x51\x20\x29\xd8\x12\xa3\x59\x35\x31\
\x28\xf6\x28\x1b\x2a\x81\xf6\xb8\x5f\x8c\x74\x3d\xea\xef\x7c\x04\
\xee\x40\x9b\xb0\x5b\xb9\xf8\xd4\x67\x4d\x44\xe5\x81\xa2\x49\x17\
\x4d\x45\x11\xea\x9a\xae\x18\x00\x5d\xa7\x2a\x14\x28\xca\x1b\xf3\
\x54\x1a\x69\x35\x31\x87\x02\xad\x2d\xd9\x68\x6f\xc0\x24\x06\x62\
\x0d\xaf\x82\x6d\x17\x22\xc1\xb2\x82\x45\x9e\xbf\xf6\x14\x0d\xa0\
\x34\x58\x96\xdd\xaf\x92\x7b\xb6\x58\x46\x9f\xa7\xec\x1b\x51\xe9\
\x23\x78\x7c\x51\xb9\x54\xb7\x5b\x87\x19\xf3\xfa\x93\xa9\x3d\x9b\
\x1d\x41\x08\x8d\x5b\xbe\xff\x08\x6f\x7a\xf5\x33\x7b\xde\x6f\x3a\
\x65\xf3\xfe\xdf\x78\x3d\x1f\xfa\xf3\x7f\xe1\xec\xd8\x7d\x4c\x4e\
\x1d\xc6\xb2\x32\xe8\xba\x49\xad\x36\x47\xa3\xa1\x80\xd0\x5b\x5f\
\xfb\x6c\xde\xfc\xea\x1f\x03\xe0\xcc\xf8\x2c\xef\xfe\xe0\xe7\xb8\
\xf6\xd3\xbf\x8e\x65\xad\x7e\xab\x10\x42\xb9\x02\x1f\x3f\x31\x15\
\x1d\x9f\xa4\x11\x65\xbb\x5f\x2b\x83\x95\x00\x2c\x21\x48\x22\x1c\
\x5b\x59\x2c\xe2\x28\x53\x98\x9d\x5b\x2b\xc0\x52\x0c\x56\x10\xd4\
\x15\x43\x0a\x74\x63\xa4\xd4\xd7\xad\x89\x42\x3b\x97\x01\x5a\x80\
\x5f\xa7\xab\xb0\xd5\x76\xa4\x66\xf8\x9b\x27\x7d\x1d\x47\xf3\xf9\
\xf0\xe1\x2d\x78\xa1\x16\x3d\x18\x68\x58\xa6\x89\x65\x99\xd8\xa6\
\x89\xa1\x47\xf7\xb6\x2e\xf7\x92\x4b\x21\x6e\xbf\x10\x17\x62\xfc\
\x79\xb9\xb6\xf5\xca\xfe\x5c\x6e\x80\xe6\x89\xe0\x1e\x14\x42\xac\
\x2a\x49\xb9\x1c\xdb\xfd\x7f\xbb\x19\xf1\x50\xef\x05\x16\x74\x3b\
\x3d\xdd\x2e\x16\x29\x25\xc6\xdc\x63\xec\x9b\xfe\x5a\xf2\xdd\xec\
\x81\xb7\x51\xef\x57\x49\x13\x3f\xf2\xe9\x9b\x38\x37\x3e\xa9\xc0\
\x93\x30\x5b\xa2\x04\xe3\x94\x0c\x5d\xf2\x5d\x25\xba\x2b\x1d\xa1\
\x77\x4f\xc9\xd0\x69\xb6\x29\xf8\xad\xd7\x16\x79\xda\x2e\x35\x59\
\x99\xf3\xc7\xd8\x70\xfd\x3b\xdb\x22\x01\x3f\x75\x97\xe0\xbd\x37\
\x5b\x38\x8e\x4b\x3a\x9d\xc6\x4d\xb9\x0c\x6e\x52\xe9\x1a\x1c\xc7\
\x21\x95\x72\xc9\x65\xb3\xf4\xf7\xf5\x33\x38\x34\xc8\xe0\xc0\x00\
\xc5\x42\x81\x74\x26\x8d\x6d\x59\x49\xe9\x9b\x4b\x81\xfe\x93\x73\
\x25\xc1\x0a\xd4\xa4\x32\xef\x3b\x20\x1b\xc4\x7c\x8f\x8c\x26\x84\
\x5e\xf5\x39\xb1\xc5\x17\x67\xec\xda\x51\xfb\x93\x20\x35\x42\xda\
\x59\xc2\x36\x50\x2b\x25\x69\x5f\x31\x58\xe7\xfc\x02\x52\x06\xc9\
\x44\x18\x03\xac\xe1\x35\x24\x19\x85\x26\x83\x15\xbb\xf9\x92\x82\
\x3c\xd1\x0d\x22\x94\xd1\x8d\x9c\xe8\x35\x72\xad\xe8\xba\x4e\x55\
\xcf\x42\xa0\x72\x61\x9d\xc1\x8d\x98\x14\x91\xa4\x6a\x58\x4b\x24\
\xe1\x40\xbf\xd2\xf5\x34\x1a\x8b\x91\x4b\x4f\x24\x82\x64\x2f\x4a\
\x72\xb9\x16\x06\xab\x56\xf7\x68\x78\x3e\xae\x6b\x45\xe9\x17\x9a\
\x1c\x56\x4e\x5b\x60\xce\x6b\xe6\x59\x3b\x38\xa7\xc0\xdd\x1e\xfb\
\x10\xdf\x5d\x78\x7a\x73\x23\x42\x27\x9d\x2a\x71\xcf\x83\xc7\x59\
\xac\xd4\xc9\xf4\x98\x69\x1d\xe0\x99\x4f\xde\xc1\x17\x3e\xf9\x2b\
\xfc\xcd\xe7\xfe\x9d\xaf\xff\xfb\x7d\x2c\x96\x27\x90\x52\xe2\x3a\
\x16\x2f\x7b\xfe\x95\xbc\xf8\xb9\x07\x78\xee\xd3\xf7\x24\x6d\xfd\
\xed\x3f\xfa\x02\xb3\xf3\x15\x26\xa6\x17\x7a\x4e\x38\xba\x79\xb4\
\x9f\x23\xc7\xc6\xf1\xbd\x2a\xba\x61\xe1\x35\xca\x98\xa6\xce\x57\
\xbe\xf9\x03\xd2\x29\x9b\x74\xca\xc6\x75\x2c\x52\x8e\x85\xeb\x5a\
\xf4\x15\x32\x5d\xd3\x41\x28\x80\x25\x22\x81\x78\x9c\x42\x22\x06\
\x3d\x6a\x7c\xe9\x86\x3a\xa7\x8f\x1d\x1f\xef\xb9\x0f\x40\xb9\x4c\
\xd3\x29\x9b\xba\xd7\x58\xc2\x5a\x15\xcd\x0a\x07\x32\x63\x5d\x58\
\x2b\x68\x82\x2b\x92\xf6\xc4\x1c\x20\xc0\x89\x6a\x96\xe3\x95\x5c\
\xdb\x1a\xa3\xce\x02\xbf\xbc\xe5\x2e\x5e\x33\x74\x18\x4d\x48\xfe\
\xec\x91\xcd\x5c\x3f\x5e\x42\x88\x28\xc5\x88\x65\x61\xdb\x2a\x8f\
\x9b\x65\xdb\xe8\x86\x81\xbe\xc2\xbd\xe4\x52\xb1\x3b\x17\x12\x59\
\xd8\x6a\xf1\x32\xad\xaf\x4f\x44\xa6\xe4\x72\x05\x56\xad\xf6\x44\
\x03\xae\xff\x2f\x98\xa1\x13\x81\x83\x55\xfa\x5e\xb6\x44\x94\xb5\
\x9e\xc6\xd6\xf7\xba\xa6\x06\xa1\xef\x35\xb8\xfa\xc4\x5f\x27\x2e\
\x1d\x2f\xbf\x95\x99\xab\xfe\x13\x00\x0f\x1e\x99\xe0\x5f\xbf\x71\
\xbb\x2a\x87\x13\xb3\x57\x46\xac\xbd\x8a\x80\x95\x61\xa1\x69\x1d\
\xba\x2b\x4d\xe9\xae\x5a\x93\x89\xae\x84\x0a\x73\xae\xc6\x7b\xdf\
\xdc\xcf\xae\x11\xc5\xf0\x38\x13\xf7\x33\x74\xe3\xaf\xa2\xd7\x95\
\x98\x58\x02\xef\xff\x8e\xc6\x5f\xdd\xe7\x50\x1a\xe8\x63\x64\xc3\
\x70\xe4\xea\x2b\x90\x49\xa7\x49\xa7\x53\xa4\x52\x29\x5c\xc7\xc5\
\x75\x1d\x32\x99\x34\x99\x4c\x06\xd7\x75\xb1\x4c\x33\x8a\x5a\x6c\
\x05\x56\x3d\x0c\x5e\xd9\xde\x7f\x42\xb4\x7e\x5a\x41\x0c\xda\xf2\
\x54\xe9\x6b\x0a\xec\x58\xb2\x42\x88\x46\x25\xb4\x90\x34\x92\xfd\
\xc7\x17\x51\x36\xd3\xbb\xa8\x1c\x48\xf2\x59\x25\xee\x41\x44\x94\
\x58\x33\x24\x90\x5a\xc2\x60\x25\xc3\x40\x08\x90\x82\x50\x4a\x52\
\x11\xc0\x1a\x6b\x14\x15\xa0\x89\x40\x56\x10\x44\x00\x6b\xb0\xf7\
\x1c\x58\xd0\x5a\xff\x29\x76\x0d\x29\xcd\x93\x10\xad\x05\xae\x9b\
\x20\xab\x75\x28\x54\x45\x54\x4c\x57\x9f\x43\xb2\x21\x9a\x28\x43\
\xb4\x24\x17\x56\xef\x00\x6b\x6b\x9c\x9d\xbc\x3e\x8f\x94\x41\xb3\
\x4f\x24\x78\x51\x86\xfa\xb5\x30\x58\x73\x49\x92\x51\x33\x12\xef\
\x37\x47\x4d\x56\x5b\x60\xc2\x6b\x46\xc3\x3d\xba\x90\xc6\x0b\x35\
\xf6\x3b\x87\xda\xc4\xf0\xa0\x58\xac\xc5\xf2\x39\xee\xb8\xe7\x08\
\x2f\x7e\xce\xda\xb4\x52\x29\xd7\xe2\x5d\xef\x78\x39\xef\x7a\xc7\
\xcb\x91\x52\xa5\x43\xb0\x4d\x63\x49\x21\xee\x0f\x7d\xe2\x5f\x38\
\x72\x4c\x01\x97\xf1\x89\xb9\xde\x33\xba\xc7\x3a\xac\xc6\x02\xae\
\x5e\xc0\xf3\x2a\x48\x19\xf2\x97\xff\xeb\xfa\x65\xd7\xc9\xa6\x1d\
\x76\x6d\x1f\x66\xe7\xd6\x21\xb6\x6d\x1a\x60\xeb\xa6\x01\x16\xcb\
\xb5\x28\x45\x43\xd8\x02\x76\xa0\xa9\x87\x52\x91\xa1\xba\x6e\x72\
\xc7\xbd\x8f\xad\xa9\x0f\x00\xf6\x6c\xdf\xc0\xdd\x07\x8f\x11\x04\
\x8d\x48\x2c\xaf\xc0\x54\x39\x30\x78\xef\xf6\xeb\x19\x75\xe6\x7a\
\xde\x56\x28\x05\x7f\x7f\xea\x2a\xee\x98\x79\xea\x92\xdf\xae\xce\
\x8d\xf3\xea\xa1\x23\x68\x42\xf2\xd9\xa3\x23\xfc\xef\x13\xc3\x08\
\xa1\x1e\x68\x4c\xc3\xc0\xb5\x6d\xd2\xe9\x14\xe9\x54\x0a\xd7\xb1\
\x30\x75\x0d\x21\x94\x8b\x3d\x1e\xd5\x4b\x99\xac\xe4\x5d\xf2\x9d\
\x6c\x89\x26\x5e\x2e\x5d\xc2\x6a\xd6\x0a\x22\xe2\x68\xc0\xce\xa8\
\xc0\xb5\x5a\xb7\x7b\x5a\x9c\x7a\x23\xec\x92\x54\x75\xbd\xc1\x57\
\x27\xc0\xeb\xa6\x37\xbb\x10\xeb\xa5\xbd\xeb\xb1\x1f\x29\x2f\xbc\
\x08\xf8\xea\x4d\x5d\x9f\xfe\x58\x15\xe8\xf5\x10\x45\xda\xba\x8d\
\xce\x73\x08\x2a\x07\xa2\xca\xb5\xb7\xc2\x7e\x7a\xe9\xf7\x0b\x04\
\xa5\xf1\x43\x7e\xe7\xf2\xf1\xab\x21\x64\x0f\xec\x55\x3c\x13\x88\
\x95\x1b\x14\x47\x0d\x6e\x38\x7d\x2d\xa5\xc6\xf1\x68\xdd\xc8\x35\
\xa8\x5b\x84\x12\x7e\xff\xe3\x5f\x55\xba\x98\xa4\xcc\x4d\xe4\x1a\
\x34\xec\xa8\x90\x73\x33\x1d\x83\xd6\x56\x0a\x27\x4a\x26\x2a\x74\
\xb4\x28\x94\x79\x39\x1b\xcc\xeb\xbc\xff\xad\x25\x36\x14\x95\x5b\
\x23\x75\xf2\x3b\x0c\xdd\xfc\x1e\x44\x34\xe1\x7b\x21\xbc\xf3\x1b\
\x1a\xff\x7a\x34\xcd\x86\xe1\x01\x76\xee\xd8\xce\x9e\xdd\xbb\x18\
\x1d\x19\x21\x97\xcb\x2a\xf6\xca\x76\xb0\x6c\x0b\x43\x37\xd0\x22\
\x8d\x8f\x1e\x31\x67\xd0\xdb\x85\xb5\x16\x5b\xcb\xf6\x42\x19\x62\
\x87\x55\x2a\xa1\x43\x18\xb6\xdf\x00\x63\x70\x92\x5b\x43\x6e\x26\
\xa0\x85\x5e\x6e\x77\x11\x4a\x24\xa1\xec\xa2\x73\x8b\xd8\xa5\x30\
\x0c\xc8\xf8\x2a\x9b\xfd\x58\x3d\x87\x0c\xe3\x08\x42\x89\x1f\x25\
\x82\x5c\xbb\x8b\xb0\x9d\xc1\x8a\x06\x5e\xa2\x3b\x0b\xe3\xc3\x15\
\xcd\xb4\x09\x2a\xe9\xa8\xa0\xa6\x2b\xd6\xa9\xa0\xcf\x83\x0c\x20\
\x0c\x08\x51\xee\x24\x21\x04\xe5\x4a\xbd\xe7\x76\x6c\x19\x55\x4c\
\x43\xbd\x36\xa7\xfa\x35\xba\x0e\x44\x14\x41\x08\xcd\x92\x28\xbd\
\x98\xe7\x45\x11\x81\x42\x23\x6c\x49\xbf\x60\x88\x00\x5b\x6b\xb0\
\xe8\x37\xcf\x99\x17\x0a\x0e\xcd\xa7\x38\x90\x3f\x42\x9f\x36\xc1\
\x84\xdf\xac\xe3\x97\xc9\x6c\x00\xee\xe5\xba\x1b\xee\x5d\x33\xc0\
\x6a\x35\x21\xe8\xca\x80\xfd\xc3\x97\x6e\xe1\x86\x5b\x1f\x44\xd3\
\x4c\xc2\xd0\x63\x6c\xa2\x77\xb0\x11\xbb\xdf\xbc\xc6\x02\x8e\x93\
\x67\xc3\xc6\xa7\x13\x86\x3e\x32\xf4\x09\xc2\x00\x19\xfa\x49\xfd\
\x3d\x29\x03\x7c\xaf\x4a\xad\xb1\xc8\xdd\x0f\x1c\xe7\xee\x07\x8e\
\xb5\x6d\x4b\x65\xf2\x6f\x05\xdb\xed\xac\x92\x44\x62\xd9\x59\xce\
\x4d\x4e\x73\xfc\xd4\x64\x12\xc5\xd8\x8b\xbd\xfe\x3f\x3e\x9d\xbb\
\x0f\x1e\xa3\x5a\x9e\x21\x93\xed\x4f\xb6\x58\x0f\x34\x3e\xf4\xd8\
\x0b\xf9\xf8\xbe\xaf\x61\x6b\x01\x93\x75\x93\xfb\x67\xb3\x9c\xaa\
\xda\x94\x7d\x9d\x21\xa7\xc1\xee\x6c\x85\x2b\xf2\xca\xa5\x7a\xac\
\x5a\xe0\x77\x0f\xbd\x90\xfb\xe6\xbb\x17\xdf\xbe\xee\xdc\x4e\xca\
\x81\xc9\x9f\xee\xbf\x9e\x37\x6d\x1e\xe7\x8b\x27\x86\x98\xf1\x6d\
\x74\x4d\xc3\xb2\x2c\x52\xae\x4b\x36\x93\x21\x93\x4e\xe3\xd8\x36\
\x86\x71\xa1\xe5\xb4\xce\xdf\x7a\x61\xa4\x2e\x86\x75\x9b\xa0\x2e\
\x67\x7b\x22\xb0\x59\x3f\xb2\xcb\xc3\x8c\xb5\x5c\x40\xb1\xab\x26\
\xf9\xdc\x4d\x7b\x55\x99\x66\xdf\xd4\xbf\x24\xdf\xcd\xed\xfd\x49\
\x6a\x03\x57\x01\xf0\x89\x7f\xb8\x8d\x33\x67\xce\x81\x16\xe5\xb2\
\xd2\xad\x16\x06\xcb\x6e\x17\xb4\x47\xc0\x4a\x69\xae\x5a\x4b\xe1\
\x88\x15\x75\x57\xdb\x06\x0d\xde\xf7\x93\x25\xf2\x69\xf5\x44\x9e\
\x7b\xf4\x4b\x94\xee\xf8\x70\xe2\x02\x58\x6c\xc0\x4f\xff\x8b\xce\
\x9d\x13\x19\x46\x47\x86\xd8\xb3\x7b\x17\x07\xf6\xef\x57\x25\x6d\
\x0a\x05\x6c\xdb\x6a\x66\x29\xef\xa8\x1d\x78\xb1\x6e\x36\xbd\xec\
\x23\x79\x02\x93\x2a\x2f\x94\x2d\xab\x2c\x48\x37\x4a\xa6\xd9\xfe\
\xc4\x2a\x84\x20\xb5\x06\xd7\x11\xb4\x68\xb0\xda\xf4\x24\x0a\xd8\
\x04\x2d\x99\xa7\x13\x9e\x2b\x91\x5a\x49\xd2\xc1\x0c\x55\xe9\x30\
\xeb\x5b\x48\x59\x41\x86\x2a\x42\x2e\x66\xb0\xd6\x52\x87\x10\xda\
\x19\x2c\x22\x17\x1f\x88\x96\xf2\x40\x5d\x18\x3e\xa1\x72\x62\x35\
\x74\x05\x78\x32\x7a\x85\x56\xdd\x0e\xd1\x4d\x71\x61\xb1\xda\x73\
\x3b\x2c\xcb\x60\x74\xb8\xc8\xd8\x44\xe4\x22\x4c\xb2\x56\xa9\x1c\
\x58\x00\xf9\x5c\xef\x4c\xa1\x63\x2b\x86\x2a\x08\x1a\x6d\xac\x54\
\x43\x36\xb5\x5d\xad\xf6\xd5\x33\x03\x5c\x59\x38\xca\x2b\x0a\xd7\
\xf3\x77\x13\x6f\x48\xbe\x37\x4c\x97\x4c\x66\x88\xef\xdd\x7d\x84\
\xeb\x6e\xbc\x97\x57\xbe\xe8\xea\x9e\xdb\xb0\x92\x85\x52\xf2\x3f\
\xff\xe9\x46\xfe\xd7\xff\xb9\x05\xd3\x74\xe9\x2f\xed\x63\xec\xec\
\xdd\x8c\x4d\xcc\xf6\xb4\x7e\xb9\x52\xc7\x8a\x98\xb0\x86\x57\x26\
\x24\xc4\x30\x5c\x96\xea\x92\x5a\x53\x1e\x44\x21\x1a\xa1\x02\x5b\
\x9e\x57\xc1\xf7\xaa\xf8\x7e\x4d\x01\xb3\x56\x71\x7b\x2c\x3a\x97\
\xad\x00\x2b\x43\xb5\x32\xcd\x9d\xf7\x3e\xb6\x26\x80\xf5\xc2\x67\
\xed\x63\x68\x20\xcf\xc4\xbb\x5a\xd3\x63\x00\x00\x20\x00\x49\x44\
\x41\x54\xd4\x3c\x6e\x2a\x17\x09\xe6\xd5\x76\x6f\x9e\xd9\xca\xcf\
\xdc\x7f\x0d\x1f\xdf\x7b\x1d\xa3\xce\x02\x2f\x1a\x52\x0c\xad\x17\
\x0a\x4c\x2d\x72\x53\x23\xf8\xc7\xd3\x57\xf2\x3f\x1e\x7f\x1a\xb5\
\x70\x65\x7d\xda\x4d\x53\x5b\xf8\xf0\x91\xe7\xf0\x81\xdd\x37\xf3\
\x0b\x3b\x4f\xf3\x91\x43\xdb\x55\x1d\x4d\xd3\x8c\x02\x45\x1c\x5c\
\xc7\xc1\x32\x4d\x74\xfd\xd2\x49\x0e\x3a\x6d\x39\xd0\xb0\xd6\xb6\
\xac\x06\x3e\x96\x8b\x88\xbc\x18\x16\x83\xa1\xf5\xb8\x8f\x3f\x11\
\xb4\x58\x3f\xb2\xcb\xcb\x0c\xe8\x6d\xc0\x09\x01\xa1\xe8\x2e\x52\
\x8c\x3f\x87\x61\xc8\xe0\xd8\xbf\x61\x48\x25\x50\xf5\xb2\x1b\x99\
\x7e\xf2\xaf\x00\x70\xf8\xe4\x0c\x5f\xfa\xda\x1d\x08\x61\x80\xa6\
\xb7\x81\x2b\xad\x0d\x58\xb5\x64\x6b\xef\xa6\xbb\x5a\x41\xc8\x77\
\xd5\x56\x8b\xdf\xb9\xa6\x84\x6d\xaa\xf6\x14\xef\xfd\x2b\x8a\xf7\
\xff\xcf\xe4\xf7\xf1\x32\x5c\xf3\x25\x83\xa3\x95\x2c\x9b\x36\x6e\
\x60\xff\xde\x3d\x1c\x38\xb0\x9f\x6d\x5b\xb7\x50\x2c\x14\xb1\xed\
\x66\xbd\xc0\xd8\x05\x78\xf1\xad\xfb\x85\xbf\x9c\xb6\x2d\x7a\x87\
\x2d\x2b\x8c\x85\x43\x09\x9d\xd3\xa4\x26\x43\xd2\xae\xbd\xa6\xe4\
\x97\xd0\x8c\x22\x8c\x5d\x6a\xc4\x99\x0f\x91\x04\x52\x43\x6f\xc9\
\x0f\xd4\x74\x1d\x84\x04\x41\x48\x3a\x9c\x67\x3a\xc8\x83\x0c\x15\
\x38\x92\x21\x21\x10\xfa\x6a\x1c\xfc\xd5\xff\xba\x9e\x94\x6b\x61\
\x1a\x3a\xba\xae\x25\x7f\xb9\x8c\xcb\xd6\x4d\x03\x6c\xdd\x38\xc0\
\xe8\x70\x31\x01\x79\x61\xd8\x32\x11\xb7\x00\x24\x2d\x6a\x43\xe2\
\x22\xa4\xc5\x4d\x18\x45\x13\x06\x86\x02\x3c\xae\x56\x43\x12\x12\
\x12\x82\x94\x88\x88\x4e\xae\xb5\x84\xff\xf7\x62\xdb\x36\x0d\x70\
\xea\xec\x23\xf8\x41\x3d\x62\xc1\x14\x18\xf2\x23\x7d\x59\x61\x0d\
\x0c\x56\x0c\xb0\xc2\xd0\x6f\x63\xb0\x10\xe0\x49\x23\x99\xbc\x63\
\xfb\xf6\x58\x89\x77\xee\x3a\xc5\xab\x0a\xff\xce\x67\x27\x5e\x8d\
\x1f\x36\xdd\x78\x43\x43\x57\x53\xad\xde\xc8\xc7\xff\xe6\x9b\x6c\
\xdb\x34\xc0\xfe\x5d\xbd\x45\xfa\x2d\x67\x95\x6a\x83\xf7\xff\xe9\
\x97\xb8\xe5\xfb\x8f\x62\x59\x69\x86\x36\x3c\x35\x19\x83\xe3\x13\
\x73\x48\xa9\x0a\x30\x9f\x3c\x33\xc5\xc9\xb3\x53\x9c\x3c\x33\xcd\
\x99\xf1\x19\xa6\x66\x16\x99\x9a\x59\x64\x72\x66\x81\x46\xa3\x99\
\xb3\xcb\x6b\x94\x15\xd0\x4e\x6c\x29\xa8\x52\xef\x23\x91\xb9\x10\
\x18\xa6\x8b\x61\x3a\x6d\xcb\xb5\x46\xf4\xd1\xa2\x0f\x8c\x3f\x5b\
\xb6\x4a\x77\xf0\x95\x6f\xfe\x80\x37\xbc\xf2\x19\x3d\x8f\x7b\x4d\
\x13\xfc\xc2\x4f\xfe\x38\x1f\xfc\xc4\xb5\x2c\xcc\x4f\x90\x2f\x0c\
\x91\x3c\x58\x48\xc9\x43\x0b\x25\xae\xb9\xe7\x2d\xbc\xa4\x74\x84\
\x6d\xee\x2c\x5b\xdd\x19\x06\xac\x0a\x27\xaa\x39\x0e\x57\xfa\xb8\
\x6d\x7a\x94\x83\x0b\x03\x3d\xf7\xef\x97\xcf\xee\xe1\xff\xdb\x78\
\x1f\x2f\x1f\x9e\xe4\x63\x8f\x6e\x43\x13\xaa\x8e\xa6\x69\x18\xd8\
\xa6\x85\x65\x59\x18\x46\x33\x8a\xf0\x87\x0d\xb0\x2e\x99\xae\x74\
\x99\x7d\xac\x57\x88\xfd\x4a\xa0\x71\x2d\xc7\xb7\x5c\x6a\x8a\xde\
\xe6\xce\xf5\xe8\xc7\x4b\x33\x1e\x2e\x05\x68\x7c\x22\x69\xf0\x7a\
\x6a\xeb\x0a\x7d\xb6\x36\x06\x4b\x46\xbe\xcf\x96\xed\xc5\xfa\x2d\
\x29\x25\xa1\xe7\x53\x58\x38\x94\xfc\xb6\xb8\xfd\x95\xc8\xa8\xd0\
\xee\x7b\x3f\xf6\x0d\xfc\x50\x42\x92\x6a\x21\x06\x52\x76\xe4\x12\
\x6c\x8a\xda\x45\x8b\x6b\x30\xd1\x5d\x89\x95\x4b\xe1\x3c\xff\x80\
\xc3\xbb\x5e\xd3\xaf\xf4\x38\x32\xa0\x74\xfb\x07\xc9\x1e\xb9\x36\
\xf9\xfd\xc8\x34\xbc\xe1\x4b\x26\xb3\x32\xc7\xe6\xcd\xa3\x1c\xd8\
\xb7\x97\x03\x07\xf6\xb3\x65\xf3\x26\x0a\xf9\x7c\xd7\x62\xcc\x97\
\xd2\x7a\x7d\xc2\x0a\xa5\x84\xd0\xc3\x90\x1e\x8b\xa1\x4b\x88\x6c\
\xba\xcc\x50\xe7\x21\x9b\x5d\x9b\x7b\x10\x9a\x93\xbf\x1a\x2c\x11\
\xc0\x8a\xb4\x4f\x33\xbe\x4b\xd1\x52\xcc\x4f\xb3\x5c\x8f\xca\x92\
\x1e\x86\x21\x55\xe1\x92\xd7\xe6\x09\xa5\x72\xfb\xc4\x93\x5f\x10\
\x28\x30\x73\xc3\xad\x0f\xae\xba\x7f\x43\xd7\x18\x1a\xc8\x33\x32\
\x54\xe4\xf8\xa9\xc9\xa8\x29\x2a\x59\x28\x02\x84\x14\x49\x25\x80\
\x16\x9c\x09\x34\xc7\x20\x02\x02\xa1\x8e\xdd\x15\xb5\x68\x01\xb5\
\x8d\xb8\x4b\xab\x6b\x04\x58\x5b\x37\x0d\xf0\xdd\x3b\x1f\xa1\x5e\
\x9f\xc3\x71\x8a\x48\x19\x9f\x9b\x18\xec\xf5\x7e\x43\x8a\x33\x8e\
\x87\xa1\xdf\xae\xab\x92\x50\x0f\x4d\x76\x64\x2a\x7c\xf2\x69\x87\
\x08\x25\x8c\x55\x6d\xce\xd6\x6c\x1e\x5f\x74\x79\x72\x71\x9e\x57\
\xe4\x6f\xe2\xda\xe9\x17\x26\xab\x68\xba\xc9\xd0\xd0\x55\x9c\x3d\
\x7b\x37\xbf\xf2\xde\xcf\xf2\x87\xef\x7e\x23\xcf\x79\xda\xee\x35\
\x1d\x5b\x6c\x77\x3f\x70\x8c\x8f\xfe\xf5\x75\x1c\x3f\x35\x89\x9b\
\xea\x67\x70\xe8\x49\x68\x9a\xa1\x18\x23\x21\xb8\xfe\x96\x83\x7c\
\xfb\xbb\x07\xdb\x72\x53\xc5\x26\x84\x86\xae\x5b\x68\xba\x8b\x9b\
\x52\x0f\x49\xba\x6e\x62\x9a\xee\x12\xf6\xa9\x95\x1d\x55\x6f\xbb\
\x33\x5a\xad\x2e\xc0\x78\x19\x89\xe4\x79\x85\xc3\x3c\x29\x73\x82\
\x4f\x9e\xfc\xf1\x64\x39\x21\x34\x1c\xb7\xc0\xb1\x53\x93\xdc\x70\
\xcb\x83\xbc\xf4\x79\x57\xf4\x7c\xdc\xaf\x78\xd1\x55\xdc\x7c\xc7\
\x21\x6e\xbe\xe3\x10\x95\xf2\x0c\xa9\x54\x9c\x13\x4b\xed\x71\xde\
\x33\xf9\xf2\xd9\xbd\x6d\xdf\xad\x34\x01\x49\x29\xa9\x54\x16\xf1\
\x3c\x0f\xc7\x71\xb0\x6d\xb7\xf9\xf0\x89\xe0\x8e\xd9\x51\xde\x3c\
\xf2\x10\xdb\xd2\x55\x4e\x35\x6c\x15\xb4\x21\xdb\x6e\xa6\xbd\x08\
\x65\x2e\x9a\x2d\x97\x1e\xa2\xd5\xd6\x73\x02\x5e\xf9\x21\x72\x7d\
\xf7\xb1\x56\x50\xd4\x6d\x3b\x3f\x62\xaf\x7e\x64\x6b\xb5\x9e\x13\
\x8d\xc6\x37\xdb\x56\xeb\xfc\xec\xf9\x3e\xba\xdf\x2c\xa8\x5b\xef\
\x57\xfa\x90\x43\xc7\xa6\x38\x71\xea\x5c\xc4\x5e\x19\x51\x3e\xab\
\x26\xa8\x12\x49\x11\x67\x95\xeb\x4a\xa5\x63\x68\x29\xe2\x2c\xf4\
\x15\x4b\xe1\xbc\xf6\x99\x69\xde\xf6\x62\x25\xa4\x16\x7e\x8d\xa1\
\x9b\xff\x2b\xa9\x53\xdf\x4d\x7e\xbf\xf3\x0c\xbc\xf5\x5a\x8b\xc0\
\xce\xb3\x6d\xf3\x66\x0e\xec\xdb\xc7\x81\x03\xfb\xd8\xbc\x69\x23\
\xb9\x6c\x16\xd3\x34\xbb\x1e\xdb\xa5\x66\xb0\xba\xfe\xda\xa9\x4f\
\x10\x02\xc3\x57\x42\xed\xc5\xc0\x4d\x7c\x75\xf1\xf5\x2e\xa5\x24\
\xb7\x46\x81\x3b\x80\x69\xea\x14\x72\x29\x16\x2b\x5e\xf3\xa6\x1f\
\xd5\xcb\x19\xaf\xa7\xb9\x3a\x3b\xd7\xe6\x1e\x6c\x16\xa8\x95\xcc\
\x52\x64\x50\x1b\xa3\xa0\xcd\xb3\x28\x55\x72\x50\x24\xf4\x0d\x6c\
\x53\x00\x49\xaa\x95\xa4\xa0\xad\xad\x61\xe8\x13\xf8\x0d\x7c\xbf\
\x4e\xe0\xd7\x19\x9b\x5c\xe4\xf4\xd8\x4c\xcb\xf1\x86\x40\x90\x80\
\x9a\x8c\xae\x40\x5e\x39\xd0\xe3\xce\x49\xce\x93\x16\xa5\x6b\x90\
\x11\x83\x65\x69\x8d\x44\x70\xaf\x40\x90\xda\x46\xa2\x83\xea\xd1\
\xb6\x6f\x56\x2c\x45\xbd\xbe\x80\x65\x2b\x57\xa7\x62\xcc\xd6\x2e\
\x9a\x37\x4d\xe5\x72\x5e\x02\xb0\x50\x0c\x56\x9f\x51\xe1\xc9\xc5\
\x05\x24\xa0\xd1\x5e\x6f\xf0\x9d\xc3\xff\xcc\x1d\x0b\x7b\x39\xdd\
\x68\xb2\x26\x6e\x7a\x80\xe1\x0d\x4f\x61\x7c\xec\x1e\xde\xfd\xc1\
\xcf\x73\xe5\xde\x4d\xfc\xf4\xeb\x9e\xc3\x73\x9f\xb1\xa7\xa7\x79\
\xfa\xd1\xc7\xc7\xf8\xab\x7f\xb8\x9e\x3b\xee\x79\x0c\x10\xe4\x0a\
\x9b\xe9\xeb\xdb\x89\x44\x24\xed\xd3\x75\x9b\x86\xe7\xa3\x1b\x2e\
\xe9\x4c\x9f\x62\x99\x0c\x37\x7a\x75\x9a\xe5\x8c\x5a\x74\x7b\x4d\
\xb7\x5f\x48\x0c\x84\x0a\x46\x99\xdd\xa9\xb3\xd4\x02\x83\x4a\x68\
\x53\x09\x4c\xe6\x7c\x97\x05\xdf\x49\x96\x17\x2c\x05\x55\x6a\xc8\
\x48\xde\xb6\xe1\x36\x7e\x6d\xcb\xf5\x78\xa1\xce\xff\x1e\x7b\x2a\
\x13\x8d\x74\xbc\x33\x52\x99\x7e\x6a\xd5\x59\x3e\xf3\xf9\x9b\x78\
\xf1\x73\x0f\xac\x89\xbd\xfd\xed\x77\xbe\x9a\xa3\x27\xcf\x71\xf2\
\xcc\x34\x32\x0c\x48\x67\x72\x4b\x5c\x92\xb0\xfa\xc4\xef\x79\x0d\
\xca\xe5\x05\x82\x40\xf5\x5b\xb9\xbc\x88\x61\x98\x18\x46\x33\x70\
\xe1\x6c\x5d\x05\x60\x0c\x58\x0d\x4e\xd4\x25\x7e\x18\xe0\x05\xea\
\x2f\x0c\x03\xa4\x6c\x61\x65\x7f\x08\xba\xa4\xf5\x8a\x42\xeb\x75\
\x3b\x2b\x1d\xe3\xa5\xd0\xb8\xae\x55\xa0\xde\x09\xb2\x7a\xdd\xc6\
\x13\x85\xc1\xba\x5c\xc6\x19\x5c\xba\xb6\xac\x66\x17\x7a\x4d\xac\
\xc1\x45\x28\x9a\x37\xd1\x8e\x75\xd4\xa4\xa1\xdc\x45\xd5\xd0\x4c\
\xc6\x82\x5e\x53\xe2\xe7\xbd\x5b\xfb\x71\xdc\x34\xf5\x86\x1f\xb9\
\xfc\x62\x50\x65\x37\x23\x05\xa3\x02\xce\x8a\xdd\x52\xae\xc1\xd5\
\x74\x57\xba\x10\xbc\xfd\x25\x59\x5e\xf5\x74\x95\xfb\x48\xaf\xcf\
\x32\x7c\xc3\x7f\xc1\x9e\x3c\x98\x2c\xf3\x8d\x23\x82\x9f\xff\x86\
\x8d\x9b\x29\xb0\x73\xdb\x56\xae\xd8\xbf\x8f\x7d\x7b\xf7\x32\x3a\
\xba\x81\x5c\x36\x9b\xa4\x59\xb8\x5c\x6c\x25\x26\x4b\x79\x54\x42\
\xcc\x18\x60\x85\x4e\x34\x17\x35\x27\x81\x30\x0c\xc9\xae\x31\x45\
\x43\x6c\x03\xfd\x39\x16\x16\xcf\x21\x55\x62\x86\x68\xb3\x82\xb1\
\x7a\x1a\x33\x2f\x29\x5a\x1e\x8b\xd2\x24\x8c\xcb\xd0\x84\x92\x20\
\x0c\x38\x21\xb6\xb2\x9b\x87\xf9\x99\xd2\x77\xf8\xa3\xf9\x1f\x47\
\x26\xb5\xe3\xa2\xa1\xa0\x09\x40\x8b\x94\x54\x71\x74\xa2\x00\x6c\
\xb0\x33\xea\x5b\xa1\xf6\x25\x25\x84\x81\x47\x10\x36\xd0\x84\x48\
\x4a\xe5\x48\x60\x7f\xfa\x34\x65\x5f\xe7\x74\xc5\x41\x37\xd4\x3a\
\x2a\x9a\x04\x84\x16\x09\xdd\xdb\x22\x0d\xe3\x72\x39\x61\xe2\x92\
\x5b\xeb\xb9\xde\xba\x51\x01\x9a\x46\x63\x21\x89\xe4\x91\x08\x44\
\x54\xa6\x65\x2d\x69\x1f\x40\x31\x85\x61\x24\xf4\x8e\x1a\x04\xc0\
\x9b\x1f\xf9\x00\x81\xd4\xa8\x87\x26\x9a\x90\x0c\x9a\x33\x6c\xb4\
\x26\xf8\xf9\xe1\xaf\x72\x65\xea\x71\x1c\xad\xc1\xef\x6f\xfa\x5b\
\xfe\xf3\x63\xbf\x49\x18\x46\x4f\xe5\x80\xe3\xf6\x31\x3c\xf2\x74\
\x66\x67\x1e\xe3\x81\x43\x27\x79\xcf\x1f\x7d\x81\x2d\xa3\x25\xde\
\xf4\xea\x67\xb2\x71\x43\x1f\x29\xd7\x26\xe5\x5a\xa4\x53\x4a\x58\
\x7d\xf0\x91\x53\xdc\xfd\xc0\x51\xee\x7a\xe0\x18\x47\x4f\x9e\x43\
\x4a\x70\x53\xfd\x14\xfb\x76\x60\x5a\xe9\x08\x8c\xc6\xc0\x08\x86\
\x47\x9f\x8a\x10\xad\x11\x86\xed\x60\x4a\xf5\x89\xa4\x39\x0c\x5b\
\x18\x2a\x00\x29\x29\x1a\x65\x3e\xbd\xe7\xaf\xd9\xe6\x4e\x2c\xe9\
\x8f\xb3\xf5\x02\x8f\x54\x86\x39\x54\xde\xc0\xb1\x5a\x3f\x47\xab\
\x25\x8e\xd5\xfa\xa8\x05\x06\x25\x73\x91\xed\xee\x04\xaf\x1d\xbc\
\x87\x57\x96\x0e\x52\xf1\x75\x52\x86\xcf\x3b\x46\x6f\xe1\xbf\x1f\
\x7d\x69\xe4\x32\x54\xd5\x05\x1c\xb7\xc0\x89\x33\x53\x7c\xe5\x1b\
\x3f\xe0\x0d\xaf\x78\xfa\x92\xfd\x2c\x67\x85\x5c\x8a\x4f\xfd\xd1\
\xcf\xf1\xae\xf7\xfd\x83\x4a\x2f\xe1\x37\x48\xa5\x73\x98\x86\x9e\
\x80\xbb\x95\x4c\x4a\x49\xb9\xbc\x40\xbd\x5e\x43\xd7\x34\xde\x7e\
\xcd\xf3\xf8\xe2\x75\x77\x52\xab\xfb\x6d\xe0\x0a\xa0\x64\xa9\xd4\
\x2a\xe3\x75\x0b\x19\x84\x84\x41\x88\xef\xfb\xf8\xbe\x4f\x10\x04\
\x49\x54\x5d\xa7\x5d\x2a\xc6\x64\x39\xc0\x73\xb1\xf7\x7d\x29\xb4\
\x58\x9d\xfb\xea\xb5\x4f\xbb\x31\x60\x97\xcb\xe4\xff\x23\xfb\xe1\
\x9b\x7a\x28\x5c\xde\xd6\xbd\x16\xe1\xb8\x2c\xb1\x4b\xa8\xb0\x69\
\xf7\xec\x9d\x2c\xec\x7c\x2d\x00\x5b\xb6\x0c\x73\xf8\xf1\xf1\x16\
\xf6\x2a\x06\x56\x2d\xa2\x76\xcd\x50\x20\x4b\xd3\x93\xc8\xc1\xe5\
\x74\x57\x96\x21\x78\xd7\x6b\x0a\x3c\x7b\xaf\xd2\xc0\x98\x0b\xa7\
\x18\xbe\xe1\x9d\x98\xf3\x27\x92\x65\xfe\xee\x5e\xc1\xef\x7c\xc7\
\xa1\xd0\xd7\xcf\xf6\xed\xdb\xb8\xf2\xc0\x7e\xf6\xec\xde\xc5\xc8\
\x86\x0d\x64\x32\xe9\x25\x22\xf6\x1f\xb6\xf5\xe2\x26\x0c\x25\x09\
\x4b\xb8\x10\x38\x6d\xa0\xf7\x7c\x73\x60\xc5\x36\xd8\x9f\xe3\xf0\
\xd1\x31\xc5\x3c\xc4\xc2\x71\x60\xbc\x9e\x56\xbf\x3b\x0d\x16\xaa\
\x29\x08\x55\x32\xd0\x30\x54\x21\xf4\xf7\x9b\x4f\xe3\x6a\xef\x76\
\x5e\xd7\x77\x27\x5f\x9f\xd8\xc5\x5d\xd3\x83\x8a\x58\x23\x96\x71\
\x89\xf8\x1d\x52\x28\xd7\xa3\xfa\x2d\x3a\x46\xa1\x45\x40\x51\x2d\
\xa7\x19\x06\x3a\x66\x8b\xee\x06\x36\xd8\x0b\xec\x70\xcf\x71\xef\
\x4c\x26\x39\x62\x81\x48\xf2\x5f\xe9\x51\x82\x46\x83\xb8\x46\xa3\
\x00\xd9\x02\xb0\x22\x70\xa4\x75\x00\xf5\xd9\xf9\x0a\x63\xe7\x66\
\x19\x9b\x98\x63\xa1\x5c\xa3\x5c\xa9\x53\xae\xd4\xa9\x54\xd5\xeb\
\x4c\x54\x86\xc5\x6b\x94\x69\x0d\x95\xd6\x22\x80\xa5\x12\x97\xf6\
\x6e\xb6\x65\x50\xae\x06\x4d\x06\x2b\x3a\x98\x85\xd0\x88\xba\x28\
\x20\x90\x70\xba\x9e\xe7\x74\x3d\xcf\xf7\x17\x7e\x8d\xb7\x0d\x7e\
\x9b\x5f\xda\xf0\x35\xae\x4c\x3d\xce\x2f\x0d\x7d\x85\x4f\x9e\xf9\
\x89\xb6\x6d\x9a\x56\x9a\x81\xa1\x27\xe1\x79\x65\xe6\x67\x8f\x73\
\xe2\xcc\x38\x1f\xfd\xd4\x75\x4b\xf6\x2d\x44\x93\x9c\x54\xa0\xa4\
\x8f\x5c\x7e\x33\xb6\x93\x8f\xc0\x79\x17\xcd\x94\x10\x2c\x89\xe4\
\x4b\xda\xbd\x14\x4c\xb5\x1e\x94\x44\x92\xd7\x2b\x7c\x6a\xcf\x67\
\xd8\xe6\x4e\x70\xc3\x78\x1f\xa7\x2b\x0e\xae\x11\x90\xd2\x43\x0a\
\x96\xc7\x9e\x6c\x85\x17\x16\x0f\xf1\xc2\x62\x53\x5a\x20\x81\x6a\
\x60\x91\xd2\x1b\xc9\x77\xf7\xcf\x66\xf8\xbd\xfb\x77\xf1\x89\xa7\
\x1e\xe2\x8d\x83\xf7\xf0\x99\x53\xcf\xe0\x5c\x23\x4b\xac\x99\x4a\
\xa5\x0b\xd4\xeb\xf3\xfc\xd9\x67\xbe\xc9\x96\x8d\x25\x9e\xf6\xa4\
\x6d\x3d\x9e\x11\x28\xe6\xd3\xfc\xe5\x87\xde\xce\x87\xff\xe2\x5f\
\xb9\xe9\xf6\x87\x99\x9b\x9d\xc4\xb2\x6c\x2c\xcb\xc6\x34\xad\xae\
\xf7\x9f\x20\xf0\x69\x34\xea\xd4\xeb\x35\x82\x20\x60\xe7\xd6\x21\
\xde\xfb\xab\xaf\xa5\x56\xf7\xf8\xfb\x2f\x7e\x17\xc7\x59\xca\x22\
\x1f\xc8\x4c\xe2\x4b\xc1\xe9\x8a\x8d\xd4\x44\xc2\x02\x07\x41\x48\
\x18\x3d\xb0\xfc\x30\x2d\x4e\x9f\x10\xdb\xf9\x80\xac\xb5\xde\x4f\
\x2f\x16\x60\x69\x05\x46\xeb\xb1\x8f\x1f\x01\xab\x1f\xd9\xf9\xd8\
\xaa\x00\x2b\x19\xa8\x34\xe3\x9c\xda\xff\xab\x57\x4d\x68\x18\x9a\
\xc6\x84\x36\x92\xac\xeb\x9e\xfd\x1e\xf1\x34\xfb\xa4\x3d\x23\x1c\
\x39\x3e\xa3\x00\x56\x9c\xe7\x2a\x76\x0d\x26\xec\x95\x02\x57\xcd\
\x3a\x83\xdd\x75\x57\x19\x47\xe3\x77\xae\xe9\x63\xff\x26\x15\x29\
\x67\x4f\x3f\xcc\xf0\xf5\xff\x25\x61\xcc\x00\x3e\x7c\x8b\xc6\x9f\
\xdd\xed\x32\x30\xd0\xcf\xce\x1d\x3b\xb8\xf2\x8a\x03\xec\xde\xb5\
\x8b\xa1\xc1\x41\x52\xa9\xd5\x4b\xda\xfc\xb0\xa8\xdf\xce\x36\x35\
\x23\xa6\x48\xb4\x6e\x66\x0c\xb0\x42\x37\x99\xf2\x04\x4d\x71\xf8\
\xf9\xb8\x08\x01\x06\xa3\x82\xb9\x4a\xb3\xa4\x13\x8b\x8a\x13\x80\
\x65\x37\x78\xac\x22\x09\x65\x98\x00\x2c\x10\x68\xba\xc5\x57\xfd\
\x1f\xe7\x67\xcc\x7f\xe1\xaf\xf7\x7c\x8e\x0f\x3d\xfe\x12\xae\x1d\
\xdf\x8b\x1f\x46\xd9\xb3\x44\xcc\x5d\xb1\x14\x6c\x21\x40\xb6\x94\
\x8d\x69\x01\x60\x09\xe0\x12\xf0\x87\x3b\xbe\x82\x2e\x42\xae\x3b\
\x53\x52\x8c\x95\x10\xaa\xc8\xb3\xa1\x63\x99\x26\x86\x6e\xa8\x72\
\x39\x11\x83\x15\x48\x3d\x62\xd2\xa2\xbf\xa8\x78\xf7\xa1\x23\x67\
\x78\xf7\x07\x3f\xcf\xd9\x73\xb3\x9c\x3d\x37\x4b\xb5\xd6\x9c\xc4\
\x57\x32\xdf\xab\x26\xa0\x28\x06\x76\x00\xd3\x33\x6b\x03\x58\xe9\
\x94\xcd\xfc\xe2\x3c\x0d\xaf\x8c\x61\xc4\x40\x78\x05\xcd\x1d\xf0\
\x99\xb1\x97\xf2\xf4\xec\x21\x9e\x92\x39\xc2\xcf\x0c\x5e\x8f\x8e\
\xcf\x9f\x9d\x7e\x6d\xc7\x92\x12\xc3\xb0\xe9\x2b\xed\x26\x5f\xdc\
\x4a\xa5\x3c\x11\xb9\x9d\x02\x64\xa8\x00\x9d\xa6\x99\x68\x9a\x8e\
\xed\x14\xb0\xac\x4c\xc2\x4a\xb7\xd7\x45\x6c\xd5\x48\x75\xf9\x2e\
\xf9\x6a\x29\x98\x42\x82\x2e\x02\xfa\xcd\x45\x36\x3b\x93\xbc\xb2\
\xff\x3e\x5e\xda\xf7\x00\x69\xbd\xc1\x57\x4f\x0f\xf0\x47\x0f\x6d\
\x4b\x18\xbb\x56\x37\x58\x9f\xe5\xb1\x33\x53\x66\x53\xaa\xca\x66\
\xb7\xca\xe6\x74\x8d\xa2\xe5\x71\xaa\x92\xe1\x68\xd9\xe5\xf1\x45\
\x97\x9b\x27\xfa\xf0\x42\xc1\xdf\x3d\x3e\xca\x1f\x5c\x79\x84\x5f\
\xdc\x78\x3b\x1f\x7c\xfc\x25\xc4\x22\x78\xa1\x09\xb2\xb9\x41\xe6\
\x67\xc7\xf8\xdd\xff\xfe\xcf\xfc\xcd\x47\xde\xb1\xa6\xa8\xc2\x4c\
\xda\xe1\xc3\xef\x79\x13\x77\x3f\x70\x8c\xbf\xf8\xec\xbf\x71\xe8\
\xc8\x19\x1a\x0d\x15\xc8\xd0\x9a\xf3\x4e\xa5\x45\x69\x32\x4d\xa6\
\xa1\xf3\xf6\xb7\xbc\x80\xb7\x5d\xf3\x7c\x0c\x5d\xe3\x2f\x3f\xab\
\xf2\x7d\x59\x56\x7b\x14\x6f\xc9\xaa\x70\x55\x6e\x9c\xef\x4f\xe7\
\xa8\x05\x1a\x66\x4b\x56\x14\x21\x00\x29\x96\x80\xff\x66\x57\xf7\
\xce\xb4\x74\xae\xd7\xf9\xd0\xb6\x1c\x13\xb3\x5a\xce\xab\x8b\xf5\
\x20\xda\xe9\x82\x6b\x6d\xcb\x4a\xd6\x6b\xd6\xf2\x6e\x51\x84\x9d\
\xfb\xbd\xd8\xb6\x5e\x82\xfd\x0b\xdd\xc6\xf9\xee\xa3\xdb\x39\xba\
\x20\x3b\xcf\xe3\xed\xa5\x7d\xad\xdf\xad\x55\xe3\xd7\xeb\xb1\xad\
\xc5\x9d\x6d\x74\xae\xb0\x1c\x8b\x22\x5a\xc8\xb0\xd6\x80\xf2\xf8\
\x9d\xca\x43\xa4\x31\x6b\x6d\x86\x68\xce\xd2\x6b\x33\xd8\x53\x87\
\xa8\xf7\xef\xe3\x59\x57\x6f\xe4\x2b\xd7\x3f\xba\x34\x89\x68\x02\
\xac\xcc\xc8\x25\x68\xb4\xd4\x19\x5c\xaa\xbb\xea\xcf\x6a\xbc\xef\
\x27\x4b\x6c\x2a\x29\xfa\xdd\x3d\x73\x3b\x43\x37\xfd\x16\x5a\x54\
\xba\xc4\x0f\xe1\xd7\xbf\xad\xf1\xc5\xc3\x29\x86\x87\x06\xd9\xbd\
\x6b\x27\x57\x5e\x71\x80\x5d\x3b\x77\x30\x30\x30\x80\xeb\x38\x6d\
\x11\x82\xeb\x11\xbe\xbb\x1e\xb6\x6c\xbf\xb7\xdc\x08\xe3\xd2\x31\
\x46\x94\xc5\x7d\x31\x70\x68\x09\xee\x4b\x98\x86\x89\xe9\x05\xbe\
\xf5\x9d\xfb\xf1\x7d\xf5\x74\xec\x07\x41\xf4\xaa\x80\x91\x1e\x15\
\x49\x36\x8c\x38\xbf\x97\x7a\x1f\xbb\xbb\x82\x20\x4c\x00\x04\xc0\
\x78\x5d\xb1\x84\x25\xbb\x81\x44\x45\x8b\x86\xa1\xda\x96\x26\x04\
\xba\x65\x71\xda\xde\xcb\xff\x98\xac\xf1\x8b\xf9\x1b\x78\xff\x8e\
\x6f\xf1\x9b\x5b\x6e\xe2\xf6\xd9\xcd\x9c\x6b\x64\xa8\x86\x06\xf5\
\xc0\xc4\x93\x1a\x21\x1a\xa1\xd4\xf0\xa5\xc6\xf1\x6a\x1f\x87\xca\
\x83\x4c\x79\xe9\x16\xb0\xd5\xc6\x6d\xd1\x6f\x55\x78\xcf\xd6\xeb\
\x79\x7a\xee\x18\x37\x8c\xf7\xf1\xcd\xb1\x01\xc5\x6a\xea\x1a\xa6\
\xa9\x63\x5b\x2a\xeb\xbe\x69\x19\x2a\x8a\x50\x53\xa0\x25\xa5\x55\
\x23\x06\x2b\x50\xaf\x11\xc0\x3a\x33\x3e\xcb\x99\xf1\x59\x74\xdd\
\x44\xd3\x2d\xdc\x54\x06\xdd\xb0\xd1\x75\x47\x15\xda\x6d\xab\x73\
\x19\x7d\x16\xca\x8d\x1c\x27\xc8\x93\x82\x88\x5d\xd5\xb9\xf3\xbe\
\xc7\x91\x92\x25\xe3\x74\x39\xfb\xc5\x9f\x7a\x11\xef\xfb\xd8\x97\
\x98\x9a\x78\x98\xfe\x81\x7d\xe8\x7a\x4b\xa9\xa3\x15\xee\x3b\x1f\
\x3f\xf5\x1a\xfe\x61\xef\x9f\x02\xf0\xd6\xc1\x9b\x48\x69\x35\xfe\
\xf8\xe4\xeb\xf1\x65\x7b\x82\x50\x89\x44\x68\x3a\xe9\xec\x70\xc7\
\xf6\x64\xdb\x32\x0a\x74\x76\xfe\x26\x49\xe9\x75\x5e\x5f\xba\x93\
\x43\x95\x11\x7e\x30\xbf\x0d\x99\x9c\x09\xb5\x8c\xad\x35\xd8\xe2\
\x4c\xb2\xd5\x9e\x64\x8b\x3b\xc1\xa8\x3d\x4d\xbf\xb9\xc8\x80\xb9\
\x40\xc9\x5c\xa0\x68\x96\xdb\xe0\xe2\x58\xcd\xe6\x0b\xc7\x47\xf9\
\xbb\xa3\x1b\x15\x29\xaa\x69\x68\x5a\xc4\x3c\x46\x09\x83\x2b\xd8\
\xdc\xb7\x98\xe6\x9e\x05\x99\xb8\x9e\x65\xc4\x5c\xb6\xde\x9b\x0c\
\x5d\xf0\x9d\xa9\x41\x8e\x95\xcf\xf0\xfa\xa1\xfb\xf9\xcc\xa9\xa7\
\x71\xb6\x9e\x25\x8e\x34\x35\x4d\x9b\x74\xb6\x8f\xc5\xf9\x29\x7e\
\xeb\x83\x9f\xe3\x93\x1f\x7a\x3b\x83\x51\x36\xfe\x5e\xed\x29\x57\
\x6e\xe5\x6f\xff\xe4\x17\x38\x33\x3e\xcb\xad\xdf\x7f\x84\xbb\x1e\
\x38\xc6\xd4\xcc\x02\xd3\x73\x65\xca\xe5\x3a\xf9\xac\x4b\x3e\x97\
\x62\xe3\x86\x3e\x9e\xf3\xf4\xdd\x3c\xeb\x29\xbb\x48\xb9\xcd\x73\
\xf8\xdd\x3b\x1f\x51\x49\x44\xcd\xf6\x12\x56\x2f\x2e\x1d\x43\x13\
\x92\x9b\xa2\x1a\x84\x02\xa9\xdc\xda\x7a\x0b\x03\x2b\xda\xd3\xe0\
\xac\x27\xeb\xd2\x8b\xa6\x34\x5c\x26\x01\xe4\x5a\xf5\x60\xbd\xb6\
\x7b\xa5\xbc\x5b\xab\x26\x78\x5c\x83\x8e\xa7\x1b\x98\xbc\x10\x6b\
\xbb\x27\xaf\x13\xb0\xb9\x5c\x18\xb6\x6e\xe7\xfa\x87\xcd\xde\xad\
\x05\x58\x2d\xb7\xde\x5a\x8e\xa5\x17\x57\x79\x37\x1d\x61\x37\x6b\
\x63\xb0\x7a\x01\x1b\x2b\x2d\xa3\xe9\x3a\xbe\x3b\xcc\xf8\x62\x9a\
\x21\x4b\x4d\xd6\xee\x99\xdb\xa8\xf7\xef\xe3\x19\xfb\x07\x71\x53\
\x29\xea\xbe\x16\xa5\x68\x88\x58\xab\x48\xd4\xae\x52\x31\xc4\x51\
\x83\x1a\x2a\x6a\xb0\x7d\xfb\x9b\x4a\x06\x1f\x78\x6b\x89\x62\x46\
\x4d\x2a\x99\xc7\xaf\x63\xe0\xb6\xf7\x23\xa2\xc9\xb3\xe2\xc1\xdb\
\xff\x55\xe7\x96\xb1\x34\x23\x23\x43\xec\xdd\xb3\x87\x2b\x0e\xec\
\x67\xc7\xf6\x6d\x94\xfa\xfb\xb1\x6d\xfb\xb2\x07\x57\x2b\x2e\x07\
\x80\xa4\x8e\x02\x11\x96\x68\xa8\x13\xdd\x71\xb1\xdf\x7e\xd7\x61\
\x6e\xbf\xeb\xf0\x79\xb7\x47\xb9\x8a\x9a\xfa\x11\x33\xaa\x05\xd8\
\x08\x35\xc5\x6a\x49\x19\x4d\x82\x21\x9a\xae\xe1\xd8\x36\xd9\x74\
\x9a\x33\x0b\x3b\x79\xdf\x19\x8d\xe7\x5a\x07\x79\x46\xfe\x1c\x2f\
\x2b\xf5\xd6\x86\x69\x2f\xc5\xc9\x5a\x81\xd3\xb5\x1c\xa7\xeb\x05\
\xc6\xeb\x59\x0a\x66\x95\x4d\xce\x2c\x2f\xee\x3f\x4c\x46\xaf\x73\
\x70\x2e\xc3\x47\x0e\x6d\x4b\x04\xed\xa6\x69\xe2\x38\x0e\xe9\xb4\
\xca\xb4\x6f\x9b\x16\xba\x6e\xb0\x60\x8f\x10\xa2\xb3\xd3\x3a\x81\
\x42\x9f\x51\x14\xa1\x26\x28\xf6\xef\x40\x37\x2c\x74\xdd\x52\x6e\
\xe8\xa4\x47\x5b\x21\x9d\x48\x9e\x1a\x9a\x4c\x6d\x48\x33\x7a\x30\
\x5e\x41\xe0\xb8\x7d\x9c\x3a\x3b\xc1\x9d\xf7\x3e\xc6\x33\x9f\xbc\
\xa3\xa7\x63\x7d\xe9\xf3\xae\xe0\xbb\x77\x1c\xe2\xfa\x5b\x1e\xe4\
\xcc\xc9\xef\x61\x59\x19\x2c\x27\x97\xb0\x85\x44\xec\x88\xa6\x19\
\x14\xfa\xb6\x27\x3b\x7c\xa4\x3c\x44\x88\xe0\xa1\xb9\x34\x52\xc2\
\x6b\x4b\xdf\xe3\xc9\x99\xc7\xf8\xd8\xa9\x57\x73\xeb\xec\xde\x2e\
\x7b\x6a\x9b\xaa\x97\x62\xb7\x8e\x9b\x8c\xa3\x79\xbc\x65\xe8\x56\
\xde\x36\x7c\x33\x79\x43\x05\x13\x9c\xaa\xf7\x71\xa4\x32\x44\x25\
\xb4\xe8\x37\x17\xd9\xe2\x4c\x32\x64\xcd\x75\xe5\xdb\x16\x7d\x9d\
\xc9\xba\xc5\xe3\x0b\x39\x26\xeb\x16\xe7\xea\x16\xb7\x4f\x16\x78\
\x60\x36\x9b\xb0\x98\xba\xae\xea\x7b\xda\x96\x85\x6d\x59\x98\xa6\
\x99\xa4\x07\x09\xc2\x10\x3f\xf0\x09\xe3\xd7\x20\x6c\x4f\xa2\x2b\
\x14\x4b\x2e\x34\xf8\xdc\x99\xed\xfc\xee\xae\x83\x7c\x74\xcf\x75\
\xbc\xe3\xc1\x37\x52\xf7\x35\x64\xf4\xa4\xe1\xd8\x29\xc2\x94\xc7\
\xe9\xb1\x19\x7e\xf6\xd7\x3e\xc5\x1f\xfc\xe6\x1b\x79\xc6\xd5\xdb\
\xbb\xb4\x78\x65\x1b\x19\x2a\x70\xcd\xab\x9e\xc9\x35\xaf\xea\xbd\
\xde\xe3\xb9\xa9\x79\x8e\x9f\x9e\x5c\xc2\x5e\x01\xbc\xa4\x74\x8c\
\x50\xc2\x2d\x13\x7d\x20\x14\xc0\x34\x0c\x03\xdb\x34\x15\x03\x1b\
\xa5\x68\xd0\x5b\x98\x99\xf3\x9d\xd8\x96\x63\xaa\x56\x9b\x20\x2e\
\x17\x17\xd8\xc5\xb8\x17\xaf\x47\x14\xe0\xff\x6b\x91\x84\x97\xf3\
\xf1\x76\x1b\xd3\x97\x93\xdc\x27\xb6\xae\x69\x1a\xba\x47\x0b\x26\
\x8a\x9a\x25\xcb\xc4\xef\x0d\xc3\x20\x9d\x4e\x71\xcf\xa9\xed\xfc\
\x07\xeb\x01\x00\x52\xa7\x6f\x65\xf6\xca\x77\xa0\xeb\x82\x37\xbc\
\x6c\x2f\x5f\xf8\xd6\xd1\xa8\x80\x73\x4b\x96\x76\xcd\x44\x8b\x58\
\x03\x11\x69\xae\x3a\xe9\xf2\xfd\x9b\x2c\x7e\xff\xcd\xfd\x38\x96\
\xba\x01\x15\x0e\xfe\x1d\x7d\x77\xff\x39\xf1\x44\x32\x59\x81\x37\
\x7f\xc5\xe0\x91\x85\x0c\x9b\x36\x8d\xb0\x77\xcf\x1e\xae\xbc\xe2\
\x00\xdb\xb6\x6e\xa1\xaf\x58\x4c\xc0\x55\xb3\xcd\xab\x1d\xef\xea\
\x76\x31\x5d\x84\xf1\xfb\x98\xea\x14\xc9\x6f\x82\xaa\xa1\xca\x96\
\x94\x8c\x79\xa4\x68\x0e\x30\x4d\xd3\x49\xa7\xdb\x45\xe3\xad\xdb\
\x6c\xbf\x99\x42\xe2\xfa\x89\xde\xc7\xaf\xba\xde\xee\x39\x2e\x9a\
\x6a\xc2\x9d\x69\x98\x1d\x03\x5b\xb9\xe9\x5c\xc7\x41\xd3\x75\xea\
\x9e\xc7\xe9\x7a\x9d\x2f\x4e\xda\x7c\xe6\xe4\x22\x39\x66\x71\x68\
\x60\x88\x00\x43\x84\xe8\x84\x98\x9a\x44\x17\x12\x4b\x84\x6c\xc9\
\x54\xd9\x95\xa9\xb0\x23\x53\x65\x6f\x7a\x8c\xab\xb2\x67\xe8\xb4\
\xd9\x86\xc9\x87\x1e\xd9\xce\xd7\xcf\x0c\x20\x01\x5d\xd7\xb0\x4c\
\x83\x94\xeb\x90\xcb\x64\xc9\x65\x73\x2a\x0b\xb6\x63\xab\xa2\xcf\
\x86\xc3\xb4\x56\x62\xa7\x7d\x92\xbc\x51\xa6\xd6\xd0\x89\xcb\xdc\
\x58\x76\x9a\x04\x40\x45\xb9\xba\x54\x2f\x89\x0e\x00\x12\xf3\xb5\
\xa2\x73\xd4\x37\x5f\x25\xa4\x32\x83\x54\x2b\x93\x7c\xe4\xaf\xbe\
\xc6\x67\x3f\xfe\x4b\x3d\x6b\xdf\xde\xf3\xcb\xaf\xe6\xc0\x9e\x8d\
\xdc\x7e\xd7\x11\xee\x7d\xf0\x38\x8b\xf3\x4b\xdd\x8c\xb6\x93\x6f\
\x8b\x34\x0c\x81\x39\x3f\x85\x21\x24\xbf\x7c\xd7\x3e\xde\xb1\xfd\
\x34\x6f\xda\x3c\xce\x27\x76\xfe\x2d\xb7\xcd\xed\xe6\xf3\xe3\xcf\
\xe6\x8e\xf9\x9d\x1d\x8c\x56\xfb\x51\xb5\xc1\xac\xe8\xad\xad\x35\
\x78\xfd\xc0\x0f\x78\xc7\xc8\x4d\xf4\x9b\x65\x66\x3d\x93\x4f\x1d\
\xd9\xc8\x06\xb7\xce\xcb\x86\xa7\xd9\x58\x54\x49\x36\x43\x29\x18\
\xab\x59\x7c\x6f\xaa\xc0\x89\xb2\xc3\x89\x8a\xcb\x89\x8a\xc3\x58\
\xd5\x66\xba\x61\x52\x0b\xb4\x08\x77\xb6\xb8\x00\x01\x4d\x8f\xa2\
\x3c\x75\xe5\xca\x75\x1d\x9b\x74\x2a\x4d\x26\x93\xc2\x75\x5d\x0c\
\x43\x07\x09\x41\x10\xe0\xfb\x3e\x0d\xcf\xc7\xf3\x3c\x3c\xdf\x27\
\x88\x00\x97\x44\xa0\x47\x2e\x61\x04\x1c\x0c\xfa\xb8\x69\x66\x8e\
\x17\x16\x4f\xf2\xbe\x1d\xd7\xf3\x7b\x8f\xbe\x44\xb1\xb7\x11\x93\
\x95\x4a\x65\xd0\x75\x8d\xc5\xf2\x3c\xbf\xfe\x81\x7f\xe4\x1d\x6f\
\x79\x01\x6f\xbf\xe6\xf9\xcb\xba\xe0\xd6\xcb\xbe\x77\xf7\x11\x80\
\x25\xec\x55\x4a\xf7\x78\x46\xe1\x0c\x0f\xcd\x67\x98\x6a\x98\x8a\
\xc1\xd3\x75\x4c\xc3\xc0\xb2\x2d\x1c\xdb\xc6\x34\xd5\x83\xa6\xba\
\x76\xcf\xe7\xc1\xaf\x9d\xf9\x59\xeb\xe4\xa8\x69\xda\xb2\x0c\x56\
\x6c\xcb\xb9\x5d\xce\x67\x99\xd5\x6c\xbd\xb6\xb1\x5a\x14\x60\xaf\
\xb6\x5c\xbf\xae\x87\xf5\xd2\x67\x2b\xc9\x08\x7a\xdf\x46\xef\xed\
\x49\xf6\x7a\x11\x8e\x77\xbd\xac\x1b\xb8\x5a\x6b\x10\xc3\xc5\xb6\
\x25\x1a\xac\xe5\xc1\x46\xcb\x34\x24\x5a\x9c\x84\x2d\x93\xbf\xa1\
\x69\x64\x52\x29\x1e\x33\xaf\x06\x14\xc0\x72\xce\xdd\x83\x33\x7e\
\x37\xb5\xa1\xa7\xf0\xf3\xaf\xd9\xcd\x6d\x07\x67\x39\x35\xd1\x50\
\x49\x1b\xf5\x16\x51\xbb\x16\xeb\xae\xf4\x25\x75\x06\x9f\xb5\xc7\
\xe1\x37\x5f\xdb\x87\xae\x0b\x90\x21\xa5\xef\x7f\x94\xdc\xa1\x2f\
\x24\xbf\x1f\x9d\x85\x6b\xbe\x6c\x72\xce\xcf\xb2\x65\xf3\x46\xf6\
\xef\xdb\xc7\x81\xfd\xfb\xd8\xba\x65\x33\xc5\x42\x61\xc5\x1c\x57\
\x97\x2b\x8b\xb5\xd2\x40\xa9\x9a\x7d\x80\xe0\x2a\xe7\x28\xba\x7c\
\x86\x42\x8b\x82\xc8\xd5\xd0\x7b\xe2\xcb\x5e\xed\x85\xfd\x2a\x70\
\xe0\x6c\xd5\x6e\x73\x63\x08\x01\x86\x6e\xe0\xb8\x36\xb6\x63\x21\
\xc3\x90\xc0\x57\x79\xb0\x74\x5d\x67\x61\xc1\x60\xba\x51\x27\xf0\
\x7c\x82\xd8\xbd\x46\xf3\xc2\xb8\x75\x46\xb6\x7d\x57\x34\x1b\x0c\
\xd9\x35\x06\x9c\x06\x73\x0d\x15\x2d\x38\x51\xb7\xd4\x18\x8b\x9e\
\xee\x6d\xd3\x24\x95\x72\x29\xe6\x72\xf4\x17\x0b\x14\x0b\x79\xb2\
\xe9\x34\xb6\x65\x83\x00\xc3\xd0\x79\xd8\x7c\x2a\xcf\x0b\xbf\xce\
\xbb\x47\xbf\xcc\x6f\x3d\xfa\x86\xc4\x75\x1a\x61\x42\x84\xa4\xc5\
\xf5\xd5\x0a\xae\x44\xf4\xbb\x88\xa0\x67\xcb\xf7\x9d\x26\x04\x86\
\x69\x93\xc9\x8d\x70\xf6\xdc\x69\xde\xf9\xde\xcf\xf2\x5f\xff\xf3\
\xab\x38\xb0\x7b\xf5\x84\x9f\xe9\x94\xcd\x9b\x5f\xfd\x63\xbc\xf9\
\xd5\x3f\x46\xbd\xe1\x73\xf2\xcc\x14\x96\x69\x60\x18\x3a\x27\x4e\
\x4f\xf2\x1b\x7f\xf0\x4f\x2a\xe1\x66\x47\x2a\x07\x53\xf8\x08\x0c\
\xaa\x81\xc6\x5f\x1c\xde\xc4\x57\xcf\x0c\xf2\xae\xdd\xc7\x79\x76\
\xe9\x51\x9e\x9d\x7f\x94\x39\xdf\xe5\xc6\x99\x03\x7c\x67\x76\x2f\
\xc7\xaa\xfd\x9c\xaa\x17\xf1\xa5\xde\xd6\xfa\x94\x5e\xe3\xaa\xcc\
\x49\x9e\x9a\x3d\xc6\x53\xb3\xc7\x38\x90\x39\x8d\x29\x02\x16\x3c\
\x83\x4f\x1d\xd9\xc8\x17\x4f\x0e\x53\x0d\x74\x04\x92\x3f\x39\xb4\
\x0d\xd7\x90\x98\x5a\x48\xd9\xd7\xf1\xc2\x76\x76\x25\xbe\xee\x85\
\x10\x18\xa6\x48\xd2\x23\x08\x4d\x43\x03\x84\xae\x5c\xd1\x7a\x04\
\xae\x1c\xc7\x21\x9b\x49\x53\xcc\xe7\xc9\xe7\xf3\xa4\x53\x2e\x96\
\x69\x20\x85\x20\x08\x02\xbc\xba\x47\xc3\x6b\xe0\xf9\x3e\x8d\x86\
\x87\x1f\x45\xd6\x21\x65\xe4\x16\xd6\xd1\x04\x34\x1a\x1e\x5f\x2a\
\xbf\x88\xe1\xca\xd7\x78\xf5\xc0\x43\x1c\xa9\xf4\xf1\x99\x13\x4f\
\x52\x0d\x8b\xce\xb5\x65\xdb\x18\x46\x91\x85\x85\x39\x3e\xfd\xf9\
\x9b\xf8\xfa\x8d\xf7\xf1\xd6\xd7\x3e\x8b\x57\xbe\xf8\xc9\xd8\xd6\
\x79\xc5\xf6\x2c\x6b\x87\x8e\x9c\xe1\xb3\xff\xe7\xbb\xdc\x7c\x87\
\x12\xea\x9b\x66\x7b\xf4\xe0\xd5\xb9\x71\x0c\x11\xf2\xfd\xa9\x5c\
\xd2\x77\x86\xa1\x61\xdb\x56\x94\x2f\xcb\xc6\x34\x8c\x28\x50\xa3\
\x09\xb0\x2e\x37\x96\xa5\x57\xf7\xca\x7a\xec\x73\xbd\x5c\x66\x2b\
\x81\xac\xf3\xd9\xde\x85\x6c\xa3\x97\x6d\xff\x30\xb7\xd1\xba\x2d\
\xb8\x7c\x5c\x84\xbd\x5a\x27\xc8\xba\x1c\xda\xbc\xe2\x9d\xa6\x5d\
\x83\xb5\xf4\xbb\xd6\xef\x41\x3d\x05\xb9\x8e\x8b\x2c\xec\xe0\xde\
\x73\x25\xae\xce\xa9\x84\x91\xa5\xef\x7f\x84\x53\xaf\xfc\x1c\xba\
\xae\xf1\xe7\xbf\xf1\x14\xde\xf5\x89\x87\x38\x3d\x15\x44\x99\xda\
\xf5\x96\x22\xce\x3a\x5a\x87\x56\xe0\x95\x4f\x4d\xf1\xf3\x2f\x57\
\x8c\x8d\x08\x1a\x0c\xde\xf2\xbb\xa4\x8f\xdf\x90\xfc\x7e\xcf\x18\
\xbc\xe5\x2b\x26\x75\xb3\xc0\xf6\xad\x9b\x38\xb0\x7f\x3f\xfb\xf7\
\xed\x65\xf3\xe6\x4d\xe4\x72\x39\xac\x2e\x39\xae\x2e\x77\x5b\xb6\
\xbd\x51\xdf\xf8\x46\x86\x07\xf4\xab\xb8\xd2\xbe\x97\xd7\x0c\x1e\
\xe4\xf3\x27\x77\xad\xa8\xdf\xb9\x10\x7b\x4e\xdf\x29\x9e\xdb\x77\
\x92\x9b\x27\x8a\x1c\x2d\xbb\xe8\x86\x40\x13\x8a\x65\x8c\x85\xe5\
\xb6\x65\x61\x18\x06\x86\xa6\x26\x73\xdd\x50\xe3\x60\x36\x35\x47\
\xb9\x52\xa1\x5e\x6f\xe0\x07\x3e\x41\x10\x46\x2e\xc6\xa6\x28\x5a\
\x82\x02\x66\x61\x48\x25\xb4\x79\xbc\x9e\xe6\xb1\x5a\xac\xc1\x91\
\x98\x26\x09\xb8\x32\x0d\x13\xd7\x75\x29\xe4\xb3\x0c\x0e\x0c\x30\
\x38\x50\xa2\x58\x2c\x90\x4e\xa5\xb0\x2d\x93\x30\x0c\x31\x0c\x93\
\x07\x33\x2f\x64\xb8\xf2\x00\x3f\x9e\x3b\xc8\x6f\x6f\x71\xf8\xf3\
\x13\xcf\x67\xb6\x61\x2b\x86\xa5\x0d\x5c\x01\x08\x2c\x2d\x60\x83\
\x35\xcf\xa0\xb5\x40\xda\x68\x90\xd6\xeb\xa4\x74\x8f\xb4\x56\x27\
\xad\x37\x48\xe9\x0d\x0a\x46\x85\x8c\x51\xe7\xb7\x0f\xbf\x81\x9a\
\x34\x95\x38\x19\x41\x3a\x33\x40\xe0\xd7\x38\x7c\x74\x8c\x5f\x7c\
\xcf\xa7\x79\xc5\x8b\xae\xe6\x97\x7f\xf6\x25\x14\xf3\xe9\x9e\xfa\
\xd7\xb6\x0c\x76\x6e\x1d\x4a\x3e\x3f\xf4\xe8\x29\x00\x74\xdd\x6a\
\x03\x58\x25\x73\x91\x8c\x5e\xe7\x44\x45\xe5\x52\x12\x42\x70\xb2\
\xe2\xf0\xee\xfb\xf7\xb1\x3f\xbf\xc8\x8b\x07\x27\x79\xe1\xc0\x34\
\xaf\x1b\xf8\x01\xaf\x1b\xf8\x01\xa0\x58\xa7\xf1\x46\x8e\x10\x0d\
\x5b\xf3\x70\x35\x0f\x57\x6f\x24\x85\xbb\xeb\xa1\xc6\x7d\x33\x19\
\xee\x9c\x2a\x70\xed\xe9\x41\xca\xbe\x9e\xb8\xf2\x62\x4d\xa5\xaf\
\x69\xf8\x80\x30\x24\x56\x24\x36\x13\x42\x81\x29\xa5\xa5\xd2\x12\
\x3d\x95\xd6\xc2\x3e\xeb\xb1\xb6\x4f\x37\x30\x4d\x0b\xc7\xb5\x49\
\xbb\x29\x8a\xf9\x2c\xf9\x7c\x8e\x7c\x36\x47\x2a\xed\x62\x46\x6c\
\x69\x10\x84\xf8\xbe\x87\xe7\x07\x78\xbe\x8f\xef\x7b\x04\x41\xa0\
\x5c\xd1\x91\x7b\x50\x31\xd0\x92\x4a\xb5\xc6\xf4\x4c\x8a\xcf\x4c\
\xbd\x9c\x77\x1b\xd7\xf2\xae\x2d\xb7\x72\xb4\x92\xe3\xc6\x89\x4d\
\x40\xf3\xc6\xaa\x69\x3a\xb9\x5c\x91\x6a\xb5\xcc\xd8\xc4\x1c\x7f\
\xf2\xd7\x5f\xe7\x6f\x3e\x7f\x13\x6f\x7c\xc5\x33\x78\xde\x33\xf6\
\xb0\x73\xdb\xd0\x9a\x2b\x1e\xc4\x76\xfc\xd4\x24\xdf\xbd\xf3\x11\
\xbe\x73\xc7\x21\x1e\x7c\x44\x9d\x33\xc3\x30\x71\xdd\xd4\x12\x06\
\xf8\x39\x7d\xea\xf7\xbb\x66\x72\xea\xfa\x88\xae\x1d\xd7\x76\x70\
\x1d\x1b\xc7\xb1\x23\x77\x69\x7b\xb9\xa4\xcb\x6d\xe2\x7d\xa2\xda\
\x8f\xfa\xe0\xff\x6e\xeb\x45\x5f\xf8\xc3\x32\xf1\xad\xaf\x7c\x59\
\xae\xe6\x26\x8c\x9f\x56\x3b\x67\xf1\xce\x65\xc2\x30\xa4\xd1\x68\
\x70\xfa\xec\x59\x8e\xde\x77\x13\xef\xee\xbf\x36\x29\xff\x31\xbf\
\xfb\x8d\x4c\xfe\xd8\xef\xa9\xad\x48\xf8\xb7\xbb\xa6\xf9\xd7\xdb\
\x67\x39\x3a\x1e\x24\x82\x61\xf5\xaa\xb6\xa9\x09\xc1\x4f\xbd\x20\
\xc3\xeb\x9f\xad\x9e\xfa\xb4\xc6\x02\xc3\x37\xfe\x1a\xce\xb9\xbb\
\x93\x7d\x5e\x7f\x14\x7e\xee\x3a\x07\x2b\x5d\x60\xeb\xd6\x2d\x5c\
\x71\x60\x3f\x07\xf6\xed\x63\x74\x74\x64\xd5\x1c\x57\x9d\x5f\x9f\
\x0f\x93\x75\x29\x5c\x84\xd0\x8c\xaa\x09\xc2\x90\x5a\xb5\xc6\xd4\
\xcc\x34\x13\x27\x1f\xe5\x67\x16\xff\x14\xa4\xe4\x8f\x8f\x3e\x9f\
\x2f\x9d\xd9\xa9\x80\xcb\x3a\xde\x48\x5e\xd0\x7f\x82\x0f\xed\xb9\
\x89\xac\x51\xe7\xa7\x6e\xbb\x92\x53\x35\x17\xd3\xb4\xc8\xa4\x53\
\x6c\x18\x1c\x64\xdb\xe6\x4d\x6c\xdd\xb2\x89\xc1\x52\x09\xdb\xb6\
\x08\x82\x90\x72\xa5\xc2\xdc\xfc\x1c\x33\x73\x0b\xcc\x2f\x2c\x50\
\x2e\x97\xa9\x54\x6b\xca\xe5\xe3\xfb\x48\xa9\x32\xc0\xcb\x50\x36\
\xc1\x55\x10\xe2\x05\x1e\x81\x1f\x44\x82\x7c\x95\x1c\x54\xe9\xcb\
\x14\x70\x37\x0c\x03\xc7\xb6\xc8\x66\x33\x94\x8a\x45\x4a\xa5\x7e\
\x86\x06\x4a\xf4\xf7\x15\x49\xbb\x2e\xa6\x69\x12\x04\x21\x73\x0b\
\x0b\x9c\x1d\x1b\x67\xf2\xe4\xc3\xbc\xc5\xff\x1c\xa3\xd6\x2c\x73\
\xbe\xcb\x75\x93\xfb\x99\x68\x64\x98\xf3\x1c\x06\xad\x45\x46\x9d\
\x59\x46\xed\x39\x36\x3a\x73\x0c\x58\x0b\xab\x10\xf0\x4d\xfb\xca\
\xb9\xab\x79\xdf\xe3\xaf\x5a\xe2\x36\xf4\x1a\x65\xe6\xe7\xce\xe0\
\x7b\x35\xd2\x29\x9b\x67\x3e\x79\x07\x7b\xb6\x6f\x60\xcf\x8e\x0d\
\xec\xde\xbe\x81\x42\xae\x3b\xb3\x18\x4a\xc9\xa9\xb3\xd3\x1c\x3e\
\x3a\xc6\xe1\xa3\x63\xdc\xf6\x83\xc3\x1c\x39\x36\x4e\xb1\xb4\x03\
\xcb\xce\x24\xcb\x3d\x3d\x77\x8c\x4f\xef\xfb\x2c\x9f\x7e\x6c\x94\
\xbf\x3d\xba\x51\xb9\xdf\x34\x0d\xd3\x34\xd0\x35\x05\x8c\xa4\x0c\
\xd9\x9d\x9e\xe5\x40\x66\x8e\x11\xb7\xca\xa8\x53\x63\x83\xab\x22\
\xe1\xea\x81\x46\x3d\xd4\x58\xf4\x75\x0e\xce\x65\xb9\x6b\x26\xc7\
\x43\x73\x19\xbc\x50\xb1\x75\xb1\x36\xd1\xd4\x75\x74\x53\xc7\x32\
\x22\x8d\x94\xae\x02\x4d\xa4\x6c\x46\xa9\x6a\x7a\x1c\x24\xa1\x74\
\x44\x86\x6e\x60\x1a\x06\x86\x69\x24\x05\xd1\x4d\xdd\x40\x37\x22\
\x37\x98\x65\x45\x35\xf7\x52\x64\xd2\x29\x32\xe9\x8c\x62\xaf\x2c\
\x0b\x3d\x29\x8f\xa4\xb4\x7f\x41\x18\x12\x84\x41\x92\xc4\x36\x0c\
\x43\x75\x1d\x44\x2e\x6f\x29\x43\x6a\xd5\x3a\x53\xb3\xb3\x9c\x39\
\x3b\x86\x9c\x3a\xc4\x6f\x97\xbe\x81\xa5\x85\x7c\xec\xe8\xb3\xf8\
\xc7\x53\x57\x74\xcd\xae\x2f\xa5\xa4\x56\xab\x50\xab\x55\x13\x57\
\x58\x3a\x65\xf3\xa4\x7d\x9b\x79\xf2\x81\x2d\x6c\xdc\xd0\x47\x2e\
\xeb\x52\xc8\xa5\xc8\x67\x53\x38\xb6\xc9\xe4\xf4\x02\xe3\x93\xf3\
\x8c\x4f\xce\x31\x3e\x31\x97\xbc\x9e\x1e\x9b\xe1\xec\x39\x55\x9f\
\x51\x08\x11\xe9\x01\xd3\x4b\x98\x2b\x80\xac\xd1\xe0\xfa\x67\x7e\
\x0e\x2f\x94\xbc\xee\x96\xab\xf1\x51\x1a\xb4\x42\x3e\xc7\xe8\x86\
\x0d\x6c\xdd\xb2\x89\xd1\x0d\x43\xe4\x73\x39\xdc\x0e\x19\xc3\xda\
\x4c\x5b\x72\xed\x77\x8b\x12\xbc\x50\x5b\x0f\x91\x7b\x2f\xae\xc8\
\xf5\x10\xb9\x77\xb6\xe5\x7c\x8f\x7f\x3d\x05\xf2\xbd\xec\xa3\xbb\
\xad\xdc\x67\xbd\x6d\x63\xed\x6d\x59\x69\x4c\x5d\xc0\x0e\x2e\x7c\
\x1b\xac\xae\xbf\x5a\x4d\xa0\x0e\xab\xf3\x12\xbd\x88\xdc\x45\x97\
\xe5\xe3\xd7\x55\x35\x58\xbd\x6b\xb4\x62\xea\xdb\x20\x9f\xcb\x63\
\x0f\xee\xe5\x5f\x4f\x6f\xe1\x0d\x23\xc7\x00\xc8\x3d\xfa\x7f\x90\
\x86\xc3\xd4\x53\x7f\x1d\x21\x34\x5e\xf6\xb4\x3e\x5e\xf6\xb4\x3e\
\x1e\x39\x59\xe3\x96\x87\xca\x34\x02\x81\x17\x42\xc3\x93\x34\x7c\
\xc9\x73\xf6\xb9\xbc\xe0\x0a\xc5\x02\x18\xe5\x31\x86\x6f\xf8\x15\
\xac\xd9\xc7\x92\x7d\xfe\xd3\x41\xc1\x6f\xdd\xe8\x90\x2b\xf6\xb1\
\x63\xdb\x36\xae\x38\x70\x80\x7d\x7b\x77\x47\x39\xae\x32\x6b\xca\
\x71\x75\x39\xba\x09\xbb\xf6\x3b\xd1\xa4\x6a\x98\x48\xa7\x9f\x7f\
\x9e\x7a\x39\x6f\x34\xbf\xc5\xfb\x77\xdc\xc0\xcb\xfb\x1f\xe1\xbb\
\x53\x9b\x39\xb8\x50\xa2\x16\x1a\x98\x91\xee\xc9\xd0\x42\x0c\x11\
\x62\xc6\xef\x09\xf1\xd1\xf0\x43\x15\xc9\xe7\x4b\x0d\x2f\x7a\xef\
\x49\x0d\x53\x84\xec\xcf\x4e\xf2\xcc\xc2\x19\x5e\x52\x3a\x4a\x35\
\xd0\xf9\xf0\x83\xdb\x38\x59\x75\xd5\xa4\xaa\x29\x51\xbb\xe3\x3a\
\x38\xae\x83\x6d\x5b\x6a\x12\x35\x4d\x30\x95\x8b\xce\xb2\x4c\xd2\
\xe9\x34\xe5\x72\x9e\x6a\xb5\x4a\xbd\xd1\xa0\xe1\x35\xf0\x7d\x95\
\x37\x2b\x0c\x54\xf9\x9b\x78\x02\xf5\x03\x1f\xcf\xf7\xf1\x1a\x3e\
\x9e\xaf\x80\x56\x10\xaa\xc8\x47\x04\xe8\x9a\x8e\x69\x9a\xa4\x53\
\x0e\xb9\x4c\x86\x42\x21\x4f\xb1\x50\xa0\x90\xcb\x91\x72\x53\x0a\
\x64\xe8\x4a\x7b\x64\x5b\x16\xe9\x74\x8a\xa9\xcc\x06\xfe\xe4\xe4\
\x35\x5c\xd9\xb8\x83\x37\x0d\x3c\xc4\x5b\x87\xef\x5a\xd2\x9f\x8d\
\x50\x63\xac\x6a\xf1\xbd\x85\x02\x67\xab\x36\x53\x75\x93\x6a\xa0\
\x53\x0e\x74\x2a\xbe\x7a\x2d\xfb\xd1\x5f\xa0\xf3\xc1\x2b\x0e\xf3\
\xba\xc1\x7b\xb9\x63\x7e\x0b\x5f\x9f\x3c\xd0\x76\x75\x1a\xa6\x43\
\x5f\x69\x3b\xd5\xf2\x34\x95\xf2\x14\x37\xde\xfa\x10\x37\xde\xfa\
\x50\xf2\xfb\x40\x7f\x8e\x5c\xc6\x51\x91\x9c\x41\x88\xef\xab\xe3\
\x9b\x5f\xac\x51\x6f\xb4\x97\xa0\xd1\x0d\x0b\xc3\x30\xdb\x18\xac\
\x5d\xee\x18\x00\xc7\x2b\x2e\x42\xa8\x71\x60\x99\x0a\xb8\xb8\x8e\
\x8d\xa6\xe9\xf8\x7e\xc0\x49\xcf\xe5\xf1\xa9\x01\x3c\xdf\x23\x8c\
\xa2\x46\x93\xc0\x84\x8e\xb1\x04\x60\x18\x51\x61\x73\x4d\xc3\xb0\
\x4c\x6c\xcb\xc4\xb1\x5d\xd2\x29\x07\xc7\x76\x94\x7b\x5d\x23\x02\
\xc4\xca\xc7\xaa\x45\xe3\xc0\x30\x4d\x4c\xd3\x8c\xdc\x9b\x06\xa6\
\x69\x46\x51\xa9\xba\x62\x37\x0d\x0d\x5d\x57\x63\xc3\xb2\x4c\x6c\
\xdb\x8e\xf4\x46\x8a\xd5\x32\xf4\xf6\x1c\x77\x31\xf0\x86\xa8\x4a\
\x80\xec\xb8\x01\x4a\x95\xfd\xdf\xb2\x94\xc6\xa9\xd1\x68\x70\xba\
\xb1\x9d\x8f\x8d\xbf\x80\x77\x0e\xdc\xc2\x7b\xb6\xdf\xca\x93\x73\
\x63\xfc\xb7\x47\x5e\xc0\x82\xdf\xce\x22\x09\x21\x70\xdd\x34\x8e\
\x93\xc2\xf3\x1a\x78\x5e\x83\x5a\xdd\x3b\xaf\x80\x10\x4d\xd3\x92\
\x3c\x59\x96\x65\xaf\x78\xcf\xf8\xc5\xcd\xf7\x90\x31\x1a\x7c\xf2\
\xf0\x26\x1a\xa1\x86\xae\x0b\x25\xf4\xb7\x2d\x52\xae\x83\x6b\xdb\
\x58\x86\x89\xd9\xf2\x30\x78\xbe\x2e\x8e\xd5\x34\x47\xdd\x04\xef\
\xad\xaf\xe7\x0f\xee\xd6\xd7\x7a\x61\x24\x7a\xed\x9b\x1f\x89\xdb\
\xd7\x6e\x4f\x84\xe3\xed\x1c\xcf\xad\x76\x39\xb5\xb7\x67\x17\x61\
\xaf\xcb\x68\x9a\x46\x3a\xe5\x32\xb2\x61\x98\xef\x8d\xbd\x90\xa1\
\xf1\xaf\xf0\xdc\xa1\x39\x00\xf2\x0f\xfd\x23\xce\xb9\x7b\x98\x78\
\xd6\xfb\x68\x14\x77\x01\xb0\x67\x93\xc3\x9e\x4d\xcb\x8b\x83\xad\
\xd9\x23\x0c\x5f\xff\x2b\x18\x95\xf1\xe4\xbb\x3f\xf9\x9e\xe0\x23\
\x77\xa6\xa7\x41\x2b\x23\x00\x00\x1e\x79\x49\x44\x41\x54\x18\xe8\
\xef\x67\xe7\xce\x1d\x3c\xe9\xc0\x01\x76\xef\xd9\xcd\xc8\xe0\x20\
\x4e\x3a\x85\xb1\x02\xb8\x12\x12\x42\x01\x5a\xcb\xab\x8c\x5f\x3b\
\x28\xfa\x5e\xd6\x6d\x7d\xbd\x90\x75\x93\x3a\xbf\x82\xb6\x34\x18\
\xad\x82\x27\x5d\xa8\x22\xc9\x8e\x65\x91\x4a\xbb\x9c\x74\xaf\xe4\
\x0f\xce\xda\xfc\x74\xe6\xdf\x79\x56\xe1\x14\xcf\x2a\x9c\x5a\xa1\
\x05\x6b\xb7\x47\xe6\xd3\xbc\xef\xe0\x4e\x4e\x54\x1c\x84\x10\xe8\
\x86\x8e\x6d\xdb\x64\x52\x2e\xb9\x4c\x86\x5c\x3a\x8d\x6b\x3b\x09\
\xc0\x89\xdd\x4a\x86\xae\xe3\x5a\x0e\xd9\x74\x06\xaf\xde\xa0\x11\
\xf8\x84\xbe\x8f\x2f\x43\x95\xa4\x94\x10\x11\xa8\xe2\xe1\x32\x94\
\x91\xfb\x30\xc0\xf3\xfc\x28\xb3\x75\x80\x1f\xf8\x09\xcb\xa5\x6b\
\x1a\xa6\x65\xe2\xda\x0e\xa9\xb4\x4b\x2e\x9d\xc6\x71\x5d\x52\x8e\
\x8d\x69\x59\x68\x51\x21\xe7\x58\xa3\x95\x49\xa5\xe8\xcb\xe7\x58\
\x58\x2c\x72\xc7\x99\xab\xb9\xfe\xd0\x28\x8e\x3f\x43\x4e\x2c\x92\
\xd5\x1b\x4c\xd6\x4d\x4e\x57\x2c\xa6\xea\x56\x4b\xf7\xc6\x65\x77\
\xe2\xd3\x20\x22\x77\x58\xb3\x3f\x3e\xf0\xf0\x5e\x3e\xf3\xb4\x7b\
\xf9\xfd\x6d\xdf\xe0\x68\xa5\xc8\xc3\xe5\xa1\x8e\x87\x31\x81\x93\
\x2a\xe0\xa4\x0a\xc8\xd0\xc7\xf3\x6a\xf8\xd1\xdf\xf4\x6c\x95\xe9\
\xd9\x0a\x2d\xce\x76\x54\x64\x9c\x81\x9b\x4a\x63\x98\x0e\x86\x61\
\x63\x98\x0e\x71\x61\x6a\x92\xbc\x5b\xf0\xc6\xc1\xbb\xf0\x42\xc1\
\x7d\xb3\x59\x40\x28\x17\x93\xeb\x50\xc8\xe5\x28\xe4\x72\x58\xb6\
\x85\xef\xfb\xd4\x6b\x75\xca\xd5\x2a\xf5\x7a\x9d\xba\xef\x11\x78\
\x11\x58\x8d\x18\xa1\xe4\x70\x22\xb7\xab\x1e\x47\xb3\x59\x4a\x23\
\x95\x72\x5d\xb2\xd9\x0c\xd9\x4c\x9a\xb4\x9b\xc2\xb2\x2c\x34\x5d\
\xdd\xc8\x54\xd5\x23\x19\xb9\x87\x23\xf6\xca\xd4\x31\x0d\x13\x23\
\xd2\x10\xe9\x9a\x1e\x31\x5c\x22\x71\x19\x2a\xc0\xa5\xa3\x1b\x46\
\x22\x56\xd7\x34\xad\x5d\xcb\x09\x18\x9a\x46\xac\xd1\x97\x52\xa9\
\xe3\x3a\x9f\x1a\xc3\x50\xe5\xc6\x93\x19\x49\xc3\xf3\x68\x34\x3c\
\x4e\x7b\x7b\xf8\xdd\x13\x29\x7e\x69\xe0\x36\x5e\x56\x7a\x8c\xdd\
\xe9\x29\x7e\xfd\xa1\x97\x72\xb8\xdc\xb7\xe4\x66\x2b\x84\x48\x80\
\x11\x28\x36\xc5\xf7\xbd\x08\xd0\x85\x49\x36\xf5\x18\x70\x68\x9a\
\xde\xf6\xaa\xeb\x1a\x2b\x5f\xe9\xc9\xd9\xe5\xdd\x3b\xbe\xc7\xdb\
\x36\xde\xcf\xb9\x9a\xc5\x97\x4f\x0d\x29\xd7\xaa\xa6\x61\x59\x06\
\xae\xe3\xe2\xba\x6e\x94\x62\xc4\x4c\x5c\xac\x17\x6a\xcb\x4d\x3a\
\xed\x01\x2e\x32\xf1\x38\xc4\x9f\x2f\xa7\x49\xa9\x97\x79\x67\x2d\
\xed\xfd\x91\xab\x75\xed\xf6\x44\x38\xde\xce\x31\xdd\xf9\x7a\x39\
\xb8\x0d\x8d\x5e\xc5\x3b\xad\x4b\xb5\x75\x7c\x27\x4d\x27\x04\x86\
\x69\x52\x2c\x16\xd9\xba\x6d\x1b\x7f\x7f\xcf\x0b\xb0\xc5\xbf\xf1\
\xf4\x41\x15\x89\x66\x4f\x3e\xc8\xc6\xaf\xbd\x85\xea\xf0\x33\x58\
\xd8\xf1\x2a\xea\xfd\x07\x08\xdc\x7e\x42\x2b\xdb\xb6\x3f\x11\x7a\
\xa4\x8f\x7d\x9b\xd2\x9d\x7f\x8c\xd6\x58\x00\x54\x16\xf3\x77\x5f\
\xaf\xf1\x4f\x87\x52\x0c\x0f\x0d\xb0\x67\xe7\x4e\xae\x38\x70\x80\
\x3d\x3b\x77\x32\x30\x58\x22\xed\xa8\xe2\xaa\x3a\xab\x80\x9d\x68\
\x63\x42\x10\x69\x69\x88\x95\xd6\xd0\x12\x81\xb7\xe4\xfc\x48\x94\
\x78\x37\x7e\x65\xe9\xe7\x95\x3a\xb0\x6d\xd9\xe8\x55\x8b\xe0\x94\
\x68\x59\x2e\x11\x27\xb5\xb4\x37\x6e\x9e\xa9\xe9\xd8\xa6\x45\x2e\
\x95\xa6\x98\xcb\x31\xbf\xb8\x81\x8f\x9e\x7d\x31\x46\xe5\x2c\x9b\
\xcc\x69\xb6\xb9\x73\x58\x5a\x80\x1f\x08\x1a\x52\xc3\x0f\x05\x5e\
\x28\xf0\xa4\x86\x17\x0a\x7c\x29\x30\x84\xc4\xd4\x64\xf4\xaa\x22\
\xfb\xcc\xe8\x7d\x20\x05\x87\x17\x53\x3c\xba\x90\xe6\x54\xc5\x46\
\xa2\x26\x4b\x23\x7a\xea\xce\x65\x32\x14\xf3\x05\xfa\x0b\x05\x8a\
\xd9\x3c\x69\xc7\xc5\x36\x4c\xac\x48\x77\x22\x85\x8e\xa5\x1b\x04\
\x46\x48\x2a\xb4\x09\x5c\xc5\xa2\xc8\x20\x20\x14\x20\x83\x30\x39\
\xce\x50\xc8\x84\x5d\x09\x83\x50\x45\x92\x05\x92\x40\xb6\x84\xe9\
\x23\xd1\x35\x1d\xdd\xd0\x94\xdb\xca\x32\x71\x2d\x0b\xdd\x34\x30\
\x63\xed\x5e\x12\x7c\xa1\x83\x61\x92\x75\xd2\x34\x72\x79\xea\x75\
\x25\xb0\x97\x48\x66\x66\x4d\xc6\xab\x39\x1a\x8d\x06\x7e\xa8\x12\
\x6b\x5a\x96\x3a\xdf\x49\x0a\x00\xa1\x74\x3b\x5a\x24\xaa\xd7\x84\
\x16\xff\x8c\x04\xca\x32\xcd\xc7\x1e\xdb\xcf\x7f\xdb\xf3\x00\xff\
\x70\xc5\x3f\xf2\xa1\xa3\x2f\xe1\xcb\xe3\x57\x36\xd5\xf3\xad\x63\
\x4c\x08\x2c\xcb\xc5\xb2\xdc\xf8\x8b\x95\x46\x47\xdb\x40\xe9\x14\
\xb7\xbf\xb0\xef\x08\x3b\x52\x93\x7c\xed\xcc\x00\x53\x0d\x0b\x2d\
\x3a\x1f\x69\x37\x45\xa9\x58\x64\x60\xa0\x9f\xac\x9b\x22\x00\x6a\
\xd5\x1a\xe5\x8a\x72\xcb\x56\x1b\x75\x1a\xf5\x86\x02\xae\x61\x10\
\x31\x87\xea\x89\x42\xd3\x05\xba\xa6\x63\xd9\x16\xb6\x69\xe1\x3a\
\x0e\x6e\xca\x21\x93\x49\x93\x4b\x2b\x80\xe5\x3a\x2e\x96\x6d\xaa\
\xf0\x96\xe4\x3a\x17\x68\x1a\x09\x48\xd2\x63\xe0\x11\x81\x10\xa1\
\x0b\x35\xa6\x23\xb1\xb6\x12\xc2\xab\xbc\x65\x31\x03\x1b\x49\xb9\
\xba\x32\x2a\x71\xdf\x75\xed\x99\x88\x85\x33\x0c\x03\x0d\x55\x2f\
\x51\x65\x42\xf7\x38\x13\x04\x7c\xf4\xec\x0b\x78\xc5\xe2\x7d\xbc\
\x75\xe4\x71\xbe\xf0\xe4\x2f\xf3\xc5\xb3\xfb\xf8\xfb\x53\x57\x71\
\xb6\xb6\xbc\x1e\x2e\x66\xa3\xd6\xcb\x34\x24\x2f\x1d\x38\xca\x2f\
\x6d\xbe\x87\x3d\x99\x29\x1e\x5b\x4c\xf1\x9b\xf7\xec\xa1\x1a\xe8\
\xe8\x9a\xc0\xb2\x4c\x52\xb6\x4b\x26\x93\x22\x9b\x4d\x93\x72\x1d\
\x1c\x4b\xb1\xc0\x9d\x00\xab\xb5\x6f\x56\x9b\xec\x5a\xc7\x4c\xbb\
\x8e\x2b\x59\xa2\xf9\x59\x44\x8c\x95\x1e\xf7\x7f\xf4\x65\x47\xb7\
\x77\x3f\x37\x2c\xf9\xae\xf3\xdc\xad\x16\xac\x29\x56\xc1\x91\xad\
\x89\x5c\x97\xdd\xc6\x2a\xf3\x56\xe7\x18\x8a\xf9\xdb\xe5\xca\xbd\
\xa9\xfd\x2e\x3d\xde\xb6\x63\x4b\xd6\x5b\xba\xce\x4a\xef\x35\xbd\
\x3d\x57\x5d\x77\x5b\xba\x6e\xb7\x7d\x2f\x67\xeb\xa1\x43\xea\x1c\
\x67\xcd\xe3\x6d\xd9\xee\x3a\x80\xdf\x6e\x2e\xfc\x4e\x6b\xbd\x16\
\xba\xf5\xc7\x72\xfb\x69\x0d\x6e\x58\xcd\x56\x73\xef\x41\xe7\xb5\
\xd4\xbd\x1f\x56\x3a\xde\x55\xa3\x08\xcf\xc7\x34\x4d\x23\xe5\xba\
\x8c\x8e\x8c\xb0\xb8\x58\xe6\x13\x0f\x54\x78\xd1\xd4\xf7\xf9\x99\
\x3d\x73\x18\x1a\x20\x43\xdc\xb3\xdf\x8b\x32\xbd\x47\x8d\xd4\x2d\
\x02\xb7\x44\xe0\xf4\xab\x86\x2d\x9c\x40\xaf\xcf\x25\xbf\xd7\x7c\
\xf8\xf9\xaf\xe9\xdc\x78\x3a\xcd\xc8\x86\x21\xf6\xee\xde\xc5\x95\
\x07\xf6\xb3\x6b\xc7\x0e\x4a\xfd\xfd\x38\x71\x8e\xab\x28\x84\x7e\
\x25\x53\x35\x8c\x45\x2c\xeb\x50\x20\x2b\x99\x0c\xba\xb0\x47\x9d\
\xeb\x26\xdb\xe8\xf8\xbc\x8a\x75\x2e\xdb\xb9\x8d\x95\xda\x1d\xb7\
\x4a\x17\x1a\x96\x69\x92\x71\x53\x14\x0b\x05\x2a\xb5\x1a\x8d\x86\
\xc7\x04\x70\xef\x42\x86\xdb\x67\x6b\x78\x5e\x53\xeb\xd4\xe9\xef\
\x96\x9d\xc7\x18\x7f\x2f\xdb\xa5\xdf\x4a\xec\x4c\xc2\x40\x38\xb6\
\x4d\x36\x93\x66\xa0\xd8\xc7\xd0\x40\x89\x52\xb1\x8f\x6c\x36\x8d\
\x63\xab\xf4\x08\x49\x1f\x46\x7a\x1d\x43\xd3\x91\xba\xc0\x88\x19\
\x81\x68\x1f\xc9\x02\x6a\xa7\x49\x9b\x62\x17\x94\x0c\x55\xfa\x04\
\x19\xc8\x24\x05\x85\x90\x22\xd1\xfd\x34\x59\x11\xad\xa5\x5f\x9a\
\x2e\x15\x5d\xd3\x70\x1c\x8b\x7c\x2e\x1b\xb9\xc7\x88\xf4\x5b\x0e\
\xf3\x8b\x0b\x54\xab\x75\xe5\x86\x0c\x54\xbd\xbd\x98\x55\xd0\x35\
\x5d\xb9\x6f\xa2\xd2\x3b\x9a\xae\xa3\x0b\xa1\xc0\x81\xa6\x26\xa0\
\x20\x08\x38\xdc\xc8\xf1\xa1\xc7\x5d\xde\xb5\xf9\x6e\x3e\xb0\xe3\
\x9b\x3c\x35\x7b\x92\x8f\x1f\x7f\x2e\x13\xf5\x94\x1a\x4a\x4b\xfa\
\x36\x9e\x91\x7a\xe1\x3d\x96\xda\x06\x7b\x9e\x5f\xdd\x7c\x33\x12\
\xf8\xa7\x63\xc3\xc4\x2e\x3a\xcb\x34\x49\xa5\x1c\xf2\xb9\x2c\x43\
\x7d\x25\x0a\x85\x1c\x9a\xa6\xd1\x68\x34\xa8\xd5\xeb\x0a\x60\x55\
\x6b\xd4\xea\xea\x78\xbd\x16\x6d\x9b\x16\x1d\xb3\x61\xa8\x44\xad\
\x4e\x14\xcd\xe6\xba\x2e\xa9\x94\x43\xca\x49\xe1\x38\x36\xb6\x69\
\xa2\x1b\x7a\xc2\xa8\xc5\x93\x53\x1c\x88\x12\x8b\xdd\xe3\x07\x2b\
\x11\x3d\x94\xb4\x45\xc0\xc6\x27\x98\xe6\x3d\xa9\x5b\xba\x84\x56\
\xb0\xb5\x9a\x46\x47\xe9\x9e\x0c\x32\xa9\x54\x94\xf0\x36\x20\x8c\
\x86\xfa\x37\xa6\x9f\xc2\xc3\x87\xfb\xf8\x4f\x1b\x1f\xe4\xa7\x47\
\x0f\xf2\x96\x91\x87\xb8\xee\xdc\x4e\x3e\x73\xf2\x6a\x1e\x2b\x17\
\xce\xe3\x0c\xf4\x66\xb6\x16\xf0\x1f\x06\x1e\xe3\x17\x36\xdf\xcb\
\xb6\xd4\x2c\xa1\x84\x7f\x1b\xeb\xe7\xa3\x87\xb6\xb1\xe8\x47\xba\
\x34\xcb\xc4\xb1\x6d\x32\xd9\x34\xf9\x9c\x8a\x7e\x75\x1d\x67\x59\
\xad\xe8\xa5\x60\x11\xce\x37\x32\xf0\x89\xe0\x46\xea\x66\xeb\x1d\
\x09\xb9\xec\xbd\x74\x1d\xe6\xd1\x27\x52\xbf\x5e\x6a\xeb\x04\x83\
\xdd\xc0\xd1\x72\x8c\xf0\xa5\xbc\xae\xd6\x9c\x68\xb4\xd7\x8d\x9b\
\xa6\x49\x21\x97\x63\xc7\xb6\x6d\xf8\x41\xc0\x37\x0f\xea\x7c\xfb\
\xc6\x87\xf9\x2f\xfb\xce\xf0\xac\x51\x7f\xc9\x64\x23\x82\x06\xc6\
\xe2\x19\x8c\xc5\xa5\xb9\x90\xa6\xaa\xf0\x53\xd7\x1a\x1c\x9c\xcd\
\xb0\x69\x74\x03\x7b\xf7\xec\xe6\x49\x07\xf6\xb3\x7d\xdb\x36\xfa\
\x8b\x7d\xd8\x76\xf7\x7a\x61\xab\xb5\x71\xb5\xf7\x97\xc3\xe0\x5e\
\x12\x48\x20\x25\xa6\x61\xe0\xba\x2e\xc5\xbc\xd2\xf2\x00\x2a\xc2\
\xce\xb6\x59\x58\x2c\x53\x6b\xd4\xf0\x3d\xf5\x74\x1f\xb6\xb8\x59\
\x92\x52\x47\xcb\xdc\x14\xe2\x27\x5b\x88\x93\x3a\x0a\x4c\xdd\xc0\
\xb6\x6d\xd2\xae\x4b\xb1\x90\x67\xa0\xaf\x8f\xe1\xc1\x41\x4a\x7d\
\x2a\x7a\xcf\x32\x8c\xb6\xe4\x88\xad\xdb\x8f\x01\x47\x5b\x9f\x76\
\x3f\xca\xc4\x1d\x14\x0f\x4c\xa5\xbf\x69\xb6\x3b\x99\xb8\x85\x96\
\x3c\xbd\x76\xd3\x02\x0a\xa1\x22\xb4\xd2\x29\x25\x2a\xd7\x75\x0d\
\xdb\xb6\xc9\xa5\x33\xcc\x2d\x2c\xb0\x58\xad\xd0\xa8\x37\x54\x84\
\x1a\x34\xc1\x46\xc4\x88\x19\xba\x81\x6e\xa8\xe8\xc8\x24\x2a\x4e\
\x80\x44\xe0\x79\x1e\xe5\x6a\x85\xd3\x73\x19\x7e\xe7\x68\x81\x5f\
\x1d\xb9\x9d\xd7\x0c\x3e\xc8\x7f\x28\x1d\xe2\xda\x73\x07\xf8\xbb\
\x53\x4f\xe5\x64\x2d\x97\x1c\xd3\x92\x3e\xee\x7a\xec\xcb\xdb\x9b\
\x86\x1f\xe0\x37\xb7\xdd\x4c\x5a\xf7\xf8\xda\xe9\x01\x8e\x57\x52\
\x51\x32\x4a\x1d\xdb\xb6\xc8\xb8\x29\xf2\xb9\x1c\x85\x42\x8e\xfe\
\x42\x01\xd3\x34\x91\xa1\xa4\xee\xa9\x74\x07\x8d\x46\x43\xb9\xd1\
\x3c\xa5\x71\x0b\x65\x48\x18\xf5\xb1\x16\xb9\xea\x94\x3e\xca\x8a\
\xfe\x0c\x2c\xd3\xc2\x32\x55\x1f\xe8\xba\x9e\xf4\xfd\x92\x33\x16\
\x6b\x20\x5a\x0e\xac\x73\xb9\xe4\x09\x71\x85\x5b\xc9\xf9\x4c\xd4\
\x02\xc5\xa0\x59\x96\x45\x26\x9d\x51\x38\x5d\xc6\xba\x34\x9d\xd3\
\x53\x06\xef\x7a\x74\x90\xab\x9d\x13\xbc\x79\xe4\x28\x3f\x31\xf4\
\x28\xaf\x19\x7a\x94\xdb\x66\x36\x71\xcb\xf4\x46\xee\x98\x1d\xe1\
\xd1\xc5\xfe\x0b\x0e\xbc\xcd\x1a\x0d\x9e\xdf\x77\x82\x97\x94\x8e\
\xf1\xbc\xbe\x13\xb8\xba\x8f\x17\x0a\xbe\x7a\x7a\x80\x7f\x3a\x3e\
\xc2\x89\x8a\x92\x3e\x24\x2e\x6e\xc7\x21\x9f\xcd\xd1\x97\xcf\x53\
\xcc\xe7\xc8\x66\x32\xd8\x8e\x9d\xe8\x45\xbb\x69\xaf\xd6\xd3\xcd\
\xb1\x92\x3e\x6b\x25\x36\xa0\x5b\x3b\x5a\x41\x44\xeb\xfb\x1f\xbe\
\x53\xa6\xbb\x9d\xcf\xf1\xf6\x34\x16\x2f\x02\x30\x7e\xa2\x82\xd7\
\xcb\xc1\x7a\x39\xb7\xf1\xe7\x8b\xbd\x7f\x21\x44\x13\x60\xf5\x02\
\x38\x7a\xd9\x78\xeb\x7b\xc7\x71\x28\x95\x14\x23\x65\x99\x26\x8f\
\x1c\xce\xf2\x7b\x0f\x1e\x45\xbf\xf3\x34\xff\x71\x74\x86\x67\x8f\
\x7a\x0c\xa7\x25\xc3\x19\x89\xdb\x45\x0d\x56\xf1\xe0\xda\x47\x04\
\x1f\xf8\xae\x49\xdd\xc8\xb1\x75\xf3\x08\xfb\xf7\xee\xe1\x8a\xfd\
\xfb\xd9\xb6\x65\x0b\xc5\xa2\xca\x71\xd5\x19\x6a\xdd\x0b\x5d\xda\
\xed\x18\xd7\xda\xe9\xeb\xf5\x94\xb2\x96\xdf\x35\x40\x18\x06\x36\
\x20\x22\xcf\x87\x61\xe8\xb8\x8e\x4d\x2e\x9b\x66\x7e\x7e\x91\x72\
\xb5\x9a\x24\x6b\x8c\x0b\x32\x13\x83\x14\x29\xda\xfa\x27\x79\x12\
\xd0\x22\x42\xa9\x05\x60\xa9\x49\xcc\x24\xe5\x28\xd7\x51\x5f\x3e\
\x4f\x5f\xb1\x8f\xbe\x42\x8e\x5c\x26\xdb\xf6\xf4\xbd\xac\xe6\xad\
\xe7\x3e\xea\x8d\xda\x15\xb1\x8f\x63\x19\x53\xd2\x1e\x0d\x21\x4c\
\x44\x3a\xad\x80\xa7\xe3\x90\xcf\x66\x59\x2c\x97\xa9\xd6\x6a\x34\
\x3c\x2f\x02\xa6\x52\x01\x32\x43\x8f\x84\xf4\x06\x46\x94\x5a\x40\
\x8b\x22\x5a\x63\xa0\x29\x43\x49\xc3\xf3\x59\x58\x5c\x64\x2a\x3d\
\xc3\xd8\xa4\xc9\x1f\x9c\x74\x79\x86\x7d\x98\xd7\x0d\x1d\xe5\x4d\
\xc3\xf7\x73\xcd\xf0\xfd\x3c\xbc\x38\xc0\xad\x33\x9b\xb9\x6d\x66\
\x33\x0f\x97\x07\x58\xf4\xad\x15\xdb\x4b\xf4\xeb\xa8\x3b\xcf\x9e\
\xf4\x24\x7b\xd2\x93\xec\x4e\x4f\xb2\x2f\x3d\xc1\xa8\x33\xcf\xac\
\x67\xf2\x81\x87\x77\xf0\xad\xb1\x12\x22\x06\x45\x96\x45\xda\x4d\
\x91\xcd\x66\xc8\x65\x32\x11\x13\xe2\x62\x9a\xea\x5c\xb8\x61\xe4\
\x6e\xf5\x03\xfc\xa8\xac\x51\x28\x43\x02\x19\x26\xa0\x42\x01\x4b\
\x95\x4a\x41\xd3\x55\x94\xa6\x2e\xda\x19\xc2\x98\x70\x5c\xf9\x5c\
\x9c\xbf\x75\x9b\x44\x62\x46\x71\x35\x0b\xc3\x30\x59\x4e\xa0\xea\
\x2a\x1a\xba\x8e\x15\x45\x2d\x5a\x96\xc9\xc1\x59\x83\x3b\x1f\x19\
\xe1\x80\x73\x96\xb7\x6c\x3c\xce\x73\x8a\x27\x79\x4e\xf1\x24\x00\
\x33\x9e\xc3\x9d\xb3\x23\x7c\x7f\x76\x84\x53\xb5\x2c\x33\x9e\xc3\
\xac\xe7\x30\xe3\x39\x94\x83\x66\x34\xa0\x2e\xa4\x4a\xd9\xa1\x37\
\xd8\xec\xce\xb3\x37\x33\xc5\xee\xf4\x34\xbb\xd3\x53\xec\xc9\x4c\
\x63\x44\x55\x0e\x1e\x5f\x74\xf9\xce\xb9\x41\xae\x3d\x3d\xa4\x72\
\xb7\xd1\x64\x7f\x2d\xd3\xc0\x89\xc6\x60\xa9\xd4\x47\xa9\xd4\x4f\
\x5f\xb1\x48\x26\x9d\x56\x29\x4e\x3a\x34\xa3\x9d\x40\x6b\xbd\x27\
\x83\xe5\xfa\xbd\x9b\xdb\xa3\x1b\xc8\x5a\x0e\x5c\xc1\xe5\x03\xb0\
\xba\x3d\x28\x77\x1e\xcb\x72\x80\x76\x2d\xfd\xde\x79\xde\xba\x8a\
\xae\xd7\xd0\xde\x65\xdb\xda\xc3\x36\x2e\xd4\x2e\x16\xe8\xb8\x18\
\xfb\x69\xbd\x4f\x2c\xe7\x9a\xed\xfc\xae\xdb\xf9\x5e\x0f\x5b\xf1\
\xdc\x7d\xfb\xda\x2f\xcb\xd6\x85\xba\xb1\x02\x6b\xdd\x51\xab\xc5\
\xa9\x1b\xe6\xe6\xe7\x19\x3b\x77\x8e\x63\xc7\x4f\x70\xec\xc4\x09\
\xce\x8e\x8d\x33\x3d\x33\x43\xb9\x5c\xa6\xde\x68\x90\xd6\x3d\x86\
\x52\x21\x83\xe9\x10\x43\x48\xce\x95\xe1\xd0\xb4\x81\xd0\x4d\xf2\
\xb9\x1c\xa3\x23\x23\xec\xdd\xb5\x93\xfd\x7b\xf7\xb2\x79\xd3\x46\
\xf2\xf9\xbc\xca\x7e\xbc\xcc\x13\x44\xaf\xc0\x65\x25\x70\xd5\x0b\
\x95\x7c\xa1\x26\x56\x11\x24\x2c\xd7\x2e\x09\x04\xbe\x4f\xdd\xf3\
\xa8\x56\xab\x2c\x96\x2b\x2c\x94\xcb\x94\xcb\x65\xca\xb5\x9a\xd2\
\xde\xc4\x00\x2b\x9e\x28\x45\xcc\x06\x35\x59\x09\xe5\x45\x54\x7a\
\x34\x15\x86\xaf\x7e\xd0\x74\x25\xa4\xb6\x4d\x13\xc7\xb1\xc9\xa4\
\xd3\x64\xd3\x69\x32\x99\x74\x94\x77\xca\x4a\x22\x9f\xd6\xf3\xc2\
\x5c\x8f\x6d\xc5\xa0\x51\x4a\xa9\xc4\xf3\xbe\x4f\xc3\xf3\xa8\xd7\
\x1b\xca\x5d\xe6\x45\x45\x90\xa5\x40\x68\x24\xc9\x30\x9b\x79\x9c\
\x94\x5e\x46\x9d\x9b\x98\x55\x03\xdf\xf7\x58\xac\x56\x99\x99\x9e\
\xe1\xcc\xc4\x04\xe3\xe7\x26\x99\x9c\x9e\x66\x7e\x61\x81\xab\x53\
\x27\x79\xe5\xe0\x69\x9e\x94\x9f\xc3\xd1\x9b\x2e\xae\x05\xdf\xe2\
\x4c\x3d\xc7\x54\xc3\x45\x20\xd1\x44\xf4\x87\xca\x68\x6f\x6a\x01\
\x5b\xdd\x59\xd2\x7a\x7b\x24\xe1\x4c\xc3\xe4\xb6\xc9\x3c\x9f\x3c\
\xb2\x99\x39\xcf\x52\x74\xb3\xae\x82\x0c\x72\xd9\x0c\x1b\x06\x07\
\xd9\xb2\x71\x94\x2d\xa3\x1b\x19\x1e\x2c\x91\x4e\xa5\x31\x0d\x55\
\x09\x01\x29\x13\xfd\x9a\x0c\x55\x71\x6e\x19\x7b\x66\x45\xec\x26\
\x66\x89\x3e\x4a\x99\x86\x10\x17\x67\x62\x6f\x3f\x49\xed\x7a\x98\
\xd6\xcf\xab\xed\x37\x66\x37\xe3\xeb\xd3\xf7\x7d\x6a\x8d\x06\x95\
\x4a\x8d\xb9\xf9\x39\xa6\x67\x66\x99\x98\x9c\x62\x6a\x66\x86\x99\
\xb9\x39\x16\x17\x15\xb0\xce\xb1\xc0\x95\xd9\x19\xae\xce\xcf\x72\
\x55\x61\x9e\x4d\xa9\x5a\xd7\xed\x7b\x52\x63\xd1\xb7\x70\x75\x1f\
\x47\xf3\xbb\x2e\x53\xf6\x75\x1e\x5d\x48\x71\xdb\x64\x91\x9b\x27\
\x8a\x9c\xac\x38\x11\x5b\xd7\x14\xf7\x9b\x86\x81\x69\x59\x64\x5c\
\x87\x6c\x36\x4b\xb1\x58\x60\xa8\xd4\xcf\x40\x04\xb0\xb2\x99\xb4\
\x72\xc3\xb6\x00\xac\x5e\x34\x3d\xdd\xfb\x64\xf5\x49\x63\xb5\x6d\
\x27\x6d\x50\x5f\x2e\x79\x8f\x68\xad\x48\xdb\x65\xbf\x3d\x4e\x5c\
\xbd\x1c\xcb\x85\x1e\xef\x4a\x9e\x88\x6e\x00\xea\x7c\xfb\xbd\x1b\
\xb3\xd7\xcb\x7a\xdd\x6c\xd9\x7e\xbf\x84\xb6\x1e\xe0\x63\x55\x0d\
\xd6\x2a\x12\x00\xe8\x7e\x6e\x3a\x81\x70\x2f\xe7\xaf\xd7\xdf\x97\
\xdb\xcf\x5a\xad\x73\x3f\x5d\x19\xac\x5e\x3e\x77\xb3\x6e\xcb\xe8\
\xba\x8e\x13\x31\x1d\xa9\x54\x8a\xbe\x62\x91\x4d\x1b\x47\x19\x3f\
\x77\x8e\xf1\x73\x13\xcc\xcc\xce\x52\xa9\x56\xa9\xd5\xea\x78\x9e\
\xc7\x98\xaf\x22\xca\x64\x56\xb2\xa3\xcf\x24\x9d\x4a\x31\x38\x30\
\xc0\xb6\x2d\x9b\xd9\xb6\x65\x2b\x1b\x86\x87\xc8\x65\xb3\xe8\x86\
\xb1\x6c\x92\xc0\xf5\x9a\xf4\xd7\xca\x2e\x5d\x8c\x7d\x74\x5b\x26\
\x46\xc8\x9a\x69\x22\xa2\x1c\x51\xb6\xad\x40\x50\xbd\x51\xa7\xde\
\x68\x44\xc9\x1a\xc3\x08\x48\xc4\x13\x6a\xec\xd6\x69\x07\x58\xb1\
\xcb\xad\xf5\xbf\x88\x18\x2c\x95\x82\xc1\x52\x3a\x1d\xdb\xc6\xb2\
\xcc\xa4\x86\xdc\x7a\x83\xab\xe5\x8e\xf7\x7c\xd7\x97\x52\x26\x85\
\x74\x6d\x4b\x09\xb9\xe3\x42\xd5\x92\xe6\xd3\x77\xac\x23\x6a\xd6\
\xa9\x14\x2d\x00\xa4\xb9\xad\x20\x0c\xb1\x6d\x07\xcb\x30\xd0\x0c\
\x03\xcb\x50\xe9\x07\x4c\xcb\xe0\xc1\x79\x93\xef\x1f\x19\x46\x06\
\x0d\xf6\xa6\xa6\x79\x4a\x61\x96\xcd\x6e\x85\x11\xb7\xc6\xa8\x3b\
\xc3\x9e\xf4\x64\xd2\xbe\x50\x0a\x02\xa9\x02\x0e\x02\x09\x63\x55\
\x9b\x23\x8b\x79\x8e\x2c\xa4\x38\xbc\x98\xe2\xf1\xc5\x34\x53\x51\
\x59\x22\x21\x44\x33\x1b\xba\x65\x91\x49\xb9\xf4\x17\x0b\x0c\xf6\
\xf7\x53\xea\xeb\xa3\x90\xcb\x62\x5b\x56\x94\xaf\x4a\x4b\x26\x79\
\x5d\x57\xa0\x30\x8e\xbe\xe8\xac\xeb\x09\xed\x37\xf1\x78\x4c\xad\
\xc6\x10\xae\x87\xb5\xba\xac\xdb\x05\xa5\x51\x5f\x87\xab\xdc\xe0\
\xa2\xe6\xc5\x6d\xd6\x0d\x03\x07\x55\x49\xc2\x30\xb4\x68\xbc\xda\
\xa4\x53\x29\xb2\x99\x0c\xb3\xb3\x73\xcc\x2f\x2e\x52\xae\xb8\xdc\
\xbe\x98\xe7\xa6\x19\x8f\xc0\xf7\x28\x9a\x75\xae\xcc\xce\x51\xb2\
\xeb\x14\x4c\x8f\xa2\xe9\x51\xb0\x7c\xf2\x96\x4f\xc6\xf0\x39\x1b\
\x38\x2c\xfa\x2a\x65\xc7\xa2\xaf\x33\x5e\xb3\x38\xbc\x90\xe6\xc8\
\x62\x8a\xb1\xaa\x4a\x5c\x4b\x34\x76\x74\x8d\x88\xf5\xd4\x30\x0d\
\x1d\xcb\xb4\xa2\x88\xdb\x14\xf9\x9c\x4a\xae\xda\xdf\x57\xa0\xaf\
\x58\xa4\x90\xcb\x91\x4d\xa7\xa3\xf2\x38\x4b\xd9\xab\x95\x18\xa3\
\x0b\xed\xf3\x95\xf6\x93\x8c\x81\xe8\xb8\x5a\xdf\xb7\xae\x17\x7f\
\xea\x64\xb2\x56\xa4\x3b\x7f\x88\xb6\x1c\x23\xb8\x9c\x2b\x6e\x3d\
\xfb\x7d\x4d\xed\x54\x3b\xef\xda\xef\xab\xd9\x7a\xb1\x32\xeb\x31\
\xce\x2e\xc5\xbc\x19\xef\x6b\xb9\xcf\x52\xca\x28\xa0\x66\xe5\xf3\
\xbb\xde\xb6\xac\x8b\xb0\x73\xa1\x95\x3e\x9f\xcf\x4e\x0d\xc3\x20\
\x9b\xc9\xe0\x38\x0e\xc5\x7c\x81\x91\x0d\x1b\x58\x5c\x5c\x54\x99\
\xbe\x6b\x75\x1a\x5e\x83\x7a\x5d\xe5\x4b\x8a\x45\xda\x4a\x63\x91\
\xa6\x50\xc8\x53\xea\xeb\x27\x9f\xcf\x91\x72\xdd\x35\xe5\xb8\x5a\
\xcd\x5a\x75\x3f\x97\xf2\x62\xea\xd5\x96\x03\x31\x71\x9b\xe3\x6c\
\xea\xa6\x61\xe0\xd8\x36\x41\x90\x4e\x8a\xe6\x86\x51\x41\xe6\xd6\
\x7b\x9f\x10\x62\x29\x67\xdd\xb2\xf9\xb8\x1f\xe2\xbf\x24\x24\x3f\
\x02\x2a\x5a\x0b\xb0\xba\x1c\xc1\x55\xeb\x76\x92\x3e\x32\x8c\xb6\
\x57\x29\x65\x5b\x24\x8b\x68\x59\x5e\x01\xd0\xc8\xda\x2e\x40\x81\
\x2e\xc3\xc4\x7d\xd6\x2c\xff\x62\x93\x72\x1c\xa6\x53\xb3\xcc\xce\
\xcd\xb3\x58\xad\xf2\x68\xcd\xe1\xe0\xe9\x81\xa4\xd4\x8b\x0c\x43\
\x0c\x4d\xe2\x87\x92\x24\x88\xb2\x8b\x1e\x20\x69\x83\x94\xaa\xf8\
\x2f\x6a\xd2\x36\x0c\xb5\xaf\x94\x9b\xa2\x98\xcf\x33\x34\x50\x62\
\x78\x70\x80\x52\xb1\x40\x3a\xad\x52\x29\x18\x51\xa4\x52\xfb\x64\
\xdd\xd6\x21\xc9\x7e\x93\xfd\x2d\x59\xe8\xd2\xd8\x7a\xdc\xec\xda\
\xae\xd9\x08\x64\x09\x01\xe9\xe8\x5e\x63\x5b\x16\xa9\x94\x4a\x39\
\x91\xcb\x65\x98\x9b\x5b\x50\x1a\xbc\xc5\x72\xf2\x40\x57\xf3\x1c\
\x6e\x9b\x4f\x13\x84\x52\x45\xb9\xca\x66\xf2\xdb\xd8\xda\x47\x00\
\x09\x8b\xa3\x19\x11\xfb\x17\x03\x60\x43\xc7\x30\x55\xce\x2f\xc7\
\xb6\x71\x1d\x15\x29\x98\xcb\x64\x29\x16\x54\xe6\xfa\x5c\x2e\xab\
\xdc\xb9\xae\x13\x25\x71\xd5\x97\x80\xf8\xce\xfe\x69\xed\xa3\xf5\
\xb0\xe5\xdc\x61\xdd\xbe\xeb\xd6\x8e\x6e\xe0\x63\x09\xd0\xba\x0c\
\x6c\x35\xf7\x5f\xb7\xef\xba\x1d\xef\x5a\x8e\xe7\x7c\x19\x90\xd5\
\xce\x7f\xaf\xdb\xb8\x1c\xfa\xfe\x52\xb7\x63\x35\x66\x6a\x3d\xcf\
\x6f\x37\x5b\x6d\x9c\xad\x5a\x94\x6b\xbd\x27\x3c\xcb\x54\x49\xf5\
\xdc\x94\x4b\x5f\xa1\x40\x10\xa8\x1c\x3d\x2a\x1f\x4d\x40\x10\xe5\
\x44\x92\x32\x4e\x5a\x69\x29\x77\x94\xa9\x72\xed\x34\x59\x86\x0b\
\xb3\x6e\x37\x88\x8b\x75\x53\xbb\x58\x16\xbb\xfa\xa4\x54\xc9\x38\
\x0d\x5d\x8f\xf4\x36\x26\xc8\x76\xa1\x78\xb2\xce\x72\xec\x84\x58\
\xfa\x51\x08\xd1\x9c\x50\x62\xbd\xcb\x45\x02\x56\xeb\x69\x9d\x8c\
\x40\xfc\xda\x7a\xce\x75\x96\xbf\x11\x26\xcc\x68\xc7\x71\x4a\xa9\
\x61\xb6\x30\x5e\x86\x61\xe0\x58\x2a\x00\x20\x9b\xcd\x90\xcf\xce\
\x33\xb7\xb8\xc0\x62\xb9\x4c\xa5\x52\xa5\xde\xa8\xe3\x05\x8a\x49\
\x0c\x82\x00\x2d\x89\xa8\x8c\x0b\x6b\x47\xbb\xa1\xc9\x0c\x68\xba\
\x9e\x30\x56\x86\xa1\x61\x18\x66\x04\xae\x5c\x72\xd9\x2c\xa5\x62\
\x91\xc1\x52\x1f\x03\xa5\x12\x85\x7c\x1e\xd7\x71\x92\x10\xff\x95\
\xce\x4b\xd8\xa3\xfb\xed\x52\xd9\x4a\x37\xb7\x55\xdb\x98\xb8\x39\
\x45\xeb\x57\xa0\x69\x09\x70\x31\xa2\x40\x80\xb4\xeb\x92\xcb\x66\
\x58\xc8\x2d\x32\xb7\xb8\xc8\xc2\xc2\x02\x0b\x31\xc8\xaa\xd6\xd5\
\x39\xf2\x94\x0b\x39\x8c\x00\x71\x28\x65\x14\x20\x02\xa2\xf5\x06\
\x2e\x54\xd1\x69\x5a\x58\x45\x95\xcd\x5e\x25\x5b\xb5\x6d\x9b\x94\
\xeb\x92\x4a\xb9\xa4\x53\xea\x7c\x65\x23\x8d\x5c\x3a\x9d\xc2\xb1\
\x15\xab\x65\x44\x51\xaa\x74\x3c\xd4\xad\x34\x19\xac\x97\xf5\x02\
\x84\x7a\x69\xc7\x4a\xec\xcf\xe5\x30\xd1\xc7\xd6\x4b\x7b\x2e\xa4\
\xfd\xab\xb1\x28\xf1\x36\xd7\xda\xd6\xcb\xad\x1f\x2f\x47\x6b\x7d\
\x88\x8e\x3f\xc3\xea\x6c\xed\xa5\xbc\xae\x8c\xd6\x09\xe8\x42\x36\
\xdc\xeb\x36\x5a\x99\x02\xd3\x30\xda\xd8\x82\x25\x4f\x00\xf1\x64\
\xa6\x69\x4b\x53\x28\xac\xb0\xcf\x5e\x18\xb8\x95\xda\x7a\xbe\xbf\
\x9d\xcf\xf2\xeb\x31\xe1\xb5\x8a\xfd\x74\x5d\x47\x6b\x9b\xbd\x5b\
\xe9\xa9\xd6\xb5\x96\x3c\x9b\xb7\xbb\x91\x64\x73\x99\x5e\xc7\x48\
\x2f\x03\x77\x3d\x8e\xb7\xd7\x71\xb6\xd2\x77\xe7\xc3\x58\xc6\x17\
\xa7\x2a\x4a\xae\x25\x65\x60\x62\xa6\x64\x3e\xbf\xc8\xdc\xe2\x82\
\x72\x47\x2d\x56\xa8\xd4\xab\xd4\x6a\x0d\xbc\x46\x83\x46\x94\x1a\
\x22\x08\xa3\xfa\x7a\x1d\xe7\x48\x13\x20\x22\x90\x6c\x1a\x3a\xa6\
\x65\x62\x9b\x16\xb6\x65\xe3\x3a\x16\xa9\x54\x9a\x7c\x36\x43\x31\
\x9f\xa7\x90\xcb\x92\xcb\xe6\x48\xb9\x4e\xcf\x3a\xb8\x4b\x23\x93\
\xed\xc5\x96\x8e\x3b\xe8\x9d\x48\x93\x2c\x7d\x68\x88\x2d\x76\x09\
\x08\x4d\xc3\x89\x22\xf7\x2c\xdb\xc2\x75\x5d\x32\xe9\x34\xf9\x6a\
\x8e\x4a\xb9\xc2\x62\xa5\x42\xa5\x52\xa5\x5a\xa9\x52\xab\xd5\xa8\
\xd6\xeb\xd4\x1b\x1e\x9e\xdf\x20\x88\xc0\x70\x10\x05\x06\xc4\x55\
\x07\x04\x71\x6e\x34\x81\xae\x1b\xe8\xba\xaa\xa8\x60\xdb\x2a\x0a\
\xd3\xb6\x15\x93\x99\x8a\x53\x5d\xb8\x2e\x29\x37\x85\xeb\x38\x89\
\x6b\x5d\x25\x63\x6d\x26\x58\x8d\xf5\x97\x61\xcb\xf1\x74\x63\x85\
\x92\x63\x5f\x05\x14\xad\xb6\xdc\x6a\xd7\x44\x9c\x2e\x46\x2a\x11\
\xc1\x92\xf7\xad\xcb\x2c\xd9\x4e\xcb\xf2\xab\x9d\xcc\xb5\xea\x9a\
\xba\xad\xb3\xda\x32\xcb\x5d\xdf\xcb\x5d\x27\x2b\xf5\x7b\xaf\xb6\
\x1c\xab\xa7\xb7\xe8\x6c\x93\xb1\xdb\x7a\x38\x92\xe4\x52\x88\xe2\
\xa9\x97\x78\x19\x7a\x81\x04\xeb\x71\x7f\x5e\x0f\x5b\x6d\x2c\x9e\
\xef\xf9\xed\x65\x7f\x6b\xb5\x6e\xe7\xab\x75\x7b\xbd\xe8\xc5\x56\
\x6a\x4b\xd7\x52\x39\xad\xd6\x6b\x07\xad\xd5\x12\xa0\xd5\x65\x7b\
\x6b\x45\xfe\x2b\x2d\x7b\x21\x00\x72\xb5\x76\x5c\x0a\x36\xe0\x7c\
\xfa\x60\xd9\x75\xc4\xb2\x1f\x96\xae\x23\x96\x2e\xd3\xeb\xfe\x2f\
\xb6\x5d\x2a\x90\xb6\xd2\x93\xbb\xae\x69\x68\x91\x16\xcd\x8a\x22\
\x15\x73\x99\x0c\xc5\x6a\x9e\x72\xa5\x4a\xa5\x52\xa1\x5a\xab\x53\
\xab\xd5\xa8\x35\xea\x78\x0d\x55\xc8\x38\x08\x7d\x95\x78\x55\x46\
\x17\x75\xa4\xf7\xd2\x22\xb1\xb9\x69\xe8\x98\xa6\x62\x6d\x1d\xdb\
\xc6\xb6\x2c\x6c\xc7\x22\xed\xb8\xa4\x52\x29\x52\xae\x4b\xda\x75\
\x9a\x4c\x48\x8f\x8c\xee\xe5\x02\xaf\x68\xd1\x5d\x75\x8c\xc0\xe4\
\xdd\xca\x40\x82\xa8\x60\x77\x77\x98\x15\xdf\x53\x64\x04\x82\x63\
\xb1\xb9\x1d\x69\xb2\x6a\x99\x34\x85\xba\x47\xa3\xde\xa0\x51\xaf\
\x51\xad\xd5\x55\xd6\xfb\x7a\x83\xba\xd7\x68\x46\x5f\x06\x2a\xd9\
\x6d\xd0\x72\x0f\xd0\x50\x9a\x52\xdd\x50\xe9\x3c\x6c\xcb\xc4\xb2\
\xed\xc4\x55\x6c\xdb\x56\x92\x57\x2c\x66\xdd\x2d\xc3\x88\xb2\xc0\
\x8b\x24\x29\x6e\x2f\x60\xb7\xdb\x3d\xb1\xdb\xd3\xf7\x6a\xf7\xa8\
\x35\x81\xad\xe4\xbc\x88\xb6\x14\x29\xed\xa0\xa0\xdd\xb5\xde\x65\
\xcb\xeb\x32\xd8\xba\xb9\xcd\xba\x7d\xee\xfc\x6e\x35\x97\x51\xab\
\x5d\xaa\x07\x42\xad\xad\xad\xf1\x86\x3b\xf6\xdf\x09\xb8\x3a\xbe\
\x93\x97\xc9\x05\x7c\x3e\xe0\xb8\x73\xbd\x5e\xc7\xf6\x85\xb6\x65\
\x2d\xb6\xde\x73\x7c\xbc\xde\xaa\x2e\xc2\x1f\x86\x5d\x2e\x6e\x0c\
\x58\x99\xa1\x5b\x2d\x9c\x3c\xd6\xfb\xfc\xbf\x64\x97\xd3\xb9\xbb\
\x50\xeb\xe5\x69\x37\x16\xd1\x5b\x96\x89\xeb\xaa\xf2\x40\xf5\x86\
\xca\x41\x55\x6b\x34\xa2\xf7\x1e\x7e\xe0\x11\xf8\x61\xa4\xcb\x0a\
\x90\xad\xf1\x58\x52\xe5\xeb\x52\x7a\x37\x55\x34\xd9\x8e\xea\xfc\
\x99\x91\xae\x27\xce\x57\x65\x1a\xaa\xb0\xb2\xde\xa2\xb9\x3a\x5f\
\xb0\xd8\xeb\xf1\xae\x65\x1b\x97\xca\xc4\x2a\x13\x79\xe2\x12\xd6\
\xb4\x44\x47\x68\x1a\xca\x6d\xe8\xfb\x3e\xa1\x1f\x12\x78\x1e\x5e\
\x4b\x9e\x30\xcf\xf7\x08\xfd\x10\x2f\xd1\x30\x46\xb5\x1c\xa3\xed\
\x29\xd7\xb0\xd2\xe0\x19\x86\xae\x6a\x08\x5a\x56\x54\x87\x51\xe9\
\x20\x75\xc3\xc0\xd0\x0c\x74\x5d\x28\xd1\xbb\x10\x09\x41\x21\xfe\
\xff\xf6\xae\x75\xbb\x72\x15\x04\xa3\x99\x59\x9d\xf7\x7f\xde\x56\
\xce\x0f\x83\x41\x14\xc5\xc4\x5c\xf6\x69\xbe\x59\x9d\xb4\x7b\x2b\
\x20\xde\x10\x89\xee\x58\xb4\x14\xe5\x31\x78\x61\xf7\x6e\x89\xd4\
\x56\xf3\xbb\x3c\x3a\x9d\xe4\x56\x7a\xb5\xd8\x2e\xb9\x88\x3c\x22\
\xeb\x8c\xf6\x3c\x2a\xc7\x48\xdd\x68\xdb\x4e\x2f\xae\xc3\xd1\xb1\
\xf5\x91\x06\xd6\x53\x30\xba\xfd\xf9\xdb\xf1\xdb\x74\x94\xbc\x59\
\xe9\x82\xe3\x05\xbe\xfe\xfe\x85\xaf\x7f\x5f\x71\x9b\x69\xfd\xf9\
\xfe\xfe\x86\x80\xf1\xc8\x88\xb0\x5e\x66\xbc\x19\xdf\xdb\xd5\x4c\
\x74\x88\x28\xbd\x89\x46\x74\x9d\xdb\xee\xef\xe3\xa7\xa8\x5f\xad\
\xef\xb3\xe2\x17\x76\xc9\x61\xd8\x34\x21\x1d\x85\x10\x62\x98\x81\
\xf7\xb0\x84\x10\xcf\x6e\x0b\x08\xf8\xf3\xb5\x5e\xb5\x13\xb7\x04\
\xe9\xbe\xc6\x10\x7e\xd2\xc5\xd3\xfc\x65\x08\xba\x42\xc9\x01\x6c\
\x27\xfe\xff\xa1\xfb\x17\xd7\xb7\x50\x57\xbe\xde\xfb\xf4\x96\xe6\
\xac\x5a\x1a\x35\x96\xf6\xc6\x9d\x1c\xcd\x3b\xab\xc0\xa3\x72\xdc\
\xd9\x3e\x8f\xe8\xac\x45\xeb\xc5\xbd\x38\xba\xe8\x7c\x0d\x2c\x03\
\xa4\x92\xe9\x6f\xcb\x95\x1e\xdd\xd8\x98\x83\xdf\x5b\xd3\x5c\x45\
\xe3\x0a\x2f\xc8\x93\x0c\x39\xe9\xcd\x42\x8c\x6f\x2b\x52\xb0\x34\
\xae\x47\x42\x04\x44\x80\xf5\x33\x10\x03\xa8\x73\x0e\x00\xe3\x15\
\x36\xb0\x7a\x49\x62\x4c\xd6\x36\x61\x73\x0f\xc6\x93\xca\x7f\x17\
\x2c\x2a\x20\x1d\xf3\x18\x45\xf4\x3e\x9e\x5c\xe1\x01\xfc\x12\x3f\
\x8b\x57\x4a\x01\x20\x6e\xc7\x77\x00\x40\x3a\xce\x83\x7c\x8d\x3c\
\x9c\x21\x19\xb9\xcb\x56\x47\x3c\x9e\x14\x00\x52\x7d\x76\x0d\x03\
\x63\x99\x2d\x5e\x12\xed\x6d\x26\xeb\x36\x72\x6d\x4b\x6e\xc8\x2b\
\x04\xfd\x3e\xbe\xd7\x83\x25\x17\xbc\x2d\x0f\x97\x05\xe4\x05\x6e\
\xf1\xb7\x8e\x57\x4d\x59\xa1\x94\x51\x93\x57\x4b\xf3\x76\xf9\x7b\
\x70\x74\xbe\x7a\x0d\xac\x0e\x34\xe3\xea\x45\x89\xab\x0c\xac\x27\
\x82\x4f\xbc\x14\x08\x1f\x27\xf2\x65\x9b\xa4\x31\x7f\x89\xa3\x36\
\x20\xa7\x89\x9a\xa5\x09\x70\xdc\xb0\xb2\xdc\x95\x69\xc2\x0c\x3a\
\x3d\x1a\xad\xef\x9d\x5d\x04\x6d\xfb\x0c\x00\xc0\x85\xcd\xb3\xb4\
\x24\xe3\x88\xae\x6c\xc7\xac\xbe\x5a\xe2\x55\xcf\xe2\xa3\xc9\xb1\
\x12\x4b\x53\xd0\x1a\xa8\x52\x6b\x7c\x4b\xeb\xef\x1e\xbc\x30\xf7\
\xb2\xd0\xa0\x5e\x4c\xd3\xe4\xa1\xb1\x57\xde\x56\x7f\x98\x15\x5f\
\x35\xba\xbd\xaa\xe5\x77\x08\xd9\xb9\x6f\xf2\x0c\xb8\x44\xa7\x92\
\xe6\x29\xf1\x57\x2f\xc6\xf1\x1a\x58\x0a\x7a\x86\x15\x6d\x03\xf4\
\x70\x74\x35\xf7\x49\x1e\xac\xab\xf8\x3c\xdd\xc8\xcd\x56\xaf\x6b\
\xf5\x87\x10\x0a\xef\x87\x86\x72\xd2\x9e\x60\xd5\x3c\x5b\x65\x76\
\x38\x1e\xcf\x64\x47\xcd\xc3\xc0\x3d\x52\x05\x13\xc8\x3d\x18\x96\
\x98\x1a\xca\xd3\x4a\x5f\x63\xb5\x20\x40\x18\x28\x8f\xe6\x2d\xb1\
\x04\x84\xb7\xe0\x69\x25\xd0\xe1\xa3\x22\x5a\xa5\x00\xd8\xde\xc0\
\x1d\xed\xbf\xd5\xba\x63\x34\xac\xb1\x69\x12\xa3\x27\x8a\xef\x95\
\xd5\x23\x7b\x69\x60\x87\xf7\x0a\x5c\x3c\x56\x66\xa4\x8d\xdc\x89\
\xff\xd3\x22\xfa\xf5\x60\x5d\x80\xd7\x8b\x65\xc7\xac\xed\x81\x27\
\x60\x8a\x31\x08\xf5\x01\x7f\xc4\x23\x35\x43\x63\xd6\x98\xa5\x26\
\x8d\x87\x0c\x9c\x71\xe7\x6d\x60\xdb\x4a\x33\x14\x26\x79\x39\x66\
\xc6\xdf\xf4\x64\x68\x19\x57\x47\xbd\x57\x16\x3e\x6d\x02\xf1\xe1\
\x9d\x6f\xb6\xb6\x11\x99\x34\x39\x34\xd9\x46\xb6\x34\x67\x78\xb0\
\x4c\x3a\x43\x5b\x1b\x39\xbb\x1d\xbd\x18\xc7\xd1\x17\xd9\x5e\x03\
\x6b\x10\xbc\x43\x59\x62\xb0\x5e\xfc\x6e\xf0\x01\xb7\xf5\x26\xd4\
\x8b\x71\x38\x88\x1e\xc2\xe0\xa2\xf7\xa5\xf6\x74\x00\xc5\xb1\x03\
\xc0\xb7\xef\x66\xc9\xb2\x73\x42\x74\x4c\x14\x2e\x3b\xdf\x16\x72\
\xcc\xb3\xe4\x20\x6e\x19\xc7\xb4\x0e\x5c\xc0\xac\xbc\x0b\x38\xa0\
\x77\x54\xb5\x32\xd6\x74\xd6\x2a\x8f\xb5\x6c\xd1\x5b\xbb\x5d\x33\
\xa5\xf1\x95\x32\xf3\xba\x2a\xf2\xf0\x63\x22\x1a\xe5\x25\x9d\x65\
\xe9\x19\x10\x4a\x7e\x7f\x9c\xaf\xea\x3b\xe5\x09\x08\x61\xa5\xa6\
\xb5\x2f\x9e\xb7\xda\xce\x14\x9d\xaa\x3a\xac\xa4\x71\x8c\x87\x45\
\x67\x3c\x5f\xaf\x6f\x4c\xcf\x8b\xdb\xc3\x23\xc0\x8f\x78\x16\xfa\
\xae\x6c\xa3\x4b\x7d\x4b\x1a\xad\x2d\x53\xad\xae\x52\xde\x46\x99\
\x6b\x79\x17\x70\xcd\x72\x23\xb2\x43\x9c\x11\x20\x38\x04\x8f\x2e\
\x3d\xff\x50\x5d\x16\x41\xb7\xec\x49\xec\xbb\x7b\xf0\x1d\x1a\x6e\
\xfd\x97\x95\x88\x3f\x05\xaa\x72\x68\xbd\xb7\x92\x2f\x97\xad\x9f\
\x5e\x37\x88\x9c\xf2\x7b\x1b\x92\x67\x9f\x8f\xc2\x9d\xeb\x50\x4c\
\xca\xd6\x15\xdb\xac\x98\x84\xa3\xf9\xfb\xed\xec\x1a\x83\xe3\x2a\
\xe3\x37\x00\xc6\x6d\xad\x45\x46\xb7\xb0\x03\x26\x7b\xa2\x74\xd4\
\x61\xd2\xbb\x6f\x07\xf4\x1a\xd8\xac\x23\x7d\x7b\x51\x61\xaa\xbb\
\x9e\xbc\xbd\xf2\x42\xdc\x32\x61\x4c\x63\x8c\xcb\x6a\x38\x39\x07\
\xe9\xe9\x58\x9e\x8c\x82\xeb\xcb\x71\x95\xe1\xeb\x91\x0c\xc1\xed\
\x27\x97\x03\xb2\xc1\xc4\x43\xac\x8a\x18\x31\xe6\x92\x97\x94\x3e\
\x5f\xd6\xed\x4f\x7e\x96\x5d\xb6\xd2\x46\x41\x83\x48\x0b\xc6\xad\
\x71\x87\xff\x2e\xfb\xf4\x92\x78\x46\x66\xf4\xdc\xea\x64\x3d\xf2\
\x02\x20\xbe\xcc\xc1\x9e\x00\x0e\x10\x43\xb6\x78\xe5\x73\x31\x95\
\xd7\xaf\x4f\x5e\xbf\x89\x0f\x38\xf6\x3b\xcb\x2b\xca\x0d\x01\xb3\
\xb6\x22\x11\xe5\xf2\xdb\x0b\x0e\xc9\x70\xc5\x8d\x06\x62\x96\xb7\
\x68\x67\x51\x03\x49\xc7\x69\xfe\x6b\xc5\x8f\xad\x72\xa7\x27\x19\
\x57\x42\x57\x9b\xce\x14\x4f\x8a\x28\xaf\xa7\x97\x67\x58\x59\x72\
\x3d\x89\x60\xfa\x4a\xbf\xda\xda\x9d\x86\xed\xba\x31\xce\x87\x9e\
\xde\x01\xe0\x4f\x50\x74\x46\xfa\x82\xac\x6e\xbc\x13\xed\x3a\x17\
\x31\xc9\x5f\x6d\x67\x00\x45\x3b\xcf\x2c\x12\x61\x8e\x14\xfd\x50\
\xb4\x91\xa2\xdc\x88\xb0\x64\xfa\x43\x70\xb8\x3d\x0b\x0f\xd6\x1b\
\x13\x34\x5f\x8e\xd7\x93\x55\xe2\x50\xc0\xf6\x24\x83\xf2\xc5\x07\
\x83\x55\x2f\x0d\x9c\x7e\xf5\x20\xa4\x81\xf4\xa6\x26\xb0\xc7\x9b\
\x55\xc8\xcc\xcb\x07\xf9\x62\xcd\x55\xf2\x20\x54\x68\x70\x20\x54\
\x75\x36\xaa\x23\x69\x74\xd5\xb6\x26\xf9\xba\x01\x91\x19\x4e\xac\
\x6e\x20\x20\xb0\xf9\x70\x7b\xd2\x42\xbe\x22\x57\x56\x6e\x57\x96\
\x61\x33\xd0\x70\x58\x67\x2d\xa3\x5e\xe6\x95\xed\xac\xbb\x20\xd8\
\xd9\x0e\x93\x7e\x71\xf5\xce\xc9\xf2\x72\xba\xa2\x7e\x25\x6f\x93\
\xce\x1c\x1c\xee\x57\xc9\x18\x69\xd0\x10\xb6\x6f\x49\x63\x25\x44\
\xeb\x03\xf9\x4c\x45\x46\x2c\xea\xdc\x71\x59\x47\xcb\x2b\x64\xb6\
\xf4\xab\x8d\x04\x02\x38\xe2\x1b\xd2\x33\x33\xb0\x6a\x2b\x96\x16\
\x6a\x69\x3e\xc9\x98\x98\x51\xde\x23\x3c\x7f\x2b\x5e\x1d\xbc\x98\
\x89\xa7\xc4\xae\x3c\x45\x0e\x0d\x57\x78\xa8\x01\xf4\xc5\x0d\x37\
\xc8\x64\x3a\xf9\xfb\x88\xac\x57\xe9\xfa\x8e\xfa\x1d\xe1\x33\x5b\
\x67\x33\xca\x5b\xa3\x31\x63\xfc\x97\x86\x7d\xeb\xe5\x01\xf9\xfd\
\x95\xa8\x5e\x95\x53\x0b\xc8\x45\xe1\x46\xb5\x18\x27\x32\x4d\xb1\
\x45\x68\x40\xc1\xc7\x41\x2e\x88\x21\xdf\x68\xda\x9e\x4e\xf6\x36\
\x90\x19\x34\xf6\xe2\x29\x46\x4d\x4b\x07\xd6\x0e\xd8\xfb\xde\xda\
\x89\x9f\xa2\x93\x2b\xf0\x94\x6d\xe4\x99\xd0\x02\xba\xef\x90\x51\
\x1b\xe8\x67\x4c\x28\x33\xfa\xc4\x2c\x68\x71\x83\x32\xb8\x5b\x9b\
\x98\x9d\x2b\x5f\xee\xd0\xb6\x1a\x2d\x38\x53\xef\x16\x3e\x26\x18\
\x93\xb5\x74\x36\x38\x6d\x0e\xf3\xe1\xe1\x1a\x47\xfb\x95\x6c\x23\
\x67\xf5\x4d\xeb\x8b\x18\xbd\xf2\x1e\x90\x60\xf5\xd0\xea\xf5\x53\
\x84\xc8\x6b\xc6\xc6\x88\x71\x25\x3b\xd1\x5c\x83\xe4\x3c\xe3\xaa\
\xd6\xf9\x75\x39\xc6\x70\xa7\x71\x65\xc1\xdd\x06\xdf\x9c\x06\x5f\
\xa7\xbd\x37\xcd\x8b\x67\x63\xd6\x38\x33\x4b\x96\xde\xef\x33\x68\
\xdf\x49\x83\xa0\x19\xe2\x9a\x81\x24\x79\xd3\xfd\x99\xf4\xac\xfd\
\x58\x71\xa6\xde\x2d\x7c\x9e\xc2\x63\xa6\xce\x8e\xf4\xab\x2b\xeb\
\xa3\xf5\x73\x8d\x4c\xc4\x4b\xff\x51\x2f\x7b\x2e\x3f\x2f\x4f\x93\
\xdd\xeb\xc5\x1a\x45\x4e\x83\xfe\xb3\xe7\x19\xe5\xa1\xe5\xbf\xc3\
\xd0\x9a\xe5\xd6\x7c\x8a\x41\xd1\xd3\xab\x96\x66\x06\x9f\x3d\x69\
\x3e\x01\xb3\x3c\x4f\x9f\xe4\xc1\xfa\x04\xef\x15\x7d\xf7\x04\x0f\
\xd6\x2c\x39\x64\x30\x75\x6b\x6b\x4f\xab\x97\xd6\x5c\x31\x52\x8f\
\x67\xeb\x9d\xf3\xd8\x23\xdf\x96\xd1\xce\x47\xe5\xd1\xa1\x31\xfa\
\xb2\x93\xa5\x2c\x33\xfa\xd5\x5e\x1a\x23\x63\x91\x2c\x7b\x6d\x1b\
\x7a\xb4\x2d\xda\xe5\x24\x73\xa4\x4e\xa7\x7a\x4c\x43\x7d\xc2\xa3\
\xb7\x41\xca\x34\x56\xe3\x6a\x0f\x4a\x1a\xbf\xc7\xb8\x3a\xc2\xeb\
\x13\xa0\xe9\x7d\xe4\x6d\x55\x0b\xdd\xbd\x69\x3e\x05\x7c\xf0\x38\
\x9b\x4f\x37\xa2\xf7\x22\xc8\x32\x5f\xa5\x83\x9e\x2c\x67\xc8\x35\
\x8b\x46\x0f\xd6\x98\x9c\x1a\x2d\xfa\xbc\x35\xb1\xf1\xb4\xda\x16\
\xa3\xb5\x5f\x5a\xb6\x22\x67\xb4\x07\x4b\x79\x66\xa0\x55\x16\x6b\
\xfe\x1e\x2c\x3a\xa3\x74\x35\xb9\x46\xe5\xe8\xf1\xe9\xc9\x6a\xe1\
\xa5\x19\x53\xf4\xb7\xa5\xbc\x47\xe0\x5c\xfe\x32\x85\x44\xf7\x1c\
\xac\xbd\xc6\xc6\x5d\x06\xc9\x11\x9c\x59\x16\x0b\x9f\xdf\x8c\x99\
\x3a\x99\x1d\x7f\xf1\xe2\x99\xb0\x1a\xe4\x57\xe0\x4e\x03\xef\x4a\
\xf0\x7b\x1d\x39\x7a\x1e\x03\x9e\xde\x72\x82\xba\x15\x47\x0d\x93\
\x3d\x7c\xce\xc2\x1d\x65\xa9\xf1\x99\xd5\xaf\x8e\x94\xc1\xba\x88\
\xd6\xbc\x97\x9a\x1c\x57\xf7\xd3\x64\x60\x69\x46\xc4\x26\x34\xb9\
\xc2\x20\x5b\xa9\xb4\x60\x31\x58\x38\x6a\x13\xa3\x5c\xd9\x60\xe5\
\x3b\xae\xbc\x56\x83\x91\x9f\xd1\xf5\x25\xd9\x65\xb0\x62\x25\x76\
\x26\x34\x59\x47\xdc\xa3\x33\x65\x3d\x4a\x47\xae\x1c\xe8\x6f\x1a\
\x50\xbd\xf7\xa6\xf8\x8d\x1e\x8f\x19\x1e\xac\xd6\x76\xc6\xd5\xe8\
\x05\x68\x92\x6c\x5c\xaf\xfc\x6f\x89\xbd\x03\xa4\x36\x79\x32\x69\
\x12\x7d\x6d\xe5\xab\x79\x37\x46\xd0\xab\xbf\xde\x96\xc3\xde\x15\
\x77\x8f\x86\x75\x6c\xa9\xd1\x69\xf1\xe1\xfd\x62\x6f\x1b\xec\xd7\
\x5d\x1f\xbd\x76\xa3\x79\x9e\x46\xb6\xd1\x7a\x93\xa1\x55\x4e\x79\
\xf5\x14\xd1\x6a\x79\x29\x46\xb6\x11\x6b\x73\x0a\x7d\x46\xb1\x63\
\x66\x43\x71\x70\x8b\xb0\x2a\xdb\x84\x21\xde\xd2\x67\x47\xe6\xf5\
\x96\xa7\x4b\xa6\xd1\xda\xa7\x56\x57\xda\x09\xea\x3c\x7d\xaf\xfe\
\x6a\xf3\x0d\xcf\xa3\x79\xbe\xa8\x5e\x5b\xf6\xc4\xd6\x5f\x01\x5a\
\x95\xf3\x1f\x65\x8f\x9a\xf1\x24\xf5\x4f\xc9\x00\x00\x00\x00\x49\
\x45\x4e\x44\xae\x42\x60\x82\
\x00\x00\x0a\xf6\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\
\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\
\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\
\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\
\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x36\x22\x0d\x0a\x20\x20\
\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x36\x22\x0d\x0a\x20\x20\
\x20\x69\x64\x3d\x22\x73\x76\x67\x32\x39\x31\x31\x22\x0d\x0a\x20\
\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x31\x22\x0d\
\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x34\x37\x20\x72\x32\x32\x35\x38\
\x33\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\
\x64\x6f\x63\x6e\x61\x6d\x65\x3d\x22\x4e\x6f\x75\x76\x65\x61\x75\
\x20\x64\x6f\x63\x75\x6d\x65\x6e\x74\x20\x32\x22\x3e\x0d\x0a\x20\
\x20\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x64\x65\x66\x73\x32\x39\x31\x33\x22\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\
\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x35\x32\x36\x2e\x31\
\x38\x31\x30\x39\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\
\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x76\x70\x5f\x7a\x3d\x22\x37\x34\x34\x2e\x30\x39\x34\x34\x38\x20\
\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\x3a\x20\x31\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\
\x3d\x22\x33\x37\x32\x2e\x30\x34\x37\x32\x34\x20\x3a\x20\x33\x35\
\x30\x2e\x37\x38\x37\x33\x39\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\
\x74\x69\x76\x65\x32\x39\x31\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\
\x70\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x32\
\x39\x30\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\
\x69\x67\x69\x6e\x3d\x22\x30\x2e\x35\x20\x3a\x20\x30\x2e\x33\x33\
\x33\x33\x33\x33\x33\x33\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\
\x7a\x3d\x22\x31\x20\x3a\x20\x30\x2e\x35\x20\x3a\x20\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\
\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\
\x30\x2e\x35\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0d\
\x0a\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\
\x65\x64\x76\x69\x65\x77\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x62\x61\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x70\x61\x67\
\x65\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x66\x66\x66\x66\x66\x66\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\
\x6f\x72\x3d\x22\x23\x36\x36\x36\x36\x36\x36\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x6f\x70\x61\x63\x69\x74\x79\
\x3d\x22\x31\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\
\x79\x3d\x22\x30\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\
\x77\x3d\x22\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x32\x33\x2e\x34\x36\
\x37\x31\x30\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x78\x3d\x22\x32\x2e\x37\x38\x39\x31\x37\
\x37\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x63\x79\x3d\x22\x38\x2e\x32\x35\x30\x34\x37\x35\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\x73\x3d\
\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\x79\x65\
\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x66\x61\x6c\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\x31\
\x32\x38\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\x65\x69\x67\x68\
\x74\x3d\x22\x37\x37\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x78\x3d\
\x22\x2d\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\x3d\x22\x2d\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\x6d\x69\x7a\x65\
\x64\x3d\x22\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x6d\x65\x74\
\x61\x64\x61\x74\x61\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x6d\x65\x74\x61\x64\x61\x74\x61\x32\x39\x31\x36\x22\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\
\x74\x3d\x22\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\
\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\x65\x2f\
\x73\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\x72\x6d\
\x61\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\
\x3a\x74\x79\x70\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\
\x64\x63\x2f\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\x69\x6c\
\x6c\x49\x6d\x61\x67\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x3c\x2f\
\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x3c\x2f\x63\x63\x3a\x57\x6f\x72\x6b\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x2f\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x3c\
\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x3e\x0d\x0a\x20\x20\x3c\x67\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x6c\x61\x62\x65\x6c\x3d\x22\x43\x61\x6c\x71\x75\x65\x20\x31\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x67\x72\x6f\x75\x70\x6d\x6f\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x61\x79\x65\
\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x30\
\x2c\x2d\x31\x30\x33\x36\x2e\x33\x36\x32\x32\x29\x22\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x67\x34\x32\x39\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x30\x2e\x30\x35\x34\x35\x36\x34\x35\x31\x2c\x30\
\x2e\x30\x35\x35\x37\x35\x30\x36\x39\x2c\x2d\x30\x2e\x30\x35\x35\
\x37\x35\x30\x36\x39\x2c\x30\x2e\x30\x35\x34\x35\x36\x34\x35\x31\
\x2c\x36\x2e\x36\x32\x35\x30\x35\x37\x36\x2c\x31\x30\x32\x31\x2e\
\x32\x36\x30\x32\x29\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\
\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x79\
\x3d\x22\x37\x33\x2e\x33\x32\x38\x34\x33\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x32\x31\x36\x2e\x30\x32\
\x31\x36\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x68\
\x65\x69\x67\x68\x74\x3d\x22\x32\x33\x37\x2e\x38\x32\x31\x39\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x77\x69\x64\x74\
\x68\x3d\x22\x31\x35\x2e\x38\x35\x34\x37\x39\x37\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x65\x63\x74\
\x34\x32\x38\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\
\x30\x30\x30\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\
\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2c\x31\x2c\
\x2d\x31\x2c\x30\x2c\x30\x2c\x30\x29\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\
\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\
\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\
\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x72\x65\x63\x74\x34\x32\x38\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x35\
\x2e\x38\x35\x34\x37\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x32\x33\x37\x2e\x38\
\x32\x31\x39\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x78\x3d\x22\x31\x38\x34\x2e\x33\x31\x32\x30\x33\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x33\x34\x32\x2e\
\x38\x36\x30\x30\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x2f\x67\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x3c\x2f\x73\
\x76\x67\x3e\x0d\x0a\
\x00\x00\x11\x8b\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\
\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\
\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\
\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\
\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x35\x31\x32\x22\x0d\x0a\x20\
\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x35\x31\x32\x22\x0d\x0a\
\x20\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x33\x32\x39\x37\x22\x0d\
\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\
\x3d\x22\x30\x2e\x34\x37\x20\x72\x32\x32\x35\x38\x33\x22\x0d\x0a\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\
\x61\x6d\x65\x3d\x22\x6c\x6f\x67\x2e\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\x70\x75\
\x74\x5f\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\x72\x67\
\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\x75\x74\
\x2e\x73\x76\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\
\x20\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x31\x22\
\x3e\x0d\x0a\x20\x20\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x64\x65\x66\x73\x33\x32\x39\x39\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\
\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\
\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\
\x33\x64\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x38\
\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\
\x20\x31\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\
\x3d\x22\x31\x36\x20\x3a\x20\x38\x20\x3a\x20\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\
\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x38\
\x20\x3a\x20\x35\x2e\x33\x33\x33\x33\x33\x33\x33\x20\x3a\x20\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\
\x72\x73\x70\x65\x63\x74\x69\x76\x65\x33\x33\x30\x35\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0d\x0a\x20\x20\
\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\
\x69\x65\x77\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x62\x61\
\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x70\x61\x67\x65\x63\x6f\
\x6c\x6f\x72\x3d\x22\x23\x37\x62\x36\x34\x36\x34\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\
\x22\x23\x36\x36\x36\x36\x36\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x62\x6f\x72\x64\x65\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x31\
\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\x77\x3d\x22\x32\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x7a\x6f\x6f\x6d\x3d\x22\x31\x2e\x30\x30\x37\x38\x31\x32\x35\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x78\x3d\x22\x32\x35\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x79\x3d\x22\x32\x35\x30\x2e\
\x38\x34\x30\x33\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\
\x79\x65\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x67\x72\x69\x64\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\x73\
\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x73\x6e\x61\x70\x2d\x62\x62\x6f\x78\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\x63\x74\x2d\x70\x61\x74\x68\
\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\x63\x74\x2d\x6e\
\x6f\x64\x65\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x6f\x62\x6a\x65\x63\x74\x74\x6f\x6c\x65\x72\x61\x6e\x63\
\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x67\x72\x69\
\x64\x74\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x67\x75\x69\x64\x65\x74\x6f\x6c\x65\x72\
\x61\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x73\x6e\x61\x70\x2d\x67\x6c\
\x6f\x62\x61\x6c\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x73\x68\x6f\x77\x67\x75\x69\x64\x65\x73\x3d\x22\x74\
\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x67\x75\x69\x64\x65\x2d\x62\x62\x6f\x78\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\
\x68\x3d\x22\x31\x34\x34\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\
\x65\x69\x67\x68\x74\x3d\x22\x38\x34\x39\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\
\x77\x2d\x78\x3d\x22\x2d\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\
\x3d\x22\x2d\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\
\x6d\x69\x7a\x65\x64\x3d\x22\x31\x22\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x74\x79\x70\x65\x3d\x22\x78\x79\x67\
\x72\x69\x64\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x67\x72\x69\x64\x33\x33\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x76\x69\x73\x69\x62\x6c\x65\x3d\x22\x74\x72\x75\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x65\x6e\x61\x62\x6c\x65\
\x64\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x65\x6d\x70\x73\x70\x61\x63\x69\x6e\x67\x3d\x22\x35\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6e\x61\x70\x76\x69\x73\x69\
\x62\x6c\x65\x67\x72\x69\x64\x6c\x69\x6e\x65\x73\x6f\x6e\x6c\x79\
\x3d\x22\x74\x72\x75\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\
\x65\x77\x3e\x0d\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\x61\x64\
\x61\x74\x61\x33\x33\x30\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x3c\x63\x63\x3a\x57\x6f\x72\x6b\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\x22\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x66\x6f\
\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\x65\x2f\x73\x76\x67\x2b\x78\
\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x79\x70\x65\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\
\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\
\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x64\x63\
\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\x61\x67\
\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\
\x64\x63\x3a\x74\x69\x74\x6c\x65\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\x72\x6b\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\
\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x3e\x0d\x0a\x20\x20\
\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x61\x79\
\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\x22\x4c\x61\x79\x65\x72\
\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\x6f\x64\x65\x3d\x22\x6c\x61\
\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\
\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\
\x30\x2c\x34\x39\x36\x29\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x70\
\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x73\x74\x61\x72\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\
\x68\x32\x38\x34\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x73\x69\x64\x65\x73\x3d\x22\x33\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x63\x78\x3d\x22\x32\x35\x32\x2e\x30\x33\x31\x30\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x63\x79\x3d\x22\x32\x35\x36\x2e\x39\x39\x32\x32\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x72\x31\x3d\x22\x32\x39\x34\x2e\x39\x32\x34\x37\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x72\x32\x3d\x22\x31\x34\x37\x2e\x34\x36\x32\x33\x39\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x61\x72\x67\x31\x3d\x22\x30\x2e\x35\x32\x33\x35\x39\
\x38\x37\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x61\x72\x67\x32\x3d\x22\x31\x2e\x35\x37\
\x30\x37\x39\x36\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x66\x6c\x61\x74\x73\x69\x64\x65\
\x64\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x6f\x75\x6e\x64\
\x65\x64\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x61\x6e\x64\x6f\x6d\x69\x7a\
\x65\x64\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\
\x3d\x22\x6d\x20\x35\x30\x37\x2e\x34\x34\x33\x33\x35\x2c\x34\x30\
\x34\x2e\x34\x35\x34\x36\x34\x20\x2d\x32\x35\x35\x2e\x34\x31\x32\
\x33\x34\x2c\x30\x20\x2d\x32\x35\x35\x2e\x34\x31\x32\x33\x35\x31\
\x34\x2c\x2d\x31\x30\x65\x2d\x36\x20\x4c\x20\x31\x32\x34\x2e\x33\
\x32\x34\x38\x33\x2c\x31\x38\x33\x2e\x32\x36\x31\x30\x36\x20\x32\
\x35\x32\x2e\x30\x33\x31\x30\x31\x2c\x2d\x33\x37\x2e\x39\x33\x32\
\x35\x32\x36\x20\x33\x37\x39\x2e\x37\x33\x37\x31\x38\x2c\x31\x38\
\x33\x2e\x32\x36\x31\x30\x35\x20\x35\x30\x37\x2e\x34\x34\x33\x33\
\x35\x2c\x34\x30\x34\x2e\x34\x35\x34\x36\x34\x20\x7a\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\
\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x39\x35\x39\x36\x32\
\x37\x30\x37\x2c\x30\x2c\x30\x2c\x30\x2e\x39\x35\x39\x36\x32\x37\
\x30\x37\x2c\x39\x2e\x31\x38\x32\x39\x38\x31\x35\x2c\x2d\x34\x32\
\x35\x2e\x30\x39\x37\x33\x33\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x66\
\x66\x30\x30\x30\x30\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\
\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x66\x66\x66\x66\x66\x66\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x37\x36\
\x36\x37\x33\x34\x31\x39\x2c\x30\x2c\x30\x2c\x30\x2e\x37\x36\x36\
\x37\x33\x34\x31\x39\x2c\x35\x37\x2e\x37\x39\x37\x39\x36\x38\x2c\
\x2d\x33\x37\x33\x2e\x38\x37\x31\x36\x31\x29\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\x20\x35\x30\x37\x2e\x34\x34\
\x33\x33\x35\x2c\x34\x30\x34\x2e\x34\x35\x34\x36\x34\x20\x2d\x32\
\x35\x35\x2e\x34\x31\x32\x33\x34\x2c\x30\x20\x2d\x32\x35\x35\x2e\
\x34\x31\x32\x33\x35\x31\x34\x2c\x2d\x31\x30\x65\x2d\x36\x20\x4c\
\x20\x31\x32\x34\x2e\x33\x32\x34\x38\x33\x2c\x31\x38\x33\x2e\x32\
\x36\x31\x30\x36\x20\x32\x35\x32\x2e\x30\x33\x31\x30\x31\x2c\x2d\
\x33\x37\x2e\x39\x33\x32\x35\x32\x36\x20\x33\x37\x39\x2e\x37\x33\
\x37\x31\x38\x2c\x31\x38\x33\x2e\x32\x36\x31\x30\x35\x20\x35\x30\
\x37\x2e\x34\x34\x33\x33\x35\x2c\x34\x30\x34\x2e\x34\x35\x34\x36\
\x34\x20\x7a\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x72\x61\x6e\x64\x6f\x6d\x69\x7a\x65\x64\
\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x72\x6f\x75\x6e\x64\x65\x64\x3d\x22\x30\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x66\x6c\x61\x74\x73\x69\x64\x65\x64\x3d\x22\x66\x61\
\x6c\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x61\x72\x67\x32\x3d\x22\x31\x2e\x35\x37\
\x30\x37\x39\x36\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x61\x72\x67\x31\x3d\x22\x30\x2e\
\x35\x32\x33\x35\x39\x38\x37\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x72\x32\x3d\x22\x31\
\x34\x37\x2e\x34\x36\x32\x33\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x72\x31\x3d\x22\x32\
\x39\x34\x2e\x39\x32\x34\x37\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x63\x79\x3d\x22\x32\
\x35\x36\x2e\x39\x39\x32\x32\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x63\x78\x3d\x22\x32\
\x35\x32\x2e\x30\x33\x31\x30\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x73\x69\x64\x65\x73\
\x3d\x22\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x70\x61\x74\x68\x32\x38\x35\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\
\x3d\x22\x73\x74\x61\x72\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x74\x65\x78\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6d\
\x6c\x3a\x73\x70\x61\x63\x65\x3d\x22\x70\x72\x65\x73\x65\x72\x76\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x32\x35\x30\x2e\
\x36\x33\x32\x34\x31\x35\x37\x37\x70\x78\x3b\x66\x6f\x6e\x74\x2d\
\x73\x74\x79\x6c\x65\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\
\x74\x2d\x77\x65\x69\x67\x68\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\
\x6c\x69\x6e\x65\x2d\x68\x65\x69\x67\x68\x74\x3a\x31\x32\x35\x25\
\x3b\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\
\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\
\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x66\x6f\x6e\x74\x2d\x66\x61\
\x6d\x69\x6c\x79\x3a\x42\x69\x74\x73\x74\x72\x65\x61\x6d\x20\x56\
\x65\x72\x61\x20\x53\x61\x6e\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x78\x3d\x22\x31\x38\x38\x2e\x34\x34\x31\x38\x35\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x38\x34\x2e\x35\
\x36\x37\x36\x37\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x74\x65\x78\x74\x32\x38\x33\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6c\x69\
\x6e\x65\x73\x70\x61\x63\x69\x6e\x67\x3d\x22\x31\x32\x35\x25\x22\
\x3e\x3c\x74\x73\x70\x61\x6e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x72\x6f\x6c\x65\x3d\
\x22\x6c\x69\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x74\x73\x70\x61\x6e\x32\x38\x34\x30\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x31\x38\x38\
\x2e\x34\x34\x31\x38\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x79\x3d\x22\x2d\x38\x34\x2e\x35\x36\x37\x36\x37\x33\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x33\x37\x35\x2e\
\x39\x34\x38\x36\x30\x38\x34\x30\x30\x30\x30\x30\x30\x31\x31\x39\
\x30\x70\x78\x3b\x66\x6f\x6e\x74\x2d\x73\x74\x79\x6c\x65\x3a\x6e\
\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x76\x61\x72\x69\x61\
\x6e\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x77\
\x65\x69\x67\x68\x74\x3a\x62\x6f\x6c\x64\x3b\x66\x6f\x6e\x74\x2d\
\x73\x74\x72\x65\x74\x63\x68\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x74\
\x65\x78\x74\x2d\x61\x6c\x69\x67\x6e\x3a\x73\x74\x61\x72\x74\x3b\
\x6c\x69\x6e\x65\x2d\x68\x65\x69\x67\x68\x74\x3a\x31\x32\x35\x25\
\x3b\x77\x72\x69\x74\x69\x6e\x67\x2d\x6d\x6f\x64\x65\x3a\x6c\x72\
\x2d\x74\x62\x3b\x74\x65\x78\x74\x2d\x61\x6e\x63\x68\x6f\x72\x3a\
\x73\x74\x61\x72\x74\x3b\x66\x6f\x6e\x74\x2d\x66\x61\x6d\x69\x6c\
\x79\x3a\x54\x69\x6d\x65\x73\x20\x4e\x65\x77\x20\x52\x6f\x6d\x61\
\x6e\x3b\x2d\x69\x6e\x6b\x73\x63\x61\x70\x65\x2d\x66\x6f\x6e\x74\
\x2d\x73\x70\x65\x63\x69\x66\x69\x63\x61\x74\x69\x6f\x6e\x3a\x27\
\x54\x69\x6d\x65\x73\x20\x4e\x65\x77\x20\x52\x6f\x6d\x61\x6e\x2c\
\x20\x42\x6f\x6c\x64\x27\x22\x3e\x21\x3c\x2f\x74\x73\x70\x61\x6e\
\x3e\x3c\x2f\x74\x65\x78\x74\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\x3e\
\x0d\x0a\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x22\x29\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x6d\x61\x64\x65\
\x20\x62\x79\x20\x41\x6e\x64\x79\x2c\x20\x49\x74\x27\x73\x20\x70\
\x75\x62\x6c\x69\x63\x20\x64\x6f\x6d\x61\x69\x6e\x2c\x20\x20\x79\
\x65\x61\x68\x20\x77\x68\x79\x20\x6e\x6f\x74\x2d\x2d\x3e\x0d\x0a\
\x3c\x73\x76\x67\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\
\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x20\x78\x6d\x6c\x6e\
\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\
\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x20\x78\
\x6d\x6c\x6e\x73\x3a\x78\x6c\x69\x6e\x6b\x3d\x22\x68\x74\x74\x70\
\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\
\x39\x39\x2f\x78\x6c\x69\x6e\x6b\x22\x20\x76\x65\x72\x73\x69\x6f\
\x6e\x3d\x22\x31\x2e\x30\x22\x20\x77\x69\x64\x74\x68\x3d\x22\x31\
\x32\x38\x22\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x32\x38\x22\
\x20\x69\x64\x3d\x22\x73\x76\x67\x34\x38\x39\x35\x22\x3e\x0d\x0a\
\x09\x3c\x64\x65\x66\x73\x3e\x0d\x0a\x09\x09\x3c\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x20\x69\x64\x3d\x22\x57\
\x68\x69\x74\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\
\x3e\x0d\x0a\x09\x09\x09\x3c\x73\x74\x6f\x70\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x77\x68\
\x69\x74\x65\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\
\x3a\x31\x22\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x2f\x3e\
\x0d\x0a\x09\x09\x09\x3c\x73\x74\x6f\x70\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x77\x68\x69\
\x74\x65\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x30\x22\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x2f\x3e\x0d\
\x0a\x09\x09\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x3e\x0d\x0a\x09\x09\x3c\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x20\x69\x64\x3d\x22\x42\x6c\x61\x63\
\x6b\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x3e\x0d\x0a\
\x09\x09\x09\x3c\x73\x74\x6f\x70\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x62\x6c\x61\x63\x6b\
\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x22\
\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x2f\x3e\x0d\x0a\x09\
\x09\x09\x3c\x73\x74\x6f\x70\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\
\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x62\x6c\x61\x63\x6b\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x22\x20\
\x6f\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x2f\x3e\x0d\x0a\x09\x09\
\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x3e\x0d\x0a\x09\x09\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\
\x22\x23\x57\x68\x69\x74\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\
\x6e\x74\x22\x20\x69\x64\x3d\x22\x6c\x67\x31\x39\x39\x39\x22\x20\
\x78\x31\x3d\x22\x36\x33\x37\x2e\x30\x33\x22\x20\x79\x31\x3d\x22\
\x36\x39\x2e\x39\x39\x22\x20\x78\x32\x3d\x22\x36\x33\x38\x2e\x33\
\x22\x20\x79\x32\x3d\x22\x31\x31\x38\x2e\x33\x22\x20\x67\x72\x61\
\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\
\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\
\x61\x74\x72\x69\x78\x28\x30\x2e\x31\x2c\x30\x2e\x31\x2c\x2d\x30\
\x2e\x32\x32\x2c\x30\x2e\x32\x2c\x37\x35\x2e\x36\x2c\x2d\x33\x33\
\x2e\x35\x33\x29\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x20\x78\x6c\x69\x6e\x6b\
\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\x74\x65\x54\x72\x61\
\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x20\x69\x64\x3d\x22\x6c\x67\
\x30\x32\x22\x20\x78\x31\x3d\x22\x35\x31\x32\x2e\x37\x22\x20\x79\
\x31\x3d\x22\x32\x35\x34\x2e\x33\x36\x22\x20\x78\x32\x3d\x22\x36\
\x31\x35\x2e\x35\x39\x22\x20\x79\x32\x3d\x22\x32\x35\x34\x2e\x38\
\x33\x22\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\
\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\
\x65\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\
\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x38\x2e\x30\
\x37\x65\x2d\x32\x2c\x37\x2e\x37\x35\x65\x2d\x32\x2c\x2d\x30\x2e\
\x33\x35\x2c\x30\x2e\x33\x36\x2c\x37\x37\x2e\x31\x34\x2c\x2d\x34\
\x35\x2e\x38\x39\x29\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x20\x78\x6c\x69\x6e\
\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x42\x6c\x61\x63\x6b\x54\x72\
\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x20\x69\x64\x3d\x22\x6c\
\x67\x30\x35\x22\x20\x78\x31\x3d\x22\x35\x34\x33\x2e\x31\x22\x20\
\x79\x31\x3d\x22\x32\x38\x36\x2e\x35\x36\x22\x20\x78\x32\x3d\x22\
\x34\x31\x39\x2e\x38\x38\x22\x20\x79\x32\x3d\x22\x32\x38\x36\x2e\
\x35\x36\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\
\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\
\x65\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\
\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x39\x2e\x39\
\x38\x65\x2d\x32\x2c\x39\x2e\x39\x38\x65\x2d\x32\x2c\x2d\x30\x2e\
\x32\x38\x2c\x30\x2e\x32\x38\x2c\x37\x38\x2e\x38\x34\x2c\x2d\x34\
\x34\x2e\x38\x29\x22\x20\x73\x70\x72\x65\x61\x64\x4d\x65\x74\x68\
\x6f\x64\x3d\x22\x70\x61\x64\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x20\x78\x6c\
\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\x74\x65\
\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x20\x69\x64\x3d\
\x22\x6c\x67\x30\x39\x22\x20\x78\x31\x3d\x22\x32\x35\x38\x2e\x39\
\x36\x22\x20\x79\x31\x3d\x22\x36\x32\x2e\x37\x34\x22\x20\x78\x32\
\x3d\x22\x32\x35\x38\x2e\x39\x36\x22\x20\x79\x32\x3d\x22\x2d\x31\
\x2e\x37\x32\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\
\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\
\x73\x65\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\
\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\
\x33\x33\x2c\x30\x2e\x33\x33\x2c\x2d\x39\x2e\x34\x34\x65\x2d\x32\
\x2c\x39\x2e\x34\x34\x65\x2d\x32\x2c\x39\x2e\x30\x33\x2c\x2d\x34\
\x38\x2e\x31\x29\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x20\x78\x6c\x69\x6e\x6b\
\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\x74\x65\x54\x72\x61\
\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x20\x69\x64\x3d\x22\x6c\x67\
\x31\x32\x22\x20\x78\x31\x3d\x22\x31\x34\x36\x2e\x31\x35\x22\x20\
\x79\x31\x3d\x22\x32\x38\x38\x2e\x35\x37\x22\x20\x78\x32\x3d\x22\
\x31\x34\x36\x2e\x31\x35\x22\x20\x79\x32\x3d\x22\x33\x36\x38\x2e\
\x32\x37\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\
\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\
\x65\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\
\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x33\
\x2c\x30\x2e\x33\x2c\x2d\x39\x65\x2d\x32\x2c\x39\x65\x2d\x32\x2c\
\x37\x38\x2e\x38\x34\x2c\x2d\x34\x34\x2e\x38\x29\x22\x2f\x3e\x0d\
\x0a\x09\x09\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\
\x57\x68\x69\x74\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\
\x22\x20\x69\x64\x3d\x22\x6c\x67\x31\x36\x22\x20\x78\x31\x3d\x22\
\x35\x37\x37\x2e\x30\x33\x22\x20\x79\x31\x3d\x22\x31\x32\x34\x22\
\x20\x78\x32\x3d\x22\x36\x32\x36\x2e\x31\x22\x20\x79\x32\x3d\x22\
\x31\x32\x34\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\
\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\
\x73\x65\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\
\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x37\x2e\
\x37\x35\x65\x2d\x32\x2c\x37\x2e\x37\x35\x65\x2d\x32\x2c\x2d\x30\
\x2e\x33\x36\x2c\x30\x2e\x33\x36\x2c\x37\x38\x2e\x38\x34\x2c\x2d\
\x34\x34\x2e\x38\x29\x22\x20\x73\x70\x72\x65\x61\x64\x4d\x65\x74\
\x68\x6f\x64\x3d\x22\x70\x61\x64\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x20\x78\
\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x42\x6c\x61\x63\
\x6b\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x20\x69\x64\
\x3d\x22\x6c\x67\x31\x39\x22\x20\x78\x31\x3d\x22\x37\x35\x2e\x31\
\x22\x20\x79\x31\x3d\x22\x31\x38\x39\x2e\x31\x34\x22\x20\x78\x32\
\x3d\x22\x37\x31\x2e\x37\x37\x22\x20\x79\x32\x3d\x22\x31\x38\x35\
\x2e\x38\x22\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\
\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x31\x2e\
\x30\x35\x2c\x30\x2c\x30\x2c\x31\x2e\x30\x35\x2c\x30\x2e\x31\x33\
\x2c\x2d\x31\x34\x30\x2e\x35\x34\x29\x22\x2f\x3e\x0d\x0a\x09\x09\
\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x20\
\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\
\x74\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x20\x69\
\x64\x3d\x22\x6c\x67\x35\x31\x22\x20\x78\x31\x3d\x22\x36\x34\x36\
\x2e\x32\x34\x22\x20\x79\x31\x3d\x22\x2d\x32\x35\x32\x2e\x36\x22\
\x20\x78\x32\x3d\x22\x36\x30\x37\x2e\x36\x36\x22\x20\x79\x32\x3d\
\x22\x2d\x31\x38\x36\x2e\x32\x36\x22\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\
\x63\x65\x4f\x6e\x55\x73\x65\x22\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\
\x69\x78\x28\x30\x2e\x32\x2c\x30\x2c\x30\x2c\x30\x2e\x32\x2c\x2d\
\x38\x30\x2e\x39\x34\x2c\x38\x38\x2e\x33\x29\x22\x2f\x3e\x0d\x0a\
\x09\x09\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\
\x68\x69\x74\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\
\x20\x69\x64\x3d\x22\x6c\x67\x35\x35\x22\x20\x78\x31\x3d\x22\x35\
\x35\x30\x2e\x39\x36\x22\x20\x79\x31\x3d\x22\x2d\x31\x33\x37\x2e\
\x35\x22\x20\x78\x32\x3d\x22\x36\x35\x35\x2e\x34\x32\x22\x20\x79\
\x32\x3d\x22\x2d\x32\x34\x31\x2e\x32\x22\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\
\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x30\x2e\x32\x36\x2c\x30\x2c\x30\x2c\x30\x2e\x32\
\x36\x2c\x2d\x31\x30\x36\x2e\x35\x37\x2c\x31\x30\x31\x2e\x35\x37\
\x29\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\
\x65\x66\x3d\x22\x23\x42\x6c\x61\x63\x6b\x54\x72\x61\x6e\x73\x70\
\x61\x72\x65\x6e\x74\x22\x20\x69\x64\x3d\x22\x6c\x67\x64\x67\x22\
\x20\x78\x31\x3d\x22\x37\x33\x2e\x38\x38\x22\x20\x79\x31\x3d\x22\
\x36\x36\x2e\x32\x22\x20\x78\x32\x3d\x22\x38\x34\x2e\x33\x22\x20\
\x79\x32\x3d\x22\x38\x36\x2e\x36\x38\x22\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\
\x61\x6e\x73\x6c\x61\x74\x65\x28\x2d\x30\x2e\x33\x30\x32\x36\x37\
\x2c\x2d\x33\x2e\x32\x30\x31\x33\x38\x29\x22\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\
\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x2f\x3e\x0d\x0a\x09\x09\
\x3c\x63\x6c\x69\x70\x50\x61\x74\x68\x20\x63\x6c\x69\x70\x50\x61\
\x74\x68\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\
\x63\x65\x4f\x6e\x55\x73\x65\x22\x20\x69\x64\x3d\x22\x63\x6c\x69\
\x70\x6f\x75\x74\x6c\x69\x6e\x65\x31\x22\x3e\x0d\x0a\x09\x09\x09\
\x3c\x70\x61\x74\x68\x20\x69\x64\x3d\x22\x6f\x75\x74\x6c\x69\x6e\
\x65\x31\x22\x20\x64\x3d\x22\x4d\x20\x32\x32\x2e\x34\x32\x2c\x31\
\x37\x2e\x32\x20\x4c\x20\x33\x35\x2e\x33\x38\x2c\x33\x30\x2e\x31\
\x35\x20\x4c\x20\x33\x32\x2e\x38\x38\x2c\x33\x38\x2e\x39\x33\x20\
\x4c\x20\x32\x34\x2e\x31\x2c\x34\x31\x2e\x34\x33\x20\x4c\x20\x31\
\x31\x2e\x31\x34\x2c\x32\x38\x2e\x34\x37\x20\x4c\x20\x35\x2e\x32\
\x38\x2c\x33\x34\x2e\x33\x33\x20\x4c\x20\x32\x30\x2e\x31\x37\x2c\
\x35\x35\x2e\x37\x39\x20\x4c\x20\x33\x37\x2e\x37\x33\x2c\x35\x32\
\x2e\x34\x35\x20\x4c\x20\x39\x39\x2e\x33\x36\x2c\x31\x31\x38\x2e\
\x30\x37\x20\x43\x20\x31\x30\x38\x2e\x38\x2c\x31\x32\x37\x2e\x35\
\x38\x20\x31\x32\x31\x2e\x35\x33\x2c\x31\x31\x33\x2e\x33\x32\x20\
\x31\x31\x32\x2e\x37\x2c\x31\x30\x35\x2e\x32\x20\x4c\x20\x34\x36\
\x2e\x38\x35\x2c\x34\x32\x2e\x39\x32\x20\x4c\x20\x35\x30\x2e\x38\
\x36\x2c\x32\x35\x2e\x31\x36\x20\x4c\x20\x32\x38\x2e\x37\x32\x2c\
\x31\x30\x2e\x38\x39\x20\x4c\x20\x32\x32\x2e\x34\x32\x2c\x31\x37\
\x2e\x32\x20\x7a\x20\x4d\x20\x31\x30\x33\x2e\x34\x38\x2c\x31\x30\
\x39\x2e\x31\x37\x20\x43\x20\x31\x30\x35\x2e\x31\x36\x2c\x31\x30\
\x37\x2e\x34\x39\x20\x31\x30\x37\x2e\x38\x38\x2c\x31\x30\x37\x2e\
\x34\x39\x20\x31\x30\x39\x2e\x35\x36\x2c\x31\x30\x39\x2e\x31\x37\
\x20\x43\x20\x31\x31\x31\x2e\x32\x34\x2c\x31\x31\x30\x2e\x38\x35\
\x20\x31\x31\x31\x2e\x32\x34\x2c\x31\x31\x33\x2e\x35\x37\x20\x31\
\x30\x39\x2e\x35\x36\x2c\x31\x31\x35\x2e\x32\x35\x20\x43\x20\x31\
\x30\x37\x2e\x38\x38\x2c\x31\x31\x36\x2e\x39\x32\x20\x31\x30\x35\
\x2e\x31\x36\x2c\x31\x31\x36\x2e\x39\x32\x20\x31\x30\x33\x2e\x34\
\x38\x2c\x31\x31\x35\x2e\x32\x35\x20\x43\x20\x31\x30\x31\x2e\x38\
\x2c\x31\x31\x33\x2e\x35\x37\x20\x31\x30\x31\x2e\x38\x2c\x31\x31\
\x30\x2e\x38\x35\x20\x31\x30\x33\x2e\x34\x38\x2c\x31\x30\x39\x2e\
\x31\x37\x20\x7a\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x2f\x63\x6c\x69\
\x70\x50\x61\x74\x68\x3e\x0d\x0a\x09\x09\x3c\x63\x6c\x69\x70\x50\
\x61\x74\x68\x20\x63\x6c\x69\x70\x50\x61\x74\x68\x55\x6e\x69\x74\
\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\
\x65\x22\x20\x69\x64\x3d\x22\x63\x6c\x69\x70\x6f\x75\x74\x6c\x69\
\x6e\x65\x32\x22\x3e\x0d\x0a\x09\x09\x09\x3c\x70\x61\x74\x68\x20\
\x69\x64\x3d\x22\x6f\x75\x74\x6c\x69\x6e\x65\x32\x22\x20\x64\x3d\
\x22\x4d\x20\x35\x35\x2e\x38\x2c\x31\x32\x20\x4c\x20\x35\x36\x2e\
\x35\x36\x2c\x31\x32\x2e\x31\x36\x20\x43\x20\x36\x35\x2e\x34\x2c\
\x39\x2e\x32\x32\x20\x38\x35\x2e\x32\x34\x2c\x32\x30\x2e\x38\x20\
\x38\x30\x2e\x38\x32\x2c\x33\x31\x2e\x31\x32\x20\x43\x20\x37\x39\
\x2e\x37\x2c\x33\x32\x2e\x37\x34\x20\x37\x39\x2e\x38\x39\x2c\x33\
\x35\x2e\x36\x32\x20\x38\x31\x2e\x32\x34\x2c\x33\x37\x2e\x34\x33\
\x20\x4c\x20\x35\x36\x2e\x34\x33\x2c\x36\x32\x2e\x32\x35\x20\x43\
\x20\x35\x35\x2e\x30\x34\x2c\x36\x30\x2e\x38\x36\x20\x35\x31\x2e\
\x39\x35\x2c\x36\x30\x2e\x38\x39\x20\x35\x30\x2e\x35\x33\x2c\x36\
\x32\x2e\x32\x35\x20\x4c\x20\x39\x2e\x35\x2c\x31\x30\x31\x2e\x36\
\x33\x20\x43\x20\x35\x2e\x37\x36\x2c\x31\x30\x35\x2e\x32\x32\x20\
\x38\x2e\x37\x2c\x31\x30\x38\x2e\x32\x37\x20\x31\x30\x2e\x32\x38\
\x2c\x31\x30\x39\x2e\x38\x38\x20\x4c\x20\x31\x37\x2e\x36\x34\x2c\
\x31\x31\x37\x2e\x32\x34\x20\x43\x20\x31\x39\x2e\x32\x35\x2c\x31\
\x31\x38\x2e\x38\x34\x20\x32\x33\x2e\x35\x2c\x31\x32\x31\x20\x32\
\x36\x2e\x35\x32\x2c\x31\x31\x37\x2e\x38\x20\x4c\x20\x36\x35\x2e\
\x32\x34\x2c\x37\x36\x2e\x39\x39\x20\x43\x20\x36\x36\x2e\x35\x39\
\x2c\x37\x35\x2e\x35\x37\x20\x36\x36\x2e\x36\x2c\x37\x32\x2e\x35\
\x32\x20\x36\x35\x2e\x32\x34\x2c\x37\x31\x2e\x31\x32\x20\x43\x20\
\x36\x35\x2e\x32\x34\x2c\x37\x31\x2e\x31\x32\x20\x36\x35\x2e\x32\
\x35\x2c\x37\x31\x2e\x31\x20\x36\x35\x2e\x32\x34\x2c\x37\x31\x2e\
\x31\x20\x4c\x20\x39\x30\x2e\x31\x35\x2c\x34\x36\x2e\x32\x20\x43\
\x20\x39\x32\x2e\x37\x38\x2c\x34\x38\x2e\x35\x37\x20\x39\x35\x2e\
\x32\x36\x33\x38\x32\x37\x2c\x34\x38\x2e\x37\x37\x34\x38\x35\x34\
\x20\x39\x37\x2e\x36\x32\x2c\x34\x38\x2e\x31\x33\x20\x43\x20\x31\
\x30\x32\x2e\x31\x37\x30\x35\x37\x2c\x34\x36\x2e\x38\x38\x34\x35\
\x36\x38\x20\x31\x30\x34\x2e\x37\x30\x37\x32\x35\x2c\x35\x31\x2e\
\x33\x33\x36\x36\x34\x33\x20\x31\x30\x37\x2e\x34\x33\x2c\x35\x34\
\x2e\x35\x39\x20\x4c\x20\x31\x30\x36\x2e\x32\x2c\x35\x35\x2e\x38\
\x20\x43\x20\x31\x30\x34\x2e\x33\x38\x2c\x35\x37\x2e\x36\x34\x20\
\x31\x30\x34\x2e\x35\x35\x2c\x36\x30\x2e\x37\x34\x20\x31\x30\x36\
\x2e\x35\x39\x2c\x36\x32\x2e\x37\x38\x20\x43\x20\x31\x30\x38\x2e\
\x36\x33\x2c\x36\x34\x2e\x38\x32\x20\x31\x31\x31\x2e\x37\x34\x2c\
\x36\x34\x2e\x39\x39\x20\x31\x31\x33\x2e\x35\x36\x2c\x36\x33\x2e\
\x31\x37\x20\x4c\x20\x31\x32\x31\x2e\x37\x2c\x35\x35\x2e\x30\x34\
\x20\x43\x20\x31\x32\x33\x2e\x35\x32\x2c\x35\x33\x2e\x32\x20\x31\
\x32\x33\x2e\x33\x35\x2c\x35\x30\x2e\x31\x20\x31\x32\x31\x2e\x33\
\x2c\x34\x38\x2e\x30\x37\x20\x43\x20\x31\x31\x39\x2e\x34\x36\x2c\
\x34\x36\x2e\x32\x32\x20\x31\x31\x36\x2e\x37\x39\x2c\x34\x35\x2e\
\x39\x38\x20\x31\x31\x34\x2e\x39\x33\x2c\x34\x37\x2e\x33\x20\x43\
\x20\x31\x30\x39\x2e\x33\x35\x2c\x34\x31\x2e\x30\x34\x20\x31\x31\
\x32\x2e\x32\x38\x2c\x34\x30\x2e\x31\x20\x31\x30\x34\x2e\x39\x32\
\x2c\x33\x31\x2e\x39\x35\x20\x4c\x20\x39\x31\x2e\x31\x33\x2c\x31\
\x37\x2e\x38\x36\x20\x43\x20\x38\x31\x2e\x32\x2c\x38\x2e\x31\x32\
\x20\x36\x38\x2e\x33\x2c\x38\x2e\x31\x33\x20\x35\x35\x2e\x38\x2c\
\x31\x32\x20\x7a\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x2f\x63\x6c\x69\
\x70\x50\x61\x74\x68\x3e\x0d\x0a\x09\x09\x3c\x21\x2d\x2d\x20\x2d\
\x2d\x3e\x0d\x0a\x09\x09\x3c\x66\x69\x6c\x74\x65\x72\x20\x69\x64\
\x3d\x22\x53\x68\x61\x64\x6f\x77\x42\x6c\x75\x72\x22\x20\x66\x69\
\x6c\x74\x65\x72\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\
\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x20\x78\x3d\x22\x30\x22\
\x20\x79\x3d\x22\x30\x22\x3e\x20\x3c\x66\x65\x47\x61\x75\x73\x73\
\x69\x61\x6e\x42\x6c\x75\x72\x20\x69\x6e\x3d\x22\x53\x6f\x75\x72\
\x63\x65\x47\x72\x61\x70\x68\x69\x63\x22\x20\x73\x74\x64\x44\x65\
\x76\x69\x61\x74\x69\x6f\x6e\x3d\x22\x32\x22\x20\x69\x64\x3d\x22\
\x66\x65\x47\x61\x75\x73\x73\x69\x61\x6e\x42\x6c\x75\x72\x36\x22\
\x20\x2f\x3e\x3c\x2f\x66\x69\x6c\x74\x65\x72\x3e\x0d\x0a\x09\x3c\
\x2f\x64\x65\x66\x73\x3e\x0d\x0a\x09\x3c\x73\x74\x79\x6c\x65\x20\
\x74\x79\x70\x65\x3d\x22\x74\x65\x78\x74\x2f\x63\x73\x73\x22\x3e\
\x0d\x0a\x09\x3c\x21\x5b\x43\x44\x41\x54\x41\x5b\x0d\x0a\x09\x2f\
\x2a\x20\x53\x70\x65\x63\x75\x6c\x61\x72\x20\x48\x69\x67\x68\x6c\
\x69\x67\x68\x74\x69\x6e\x67\x20\x2a\x2f\x0d\x0a\x09\x09\x2e\x6c\
\x6f\x77\x2d\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\x09\x7b\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x32\x35\x3b\x7d\x0d\x0a\
\x09\x09\x2e\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\x09\x09\
\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x35\x3b\x7d\x0d\x0a\
\x09\x09\x2e\x68\x69\x67\x68\x2d\x73\x70\x65\x63\x75\x6c\x61\x72\
\x69\x74\x79\x09\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x37\
\x35\x3b\x7d\x0d\x0a\x09\x09\x2e\x66\x75\x6c\x6c\x2d\x73\x70\x65\
\x63\x75\x6c\x61\x72\x69\x74\x79\x09\x7b\x6f\x70\x61\x63\x69\x74\
\x79\x3a\x31\x3b\x7d\x0d\x0a\x0d\x0a\x09\x2f\x2a\x20\x53\x68\x61\
\x64\x69\x6e\x67\x20\x2a\x2f\x0d\x0a\x09\x09\x2e\x6c\x6f\x77\x2d\
\x73\x68\x61\x64\x65\x09\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\
\x2e\x32\x35\x3b\x7d\x0d\x0a\x09\x09\x2e\x73\x68\x61\x64\x65\x09\
\x09\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x35\x3b\x7d\x0d\
\x0a\x09\x09\x2e\x68\x69\x67\x68\x2d\x73\x68\x61\x64\x65\x09\x7b\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x37\x35\x3b\x7d\x0d\x0a\
\x09\x09\x2e\x66\x75\x6c\x6c\x2d\x73\x68\x61\x64\x65\x09\x7b\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x7d\x0d\x0a\x0d\x0a\x09\x2f\
\x2a\x20\x54\x61\x6e\x67\x6f\x20\x70\x61\x6c\x65\x74\x74\x65\x20\
\x66\x69\x6c\x6c\x2f\x73\x74\x72\x6f\x6b\x65\x20\x2a\x2f\x0d\x0a\
\x09\x09\x2e\x62\x6c\x61\x63\x6b\x09\x09\x7b\x66\x69\x6c\x6c\x3a\
\x23\x30\x30\x30\x3b\x7d\x0d\x0a\x09\x09\x2e\x61\x6c\x75\x6d\x69\
\x6e\x69\x75\x6d\x31\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x65\x65\x65\
\x65\x65\x63\x3b\x7d\x0d\x0a\x09\x09\x2e\x61\x6c\x75\x6d\x69\x6e\
\x69\x75\x6d\x32\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x64\x33\x64\x37\
\x63\x66\x3b\x7d\x0d\x0a\x09\x09\x2e\x61\x6c\x75\x6d\x69\x6e\x69\
\x75\x6d\x36\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x32\x65\x33\x34\x33\
\x36\x3b\x7d\x0d\x0a\x09\x09\x2e\x63\x68\x6f\x63\x6f\x6c\x61\x74\
\x65\x33\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x38\x66\x35\x39\x30\x32\
\x3b\x7d\x0d\x0a\x09\x09\x2e\x63\x68\x6f\x63\x6f\x6c\x61\x74\x65\
\x32\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x63\x31\x37\x64\x31\x31\x3b\
\x7d\x0d\x0a\x09\x09\x2e\x61\x6c\x75\x6d\x69\x6e\x69\x75\x6d\x34\
\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x38\x38\x38\x61\x38\x35\x3b\x7d\
\x0d\x0a\x0d\x0a\x09\x2f\x2a\x20\x53\x68\x61\x64\x6f\x77\x73\x3a\
\x20\x42\x61\x63\x6b\x2d\x53\x68\x61\x64\x6f\x77\x73\x20\x26\x20\
\x42\x61\x73\x65\x20\x53\x68\x61\x64\x6f\x77\x73\x20\x2a\x2f\x0d\
\x0a\x09\x09\x2e\x62\x61\x73\x65\x2d\x73\x68\x61\x64\x6f\x77\x09\
\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x34\x3b\x7d\x0d\x0a\
\x09\x09\x2e\x6f\x75\x74\x6c\x69\x6e\x65\x2d\x62\x69\x67\x09\x7b\
\x73\x74\x72\x6f\x6b\x65\x3a\x62\x6c\x61\x63\x6b\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x38\x3b\x6f\x70\x61\x63\
\x69\x74\x79\x3a\x30\x2e\x32\x35\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\x3b\x7d\
\x0d\x0a\x09\x09\x2e\x6f\x75\x74\x6c\x69\x6e\x65\x2d\x73\x6d\x61\
\x6c\x6c\x09\x7b\x73\x74\x72\x6f\x6b\x65\x3a\x62\x6c\x61\x63\x6b\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x34\x3b\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x35\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\
\x64\x3b\x7d\x0d\x0a\x09\x09\x2e\x73\x74\x72\x6f\x6b\x65\x2d\x68\
\x69\x67\x68\x6c\x69\x67\x68\x74\x09\x7b\x66\x69\x6c\x6c\x3a\x6e\
\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x77\x68\x69\x74\x65\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x30\x2e\x32\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\
\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\
\x69\x6e\x3a\x72\x6f\x75\x6e\x64\x3b\x7d\x0d\x0a\x09\x5d\x5d\x3e\
\x0d\x0a\x09\x3c\x2f\x73\x74\x79\x6c\x65\x3e\x0d\x0a\x09\x3c\x67\
\x20\x69\x64\x3d\x22\x63\x6f\x6e\x66\x69\x67\x75\x72\x61\x74\x69\
\x6f\x6e\x22\x3e\x0d\x0a\x09\x3c\x67\x20\x69\x64\x3d\x22\x73\x70\
\x61\x6e\x6e\x65\x72\x22\x3e\x0d\x0a\x09\x09\x3c\x75\x73\x65\x20\
\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6f\x75\x74\
\x6c\x69\x6e\x65\x31\x22\x20\x63\x6c\x61\x73\x73\x3d\x22\x6f\x75\
\x74\x6c\x69\x6e\x65\x2d\x62\x69\x67\x22\x2f\x3e\x0d\x0a\x09\x09\
\x3c\x75\x73\x65\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\
\x22\x23\x6f\x75\x74\x6c\x69\x6e\x65\x31\x22\x20\x63\x6c\x61\x73\
\x73\x3d\x22\x6f\x75\x74\x6c\x69\x6e\x65\x2d\x73\x6d\x61\x6c\x6c\
\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x75\x73\x65\x20\x78\x6c\x69\x6e\
\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6f\x75\x74\x6c\x69\x6e\x65\
\x31\x22\x20\x63\x6c\x61\x73\x73\x3d\x22\x61\x6c\x75\x6d\x69\x6e\
\x69\x75\x6d\x34\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x75\x73\x65\x20\
\x63\x6c\x61\x73\x73\x3d\x22\x73\x74\x72\x6f\x6b\x65\x2d\x68\x69\
\x67\x68\x6c\x69\x67\x68\x74\x22\x20\x78\x6c\x69\x6e\x6b\x3a\x68\
\x72\x65\x66\x3d\x22\x23\x6f\x75\x74\x6c\x69\x6e\x65\x31\x22\x20\
\x63\x6c\x69\x70\x2d\x70\x61\x74\x68\x3d\x22\x75\x72\x6c\x28\x23\
\x63\x6c\x69\x70\x6f\x75\x74\x6c\x69\x6e\x65\x31\x29\x22\x20\x73\
\x74\x79\x6c\x65\x3d\x22\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\
\x65\x6a\x6f\x69\x6e\x3a\x6d\x69\x74\x65\x72\x3b\x22\x2f\x3e\x0d\
\x0a\x09\x09\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\x73\x73\x3d\x22\
\x68\x69\x67\x68\x2d\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\
\x22\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x75\x72\
\x6c\x28\x23\x6c\x67\x35\x35\x29\x3b\x22\x20\x64\x3d\x22\x4d\x20\
\x32\x34\x2e\x33\x33\x2c\x31\x35\x2e\x34\x20\x4c\x20\x33\x37\x2e\
\x37\x38\x2c\x32\x38\x2e\x37\x38\x20\x4c\x20\x33\x34\x2e\x34\x35\
\x2c\x34\x30\x2e\x34\x37\x20\x4c\x20\x32\x33\x2e\x35\x2c\x34\x33\
\x2e\x37\x34\x20\x4c\x20\x39\x2e\x39\x33\x31\x39\x34\x31\x37\x2c\
\x33\x30\x20\x4c\x20\x35\x2e\x32\x2c\x33\x34\x2e\x35\x34\x20\x4c\
\x20\x31\x39\x2e\x34\x2c\x35\x34\x2e\x34\x38\x20\x4c\x20\x33\x38\
\x2e\x33\x2c\x35\x30\x2e\x33\x34\x20\x4c\x20\x31\x30\x30\x2e\x38\
\x2c\x31\x31\x36\x2e\x37\x20\x43\x20\x31\x30\x38\x2e\x33\x2c\x31\
\x32\x35\x20\x31\x32\x31\x2c\x31\x31\x34\x2e\x30\x33\x20\x31\x31\
\x31\x2e\x39\x34\x2c\x31\x30\x35\x2e\x31\x20\x4c\x20\x34\x35\x2e\
\x30\x34\x2c\x34\x32\x20\x4c\x20\x34\x38\x2e\x39\x2c\x32\x34\x2e\
\x38\x33\x20\x4c\x20\x32\x38\x2e\x39\x34\x2c\x31\x30\x2e\x38\x20\
\x4c\x20\x32\x34\x2e\x33\x33\x2c\x31\x35\x2e\x34\x20\x7a\x20\x4d\
\x20\x31\x30\x34\x2e\x33\x2c\x31\x30\x38\x2e\x37\x20\x43\x20\x31\
\x30\x35\x2e\x39\x37\x2c\x31\x30\x37\x2e\x30\x33\x20\x31\x30\x38\
\x2e\x39\x33\x2c\x31\x30\x36\x2e\x37\x20\x31\x31\x30\x2e\x36\x2c\
\x31\x30\x38\x2e\x34\x20\x43\x20\x31\x31\x32\x2e\x33\x2c\x31\x31\
\x30\x2e\x30\x37\x20\x31\x31\x33\x2e\x36\x36\x2c\x31\x31\x33\x2e\
\x30\x33\x20\x31\x31\x31\x2e\x32\x35\x2c\x31\x31\x36\x2e\x32\x34\
\x20\x43\x20\x31\x30\x39\x2e\x32\x35\x2c\x31\x31\x38\x2e\x32\x34\
\x20\x31\x30\x36\x2e\x30\x35\x2c\x31\x31\x38\x2e\x31\x36\x20\x31\
\x30\x34\x2e\x30\x35\x2c\x31\x31\x36\x20\x43\x20\x31\x30\x32\x2e\
\x33\x37\x2c\x31\x31\x34\x2e\x33\x32\x20\x31\x30\x32\x2e\x36\x2c\
\x31\x31\x30\x2e\x34\x20\x31\x30\x34\x2e\x33\x2c\x31\x30\x38\x2e\
\x37\x20\x7a\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x70\x61\x74\x68\x20\
\x63\x6c\x61\x73\x73\x3d\x22\x73\x70\x65\x63\x75\x6c\x61\x72\x69\
\x74\x79\x22\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\
\x75\x72\x6c\x28\x23\x6c\x67\x35\x31\x29\x3b\x22\x20\x64\x3d\x22\
\x4d\x20\x32\x34\x2e\x32\x2c\x31\x35\x2e\x34\x32\x20\x4c\x20\x34\
\x37\x2e\x36\x37\x2c\x33\x39\x2e\x30\x37\x20\x4c\x20\x35\x30\x2e\
\x38\x39\x2c\x32\x35\x2e\x32\x20\x4c\x20\x32\x38\x2e\x37\x39\x2c\
\x31\x30\x2e\x38\x20\x4c\x20\x32\x34\x2e\x32\x2c\x31\x35\x2e\x34\
\x32\x20\x7a\x22\x2f\x3e\x0d\x0a\x09\x3c\x2f\x67\x3e\x0d\x0a\x09\
\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\x73\x73\x3d\x22\x6c\x6f\x77\
\x2d\x73\x68\x61\x64\x65\x22\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\
\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x6c\x67\x64\x67\x29\x22\x20\
\x64\x3d\x22\x4d\x20\x37\x30\x2e\x37\x33\x39\x2c\x36\x35\x2e\x35\
\x32\x20\x4c\x20\x37\x35\x2e\x33\x37\x2c\x36\x39\x2e\x38\x20\x43\
\x20\x37\x35\x2e\x37\x35\x2c\x37\x34\x2e\x31\x32\x20\x37\x34\x2e\
\x36\x34\x2c\x37\x35\x2e\x34\x32\x20\x36\x37\x2e\x35\x34\x2c\x38\
\x31\x2e\x34\x34\x20\x4c\x20\x35\x38\x2e\x39\x34\x2c\x37\x32\x2e\
\x32\x32\x20\x4c\x20\x37\x30\x2e\x37\x33\x2c\x36\x35\x2e\x35\x32\
\x20\x4c\x20\x37\x30\x2e\x37\x33\x2c\x36\x35\x2e\x35\x32\x20\x4c\
\x20\x37\x30\x2e\x37\x33\x39\x2c\x36\x35\x2e\x35\x32\x20\x7a\x20\
\x22\x20\x2f\x3e\x0d\x0a\x09\x3c\x67\x20\x69\x64\x3d\x22\x68\x61\
\x6d\x6d\x65\x72\x22\x3e\x0d\x0a\x09\x09\x3c\x75\x73\x65\x20\x78\
\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6f\x75\x74\x6c\
\x69\x6e\x65\x32\x22\x20\x63\x6c\x61\x73\x73\x3d\x22\x6f\x75\x74\
\x6c\x69\x6e\x65\x2d\x62\x69\x67\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\
\x75\x73\x65\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\
\x23\x6f\x75\x74\x6c\x69\x6e\x65\x32\x22\x20\x63\x6c\x61\x73\x73\
\x3d\x22\x6f\x75\x74\x6c\x69\x6e\x65\x2d\x73\x6d\x61\x6c\x6c\x20\
\x73\x74\x72\x6f\x6b\x65\x2d\x61\x6c\x75\x6d\x69\x6e\x69\x75\x6d\
\x35\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x70\x61\x74\x68\x20\x63\x6c\
\x61\x73\x73\x3d\x22\x61\x6c\x75\x6d\x69\x6e\x69\x75\x6d\x32\x22\
\x20\x64\x3d\x22\x4d\x20\x38\x32\x2e\x39\x32\x2c\x33\x35\x2e\x37\
\x35\x20\x4c\x20\x35\x33\x2e\x34\x37\x2c\x36\x35\x2e\x32\x20\x4c\
\x20\x36\x32\x2e\x33\x2c\x37\x34\x2e\x30\x33\x20\x4c\x20\x39\x31\
\x2e\x37\x35\x2c\x34\x34\x2e\x35\x39\x20\x4c\x20\x38\x32\x2e\x39\
\x32\x2c\x33\x35\x2e\x37\x35\x20\x7a\x22\x2f\x3e\x0d\x0a\x09\x09\
\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\x73\x73\x3d\x22\x73\x70\x65\
\x63\x75\x6c\x61\x72\x69\x74\x79\x22\x20\x73\x74\x79\x6c\x65\x3d\
\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x6c\x67\x31\x39\x29\
\x3b\x22\x20\x20\x64\x3d\x22\x4d\x20\x38\x38\x2e\x39\x33\x2c\x34\
\x31\x2e\x37\x36\x20\x4c\x20\x35\x39\x2e\x34\x38\x2c\x37\x31\x2e\
\x32\x20\x4c\x20\x36\x32\x2e\x33\x2c\x37\x34\x2e\x30\x33\x20\x4c\
\x20\x39\x31\x2e\x37\x35\x2c\x34\x34\x2e\x35\x39\x20\x4c\x20\x38\
\x38\x2e\x39\x33\x2c\x34\x31\x2e\x37\x36\x20\x7a\x22\x2f\x3e\x0d\
\x0a\x09\x09\x3c\x70\x61\x74\x68\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x6c\x67\x31\x36\x29\x3b\
\x22\x20\x64\x3d\x22\x4d\x20\x38\x36\x2e\x34\x36\x2c\x33\x37\x2e\
\x30\x34\x20\x4c\x20\x35\x37\x2e\x31\x33\x2c\x36\x36\x2e\x33\x37\
\x20\x4c\x20\x36\x30\x2e\x39\x32\x2c\x37\x30\x2e\x31\x36\x20\x4c\
\x20\x38\x39\x2e\x35\x2c\x34\x30\x2e\x30\x38\x20\x4c\x20\x38\x36\
\x2e\x34\x36\x2c\x33\x37\x2e\x30\x34\x20\x7a\x22\x2f\x3e\x0d\x0a\
\x09\x09\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\x73\x73\x3d\x22\x61\
\x6c\x75\x6d\x69\x6e\x69\x75\x6d\x36\x22\x20\x64\x3d\x22\x4d\x20\
\x35\x35\x2e\x38\x2c\x31\x32\x20\x4c\x20\x35\x36\x2e\x35\x36\x2c\
\x31\x32\x2e\x31\x36\x20\x43\x20\x36\x35\x2e\x34\x2c\x39\x2e\x32\
\x32\x20\x38\x35\x2e\x32\x34\x2c\x32\x30\x2e\x38\x20\x38\x30\x2e\
\x38\x32\x2c\x33\x31\x2e\x31\x32\x20\x43\x20\x37\x39\x2e\x37\x2c\
\x33\x32\x2e\x37\x34\x20\x37\x39\x2e\x38\x39\x2c\x33\x35\x2e\x36\
\x32\x20\x38\x31\x2e\x32\x34\x2c\x33\x37\x2e\x34\x33\x20\x4c\x20\
\x39\x30\x2e\x31\x35\x2c\x34\x36\x2e\x32\x20\x43\x20\x39\x32\x2e\
\x37\x38\x2c\x34\x38\x2e\x35\x37\x20\x39\x35\x2e\x32\x36\x2c\x34\
\x38\x2e\x37\x37\x20\x39\x37\x2e\x36\x32\x2c\x34\x38\x2e\x31\x33\
\x20\x43\x20\x31\x30\x32\x2e\x31\x37\x2c\x34\x36\x2e\x39\x20\x31\
\x30\x34\x2e\x37\x2c\x35\x31\x2e\x33\x33\x20\x31\x30\x37\x2e\x34\
\x33\x2c\x35\x34\x2e\x35\x39\x20\x4c\x20\x31\x30\x36\x2e\x32\x2c\
\x35\x35\x2e\x38\x20\x43\x20\x31\x30\x34\x2e\x33\x38\x2c\x35\x37\
\x2e\x36\x34\x20\x31\x30\x34\x2e\x35\x35\x2c\x36\x30\x2e\x37\x34\
\x20\x31\x30\x36\x2e\x35\x39\x2c\x36\x32\x2e\x37\x38\x20\x43\x20\
\x31\x30\x38\x2e\x36\x33\x2c\x36\x34\x2e\x38\x32\x20\x31\x31\x31\
\x2e\x37\x34\x2c\x36\x34\x2e\x39\x39\x20\x31\x31\x33\x2e\x35\x36\
\x2c\x36\x33\x2e\x31\x37\x20\x4c\x20\x31\x32\x31\x2e\x37\x2c\x35\
\x35\x2e\x30\x34\x20\x43\x20\x31\x32\x33\x2e\x35\x32\x2c\x35\x33\
\x2e\x32\x20\x31\x32\x33\x2e\x33\x35\x2c\x35\x30\x2e\x31\x20\x31\
\x32\x31\x2e\x33\x2c\x34\x38\x2e\x30\x37\x20\x43\x20\x31\x31\x39\
\x2e\x34\x36\x2c\x34\x36\x2e\x32\x32\x20\x31\x31\x36\x2e\x37\x39\
\x2c\x34\x35\x2e\x39\x38\x20\x31\x31\x34\x2e\x39\x33\x2c\x34\x37\
\x2e\x33\x20\x43\x20\x31\x30\x39\x2e\x33\x35\x2c\x34\x31\x2e\x30\
\x34\x20\x31\x31\x32\x2e\x32\x38\x2c\x34\x30\x2e\x31\x20\x31\x30\
\x34\x2e\x39\x32\x2c\x33\x31\x2e\x39\x35\x20\x4c\x20\x39\x31\x2e\
\x31\x33\x2c\x31\x37\x2e\x38\x36\x20\x43\x20\x38\x31\x2e\x32\x2c\
\x38\x2e\x31\x32\x20\x36\x38\x2e\x33\x2c\x38\x2e\x31\x33\x20\x35\
\x35\x2e\x38\x2c\x31\x32\x20\x7a\x20\x22\x2f\x3e\x0d\x0a\x09\x09\
\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\x73\x73\x3d\x22\x73\x70\x65\
\x63\x75\x6c\x61\x72\x69\x74\x79\x22\x20\x73\x74\x79\x6c\x65\x3d\
\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x6c\x67\x31\x32\x29\
\x3b\x22\x20\x64\x3d\x22\x4d\x20\x31\x31\x34\x2e\x39\x33\x2c\x34\
\x37\x2e\x33\x20\x43\x20\x31\x30\x39\x2e\x33\x35\x2c\x34\x31\x2e\
\x30\x34\x20\x31\x31\x32\x2e\x32\x38\x2c\x34\x30\x2e\x31\x20\x31\
\x30\x34\x2e\x39\x32\x2c\x33\x31\x2e\x39\x35\x20\x4c\x20\x39\x31\
\x2e\x31\x33\x2c\x31\x37\x2e\x38\x36\x20\x43\x20\x38\x35\x2e\x34\
\x34\x2c\x31\x32\x2e\x32\x38\x20\x37\x38\x2e\x37\x37\x2c\x39\x2e\
\x39\x20\x37\x31\x2e\x37\x37\x2c\x39\x2e\x36\x20\x4c\x20\x31\x31\
\x32\x2e\x39\x2c\x35\x31\x2e\x31\x33\x20\x4c\x20\x31\x31\x35\x2e\
\x38\x37\x35\x33\x35\x2c\x34\x38\x2e\x34\x20\x4c\x20\x31\x31\x34\
\x2e\x39\x33\x2c\x34\x37\x2e\x33\x20\x7a\x20\x22\x2f\x3e\x0d\x0a\
\x09\x09\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\x73\x73\x3d\x22\x6c\
\x6f\x77\x2d\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\x22\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\
\x23\x6c\x67\x30\x39\x29\x3b\x22\x20\x64\x3d\x22\x4d\x20\x38\x31\
\x2e\x34\x35\x2c\x32\x38\x20\x43\x20\x38\x31\x2e\x35\x2c\x32\x39\
\x20\x38\x31\x2e\x32\x37\x30\x36\x35\x37\x2c\x33\x30\x20\x38\x30\
\x2e\x38\x2c\x33\x31\x2e\x31\x32\x20\x43\x20\x37\x39\x2e\x37\x2c\
\x33\x32\x2e\x37\x34\x20\x37\x39\x2e\x38\x39\x2c\x33\x35\x2e\x36\
\x32\x20\x38\x31\x2e\x32\x34\x2c\x33\x37\x2e\x34\x33\x20\x4c\x20\
\x39\x30\x2e\x31\x35\x2c\x34\x36\x2e\x32\x20\x43\x20\x39\x32\x2e\
\x37\x38\x2c\x34\x38\x2e\x35\x37\x20\x39\x35\x2e\x32\x36\x2c\x34\
\x38\x2e\x37\x37\x20\x39\x37\x2e\x36\x32\x2c\x34\x38\x2e\x31\x33\
\x20\x43\x20\x39\x38\x2e\x37\x2c\x34\x37\x2e\x38\x20\x39\x39\x2e\
\x36\x38\x2c\x34\x37\x2e\x38\x36\x20\x31\x30\x30\x2e\x36\x2c\x34\
\x38\x2e\x31\x33\x20\x43\x20\x31\x30\x33\x2e\x34\x2c\x34\x38\x2e\
\x39\x20\x38\x31\x2e\x34\x34\x2c\x32\x37\x2e\x35\x38\x20\x38\x31\
\x2e\x34\x35\x2c\x32\x37\x2e\x39\x20\x4c\x20\x38\x31\x2e\x34\x35\
\x2c\x32\x38\x20\x7a\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x70\x61\x74\
\x68\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x33\
\x34\x36\x35\x61\x34\x3b\x22\x20\x20\x64\x3d\x22\x4d\x20\x35\x36\
\x2e\x34\x33\x2c\x36\x32\x2e\x32\x35\x20\x43\x20\x35\x35\x2e\x30\
\x34\x2c\x36\x30\x2e\x38\x36\x20\x35\x31\x2e\x39\x35\x2c\x36\x30\
\x2e\x38\x39\x20\x35\x30\x2e\x35\x33\x2c\x36\x32\x2e\x32\x35\x20\
\x4c\x20\x39\x2e\x35\x2c\x31\x30\x31\x2e\x36\x33\x20\x43\x20\x35\
\x2e\x37\x36\x2c\x31\x30\x35\x2e\x32\x32\x20\x38\x2e\x36\x38\x2c\
\x31\x30\x38\x2e\x32\x37\x20\x31\x30\x2e\x32\x38\x2c\x31\x30\x39\
\x2e\x38\x38\x20\x4c\x20\x31\x37\x2e\x36\x34\x2c\x31\x31\x37\x2e\
\x32\x34\x20\x43\x20\x31\x39\x2e\x32\x35\x2c\x31\x31\x38\x2e\x38\
\x34\x20\x32\x33\x2e\x35\x2c\x31\x32\x31\x20\x32\x36\x2e\x35\x32\
\x2c\x31\x31\x37\x2e\x38\x20\x4c\x20\x36\x35\x2e\x32\x34\x2c\x37\
\x36\x2e\x39\x39\x20\x43\x20\x36\x36\x2e\x35\x39\x2c\x37\x35\x2e\
\x35\x37\x20\x36\x36\x2e\x36\x2c\x37\x32\x2e\x35\x32\x20\x36\x35\
\x2e\x32\x34\x2c\x37\x31\x2e\x31\x32\x20\x43\x20\x36\x35\x2e\x32\
\x34\x2c\x37\x31\x2e\x31\x32\x20\x36\x35\x2e\x32\x35\x2c\x37\x31\
\x2e\x31\x20\x36\x35\x2e\x32\x34\x2c\x37\x31\x2e\x31\x20\x4c\x20\
\x35\x36\x2e\x34\x33\x2c\x36\x32\x2e\x32\x35\x20\x7a\x22\x2f\x3e\
\x0d\x0a\x09\x09\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\x73\x73\x3d\
\x22\x6c\x6f\x77\x2d\x73\x68\x61\x64\x65\x22\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x6c\x67\x30\
\x35\x29\x3b\x22\x20\x20\x64\x3d\x22\x4d\x20\x31\x30\x2e\x32\x37\
\x2c\x31\x30\x39\x2e\x38\x37\x20\x4c\x20\x31\x37\x2e\x36\x33\x2c\
\x31\x31\x37\x2e\x32\x34\x20\x43\x20\x31\x39\x2e\x32\x34\x2c\x31\
\x31\x38\x2e\x38\x34\x20\x32\x33\x2e\x33\x36\x2c\x31\x32\x31\x2e\
\x31\x33\x20\x32\x36\x2e\x33\x38\x2c\x31\x31\x37\x2e\x39\x35\x20\
\x4c\x20\x36\x35\x2e\x32\x35\x2c\x37\x36\x2e\x39\x38\x20\x43\x20\
\x36\x36\x2e\x36\x2c\x37\x35\x2e\x35\x35\x20\x36\x36\x2e\x36\x34\
\x2c\x37\x32\x2e\x34\x38\x20\x36\x35\x2e\x32\x35\x2c\x37\x31\x2e\
\x31\x20\x4c\x20\x35\x36\x2e\x34\x32\x2c\x36\x32\x2e\x32\x36\x20\
\x4c\x20\x31\x30\x2e\x32\x37\x2c\x31\x30\x39\x2e\x38\x37\x20\x7a\
\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x70\x61\x74\x68\x20\x63\x6c\x61\
\x73\x73\x3d\x22\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\x22\
\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\
\x28\x23\x6c\x67\x30\x32\x29\x3b\x22\x20\x20\x64\x3d\x22\x4d\x20\
\x35\x31\x2e\x32\x2c\x36\x35\x2e\x37\x20\x4c\x20\x31\x32\x2e\x33\
\x32\x2c\x31\x30\x33\x2e\x37\x34\x20\x43\x20\x31\x30\x2e\x37\x2c\
\x31\x30\x35\x2e\x33\x20\x31\x31\x2e\x32\x35\x2c\x31\x30\x37\x2e\
\x34\x39\x20\x31\x32\x2e\x34\x32\x2c\x31\x30\x38\x2e\x36\x33\x20\
\x4c\x20\x31\x36\x2e\x35\x35\x2c\x31\x31\x32\x2e\x36\x20\x4c\x20\
\x35\x38\x2e\x39\x32\x2c\x36\x39\x20\x4c\x20\x35\x35\x2c\x36\x35\
\x2e\x33\x32\x20\x43\x20\x35\x34\x2e\x31\x36\x2c\x36\x34\x2e\x35\
\x32\x20\x35\x32\x2e\x32\x2c\x36\x34\x2e\x37\x35\x20\x35\x31\x2e\
\x32\x2c\x36\x35\x2e\x37\x20\x7a\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\
\x75\x73\x65\x20\x63\x6c\x61\x73\x73\x3d\x22\x73\x74\x72\x6f\x6b\
\x65\x2d\x68\x69\x67\x68\x6c\x69\x67\x68\x74\x22\x20\x78\x6c\x69\
\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6f\x75\x74\x6c\x69\x6e\
\x65\x32\x22\x20\x63\x6c\x69\x70\x2d\x70\x61\x74\x68\x3d\x22\x75\
\x72\x6c\x28\x23\x63\x6c\x69\x70\x6f\x75\x74\x6c\x69\x6e\x65\x32\
\x29\x22\x2f\x3e\x0d\x0a\x09\x09\x3c\x70\x61\x74\x68\x20\x73\x74\
\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x6c\
\x67\x31\x39\x39\x39\x29\x3b\x22\x20\x64\x3d\x22\x4d\x20\x31\x32\
\x30\x2e\x34\x35\x2c\x34\x39\x2e\x32\x36\x20\x43\x20\x31\x32\x31\
\x2e\x39\x36\x2c\x35\x30\x2e\x37\x20\x31\x32\x32\x2e\x32\x35\x2c\
\x35\x32\x2e\x37\x20\x31\x32\x30\x2e\x31\x37\x2c\x35\x34\x2e\x36\
\x32\x20\x4c\x20\x31\x31\x36\x2e\x33\x2c\x35\x38\x2e\x32\x35\x20\
\x43\x20\x31\x31\x34\x2e\x32\x32\x2c\x36\x30\x2e\x32\x20\x31\x30\
\x38\x2e\x37\x38\x2c\x35\x35\x20\x31\x31\x30\x2e\x38\x35\x2c\x35\
\x33\x2e\x30\x36\x20\x4c\x20\x31\x31\x34\x2e\x37\x33\x2c\x34\x39\
\x2e\x34\x33\x20\x43\x20\x31\x31\x36\x2e\x38\x2c\x34\x37\x2e\x34\
\x38\x20\x31\x31\x38\x2e\x39\x34\x2c\x34\x37\x2e\x38\x32\x20\x31\
\x32\x30\x2e\x34\x35\x2c\x34\x39\x2e\x32\x36\x20\x7a\x22\x2f\x3e\
\x0d\x0a\x09\x3c\x2f\x67\x3e\x0d\x0a\x09\x3c\x2f\x67\x3e\x0d\x0a\
\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x2e\xd9\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\
\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\
\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\
\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\
\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x35\x31\x32\x22\x0d\x0a\x20\
\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x35\x31\x32\x22\x0d\x0a\
\x20\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x33\x32\x39\x37\x22\x0d\
\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\
\x3d\x22\x30\x2e\x34\x37\x20\x72\x32\x32\x35\x38\x33\x22\x0d\x0a\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\
\x61\x6d\x65\x3d\x22\x73\x74\x61\x74\x69\x73\x74\x69\x63\x73\x2e\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x6f\x75\x74\x70\x75\x74\x5f\x65\x78\x74\x65\x6e\x73\x69\
\x6f\x6e\x3d\x22\x6f\x72\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x2e\x6f\x75\x74\x70\x75\x74\x2e\x73\x76\x67\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\x20\x76\x65\x72\x73\x69\x6f\
\x6e\x3d\x22\x31\x2e\x31\x22\x3e\x0d\x0a\x20\x20\x3c\x64\x65\x66\
\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x64\x65\x66\x73\
\x33\x32\x39\x39\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\
\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\
\x3d\x22\x30\x20\x3a\x20\x38\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\
\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\x20\x30\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x36\x20\x3a\x20\x38\x20\
\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\
\x69\x67\x69\x6e\x3d\x22\x38\x20\x3a\x20\x35\x2e\x33\x33\x33\x33\
\x33\x33\x33\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\
\x33\x33\x30\x35\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x66\
\x69\x6c\x74\x65\x72\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\
\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x66\x69\x6c\x74\x65\x72\x33\x36\x31\x30\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x6f\x6c\x6f\x72\x2d\x69\x6e\
\x74\x65\x72\x70\x6f\x6c\x61\x74\x69\x6f\x6e\x2d\x66\x69\x6c\x74\
\x65\x72\x73\x3d\x22\x73\x52\x47\x42\x22\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x66\x65\x47\x61\x75\x73\x73\x69\x61\x6e\x42\x6c\
\x75\x72\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\
\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x73\x74\x64\x44\x65\x76\x69\x61\x74\x69\x6f\x6e\x3d\x22\x30\
\x2e\x31\x38\x30\x37\x36\x30\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x66\x65\x47\x61\x75\x73\x73\
\x69\x61\x6e\x42\x6c\x75\x72\x33\x36\x31\x32\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x2f\x66\x69\x6c\x74\x65\x72\x3e\x0d\x0a\
\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0d\x0a\x20\x20\x3c\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\x72\
\x3d\x22\x23\x37\x62\x36\x34\x36\x34\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\
\x36\x36\x36\x36\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\
\x64\x65\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x31\x2e\x30\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\
\x61\x67\x65\x73\x68\x61\x64\x6f\x77\x3d\x22\x32\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x7a\x6f\x6f\
\x6d\x3d\x22\x31\x2e\x30\x30\x37\x38\x31\x32\x35\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x78\x3d\
\x22\x32\x35\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x79\x3d\x22\x32\x35\x30\x2e\x38\x34\x30\
\x33\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\x79\x65\x72\
\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x74\x72\x75\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\
\x72\x69\x64\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x64\
\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\x73\x3d\x22\x70\
\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x73\x6e\x61\x70\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x6f\x62\x6a\x65\x63\x74\x2d\x70\x61\x74\x68\x73\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\x63\x74\x2d\x6e\x6f\x64\x65\
\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x6f\
\x62\x6a\x65\x63\x74\x74\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\
\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x67\x72\x69\x64\x74\x6f\
\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x67\x75\x69\x64\x65\x74\x6f\x6c\x65\x72\x61\x6e\x63\
\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x73\x6e\x61\x70\x2d\x67\x6c\x6f\x62\x61\
\x6c\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x73\x68\x6f\x77\x67\x75\x69\x64\x65\x73\x3d\x22\x74\x72\x75\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x67\x75\x69\x64\x65\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\
\x31\x32\x38\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\x65\x69\x67\
\x68\x74\x3d\x22\x37\x37\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x78\
\x3d\x22\x2d\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\x3d\x22\x2d\
\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\x6d\x69\x7a\
\x65\x64\x3d\x22\x31\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x74\x79\x70\x65\x3d\x22\x78\x79\x67\x72\x69\x64\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x72\
\x69\x64\x33\x33\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x76\x69\x73\x69\x62\x6c\x65\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x65\x6e\x61\x62\x6c\x65\x64\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x65\x6d\
\x70\x73\x70\x61\x63\x69\x6e\x67\x3d\x22\x35\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x73\x6e\x61\x70\x76\x69\x73\x69\x62\x6c\x65\
\x67\x72\x69\x64\x6c\x69\x6e\x65\x73\x6f\x6e\x6c\x79\x3d\x22\x74\
\x72\x75\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x3e\
\x0d\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\
\x33\x33\x30\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\
\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\
\x3a\x57\x6f\x72\x6b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x72\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\x22\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\
\x74\x3e\x69\x6d\x61\x67\x65\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\
\x2f\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x79\x70\x65\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\
\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\
\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x64\x63\x6d\x69\x74\
\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\x61\x67\x65\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\
\x6f\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\
\x52\x44\x46\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\
\x74\x61\x3e\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\
\x3d\x22\x4c\x61\x79\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\
\x6f\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\
\x6e\x73\x6c\x61\x74\x65\x28\x30\x2c\x34\x39\x36\x29\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x67\x33\x36\x37\x32\x22\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\
\x74\x72\x69\x78\x28\x30\x2e\x39\x33\x34\x30\x34\x30\x30\x39\x2c\
\x30\x2c\x30\x2c\x30\x2e\x39\x33\x34\x30\x34\x30\x30\x39\x2c\x31\
\x37\x2e\x32\x34\x35\x34\x32\x35\x2c\x2d\x31\x35\x2e\x36\x39\x36\
\x33\x39\x38\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x64\x3d\x22\x6d\x20\x31\x33\x37\x2e\x39\x30\x36\x32\x35\x2c\x2d\
\x34\x34\x36\x2e\x32\x31\x38\x37\x35\x20\x63\x20\x2d\x32\x33\x2e\
\x38\x35\x31\x31\x31\x2c\x34\x2e\x36\x65\x2d\x34\x20\x2d\x34\x37\
\x2e\x33\x32\x32\x33\x35\x35\x2c\x36\x2e\x31\x32\x39\x30\x34\x20\
\x2d\x36\x37\x2e\x38\x37\x35\x2c\x31\x37\x2e\x39\x36\x38\x37\x35\
\x20\x61\x20\x33\x37\x2e\x37\x32\x32\x32\x35\x31\x2c\x33\x37\x2e\
\x37\x32\x32\x32\x35\x31\x20\x30\x20\x30\x20\x30\x20\x2d\x30\x2e\
\x30\x33\x31\x32\x35\x2c\x30\x20\x63\x20\x2d\x32\x33\x2e\x33\x35\
\x37\x39\x30\x35\x2c\x31\x33\x2e\x34\x35\x36\x36\x33\x20\x2d\x34\
\x30\x2e\x33\x30\x37\x35\x35\x32\x2c\x33\x35\x2e\x39\x30\x34\x37\
\x33\x20\x2d\x35\x30\x2e\x32\x38\x31\x32\x35\x2c\x36\x31\x2e\x36\
\x38\x37\x35\x20\x2d\x39\x2e\x32\x32\x33\x33\x32\x34\x2c\x32\x33\
\x2e\x38\x34\x33\x35\x35\x20\x2d\x31\x34\x2e\x30\x30\x30\x30\x30\
\x39\x39\x2c\x34\x38\x2e\x37\x31\x36\x32\x34\x20\x2d\x31\x34\x2c\
\x37\x33\x2e\x37\x38\x31\x32\x35\x20\x2d\x39\x2e\x37\x65\x2d\x36\
\x2c\x31\x36\x2e\x36\x35\x31\x32\x31\x20\x31\x2e\x39\x39\x35\x30\
\x35\x30\x33\x2c\x33\x33\x2e\x30\x30\x31\x35\x35\x20\x36\x2e\x30\
\x39\x33\x37\x35\x2c\x34\x38\x2e\x37\x38\x31\x32\x35\x20\x34\x2e\
\x34\x37\x35\x38\x39\x2c\x31\x37\x2e\x32\x33\x32\x34\x39\x20\x31\
\x32\x2e\x33\x36\x38\x30\x32\x31\x2c\x33\x33\x2e\x33\x39\x33\x37\
\x20\x32\x33\x2e\x35\x39\x33\x37\x35\x2c\x34\x36\x2e\x39\x33\x37\
\x35\x20\x31\x31\x2e\x34\x30\x31\x32\x31\x39\x2c\x31\x33\x2e\x37\
\x35\x36\x31\x31\x20\x32\x36\x2e\x34\x33\x33\x31\x33\x37\x2c\x32\
\x34\x2e\x36\x30\x38\x31\x34\x20\x34\x33\x2e\x31\x35\x36\x32\x35\
\x2c\x33\x31\x2e\x31\x32\x35\x20\x31\x35\x2e\x36\x32\x34\x33\x32\
\x33\x2c\x36\x2e\x30\x38\x39\x31\x31\x20\x33\x32\x2e\x33\x37\x38\
\x35\x38\x2c\x39\x2e\x30\x33\x31\x34\x31\x20\x34\x39\x2e\x33\x34\
\x33\x37\x35\x2c\x39\x2e\x30\x33\x31\x32\x35\x20\x37\x2e\x37\x36\
\x33\x33\x37\x2c\x35\x65\x2d\x35\x20\x31\x35\x2e\x34\x35\x37\x39\
\x34\x2c\x2d\x30\x2e\x37\x30\x30\x31\x35\x20\x32\x33\x2e\x30\x33\
\x31\x32\x35\x2c\x2d\x31\x2e\x39\x33\x37\x35\x20\x6c\x20\x2d\x33\
\x37\x2e\x36\x32\x35\x2c\x36\x39\x2e\x35\x33\x31\x32\x35\x20\x61\
\x20\x33\x37\x2e\x37\x32\x32\x32\x35\x31\x2c\x33\x37\x2e\x37\x32\
\x32\x32\x35\x31\x20\x30\x20\x30\x20\x30\x20\x33\x33\x2e\x39\x36\
\x38\x37\x35\x2c\x35\x35\x2e\x36\x38\x37\x35\x20\x63\x20\x31\x35\
\x2e\x31\x38\x37\x37\x38\x2c\x2d\x30\x2e\x33\x32\x33\x31\x34\x36\
\x20\x32\x35\x2e\x32\x30\x31\x35\x39\x2c\x2d\x30\x2e\x34\x36\x38\
\x37\x35\x20\x32\x38\x2e\x39\x36\x38\x37\x35\x2c\x2d\x30\x2e\x34\
\x36\x38\x37\x35\x20\x36\x2e\x36\x35\x38\x33\x38\x2c\x30\x20\x31\
\x34\x2e\x37\x39\x31\x38\x38\x2c\x30\x2e\x31\x32\x33\x33\x30\x35\
\x20\x32\x34\x2e\x33\x37\x35\x2c\x30\x2e\x34\x33\x37\x35\x20\x61\
\x20\x33\x37\x2e\x37\x32\x32\x32\x35\x31\x2c\x33\x37\x2e\x37\x32\
\x32\x32\x35\x31\x20\x30\x20\x30\x20\x30\x20\x33\x35\x2e\x30\x39\
\x33\x37\x35\x2c\x2d\x32\x31\x2e\x30\x33\x31\x32\x35\x20\x6c\x20\
\x33\x30\x2e\x30\x39\x33\x37\x35\x2c\x2d\x36\x31\x2e\x31\x32\x35\
\x20\x30\x2e\x30\x39\x33\x37\x2c\x2d\x30\x2e\x32\x31\x38\x37\x35\
\x20\x30\x2e\x33\x34\x33\x37\x35\x2c\x2d\x30\x2e\x36\x35\x36\x32\
\x35\x20\x32\x2e\x30\x39\x33\x37\x35\x2c\x2d\x33\x2e\x39\x33\x37\
\x35\x20\x63\x20\x32\x2e\x34\x30\x30\x37\x36\x2c\x31\x30\x2e\x31\
\x30\x36\x32\x35\x20\x35\x2e\x37\x35\x34\x34\x38\x2c\x31\x39\x2e\
\x37\x34\x35\x30\x35\x20\x31\x30\x2e\x34\x30\x36\x32\x35\x2c\x32\
\x38\x2e\x38\x34\x33\x37\x35\x20\x31\x30\x2e\x32\x33\x36\x38\x34\
\x2c\x32\x30\x2e\x30\x32\x34\x35\x33\x20\x32\x35\x2e\x38\x30\x34\
\x30\x38\x2c\x33\x37\x2e\x32\x33\x37\x37\x37\x31\x20\x34\x35\x2e\
\x35\x33\x31\x32\x35\x2c\x34\x37\x2e\x37\x35\x20\x31\x38\x2e\x35\
\x35\x33\x35\x31\x2c\x39\x2e\x38\x38\x37\x33\x32\x36\x20\x33\x39\
\x2e\x36\x31\x32\x37\x39\x2c\x31\x34\x2e\x33\x31\x32\x34\x39\x35\
\x20\x36\x31\x2e\x31\x38\x37\x35\x2c\x31\x34\x2e\x33\x31\x32\x35\
\x20\x31\x38\x2e\x33\x39\x37\x30\x38\x2c\x2d\x35\x65\x2d\x36\x20\
\x33\x36\x2e\x34\x38\x33\x38\x32\x2c\x2d\x33\x2e\x31\x38\x30\x32\
\x35\x34\x20\x35\x33\x2e\x33\x31\x32\x35\x2c\x2d\x39\x2e\x38\x34\
\x33\x37\x35\x20\x31\x38\x2e\x38\x32\x33\x32\x2c\x2d\x37\x2e\x34\
\x35\x33\x37\x31\x35\x20\x33\x35\x2e\x31\x36\x36\x34\x2c\x2d\x32\
\x30\x2e\x35\x35\x39\x33\x39\x20\x34\x37\x2e\x31\x38\x37\x35\x2c\
\x2d\x33\x36\x2e\x37\x38\x31\x32\x35\x20\x31\x31\x2e\x35\x33\x36\
\x33\x2c\x2d\x31\x35\x2e\x35\x36\x39\x31\x35\x33\x20\x31\x39\x2e\
\x36\x36\x36\x34\x33\x2c\x2d\x33\x33\x2e\x35\x39\x34\x37\x32\x20\
\x32\x34\x2e\x34\x36\x38\x37\x35\x2c\x2d\x35\x32\x2e\x39\x30\x36\
\x32\x35\x20\x34\x2e\x34\x36\x30\x39\x39\x2c\x2d\x31\x37\x2e\x39\
\x34\x32\x39\x34\x20\x36\x2e\x37\x34\x39\x34\x36\x2c\x2d\x33\x36\
\x2e\x32\x33\x33\x38\x31\x20\x36\x2e\x37\x35\x2c\x2d\x35\x34\x2e\
\x36\x32\x35\x20\x2d\x35\x2e\x33\x65\x2d\x34\x2c\x2d\x32\x36\x2e\
\x38\x36\x37\x38\x39\x20\x2d\x34\x2e\x34\x32\x35\x37\x31\x2c\x2d\
\x35\x31\x2e\x36\x35\x39\x36\x37\x20\x2d\x31\x35\x2e\x37\x31\x38\
\x37\x35\x2c\x2d\x37\x33\x2e\x34\x30\x36\x32\x35\x20\x2d\x31\x30\
\x2e\x34\x35\x39\x36\x2c\x2d\x32\x30\x2e\x31\x33\x38\x39\x31\x20\
\x2d\x32\x36\x2e\x31\x36\x37\x34\x38\x2c\x2d\x33\x37\x2e\x34\x39\
\x30\x33\x20\x2d\x34\x36\x2e\x32\x38\x31\x32\x35\x2c\x2d\x34\x37\
\x2e\x38\x31\x32\x35\x20\x2d\x31\x38\x2e\x32\x37\x30\x30\x32\x2c\
\x2d\x39\x2e\x33\x37\x34\x38\x20\x2d\x33\x38\x2e\x38\x35\x36\x36\
\x2c\x2d\x31\x33\x2e\x36\x38\x37\x32\x33\x20\x2d\x35\x39\x2e\x39\
\x33\x37\x35\x2c\x2d\x31\x33\x2e\x36\x38\x37\x35\x20\x2d\x37\x2e\
\x39\x36\x30\x34\x2c\x39\x65\x2d\x35\x20\x2d\x31\x35\x2e\x38\x36\
\x33\x32\x38\x2c\x30\x2e\x37\x31\x32\x34\x20\x2d\x32\x33\x2e\x36\
\x32\x35\x2c\x32\x2e\x30\x33\x31\x32\x35\x20\x6c\x20\x33\x37\x2e\
\x37\x35\x2c\x2d\x36\x39\x2e\x39\x33\x37\x35\x20\x61\x20\x33\x37\
\x2e\x37\x32\x32\x32\x35\x31\x2c\x33\x37\x2e\x37\x32\x32\x32\x35\
\x31\x20\x30\x20\x30\x20\x30\x20\x2d\x33\x34\x2e\x33\x31\x32\x35\
\x2c\x2d\x35\x35\x2e\x35\x39\x33\x37\x35\x20\x63\x20\x2d\x31\x30\
\x2e\x37\x30\x33\x38\x38\x2c\x30\x2e\x33\x31\x39\x38\x34\x20\x2d\
\x31\x39\x2e\x32\x30\x35\x2c\x30\x2e\x34\x36\x39\x30\x35\x20\x2d\
\x32\x35\x2e\x32\x31\x38\x37\x35\x2c\x30\x2e\x34\x36\x38\x37\x35\
\x20\x2d\x37\x2e\x32\x35\x30\x30\x34\x2c\x33\x2e\x31\x65\x2d\x34\
\x20\x2d\x31\x35\x2e\x39\x36\x31\x36\x2c\x2d\x30\x2e\x31\x35\x31\
\x37\x32\x20\x2d\x32\x35\x2e\x39\x33\x37\x35\x2c\x2d\x30\x2e\x34\
\x36\x38\x37\x35\x20\x61\x20\x33\x37\x2e\x37\x32\x32\x32\x35\x31\
\x2c\x33\x37\x2e\x37\x32\x32\x32\x35\x31\x20\x30\x20\x30\x20\x30\
\x20\x2d\x33\x34\x2e\x36\x32\x35\x2c\x32\x30\x2e\x32\x35\x20\x4c\
\x20\x32\x35\x34\x2e\x30\x36\x32\x35\x2c\x2d\x33\x35\x34\x2e\x35\
\x20\x63\x20\x2d\x32\x2e\x31\x32\x33\x39\x34\x2c\x2d\x38\x2e\x36\
\x36\x31\x30\x32\x20\x2d\x34\x2e\x39\x32\x39\x32\x32\x2c\x2d\x31\
\x37\x2e\x30\x32\x39\x30\x32\x20\x2d\x38\x2e\x35\x36\x32\x35\x2c\
\x2d\x32\x35\x2e\x30\x33\x31\x32\x35\x20\x2d\x39\x2e\x35\x36\x30\
\x39\x31\x2c\x2d\x32\x31\x2e\x30\x35\x35\x38\x31\x20\x2d\x32\x35\
\x2e\x32\x30\x33\x30\x35\x2c\x2d\x33\x39\x2e\x33\x34\x38\x30\x31\
\x20\x2d\x34\x35\x2e\x32\x31\x38\x37\x35\x2c\x2d\x35\x30\x2e\x37\
\x35\x20\x2d\x31\x38\x2e\x38\x30\x30\x35\x31\x2c\x2d\x31\x30\x2e\
\x37\x30\x38\x35\x34\x20\x2d\x34\x30\x2e\x34\x32\x30\x36\x31\x2c\
\x2d\x31\x35\x2e\x39\x33\x37\x30\x34\x20\x2d\x36\x32\x2e\x33\x37\
\x35\x2c\x2d\x31\x35\x2e\x39\x33\x37\x35\x20\x7a\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\x68\
\x33\x36\x34\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\
\x3a\x35\x30\x30\x70\x78\x3b\x66\x6f\x6e\x74\x2d\x73\x74\x79\x6c\
\x65\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x76\x61\
\x72\x69\x61\x6e\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\
\x74\x2d\x77\x65\x69\x67\x68\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\
\x66\x6f\x6e\x74\x2d\x73\x74\x72\x65\x74\x63\x68\x3a\x6e\x6f\x72\
\x6d\x61\x6c\x3b\x74\x65\x78\x74\x2d\x61\x6c\x69\x67\x6e\x3a\x73\
\x74\x61\x72\x74\x3b\x6c\x69\x6e\x65\x2d\x68\x65\x69\x67\x68\x74\
\x3a\x31\x32\x35\x25\x3b\x77\x72\x69\x74\x69\x6e\x67\x2d\x6d\x6f\
\x64\x65\x3a\x6c\x72\x2d\x74\x62\x3b\x74\x65\x78\x74\x2d\x61\x6e\
\x63\x68\x6f\x72\x3a\x73\x74\x61\x72\x74\x3b\x66\x69\x6c\x6c\x3a\
\x23\x66\x66\x66\x66\x66\x66\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\
\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\
\x6e\x65\x3b\x66\x6f\x6e\x74\x2d\x66\x61\x6d\x69\x6c\x79\x3a\x45\
\x72\x61\x73\x20\x42\x6f\x6c\x64\x20\x49\x54\x43\x3b\x2d\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2d\x66\x6f\x6e\x74\x2d\x73\x70\x65\x63\
\x69\x66\x69\x63\x61\x74\x69\x6f\x6e\x3a\x45\x72\x61\x73\x20\x42\
\x6f\x6c\x64\x20\x49\x54\x43\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x72\x69\x67\
\x69\x6e\x61\x6c\x3d\x22\x4d\x20\x31\x33\x37\x2e\x39\x30\x36\x32\
\x35\x20\x2d\x34\x30\x38\x2e\x35\x20\x43\x20\x31\x32\x30\x2e\x31\
\x36\x35\x32\x38\x20\x2d\x34\x30\x38\x2e\x34\x39\x39\x36\x36\x20\
\x31\x30\x33\x2e\x38\x31\x37\x36\x34\x20\x2d\x34\x30\x34\x2e\x31\
\x38\x38\x34\x37\x20\x38\x38\x2e\x38\x34\x33\x37\x35\x20\x2d\x33\
\x39\x35\x2e\x35\x36\x32\x35\x20\x43\x20\x37\x33\x2e\x38\x36\x39\
\x37\x35\x33\x20\x2d\x33\x38\x36\x2e\x39\x33\x35\x38\x39\x20\x36\
\x32\x2e\x35\x35\x35\x39\x36\x32\x20\x2d\x33\x37\x32\x2e\x37\x34\
\x33\x38\x34\x20\x35\x34\x2e\x39\x30\x36\x32\x35\x20\x2d\x33\x35\
\x32\x2e\x39\x36\x38\x37\x35\x20\x43\x20\x34\x37\x2e\x32\x35\x36\
\x34\x39\x38\x20\x2d\x33\x33\x33\x2e\x31\x39\x33\x31\x20\x34\x33\
\x2e\x34\x33\x37\x34\x39\x32\x20\x2d\x33\x31\x33\x2e\x31\x32\x36\
\x30\x36\x20\x34\x33\x2e\x34\x33\x37\x35\x20\x2d\x32\x39\x32\x2e\
\x37\x38\x31\x32\x35\x20\x43\x20\x34\x33\x2e\x34\x33\x37\x34\x39\
\x32\x20\x2d\x32\x37\x39\x2e\x31\x30\x39\x31\x37\x20\x34\x35\x2e\
\x30\x35\x37\x32\x38\x31\x20\x2d\x32\x36\x36\x2e\x30\x30\x31\x31\
\x31\x20\x34\x38\x2e\x33\x31\x32\x35\x20\x2d\x32\x35\x33\x2e\x34\
\x36\x38\x37\x35\x20\x43\x20\x35\x31\x2e\x35\x36\x37\x36\x39\x32\
\x20\x2d\x32\x34\x30\x2e\x39\x33\x36\x30\x33\x20\x35\x36\x2e\x39\
\x35\x30\x34\x39\x39\x20\x2d\x32\x33\x30\x2e\x31\x35\x38\x30\x34\
\x20\x36\x34\x2e\x34\x33\x37\x35\x20\x2d\x32\x32\x31\x2e\x31\x32\
\x35\x20\x43\x20\x37\x31\x2e\x39\x32\x34\x34\x34\x32\x20\x2d\x32\
\x31\x32\x2e\x30\x39\x31\x36\x35\x20\x38\x31\x2e\x31\x38\x32\x32\
\x34\x36\x20\x2d\x32\x30\x35\x2e\x34\x30\x36\x37\x36\x20\x39\x32\
\x2e\x32\x35\x20\x2d\x32\x30\x31\x2e\x30\x39\x33\x37\x35\x20\x43\
\x20\x31\x30\x33\x2e\x33\x31\x37\x36\x34\x20\x2d\x31\x39\x36\x2e\
\x37\x38\x30\x34\x37\x20\x31\x31\x35\x2e\x32\x31\x30\x38\x36\x20\
\x2d\x31\x39\x34\x2e\x36\x32\x34\x38\x38\x20\x31\x32\x37\x2e\x39\
\x30\x36\x32\x35\x20\x2d\x31\x39\x34\x2e\x36\x32\x35\x20\x43\x20\
\x31\x34\x36\x2e\x31\x33\x35\x33\x20\x2d\x31\x39\x34\x2e\x36\x32\
\x34\x38\x38\x20\x31\x36\x32\x2e\x33\x39\x35\x37\x31\x20\x2d\x31\
\x39\x38\x2e\x38\x34\x38\x38\x33\x20\x31\x37\x36\x2e\x37\x31\x38\
\x37\x35\x20\x2d\x32\x30\x37\x2e\x33\x31\x32\x35\x20\x43\x20\x31\
\x39\x31\x2e\x30\x34\x31\x35\x31\x20\x2d\x32\x31\x35\x2e\x37\x37\
\x35\x39\x20\x32\x30\x32\x2e\x30\x38\x31\x32\x31\x20\x2d\x32\x32\
\x39\x2e\x32\x38\x38\x39\x31\x20\x32\x30\x39\x2e\x38\x31\x32\x35\
\x20\x2d\x32\x34\x37\x2e\x38\x34\x33\x37\x35\x20\x43\x20\x32\x31\
\x37\x2e\x35\x34\x33\x34\x34\x20\x2d\x32\x36\x36\x2e\x33\x39\x38\
\x32\x35\x20\x32\x32\x31\x2e\x34\x30\x36\x30\x36\x20\x2d\x32\x38\
\x37\x2e\x30\x38\x38\x33\x33\x20\x32\x32\x31\x2e\x34\x30\x36\x32\
\x35\x20\x2d\x33\x30\x39\x2e\x38\x37\x35\x20\x43\x20\x32\x32\x31\
\x2e\x34\x30\x36\x30\x36\x20\x2d\x33\x33\x30\x2e\x38\x37\x30\x38\
\x34\x20\x32\x31\x37\x2e\x39\x39\x32\x30\x31\x20\x2d\x33\x34\x38\
\x2e\x38\x38\x31\x38\x39\x20\x32\x31\x31\x2e\x31\x35\x36\x32\x35\
\x20\x2d\x33\x36\x33\x2e\x39\x33\x37\x35\x20\x43\x20\x32\x30\x34\
\x2e\x33\x32\x30\x31\x34\x20\x2d\x33\x37\x38\x2e\x39\x39\x32\x35\
\x33\x20\x31\x39\x34\x2e\x34\x38\x32\x39\x31\x20\x2d\x33\x39\x30\
\x2e\x31\x37\x35\x34\x36\x20\x31\x38\x31\x2e\x36\x32\x35\x20\x2d\
\x33\x39\x37\x2e\x35\x20\x43\x20\x31\x36\x38\x2e\x37\x36\x36\x37\
\x39\x20\x2d\x34\x30\x34\x2e\x38\x32\x33\x38\x38\x20\x31\x35\x34\
\x2e\x31\x38\x32\x31\x38\x20\x2d\x34\x30\x38\x2e\x34\x39\x39\x36\
\x36\x20\x31\x33\x37\x2e\x39\x30\x36\x32\x35\x20\x2d\x34\x30\x38\
\x2e\x35\x20\x7a\x20\x4d\x20\x33\x32\x32\x2e\x37\x31\x38\x37\x35\
\x20\x2d\x34\x30\x34\x2e\x35\x39\x33\x37\x35\x20\x4c\x20\x32\x31\
\x35\x2e\x33\x31\x32\x35\x20\x2d\x31\x39\x38\x2e\x35\x33\x31\x32\
\x35\x20\x4c\x20\x31\x34\x36\x2e\x34\x36\x38\x37\x35\x20\x2d\x37\
\x31\x2e\x33\x34\x33\x37\x35\x20\x43\x20\x31\x36\x31\x2e\x37\x36\
\x38\x31\x20\x2d\x37\x31\x2e\x36\x36\x39\x32\x37\x20\x31\x37\x31\
\x2e\x36\x39\x32\x35\x37\x20\x2d\x37\x31\x2e\x38\x31\x32\x35\x20\
\x31\x37\x36\x2e\x32\x35\x20\x2d\x37\x31\x2e\x38\x31\x32\x35\x20\
\x43\x20\x31\x38\x33\x2e\x34\x31\x31\x33\x31\x20\x2d\x37\x31\x2e\
\x38\x31\x32\x35\x20\x31\x39\x31\x2e\x39\x34\x36\x34\x36\x20\x2d\
\x37\x31\x2e\x36\x36\x39\x32\x37\x20\x32\x30\x31\x2e\x38\x37\x35\
\x20\x2d\x37\x31\x2e\x33\x34\x33\x37\x35\x20\x4c\x20\x32\x33\x32\
\x2e\x34\x30\x36\x32\x35\x20\x2d\x31\x33\x33\x2e\x33\x34\x33\x37\
\x35\x20\x4c\x20\x33\x32\x32\x2e\x39\x36\x38\x37\x35\x20\x2d\x33\
\x30\x35\x2e\x39\x36\x38\x37\x35\x20\x4c\x20\x33\x37\x36\x2e\x31\
\x38\x37\x35\x20\x2d\x34\x30\x34\x2e\x35\x39\x33\x37\x35\x20\x43\
\x20\x33\x36\x35\x2e\x32\x38\x32\x32\x33\x20\x2d\x34\x30\x34\x2e\
\x32\x36\x37\x38\x39\x20\x33\x35\x36\x2e\x35\x31\x36\x36\x20\x2d\
\x34\x30\x34\x2e\x30\x39\x33\x34\x32\x20\x33\x34\x39\x2e\x38\x34\
\x33\x37\x35\x20\x2d\x34\x30\x34\x2e\x30\x39\x33\x37\x35\x20\x43\
\x20\x33\x34\x32\x2e\x30\x33\x30\x39\x34\x20\x2d\x34\x30\x34\x2e\
\x30\x39\x33\x34\x32\x20\x33\x33\x32\x2e\x39\x37\x32\x33\x36\x20\
\x2d\x34\x30\x34\x2e\x32\x36\x37\x38\x39\x20\x33\x32\x32\x2e\x37\
\x31\x38\x37\x35\x20\x2d\x34\x30\x34\x2e\x35\x39\x33\x37\x35\x20\
\x7a\x20\x4d\x20\x31\x33\x35\x2e\x34\x36\x38\x37\x35\x20\x2d\x33\
\x36\x32\x2e\x31\x32\x35\x20\x43\x20\x31\x34\x32\x2e\x36\x33\x30\
\x31\x20\x2d\x33\x36\x32\x2e\x31\x32\x34\x37\x31\x20\x31\x34\x38\
\x2e\x36\x34\x38\x33\x33\x20\x2d\x33\x35\x37\x2e\x37\x38\x32\x32\
\x37\x20\x31\x35\x33\x2e\x35\x33\x31\x32\x35\x20\x2d\x33\x34\x39\
\x2e\x31\x35\x36\x32\x35\x20\x43\x20\x31\x35\x38\x2e\x34\x31\x33\
\x39\x34\x20\x2d\x33\x34\x30\x2e\x35\x32\x39\x36\x38\x20\x31\x36\
\x30\x2e\x38\x37\x34\x38\x38\x20\x2d\x33\x32\x38\x2e\x30\x38\x38\
\x32\x38\x20\x31\x36\x30\x2e\x38\x37\x35\x20\x2d\x33\x31\x31\x2e\
\x38\x31\x32\x35\x20\x43\x20\x31\x36\x30\x2e\x38\x37\x34\x38\x38\
\x20\x2d\x32\x39\x32\x2e\x36\x30\x36\x35\x35\x20\x31\x35\x38\x2e\
\x30\x30\x38\x39\x39\x20\x2d\x32\x37\x35\x2e\x38\x39\x37\x35\x38\
\x20\x31\x35\x32\x2e\x33\x31\x32\x35\x20\x2d\x32\x36\x31\x2e\x36\
\x35\x36\x32\x35\x20\x43\x20\x31\x34\x36\x2e\x36\x31\x35\x37\x37\
\x20\x2d\x32\x34\x37\x2e\x34\x31\x34\x35\x34\x20\x31\x33\x38\x2e\
\x38\x39\x30\x35\x32\x20\x2d\x32\x34\x30\x2e\x32\x38\x31\x30\x38\
\x20\x31\x32\x39\x2e\x31\x32\x35\x20\x2d\x32\x34\x30\x2e\x32\x38\
\x31\x32\x35\x20\x43\x20\x31\x32\x31\x2e\x34\x37\x35\x31\x38\x20\
\x2d\x32\x34\x30\x2e\x32\x38\x31\x30\x38\x20\x31\x31\x35\x2e\x33\
\x36\x39\x37\x32\x20\x2d\x32\x34\x34\x2e\x34\x36\x31\x34\x31\x20\
\x31\x31\x30\x2e\x38\x31\x32\x35\x20\x2d\x32\x35\x32\x2e\x38\x34\
\x33\x37\x35\x20\x43\x20\x31\x30\x36\x2e\x32\x35\x35\x31\x34\x20\
\x2d\x32\x36\x31\x2e\x32\x32\x35\x37\x32\x20\x31\x30\x33\x2e\x39\
\x36\x38\x36\x38\x20\x2d\x32\x37\x33\x2e\x39\x37\x32\x34\x35\x20\
\x31\x30\x33\x2e\x39\x36\x38\x37\x35\x20\x2d\x32\x39\x31\x2e\x30\
\x36\x32\x35\x20\x43\x20\x31\x30\x33\x2e\x39\x36\x38\x36\x38\x20\
\x2d\x33\x30\x32\x2e\x37\x38\x31\x30\x31\x20\x31\x30\x35\x2e\x32\
\x37\x30\x37\x36\x20\x2d\x33\x31\x34\x2e\x35\x38\x36\x39\x39\x20\
\x31\x30\x37\x2e\x38\x37\x35\x20\x2d\x33\x32\x36\x2e\x34\x36\x38\
\x37\x35\x20\x43\x20\x31\x31\x30\x2e\x34\x37\x39\x30\x39\x20\x2d\
\x33\x33\x38\x2e\x33\x34\x39\x39\x39\x20\x31\x31\x34\x2e\x32\x34\
\x32\x31\x20\x2d\x33\x34\x37\x2e\x32\x34\x36\x34\x37\x20\x31\x31\
\x39\x2e\x31\x32\x35\x20\x2d\x33\x35\x33\x2e\x31\x38\x37\x35\x20\
\x43\x20\x31\x32\x34\x2e\x30\x30\x37\x37\x32\x20\x2d\x33\x35\x39\
\x2e\x31\x32\x37\x39\x37\x20\x31\x32\x39\x2e\x34\x34\x36\x35\x32\
\x20\x2d\x33\x36\x32\x2e\x31\x32\x34\x37\x31\x20\x31\x33\x35\x2e\
\x34\x36\x38\x37\x35\x20\x2d\x33\x36\x32\x2e\x31\x32\x35\x20\x7a\
\x20\x4d\x20\x33\x39\x35\x2e\x32\x35\x20\x2d\x32\x38\x31\x2e\x30\
\x36\x32\x35\x20\x43\x20\x33\x37\x37\x2e\x33\x34\x36\x30\x31\x20\
\x2d\x32\x38\x31\x2e\x30\x36\x32\x32\x39\x20\x33\x36\x31\x2e\x31\
\x34\x31\x36\x20\x2d\x32\x37\x36\x2e\x38\x35\x30\x37\x20\x33\x34\
\x36\x2e\x36\x35\x36\x32\x35\x20\x2d\x32\x36\x38\x2e\x34\x36\x38\
\x37\x35\x20\x43\x20\x33\x33\x32\x2e\x31\x37\x30\x32\x37\x20\x2d\
\x32\x36\x30\x2e\x30\x38\x36\x34\x20\x33\x32\x30\x2e\x39\x38\x37\
\x33\x35\x20\x2d\x32\x34\x36\x2e\x31\x36\x38\x34\x35\x20\x33\x31\
\x33\x2e\x30\x39\x33\x37\x35\x20\x2d\x32\x32\x36\x2e\x37\x31\x38\
\x37\x35\x20\x43\x20\x33\x30\x35\x2e\x31\x39\x39\x36\x20\x2d\x32\
\x30\x37\x2e\x32\x36\x38\x37\x34\x20\x33\x30\x31\x2e\x32\x34\x39\
\x37\x34\x20\x2d\x31\x38\x37\x2e\x31\x34\x35\x37\x31\x20\x33\x30\
\x31\x2e\x32\x35\x20\x2d\x31\x36\x36\x2e\x33\x31\x32\x35\x20\x43\
\x20\x33\x30\x31\x2e\x32\x34\x39\x37\x34\x20\x2d\x31\x34\x32\x2e\
\x35\x34\x39\x34\x20\x33\x30\x34\x2e\x39\x33\x37\x38\x38\x20\x2d\
\x31\x32\x33\x2e\x34\x32\x33\x31\x32\x20\x33\x31\x32\x2e\x33\x34\
\x33\x37\x35\x20\x2d\x31\x30\x38\x2e\x39\x33\x37\x35\x20\x43\x20\
\x33\x31\x39\x2e\x37\x34\x39\x30\x36\x20\x2d\x39\x34\x2e\x34\x35\
\x31\x37\x39\x39\x20\x33\x32\x39\x2e\x36\x36\x31\x31\x36\x20\x2d\
\x38\x33\x2e\x39\x30\x34\x32\x38\x34\x20\x33\x34\x32\x2e\x30\x33\
\x31\x32\x35\x20\x2d\x37\x37\x2e\x33\x31\x32\x35\x20\x43\x20\x33\
\x35\x34\x2e\x34\x30\x30\x37\x32\x20\x2d\x37\x30\x2e\x37\x32\x30\
\x37\x30\x34\x20\x33\x36\x38\x2e\x38\x36\x36\x38\x35\x20\x2d\x36\
\x37\x2e\x34\x33\x37\x35\x30\x34\x20\x33\x38\x35\x2e\x34\x36\x38\
\x37\x35\x20\x2d\x36\x37\x2e\x34\x33\x37\x35\x20\x43\x20\x33\x39\
\x39\x2e\x36\x32\x38\x35\x34\x20\x2d\x36\x37\x2e\x34\x33\x37\x35\
\x30\x34\x20\x34\x31\x32\x2e\x37\x38\x30\x32\x32\x20\x2d\x36\x39\
\x2e\x38\x32\x33\x35\x36\x39\x20\x34\x32\x34\x2e\x39\x30\x36\x32\
\x35\x20\x2d\x37\x34\x2e\x36\x32\x35\x20\x43\x20\x34\x33\x37\x2e\
\x30\x33\x31\x35\x20\x2d\x37\x39\x2e\x34\x32\x36\x34\x32\x34\x20\
\x34\x34\x37\x2e\x32\x37\x33\x36\x37\x20\x2d\x38\x37\x2e\x35\x30\
\x30\x36\x33\x35\x20\x34\x35\x35\x2e\x36\x35\x36\x32\x35\x20\x2d\
\x39\x38\x2e\x38\x31\x32\x35\x20\x43\x20\x34\x36\x34\x2e\x30\x33\
\x37\x39\x38\x20\x2d\x31\x31\x30\x2e\x31\x32\x34\x33\x31\x20\x34\
\x37\x30\x2e\x30\x39\x39\x38\x33\x20\x2d\x31\x32\x33\x2e\x32\x38\
\x38\x33\x36\x20\x34\x37\x33\x2e\x38\x34\x33\x37\x35\x20\x2d\x31\
\x33\x38\x2e\x33\x34\x33\x37\x35\x20\x43\x20\x34\x37\x37\x2e\x35\
\x38\x36\x38\x20\x2d\x31\x35\x33\x2e\x33\x39\x39\x30\x31\x20\x34\
\x37\x39\x2e\x34\x36\x38\x33\x20\x2d\x31\x36\x38\x2e\x35\x37\x35\
\x34\x32\x20\x34\x37\x39\x2e\x34\x36\x38\x37\x35\x20\x2d\x31\x38\
\x33\x2e\x38\x37\x35\x20\x43\x20\x34\x37\x39\x2e\x34\x36\x38\x33\
\x20\x2d\x32\x30\x36\x2e\x34\x39\x38\x35\x36\x20\x34\x37\x35\x2e\
\x36\x34\x39\x33\x20\x2d\x32\x32\x35\x2e\x31\x37\x36\x32\x38\x20\
\x34\x36\x38\x20\x2d\x32\x33\x39\x2e\x39\x30\x36\x32\x35\x20\x43\
\x20\x34\x36\x30\x2e\x33\x34\x39\x38\x33\x20\x2d\x32\x35\x34\x2e\
\x36\x33\x35\x38\x39\x20\x34\x35\x30\x2e\x33\x33\x38\x31\x33\x20\
\x2d\x32\x36\x35\x2e\x31\x38\x33\x34\x20\x34\x33\x37\x2e\x39\x36\
\x38\x37\x35\x20\x2d\x32\x37\x31\x2e\x35\x33\x31\x32\x35\x20\x43\
\x20\x34\x32\x35\x2e\x35\x39\x38\x35\x37\x20\x2d\x32\x37\x37\x2e\
\x38\x37\x38\x37\x20\x34\x31\x31\x2e\x33\x36\x32\x39\x31\x20\x2d\
\x32\x38\x31\x2e\x30\x36\x32\x32\x39\x20\x33\x39\x35\x2e\x32\x35\
\x20\x2d\x32\x38\x31\x2e\x30\x36\x32\x35\x20\x7a\x20\x4d\x20\x33\
\x39\x33\x2e\x32\x38\x31\x32\x35\x20\x2d\x32\x33\x34\x2e\x34\x33\
\x37\x35\x20\x43\x20\x34\x30\x31\x2e\x34\x31\x38\x39\x20\x2d\x32\
\x33\x34\x2e\x34\x33\x37\x33\x34\x20\x34\x30\x37\x2e\x36\x39\x38\
\x38\x34\x20\x2d\x32\x33\x30\x2e\x30\x33\x38\x39\x20\x34\x31\x32\
\x2e\x30\x39\x33\x37\x35\x20\x2d\x32\x32\x31\x2e\x32\x35\x20\x43\
\x20\x34\x31\x36\x2e\x34\x38\x37\x39\x20\x2d\x32\x31\x32\x2e\x34\
\x36\x30\x37\x39\x20\x34\x31\x38\x2e\x36\x38\x37\x31\x32\x20\x2d\
\x32\x30\x30\x2e\x30\x37\x35\x33\x39\x20\x34\x31\x38\x2e\x36\x38\
\x37\x35\x20\x2d\x31\x38\x34\x2e\x31\x32\x35\x20\x43\x20\x34\x31\
\x38\x2e\x36\x38\x37\x31\x32\x20\x2d\x31\x37\x35\x2e\x36\x36\x31\
\x33\x36\x20\x34\x31\x38\x2e\x31\x30\x37\x36\x39\x20\x2d\x31\x36\
\x37\x2e\x37\x31\x38\x20\x34\x31\x36\x2e\x39\x36\x38\x37\x35\x20\
\x2d\x31\x36\x30\x2e\x33\x31\x32\x35\x20\x43\x20\x34\x31\x35\x2e\
\x38\x32\x39\x30\x34\x20\x2d\x31\x35\x32\x2e\x39\x30\x36\x38\x32\
\x20\x34\x31\x34\x2e\x31\x32\x32\x30\x31\x20\x2d\x31\x34\x35\x2e\
\x37\x36\x30\x39\x39\x20\x34\x31\x31\x2e\x38\x34\x33\x37\x35\x20\
\x2d\x31\x33\x38\x2e\x38\x34\x33\x37\x35\x20\x43\x20\x34\x30\x39\
\x2e\x35\x36\x34\x37\x33\x20\x2d\x31\x33\x31\x2e\x39\x32\x36\x33\
\x37\x20\x34\x30\x37\x2e\x30\x30\x34\x31\x38\x20\x2d\x31\x32\x36\
\x2e\x35\x34\x33\x35\x37\x20\x34\x30\x34\x2e\x31\x35\x36\x32\x35\
\x20\x2d\x31\x32\x32\x2e\x37\x31\x38\x37\x35\x20\x43\x20\x34\x30\
\x31\x2e\x33\x30\x37\x35\x37\x20\x2d\x31\x31\x38\x2e\x38\x39\x33\
\x38\x34\x20\x33\x39\x38\x2e\x35\x37\x32\x35\x36\x20\x2d\x31\x31\
\x36\x2e\x33\x33\x33\x32\x39\x20\x33\x39\x35\x2e\x39\x36\x38\x37\
\x35\x20\x2d\x31\x31\x35\x2e\x30\x33\x31\x32\x35\x20\x43\x20\x33\
\x39\x33\x2e\x33\x36\x34\x32\x33\x20\x2d\x31\x31\x33\x2e\x37\x32\
\x39\x31\x33\x20\x33\x39\x30\x2e\x35\x38\x35\x35\x39\x20\x2d\x31\
\x31\x33\x2e\x30\x39\x33\x37\x31\x20\x33\x38\x37\x2e\x36\x35\x36\
\x32\x35\x20\x2d\x31\x31\x33\x2e\x30\x39\x33\x37\x35\x20\x43\x20\
\x33\x38\x33\x2e\x32\x36\x31\x33\x37\x20\x2d\x31\x31\x33\x2e\x30\
\x39\x33\x37\x31\x20\x33\x37\x39\x2e\x34\x34\x32\x33\x37\x20\x2d\
\x31\x31\x34\x2e\x33\x35\x32\x31\x37\x20\x33\x37\x36\x2e\x31\x38\
\x37\x35\x20\x2d\x31\x31\x36\x2e\x38\x37\x35\x20\x43\x20\x33\x37\
\x32\x2e\x39\x33\x31\x39\x36\x20\x2d\x31\x31\x39\x2e\x33\x39\x37\
\x37\x34\x20\x33\x37\x30\x2e\x32\x38\x34\x31\x37\x20\x2d\x31\x32\
\x32\x2e\x37\x36\x38\x31\x37\x20\x33\x36\x38\x2e\x32\x35\x20\x2d\
\x31\x32\x37\x20\x43\x20\x33\x36\x36\x2e\x32\x31\x35\x31\x37\x20\
\x2d\x31\x33\x31\x2e\x32\x33\x31\x37\x31\x20\x33\x36\x34\x2e\x37\
\x32\x36\x32\x34\x20\x2d\x31\x33\x36\x2e\x31\x32\x32\x33\x33\x20\
\x33\x36\x33\x2e\x37\x35\x20\x2d\x31\x34\x31\x2e\x36\x35\x36\x32\
\x35\x20\x43\x20\x33\x36\x32\x2e\x37\x37\x33\x31\x31\x20\x2d\x31\
\x34\x37\x2e\x31\x39\x30\x30\x33\x20\x33\x36\x32\x2e\x32\x38\x30\
\x39\x32\x20\x2d\x31\x35\x34\x2e\x36\x38\x34\x38\x31\x20\x33\x36\
\x32\x2e\x32\x38\x31\x32\x35\x20\x2d\x31\x36\x34\x2e\x31\x32\x35\
\x20\x43\x20\x33\x36\x32\x2e\x32\x38\x30\x39\x32\x20\x2d\x31\x37\
\x36\x2e\x34\x39\x34\x36\x39\x20\x33\x36\x33\x2e\x34\x39\x35\x37\
\x36\x20\x2d\x31\x38\x38\x2e\x32\x31\x33\x34\x33\x20\x33\x36\x35\
\x2e\x39\x33\x37\x35\x20\x2d\x31\x39\x39\x2e\x32\x38\x31\x32\x35\
\x20\x43\x20\x33\x36\x38\x2e\x33\x37\x38\x35\x37\x20\x2d\x32\x31\
\x30\x2e\x33\x34\x38\x38\x32\x20\x33\x37\x31\x2e\x39\x32\x33\x35\
\x20\x2d\x32\x31\x38\x2e\x39\x37\x31\x32\x20\x33\x37\x36\x2e\x35\
\x36\x32\x35\x20\x2d\x32\x32\x35\x2e\x31\x35\x36\x32\x35\x20\x43\
\x20\x33\x38\x31\x2e\x32\x30\x30\x38\x33\x20\x2d\x32\x33\x31\x2e\
\x33\x34\x30\x39\x38\x20\x33\x38\x36\x2e\x37\x37\x30\x34\x38\x20\
\x2d\x32\x33\x34\x2e\x34\x33\x37\x33\x34\x20\x33\x39\x33\x2e\x32\
\x38\x31\x32\x35\x20\x2d\x32\x33\x34\x2e\x34\x33\x37\x35\x20\x7a\
\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x72\x61\x64\x69\x75\x73\x3d\x22\x33\x37\
\x2e\x37\x31\x38\x34\x37\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\
\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x66\x66\x73\x65\
\x74\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x70\x61\
\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\
\x6d\x20\x31\x34\x36\x2e\x30\x36\x32\x37\x37\x2c\x2d\x33\x39\x37\
\x2e\x32\x34\x38\x36\x36\x20\x63\x20\x31\x35\x2e\x32\x30\x32\x33\
\x37\x2c\x33\x2e\x31\x65\x2d\x34\x20\x32\x38\x2e\x38\x30\x38\x35\
\x37\x2c\x33\x2e\x34\x32\x30\x38\x37\x20\x34\x30\x2e\x38\x31\x38\
\x36\x35\x2c\x31\x30\x2e\x32\x36\x31\x36\x37\x20\x31\x32\x2e\x30\
\x30\x39\x38\x31\x2c\x36\x2e\x38\x34\x31\x34\x31\x20\x32\x31\x2e\
\x32\x30\x37\x32\x39\x2c\x31\x37\x2e\x32\x39\x33\x31\x31\x20\x32\
\x37\x2e\x35\x39\x32\x34\x39\x2c\x33\x31\x2e\x33\x35\x35\x31\x31\
\x20\x36\x2e\x33\x38\x34\x38\x38\x2c\x31\x34\x2e\x30\x36\x32\x35\
\x34\x20\x39\x2e\x35\x37\x37\x33\x39\x2c\x33\x30\x2e\x38\x39\x39\
\x32\x37\x20\x39\x2e\x35\x37\x37\x35\x36\x2c\x35\x30\x2e\x35\x31\
\x30\x32\x32\x20\x2d\x31\x2e\x37\x65\x2d\x34\x2c\x32\x31\x2e\x32\
\x38\x33\x36\x37\x20\x2d\x33\x2e\x36\x31\x30\x37\x35\x2c\x34\x30\
\x2e\x35\x39\x30\x37\x39\x20\x2d\x31\x30\x2e\x38\x33\x31\x37\x36\
\x2c\x35\x37\x2e\x39\x32\x31\x34\x34\x20\x2d\x37\x2e\x32\x32\x31\
\x33\x33\x2c\x31\x37\x2e\x33\x33\x30\x39\x36\x20\x2d\x31\x37\x2e\
\x35\x32\x31\x2c\x32\x39\x2e\x39\x34\x39\x20\x2d\x33\x30\x2e\x38\
\x39\x39\x30\x34\x2c\x33\x37\x2e\x38\x35\x34\x31\x36\x20\x2d\x31\
\x33\x2e\x33\x37\x38\x32\x39\x2c\x37\x2e\x39\x30\x35\x34\x20\x2d\
\x32\x38\x2e\x35\x38\x30\x37\x35\x2c\x31\x31\x2e\x38\x35\x38\x30\
\x34\x20\x2d\x34\x35\x2e\x36\x30\x37\x34\x32\x2c\x31\x31\x2e\x38\
\x35\x37\x39\x33\x20\x2d\x31\x31\x2e\x38\x35\x38\x2c\x31\x2e\x31\
\x65\x2d\x34\x20\x2d\x32\x32\x2e\x39\x35\x35\x38\x2c\x2d\x32\x2e\
\x30\x31\x34\x32\x32\x20\x2d\x33\x33\x2e\x32\x39\x33\x34\x32\x2c\
\x2d\x36\x2e\x30\x34\x32\x39\x39\x20\x2d\x31\x30\x2e\x33\x33\x37\
\x37\x32\x36\x2c\x2d\x34\x2e\x30\x32\x38\x35\x33\x20\x2d\x31\x39\
\x2e\x30\x30\x33\x31\x32\x39\x2c\x2d\x31\x30\x2e\x32\x36\x31\x35\
\x33\x20\x2d\x32\x35\x2e\x39\x39\x36\x32\x33\x32\x2c\x2d\x31\x38\
\x2e\x36\x39\x39\x30\x35\x20\x2d\x36\x2e\x39\x39\x33\x31\x36\x2c\
\x2d\x38\x2e\x34\x33\x37\x32\x32\x20\x2d\x31\x32\x2e\x30\x30\x39\
\x39\x37\x31\x2c\x2d\x31\x38\x2e\x35\x30\x38\x38\x35\x20\x2d\x31\
\x35\x2e\x30\x35\x30\x34\x35\x31\x2c\x2d\x33\x30\x2e\x32\x31\x34\
\x39\x31\x20\x2d\x33\x2e\x30\x34\x30\x35\x30\x35\x2c\x2d\x31\x31\
\x2e\x37\x30\x35\x37\x33\x20\x2d\x34\x2e\x35\x36\x30\x37\x35\x2c\
\x2d\x32\x33\x2e\x39\x34\x33\x37\x31\x20\x2d\x34\x2e\x35\x36\x30\
\x37\x34\x33\x2c\x2d\x33\x36\x2e\x37\x31\x33\x39\x38\x20\x2d\x37\
\x65\x2d\x36\x2c\x2d\x31\x39\x2e\x30\x30\x32\x38\x37\x20\x33\x2e\
\x35\x37\x32\x35\x37\x31\x2c\x2d\x33\x37\x2e\x37\x33\x39\x39\x20\
\x31\x30\x2e\x37\x31\x37\x37\x34\x36\x2c\x2d\x35\x36\x2e\x32\x31\
\x31\x31\x35\x20\x37\x2e\x31\x34\x35\x31\x33\x37\x2c\x2d\x31\x38\
\x2e\x34\x37\x30\x37\x33\x20\x31\x37\x2e\x37\x31\x30\x38\x34\x37\
\x2c\x2d\x33\x31\x2e\x37\x33\x34\x38\x38\x20\x33\x31\x2e\x36\x39\
\x37\x31\x36\x2c\x2d\x33\x39\x2e\x37\x39\x32\x34\x38\x20\x31\x33\
\x2e\x39\x38\x36\x32\x32\x2c\x2d\x38\x2e\x30\x35\x37\x20\x32\x39\
\x2e\x32\x36\x34\x36\x38\x2c\x2d\x31\x32\x2e\x30\x38\x35\x36\x36\
\x20\x34\x35\x2e\x38\x33\x35\x34\x36\x2c\x2d\x31\x32\x2e\x30\x38\
\x35\x39\x37\x20\x7a\x20\x6d\x20\x2d\x32\x2e\x32\x38\x30\x33\x37\
\x2c\x34\x33\x2e\x33\x32\x37\x30\x35\x20\x63\x20\x2d\x35\x2e\x36\
\x32\x35\x2c\x32\x2e\x37\x65\x2d\x34\x20\x2d\x31\x30\x2e\x37\x31\
\x37\x38\x33\x2c\x32\x2e\x37\x37\x34\x37\x33\x20\x2d\x31\x35\x2e\
\x32\x37\x38\x34\x38\x2c\x38\x2e\x33\x32\x33\x33\x36\x20\x2d\x34\
\x2e\x35\x36\x30\x38\x33\x2c\x35\x2e\x35\x34\x39\x31\x36\x20\x2d\
\x38\x2e\x30\x35\x37\x33\x39\x2c\x31\x33\x2e\x38\x37\x32\x35\x31\
\x20\x2d\x31\x30\x2e\x34\x38\x39\x37\x31\x2c\x32\x34\x2e\x39\x37\
\x30\x30\x36\x20\x2d\x32\x2e\x34\x33\x32\x34\x37\x2c\x31\x31\x2e\
\x30\x39\x38\x30\x34\x20\x2d\x33\x2e\x36\x34\x38\x36\x36\x2c\x32\
\x32\x2e\x31\x31\x39\x38\x33\x20\x2d\x33\x2e\x36\x34\x38\x35\x39\
\x2c\x33\x33\x2e\x30\x36\x35\x33\x39\x20\x2d\x37\x65\x2d\x35\x2c\
\x31\x35\x2e\x39\x36\x32\x37\x39\x20\x32\x2e\x31\x32\x38\x32\x37\
\x2c\x32\x37\x2e\x38\x35\x38\x37\x31\x20\x36\x2e\x33\x38\x35\x30\
\x33\x2c\x33\x35\x2e\x36\x38\x37\x38\x31\x20\x34\x2e\x32\x35\x36\
\x36\x32\x2c\x37\x2e\x38\x32\x39\x34\x34\x20\x39\x2e\x39\x35\x37\
\x35\x35\x2c\x31\x31\x2e\x37\x34\x34\x30\x37\x20\x31\x37\x2e\x31\
\x30\x32\x37\x39\x2c\x31\x31\x2e\x37\x34\x33\x39\x31\x20\x39\x2e\
\x31\x32\x31\x33\x38\x2c\x31\x2e\x36\x65\x2d\x34\x20\x31\x36\x2e\
\x33\x34\x32\x35\x35\x2c\x2d\x36\x2e\x36\x35\x30\x39\x32\x20\x32\
\x31\x2e\x36\x36\x33\x35\x32\x2c\x2d\x31\x39\x2e\x39\x35\x33\x32\
\x35\x20\x35\x2e\x33\x32\x30\x37\x35\x2c\x2d\x31\x33\x2e\x33\x30\
\x31\x39\x37\x20\x37\x2e\x39\x38\x31\x31\x39\x2c\x2d\x32\x38\x2e\
\x39\x32\x32\x35\x20\x37\x2e\x39\x38\x31\x33\x2c\x2d\x34\x36\x2e\
\x38\x36\x31\x36\x33\x20\x2d\x31\x2e\x31\x65\x2d\x34\x2c\x2d\x31\
\x35\x2e\x32\x30\x32\x32\x33\x20\x2d\x32\x2e\x32\x38\x30\x34\x39\
\x2c\x2d\x32\x36\x2e\x38\x33\x32\x31\x31\x20\x2d\x36\x2e\x38\x34\
\x31\x31\x31\x2c\x2d\x33\x34\x2e\x38\x38\x39\x36\x37\x20\x2d\x34\
\x2e\x35\x36\x30\x38\x35\x2c\x2d\x38\x2e\x30\x35\x37\x30\x35\x20\
\x2d\x31\x30\x2e\x31\x38\x35\x37\x36\x2c\x2d\x31\x32\x2e\x30\x38\
\x35\x37\x31\x20\x2d\x31\x36\x2e\x38\x37\x34\x37\x35\x2c\x2d\x31\
\x32\x2e\x30\x38\x35\x39\x38\x20\x7a\x20\x6d\x20\x31\x30\x2e\x32\
\x36\x31\x36\x38\x2c\x32\x37\x31\x2e\x35\x39\x32\x32\x32\x38\x20\
\x36\x34\x2e\x33\x30\x36\x34\x36\x2c\x2d\x31\x31\x38\x2e\x38\x30\
\x37\x33\x34\x38\x20\x31\x30\x30\x2e\x33\x33\x36\x33\x34\x2c\x2d\
\x31\x39\x32\x2e\x34\x36\x33\x33\x34\x20\x63\x20\x39\x2e\x35\x37\
\x37\x32\x39\x2c\x30\x2e\x33\x30\x34\x33\x37\x20\x31\x38\x2e\x30\
\x31\x34\x36\x35\x2c\x30\x2e\x34\x35\x36\x33\x39\x20\x32\x35\x2e\
\x33\x31\x32\x31\x33\x2c\x30\x2e\x34\x35\x36\x30\x38\x20\x36\x2e\
\x32\x33\x32\x37\x31\x2c\x33\x2e\x31\x65\x2d\x34\x20\x31\x34\x2e\
\x34\x34\x32\x30\x34\x2c\x2d\x30\x2e\x31\x35\x31\x37\x31\x20\x32\
\x34\x2e\x36\x32\x38\x2c\x2d\x30\x2e\x34\x35\x36\x30\x38\x20\x6c\
\x20\x2d\x34\x39\x2e\x37\x31\x32\x30\x39\x2c\x39\x32\x2e\x31\x32\
\x37\x30\x31\x20\x2d\x38\x34\x2e\x36\x30\x31\x37\x37\x2c\x31\x36\
\x31\x2e\x32\x32\x32\x32\x35\x20\x2d\x32\x38\x2e\x35\x30\x34\x36\
\x35\x2c\x35\x37\x2e\x39\x32\x31\x34\x32\x38\x20\x63\x20\x2d\x39\
\x2e\x32\x37\x33\x36\x35\x2c\x2d\x30\x2e\x33\x30\x34\x30\x34\x39\
\x20\x2d\x31\x37\x2e\x32\x35\x34\x39\x35\x2c\x2d\x30\x2e\x34\x35\
\x36\x30\x37\x34\x20\x2d\x32\x33\x2e\x39\x34\x33\x39\x2c\x2d\x30\
\x2e\x34\x35\x36\x30\x37\x34\x20\x2d\x34\x2e\x32\x35\x36\x38\x32\
\x2c\x30\x20\x2d\x31\x33\x2e\x35\x33\x30\x33\x32\x2c\x30\x2e\x31\
\x35\x32\x30\x32\x35\x20\x2d\x32\x37\x2e\x38\x32\x30\x35\x32\x2c\
\x30\x2e\x34\x35\x36\x30\x37\x34\x20\x7a\x20\x4d\x20\x33\x38\x36\
\x2e\x34\x31\x33\x39\x31\x2c\x2d\x32\x37\x38\x2e\x32\x31\x33\x32\
\x38\x20\x63\x20\x31\x35\x2e\x30\x35\x30\x31\x2c\x32\x65\x2d\x34\
\x20\x32\x38\x2e\x33\x35\x32\x32\x35\x2c\x32\x2e\x39\x36\x34\x36\
\x37\x20\x33\x39\x2e\x39\x30\x36\x35\x2c\x38\x2e\x38\x39\x33\x34\
\x35\x20\x31\x31\x2e\x35\x35\x33\x34\x39\x2c\x35\x2e\x39\x32\x39\
\x31\x34\x20\x32\x30\x2e\x39\x30\x33\x2c\x31\x35\x2e\x37\x37\x32\
\x37\x34\x20\x32\x38\x2e\x30\x34\x38\x35\x37\x2c\x32\x39\x2e\x35\
\x33\x30\x38\x31\x20\x37\x2e\x31\x34\x34\x37\x35\x2c\x31\x33\x2e\
\x37\x35\x38\x33\x39\x20\x31\x30\x2e\x37\x31\x37\x33\x32\x2c\x33\
\x31\x2e\x32\x30\x33\x32\x31\x20\x31\x30\x2e\x37\x31\x37\x37\x34\
\x2c\x35\x32\x2e\x33\x33\x34\x35\x32\x20\x2d\x34\x2e\x32\x65\x2d\
\x34\x2c\x31\x34\x2e\x32\x39\x30\x34\x32\x20\x2d\x31\x2e\x37\x34\
\x38\x37\x2c\x32\x38\x2e\x34\x36\x36\x37\x31\x20\x2d\x35\x2e\x32\
\x34\x34\x38\x36\x2c\x34\x32\x2e\x35\x32\x38\x39\x33\x20\x2d\x33\
\x2e\x34\x39\x36\x39\x37\x2c\x31\x34\x2e\x30\x36\x32\x33\x34\x20\
\x2d\x39\x2e\x31\x35\x39\x38\x39\x2c\x32\x36\x2e\x33\x37\x36\x33\
\x33\x20\x2d\x31\x36\x2e\x39\x38\x38\x37\x36\x2c\x33\x36\x2e\x39\
\x34\x32\x30\x31\x20\x2d\x37\x2e\x38\x32\x39\x36\x36\x2c\x31\x30\
\x2e\x35\x36\x35\x37\x33\x36\x20\x2d\x31\x37\x2e\x34\x30\x37\x32\
\x31\x2c\x31\x38\x2e\x30\x39\x30\x39\x35\x34\x20\x2d\x32\x38\x2e\
\x37\x33\x32\x36\x38\x2c\x32\x32\x2e\x35\x37\x35\x36\x37\x37\x20\
\x2d\x31\x31\x2e\x33\x32\x36\x32\x2c\x34\x2e\x34\x38\x34\x37\x32\
\x39\x20\x2d\x32\x33\x2e\x36\x30\x32\x31\x38\x2c\x36\x2e\x37\x32\
\x37\x30\x39\x31\x20\x2d\x33\x36\x2e\x38\x32\x37\x39\x39\x2c\x36\
\x2e\x37\x32\x37\x30\x39\x35\x20\x2d\x31\x35\x2e\x35\x30\x36\x38\
\x34\x2c\x2d\x34\x65\x2d\x36\x20\x2d\x32\x39\x2e\x30\x33\x37\x30\
\x33\x2c\x2d\x33\x2e\x30\x37\x38\x35\x30\x32\x20\x2d\x34\x30\x2e\
\x35\x39\x30\x36\x31\x2c\x2d\x39\x2e\x32\x33\x35\x35\x30\x34\x20\
\x2d\x31\x31\x2e\x35\x35\x34\x31\x36\x2c\x2d\x36\x2e\x31\x35\x36\
\x39\x39\x20\x2d\x32\x30\x2e\x37\x38\x39\x36\x36\x2c\x2d\x31\x36\
\x2e\x30\x30\x30\x35\x38\x38\x20\x2d\x32\x37\x2e\x37\x30\x36\x35\
\x32\x2c\x2d\x32\x39\x2e\x35\x33\x30\x38\x30\x38\x20\x2d\x36\x2e\
\x39\x31\x37\x33\x38\x2c\x2d\x31\x33\x2e\x35\x33\x30\x31\x35\x20\
\x2d\x31\x30\x2e\x33\x37\x35\x39\x33\x2c\x2d\x33\x31\x2e\x33\x39\
\x33\x30\x34\x20\x2d\x31\x30\x2e\x33\x37\x35\x36\x39\x2c\x2d\x35\
\x33\x2e\x35\x38\x38\x37\x33\x20\x2d\x32\x2e\x34\x65\x2d\x34\x2c\
\x2d\x31\x39\x2e\x34\x35\x39\x30\x35\x20\x33\x2e\x36\x38\x36\x33\
\x35\x2c\x2d\x33\x38\x2e\x32\x37\x32\x31\x20\x31\x31\x2e\x30\x35\
\x39\x38\x2c\x2d\x35\x36\x2e\x34\x33\x39\x31\x39\x20\x37\x2e\x33\
\x37\x32\x39\x34\x2c\x2d\x31\x38\x2e\x31\x36\x36\x37\x39\x20\x31\
\x37\x2e\x38\x32\x34\x36\x33\x2c\x2d\x33\x31\x2e\x31\x36\x34\x39\
\x20\x33\x31\x2e\x33\x35\x35\x31\x31\x2c\x2d\x33\x38\x2e\x39\x39\
\x34\x33\x35\x20\x31\x33\x2e\x35\x32\x39\x39\x2c\x2d\x37\x2e\x38\
\x32\x39\x30\x37\x20\x32\x38\x2e\x36\x35\x36\x33\x34\x2c\x2d\x31\
\x31\x2e\x37\x34\x33\x37\x31\x20\x34\x35\x2e\x33\x37\x39\x33\x39\
\x2c\x2d\x31\x31\x2e\x37\x34\x33\x39\x31\x20\x7a\x20\x6d\x20\x2d\
\x31\x2e\x38\x32\x34\x33\x2c\x34\x33\x2e\x35\x35\x35\x30\x39\x20\
\x63\x20\x2d\x36\x2e\x30\x38\x31\x33\x32\x2c\x31\x2e\x35\x65\x2d\
\x34\x20\x2d\x31\x31\x2e\x32\x38\x38\x31\x36\x2c\x32\x2e\x38\x38\
\x38\x36\x33\x20\x2d\x31\x35\x2e\x36\x32\x30\x35\x35\x2c\x38\x2e\
\x36\x36\x35\x34\x31\x20\x2d\x34\x2e\x33\x33\x33\x30\x31\x2c\x35\
\x2e\x37\x37\x37\x30\x39\x20\x2d\x37\x2e\x36\x33\x39\x35\x35\x2c\
\x31\x33\x2e\x38\x33\x34\x33\x39\x20\x2d\x39\x2e\x39\x31\x39\x36\
\x2c\x32\x34\x2e\x31\x37\x31\x39\x34\x20\x2d\x32\x2e\x32\x38\x30\
\x36\x39\x2c\x31\x30\x2e\x33\x33\x37\x37\x39\x20\x2d\x33\x2e\x34\
\x32\x30\x38\x37\x2c\x32\x31\x2e\x32\x38\x33\x35\x36\x20\x2d\x33\
\x2e\x34\x32\x30\x35\x36\x2c\x33\x32\x2e\x38\x33\x37\x33\x35\x20\
\x2d\x33\x2e\x31\x65\x2d\x34\x2c\x38\x2e\x38\x31\x37\x35\x31\x20\
\x30\x2e\x34\x35\x35\x37\x36\x2c\x31\x35\x2e\x38\x31\x30\x36\x34\
\x20\x31\x2e\x33\x36\x38\x32\x32\x2c\x32\x30\x2e\x39\x37\x39\x34\
\x32\x20\x30\x2e\x39\x31\x31\x38\x34\x2c\x35\x2e\x31\x36\x38\x39\
\x20\x32\x2e\x33\x31\x38\x30\x37\x2c\x39\x2e\x37\x32\x39\x36\x33\
\x20\x34\x2e\x32\x31\x38\x36\x38\x2c\x31\x33\x2e\x36\x38\x32\x32\
\x32\x20\x31\x2e\x39\x2c\x33\x2e\x39\x35\x32\x37\x20\x34\x2e\x33\
\x37\x30\x34\x2c\x37\x2e\x31\x30\x37\x32\x20\x37\x2e\x34\x31\x31\
\x32\x31\x2c\x39\x2e\x34\x36\x33\x35\x34\x20\x33\x2e\x30\x34\x30\
\x31\x38\x2c\x32\x2e\x33\x35\x36\x34\x33\x20\x36\x2e\x36\x31\x32\
\x37\x35\x2c\x33\x2e\x35\x33\x34\x36\x32\x20\x31\x30\x2e\x37\x31\
\x37\x37\x35\x2c\x33\x2e\x35\x33\x34\x35\x38\x20\x32\x2e\x37\x33\
\x36\x31\x32\x2c\x34\x65\x2d\x35\x20\x35\x2e\x33\x32\x30\x35\x33\
\x2c\x2d\x30\x2e\x36\x30\x38\x30\x36\x20\x37\x2e\x37\x35\x33\x32\
\x36\x2c\x2d\x31\x2e\x38\x32\x34\x32\x39\x20\x32\x2e\x34\x33\x32\
\x30\x36\x2c\x2d\x31\x2e\x32\x31\x36\x31\x36\x20\x34\x2e\x39\x37\
\x38\x34\x37\x2c\x2d\x33\x2e\x36\x31\x30\x35\x35\x20\x37\x2e\x36\
\x33\x39\x32\x35\x2c\x2d\x37\x2e\x31\x38\x33\x31\x37\x20\x32\x2e\
\x36\x36\x30\x30\x38\x2c\x2d\x33\x2e\x35\x37\x32\x35\x34\x20\x35\
\x2e\x30\x35\x34\x34\x37\x2c\x2d\x38\x2e\x35\x38\x39\x33\x35\x20\
\x37\x2e\x31\x38\x33\x31\x37\x2c\x2d\x31\x35\x2e\x30\x35\x30\x34\
\x36\x20\x32\x2e\x31\x32\x37\x39\x38\x2c\x2d\x36\x2e\x34\x36\x30\
\x39\x38\x20\x33\x2e\x37\x32\x34\x32\x34\x2c\x2d\x31\x33\x2e\x31\
\x35\x30\x30\x36\x20\x34\x2e\x37\x38\x38\x37\x38\x2c\x2d\x32\x30\
\x2e\x30\x36\x37\x32\x37\x20\x31\x2e\x30\x36\x33\x38\x31\x2c\x2d\
\x36\x2e\x39\x31\x37\x30\x33\x20\x31\x2e\x35\x39\x35\x39\x2c\x2d\
\x31\x34\x2e\x33\x32\x38\x32\x34\x20\x31\x2e\x35\x39\x36\x32\x35\
\x2c\x2d\x32\x32\x2e\x32\x33\x33\x36\x31\x20\x2d\x33\x2e\x35\x65\
\x2d\x34\x2c\x2d\x31\x34\x2e\x38\x39\x38\x33\x31\x20\x2d\x32\x2e\
\x30\x35\x32\x36\x38\x2c\x2d\x32\x36\x2e\x34\x35\x32\x31\x38\x20\
\x2d\x36\x2e\x31\x35\x36\x39\x39\x2c\x2d\x33\x34\x2e\x36\x36\x31\
\x36\x35\x20\x2d\x34\x2e\x31\x30\x35\x30\x33\x2c\x2d\x38\x2e\x32\
\x30\x39\x31\x39\x20\x2d\x39\x2e\x39\x35\x37\x39\x37\x2c\x2d\x31\
\x32\x2e\x33\x31\x33\x38\x36\x20\x2d\x31\x37\x2e\x35\x35\x38\x38\
\x37\x2c\x2d\x31\x32\x2e\x33\x31\x34\x30\x31\x20\x7a\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x35\x30\x30\x70\x78\x3b\
\x66\x6f\x6e\x74\x2d\x73\x74\x79\x6c\x65\x3a\x6e\x6f\x72\x6d\x61\
\x6c\x3b\x66\x6f\x6e\x74\x2d\x76\x61\x72\x69\x61\x6e\x74\x3a\x6e\
\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x77\x65\x69\x67\x68\
\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x73\x74\
\x72\x65\x74\x63\x68\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x74\x65\x78\
\x74\x2d\x61\x6c\x69\x67\x6e\x3a\x73\x74\x61\x72\x74\x3b\x6c\x69\
\x6e\x65\x2d\x68\x65\x69\x67\x68\x74\x3a\x31\x32\x35\x25\x3b\x77\
\x72\x69\x74\x69\x6e\x67\x2d\x6d\x6f\x64\x65\x3a\x6c\x72\x2d\x74\
\x62\x3b\x74\x65\x78\x74\x2d\x61\x6e\x63\x68\x6f\x72\x3a\x73\x74\
\x61\x72\x74\x3b\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\
\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\
\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x66\x6f\x6e\x74\
\x2d\x66\x61\x6d\x69\x6c\x79\x3a\x45\x72\x61\x73\x20\x42\x6f\x6c\
\x64\x20\x49\x54\x43\x3b\x2d\x69\x6e\x6b\x73\x63\x61\x70\x65\x2d\
\x66\x6f\x6e\x74\x2d\x73\x70\x65\x63\x69\x66\x69\x63\x61\x74\x69\
\x6f\x6e\x3a\x45\x72\x61\x73\x20\x42\x6f\x6c\x64\x20\x49\x54\x43\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x70\x61\x74\x68\x33\x36\x33\x37\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\
\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x23\xac\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\
\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\x74\x73\
\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\
\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\
\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x72\
\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\
\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\x32\x32\
\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\x23\x22\
\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\
\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\
\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\
\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\x6f\x72\
\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\x69\x70\
\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\x20\x78\
\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\x22\x68\
\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\x63\x65\
\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\x20\
\x77\x69\x64\x74\x68\x3d\x22\x31\x36\x70\x78\x22\x0d\x0a\x20\x20\
\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x36\x70\x78\x22\x0d\x0a\
\x20\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x32\x33\x38\x33\x22\x0d\
\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\
\x3d\x22\x30\x2e\x34\x36\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\x61\x6d\x65\x3d\x22\x73\x70\
\x65\x63\x74\x72\x75\x6d\x2e\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\x70\x75\x74\x5f\
\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\x72\x67\x2e\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\x75\x74\x2e\x73\
\x76\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x3e\x0d\x0a\x20\
\x20\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x64\x65\x66\x73\x32\x33\x38\x35\x22\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\
\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x38\x20\x3a\x20\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\
\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x36\
\x20\x3a\x20\x38\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\
\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x38\x20\x3a\x20\x35\
\x2e\x33\x33\x33\x33\x33\x33\x33\x20\x3a\x20\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\
\x63\x74\x69\x76\x65\x32\x33\x39\x31\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\
\x73\x70\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\
\x32\x34\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\
\x72\x69\x67\x69\x6e\x3d\x22\x33\x37\x32\x2e\x30\x34\x37\x32\x34\
\x20\x3a\x20\x33\x35\x30\x2e\x37\x38\x37\x33\x39\x20\x3a\x20\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x37\x34\x34\x2e\x30\x39\x34\
\x34\x38\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\x3a\
\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\
\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\x22\
\x30\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\x3a\x20\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\
\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\
\x72\x73\x70\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\
\x65\x32\x35\x38\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\
\x6f\x72\x69\x67\x69\x6e\x3d\x22\x33\x37\x32\x2e\x30\x34\x37\x32\
\x34\x20\x3a\x20\x33\x35\x30\x2e\x37\x38\x37\x33\x39\x20\x3a\x20\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x37\x34\x34\x2e\x30\x39\
\x34\x34\x38\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\
\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\
\x31\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\
\x22\x30\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\x3a\
\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0d\x0a\x20\x20\x3c\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\
\x77\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\
\x72\x3d\x22\x23\x66\x66\x66\x66\x66\x66\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\
\x36\x36\x36\x36\x36\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\
\x72\x64\x65\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x31\x2e\x30\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\
\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\x77\x3d\x22\x32\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x7a\x6f\x6f\x6d\x3d\x22\x33\x39\x2e\x36\x32\x35\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x78\x3d\
\x22\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x63\x79\x3d\x22\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\
\x2d\x6c\x61\x79\x65\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x2d\x62\x62\x6f\x78\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\
\x69\x74\x73\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\
\x69\x64\x74\x68\x3d\x22\x31\x34\x34\x30\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\
\x77\x2d\x68\x65\x69\x67\x68\x74\x3d\x22\x38\x33\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\
\x6e\x64\x6f\x77\x2d\x78\x3d\x22\x2d\x34\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\
\x77\x2d\x79\x3d\x22\x2d\x33\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\
\x6d\x65\x74\x61\x64\x61\x74\x61\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\x32\x33\x38\x38\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\
\x62\x6f\x75\x74\x3d\x22\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\
\x67\x65\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\
\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x64\x63\x3a\x74\x79\x70\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\
\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\
\x72\x67\x2f\x64\x63\x2f\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\
\x74\x69\x6c\x6c\x49\x6d\x61\x67\x65\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\x72\x6b\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\
\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x3e\x0d\x0a\
\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\
\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\x22\x4c\x61\x79\
\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\x6f\x64\x65\x3d\x22\
\x6c\x61\x79\x65\x72\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x70\x61\
\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\
\x3a\x23\x30\x30\x30\x30\x66\x66\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\
\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\
\x65\x3a\x6e\x6f\x6e\x7a\x65\x72\x6f\x3b\x73\x74\x72\x6f\x6b\x65\
\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\
\x74\x68\x3a\x32\x2e\x37\x30\x30\x30\x30\x30\x30\x35\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x63\x61\x70\x3a\x73\x71\x75\
\x61\x72\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\
\x6f\x69\x6e\x3a\x6d\x69\x74\x65\x72\x3b\x6d\x61\x72\x6b\x65\x72\
\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x73\x74\x61\
\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x6d\
\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x65\
\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\
\x69\x74\x65\x72\x6c\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x64\x61\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\
\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x6f\x66\x66\
\x73\x65\x74\x3a\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\
\x63\x69\x74\x79\x3a\x31\x3b\x76\x69\x73\x69\x62\x69\x6c\x69\x74\
\x79\x3a\x76\x69\x73\x69\x62\x6c\x65\x3b\x64\x69\x73\x70\x6c\x61\
\x79\x3a\x69\x6e\x6c\x69\x6e\x65\x3b\x6f\x76\x65\x72\x66\x6c\x6f\
\x77\x3a\x76\x69\x73\x69\x62\x6c\x65\x3b\x65\x6e\x61\x62\x6c\x65\
\x2d\x62\x61\x63\x6b\x67\x72\x6f\x75\x6e\x64\x3a\x61\x63\x63\x75\
\x6d\x75\x6c\x61\x74\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x64\x3d\x22\x4d\x20\x37\x2e\x39\x39\x38\x36\x34\x39\x34\x2c\x31\
\x2e\x31\x33\x36\x37\x34\x38\x32\x20\x4c\x20\x37\x2e\x39\x30\x31\
\x33\x35\x32\x36\x2c\x32\x2e\x31\x30\x32\x36\x33\x38\x39\x20\x4c\
\x20\x37\x2e\x38\x30\x34\x30\x35\x35\x36\x2c\x33\x2e\x30\x36\x38\
\x35\x33\x20\x4c\x20\x37\x2e\x35\x33\x36\x35\x30\x34\x31\x2c\x32\
\x2e\x35\x39\x35\x32\x33\x33\x33\x20\x43\x20\x37\x2e\x33\x39\x31\
\x32\x34\x31\x31\x2c\x32\x2e\x33\x33\x34\x32\x30\x39\x37\x20\x37\
\x2e\x31\x39\x38\x30\x37\x31\x32\x2c\x32\x2e\x31\x32\x31\x39\x36\
\x30\x31\x20\x37\x2e\x31\x30\x33\x35\x36\x33\x32\x2c\x32\x2e\x31\
\x32\x31\x39\x36\x30\x31\x20\x4c\x20\x36\x2e\x39\x32\x38\x34\x33\
\x31\x2c\x32\x2e\x31\x32\x31\x39\x36\x30\x31\x20\x4c\x20\x36\x2e\
\x38\x33\x31\x31\x34\x36\x2c\x32\x2e\x37\x34\x30\x31\x31\x38\x20\
\x4c\x20\x36\x2e\x37\x33\x33\x38\x34\x39\x32\x2c\x33\x2e\x33\x35\
\x38\x32\x37\x35\x39\x20\x4c\x20\x36\x2e\x33\x39\x33\x33\x32\x37\
\x38\x2c\x33\x2e\x34\x30\x36\x35\x37\x38\x38\x20\x43\x20\x36\x2e\
\x32\x30\x36\x34\x35\x39\x34\x2c\x33\x2e\x34\x33\x31\x32\x39\x35\
\x36\x20\x35\x2e\x38\x33\x38\x33\x37\x31\x32\x2c\x33\x2e\x34\x32\
\x31\x36\x35\x38\x39\x20\x35\x2e\x35\x37\x36\x30\x37\x36\x36\x2c\
\x33\x2e\x33\x38\x37\x32\x35\x37\x37\x20\x4c\x20\x35\x2e\x30\x39\
\x39\x33\x34\x36\x38\x2c\x33\x2e\x33\x31\x39\x36\x35\x37\x33\x20\
\x4c\x20\x34\x2e\x39\x31\x39\x33\x36\x31\x31\x2c\x34\x2e\x31\x31\
\x31\x36\x38\x31\x36\x20\x4c\x20\x34\x2e\x37\x33\x39\x33\x36\x33\
\x36\x2c\x34\x2e\x39\x30\x33\x37\x30\x36\x32\x20\x4c\x20\x34\x2e\
\x35\x38\x38\x35\x37\x30\x37\x2c\x34\x2e\x39\x30\x33\x37\x30\x36\
\x32\x20\x4c\x20\x34\x2e\x34\x33\x37\x37\x36\x35\x38\x2c\x34\x2e\
\x39\x30\x33\x37\x30\x36\x32\x20\x4c\x20\x34\x2e\x33\x30\x36\x34\
\x32\x32\x37\x2c\x33\x2e\x35\x39\x30\x31\x30\x35\x38\x20\x4c\x20\
\x34\x2e\x31\x37\x35\x30\x37\x39\x36\x2c\x32\x2e\x32\x37\x36\x34\
\x38\x31\x38\x20\x4c\x20\x33\x2e\x39\x35\x36\x31\x37\x30\x35\x2c\
\x32\x2e\x32\x37\x36\x34\x38\x31\x38\x20\x4c\x20\x33\x2e\x37\x33\
\x37\x32\x36\x31\x34\x2c\x32\x2e\x32\x37\x36\x34\x38\x31\x38\x20\
\x4c\x20\x33\x2e\x36\x30\x35\x39\x31\x38\x33\x2c\x33\x2e\x32\x38\
\x31\x30\x31\x35\x31\x20\x43\x20\x33\x2e\x35\x33\x33\x38\x31\x34\
\x39\x2c\x33\x2e\x38\x33\x33\x35\x30\x34\x39\x20\x33\x2e\x34\x34\
\x33\x31\x32\x37\x39\x2c\x34\x2e\x32\x38\x35\x35\x34\x38\x33\x20\
\x33\x2e\x34\x30\x31\x36\x30\x35\x35\x2c\x34\x2e\x32\x38\x35\x35\
\x34\x38\x33\x20\x43\x20\x33\x2e\x33\x36\x30\x30\x38\x33\x31\x2c\
\x34\x2e\x32\x38\x35\x35\x34\x38\x33\x20\x33\x2e\x31\x38\x32\x38\
\x35\x30\x37\x2c\x34\x2e\x31\x31\x31\x36\x38\x31\x36\x20\x33\x2e\
\x30\x30\x37\x35\x37\x36\x32\x2c\x33\x2e\x38\x39\x39\x31\x37\x32\
\x38\x20\x4c\x20\x32\x2e\x36\x38\x36\x35\x30\x34\x38\x2c\x33\x2e\
\x35\x31\x32\x38\x32\x31\x35\x20\x4c\x20\x32\x2e\x35\x30\x31\x36\
\x35\x33\x38\x2c\x34\x2e\x30\x30\x35\x34\x33\x39\x32\x20\x4c\x20\
\x32\x2e\x33\x31\x36\x38\x30\x32\x37\x2c\x34\x2e\x34\x39\x38\x30\
\x33\x33\x34\x20\x4c\x20\x31\x2e\x36\x36\x30\x30\x37\x35\x33\x2c\
\x34\x2e\x37\x30\x30\x38\x38\x31\x35\x20\x4c\x20\x31\x2e\x36\x36\
\x30\x30\x37\x35\x33\x2c\x35\x2e\x36\x32\x38\x31\x33\x30\x31\x20\
\x4c\x20\x32\x2e\x33\x31\x36\x38\x30\x32\x37\x2c\x35\x2e\x38\x31\
\x31\x36\x33\x33\x37\x20\x4c\x20\x32\x2e\x34\x39\x36\x37\x38\x38\
\x33\x2c\x35\x2e\x33\x33\x38\x33\x36\x30\x35\x20\x4c\x20\x32\x2e\
\x36\x37\x36\x37\x37\x33\x39\x2c\x34\x2e\x38\x36\x35\x30\x36\x33\
\x39\x20\x4c\x20\x33\x2e\x30\x30\x32\x37\x31\x30\x38\x2c\x35\x2e\
\x32\x36\x31\x30\x37\x35\x39\x20\x4c\x20\x33\x2e\x33\x32\x38\x36\
\x33\x35\x38\x2c\x35\x2e\x36\x36\x36\x37\x34\x38\x36\x20\x4c\x20\
\x33\x2e\x35\x37\x31\x38\x36\x30\x32\x2c\x34\x2e\x39\x38\x30\x39\
\x36\x37\x20\x43\x20\x33\x2e\x37\x30\x35\x38\x39\x37\x31\x2c\x34\
\x2e\x36\x30\x31\x30\x32\x34\x34\x20\x33\x2e\x38\x37\x35\x35\x38\
\x32\x32\x2c\x34\x2e\x32\x38\x35\x35\x34\x38\x33\x20\x33\x2e\x39\
\x35\x31\x33\x30\x35\x2c\x34\x2e\x32\x38\x35\x35\x34\x38\x33\x20\
\x4c\x20\x34\x2e\x30\x38\x37\x35\x31\x33\x36\x2c\x34\x2e\x32\x38\
\x35\x35\x34\x38\x33\x20\x4c\x20\x34\x2e\x32\x31\x38\x38\x35\x36\
\x37\x2c\x35\x2e\x35\x39\x39\x31\x34\x38\x35\x20\x4c\x20\x34\x2e\
\x33\x35\x30\x31\x39\x39\x38\x2c\x36\x2e\x39\x31\x32\x37\x34\x38\
\x37\x20\x4c\x20\x34\x2e\x35\x36\x39\x31\x30\x38\x39\x2c\x36\x2e\
\x39\x31\x32\x37\x34\x38\x37\x20\x4c\x20\x34\x2e\x37\x38\x33\x31\
\x35\x32\x36\x2c\x36\x2e\x39\x31\x32\x37\x34\x38\x37\x20\x4c\x20\
\x35\x2e\x30\x30\x32\x30\x34\x39\x38\x2c\x35\x2e\x35\x39\x39\x31\
\x34\x38\x35\x20\x4c\x20\x35\x2e\x32\x32\x30\x39\x35\x38\x39\x2c\
\x34\x2e\x32\x38\x35\x35\x34\x38\x33\x20\x4c\x20\x35\x2e\x38\x31\
\x39\x33\x31\x33\x2c\x34\x2e\x32\x38\x35\x35\x34\x38\x33\x20\x4c\
\x20\x36\x2e\x34\x31\x37\x36\x35\x34\x39\x2c\x34\x2e\x32\x38\x35\
\x35\x34\x38\x33\x20\x4c\x20\x36\x2e\x34\x37\x36\x30\x32\x38\x33\
\x2c\x34\x2e\x36\x35\x32\x35\x37\x38\x37\x20\x4c\x20\x36\x2e\x35\
\x33\x39\x32\x36\x37\x32\x2c\x35\x2e\x30\x30\x39\x39\x34\x38\x36\
\x20\x4c\x20\x36\x2e\x38\x30\x31\x39\x35\x33\x34\x2c\x34\x2e\x38\
\x31\x36\x37\x38\x34\x37\x20\x4c\x20\x37\x2e\x30\x36\x34\x36\x33\
\x39\x36\x2c\x34\x2e\x36\x31\x33\x39\x33\x36\x36\x20\x4c\x20\x37\
\x2e\x30\x36\x34\x36\x33\x39\x36\x2c\x33\x2e\x39\x38\x36\x31\x31\
\x38\x20\x4c\x20\x37\x2e\x30\x36\x34\x36\x33\x39\x36\x2c\x33\x2e\
\x33\x35\x38\x32\x37\x35\x39\x20\x4c\x20\x37\x2e\x32\x31\x30\x35\
\x37\x39\x2c\x33\x2e\x33\x35\x38\x32\x37\x35\x39\x20\x4c\x20\x37\
\x2e\x33\x35\x36\x35\x31\x38\x34\x2c\x33\x2e\x33\x35\x38\x32\x37\
\x35\x39\x20\x4c\x20\x37\x2e\x34\x34\x34\x30\x38\x34\x34\x2c\x34\
\x2e\x36\x37\x31\x38\x39\x39\x39\x20\x43\x20\x37\x2e\x34\x39\x32\
\x31\x30\x39\x39\x2c\x35\x2e\x33\x39\x34\x33\x36\x38\x31\x20\x37\
\x2e\x35\x34\x39\x31\x33\x30\x35\x2c\x36\x2e\x35\x34\x31\x38\x35\
\x33\x39\x20\x37\x2e\x35\x37\x30\x35\x36\x32\x2c\x37\x2e\x32\x32\
\x31\x38\x33\x39\x36\x20\x4c\x20\x37\x2e\x36\x30\x39\x34\x37\x33\
\x38\x2c\x38\x2e\x34\x35\x38\x31\x37\x38\x38\x20\x4c\x20\x37\x2e\
\x38\x34\x32\x39\x37\x39\x32\x2c\x38\x2e\x34\x35\x38\x31\x37\x38\
\x38\x20\x4c\x20\x38\x2e\x30\x37\x36\x34\x37\x32\x38\x2c\x38\x2e\
\x34\x35\x38\x31\x37\x38\x38\x20\x4c\x20\x38\x2e\x31\x35\x34\x33\
\x30\x37\x38\x2c\x36\x2e\x36\x30\x33\x36\x35\x38\x20\x4c\x20\x38\
\x2e\x32\x33\x32\x31\x34\x33\x2c\x34\x2e\x37\x35\x38\x38\x32\x31\
\x34\x20\x4c\x20\x38\x2e\x35\x32\x34\x30\x32\x31\x38\x2c\x34\x2e\
\x36\x34\x32\x39\x31\x38\x32\x20\x4c\x20\x38\x2e\x38\x32\x30\x37\
\x36\x36\x31\x2c\x34\x2e\x35\x33\x36\x36\x37\x35\x36\x20\x4c\x20\
\x39\x2e\x31\x36\x36\x31\x35\x32\x38\x2c\x34\x2e\x39\x30\x33\x37\
\x30\x36\x32\x20\x4c\x20\x39\x2e\x35\x31\x36\x33\x39\x33\x32\x2c\
\x35\x2e\x32\x38\x30\x33\x39\x37\x33\x20\x4c\x20\x39\x2e\x38\x33\
\x37\x34\x36\x34\x36\x2c\x34\x2e\x39\x33\x32\x36\x38\x37\x38\x20\
\x43\x20\x31\x30\x2e\x30\x31\x33\x37\x37\x31\x2c\x34\x2e\x37\x34\
\x35\x33\x34\x33\x37\x20\x31\x30\x2e\x32\x36\x38\x38\x35\x31\x2c\
\x34\x2e\x35\x39\x34\x36\x31\x35\x35\x20\x31\x30\x2e\x34\x30\x31\
\x37\x34\x39\x2c\x34\x2e\x35\x39\x34\x36\x31\x35\x35\x20\x4c\x20\
\x31\x30\x2e\x36\x34\x30\x31\x31\x39\x2c\x34\x2e\x35\x39\x34\x36\
\x31\x35\x35\x20\x4c\x20\x31\x30\x2e\x38\x37\x33\x36\x32\x35\x2c\
\x35\x2e\x37\x30\x35\x33\x39\x31\x31\x20\x4c\x20\x31\x31\x2e\x31\
\x30\x37\x31\x31\x39\x2c\x36\x2e\x38\x31\x36\x31\x36\x36\x38\x20\
\x4c\x20\x31\x31\x2e\x32\x39\x36\x38\x33\x35\x2c\x36\x2e\x36\x39\
\x30\x36\x30\x33\x20\x4c\x20\x31\x31\x2e\x34\x38\x36\x35\x36\x34\
\x2c\x36\x2e\x35\x36\x35\x30\x33\x39\x34\x20\x4c\x20\x31\x31\x2e\
\x36\x30\x33\x33\x31\x2c\x35\x2e\x36\x39\x35\x37\x33\x30\x35\x20\
\x4c\x20\x31\x31\x2e\x37\x32\x30\x30\x35\x36\x2c\x34\x2e\x38\x32\
\x36\x34\x34\x35\x32\x20\x4c\x20\x31\x32\x2e\x30\x33\x36\x32\x36\
\x32\x2c\x34\x2e\x33\x38\x32\x31\x33\x30\x33\x20\x4c\x20\x31\x32\
\x2e\x33\x35\x37\x33\x32\x32\x2c\x33\x2e\x39\x33\x37\x38\x31\x35\
\x32\x20\x4c\x20\x31\x32\x2e\x33\x35\x37\x33\x32\x32\x2c\x33\x2e\
\x34\x36\x34\x35\x34\x32\x31\x20\x4c\x20\x31\x32\x2e\x33\x35\x37\
\x33\x32\x32\x2c\x33\x2e\x30\x30\x30\x39\x30\x36\x20\x4c\x20\x31\
\x32\x2e\x35\x35\x31\x39\x30\x34\x2c\x33\x2e\x31\x32\x36\x34\x36\
\x39\x37\x20\x4c\x20\x31\x32\x2e\x37\x34\x36\x34\x38\x36\x2c\x33\
\x2e\x32\x35\x32\x30\x33\x33\x35\x20\x4c\x20\x31\x32\x2e\x38\x34\
\x38\x36\x34\x38\x2c\x34\x2e\x36\x38\x31\x35\x36\x30\x33\x20\x43\
\x20\x31\x32\x2e\x39\x30\x35\x31\x38\x32\x2c\x35\x2e\x34\x36\x36\
\x33\x35\x31\x32\x20\x31\x32\x2e\x39\x39\x39\x33\x37\x31\x2c\x36\
\x2e\x32\x36\x31\x33\x34\x34\x33\x20\x31\x33\x2e\x30\x35\x37\x38\
\x32\x36\x2c\x36\x2e\x34\x34\x39\x31\x33\x36\x32\x20\x4c\x20\x31\
\x33\x2e\x31\x36\x34\x38\x34\x33\x2c\x36\x2e\x37\x38\x37\x31\x38\
\x35\x32\x20\x4c\x20\x31\x33\x2e\x35\x34\x34\x32\x37\x36\x2c\x36\
\x2e\x32\x39\x34\x35\x39\x30\x38\x20\x4c\x20\x31\x33\x2e\x39\x32\
\x33\x37\x32\x31\x2c\x35\x2e\x38\x30\x31\x39\x37\x33\x31\x20\x4c\
\x20\x31\x34\x2e\x35\x34\x31\x35\x32\x34\x2c\x35\x2e\x38\x37\x39\
\x32\x35\x37\x34\x20\x4c\x20\x31\x34\x2e\x36\x30\x34\x37\x36\x33\
\x2c\x35\x2e\x38\x38\x38\x39\x31\x38\x31\x20\x4c\x20\x31\x34\x2e\
\x36\x30\x34\x37\x36\x33\x2c\x33\x2e\x39\x33\x37\x38\x31\x35\x32\
\x20\x4c\x20\x31\x34\x2e\x35\x36\x35\x38\x35\x32\x2c\x33\x2e\x38\
\x33\x31\x35\x37\x32\x37\x20\x4c\x20\x31\x34\x2e\x32\x37\x38\x38\
\x33\x38\x2c\x34\x2e\x33\x34\x33\x34\x38\x37\x39\x20\x43\x20\x31\
\x34\x2e\x31\x32\x31\x32\x36\x39\x2c\x34\x2e\x36\x32\x35\x34\x38\
\x32\x20\x31\x33\x2e\x38\x31\x31\x34\x2c\x34\x2e\x39\x34\x37\x36\
\x30\x32\x37\x20\x31\x33\x2e\x35\x38\x38\x30\x36\x35\x2c\x35\x2e\
\x30\x35\x38\x32\x35\x31\x34\x20\x4c\x20\x31\x33\x2e\x31\x37\x39\
\x34\x33\x38\x2c\x35\x2e\x32\x36\x31\x30\x37\x35\x39\x20\x4c\x20\
\x31\x33\x2e\x30\x39\x31\x38\x37\x33\x2c\x33\x2e\x39\x35\x37\x31\
\x33\x36\x34\x20\x4c\x20\x31\x33\x2e\x30\x30\x34\x33\x30\x37\x2c\
\x32\x2e\x36\x35\x33\x31\x39\x36\x35\x20\x4c\x20\x31\x32\x2e\x37\
\x36\x35\x39\x34\x38\x2c\x32\x2e\x31\x37\x39\x39\x20\x4c\x20\x31\
\x32\x2e\x35\x32\x37\x35\x37\x37\x2c\x31\x2e\x37\x30\x36\x36\x32\
\x36\x37\x20\x4c\x20\x31\x31\x2e\x39\x37\x37\x38\x37\x37\x2c\x32\
\x2e\x37\x35\x39\x34\x33\x39\x32\x20\x4c\x20\x31\x31\x2e\x34\x32\
\x38\x31\x37\x37\x2c\x33\x2e\x38\x32\x31\x39\x31\x32\x20\x4c\x20\
\x31\x31\x2e\x34\x32\x38\x31\x37\x37\x2c\x34\x2e\x33\x36\x32\x38\
\x30\x39\x31\x20\x4c\x20\x31\x31\x2e\x34\x32\x33\x33\x31\x33\x2c\
\x34\x2e\x39\x30\x33\x37\x30\x36\x32\x20\x4c\x20\x31\x31\x2e\x31\
\x38\x39\x38\x31\x39\x2c\x34\x2e\x39\x30\x33\x37\x30\x36\x32\x20\
\x4c\x20\x31\x30\x2e\x39\x35\x36\x33\x31\x33\x2c\x34\x2e\x39\x30\
\x33\x37\x30\x36\x32\x20\x4c\x20\x31\x30\x2e\x39\x35\x36\x33\x31\
\x33\x2c\x34\x2e\x31\x32\x31\x33\x34\x32\x33\x20\x4c\x20\x31\x30\
\x2e\x39\x35\x36\x33\x31\x33\x2c\x33\x2e\x33\x33\x38\x39\x37\x38\
\x35\x20\x4c\x20\x31\x30\x2e\x37\x31\x37\x39\x35\x34\x2c\x33\x2e\
\x31\x35\x35\x34\x35\x31\x33\x20\x4c\x20\x31\x30\x2e\x34\x37\x34\
\x37\x31\x38\x2c\x32\x2e\x39\x37\x31\x39\x32\x34\x34\x20\x4c\x20\
\x31\x30\x2e\x32\x38\x39\x38\x36\x37\x2c\x33\x2e\x34\x35\x34\x38\
\x38\x31\x36\x20\x4c\x20\x31\x30\x2e\x31\x30\x30\x31\x35\x31\x2c\
\x33\x2e\x39\x33\x37\x38\x31\x35\x32\x20\x4c\x20\x39\x2e\x36\x37\
\x32\x30\x36\x33\x34\x2c\x34\x2e\x31\x35\x30\x33\x32\x33\x39\x20\
\x4c\x20\x39\x2e\x32\x34\x33\x39\x37\x36\x32\x2c\x34\x2e\x33\x35\
\x33\x31\x34\x38\x36\x20\x4c\x20\x39\x2e\x32\x34\x33\x39\x37\x36\
\x32\x2c\x34\x2e\x30\x30\x35\x34\x33\x39\x32\x20\x4c\x20\x39\x2e\
\x32\x34\x33\x39\x37\x36\x32\x2c\x33\x2e\x36\x34\x38\x30\x34\x35\
\x35\x20\x4c\x20\x38\x2e\x38\x36\x34\x35\x34\x33\x32\x2c\x33\x2e\
\x33\x36\x37\x39\x33\x36\x36\x20\x4c\x20\x38\x2e\x34\x38\x39\x39\
\x36\x33\x37\x2c\x33\x2e\x30\x37\x38\x31\x36\x37\x20\x4c\x20\x38\
\x2e\x34\x33\x36\x34\x35\x35\x38\x2c\x32\x2e\x32\x33\x37\x38\x36\
\x33\x33\x20\x4c\x20\x38\x2e\x33\x38\x37\x38\x31\x33\x32\x2c\x31\
\x2e\x33\x39\x37\x35\x33\x36\x32\x20\x4c\x20\x38\x2e\x31\x39\x33\
\x32\x33\x31\x34\x2c\x31\x2e\x32\x37\x31\x39\x37\x32\x34\x20\x4c\
\x20\x37\x2e\x39\x39\x38\x36\x34\x39\x34\x2c\x31\x2e\x31\x33\x36\
\x37\x34\x38\x32\x20\x7a\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x70\x61\x74\x68\x33\x34\x31\x32\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x6f\x70\x61\x63\x69\
\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x3a\x23\x66\x66\x30\x30\x30\
\x30\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\
\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x6e\x6f\x6e\x7a\x65\
\x72\x6f\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x32\x2e\x37\x30\
\x30\x30\x30\x30\x30\x34\x39\x39\x39\x39\x39\x39\x39\x38\x37\x3b\
\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x63\x61\x70\x3a\x73\
\x71\x75\x61\x72\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\
\x65\x6a\x6f\x69\x6e\x3a\x6d\x69\x74\x65\x72\x3b\x6d\x61\x72\x6b\
\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x73\
\x74\x61\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\
\x2d\x6d\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\
\x2d\x65\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x6d\x69\x74\x65\x72\x6c\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\
\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x6f\
\x66\x66\x73\x65\x74\x3a\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x76\x69\x73\x69\x62\x69\x6c\
\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\x65\x3b\x64\x69\x73\x70\
\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\x65\x3b\x6f\x76\x65\x72\x66\
\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\x65\x3b\x65\x6e\x61\x62\
\x6c\x65\x2d\x62\x61\x63\x6b\x67\x72\x6f\x75\x6e\x64\x3a\x61\x63\
\x63\x75\x6d\x75\x6c\x61\x74\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x64\x3d\x22\x4d\x20\x33\x2e\x39\x34\x36\x34\x33\x39\x37\
\x2c\x36\x2e\x37\x38\x36\x31\x38\x37\x36\x20\x43\x20\x33\x2e\x38\
\x37\x35\x37\x34\x38\x34\x2c\x36\x2e\x37\x38\x36\x31\x38\x37\x36\
\x20\x33\x2e\x37\x37\x33\x35\x38\x36\x2c\x37\x2e\x30\x38\x39\x37\
\x35\x32\x35\x20\x33\x2e\x37\x31\x37\x37\x39\x39\x36\x2c\x37\x2e\
\x34\x35\x36\x38\x37\x35\x38\x20\x4c\x20\x33\x2e\x36\x31\x35\x36\
\x34\x39\x32\x2c\x38\x2e\x31\x31\x37\x33\x37\x35\x36\x20\x4c\x20\
\x33\x2e\x33\x39\x31\x38\x37\x34\x37\x2c\x37\x2e\x37\x34\x31\x34\
\x30\x32\x37\x20\x4c\x20\x33\x2e\x31\x37\x32\x39\x36\x35\x35\x2c\
\x37\x2e\x33\x35\x35\x32\x34\x31\x34\x20\x4c\x20\x32\x2e\x39\x32\
\x34\x38\x37\x35\x37\x2c\x37\x2e\x37\x39\x32\x31\x39\x34\x39\x20\
\x4c\x20\x32\x2e\x36\x37\x36\x37\x37\x33\x39\x2c\x38\x2e\x32\x31\
\x38\x39\x38\x35\x33\x20\x4c\x20\x32\x2e\x35\x32\x35\x39\x38\x30\
\x39\x2c\x37\x2e\x36\x36\x30\x30\x39\x35\x31\x20\x4c\x20\x32\x2e\
\x33\x38\x30\x30\x34\x31\x35\x2c\x37\x2e\x31\x31\x31\x33\x36\x38\
\x33\x20\x4c\x20\x32\x2e\x31\x38\x35\x34\x35\x39\x36\x2c\x37\x2e\
\x31\x31\x31\x33\x36\x38\x33\x20\x4c\x20\x31\x2e\x39\x39\x35\x37\
\x33\x31\x32\x2c\x37\x2e\x31\x31\x31\x33\x36\x38\x33\x20\x4c\x20\
\x31\x2e\x37\x31\x38\x34\x36\x30\x36\x2c\x38\x2e\x30\x38\x36\x38\
\x38\x35\x33\x20\x4c\x20\x31\x2e\x36\x36\x30\x30\x37\x35\x33\x2c\
\x38\x2e\x33\x30\x30\x32\x39\x32\x38\x20\x4c\x20\x31\x2e\x36\x36\
\x30\x30\x37\x35\x33\x2c\x31\x30\x2e\x35\x32\x35\x36\x39\x20\x4c\
\x20\x31\x2e\x36\x37\x34\x36\x37\x31\x36\x2c\x31\x30\x2e\x35\x32\
\x35\x36\x39\x20\x4c\x20\x31\x2e\x38\x30\x36\x30\x31\x34\x37\x2c\
\x39\x2e\x34\x36\x38\x38\x36\x35\x38\x20\x4c\x20\x31\x2e\x39\x33\
\x37\x33\x35\x37\x38\x2c\x38\x2e\x34\x31\x32\x30\x36\x36\x20\x4c\
\x20\x32\x2e\x31\x35\x31\x34\x30\x31\x35\x2c\x38\x2e\x34\x31\x32\
\x30\x36\x36\x20\x4c\x20\x32\x2e\x33\x36\x30\x35\x37\x39\x37\x2c\
\x38\x2e\x34\x31\x32\x30\x36\x36\x20\x4c\x20\x32\x2e\x34\x35\x33\
\x30\x31\x31\x32\x2c\x38\x2e\x38\x39\x39\x38\x31\x32\x20\x4c\x20\
\x32\x2e\x35\x34\x30\x35\x36\x35\x34\x2c\x39\x2e\x33\x38\x37\x35\
\x38\x33\x31\x20\x4c\x20\x32\x2e\x38\x36\x31\x36\x33\x36\x38\x2c\
\x39\x2e\x33\x38\x37\x35\x38\x33\x31\x20\x4c\x20\x33\x2e\x31\x38\
\x32\x36\x39\x36\x34\x2c\x39\x2e\x33\x38\x37\x35\x38\x33\x31\x20\
\x4c\x20\x33\x2e\x33\x32\x38\x36\x33\x35\x38\x2c\x31\x30\x2e\x32\
\x30\x30\x35\x31\x20\x4c\x20\x33\x2e\x34\x37\x39\x34\x34\x30\x37\
\x2c\x31\x31\x2e\x30\x31\x33\x34\x36\x20\x4c\x20\x33\x2e\x37\x30\
\x33\x32\x30\x33\x33\x2c\x31\x31\x2e\x30\x31\x33\x34\x36\x20\x4c\
\x20\x33\x2e\x39\x33\x31\x38\x34\x33\x34\x2c\x31\x31\x2e\x30\x31\
\x33\x34\x36\x20\x4c\x20\x34\x2e\x30\x32\x39\x31\x34\x30\x32\x2c\
\x31\x31\x2e\x36\x36\x33\x37\x39\x38\x20\x4c\x20\x34\x2e\x31\x32\
\x36\x34\x32\x35\x32\x2c\x31\x32\x2e\x33\x31\x34\x31\x35\x38\x20\
\x4c\x20\x34\x2e\x33\x31\x36\x31\x34\x31\x37\x2c\x31\x32\x2e\x33\
\x31\x34\x31\x35\x38\x20\x4c\x20\x34\x2e\x35\x30\x31\x30\x30\x34\
\x37\x2c\x31\x32\x2e\x33\x31\x34\x31\x35\x38\x20\x4c\x20\x34\x2e\
\x37\x30\x30\x34\x35\x32\x2c\x31\x31\x2e\x36\x34\x33\x34\x37\x20\
\x4c\x20\x34\x2e\x38\x39\x39\x38\x39\x39\x33\x2c\x31\x30\x2e\x39\
\x38\x32\x39\x37\x31\x20\x4c\x20\x35\x2e\x31\x39\x31\x37\x37\x38\
\x32\x2c\x31\x31\x2e\x31\x37\x36\x30\x32\x37\x20\x4c\x20\x35\x2e\
\x34\x38\x33\x36\x34\x35\x31\x2c\x31\x31\x2e\x33\x36\x39\x31\x30\
\x38\x20\x4c\x20\x35\x2e\x36\x39\x32\x38\x32\x33\x34\x2c\x31\x30\
\x2e\x34\x37\x34\x38\x37\x33\x20\x4c\x20\x35\x2e\x38\x39\x37\x31\
\x33\x36\x32\x2c\x39\x2e\x35\x39\x30\x38\x32\x37\x32\x20\x4c\x20\
\x36\x2e\x33\x32\x30\x33\x35\x38\x31\x2c\x39\x2e\x33\x35\x37\x30\
\x39\x32\x37\x20\x4c\x20\x36\x2e\x37\x34\x33\x35\x38\x2c\x39\x2e\
\x31\x32\x33\x33\x38\x33\x31\x20\x4c\x20\x36\x2e\x38\x38\x39\x35\
\x31\x39\x34\x2c\x39\x2e\x34\x39\x39\x33\x35\x36\x31\x20\x43\x20\
\x36\x2e\x39\x37\x31\x38\x30\x34\x37\x2c\x39\x2e\x37\x30\x36\x34\
\x36\x37\x31\x20\x37\x2e\x30\x38\x38\x31\x35\x39\x38\x2c\x31\x30\
\x2e\x32\x37\x37\x30\x35\x38\x20\x37\x2e\x31\x34\x37\x33\x34\x30\
\x31\x2c\x31\x30\x2e\x37\x36\x39\x35\x36\x34\x20\x43\x20\x37\x2e\
\x32\x30\x36\x35\x32\x30\x35\x2c\x31\x31\x2e\x32\x36\x32\x30\x39\
\x35\x20\x37\x2e\x33\x32\x38\x31\x35\x36\x35\x2c\x31\x31\x2e\x37\
\x36\x39\x31\x30\x31\x20\x37\x2e\x34\x31\x39\x37\x35\x37\x33\x2c\
\x31\x31\x2e\x38\x38\x37\x33\x34\x34\x20\x4c\x20\x37\x2e\x35\x39\
\x30\x30\x32\x33\x38\x2c\x31\x32\x2e\x31\x30\x30\x37\x35\x20\x4c\
\x20\x37\x2e\x38\x31\x33\x37\x38\x36\x36\x2c\x31\x31\x2e\x33\x38\
\x39\x34\x33\x34\x20\x4c\x20\x38\x2e\x30\x33\x37\x35\x36\x31\x2c\
\x31\x30\x2e\x36\x38\x38\x32\x38\x20\x4c\x20\x38\x2e\x32\x33\x37\
\x30\x30\x38\x35\x2c\x31\x30\x2e\x36\x38\x38\x32\x38\x20\x4c\x20\
\x38\x2e\x34\x33\x36\x34\x35\x35\x38\x2c\x31\x30\x2e\x36\x38\x38\
\x32\x38\x20\x4c\x20\x38\x2e\x35\x39\x36\x39\x39\x31\x35\x2c\x31\
\x31\x2e\x36\x36\x33\x37\x39\x38\x20\x43\x20\x38\x2e\x36\x38\x36\
\x35\x32\x37\x34\x2c\x31\x32\x2e\x32\x30\x30\x33\x32\x37\x20\x38\
\x2e\x38\x30\x31\x35\x32\x39\x38\x2c\x31\x32\x2e\x36\x33\x39\x33\
\x31\x34\x20\x38\x2e\x38\x34\x39\x39\x34\x36\x39\x2c\x31\x32\x2e\
\x36\x33\x39\x33\x31\x34\x20\x43\x20\x38\x2e\x38\x39\x38\x33\x37\
\x35\x38\x2c\x31\x32\x2e\x36\x33\x39\x33\x31\x34\x20\x39\x2e\x30\
\x39\x36\x32\x38\x30\x34\x2c\x31\x32\x2e\x34\x35\x36\x34\x32\x32\
\x20\x39\x2e\x32\x38\x37\x37\x36\x35\x31\x2c\x31\x32\x2e\x32\x33\
\x32\x38\x35\x20\x43\x20\x39\x2e\x34\x37\x39\x32\x33\x37\x39\x2c\
\x31\x32\x2e\x30\x30\x39\x33\x30\x35\x20\x39\x2e\x37\x35\x39\x31\
\x31\x39\x32\x2c\x31\x31\x2e\x36\x32\x33\x31\x36\x38\x20\x39\x2e\
\x39\x31\x30\x34\x33\x34\x33\x2c\x31\x31\x2e\x33\x36\x39\x31\x30\
\x38\x20\x4c\x20\x31\x30\x2e\x31\x38\x32\x38\x35\x31\x2c\x31\x30\
\x2e\x39\x30\x31\x36\x36\x34\x20\x4c\x20\x31\x30\x2e\x36\x34\x34\
\x39\x38\x34\x2c\x31\x31\x2e\x38\x31\x36\x32\x32\x34\x20\x4c\x20\
\x31\x31\x2e\x31\x30\x32\x32\x35\x33\x2c\x31\x32\x2e\x37\x34\x30\
\x39\x34\x38\x20\x4c\x20\x31\x31\x2e\x33\x33\x30\x38\x39\x33\x2c\
\x31\x32\x2e\x33\x33\x34\x34\x36\x20\x4c\x20\x31\x31\x2e\x35\x36\
\x34\x33\x38\x37\x2c\x31\x31\x2e\x39\x33\x38\x31\x36\x20\x4c\x20\
\x31\x31\x2e\x38\x37\x35\x37\x32\x37\x2c\x31\x32\x2e\x31\x34\x31\
\x34\x30\x35\x20\x4c\x20\x31\x32\x2e\x31\x38\x37\x30\x35\x36\x2c\
\x31\x32\x2e\x33\x34\x34\x36\x32\x34\x20\x4c\x20\x31\x32\x2e\x35\
\x31\x37\x38\x34\x36\x2c\x31\x31\x2e\x36\x35\x33\x36\x33\x35\x20\
\x4c\x20\x31\x32\x2e\x38\x35\x33\x35\x31\x34\x2c\x31\x30\x2e\x39\
\x35\x32\x34\x38\x31\x20\x4c\x20\x31\x33\x2e\x32\x36\x37\x30\x30\
\x35\x2c\x31\x31\x2e\x31\x37\x36\x30\x32\x37\x20\x43\x20\x31\x33\
\x2e\x34\x39\x35\x30\x32\x38\x2c\x31\x31\x2e\x32\x39\x37\x31\x32\
\x31\x20\x31\x33\x2e\x39\x32\x35\x36\x36\x36\x2c\x31\x31\x2e\x34\
\x34\x31\x32\x36\x39\x20\x31\x34\x2e\x32\x32\x35\x33\x31\x38\x2c\
\x31\x31\x2e\x35\x30\x31\x32\x30\x37\x20\x4c\x20\x31\x34\x2e\x36\
\x30\x34\x37\x36\x33\x2c\x31\x31\x2e\x35\x38\x32\x35\x31\x34\x20\
\x4c\x20\x31\x34\x2e\x36\x30\x34\x37\x36\x33\x2c\x31\x30\x2e\x36\
\x38\x38\x32\x38\x20\x4c\x20\x31\x33\x2e\x37\x38\x32\x36\x34\x36\
\x2c\x31\x30\x2e\x35\x32\x35\x36\x39\x20\x4c\x20\x31\x32\x2e\x38\
\x33\x38\x39\x31\x38\x2c\x31\x30\x2e\x33\x34\x32\x37\x37\x33\x20\
\x4c\x20\x31\x32\x2e\x35\x32\x32\x37\x31\x32\x2c\x31\x30\x2e\x37\
\x34\x39\x32\x33\x37\x20\x4c\x20\x31\x32\x2e\x32\x31\x31\x33\x38\
\x33\x2c\x31\x31\x2e\x31\x35\x35\x37\x32\x35\x20\x4c\x20\x31\x31\
\x2e\x39\x37\x33\x30\x31\x32\x2c\x31\x30\x2e\x35\x31\x35\x35\x32\
\x38\x20\x4c\x20\x31\x31\x2e\x37\x33\x34\x36\x35\x33\x2c\x39\x2e\
\x38\x37\x35\x33\x35\x34\x31\x20\x4c\x20\x31\x31\x2e\x35\x30\x36\
\x30\x31\x33\x2c\x31\x30\x2e\x34\x39\x35\x32\x30\x31\x20\x43\x20\
\x31\x31\x2e\x33\x38\x30\x36\x37\x34\x2c\x31\x30\x2e\x38\x33\x33\
\x35\x34\x33\x20\x31\x31\x2e\x32\x35\x33\x36\x33\x39\x2c\x31\x31\
\x2e\x32\x37\x32\x35\x33\x31\x20\x31\x31\x2e\x32\x31\x38\x39\x39\
\x39\x2c\x31\x31\x2e\x34\x37\x30\x37\x31\x38\x20\x4c\x20\x31\x31\
\x2e\x31\x35\x35\x37\x36\x2c\x31\x31\x2e\x38\x32\x36\x33\x38\x37\
\x20\x4c\x20\x31\x30\x2e\x36\x39\x33\x36\x32\x37\x2c\x31\x30\x2e\
\x39\x32\x31\x39\x39\x31\x20\x4c\x20\x31\x30\x2e\x32\x33\x31\x34\
\x39\x34\x2c\x31\x30\x2e\x30\x31\x37\x36\x31\x37\x20\x4c\x20\x39\
\x2e\x39\x36\x38\x38\x30\x37\x37\x2c\x31\x30\x2e\x32\x33\x31\x20\
\x4c\x20\x39\x2e\x37\x30\x36\x31\x32\x31\x35\x2c\x31\x30\x2e\x34\
\x33\x34\x32\x34\x34\x20\x4c\x20\x39\x2e\x34\x37\x37\x34\x38\x31\
\x36\x2c\x31\x30\x2e\x30\x33\x37\x39\x32\x20\x4c\x20\x39\x2e\x32\
\x34\x33\x39\x37\x36\x32\x2c\x39\x2e\x36\x33\x31\x34\x35\x36\x31\
\x20\x4c\x20\x39\x2e\x30\x33\x39\x36\x36\x33\x34\x2c\x39\x2e\x39\
\x38\x37\x31\x32\x37\x32\x20\x4c\x20\x38\x2e\x38\x33\x30\x34\x38\
\x35\x31\x2c\x31\x30\x2e\x33\x34\x32\x37\x37\x33\x20\x4c\x20\x38\
\x2e\x36\x35\x35\x33\x36\x34\x39\x2c\x39\x2e\x39\x37\x36\x39\x36\
\x33\x36\x20\x4c\x20\x38\x2e\x34\x37\x35\x33\x37\x39\x34\x2c\x39\
\x2e\x36\x30\x30\x39\x39\x30\x36\x20\x4c\x20\x38\x2e\x30\x34\x32\
\x34\x32\x36\x35\x2c\x31\x30\x2e\x30\x30\x37\x34\x35\x34\x20\x4c\
\x20\x37\x2e\x36\x31\x34\x33\x33\x39\x31\x2c\x31\x30\x2e\x34\x32\
\x34\x30\x38\x31\x20\x4c\x20\x37\x2e\x34\x35\x33\x38\x31\x35\x34\
\x2c\x39\x2e\x38\x35\x35\x30\x32\x37\x31\x20\x43\x20\x37\x2e\x33\
\x36\x37\x35\x35\x34\x37\x2c\x39\x2e\x35\x34\x31\x37\x39\x34\x38\
\x20\x37\x2e\x31\x38\x35\x30\x34\x31\x34\x2c\x39\x2e\x30\x33\x34\
\x39\x33\x36\x33\x20\x37\x2e\x30\x34\x35\x31\x38\x39\x38\x2c\x38\
\x2e\x37\x32\x37\x30\x38\x33\x32\x20\x4c\x20\x36\x2e\x37\x39\x32\
\x32\x32\x32\x36\x2c\x38\x2e\x31\x35\x38\x30\x32\x39\x35\x20\x4c\
\x20\x36\x2e\x33\x39\x33\x33\x32\x37\x38\x2c\x38\x2e\x33\x32\x30\
\x35\x39\x34\x39\x20\x4c\x20\x35\x2e\x39\x39\x34\x34\x33\x33\x2c\
\x38\x2e\x34\x38\x33\x31\x38\x35\x33\x20\x4c\x20\x35\x2e\x37\x32\
\x36\x38\x38\x31\x35\x2c\x39\x2e\x30\x39\x32\x38\x39\x32\x38\x20\
\x4c\x20\x35\x2e\x34\x35\x39\x33\x32\x39\x38\x2c\x39\x2e\x37\x31\
\x32\x37\x36\x33\x38\x20\x4c\x20\x35\x2e\x31\x31\x33\x39\x34\x33\
\x31\x2c\x39\x2e\x37\x31\x32\x37\x36\x33\x38\x20\x4c\x20\x34\x2e\
\x37\x36\x33\x36\x39\x30\x39\x2c\x39\x2e\x37\x31\x32\x37\x36\x33\
\x38\x20\x4c\x20\x34\x2e\x36\x37\x31\x32\x35\x39\x34\x2c\x31\x30\
\x2e\x32\x32\x30\x38\x33\x37\x20\x4c\x20\x34\x2e\x35\x37\x38\x38\
\x33\x39\x38\x2c\x31\x30\x2e\x37\x32\x38\x39\x33\x35\x20\x4c\x20\
\x34\x2e\x34\x31\x38\x33\x30\x34\x2c\x31\x30\x2e\x35\x32\x35\x36\
\x39\x20\x4c\x20\x34\x2e\x32\x36\x32\x36\x33\x33\x38\x2c\x31\x30\
\x2e\x33\x32\x32\x34\x34\x36\x20\x4c\x20\x34\x2e\x32\x36\x32\x36\
\x33\x33\x38\x2c\x39\x2e\x30\x37\x32\x35\x36\x35\x38\x20\x43\x20\
\x34\x2e\x32\x36\x32\x36\x33\x33\x38\x2c\x38\x2e\x33\x38\x32\x33\
\x36\x38\x39\x20\x34\x2e\x32\x32\x32\x31\x37\x39\x34\x2c\x37\x2e\
\x35\x38\x37\x33\x33\x39\x38\x20\x34\x2e\x31\x37\x30\x32\x31\x34\
\x32\x2c\x37\x2e\x33\x30\x34\x34\x34\x39\x20\x43\x20\x34\x2e\x31\
\x31\x38\x32\x33\x37\x31\x2c\x37\x2e\x30\x32\x31\x35\x33\x33\x34\
\x20\x34\x2e\x30\x31\x37\x31\x33\x30\x39\x2c\x36\x2e\x37\x38\x36\
\x31\x38\x37\x36\x20\x33\x2e\x39\x34\x36\x34\x33\x39\x37\x2c\x36\
\x2e\x37\x38\x36\x31\x38\x37\x36\x20\x7a\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x65\x63\x74\x33\x33\x38\x37\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\
\x69\x6c\x6c\x3a\x6e\x6f\x6e\x65\x3b\x66\x69\x6c\x6c\x2d\x72\x75\
\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\x73\x74\x72\x6f\x6b\
\x65\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x77\x69\x64\x74\x68\x3a\x30\x2e\x39\x38\x35\x39\x37\x32\x38\
\x31\x39\x39\x39\x39\x39\x39\x39\x39\x37\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6c\x69\x6e\x65\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\
\x3a\x6d\x69\x74\x65\x72\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\
\x74\x65\x72\x6c\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x64\x61\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\x20\
\x31\x2e\x34\x39\x32\x39\x38\x36\x35\x2c\x31\x2e\x34\x39\x32\x39\
\x38\x36\x31\x20\x4c\x20\x31\x2e\x34\x39\x32\x39\x38\x36\x35\x2c\
\x31\x34\x2e\x35\x30\x37\x30\x31\x33\x20\x4c\x20\x31\x34\x2e\x35\
\x30\x37\x30\x31\x33\x2c\x31\x34\x2e\x35\x30\x37\x30\x31\x33\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\
\x68\x33\x33\x38\x35\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\
\x3e\x0d\x0a\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x0a\x69\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\
\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\x74\x73\
\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\
\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\
\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x72\
\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\
\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\x32\x32\
\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\x23\x22\
\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\
\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\
\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\
\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\x6f\x72\
\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\x69\x70\
\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\x20\x78\
\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\x22\x68\
\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\x63\x65\
\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\x20\
\x77\x69\x64\x74\x68\x3d\x22\x31\x36\x70\x78\x22\x0d\x0a\x20\x20\
\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x36\x70\x78\x22\x0d\x0a\
\x20\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x33\x32\x39\x37\x22\x0d\
\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\
\x3d\x22\x30\x2e\x34\x36\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\x61\x6d\x65\x3d\x22\x73\x63\
\x6f\x70\x65\x2e\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\x70\x75\x74\x5f\x65\x78\x74\
\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\x72\x67\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\x75\x74\x2e\x73\x76\x67\x2e\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x3e\x0d\x0a\x20\x20\x3c\x64\
\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x64\x65\
\x66\x73\x33\x32\x39\x39\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\
\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\
\x5f\x78\x3d\x22\x30\x20\x3a\x20\x38\x20\x3a\x20\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\
\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x36\x20\x3a\x20\
\x38\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\
\x6f\x72\x69\x67\x69\x6e\x3d\x22\x38\x20\x3a\x20\x35\x2e\x33\x33\
\x33\x33\x33\x33\x33\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\
\x76\x65\x33\x33\x30\x35\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\
\x64\x65\x66\x73\x3e\x0d\x0a\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x66\
\x66\x66\x66\x66\x66\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\
\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\x36\x36\x36\x36\
\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x6f\
\x70\x61\x63\x69\x74\x79\x3d\x22\x31\x2e\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\
\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\x30\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\
\x65\x73\x68\x61\x64\x6f\x77\x3d\x22\x32\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\
\x22\x32\x32\x2e\x31\x39\x37\x38\x30\x32\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x78\x3d\x22\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x79\x3d\x22\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\
\x61\x79\x65\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x74\x72\
\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x67\x72\x69\x64\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\
\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\
\x73\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x73\x6e\x61\x70\x2d\x62\x62\x6f\x78\x3d\
\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\x63\x74\x2d\x70\x61\x74\
\x68\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\x63\x74\x2d\
\x6e\x6f\x64\x65\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x6f\x62\x6a\x65\x63\x74\x74\x6f\x6c\x65\x72\x61\x6e\
\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x67\x72\
\x69\x64\x74\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\x31\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x67\x75\x69\x64\x65\x74\x6f\x6c\x65\
\x72\x61\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x73\x6e\x61\x70\x2d\x67\
\x6c\x6f\x62\x61\x6c\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x75\x69\x64\x65\x73\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x67\x75\x69\x64\x65\x2d\x62\x62\x6f\x78\x3d\
\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\
\x74\x68\x3d\x22\x36\x34\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\
\x65\x69\x67\x68\x74\x3d\x22\x37\x36\x33\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\
\x77\x2d\x78\x3d\x22\x33\x38\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\
\x79\x3d\x22\x34\x34\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x74\x79\x70\x65\x3d\x22\x78\x79\x67\x72\x69\x64\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x72\
\x69\x64\x33\x33\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x76\x69\x73\x69\x62\x6c\x65\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x65\x6e\x61\x62\x6c\x65\x64\x3d\x22\
\x74\x72\x75\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\
\x3e\x0d\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\x0d\x0a\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\
\x61\x33\x33\x30\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x64\
\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\
\x63\x3a\x57\x6f\x72\x6b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\x22\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x66\x6f\x72\x6d\
\x61\x74\x3e\x69\x6d\x61\x67\x65\x2f\x73\x76\x67\x2b\x78\x6d\x6c\
\x3c\x2f\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x79\x70\x65\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\
\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x64\x63\x6d\x69\
\x74\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\x61\x67\x65\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\
\x57\x6f\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\
\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\
\x61\x74\x61\x3e\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\
\x6c\x3d\x22\x4c\x61\x79\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\
\x6d\x6f\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x6e\x6f\x6e\
\x65\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\
\x6f\x64\x64\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x23\x66\x66\x30\x30\
\x30\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\
\x31\x70\x78\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x63\
\x61\x70\x3a\x62\x75\x74\x74\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\
\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x6d\x69\x74\x65\x72\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\x20\x31\x2e\x32\
\x31\x36\x33\x33\x36\x36\x2c\x37\x2e\x31\x37\x30\x32\x39\x36\x36\
\x20\x43\x20\x37\x2e\x31\x31\x32\x38\x37\x30\x35\x2c\x32\x35\x2e\
\x33\x33\x34\x30\x32\x34\x20\x34\x2e\x39\x33\x34\x34\x37\x32\x35\
\x2c\x32\x2e\x31\x37\x38\x32\x39\x32\x37\x20\x37\x2e\x38\x30\x32\
\x37\x39\x30\x37\x2c\x31\x2e\x33\x32\x38\x35\x33\x20\x43\x20\x31\
\x30\x2e\x36\x37\x31\x31\x30\x39\x2c\x30\x2e\x34\x37\x38\x37\x36\
\x37\x32\x39\x20\x39\x2e\x34\x33\x36\x39\x33\x39\x32\x2c\x32\x35\
\x2e\x38\x34\x34\x35\x30\x35\x20\x31\x34\x2e\x30\x31\x30\x33\x39\
\x37\x2c\x36\x2e\x38\x39\x39\x39\x39\x39\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\x68\x33\x33\x31\
\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\
\x6f\x64\x69\x3a\x6e\x6f\x64\x65\x74\x79\x70\x65\x73\x3d\x22\x63\
\x7a\x63\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\
\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x19\xca\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\
\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\
\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\
\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\
\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x35\x31\x32\x22\x0d\x0a\x20\
\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x35\x31\x32\x22\x0d\x0a\
\x20\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x33\x32\x39\x37\x22\x0d\
\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\
\x3d\x22\x30\x2e\x34\x37\x20\x72\x32\x32\x35\x38\x33\x22\x0d\x0a\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\
\x61\x6d\x65\x3d\x22\x61\x62\x6f\x75\x74\x2e\x73\x76\x67\x22\x0d\
\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\
\x70\x75\x74\x5f\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\
\x72\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\
\x75\x74\x2e\x73\x76\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\
\x0d\x0a\x20\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x31\x22\x3e\x0d\x0a\x20\x20\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x64\x65\x66\x73\x33\x32\x39\x39\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\
\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\
\x73\x70\x33\x64\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\
\x20\x38\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\
\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\
\x5f\x7a\x3d\x22\x31\x36\x20\x3a\x20\x38\x20\x3a\x20\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\
\x22\x38\x20\x3a\x20\x35\x2e\x33\x33\x33\x33\x33\x33\x33\x20\x3a\
\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x33\x33\x30\x35\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0d\x0a\
\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\
\x64\x76\x69\x65\x77\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x62\x61\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x70\x61\x67\x65\
\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x37\x62\x36\x34\x36\x34\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\
\x72\x3d\x22\x23\x36\x36\x36\x36\x36\x36\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x62\x6f\x72\x64\x65\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\
\x22\x31\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\x79\
\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\x77\x3d\x22\
\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x31\x2e\x30\x30\x37\x38\x31\x32\
\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x63\x78\x3d\x22\x32\x35\x36\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x79\x3d\x22\x32\x35\
\x30\x2e\x38\x34\x30\x33\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\
\x6c\x61\x79\x65\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x74\
\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x67\x72\x69\x64\x2d\x62\x62\x6f\x78\x3d\x22\x74\
\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\
\x74\x73\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x73\x6e\x61\x70\x2d\x62\x62\x6f\x78\
\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\x63\x74\x2d\x70\x61\
\x74\x68\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\x63\x74\
\x2d\x6e\x6f\x64\x65\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x6f\x62\x6a\x65\x63\x74\x74\x6f\x6c\x65\x72\x61\
\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x67\
\x72\x69\x64\x74\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x67\x75\x69\x64\x65\x74\x6f\x6c\
\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x73\x6e\x61\x70\x2d\
\x67\x6c\x6f\x62\x61\x6c\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x75\x69\x64\x65\x73\x3d\
\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x67\x75\x69\x64\x65\x2d\x62\x62\x6f\x78\
\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\
\x64\x74\x68\x3d\x22\x31\x32\x38\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\
\x2d\x68\x65\x69\x67\x68\x74\x3d\x22\x37\x37\x38\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\
\x64\x6f\x77\x2d\x78\x3d\x22\x2d\x38\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\
\x2d\x79\x3d\x22\x2d\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\
\x78\x69\x6d\x69\x7a\x65\x64\x3d\x22\x31\x22\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x79\x70\x65\x3d\x22\x78\
\x79\x67\x72\x69\x64\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x67\x72\x69\x64\x33\x33\x30\x37\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x76\x69\x73\x69\x62\x6c\x65\x3d\x22\x74\x72\
\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x65\x6e\x61\x62\
\x6c\x65\x64\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x65\x6d\x70\x73\x70\x61\x63\x69\x6e\x67\x3d\x22\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6e\x61\x70\x76\x69\
\x73\x69\x62\x6c\x65\x67\x72\x69\x64\x6c\x69\x6e\x65\x73\x6f\x6e\
\x6c\x79\x3d\x22\x74\x72\x75\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x3c\x2f\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\
\x76\x69\x65\x77\x3e\x0d\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\
\x74\x61\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\
\x61\x64\x61\x74\x61\x33\x33\x30\x32\x22\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\
\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\
\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\x65\x2f\x73\x76\x67\
\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x79\
\x70\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\
\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\
\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\
\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\
\x61\x67\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\x72\x6b\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\
\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x3e\x0d\x0a\
\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\
\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\x22\x4c\x61\x79\
\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\x6f\x64\x65\x3d\x22\
\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\x20\x20\x74\x72\x61\
\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\
\x65\x28\x30\x2c\x34\x39\x36\x29\x22\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x6f\x66\x66\x73\x65\x74\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\
\x61\x64\x69\x75\x73\x3d\x22\x32\x34\x2e\x39\x38\x33\x36\x37\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x6f\x72\x69\x67\x69\x6e\x61\x6c\x3d\x22\x4d\x20\x32\
\x35\x35\x2e\x33\x34\x33\x37\x35\x20\x2d\x34\x35\x36\x2e\x34\x30\
\x36\x32\x35\x20\x43\x20\x32\x35\x30\x2e\x35\x38\x39\x32\x20\x2d\
\x34\x35\x36\x2e\x34\x30\x35\x38\x35\x20\x32\x34\x36\x2e\x31\x38\
\x36\x30\x32\x20\x2d\x34\x35\x35\x2e\x33\x36\x30\x39\x33\x20\x32\
\x34\x32\x2e\x31\x32\x35\x20\x2d\x34\x35\x33\x2e\x32\x38\x31\x32\
\x35\x20\x43\x20\x32\x33\x38\x2e\x30\x36\x33\x38\x32\x20\x2d\x34\
\x35\x31\x2e\x32\x30\x30\x37\x38\x20\x32\x33\x34\x2e\x34\x35\x30\
\x38\x32\x20\x2d\x34\x34\x38\x2e\x33\x32\x30\x37\x35\x20\x32\x33\
\x31\x2e\x32\x38\x31\x32\x35\x20\x2d\x34\x34\x34\x2e\x36\x35\x36\
\x32\x35\x20\x43\x20\x32\x32\x38\x2e\x31\x31\x31\x35\x35\x20\x2d\
\x34\x34\x30\x2e\x39\x39\x30\x39\x36\x20\x32\x32\x35\x2e\x36\x32\
\x36\x36\x31\x20\x2d\x34\x33\x36\x2e\x36\x37\x30\x39\x33\x20\x32\
\x32\x33\x2e\x38\x34\x33\x37\x35\x20\x2d\x34\x33\x31\x2e\x37\x31\
\x38\x37\x35\x20\x43\x20\x32\x32\x32\x2e\x30\x36\x30\x37\x37\x20\
\x2d\x34\x32\x36\x2e\x37\x36\x35\x38\x31\x20\x32\x32\x31\x2e\x31\
\x35\x36\x31\x39\x20\x2d\x34\x32\x31\x2e\x35\x34\x36\x35\x20\x32\
\x32\x31\x2e\x31\x35\x36\x32\x35\x20\x2d\x34\x31\x36\x20\x43\x20\
\x32\x32\x31\x2e\x31\x35\x36\x31\x39\x20\x2d\x34\x30\x36\x2e\x38\
\x38\x36\x39\x33\x20\x32\x32\x33\x2e\x31\x30\x35\x36\x39\x20\x2d\
\x33\x39\x39\x2e\x38\x32\x37\x32\x32\x20\x32\x32\x36\x2e\x39\x36\
\x38\x37\x35\x20\x2d\x33\x39\x34\x2e\x38\x37\x35\x20\x43\x20\x32\
\x33\x30\x2e\x38\x33\x31\x36\x38\x20\x2d\x33\x38\x39\x2e\x39\x32\
\x32\x31\x20\x32\x33\x37\x2e\x32\x31\x30\x33\x31\x20\x2d\x33\x38\
\x37\x2e\x34\x36\x38\x34\x32\x20\x32\x34\x36\x2e\x31\x32\x35\x20\
\x2d\x33\x38\x37\x2e\x34\x36\x38\x37\x35\x20\x43\x20\x32\x35\x31\
\x2e\x30\x37\x37\x34\x38\x20\x2d\x33\x38\x37\x2e\x34\x36\x38\x34\
\x32\x20\x32\x35\x35\x2e\x36\x35\x32\x32\x36\x20\x2d\x33\x38\x38\
\x2e\x35\x33\x39\x32\x39\x20\x32\x35\x39\x2e\x38\x31\x32\x35\x20\
\x2d\x33\x39\x30\x2e\x37\x31\x38\x37\x35\x20\x43\x20\x32\x36\x33\
\x2e\x39\x37\x32\x35\x35\x20\x2d\x33\x39\x32\x2e\x38\x39\x37\x35\
\x34\x20\x32\x36\x37\x2e\x35\x38\x35\x35\x36\x20\x2d\x33\x39\x35\
\x2e\x38\x33\x34\x37\x36\x20\x32\x37\x30\x2e\x36\x35\x36\x32\x35\
\x20\x2d\x33\x39\x39\x2e\x35\x20\x43\x20\x32\x37\x33\x2e\x37\x32\
\x36\x37\x33\x20\x2d\x34\x30\x33\x2e\x31\x36\x34\x35\x35\x20\x32\
\x37\x36\x2e\x31\x35\x34\x34\x37\x20\x2d\x34\x30\x37\x2e\x34\x35\
\x33\x33\x33\x20\x32\x37\x37\x2e\x39\x33\x37\x35\x20\x2d\x34\x31\
\x32\x2e\x34\x30\x36\x32\x35\x20\x43\x20\x32\x37\x39\x2e\x37\x32\
\x30\x33\x31\x20\x2d\x34\x31\x37\x2e\x33\x35\x38\x34\x35\x20\x32\
\x38\x30\x2e\x35\x39\x33\x36\x33\x20\x2d\x34\x32\x32\x2e\x36\x30\
\x39\x30\x31\x20\x32\x38\x30\x2e\x35\x39\x33\x37\x35\x20\x2d\x34\
\x32\x38\x2e\x31\x35\x36\x32\x35\x20\x43\x20\x32\x38\x30\x2e\x35\
\x39\x33\x36\x33\x20\x2d\x34\x34\x36\x2e\x39\x37\x35\x36\x20\x32\
\x37\x32\x2e\x31\x38\x32\x33\x36\x20\x2d\x34\x35\x36\x2e\x34\x30\
\x35\x38\x35\x20\x32\x35\x35\x2e\x33\x34\x33\x37\x35\x20\x2d\x34\
\x35\x36\x2e\x34\x30\x36\x32\x35\x20\x7a\x20\x4d\x20\x32\x36\x31\
\x2e\x35\x39\x33\x37\x35\x20\x2d\x33\x33\x38\x2e\x37\x31\x38\x37\
\x35\x20\x43\x20\x32\x35\x36\x2e\x34\x34\x32\x39\x39\x20\x2d\x33\
\x33\x36\x2e\x33\x34\x31\x32\x34\x20\x32\x35\x30\x2e\x37\x39\x37\
\x33\x34\x20\x2d\x33\x33\x33\x2e\x39\x37\x30\x37\x20\x32\x34\x34\
\x2e\x36\x35\x36\x32\x35\x20\x2d\x33\x33\x31\x2e\x35\x39\x33\x37\
\x35\x20\x43\x20\x32\x33\x38\x2e\x35\x31\x35\x20\x2d\x33\x32\x39\
\x2e\x32\x31\x36\x32\x34\x20\x32\x33\x32\x2e\x30\x37\x39\x31\x37\
\x20\x2d\x33\x32\x36\x2e\x39\x38\x36\x30\x35\x20\x32\x32\x35\x2e\
\x33\x34\x33\x37\x35\x20\x2d\x33\x32\x34\x2e\x39\x30\x36\x32\x35\
\x20\x43\x20\x32\x31\x38\x2e\x36\x30\x38\x32\x31\x20\x2d\x33\x32\
\x32\x2e\x38\x32\x35\x39\x20\x32\x31\x31\x2e\x38\x30\x33\x32\x34\
\x20\x2d\x33\x32\x30\x2e\x39\x33\x33\x36\x20\x32\x30\x34\x2e\x39\
\x36\x38\x37\x35\x20\x2d\x33\x31\x39\x2e\x32\x35\x20\x43\x20\x31\
\x39\x38\x2e\x31\x33\x34\x31\x38\x20\x2d\x33\x31\x37\x2e\x35\x36\
\x35\x38\x36\x20\x31\x39\x31\x2e\x36\x34\x31\x31\x35\x20\x2d\x33\
\x31\x36\x2e\x31\x32\x35\x38\x35\x20\x31\x38\x35\x2e\x35\x20\x2d\
\x33\x31\x34\x2e\x39\x33\x37\x35\x20\x4c\x20\x31\x38\x35\x2e\x35\
\x20\x2d\x33\x30\x33\x2e\x30\x36\x32\x35\x20\x43\x20\x31\x39\x35\
\x2e\x39\x39\x39\x34\x31\x20\x2d\x33\x30\x32\x2e\x30\x37\x31\x37\
\x34\x20\x32\x30\x34\x2e\x30\x37\x32\x37\x39\x20\x2d\x33\x30\x30\
\x2e\x38\x30\x33\x33\x32\x20\x32\x30\x39\x2e\x37\x31\x38\x37\x35\
\x20\x2d\x32\x39\x39\x2e\x32\x31\x38\x37\x35\x20\x43\x20\x32\x31\
\x35\x2e\x33\x36\x34\x36\x32\x20\x2d\x32\x39\x37\x2e\x36\x33\x33\
\x36\x39\x20\x32\x31\x39\x2e\x34\x38\x37\x31\x31\x20\x2d\x32\x39\
\x35\x2e\x30\x39\x31\x35\x35\x20\x32\x32\x32\x2e\x30\x36\x32\x35\
\x20\x2d\x32\x39\x31\x2e\x36\x32\x35\x20\x43\x20\x32\x32\x34\x2e\
\x36\x33\x37\x37\x37\x20\x2d\x32\x38\x38\x2e\x31\x35\x37\x39\x37\
\x20\x32\x32\x36\x2e\x31\x33\x34\x39\x38\x20\x2d\x32\x38\x33\x2e\
\x33\x30\x32\x35\x20\x32\x32\x36\x2e\x35\x33\x31\x32\x35\x20\x2d\
\x32\x37\x37\x2e\x30\x36\x32\x35\x20\x43\x20\x32\x32\x36\x2e\x39\
\x32\x37\x33\x39\x20\x2d\x32\x37\x30\x2e\x38\x32\x32\x30\x35\x20\
\x32\x32\x37\x2e\x31\x32\x34\x39\x34\x20\x2d\x32\x36\x32\x2e\x36\
\x36\x35\x35\x32\x20\x32\x32\x37\x2e\x31\x32\x35\x20\x2d\x32\x35\
\x32\x2e\x35\x36\x32\x35\x20\x4c\x20\x32\x32\x37\x2e\x31\x32\x35\
\x20\x2d\x38\x34\x2e\x33\x37\x35\x20\x43\x20\x32\x32\x37\x2e\x31\
\x32\x34\x39\x34\x20\x2d\x38\x31\x2e\x36\x30\x31\x35\x33\x36\x20\
\x32\x32\x33\x2e\x35\x33\x37\x38\x38\x20\x2d\x37\x38\x2e\x35\x38\
\x31\x31\x36\x37\x20\x32\x31\x36\x2e\x34\x30\x36\x32\x35\x20\x2d\
\x37\x35\x2e\x33\x31\x32\x35\x20\x43\x20\x32\x30\x39\x2e\x32\x37\
\x34\x35\x31\x20\x2d\x37\x32\x2e\x30\x34\x33\x37\x38\x39\x20\x31\
\x39\x38\x2e\x39\x37\x30\x39\x34\x20\x2d\x36\x39\x2e\x30\x32\x33\
\x34\x32\x20\x31\x38\x35\x2e\x35\x20\x2d\x36\x36\x2e\x32\x35\x20\
\x4c\x20\x31\x38\x35\x2e\x35\x20\x2d\x35\x33\x2e\x34\x36\x38\x37\
\x35\x20\x4c\x20\x33\x31\x33\x2e\x32\x38\x31\x32\x35\x20\x2d\x35\
\x33\x2e\x34\x36\x38\x37\x35\x20\x4c\x20\x33\x31\x33\x2e\x32\x38\
\x31\x32\x35\x20\x2d\x36\x36\x2e\x32\x35\x20\x43\x20\x32\x39\x38\
\x2e\x38\x31\x39\x36\x33\x20\x2d\x36\x39\x2e\x30\x32\x33\x34\x32\
\x20\x32\x38\x38\x2e\x32\x36\x31\x33\x31\x20\x2d\x37\x32\x2e\x31\
\x32\x36\x39\x33\x36\x20\x32\x38\x31\x2e\x36\x32\x35\x20\x2d\x37\
\x35\x2e\x35\x39\x33\x37\x35\x20\x43\x20\x32\x37\x34\x2e\x39\x38\
\x38\x34\x35\x20\x2d\x37\x39\x2e\x30\x36\x30\x35\x31\x39\x20\x32\
\x37\x31\x2e\x36\x38\x37\x33\x39\x20\x2d\x38\x31\x2e\x39\x39\x37\
\x37\x34\x31\x20\x32\x37\x31\x2e\x36\x38\x37\x35\x20\x2d\x38\x34\
\x2e\x33\x37\x35\x20\x4c\x20\x32\x37\x31\x2e\x36\x38\x37\x35\x20\
\x2d\x33\x33\x38\x2e\x37\x31\x38\x37\x35\x20\x4c\x20\x32\x36\x31\
\x2e\x35\x39\x33\x37\x35\x20\x2d\x33\x33\x38\x2e\x37\x31\x38\x37\
\x35\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\
\x79\x6c\x65\x3d\x22\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x36\
\x30\x38\x2e\x35\x37\x31\x31\x30\x35\x39\x36\x70\x78\x3b\x66\x6f\
\x6e\x74\x2d\x73\x74\x79\x6c\x65\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\
\x66\x6f\x6e\x74\x2d\x77\x65\x69\x67\x68\x74\x3a\x6e\x6f\x72\x6d\
\x61\x6c\x3b\x66\x69\x6c\x6c\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\
\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\
\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x66\x6f\x6e\x74\x2d\
\x66\x61\x6d\x69\x6c\x79\x3a\x42\x69\x74\x73\x74\x72\x65\x61\x6d\
\x20\x56\x65\x72\x61\x20\x53\x61\x6e\x73\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\x68\x32\x38\x34\x32\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\x20\x32\
\x35\x35\x2e\x33\x34\x33\x37\x35\x2c\x2d\x34\x38\x31\x2e\x33\x37\
\x35\x20\x63\x20\x2d\x38\x2e\x34\x31\x33\x37\x34\x2c\x37\x2e\x31\
\x65\x2d\x34\x20\x2d\x31\x37\x2e\x30\x33\x33\x33\x37\x2c\x31\x2e\
\x39\x37\x32\x30\x32\x20\x2d\x32\x34\x2e\x35\x39\x33\x37\x35\x2c\
\x35\x2e\x38\x34\x33\x37\x35\x20\x61\x20\x32\x34\x2e\x39\x38\x36\
\x31\x37\x33\x2c\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x20\x30\x20\
\x30\x20\x30\x20\x2d\x30\x2e\x30\x33\x31\x32\x2c\x30\x20\x63\x20\
\x2d\x37\x2e\x30\x33\x36\x38\x32\x2c\x33\x2e\x36\x30\x34\x38\x34\
\x20\x2d\x31\x33\x2e\x32\x36\x35\x38\x36\x2c\x38\x2e\x36\x36\x30\
\x34\x34\x20\x2d\x31\x38\x2e\x33\x34\x33\x37\x35\x2c\x31\x34\x2e\
\x35\x33\x31\x32\x35\x20\x2d\x35\x2e\x32\x39\x37\x31\x33\x2c\x36\
\x2e\x31\x32\x35\x33\x34\x20\x2d\x39\x2e\x33\x31\x30\x37\x38\x2c\
\x31\x33\x2e\x32\x35\x35\x39\x36\x20\x2d\x31\x32\x2e\x30\x33\x31\
\x32\x35\x2c\x32\x30\x2e\x38\x31\x32\x35\x20\x2d\x32\x2e\x37\x36\
\x35\x33\x39\x2c\x37\x2e\x36\x38\x31\x39\x38\x20\x2d\x34\x2e\x31\
\x35\x36\x33\x34\x2c\x31\x35\x2e\x39\x32\x34\x34\x33\x20\x2d\x34\
\x2e\x31\x35\x36\x32\x35\x2c\x32\x34\x2e\x31\x38\x37\x35\x20\x2d\
\x38\x65\x2d\x35\x2c\x31\x32\x2e\x36\x37\x36\x32\x32\x20\x32\x2e\
\x36\x35\x35\x34\x35\x2c\x32\x35\x2e\x36\x38\x32\x35\x39\x20\x31\
\x31\x2e\x30\x39\x33\x37\x35\x2c\x33\x36\x2e\x35\x20\x39\x2e\x36\
\x30\x34\x34\x37\x2c\x31\x32\x2e\x33\x31\x34\x34\x38\x20\x32\x35\
\x2e\x33\x34\x34\x32\x38\x2c\x31\x37\x2e\x30\x30\x30\x35\x20\x33\
\x38\x2e\x38\x34\x33\x37\x35\x2c\x31\x37\x20\x38\x2e\x35\x35\x34\
\x39\x37\x2c\x35\x2e\x37\x65\x2d\x34\x20\x31\x37\x2e\x34\x33\x31\
\x38\x35\x2c\x2d\x31\x2e\x39\x38\x31\x36\x32\x20\x32\x35\x2e\x32\
\x38\x31\x32\x35\x2c\x2d\x36\x2e\x30\x39\x33\x37\x35\x20\x37\x2e\
\x30\x36\x38\x34\x2c\x2d\x33\x2e\x37\x30\x32\x30\x31\x20\x31\x33\
\x2e\x33\x35\x39\x37\x35\x2c\x2d\x38\x2e\x38\x35\x31\x33\x39\x20\
\x31\x38\x2e\x34\x30\x36\x32\x35\x2c\x2d\x31\x34\x2e\x38\x37\x35\
\x20\x35\x2e\x30\x36\x39\x38\x31\x2c\x2d\x36\x2e\x30\x35\x30\x37\
\x20\x38\x2e\x39\x35\x30\x37\x38\x2c\x2d\x31\x33\x2e\x30\x34\x30\
\x32\x38\x20\x31\x31\x2e\x36\x32\x35\x2c\x2d\x32\x30\x2e\x34\x36\
\x38\x37\x35\x20\x32\x2e\x38\x30\x38\x33\x38\x2c\x2d\x37\x2e\x38\
\x30\x30\x39\x37\x20\x34\x2e\x31\x32\x34\x38\x32\x2c\x2d\x31\x36\
\x2e\x30\x34\x39\x36\x38\x20\x34\x2e\x31\x32\x35\x2c\x2d\x32\x34\
\x2e\x32\x31\x38\x37\x35\x20\x2d\x38\x65\x2d\x35\x2c\x2d\x31\x33\
\x2e\x31\x33\x31\x37\x38\x20\x2d\x32\x2e\x39\x33\x37\x33\x33\x2c\
\x2d\x32\x36\x2e\x39\x33\x33\x31\x39\x20\x2d\x31\x32\x2e\x36\x35\
\x36\x32\x35\x2c\x2d\x33\x37\x2e\x38\x31\x32\x35\x20\x2d\x39\x2e\
\x37\x31\x38\x39\x32\x2c\x2d\x31\x30\x2e\x38\x37\x39\x33\x31\x20\
\x2d\x32\x34\x2e\x34\x37\x39\x33\x36\x2c\x2d\x31\x35\x2e\x34\x30\
\x35\x39\x34\x20\x2d\x33\x37\x2e\x35\x36\x32\x35\x2c\x2d\x31\x35\
\x2e\x34\x30\x36\x32\x35\x20\x7a\x20\x6d\x20\x36\x2e\x32\x35\x2c\
\x31\x31\x37\x2e\x36\x38\x37\x35\x20\x61\x20\x32\x34\x2e\x39\x38\
\x36\x31\x37\x33\x2c\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x20\x30\
\x20\x30\x20\x30\x20\x2d\x31\x30\x2e\x34\x36\x38\x37\x35\x2c\x32\
\x2e\x32\x38\x31\x32\x35\x20\x63\x20\x2d\x34\x2e\x35\x38\x31\x30\
\x31\x2c\x32\x2e\x31\x31\x34\x35\x32\x20\x2d\x39\x2e\x37\x36\x36\
\x36\x35\x2c\x34\x2e\x32\x38\x30\x38\x37\x20\x2d\x31\x35\x2e\x35\
\x2c\x36\x2e\x35\x20\x2d\x35\x2e\x35\x36\x36\x33\x37\x2c\x32\x2e\
\x31\x35\x34\x39\x35\x20\x2d\x31\x31\x2e\x34\x34\x34\x37\x39\x2c\
\x34\x2e\x32\x30\x36\x39\x39\x20\x2d\x31\x37\x2e\x36\x35\x36\x32\
\x35\x2c\x36\x2e\x31\x32\x35\x20\x2d\x36\x2e\x32\x38\x33\x36\x38\
\x2c\x31\x2e\x39\x34\x30\x37\x39\x20\x2d\x31\x32\x2e\x36\x31\x36\
\x30\x37\x2c\x33\x2e\x37\x31\x36\x33\x34\x20\x2d\x31\x38\x2e\x39\
\x36\x38\x37\x35\x2c\x35\x2e\x32\x38\x31\x32\x35\x20\x2d\x36\x2e\
\x34\x37\x37\x37\x32\x2c\x31\x2e\x35\x39\x36\x32\x31\x20\x2d\x31\
\x32\x2e\x35\x38\x30\x30\x31\x2c\x32\x2e\x39\x33\x34\x30\x37\x20\
\x2d\x31\x38\x2e\x32\x35\x2c\x34\x2e\x30\x33\x31\x32\x35\x20\x61\
\x20\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x2c\x32\x34\x2e\x39\x38\
\x36\x31\x37\x33\x20\x30\x20\x30\x20\x30\x20\x2d\x32\x30\x2e\x32\
\x31\x38\x37\x35\x2c\x32\x34\x2e\x35\x33\x31\x32\x35\x20\x6c\x20\
\x30\x2c\x31\x31\x2e\x38\x37\x35\x20\x61\x20\x32\x34\x2e\x39\x38\
\x36\x31\x37\x33\x2c\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x20\x30\
\x20\x30\x20\x30\x20\x32\x32\x2e\x36\x32\x35\x2c\x32\x34\x2e\x38\
\x37\x35\x20\x63\x20\x38\x2e\x38\x30\x35\x30\x33\x2c\x30\x2e\x38\
\x33\x30\x38\x37\x20\x31\x35\x2e\x30\x32\x33\x39\x33\x2c\x31\x2e\
\x39\x31\x37\x33\x38\x20\x31\x38\x2e\x34\x33\x37\x35\x2c\x32\x2e\
\x37\x35\x20\x30\x2e\x33\x34\x31\x33\x36\x2c\x35\x2e\x33\x38\x39\
\x39\x39\x20\x30\x2e\x35\x36\x32\x34\x34\x2c\x31\x33\x2e\x31\x31\
\x30\x39\x31\x20\x30\x2e\x35\x36\x32\x35\x2c\x32\x32\x2e\x38\x37\
\x35\x20\x6c\x20\x30\x2c\x31\x35\x35\x2e\x38\x37\x35\x20\x63\x20\
\x2d\x34\x2e\x38\x31\x33\x31\x31\x2c\x31\x2e\x37\x38\x34\x33\x39\
\x35\x20\x2d\x31\x31\x2e\x37\x33\x31\x38\x33\x2c\x33\x2e\x39\x31\
\x39\x30\x36\x31\x20\x2d\x32\x31\x2e\x36\x38\x37\x35\x2c\x35\x2e\
\x39\x36\x38\x37\x35\x20\x41\x20\x32\x34\x2e\x39\x38\x36\x31\x37\
\x33\x2c\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x20\x30\x20\x30\x20\
\x30\x20\x31\x36\x30\x2e\x35\x33\x31\x32\x35\x2c\x2d\x36\x36\x2e\
\x32\x35\x20\x6c\x20\x30\x2c\x31\x32\x2e\x37\x38\x31\x32\x35\x20\
\x41\x20\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x2c\x32\x34\x2e\x39\
\x38\x36\x31\x37\x33\x20\x30\x20\x30\x20\x30\x20\x31\x38\x35\x2e\
\x35\x2c\x2d\x32\x38\x2e\x35\x20\x6c\x20\x31\x32\x37\x2e\x37\x38\
\x31\x32\x35\x2c\x30\x20\x41\x20\x32\x34\x2e\x39\x38\x36\x31\x37\
\x33\x2c\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x20\x30\x20\x30\x20\
\x30\x20\x33\x33\x38\x2e\x32\x35\x2c\x2d\x35\x33\x2e\x34\x36\x38\
\x37\x35\x20\x6c\x20\x30\x2c\x2d\x31\x32\x2e\x37\x38\x31\x32\x35\
\x20\x41\x20\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x2c\x32\x34\x2e\
\x39\x38\x36\x31\x37\x33\x20\x30\x20\x30\x20\x30\x20\x33\x31\x38\
\x2c\x2d\x39\x30\x2e\x37\x38\x31\x32\x35\x20\x43\x20\x33\x30\x37\
\x2e\x34\x37\x37\x33\x35\x2c\x2d\x39\x32\x2e\x37\x39\x39\x32\x36\
\x33\x20\x33\x30\x30\x2e\x36\x38\x35\x31\x37\x2c\x2d\x39\x34\x2e\
\x39\x36\x35\x33\x37\x20\x32\x39\x36\x2e\x36\x35\x36\x32\x35\x2c\
\x2d\x39\x36\x2e\x35\x20\x6c\x20\x30\x2c\x2d\x32\x34\x32\x2e\x32\
\x31\x38\x37\x35\x20\x41\x20\x32\x34\x2e\x39\x38\x36\x31\x37\x33\
\x2c\x32\x34\x2e\x39\x38\x36\x31\x37\x33\x20\x30\x20\x30\x20\x30\
\x20\x32\x37\x31\x2e\x36\x38\x37\x35\x2c\x2d\x33\x36\x33\x2e\x36\
\x38\x37\x35\x20\x6c\x20\x2d\x31\x30\x2e\x30\x39\x33\x37\x35\x2c\
\x30\x20\x7a\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\
\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\
\x65\x28\x2d\x30\x2e\x39\x39\x32\x32\x34\x38\x30\x36\x2c\x31\x36\
\x2e\x38\x36\x38\x32\x31\x37\x29\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x74\x65\x78\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x6d\x6c\x3a\x73\x70\x61\x63\x65\x3d\x22\x70\x72\x65\x73\x65\
\x72\x76\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\
\x6c\x65\x3d\x22\x66\x6f\x6e\x74\x2d\x73\x69\x7a\x65\x3a\x36\x30\
\x38\x2e\x35\x37\x31\x31\x30\x35\x39\x36\x70\x78\x3b\x66\x6f\x6e\
\x74\x2d\x73\x74\x79\x6c\x65\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\
\x6f\x6e\x74\x2d\x77\x65\x69\x67\x68\x74\x3a\x6e\x6f\x72\x6d\x61\
\x6c\x3b\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\
\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\
\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x66\x6f\x6e\x74\x2d\x66\
\x61\x6d\x69\x6c\x79\x3a\x42\x69\x74\x73\x74\x72\x65\x61\x6d\x20\
\x56\x65\x72\x61\x20\x53\x61\x6e\x73\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x3d\x22\x31\x36\x33\x2e\x37\x31\x38\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x33\x36\x2e\x35\x38\
\x39\x31\x35\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x74\x65\x78\x74\x32\x38\x33\x34\x22\x3e\x3c\x74\x73\x70\
\x61\x6e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x72\x6f\x6c\x65\x3d\x22\x6c\x69\x6e\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x74\x73\x70\x61\x6e\x32\x38\x33\x36\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x78\x3d\x22\x31\x36\x33\x2e\x37\x31\x38\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x33\
\x36\x2e\x35\x38\x39\x31\x35\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x6f\x6e\x74\x2d\
\x73\x69\x7a\x65\x3a\x36\x30\x38\x2e\x35\x37\x31\x31\x30\x35\x39\
\x36\x70\x78\x3b\x66\x6f\x6e\x74\x2d\x73\x74\x79\x6c\x65\x3a\x6e\
\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x76\x61\x72\x69\x61\
\x6e\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x77\
\x65\x69\x67\x68\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\
\x74\x2d\x73\x74\x72\x65\x74\x63\x68\x3a\x6e\x6f\x72\x6d\x61\x6c\
\x3b\x66\x6f\x6e\x74\x2d\x66\x61\x6d\x69\x6c\x79\x3a\x47\x65\x6e\
\x74\x69\x75\x6d\x20\x42\x61\x73\x69\x63\x3b\x2d\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2d\x66\x6f\x6e\x74\x2d\x73\x70\x65\x63\x69\x66\
\x69\x63\x61\x74\x69\x6f\x6e\x3a\x47\x65\x6e\x74\x69\x75\x6d\x20\
\x42\x61\x73\x69\x63\x22\x3e\x69\x3c\x2f\x74\x73\x70\x61\x6e\x3e\
\x3c\x2f\x74\x65\x78\x74\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\x3e\x0d\
\x0a\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x56\x5d\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\
\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\x74\x73\
\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\
\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\
\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x72\
\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\
\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\x32\x32\
\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\x23\x22\
\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\
\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\
\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\
\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x78\x6c\x69\
\x6e\x6b\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\
\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x78\x6c\x69\x6e\x6b\
\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\x6f\x72\x67\
\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\x20\x78\x6d\
\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\x22\x68\x74\
\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\x63\x65\x73\
\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\x20\x77\
\x69\x64\x74\x68\x3d\x22\x34\x38\x22\x0d\x0a\x20\x20\x20\x68\x65\
\x69\x67\x68\x74\x3d\x22\x34\x38\x22\x0d\x0a\x20\x20\x20\x69\x64\
\x3d\x22\x73\x76\x67\x31\x33\x30\x37\x22\x0d\x0a\x20\x20\x20\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\x73\x69\x6f\x6e\x3d\
\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x34\
\x36\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\
\x64\x6f\x63\x62\x61\x73\x65\x3d\x22\x2f\x68\x6f\x6d\x65\x2f\x6a\
\x69\x6d\x6d\x61\x63\x2f\x73\x72\x63\x2f\x63\x76\x73\x2f\x74\x61\
\x6e\x67\x6f\x2d\x69\x63\x6f\x6e\x2d\x74\x68\x65\x6d\x65\x2f\x73\
\x63\x61\x6c\x61\x62\x6c\x65\x2f\x61\x63\x74\x69\x6f\x6e\x73\x22\
\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\x6f\
\x63\x6e\x61\x6d\x65\x3d\x22\x6d\x65\x64\x69\x61\x2d\x70\x6c\x61\
\x79\x62\x61\x63\x6b\x2d\x73\x74\x6f\x70\x2e\x73\x76\x67\x22\x0d\
\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x65\x78\x70\
\x6f\x72\x74\x2d\x66\x69\x6c\x65\x6e\x61\x6d\x65\x3d\x22\x2f\x68\
\x6f\x6d\x65\x2f\x6c\x61\x70\x6f\x2f\x44\x65\x73\x6b\x74\x6f\x70\
\x2f\x47\x72\x61\x66\x69\x63\x61\x2f\x49\x63\x6f\x6e\x65\x2f\x6d\
\x65\x64\x69\x61\x2d\x61\x63\x74\x69\x6f\x6e\x73\x2d\x6f\x75\x74\
\x6c\x69\x6e\x65\x73\x2e\x70\x6e\x67\x22\x0d\x0a\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x65\x78\x70\x6f\x72\x74\x2d\x78\
\x64\x70\x69\x3d\x22\x39\x30\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x65\x78\x70\x6f\x72\x74\x2d\x79\x64\x70\
\x69\x3d\x22\x39\x30\x22\x0d\x0a\x20\x20\x20\x76\x65\x72\x73\x69\
\x6f\x6e\x3d\x22\x31\x2e\x30\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\x72\x75\x65\
\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\
\x5f\x63\x79\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\x70\x75\x74\x5f\x65\
\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\x72\x67\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\x75\x74\x2e\x73\x76\
\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x3e\x0d\x0a\x20\x20\
\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x64\x65\x66\x73\x31\x33\x30\x39\x22\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\
\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x32\x34\x20\x3a\x20\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\
\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x34\x38\
\x20\x3a\x20\x32\x34\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\
\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x32\x34\x20\x3a\
\x20\x31\x36\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\
\x38\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x32\x38\x31\x37\x22\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\
\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x73\x74\
\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\
\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x73\x74\x6f\x70\x32\x38\x31\x39\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\
\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x34\
\x38\x34\x35\x33\x36\x30\x38\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\
\x70\x32\x38\x32\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x32\x35\x38\x34\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\
\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\
\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\
\x23\x30\x30\x30\x30\x30\x30\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\
\x63\x69\x74\x79\x3a\x31\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\
\x32\x35\x38\x36\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\
\x72\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\x73\x74\x6f\x70\x2d\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x30\x3b\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\
\x6f\x70\x32\x35\x38\x38\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x32\x36\x39\x37\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\
\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x73\x74\x6f\x70\x32\x36\x39\x39\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x62\
\x61\x62\x64\x62\x36\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x32\x37\x30\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\
\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\
\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\
\x23\x35\x35\x35\x37\x35\x33\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x32\x36\x37\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\
\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x32\x36\x38\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\
\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\
\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\
\x3a\x23\x66\x37\x66\x37\x66\x37\x3b\x73\x74\x6f\x70\x2d\x6f\x70\
\x61\x63\x69\x74\x79\x3a\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x32\x36\x38\x33\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\
\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\
\x72\x3a\x23\x63\x63\x64\x30\x63\x37\x3b\x73\x74\x6f\x70\x2d\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\
\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x33\x30\x38\x31\x22\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\
\x6f\x6c\x6f\x72\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\x73\x74\x6f\
\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\
\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x73\x74\x6f\x70\x33\x30\x38\x33\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\
\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\x73\
\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x3b\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\
\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x73\x74\x6f\x70\x33\x30\x38\x35\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\
\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x38\x36\x36\x32\x22\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\
\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\
\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x73\x74\x6f\x70\x38\x36\x36\x34\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\
\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\
\x30\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\
\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x38\x36\x36\x36\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\
\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x32\x36\x37\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\
\x69\x65\x6e\x74\x32\x31\x31\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\
\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\
\x69\x78\x28\x33\x2e\x35\x36\x32\x33\x30\x39\x65\x2d\x36\x2c\x2d\
\x31\x2e\x30\x37\x32\x30\x35\x2c\x31\x2e\x39\x39\x32\x31\x30\x34\
\x2c\x2d\x31\x2e\x32\x35\x30\x36\x35\x38\x65\x2d\x36\x2c\x2d\x34\
\x32\x2e\x36\x31\x31\x36\x35\x2c\x32\x38\x33\x2e\x37\x38\x39\x31\
\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\x3d\x22\x31\
\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x63\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\x30\x37\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\x31\x36\x39\
\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x66\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\x30\x37\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x31\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\
\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x39\x37\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x31\x32\x32\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\
\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\
\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x2d\x31\x32\
\x2c\x30\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\
\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\
\x3d\x22\x31\x31\x30\x2e\x33\x33\x38\x30\x35\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x39\x33\x2e\x32\x30\x34\
\x38\x34\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\
\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\
\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x33\x30\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x32\x31\x32\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\
\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\
\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\
\x61\x74\x65\x28\x31\x33\x33\x2c\x37\x30\x2e\x39\x39\x39\x39\x39\
\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\
\x35\x2e\x30\x38\x39\x35\x32\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x79\x31\x3d\x22\x31\x35\x2e\x32\x39\x31\x39\x39\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x35\x32\x2e\
\x35\x31\x30\x35\x37\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x38\x36\x36\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x31\x33\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\
\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x31\x2c\x30\x2c\x30\x2c\x30\x2e\x35\x33\x36\x37\
\x32\x33\x2c\x34\x2e\x34\x37\x33\x37\x33\x33\x65\x2d\x31\x33\x2c\
\x31\x36\x2e\x38\x37\x33\x30\x36\x29\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x63\x78\x3d\x22\x32\x34\x2e\x38\x33\x37\x31\x32\x36\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x33\x36\
\x2e\x34\x32\x31\x31\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x66\x78\x3d\x22\x32\x34\x2e\x38\x33\x37\x31\x32\x36\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x33\x36\x2e\x34\
\x32\x31\x31\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\
\x3d\x22\x31\x35\x2e\x36\x34\x34\x37\x33\x37\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\
\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\
\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\
\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x38\x36\x36\x32\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\
\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x31\x33\x39\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\
\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\
\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\
\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x31\x2c\x30\x2c\x30\x2c\x30\
\x2e\x35\x33\x36\x37\x32\x33\x2c\x2d\x31\x2e\x34\x31\x36\x34\x35\
\x36\x65\x2d\x31\x32\x2c\x31\x36\x2e\x38\x37\x33\x30\x36\x29\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\x3d\x22\x32\x34\x2e\
\x38\x33\x37\x31\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x63\x79\x3d\x22\x33\x36\x2e\x34\x32\x31\x31\x32\x37\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\x32\x34\x2e\x38\x33\
\x37\x31\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x79\
\x3d\x22\x33\x36\x2e\x34\x32\x31\x31\x32\x37\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x35\x2e\x36\x34\x34\x37\x33\
\x37\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\
\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\
\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\
\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x38\x36\x36\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\
\x32\x37\x32\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\
\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\
\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\
\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x31\
\x2c\x30\x2c\x30\x2c\x30\x2e\x35\x33\x36\x37\x32\x33\x2c\x34\x2e\
\x35\x32\x36\x34\x36\x39\x65\x2d\x31\x33\x2c\x31\x36\x2e\x38\x37\
\x33\x30\x36\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\
\x3d\x22\x32\x34\x2e\x38\x33\x37\x31\x32\x36\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x33\x36\x2e\x34\x32\x31\x31\
\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\
\x32\x34\x2e\x38\x33\x37\x31\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x66\x79\x3d\x22\x33\x36\x2e\x34\x32\x31\x31\x32\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x35\x2e\
\x36\x34\x34\x37\x33\x37\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x38\x36\x36\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x37\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\
\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x31\x2c\x30\x2c\x30\x2c\x30\x2e\x35\x33\x36\x37\
\x32\x33\x2c\x2d\x31\x2e\x34\x33\x32\x33\x38\x38\x65\x2d\x31\x32\
\x2c\x31\x36\x2e\x38\x37\x33\x30\x36\x29\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x63\x78\x3d\x22\x32\x34\x2e\x38\x33\x37\x31\x32\
\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x33\
\x36\x2e\x34\x32\x31\x31\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x66\x78\x3d\x22\x32\x34\x2e\x38\x33\x37\x31\x32\x36\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x33\x36\x2e\
\x34\x32\x31\x31\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x72\x3d\x22\x31\x35\x2e\x36\x34\x34\x37\x33\x37\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\
\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\
\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x37\x39\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\
\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x37\x32\x39\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\
\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\
\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x33\x2e\x35\x36\x32\x33\
\x30\x39\x65\x2d\x36\x2c\x2d\x31\x2e\x30\x37\x32\x30\x35\x2c\x31\
\x2e\x39\x39\x32\x31\x30\x34\x2c\x2d\x31\x2e\x32\x35\x30\x36\x35\
\x38\x65\x2d\x36\x2c\x2d\x34\x32\x2e\x36\x31\x31\x36\x35\x2c\x32\
\x38\x33\x2e\x37\x38\x39\x31\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x63\x78\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x31\x30\x30\
\x2e\x32\x30\x31\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x66\x78\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x31\x30\x30\x2e\x32\
\x30\x31\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\
\x22\x31\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\
\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\
\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x32\x36\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x32\x37\x33\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\
\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\
\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\
\x61\x74\x65\x28\x2d\x31\x32\x2c\x30\x29\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x31\x30\x2e\x33\x33\x38\
\x30\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\
\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\
\x22\x39\x33\x2e\x32\x30\x34\x38\x34\x39\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\
\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\
\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x30\x38\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x37\x33\x33\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\
\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\
\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\
\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\
\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x31\x33\x33\x2c\x37\
\x30\x2e\x39\x39\x39\x39\x39\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x78\x31\x3d\x22\x31\x35\x2e\x30\x38\x39\x35\x32\x31\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x35\x2e\
\x32\x39\x31\x39\x39\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x32\x3d\x22\x31\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x79\x32\x3d\x22\x35\x32\x2e\x35\x31\x30\x35\x37\x34\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\
\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\
\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x38\x36\x36\x32\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\
\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x37\x34\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\
\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\
\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x31\x2c\x30\x2c\x30\
\x2c\x30\x2e\x35\x33\x36\x37\x32\x33\x2c\x34\x2e\x35\x37\x39\x32\
\x30\x35\x65\x2d\x31\x33\x2c\x31\x36\x2e\x38\x37\x33\x30\x36\x29\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\x3d\x22\x32\x34\
\x2e\x38\x33\x37\x31\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x63\x79\x3d\x22\x33\x36\x2e\x34\x32\x31\x31\x32\x37\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\x32\x34\x2e\x38\
\x33\x37\x31\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\
\x79\x3d\x22\x33\x36\x2e\x34\x32\x31\x31\x32\x37\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x35\x2e\x36\x34\x34\x37\
\x33\x37\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\
\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\
\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\
\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x38\x36\x36\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\
\x74\x32\x37\x34\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\
\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\
\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\
\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\
\x31\x2c\x30\x2c\x30\x2c\x30\x2e\x35\x33\x36\x37\x32\x33\x2c\x2d\
\x31\x2e\x34\x34\x38\x33\x32\x65\x2d\x31\x32\x2c\x31\x36\x2e\x38\
\x37\x33\x30\x36\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\
\x78\x3d\x22\x32\x34\x2e\x38\x33\x37\x31\x32\x36\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x33\x36\x2e\x34\x32\x31\
\x31\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\
\x22\x32\x34\x2e\x38\x33\x37\x31\x32\x36\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x66\x79\x3d\x22\x33\x36\x2e\x34\x32\x31\x31\x32\
\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x35\
\x2e\x36\x34\x34\x37\x33\x37\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\
\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\
\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x32\x36\x37\x39\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\x72\
\x61\x64\x69\x65\x6e\x74\x32\x37\x34\x39\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\
\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\
\x74\x72\x69\x78\x28\x33\x2e\x35\x36\x32\x33\x30\x39\x65\x2d\x36\
\x2c\x2d\x31\x2e\x30\x37\x32\x30\x35\x2c\x31\x2e\x39\x39\x32\x31\
\x30\x34\x2c\x2d\x31\x2e\x32\x35\x30\x36\x35\x38\x65\x2d\x36\x2c\
\x2d\x34\x32\x2e\x36\x31\x31\x36\x35\x2c\x32\x38\x33\x2e\x37\x38\
\x39\x31\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\x3d\
\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x63\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\x30\
\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\x31\
\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x66\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\x30\x37\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x31\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\
\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x39\
\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x37\x35\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\
\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x2d\
\x31\x32\x2c\x30\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\
\x31\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x79\x31\x3d\x22\x31\x31\x30\x2e\x33\x33\x38\x30\x35\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x36\x39\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x39\x33\x2e\x32\
\x30\x34\x38\x34\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\
\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x33\x30\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x32\x37\x35\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\
\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\
\x73\x6c\x61\x74\x65\x28\x31\x33\x33\x2c\x37\x30\x2e\x39\x39\x39\
\x39\x39\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\
\x22\x31\x35\x2e\x30\x38\x39\x35\x32\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x35\x2e\x32\x39\x31\x39\x39\
\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\
\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x35\
\x32\x2e\x35\x31\x30\x35\x37\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\
\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\
\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\
\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x37\x39\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\
\x72\x61\x64\x69\x65\x6e\x74\x32\x37\x39\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\
\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\
\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\
\x61\x74\x72\x69\x78\x28\x33\x2e\x35\x36\x32\x33\x30\x39\x65\x2d\
\x36\x2c\x2d\x31\x2e\x30\x37\x32\x30\x35\x2c\x31\x2e\x39\x39\x32\
\x31\x30\x34\x2c\x2d\x31\x2e\x32\x35\x30\x36\x35\x38\x65\x2d\x36\
\x2c\x2d\x34\x32\x2e\x36\x31\x31\x36\x35\x2c\x32\x38\x33\x2e\x37\
\x38\x39\x31\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\
\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\
\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\
\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x66\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\x30\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x31\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\
\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\
\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x37\
\x39\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\
\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\
\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\
\x2d\x31\x32\x2c\x30\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x31\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x79\x31\x3d\x22\x31\x31\x30\x2e\x33\x33\x38\x30\x35\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x36\x39\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x39\x33\x2e\
\x32\x30\x34\x38\x34\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x36\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x37\x39\x35\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\
\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\
\x6e\x73\x6c\x61\x74\x65\x28\x2d\x31\x32\x2c\x30\x29\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x36\x39\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x31\x30\x2e\
\x33\x33\x38\x30\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\
\x32\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x79\x32\x3d\x22\x39\x33\x2e\x32\x30\x34\x38\x34\x39\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\
\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x30\x38\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x37\x39\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\
\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\
\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x31\x33\
\x33\x2c\x37\x30\x2e\x39\x39\x39\x39\x39\x29\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x35\x2e\x30\x38\x39\x35\
\x32\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\
\x31\x35\x2e\x32\x39\x31\x39\x39\x34\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x32\x3d\x22\x31\x34\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x79\x32\x3d\x22\x35\x32\x2e\x35\x31\x30\x35\x37\x34\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\
\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\
\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\
\x30\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\
\x38\x30\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\
\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\
\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\
\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\
\x28\x2d\x34\x65\x2d\x34\x2c\x2d\x39\x2e\x34\x32\x36\x65\x2d\x32\
\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\
\x35\x2e\x30\x38\x39\x35\x32\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x79\x31\x3d\x22\x31\x35\x2e\x32\x39\x31\x39\x39\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x35\x32\x2e\
\x35\x31\x30\x35\x37\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x36\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x38\x30\x33\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\
\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x31\x2c\x30\x2c\x30\x2c\x31\x2e\x30\x30\x34\x33\
\x38\x34\x2c\x2d\x31\x34\x35\x2e\x30\x30\x30\x34\x2c\x2d\x37\x31\
\x2e\x34\x36\x32\x35\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x31\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x79\x31\x3d\x22\x31\x31\x30\x2e\x33\x33\x38\x30\x35\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x36\x39\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x39\x33\x2e\
\x32\x30\x34\x38\x34\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x36\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x38\x30\x36\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\
\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\
\x6e\x73\x6c\x61\x74\x65\x28\x2d\x31\x34\x35\x2e\x30\x30\x30\x34\
\x2c\x2d\x39\x37\x2e\x30\x39\x34\x33\x29\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x31\x30\x2e\x33\x33\x38\
\x30\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\
\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\
\x22\x39\x33\x2e\x32\x30\x34\x38\x34\x39\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\
\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\
\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\
\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x37\x39\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\
\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x38\x30\x39\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\
\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\
\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\
\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\
\x22\x6d\x61\x74\x72\x69\x78\x28\x33\x2e\x35\x36\x32\x33\x30\x39\
\x65\x2d\x36\x2c\x2d\x31\x2e\x30\x37\x32\x30\x35\x2c\x31\x2e\x39\
\x39\x32\x31\x30\x34\x2c\x2d\x31\x2e\x32\x35\x30\x36\x35\x38\x65\
\x2d\x36\x2c\x2d\x31\x37\x35\x2e\x36\x31\x32\x31\x2c\x32\x31\x32\
\x2e\x36\x39\x34\x39\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x63\x78\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x31\x30\x30\x2e\x32\
\x30\x31\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\
\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\
\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\
\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\
\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\
\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x32\x38\x31\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x32\x38\x32\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\
\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\
\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\
\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x31\
\x2e\x31\x30\x33\x32\x36\x32\x2c\x30\x2c\x30\x2c\x31\x2e\x30\x35\
\x34\x39\x31\x37\x2c\x2d\x31\x36\x33\x2e\x31\x32\x32\x38\x2c\x2d\
\x37\x36\x2e\x33\x31\x31\x33\x38\x29\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x31\x3d\x22\x31\x37\x34\x2e\x38\x33\x33\x36\x33\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x38\x34\
\x2e\x32\x36\x33\x34\x38\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x32\x3d\x22\x31\x37\x34\x2e\x37\x34\x35\x32\x34\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x31\x30\x35\x2e\
\x34\x39\x30\x38\x33\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\
\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x33\x30\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x32\x38\x32\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\
\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\
\x73\x6c\x61\x74\x65\x28\x2d\x34\x65\x2d\x34\x2c\x2d\x32\x36\x2e\
\x30\x39\x34\x32\x36\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x31\x3d\x22\x31\x35\x2e\x30\x38\x39\x35\x32\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x35\x2e\x32\x39\
\x31\x39\x39\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\
\x3d\x22\x31\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\
\x3d\x22\x35\x32\x2e\x35\x31\x30\x35\x37\x34\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\
\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\
\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\
\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x37\x39\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\
\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x38\x33\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\
\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\
\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\
\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x33\x2e\x35\x36\x32\x33\x30\
\x39\x65\x2d\x36\x2c\x2d\x31\x2e\x30\x37\x32\x30\x35\x2c\x31\x2e\
\x39\x39\x32\x31\x30\x34\x2c\x2d\x31\x2e\x32\x35\x30\x36\x35\x38\
\x65\x2d\x36\x2c\x2d\x31\x37\x35\x2e\x36\x31\x32\x31\x2c\x31\x38\
\x36\x2e\x36\x39\x34\x39\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x63\x78\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x31\x30\x30\x2e\
\x32\x30\x31\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\
\x78\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\
\x31\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\
\x31\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\
\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\
\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x32\x38\x31\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x32\x38\x35\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\
\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\
\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\
\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\
\x31\x2e\x31\x30\x33\x32\x36\x32\x2c\x30\x2c\x30\x2c\x31\x2e\x30\
\x35\x34\x39\x31\x37\x2c\x2d\x31\x36\x33\x2e\x31\x32\x32\x38\x2c\
\x2d\x37\x36\x2e\x33\x31\x31\x33\x38\x29\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x37\x34\x2e\x38\x33\x33\x36\
\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x38\
\x34\x2e\x32\x36\x33\x34\x38\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x78\x32\x3d\x22\x31\x37\x34\x2e\x37\x34\x35\x32\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x31\x30\x35\
\x2e\x34\x39\x30\x38\x33\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x36\x37\x39\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\x47\x72\x61\
\x64\x69\x65\x6e\x74\x32\x38\x36\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\
\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x33\x2e\x35\x36\x32\x33\x30\x39\x65\x2d\x36\x2c\
\x2d\x31\x2e\x30\x37\x32\x30\x35\x2c\x31\x2e\x39\x39\x32\x31\x30\
\x34\x2c\x2d\x31\x2e\x32\x35\x30\x36\x35\x38\x65\x2d\x36\x2c\x2d\
\x31\x37\x35\x2e\x36\x31\x32\x31\x2c\x32\x31\x32\x2e\x36\x39\x34\
\x39\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\x3d\x22\
\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x63\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\x30\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\x31\x36\
\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x66\x79\x3d\x22\x31\x30\x30\x2e\x32\x30\x31\x30\x37\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x31\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\
\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x39\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x38\x36\x32\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\
\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\
\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x31\x2c\x30\x2c\x30\
\x2c\x31\x2e\x30\x30\x34\x33\x38\x34\x2c\x2d\x31\x34\x35\x2e\x30\
\x30\x30\x34\x2c\x2d\x37\x31\x2e\x34\x36\x32\x35\x29\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x36\x39\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x31\x30\x2e\
\x33\x33\x38\x30\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\
\x32\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x79\x32\x3d\x22\x39\x33\x2e\x32\x30\x34\x38\x34\x39\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\
\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x30\x38\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x38\x36\x34\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\
\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\
\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x2d\x34\
\x65\x2d\x34\x2c\x2d\x39\x2e\x34\x32\x36\x65\x2d\x32\x29\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x35\x2e\x30\
\x38\x39\x35\x32\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\
\x31\x3d\x22\x31\x35\x2e\x32\x39\x31\x39\x39\x34\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x34\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x35\x32\x2e\x35\x31\x30\
\x35\x37\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\
\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\
\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x33\x30\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x33\x34\x32\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\
\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\
\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\
\x28\x33\x2e\x30\x30\x30\x31\x39\x38\x2c\x30\x2c\x30\x2c\x31\x2c\
\x2d\x36\x37\x2e\x30\x30\x36\x2c\x2d\x39\x2e\x34\x32\x36\x65\x2d\
\x32\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\
\x31\x35\x2e\x30\x38\x39\x35\x32\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x79\x31\x3d\x22\x31\x35\x2e\x32\x39\x31\x39\x39\x34\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x34\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x35\x32\
\x2e\x35\x31\x30\x35\x37\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\
\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\
\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x32\x36\x39\x37\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x33\x34\x32\x34\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\
\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\
\x74\x72\x69\x78\x28\x32\x2e\x34\x39\x38\x38\x38\x34\x2c\x30\x2c\
\x30\x2c\x31\x2e\x30\x30\x34\x33\x38\x34\x2c\x2d\x34\x31\x34\x2e\
\x30\x36\x31\x38\x2c\x2d\x37\x31\x2e\x34\x36\x32\x35\x29\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x36\x39\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x31\x30\
\x2e\x33\x33\x38\x30\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x32\x3d\x22\x31\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x79\x32\x3d\x22\x39\x33\x2e\x32\x30\x34\x38\x34\x39\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\
\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\
\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x37\
\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\
\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x34\x32\
\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\
\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x38\x2e\x39\x30\
\x35\x37\x37\x32\x65\x2d\x36\x2c\x2d\x31\x2e\x30\x37\x32\x30\x35\
\x2c\x34\x2e\x39\x38\x30\x32\x36\x2c\x2d\x31\x2e\x32\x35\x30\x36\
\x35\x38\x65\x2d\x36\x2c\x2d\x34\x39\x30\x2e\x37\x37\x39\x32\x2c\
\x32\x31\x32\x2e\x36\x39\x34\x39\x29\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x63\x78\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x31\x30\
\x30\x2e\x32\x30\x31\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x66\x78\x3d\x22\x31\x36\x39\x2e\x37\x37\x31\x37\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x31\x30\x30\x2e\
\x32\x30\x31\x30\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x72\
\x3d\x22\x31\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\
\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\
\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x32\x38\x31\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x33\x34\x33\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\
\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\
\x78\x28\x32\x2e\x36\x32\x34\x35\x32\x35\x2c\x30\x2c\x30\x2c\x31\
\x2e\x30\x35\x34\x39\x31\x37\x2c\x2d\x34\x33\x36\x2e\x31\x30\x31\
\x39\x2c\x2d\x37\x36\x2e\x33\x31\x31\x33\x38\x29\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x37\x34\x2e\x38\x33\
\x33\x36\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\
\x22\x38\x34\x2e\x32\x36\x33\x34\x38\x39\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x37\x34\x2e\x37\x34\x35\x32\
\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x31\
\x30\x35\x2e\x34\x39\x30\x38\x33\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x3c\x2f\x64\x65\x66\x73\x3e\x0d\x0a\x20\x20\x3c\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x0d\x0a\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\x72\x3d\x22\
\x23\x66\x66\x66\x66\x66\x66\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\
\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\x36\x36\
\x36\x36\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\
\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\x31\x39\x36\x30\
\x37\x38\x34\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\x79\
\x3d\x22\x30\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\x77\
\x3d\x22\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x34\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x78\x3d\x22\
\x2d\x30\x2e\x31\x35\x33\x30\x31\x38\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x79\x3d\x22\x32\x35\
\x2e\x37\x31\x39\x36\x33\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\
\x6c\x61\x79\x65\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x66\
\x61\x6c\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x2d\x62\x62\x6f\x78\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\
\x69\x74\x73\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x2d\x70\x6f\x69\
\x6e\x74\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x66\x69\x6c\x6c\x3d\x22\x23\x66\x63\x61\x66\x33\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x75\x69\x64\x65\x73\
\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x75\x69\x64\x65\x2d\x62\x62\
\x6f\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x67\x75\x69\x64\x65\x74\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\
\x31\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\x74\x72\x6f\x6b\
\x65\x3d\x22\x23\x37\x32\x39\x66\x63\x66\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\
\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\x38\x37\x32\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\
\x64\x6f\x77\x2d\x68\x65\x69\x67\x68\x74\x3d\x22\x36\x38\x38\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x77\x69\x6e\x64\x6f\x77\x2d\x78\x3d\x22\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\
\x6f\x77\x2d\x79\x3d\x22\x31\x36\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x73\x68\x6f\x77\x62\x6f\x72\x64\x65\x72\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x73\x68\x6f\x77\x70\x61\x67\x65\x73\x68\x61\x64\x6f\x77\
\x3d\x22\x66\x61\x6c\x73\x65\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\
\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\
\x3d\x22\x33\x38\x2e\x39\x39\x36\x36\x34\x37\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x32\x31\
\x39\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\
\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x39\
\x2e\x30\x31\x34\x30\x38\x34\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x32\x31\x39\x36\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\
\x72\x74\x69\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x39\x2e\x30\x31\x34\x30\
\x38\x34\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x67\x75\x69\x64\x65\x32\x31\x39\x38\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\
\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\
\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\x69\x63\x61\
\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\
\x69\x6f\x6e\x3d\x22\x33\x38\x2e\x39\x37\x35\x31\x38\x34\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\
\x65\x32\x32\x30\x30\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\
\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\
\x3d\x22\x32\x32\x2e\x39\x38\x38\x32\x38\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x32\x32\
\x30\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\
\x22\x76\x65\x72\x74\x69\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x32\x33\x2e\
\x39\x30\x38\x37\x38\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x32\x32\x30\x34\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\
\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\
\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\
\x69\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\
\x73\x69\x74\x69\x6f\x6e\x3d\x22\x31\x35\x37\x2e\x39\x39\x34\x31\
\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\
\x75\x69\x64\x65\x34\x33\x33\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\
\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\
\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\
\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\
\x69\x6f\x6e\x3d\x22\x2d\x33\x36\x2e\x30\x36\x32\x34\x34\x36\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\
\x64\x65\x34\x33\x33\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\
\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\
\x6e\x3d\x22\x2d\x35\x38\x2e\x30\x32\x36\x39\x35\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x34\
\x33\x33\x36\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\
\x3d\x22\x76\x65\x72\x74\x69\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x31\x38\
\x30\x2e\x30\x30\x32\x38\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x34\x33\x33\x38\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\
\x74\x69\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\
\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x31\x30\x37\x2e\x39\x32\x32\
\x31\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x67\x75\x69\x64\x65\x34\x34\x31\x37\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\
\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\
\x74\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\x69\x63\x61\x6c\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\
\x6f\x6e\x3d\x22\x31\x32\x39\x2e\x39\x33\x30\x38\x37\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\
\x34\x34\x31\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\
\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\
\x22\x31\x39\x2e\x39\x39\x36\x38\x37\x35\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x35\x31\x30\
\x36\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\
\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x36\x33\
\x2e\x30\x33\x39\x36\x37\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x35\x31\x31\x39\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\
\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x34\x39\x2e\x30\x36\
\x36\x33\x30\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x67\x75\x69\x64\x65\x35\x31\x32\x31\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\
\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\
\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\
\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\
\x73\x69\x74\x69\x6f\x6e\x3d\x22\x2d\x38\x36\x2e\x30\x30\x37\x31\
\x36\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x67\x75\x69\x64\x65\x35\x33\x30\x37\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\
\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\
\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\
\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\
\x74\x69\x6f\x6e\x3d\x22\x2d\x31\x30\x38\x2e\x30\x39\x30\x30\x39\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\
\x69\x64\x65\x35\x33\x30\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\
\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\
\x6f\x6e\x3d\x22\x2d\x31\x30\x30\x2e\x31\x35\x34\x32\x39\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\
\x65\x33\x31\x31\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x47\x72\x69\x64\x46\x72\
\x6f\x6d\x50\x72\x65\x30\x34\x36\x53\x65\x74\x74\x69\x6e\x67\x73\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x79\x70\x65\x3d\x22\
\x78\x79\x67\x72\x69\x64\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x6f\x72\x69\x67\x69\x6e\x78\x3d\x22\x30\x70\x78\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x67\x69\x6e\x79\x3d\x22\x30\
\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x70\x61\x63\
\x69\x6e\x67\x78\x3d\x22\x30\x2e\x35\x70\x78\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x73\x70\x61\x63\x69\x6e\x67\x79\x3d\x22\x30\
\x2e\x35\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x6f\
\x6c\x6f\x72\x3d\x22\x23\x30\x30\x30\x30\x66\x66\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x65\x6d\x70\x63\x6f\x6c\x6f\x72\x3d\x22\
\x23\x30\x30\x30\x30\x66\x66\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\x32\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x65\x6d\x70\x6f\x70\x61\x63\x69\x74\
\x79\x3d\x22\x30\x2e\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x65\x6d\x70\x73\x70\x61\x63\x69\x6e\x67\x3d\x22\x32\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x3c\x2f\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\
\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x3e\x0d\x0a\x20\x20\x3c\x6d\
\x65\x74\x61\x64\x61\x74\x61\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\x31\x33\x31\x32\x22\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\x62\
\x6f\x75\x74\x3d\x22\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\
\x65\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\
\x72\x6d\x61\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\
\x64\x63\x3a\x74\x79\x70\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\
\x67\x2f\x64\x63\x2f\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\
\x69\x6c\x6c\x49\x6d\x61\x67\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\
\x4d\x65\x64\x69\x61\x20\x50\x6c\x61\x79\x62\x61\x63\x6b\x20\x50\
\x61\x75\x73\x65\x3c\x2f\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x63\x72\x65\
\x61\x74\x6f\x72\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x3c\x63\x63\x3a\x41\x67\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\
\x6c\x65\x3e\x4c\x61\x70\x6f\x20\x43\x61\x6c\x61\x6d\x61\x6e\x64\
\x72\x65\x69\x3c\x2f\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x41\
\x67\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\
\x2f\x64\x63\x3a\x63\x72\x65\x61\x74\x6f\x72\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x6c\x69\x63\x65\x6e\x73\
\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\
\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\
\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\
\x6e\x73\x2e\x6f\x72\x67\x2f\x6c\x69\x63\x65\x6e\x73\x65\x73\x2f\
\x70\x75\x62\x6c\x69\x63\x64\x6f\x6d\x61\x69\x6e\x2f\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x73\
\x75\x62\x6a\x65\x63\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x3c\x72\x64\x66\x3a\x42\x61\x67\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x6c\
\x69\x3e\x6d\x65\x64\x69\x61\x3c\x2f\x72\x64\x66\x3a\x6c\x69\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x72\
\x64\x66\x3a\x6c\x69\x3e\x73\x74\x6f\x70\x3c\x2f\x72\x64\x66\x3a\
\x6c\x69\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x3c\x72\x64\x66\x3a\x6c\x69\x3e\x70\x6c\x61\x79\x62\x61\x63\
\x6b\x3c\x2f\x72\x64\x66\x3a\x6c\x69\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x6c\x69\x3e\
\x76\x69\x64\x65\x6f\x3c\x2f\x72\x64\x66\x3a\x6c\x69\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x72\x64\x66\
\x3a\x6c\x69\x3e\x6d\x75\x73\x69\x63\x3c\x2f\x72\x64\x66\x3a\x6c\
\x69\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x2f\
\x72\x64\x66\x3a\x42\x61\x67\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x2f\x64\x63\x3a\x73\x75\x62\x6a\x65\x63\x74\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x63\x6f\x6e\
\x74\x72\x69\x62\x75\x74\x6f\x72\x3e\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x41\x67\x65\x6e\x74\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\
\x3a\x74\x69\x74\x6c\x65\x3e\x4a\x61\x6b\x75\x62\x20\x53\x74\x65\
\x69\x6e\x65\x72\x3c\x2f\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\
\x41\x67\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x2f\x64\x63\x3a\x63\x6f\x6e\x74\x72\x69\x62\x75\x74\x6f\x72\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\
\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x4c\
\x69\x63\x65\x6e\x73\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\x68\x74\x74\x70\
\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\
\x6e\x73\x2e\x6f\x72\x67\x2f\x6c\x69\x63\x65\x6e\x73\x65\x73\x2f\
\x70\x75\x62\x6c\x69\x63\x64\x6f\x6d\x61\x69\x6e\x2f\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x70\x65\x72\
\x6d\x69\x74\x73\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\
\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\x65\x63\x6f\
\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\x6e\x73\x23\x52\x65\x70\
\x72\x6f\x64\x75\x63\x74\x69\x6f\x6e\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x70\x65\x72\x6d\x69\
\x74\x73\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\
\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\
\x70\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\
\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\x6e\x73\x23\x44\x69\x73\x74\x72\
\x69\x62\x75\x74\x69\x6f\x6e\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x70\x65\x72\x6d\x69\x74\x73\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\
\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\
\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\
\x73\x2e\x6f\x72\x67\x2f\x6e\x73\x23\x44\x65\x72\x69\x76\x61\x74\
\x69\x76\x65\x57\x6f\x72\x6b\x73\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x4c\x69\x63\x65\x6e\x73\x65\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\x44\x46\
\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x3e\
\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\x22\x4c\
\x61\x79\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\x6f\x64\x65\
\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\
\x74\x79\x6c\x65\x3d\x22\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\
\x6c\x69\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\x72\x75\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x72\x5f\x63\x79\x3d\x22\x74\x72\x75\x65\x22\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\
\x2e\x31\x35\x3b\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\
\x30\x3b\x66\x69\x6c\x6c\x3a\x6e\x6f\x6e\x65\x3b\x66\x69\x6c\x6c\
\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x2d\
\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\x73\x74\x72\
\x6f\x6b\x65\x3a\x75\x72\x6c\x28\x23\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x33\x34\x33\x30\x29\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x31\x2e\x39\x39\x39\x39\
\x39\x39\x35\x32\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\
\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\
\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\
\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\x6d\
\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\x6d\
\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\x69\x6d\x69\x74\
\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x61\x72\
\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x76\x69\
\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\x65\
\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\x65\x3b\
\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\x20\x31\
\x34\x2e\x30\x30\x33\x38\x32\x2c\x31\x32\x2e\x38\x32\x39\x31\x30\
\x33\x20\x4c\x20\x31\x34\x2e\x30\x30\x33\x38\x32\x2c\x33\x34\x2e\
\x39\x38\x32\x33\x35\x39\x20\x4c\x20\x33\x35\x2e\x30\x30\x30\x30\
\x30\x34\x2c\x33\x34\x2e\x39\x38\x32\x33\x35\x39\x20\x4c\x20\x33\
\x35\x2e\x30\x30\x30\x30\x30\x34\x2c\x31\x32\x2e\x38\x32\x39\x31\
\x30\x33\x20\x4c\x20\x31\x34\x2e\x30\x30\x33\x38\x32\x2c\x31\x32\
\x2e\x38\x32\x39\x31\x30\x33\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\x68\x32\x38\x31\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x72\x5f\x63\x79\x3d\x22\x74\x72\x75\x65\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x79\x3d\
\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\x72\
\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\
\x3b\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x72\x61\x64\x69\x61\
\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x34\x32\x37\x29\x3b\x66\
\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\
\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\
\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x31\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6c\x69\x6e\x65\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\
\x3a\x6d\x69\x74\x65\x72\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\
\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\
\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\
\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\
\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\
\x72\x6c\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x64\x61\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\
\x3a\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\
\x79\x3a\x31\x3b\x76\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\
\x69\x73\x69\x62\x6c\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\
\x6e\x6c\x69\x6e\x65\x3b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\
\x69\x73\x69\x62\x6c\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x64\x3d\x22\x4d\x20\x31\x34\x2e\x35\x2c\x31\x33\x2e\x34\x30\x35\
\x37\x35\x20\x4c\x20\x31\x34\x2e\x35\x2c\x33\x34\x2e\x34\x30\x35\
\x37\x35\x20\x4c\x20\x33\x34\x2e\x35\x2c\x33\x34\x2e\x34\x30\x35\
\x37\x35\x20\x4c\x20\x33\x34\x2e\x35\x2c\x31\x33\x2e\x34\x30\x35\
\x37\x35\x20\x4c\x20\x31\x34\x2e\x35\x2c\x31\x33\x2e\x34\x30\x35\
\x37\x35\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x70\x61\x74\x68\x32\x38\x32\x37\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x79\
\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\
\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x70\x61\x74\x68\x32\x37\x36\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x64\x3d\x22\x4d\x20\x31\x34\x2e\x34\x39\x36\x37\x33\
\x37\x2c\x31\x33\x2e\x34\x30\x37\x39\x34\x36\x20\x4c\x20\x31\x34\
\x2e\x34\x39\x36\x37\x33\x37\x2c\x33\x34\x2e\x35\x30\x30\x30\x31\
\x20\x4c\x20\x33\x34\x2e\x34\x38\x37\x38\x30\x38\x2c\x33\x34\x2e\
\x35\x30\x30\x30\x31\x20\x4c\x20\x33\x34\x2e\x34\x38\x37\x38\x30\
\x38\x2c\x31\x33\x2e\x34\x30\x37\x39\x34\x36\x20\x4c\x20\x31\x34\
\x2e\x34\x39\x36\x37\x33\x37\x2c\x31\x33\x2e\x34\x30\x37\x39\x34\
\x36\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\
\x79\x6c\x65\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\
\x30\x30\x3b\x66\x69\x6c\x6c\x3a\x6e\x6f\x6e\x65\x3b\x66\x69\x6c\
\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\
\x2d\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\x73\x74\
\x72\x6f\x6b\x65\x3a\x75\x72\x6c\x28\x23\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x34\x32\x34\x29\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x30\x2e\x39\x39\x39\
\x39\x39\x39\x35\x32\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\
\x65\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\
\x64\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\
\x72\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\
\x6d\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\
\x6d\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\
\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\x69\x6d\x69\
\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x61\
\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x76\
\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\
\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\x65\
\x3b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\
\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\x68\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x72\x5f\x63\x79\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\
\x5f\x63\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\
\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x3a\x6e\x6f\x6e\
\x65\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\
\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\
\x64\x64\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x75\x72\x6c\x28\x23\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x34\x32\
\x31\x29\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\
\x30\x2e\x39\x39\x39\x39\x39\x39\x37\x36\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6c\x69\x6e\x65\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\
\x3a\x6d\x69\x74\x65\x72\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\
\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\
\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\
\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\
\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\
\x72\x6c\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x64\x61\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\
\x3a\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\
\x79\x3a\x31\x3b\x76\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\
\x69\x73\x69\x62\x6c\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\
\x6e\x6c\x69\x6e\x65\x3b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\
\x69\x73\x69\x62\x6c\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x64\x3d\x22\x4d\x20\x31\x35\x2e\x34\x39\x39\x34\x31\x32\x2c\x31\
\x34\x2e\x34\x30\x35\x37\x35\x20\x4c\x20\x31\x35\x2e\x34\x39\x39\
\x34\x31\x32\x2c\x33\x33\x2e\x34\x30\x35\x37\x35\x20\x4c\x20\x33\
\x33\x2e\x35\x30\x30\x35\x39\x35\x2c\x33\x33\x2e\x34\x30\x35\x37\
\x35\x20\x4c\x20\x33\x33\x2e\x35\x30\x30\x35\x39\x35\x2c\x31\x34\
\x2e\x34\x30\x35\x37\x35\x20\x4c\x20\x31\x35\x2e\x34\x39\x39\x34\
\x31\x32\x2c\x31\x34\x2e\x34\x30\x35\x37\x35\x20\x7a\x20\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\x68\
\x32\x38\x31\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x70\
\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x35\x3b\x63\
\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\
\x6c\x3a\x23\x66\x37\x66\x37\x66\x37\x3b\x66\x69\x6c\x6c\x2d\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x2d\x72\x75\
\x6c\x65\x3a\x6e\x6f\x6e\x7a\x65\x72\x6f\x3b\x73\x74\x72\x6f\x6b\
\x65\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\
\x64\x74\x68\x3a\x32\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\
\x65\x63\x61\x70\x3a\x72\x6f\x75\x6e\x64\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\
\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\
\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\x6d\
\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\x6d\
\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\x69\x6d\x69\x74\
\x3a\x31\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x61\
\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x76\
\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\
\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x62\x6c\x6f\x63\x6b\x3b\
\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\x20\x31\
\x36\x2c\x31\x34\x2e\x39\x34\x32\x37\x35\x38\x20\x4c\x20\x31\x36\
\x2c\x32\x35\x2e\x35\x20\x4c\x20\x33\x33\x2c\x32\x32\x2e\x37\x30\
\x39\x36\x37\x20\x4c\x20\x33\x33\x2c\x31\x34\x2e\x38\x35\x34\x33\
\x37\x20\x4c\x20\x31\x36\x2c\x31\x34\x2e\x39\x34\x32\x37\x35\x38\
\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x70\x61\x74\x68\x32\x34\x37\x39\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\
\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x79\x3d\x22\x74\
\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x6e\x6f\x64\x65\x74\x79\x70\x65\x73\x3d\
\x22\x63\x63\x63\x63\x63\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\
\x67\x3e\x0d\x0a\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x24\xab\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0a\x3c\x21\x2d\x2d\x20\x6d\x61\x64\x65\x20\
\x62\x79\x20\x41\x6e\x64\x79\x2c\x20\x49\x74\x27\x73\x20\x70\x75\
\x62\x6c\x69\x63\x20\x64\x6f\x6d\x61\x69\x6e\x2c\x20\x20\x79\x65\
\x61\x68\x20\x77\x68\x79\x20\x6e\x6f\x74\x2d\x2d\x3e\x0a\x0a\x3c\
\x73\x76\x67\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x64\x63\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\
\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\x74\x73\x2f\x31\x2e\x31\
\x2f\x22\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x63\x63\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\x65\x63\
\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\x6e\x73\x23\x22\x0a\
\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x72\x64\x66\x3d\x22\x68\x74\
\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\
\x31\x39\x39\x39\x2f\x30\x32\x2f\x32\x32\x2d\x72\x64\x66\x2d\x73\
\x79\x6e\x74\x61\x78\x2d\x6e\x73\x23\x22\x0a\x20\x20\x20\x78\x6d\
\x6c\x6e\x73\x3a\x73\x76\x67\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\
\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\
\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0a\x20\x20\x20\x78\x6d\
\x6c\x6e\x73\x3a\x78\x6c\x69\x6e\x6b\x3d\x22\x68\x74\x74\x70\x3a\
\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\
\x39\x2f\x78\x6c\x69\x6e\x6b\x22\x0a\x20\x20\x20\x78\x6d\x6c\x6e\
\x73\x3a\x73\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\
\x3a\x2f\x2f\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\
\x63\x65\x66\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0a\
\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\
\x70\x61\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0a\
\x20\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x30\x22\
\x0a\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x32\x38\x22\x0a\
\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x32\x38\x22\x0a\
\x20\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x34\x38\x39\x35\x22\x0a\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\
\x69\x6f\x6e\x3d\x22\x30\x2e\x34\x38\x2e\x31\x20\x22\x0a\x20\x20\
\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\x61\x6d\
\x65\x3d\x22\x6e\x65\x77\x2d\x64\x6f\x63\x6b\x2e\x73\x76\x67\x22\
\x3e\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\x0a\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\x37\
\x38\x22\x3e\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\
\x3e\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\x62\
\x6f\x75\x74\x3d\x22\x22\x3e\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\x65\
\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\x72\
\x6d\x61\x74\x3e\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\
\x3a\x74\x79\x70\x65\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\
\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\
\x63\x2f\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\
\x49\x6d\x61\x67\x65\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x20\x2f\x3e\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\x72\x6b\x3e\x0a\
\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\x44\x46\x3e\x0a\x20\
\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x3e\x0a\x20\x20\x3c\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\
\x65\x77\x0a\x20\x20\x20\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\
\x72\x3d\x22\x23\x66\x66\x66\x66\x66\x66\x22\x0a\x20\x20\x20\x20\
\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\
\x36\x36\x36\x36\x36\x22\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\
\x65\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x31\x22\x0a\x20\x20\
\x20\x20\x20\x6f\x62\x6a\x65\x63\x74\x74\x6f\x6c\x65\x72\x61\x6e\
\x63\x65\x3d\x22\x31\x30\x22\x0a\x20\x20\x20\x20\x20\x67\x72\x69\
\x64\x74\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\x30\x22\x0a\
\x20\x20\x20\x20\x20\x67\x75\x69\x64\x65\x74\x6f\x6c\x65\x72\x61\
\x6e\x63\x65\x3d\x22\x31\x30\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\
\x74\x79\x3d\x22\x30\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\x77\x3d\
\x22\x32\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\
\x31\x30\x32\x34\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\x65\x69\x67\x68\
\x74\x3d\x22\x35\x37\x38\x22\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x37\x36\x22\x0a\x20\x20\
\x20\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x66\x61\x6c\
\x73\x65\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x31\x2e\x38\x35\x39\x33\x37\x35\
\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x78\x3d\x22\x2d\x31\x32\x39\x2e\x38\x38\x32\x33\x35\x22\x0a\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x79\
\x3d\x22\x35\x38\x2e\x38\x39\x30\x37\x35\x36\x22\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\
\x77\x2d\x78\x3d\x22\x2d\x38\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\x3d\
\x22\x2d\x38\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\x6d\x69\
\x7a\x65\x64\x3d\x22\x31\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\
\x79\x65\x72\x3d\x22\x73\x76\x67\x34\x38\x39\x35\x22\x20\x2f\x3e\
\x0a\x20\x20\x3c\x64\x65\x66\x73\x0a\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x64\x65\x66\x73\x33\x22\x3e\x0a\x20\x20\x20\x20\x3c\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x33\x36\x39\x36\x22\x3e\x0a\x20\x20\
\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x36\x39\x38\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\
\x3d\x22\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\
\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\
\x23\x37\x33\x64\x32\x31\x36\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\
\x63\x69\x74\x79\x3a\x31\x3b\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x73\x74\x6f\x70\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\
\x6f\x72\x3a\x23\x37\x65\x64\x36\x31\x63\x3b\x73\x74\x6f\x70\x2d\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x2e\x35\
\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\
\x74\x6f\x70\x33\x37\x30\x34\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x73\x74\x6f\x70\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x37\x30\x30\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\
\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\
\x66\x66\x66\x66\x33\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\
\x74\x79\x3a\x31\x3b\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x2f\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0a\
\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\
\x72\x73\x70\x65\x63\x74\x69\x76\x65\x0a\x20\x20\x20\x20\x20\x20\
\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\
\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x36\x34\x20\x3a\
\x20\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\
\x30\x30\x20\x3a\x20\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x32\
\x38\x20\x3a\x20\x36\x34\x20\x3a\x20\x31\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\
\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x36\x34\x20\x3a\
\x20\x34\x32\x2e\x36\x36\x36\x36\x36\x37\x20\x3a\x20\x31\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\
\x65\x63\x74\x69\x76\x65\x38\x30\x22\x20\x2f\x3e\x0a\x20\x20\x20\
\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x57\x68\x69\x74\
\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x3e\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\
\x63\x6f\x6c\x6f\x72\x3a\x77\x68\x69\x74\x65\x3b\x73\x74\x6f\x70\
\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\
\x70\x36\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\
\x6f\x70\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x77\x68\
\x69\x74\x65\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\
\x3a\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x38\x22\x20\x2f\x3e\x0a\x20\
\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x42\x6c\x61\x63\x6b\x54\x72\x61\x6e\x73\x70\x61\
\x72\x65\x6e\x74\x22\x3e\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\
\x6f\x70\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x62\x6c\
\x61\x63\x6b\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\
\x3a\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x31\x31\x22\x20\x2f\x3e\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\
\x2d\x63\x6f\x6c\x6f\x72\x3a\x62\x6c\x61\x63\x6b\x3b\x73\x74\x6f\
\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x22\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x31\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\
\x6f\x70\x31\x33\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x2f\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0a\x20\
\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\x74\x65\x54\x72\x61\x6e\
\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x67\x31\x39\x39\x39\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x31\x3d\x22\x36\x33\x37\x2e\x30\x33\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x36\x39\x2e\x39\x39\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x36\x33\x38\x2e\
\x33\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x31\x31\
\x38\x2e\x33\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\
\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x31\x2c\
\x30\x2e\x31\x2c\x2d\x30\x2e\x32\x32\x2c\x30\x2e\x32\x2c\x37\x35\
\x2e\x36\x2c\x2d\x33\x33\x2e\x35\x33\x29\x22\x20\x2f\x3e\x0a\x20\
\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\
\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\x74\x65\x54\x72\x61\x6e\
\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x67\x30\x32\x22\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x31\x3d\x22\x35\x31\x32\x2e\x37\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x79\x31\x3d\x22\x32\x35\x34\x2e\x33\x36\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x36\x31\x35\x2e\x35\x39\
\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x32\x35\x34\
\x2e\x38\x33\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\
\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x38\x2e\x30\x37\
\x65\x2d\x32\x2c\x37\x2e\x37\x35\x65\x2d\x32\x2c\x2d\x30\x2e\x33\
\x35\x2c\x30\x2e\x33\x36\x2c\x37\x37\x2e\x31\x34\x2c\x2d\x34\x35\
\x2e\x38\x39\x29\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\
\x23\x42\x6c\x61\x63\x6b\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\
\x74\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x67\
\x30\x35\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x35\
\x34\x33\x2e\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\
\x22\x32\x38\x36\x2e\x35\x36\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x32\x3d\x22\x34\x31\x39\x2e\x38\x38\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x79\x32\x3d\x22\x32\x38\x36\x2e\x35\x36\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\
\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\
\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\
\x61\x74\x72\x69\x78\x28\x39\x2e\x39\x38\x65\x2d\x32\x2c\x39\x2e\
\x39\x38\x65\x2d\x32\x2c\x2d\x30\x2e\x32\x38\x2c\x30\x2e\x32\x38\
\x2c\x37\x38\x2e\x38\x34\x2c\x2d\x34\x34\x2e\x38\x29\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x73\x70\x72\x65\x61\x64\x4d\x65\x74\x68\
\x6f\x64\x3d\x22\x70\x61\x64\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\
\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\
\x66\x3d\x22\x23\x57\x68\x69\x74\x65\x54\x72\x61\x6e\x73\x70\x61\
\x72\x65\x6e\x74\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x6c\x67\x30\x39\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\
\x3d\x22\x32\x35\x38\x2e\x39\x36\x22\x0a\x20\x20\x20\x20\x20\x20\
\x20\x79\x31\x3d\x22\x36\x32\x2e\x37\x34\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x32\x3d\x22\x32\x35\x38\x2e\x39\x36\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x2d\x31\x2e\x37\x32\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\
\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\
\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\
\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x33\x33\x2c\x30\x2e\x33\
\x33\x2c\x2d\x39\x2e\x34\x34\x65\x2d\x32\x2c\x39\x2e\x34\x34\x65\
\x2d\x32\x2c\x39\x2e\x30\x33\x2c\x2d\x34\x38\x2e\x31\x29\x22\x20\
\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\
\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\x74\x65\
\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x67\x31\x32\x22\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x31\x34\x36\x2e\x31\x35\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x32\x38\x38\x2e\
\x35\x37\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\
\x34\x36\x2e\x31\x35\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\
\x3d\x22\x33\x36\x38\x2e\x32\x37\x22\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\
\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\
\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\
\x28\x30\x2e\x33\x2c\x30\x2e\x33\x2c\x2d\x39\x65\x2d\x32\x2c\x39\
\x65\x2d\x32\x2c\x37\x38\x2e\x38\x34\x2c\x2d\x34\x34\x2e\x38\x29\
\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\
\x74\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x67\x31\x36\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x35\x37\x37\x2e\x30\
\x33\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x32\
\x34\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x36\x32\
\x36\x2e\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\
\x31\x32\x34\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\
\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x37\x2e\x37\x35\
\x65\x2d\x32\x2c\x37\x2e\x37\x35\x65\x2d\x32\x2c\x2d\x30\x2e\x33\
\x36\x2c\x30\x2e\x33\x36\x2c\x37\x38\x2e\x38\x34\x2c\x2d\x34\x34\
\x2e\x38\x29\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x70\x72\x65\
\x61\x64\x4d\x65\x74\x68\x6f\x64\x3d\x22\x70\x61\x64\x22\x20\x2f\
\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\
\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x42\x6c\x61\x63\x6b\x54\
\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6c\x67\x31\x39\x22\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x31\x3d\x22\x37\x35\x2e\x31\x22\x0a\x20\x20\
\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x31\x38\x39\x2e\x31\x34\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x37\x31\x2e\x37\
\x37\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x31\x38\
\x35\x2e\x38\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\
\x61\x74\x72\x69\x78\x28\x31\x2e\x30\x35\x2c\x30\x2c\x30\x2c\x31\
\x2e\x30\x35\x2c\x30\x2e\x31\x33\x2c\x2d\x31\x34\x30\x2e\x35\x34\
\x29\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\
\x69\x74\x65\x54\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x67\x35\x31\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x36\x34\x36\x2e\
\x32\x34\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x2d\
\x32\x35\x32\x2e\x36\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\
\x3d\x22\x36\x30\x37\x2e\x36\x36\x22\x0a\x20\x20\x20\x20\x20\x20\
\x20\x79\x32\x3d\x22\x2d\x31\x38\x36\x2e\x32\x36\x22\x0a\x20\x20\
\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\
\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\
\x73\x65\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\
\x74\x72\x69\x78\x28\x30\x2e\x32\x2c\x30\x2c\x30\x2c\x30\x2e\x32\
\x2c\x2d\x38\x30\x2e\x39\x34\x2c\x38\x38\x2e\x33\x29\x22\x20\x2f\
\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\
\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x57\x68\x69\x74\x65\x54\
\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6c\x67\x35\x35\x22\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x31\x3d\x22\x35\x35\x30\x2e\x39\x36\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x2d\x31\x33\x37\x2e\
\x35\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x36\x35\
\x35\x2e\x34\x32\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\
\x22\x2d\x32\x34\x31\x2e\x32\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\
\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\
\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\
\x30\x2e\x32\x36\x2c\x30\x2c\x30\x2c\x30\x2e\x32\x36\x2c\x2d\x31\
\x30\x36\x2e\x35\x37\x2c\x31\x30\x31\x2e\x35\x37\x29\x22\x20\x2f\
\x3e\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\
\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x42\x6c\x61\x63\x6b\x54\
\x72\x61\x6e\x73\x70\x61\x72\x65\x6e\x74\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6c\x67\x64\x67\x22\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x31\x3d\x22\x37\x33\x2e\x38\x38\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x36\x36\x2e\x32\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x38\x34\x2e\x33\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x38\x36\x2e\x36\
\x38\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\
\x6e\x73\x6c\x61\x74\x65\x28\x2d\x30\x2e\x33\x30\x32\x36\x37\x2c\
\x2d\x33\x2e\x32\x30\x31\x33\x38\x29\x22\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\
\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\
\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x63\x6c\x69\x70\x50\x61\x74\
\x68\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x6c\x69\x70\x50\x61\x74\
\x68\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\
\x65\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x63\x6c\x69\x70\x6f\x75\x74\x6c\x69\x6e\x65\x31\x22\
\x3e\x0a\x20\x20\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6f\x75\x74\x6c\x69\
\x6e\x65\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x3d\
\x22\x4d\x20\x32\x32\x2e\x34\x32\x2c\x31\x37\x2e\x32\x20\x4c\x20\
\x33\x35\x2e\x33\x38\x2c\x33\x30\x2e\x31\x35\x20\x4c\x20\x33\x32\
\x2e\x38\x38\x2c\x33\x38\x2e\x39\x33\x20\x4c\x20\x32\x34\x2e\x31\
\x2c\x34\x31\x2e\x34\x33\x20\x4c\x20\x31\x31\x2e\x31\x34\x2c\x32\
\x38\x2e\x34\x37\x20\x4c\x20\x35\x2e\x32\x38\x2c\x33\x34\x2e\x33\
\x33\x20\x4c\x20\x32\x30\x2e\x31\x37\x2c\x35\x35\x2e\x37\x39\x20\
\x4c\x20\x33\x37\x2e\x37\x33\x2c\x35\x32\x2e\x34\x35\x20\x4c\x20\
\x39\x39\x2e\x33\x36\x2c\x31\x31\x38\x2e\x30\x37\x20\x43\x20\x31\
\x30\x38\x2e\x38\x2c\x31\x32\x37\x2e\x35\x38\x20\x31\x32\x31\x2e\
\x35\x33\x2c\x31\x31\x33\x2e\x33\x32\x20\x31\x31\x32\x2e\x37\x2c\
\x31\x30\x35\x2e\x32\x20\x4c\x20\x34\x36\x2e\x38\x35\x2c\x34\x32\
\x2e\x39\x32\x20\x4c\x20\x35\x30\x2e\x38\x36\x2c\x32\x35\x2e\x31\
\x36\x20\x4c\x20\x32\x38\x2e\x37\x32\x2c\x31\x30\x2e\x38\x39\x20\
\x4c\x20\x32\x32\x2e\x34\x32\x2c\x31\x37\x2e\x32\x20\x7a\x20\x4d\
\x20\x31\x30\x33\x2e\x34\x38\x2c\x31\x30\x39\x2e\x31\x37\x20\x43\
\x20\x31\x30\x35\x2e\x31\x36\x2c\x31\x30\x37\x2e\x34\x39\x20\x31\
\x30\x37\x2e\x38\x38\x2c\x31\x30\x37\x2e\x34\x39\x20\x31\x30\x39\
\x2e\x35\x36\x2c\x31\x30\x39\x2e\x31\x37\x20\x43\x20\x31\x31\x31\
\x2e\x32\x34\x2c\x31\x31\x30\x2e\x38\x35\x20\x31\x31\x31\x2e\x32\
\x34\x2c\x31\x31\x33\x2e\x35\x37\x20\x31\x30\x39\x2e\x35\x36\x2c\
\x31\x31\x35\x2e\x32\x35\x20\x43\x20\x31\x30\x37\x2e\x38\x38\x2c\
\x31\x31\x36\x2e\x39\x32\x20\x31\x30\x35\x2e\x31\x36\x2c\x31\x31\
\x36\x2e\x39\x32\x20\x31\x30\x33\x2e\x34\x38\x2c\x31\x31\x35\x2e\
\x32\x35\x20\x43\x20\x31\x30\x31\x2e\x38\x2c\x31\x31\x33\x2e\x35\
\x37\x20\x31\x30\x31\x2e\x38\x2c\x31\x31\x30\x2e\x38\x35\x20\x31\
\x30\x33\x2e\x34\x38\x2c\x31\x30\x39\x2e\x31\x37\x20\x7a\x22\x20\
\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x2f\x63\x6c\x69\x70\x50\x61\x74\
\x68\x3e\x0a\x20\x20\x20\x20\x3c\x63\x6c\x69\x70\x50\x61\x74\x68\
\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x6c\x69\x70\x50\x61\x74\x68\
\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\
\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x63\x6c\x69\x70\x6f\x75\x74\x6c\x69\x6e\x65\x32\x22\x3e\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6f\x75\x74\x6c\x69\x6e\
\x65\x32\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\
\x4d\x20\x35\x35\x2e\x38\x2c\x31\x32\x20\x4c\x20\x35\x36\x2e\x35\
\x36\x2c\x31\x32\x2e\x31\x36\x20\x43\x20\x36\x35\x2e\x34\x2c\x39\
\x2e\x32\x32\x20\x38\x35\x2e\x32\x34\x2c\x32\x30\x2e\x38\x20\x38\
\x30\x2e\x38\x32\x2c\x33\x31\x2e\x31\x32\x20\x43\x20\x37\x39\x2e\
\x37\x2c\x33\x32\x2e\x37\x34\x20\x37\x39\x2e\x38\x39\x2c\x33\x35\
\x2e\x36\x32\x20\x38\x31\x2e\x32\x34\x2c\x33\x37\x2e\x34\x33\x20\
\x4c\x20\x35\x36\x2e\x34\x33\x2c\x36\x32\x2e\x32\x35\x20\x43\x20\
\x35\x35\x2e\x30\x34\x2c\x36\x30\x2e\x38\x36\x20\x35\x31\x2e\x39\
\x35\x2c\x36\x30\x2e\x38\x39\x20\x35\x30\x2e\x35\x33\x2c\x36\x32\
\x2e\x32\x35\x20\x4c\x20\x39\x2e\x35\x2c\x31\x30\x31\x2e\x36\x33\
\x20\x43\x20\x35\x2e\x37\x36\x2c\x31\x30\x35\x2e\x32\x32\x20\x38\
\x2e\x37\x2c\x31\x30\x38\x2e\x32\x37\x20\x31\x30\x2e\x32\x38\x2c\
\x31\x30\x39\x2e\x38\x38\x20\x4c\x20\x31\x37\x2e\x36\x34\x2c\x31\
\x31\x37\x2e\x32\x34\x20\x43\x20\x31\x39\x2e\x32\x35\x2c\x31\x31\
\x38\x2e\x38\x34\x20\x32\x33\x2e\x35\x2c\x31\x32\x31\x20\x32\x36\
\x2e\x35\x32\x2c\x31\x31\x37\x2e\x38\x20\x4c\x20\x36\x35\x2e\x32\
\x34\x2c\x37\x36\x2e\x39\x39\x20\x43\x20\x36\x36\x2e\x35\x39\x2c\
\x37\x35\x2e\x35\x37\x20\x36\x36\x2e\x36\x2c\x37\x32\x2e\x35\x32\
\x20\x36\x35\x2e\x32\x34\x2c\x37\x31\x2e\x31\x32\x20\x43\x20\x36\
\x35\x2e\x32\x34\x2c\x37\x31\x2e\x31\x32\x20\x36\x35\x2e\x32\x35\
\x2c\x37\x31\x2e\x31\x20\x36\x35\x2e\x32\x34\x2c\x37\x31\x2e\x31\
\x20\x4c\x20\x39\x30\x2e\x31\x35\x2c\x34\x36\x2e\x32\x20\x43\x20\
\x39\x32\x2e\x37\x38\x2c\x34\x38\x2e\x35\x37\x20\x39\x35\x2e\x32\
\x36\x33\x38\x32\x37\x2c\x34\x38\x2e\x37\x37\x34\x38\x35\x34\x20\
\x39\x37\x2e\x36\x32\x2c\x34\x38\x2e\x31\x33\x20\x43\x20\x31\x30\
\x32\x2e\x31\x37\x30\x35\x37\x2c\x34\x36\x2e\x38\x38\x34\x35\x36\
\x38\x20\x31\x30\x34\x2e\x37\x30\x37\x32\x35\x2c\x35\x31\x2e\x33\
\x33\x36\x36\x34\x33\x20\x31\x30\x37\x2e\x34\x33\x2c\x35\x34\x2e\
\x35\x39\x20\x4c\x20\x31\x30\x36\x2e\x32\x2c\x35\x35\x2e\x38\x20\
\x43\x20\x31\x30\x34\x2e\x33\x38\x2c\x35\x37\x2e\x36\x34\x20\x31\
\x30\x34\x2e\x35\x35\x2c\x36\x30\x2e\x37\x34\x20\x31\x30\x36\x2e\
\x35\x39\x2c\x36\x32\x2e\x37\x38\x20\x43\x20\x31\x30\x38\x2e\x36\
\x33\x2c\x36\x34\x2e\x38\x32\x20\x31\x31\x31\x2e\x37\x34\x2c\x36\
\x34\x2e\x39\x39\x20\x31\x31\x33\x2e\x35\x36\x2c\x36\x33\x2e\x31\
\x37\x20\x4c\x20\x31\x32\x31\x2e\x37\x2c\x35\x35\x2e\x30\x34\x20\
\x43\x20\x31\x32\x33\x2e\x35\x32\x2c\x35\x33\x2e\x32\x20\x31\x32\
\x33\x2e\x33\x35\x2c\x35\x30\x2e\x31\x20\x31\x32\x31\x2e\x33\x2c\
\x34\x38\x2e\x30\x37\x20\x43\x20\x31\x31\x39\x2e\x34\x36\x2c\x34\
\x36\x2e\x32\x32\x20\x31\x31\x36\x2e\x37\x39\x2c\x34\x35\x2e\x39\
\x38\x20\x31\x31\x34\x2e\x39\x33\x2c\x34\x37\x2e\x33\x20\x43\x20\
\x31\x30\x39\x2e\x33\x35\x2c\x34\x31\x2e\x30\x34\x20\x31\x31\x32\
\x2e\x32\x38\x2c\x34\x30\x2e\x31\x20\x31\x30\x34\x2e\x39\x32\x2c\
\x33\x31\x2e\x39\x35\x20\x4c\x20\x39\x31\x2e\x31\x33\x2c\x31\x37\
\x2e\x38\x36\x20\x43\x20\x38\x31\x2e\x32\x2c\x38\x2e\x31\x32\x20\
\x36\x38\x2e\x33\x2c\x38\x2e\x31\x33\x20\x35\x35\x2e\x38\x2c\x31\
\x32\x20\x7a\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x2f\x63\x6c\
\x69\x70\x50\x61\x74\x68\x3e\x0a\x20\x20\x20\x20\x3c\x21\x2d\x2d\
\x20\x2d\x2d\x3e\x0a\x20\x20\x20\x20\x3c\x66\x69\x6c\x74\x65\x72\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x53\x68\x61\x64\
\x6f\x77\x42\x6c\x75\x72\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x66\
\x69\x6c\x74\x65\x72\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\
\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x3d\x22\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x79\x3d\x22\x30\x22\x3e\x0a\x20\x20\x20\x20\x20\x20\x3c\x66\x65\
\x47\x61\x75\x73\x73\x69\x61\x6e\x42\x6c\x75\x72\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x3d\x22\x53\x6f\x75\x72\x63\x65\
\x47\x72\x61\x70\x68\x69\x63\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x73\x74\x64\x44\x65\x76\x69\x61\x74\x69\x6f\x6e\x3d\x22\
\x32\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x66\x65\x47\x61\x75\x73\x73\x69\x61\x6e\x42\x6c\x75\x72\x36\x22\
\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x2f\x66\x69\x6c\x74\x65\x72\
\x3e\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\
\x64\x69\x65\x6e\x74\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\
\x6c\x77\x61\x79\x73\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\
\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x36\x39\x36\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\
\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x37\x30\x32\x22\x0a\x20\x20\
\x20\x20\x20\x20\x20\x63\x78\x3d\x22\x31\x32\x2e\x33\x36\x39\x37\
\x34\x38\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\x22\x31\
\x37\x2e\x32\x31\x30\x30\x38\x35\x22\x0a\x20\x20\x20\x20\x20\x20\
\x20\x66\x78\x3d\x22\x31\x32\x2e\x33\x36\x39\x37\x34\x38\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x31\x37\x2e\x32\x31\
\x30\x30\x38\x35\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\
\x36\x36\x2e\x36\x35\x31\x32\x36\x22\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\
\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x20\
\x2f\x3e\x0a\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0a\x20\x20\x3c\
\x73\x74\x79\x6c\x65\x0a\x20\x20\x20\x20\x20\x74\x79\x70\x65\x3d\
\x22\x74\x65\x78\x74\x2f\x63\x73\x73\x22\x0a\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x73\x74\x79\x6c\x65\x33\x31\x22\x3e\x0a\x09\x2f\
\x2a\x20\x53\x70\x65\x63\x75\x6c\x61\x72\x20\x48\x69\x67\x68\x6c\
\x69\x67\x68\x74\x69\x6e\x67\x20\x2a\x2f\x0a\x09\x09\x2e\x6c\x6f\
\x77\x2d\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\x09\x7b\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x32\x35\x3b\x7d\x0a\x09\x09\
\x2e\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\x09\x09\x7b\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x35\x3b\x7d\x0a\x09\x09\x2e\
\x68\x69\x67\x68\x2d\x73\x70\x65\x63\x75\x6c\x61\x72\x69\x74\x79\
\x09\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x37\x35\x3b\x7d\
\x0a\x09\x09\x2e\x66\x75\x6c\x6c\x2d\x73\x70\x65\x63\x75\x6c\x61\
\x72\x69\x74\x79\x09\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\
\x7d\x0a\x0a\x09\x2f\x2a\x20\x53\x68\x61\x64\x69\x6e\x67\x20\x2a\
\x2f\x0a\x09\x09\x2e\x6c\x6f\x77\x2d\x73\x68\x61\x64\x65\x09\x7b\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x32\x35\x3b\x7d\x0a\x09\
\x09\x2e\x73\x68\x61\x64\x65\x09\x09\x7b\x6f\x70\x61\x63\x69\x74\
\x79\x3a\x30\x2e\x35\x3b\x7d\x0a\x09\x09\x2e\x68\x69\x67\x68\x2d\
\x73\x68\x61\x64\x65\x09\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\
\x2e\x37\x35\x3b\x7d\x0a\x09\x09\x2e\x66\x75\x6c\x6c\x2d\x73\x68\
\x61\x64\x65\x09\x7b\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x7d\
\x0a\x0a\x09\x2f\x2a\x20\x54\x61\x6e\x67\x6f\x20\x70\x61\x6c\x65\
\x74\x74\x65\x20\x66\x69\x6c\x6c\x2f\x73\x74\x72\x6f\x6b\x65\x20\
\x2a\x2f\x0a\x09\x09\x2e\x62\x6c\x61\x63\x6b\x09\x09\x7b\x66\x69\
\x6c\x6c\x3a\x23\x30\x30\x30\x3b\x7d\x0a\x09\x09\x2e\x61\x6c\x75\
\x6d\x69\x6e\x69\x75\x6d\x31\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x65\
\x65\x65\x65\x65\x63\x3b\x7d\x0a\x09\x09\x2e\x61\x6c\x75\x6d\x69\
\x6e\x69\x75\x6d\x32\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x64\x33\x64\
\x37\x63\x66\x3b\x7d\x0a\x09\x09\x2e\x61\x6c\x75\x6d\x69\x6e\x69\
\x75\x6d\x36\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x32\x65\x33\x34\x33\
\x36\x3b\x7d\x0a\x09\x09\x2e\x63\x68\x6f\x63\x6f\x6c\x61\x74\x65\
\x33\x09\x7b\x66\x69\x6c\x6c\x3a\x23\x38\x66\x35\x39\x30\x32\x3b\
\x7d\x0a\x09\x09\x2e\x63\x68\x6f\x63\x6f\x6c\x61\x74\x65\x32\x09\
\x7b\x66\x69\x6c\x6c\x3a\x23\x63\x31\x37\x64\x31\x31\x3b\x7d\x0a\
\x09\x09\x2e\x61\x6c\x75\x6d\x69\x6e\x69\x75\x6d\x34\x09\x7b\x66\
\x69\x6c\x6c\x3a\x23\x38\x38\x38\x61\x38\x35\x3b\x7d\x0a\x0a\x09\
\x2f\x2a\x20\x53\x68\x61\x64\x6f\x77\x73\x3a\x20\x42\x61\x63\x6b\
\x2d\x53\x68\x61\x64\x6f\x77\x73\x20\x26\x61\x6d\x70\x3b\x20\x42\
\x61\x73\x65\x20\x53\x68\x61\x64\x6f\x77\x73\x20\x2a\x2f\x0a\x09\
\x09\x2e\x62\x61\x73\x65\x2d\x73\x68\x61\x64\x6f\x77\x09\x7b\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x34\x3b\x7d\x0a\x09\x09\x2e\
\x6f\x75\x74\x6c\x69\x6e\x65\x2d\x62\x69\x67\x09\x7b\x73\x74\x72\
\x6f\x6b\x65\x3a\x62\x6c\x61\x63\x6b\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x77\x69\x64\x74\x68\x3a\x38\x3b\x6f\x70\x61\x63\x69\x74\x79\
\x3a\x30\x2e\x32\x35\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\
\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\x3b\x7d\x0a\x09\x09\
\x2e\x6f\x75\x74\x6c\x69\x6e\x65\x2d\x73\x6d\x61\x6c\x6c\x09\x7b\
\x73\x74\x72\x6f\x6b\x65\x3a\x62\x6c\x61\x63\x6b\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x34\x3b\x6f\x70\x61\x63\
\x69\x74\x79\x3a\x30\x2e\x35\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\
\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\x3b\x7d\x0a\
\x09\x09\x2e\x73\x74\x72\x6f\x6b\x65\x2d\x68\x69\x67\x68\x6c\x69\
\x67\x68\x74\x09\x7b\x66\x69\x6c\x6c\x3a\x6e\x6f\x6e\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x3a\x77\x68\x69\x74\x65\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x32\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x34\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\
\x75\x6e\x64\x3b\x7d\x0a\x09\x3c\x2f\x73\x74\x79\x6c\x65\x3e\x0a\
\x20\x20\x3c\x70\x61\x74\x68\x0a\x20\x20\x20\x20\x20\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x61\x72\x63\x22\
\x0a\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\
\x6c\x3a\x75\x72\x6c\x28\x23\x72\x61\x64\x69\x61\x6c\x47\x72\x61\
\x64\x69\x65\x6e\x74\x33\x37\x30\x32\x29\x3b\x66\x69\x6c\x6c\x2d\
\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\x73\x74\x72\
\x6f\x6b\x65\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x31\x70\x78\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x63\x61\x70\x3a\x62\x75\x74\x74\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\
\x3a\x6d\x69\x74\x65\x72\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\
\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\
\x63\x69\x74\x79\x3a\x31\x22\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x70\x61\x74\x68\x32\x39\x30\x37\x22\x0a\x20\x20\x20\x20\x20\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x63\x78\x3d\x22\x31\x32\x2e\
\x33\x36\x39\x37\x34\x38\x22\x0a\x20\x20\x20\x20\x20\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x63\x79\x3d\x22\x31\x37\x2e\x32\x31\x30\
\x30\x38\x35\x22\x0a\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x72\x78\x3d\x22\x36\x36\x2e\x31\x35\x31\x32\x36\x22\
\x0a\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x72\
\x79\x3d\x22\x36\x36\x2e\x31\x35\x31\x32\x36\x22\x0a\x20\x20\x20\
\x20\x20\x64\x3d\x22\x6d\x20\x37\x38\x2e\x35\x32\x31\x30\x30\x38\
\x2c\x31\x37\x2e\x32\x31\x30\x30\x38\x35\x20\x61\x20\x36\x36\x2e\
\x31\x35\x31\x32\x36\x2c\x36\x36\x2e\x31\x35\x31\x32\x36\x20\x30\
\x20\x31\x20\x31\x20\x2d\x31\x33\x32\x2e\x33\x30\x32\x35\x32\x2c\
\x30\x20\x36\x36\x2e\x31\x35\x31\x32\x36\x2c\x36\x36\x2e\x31\x35\
\x31\x32\x36\x20\x30\x20\x31\x20\x31\x20\x31\x33\x32\x2e\x33\x30\
\x32\x35\x32\x2c\x30\x20\x7a\x22\x0a\x20\x20\x20\x20\x20\x74\x72\
\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\
\x30\x2e\x39\x34\x33\x35\x31\x36\x33\x36\x2c\x30\x2c\x30\x2c\x30\
\x2e\x39\x34\x33\x35\x31\x36\x33\x36\x2c\x35\x32\x2e\x33\x32\x38\
\x39\x34\x2c\x34\x37\x2e\x37\x36\x32\x30\x30\x33\x29\x22\x20\x2f\
\x3e\x0a\x20\x20\x3c\x70\x61\x74\x68\x0a\x20\x20\x20\x20\x20\x73\
\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x66\x66\x66\x66\
\x66\x66\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x6e\x6f\x6e\
\x7a\x65\x72\x6f\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x23\x30\x30\x30\
\x30\x30\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\
\x3a\x31\x70\x78\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\
\x63\x61\x70\x3a\x62\x75\x74\x74\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x6d\x69\x74\x65\x72\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x22\
\x0a\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\x20\x35\x31\x2e\x30\x37\
\x38\x31\x32\x35\x2c\x31\x34\x2e\x35\x31\x35\x36\x32\x35\x20\x63\
\x20\x30\x2c\x31\x32\x2e\x31\x39\x37\x39\x31\x37\x20\x30\x2c\x32\
\x34\x2e\x33\x39\x35\x38\x33\x33\x20\x30\x2c\x33\x36\x2e\x35\x39\
\x33\x37\x35\x20\x2d\x31\x32\x2e\x31\x38\x37\x35\x2c\x30\x20\x2d\
\x32\x34\x2e\x33\x37\x35\x2c\x30\x20\x2d\x33\x36\x2e\x35\x36\x32\
\x35\x2c\x30\x20\x30\x2c\x38\x2e\x36\x30\x34\x31\x36\x37\x20\x30\
\x2c\x31\x37\x2e\x32\x30\x38\x33\x33\x33\x20\x30\x2c\x32\x35\x2e\
\x38\x31\x32\x35\x20\x31\x32\x2e\x31\x38\x37\x35\x2c\x30\x20\x32\
\x34\x2e\x33\x37\x35\x2c\x30\x20\x33\x36\x2e\x35\x36\x32\x35\x2c\
\x30\x20\x30\x2c\x31\x32\x2e\x31\x38\x37\x35\x30\x32\x20\x30\x2c\
\x32\x34\x2e\x33\x37\x35\x30\x30\x35\x20\x30\x2c\x33\x36\x2e\x35\
\x36\x32\x35\x30\x35\x20\x38\x2e\x36\x30\x34\x31\x36\x37\x2c\x30\
\x20\x31\x37\x2e\x32\x30\x38\x33\x33\x33\x2c\x30\x20\x32\x35\x2e\
\x38\x31\x32\x35\x2c\x30\x20\x30\x2c\x2d\x31\x32\x2e\x31\x38\x37\
\x35\x20\x30\x2c\x2d\x32\x34\x2e\x33\x37\x35\x30\x30\x33\x20\x30\
\x2c\x2d\x33\x36\x2e\x35\x36\x32\x35\x30\x35\x20\x31\x32\x2e\x31\
\x39\x37\x39\x31\x38\x2c\x30\x20\x32\x34\x2e\x33\x39\x35\x38\x33\
\x35\x2c\x30\x20\x33\x36\x2e\x35\x39\x33\x37\x35\x35\x2c\x30\x20\
\x30\x2c\x2d\x38\x2e\x36\x30\x34\x31\x36\x37\x20\x30\x2c\x2d\x31\
\x37\x2e\x32\x30\x38\x33\x33\x33\x20\x30\x2c\x2d\x32\x35\x2e\x38\
\x31\x32\x35\x20\x2d\x31\x32\x2e\x31\x39\x37\x39\x32\x2c\x30\x20\
\x2d\x32\x34\x2e\x33\x39\x35\x38\x33\x37\x2c\x30\x20\x2d\x33\x36\
\x2e\x35\x39\x33\x37\x35\x35\x2c\x30\x20\x30\x2c\x2d\x31\x32\x2e\
\x31\x39\x37\x39\x31\x37\x20\x30\x2c\x2d\x32\x34\x2e\x33\x39\x35\
\x38\x33\x33\x20\x30\x2c\x2d\x33\x36\x2e\x35\x39\x33\x37\x35\x20\
\x2d\x38\x2e\x36\x30\x34\x31\x36\x37\x2c\x30\x20\x2d\x31\x37\x2e\
\x32\x30\x38\x33\x33\x33\x2c\x30\x20\x2d\x32\x35\x2e\x38\x31\x32\
\x35\x2c\x30\x20\x7a\x22\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x72\x65\x63\x74\x32\x39\x30\x39\x22\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6e\x6e\x65\x63\x74\x6f\
\x72\x2d\x63\x75\x72\x76\x61\x74\x75\x72\x65\x3d\x22\x30\x22\x20\
\x2f\x3e\x0a\x3c\x2f\x73\x76\x67\x3e\x0a\
\x00\x00\x0c\x12\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\
\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\
\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\
\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\
\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x36\x22\x0d\x0a\x20\x20\
\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x36\x22\x0d\x0a\x20\x20\
\x20\x69\x64\x3d\x22\x73\x76\x67\x33\x35\x39\x30\x22\x0d\x0a\x20\
\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x31\x22\x0d\
\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x34\x37\x20\x72\x32\x32\x35\x38\
\x33\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\
\x64\x6f\x63\x6e\x61\x6d\x65\x3d\x22\x64\x6f\x63\x6b\x2d\x75\x6e\
\x64\x6f\x63\x6b\x2e\x73\x76\x67\x22\x3e\x0d\x0a\x20\x20\x3c\x64\
\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x64\x65\
\x66\x73\x33\x35\x39\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\
\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\
\x5f\x78\x3d\x22\x30\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\
\x39\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\
\x3a\x20\x31\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\
\x7a\x3d\x22\x37\x34\x34\x2e\x30\x39\x34\x34\x38\x20\x3a\x20\x35\
\x32\x36\x2e\x31\x38\x31\x30\x39\x20\x3a\x20\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\
\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x33\
\x37\x32\x2e\x30\x34\x37\x32\x34\x20\x3a\x20\x33\x35\x30\x2e\x37\
\x38\x37\x33\x39\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\
\x65\x33\x35\x39\x38\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x64\
\x65\x66\x73\x3e\x0d\x0a\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x66\x66\
\x66\x66\x66\x66\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\
\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\x36\x36\x36\x36\x36\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x6f\x70\
\x61\x63\x69\x74\x79\x3d\x22\x31\x2e\x30\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\
\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\
\x73\x68\x61\x64\x6f\x77\x3d\x22\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\
\x33\x33\x2e\x31\x38\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x78\x3d\x22\x38\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x79\
\x3d\x22\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\
\x74\x73\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\
\x61\x79\x65\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x66\x61\
\x6c\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\x68\
\x3d\x22\x31\x32\x38\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\x65\
\x69\x67\x68\x74\x3d\x22\x37\x37\x38\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\
\x2d\x78\x3d\x22\x2d\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\x3d\
\x22\x2d\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\x6d\
\x69\x7a\x65\x64\x3d\x22\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\
\x6d\x65\x74\x61\x64\x61\x74\x61\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\x33\x35\x39\x35\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\
\x62\x6f\x75\x74\x3d\x22\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\
\x67\x65\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\
\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x64\x63\x3a\x74\x79\x70\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\
\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\
\x72\x67\x2f\x64\x63\x2f\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\
\x74\x69\x6c\x6c\x49\x6d\x61\x67\x65\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\
\x57\x6f\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\
\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\
\x61\x74\x61\x3e\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\
\x22\x43\x61\x6c\x71\x75\x65\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\
\x6f\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\
\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x30\x2c\x2d\x31\x30\x33\x36\
\x2e\x33\x36\x32\x32\x29\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x67\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x33\x35\
\x39\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\
\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\
\x37\x30\x36\x34\x35\x36\x38\x33\x2c\x30\x2e\x37\x30\x37\x37\x35\
\x36\x31\x33\x2c\x2d\x30\x2e\x37\x30\x37\x37\x35\x36\x31\x33\x2c\
\x30\x2e\x37\x30\x36\x34\x35\x36\x38\x33\x2c\x37\x34\x31\x2e\x37\
\x31\x30\x33\x36\x2c\x33\x30\x33\x2e\x37\x34\x37\x31\x34\x29\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x31\x30\x33\x37\
\x2e\x35\x36\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x78\x3d\x22\x30\x2e\x39\x30\x33\x39\x35\x34\x38\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\
\x22\x38\x2e\x32\x38\x36\x32\x35\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x2e\x32\x33\
\x35\x34\x30\x34\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x72\x65\x63\x74\x32\x38\x32\x32\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\
\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\
\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\
\x74\x72\x69\x78\x28\x30\x2c\x31\x2c\x2d\x31\x2c\x30\x2c\x30\x2c\
\x30\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\
\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\
\x30\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\
\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x65\x63\x74\
\x33\x35\x39\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x77\x69\x64\x74\x68\x3d\x22\x31\x2e\x32\x33\x35\x34\x30\x34\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\
\x68\x74\x3d\x22\x38\x2e\x32\x38\x36\x32\x35\x32\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x31\x30\x33\x37\x2e\
\x35\x33\x37\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x79\x3d\x22\x2d\x39\x2e\x31\x39\x30\x32\x30\x37\x35\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\
\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\
\x37\x30\x34\x32\x34\x35\x31\x36\x2c\x2d\x30\x2e\x37\x30\x39\x39\
\x35\x36\x38\x37\x2c\x2d\x30\x2e\x37\x30\x39\x39\x35\x36\x38\x37\
\x2c\x2d\x30\x2e\x37\x30\x34\x32\x34\x35\x31\x36\x2c\x37\x34\x34\
\x2e\x30\x30\x36\x33\x2c\x31\x37\x38\x32\x2e\x34\x33\x36\x36\x29\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x33\
\x36\x30\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x72\x65\
\x63\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\
\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\
\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\
\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x65\x63\x74\x33\
\x36\x30\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x77\
\x69\x64\x74\x68\x3d\x22\x31\x2e\x32\x33\x35\x34\x30\x34\x38\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\
\x74\x3d\x22\x38\x2e\x32\x38\x36\x32\x35\x32\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x30\x2e\x39\x30\x33\x39\
\x35\x34\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x79\
\x3d\x22\x31\x30\x33\x37\x2e\x35\x36\x37\x35\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x39\x2e\x31\x39\x30\
\x32\x30\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x78\x3d\x22\x31\x30\x33\x37\x2e\x35\x33\x37\x34\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\
\x38\x2e\x32\x38\x36\x32\x35\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x2e\x32\x33\x35\
\x34\x30\x34\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x72\x65\x63\x74\x33\x36\x30\x36\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\
\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\
\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\
\x65\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x30\x2c\x31\x2c\x2d\x31\x2c\x30\x2c\x30\x2c\x30\
\x29\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x67\x3e\x0d\
\x0a\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x3c\x2f\x73\x76\x67\x3e\x0d\
\x0a\
\x00\x00\x13\x88\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x78\
\x6c\x69\x6e\x6b\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x78\x6c\x69\
\x6e\x6b\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\x6f\
\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\x63\
\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\
\x20\x77\x69\x64\x74\x68\x3d\x22\x35\x31\x32\x22\x0d\x0a\x20\x20\
\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x35\x31\x32\x22\x0d\x0a\x20\
\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x32\x34\x37\x37\x22\x0d\x0a\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\x73\
\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\x3d\
\x22\x30\x2e\x34\x37\x20\x72\x32\x32\x35\x38\x33\x22\x0d\x0a\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\x61\
\x6d\x65\x3d\x22\x6c\x65\x76\x65\x6c\x73\x2e\x73\x76\x67\x22\x0d\
\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\
\x70\x75\x74\x5f\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\
\x72\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\
\x75\x74\x2e\x73\x76\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\
\x0d\x0a\x20\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x31\x22\x3e\x0d\x0a\x20\x20\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x64\x65\x66\x73\x32\x34\x37\x39\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x33\x36\x30\x30\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\
\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\
\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\
\x3a\x23\x30\x30\x66\x66\x30\x30\x3b\x73\x74\x6f\x70\x2d\x6f\x70\
\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\
\x70\x33\x36\x30\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x36\x30\x38\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\
\x22\x30\x2e\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\
\x72\x3a\x23\x66\x66\x66\x66\x30\x30\x3b\x73\x74\x6f\x70\x2d\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\
\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\x66\x30\x30\x30\x30\x3b\x73\
\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\
\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x73\x74\x6f\x70\x33\x36\x30\x34\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\
\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\
\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\
\x3d\x22\x30\x20\x3a\x20\x38\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\
\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\x20\x30\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x36\x20\x3a\x20\x38\x20\
\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\
\x69\x67\x69\x6e\x3d\x22\x38\x20\x3a\x20\x35\x2e\x33\x33\x33\x33\
\x33\x33\x33\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\
\x32\x34\x38\x35\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\
\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\
\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x33\x36\x30\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x33\x36\x30\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x78\x31\x3d\x22\x31\x33\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x79\x31\x3d\x22\x34\x32\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x32\x3d\x22\x31\x33\x30\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x79\x32\x3d\x22\x35\x32\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\
\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\
\x61\x6e\x73\x6c\x61\x74\x65\x28\x30\x2c\x2d\x34\x39\x36\x29\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\
\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x36\
\x30\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x36\
\x31\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\
\x33\x39\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\
\x22\x34\x31\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\
\x3d\x22\x33\x39\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\
\x32\x3d\x22\x38\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\
\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\
\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\
\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\x6c\x61\
\x74\x65\x28\x30\x2c\x2d\x34\x39\x36\x29\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\
\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\
\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x36\x30\x30\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x36\x33\x37\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\
\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\
\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\
\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\
\x22\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x34\x2e\x35\x33\x33\
\x32\x30\x33\x31\x65\x2d\x37\x2c\x2d\x34\x39\x36\x29\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x33\x39\x30\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x34\x32\x32\x2e\
\x31\x33\x35\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\
\x3d\x22\x33\x39\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\
\x32\x3d\x22\x35\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\
\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x33\x36\x30\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x33\x36\x33\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\
\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\
\x73\x6c\x61\x74\x65\x28\x34\x2e\x35\x33\x33\x32\x30\x33\x31\x65\
\x2d\x37\x2c\x2d\x34\x39\x36\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x78\x31\x3d\x22\x31\x33\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x79\x31\x3d\x22\x34\x32\x32\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x33\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x35\x32\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0d\x0a\x20\x20\x3c\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\
\x77\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\
\x72\x3d\x22\x23\x39\x30\x39\x30\x39\x30\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\
\x36\x36\x36\x36\x36\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\
\x72\x64\x65\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x31\x2e\x30\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\
\x35\x37\x32\x35\x34\x39\x30\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\x61\
\x64\x6f\x77\x3d\x22\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x31\x2e\x30\
\x33\x37\x31\x30\x39\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x63\x78\x3d\x22\x39\x30\x2e\x31\x35\
\x34\x34\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x79\x3d\x22\x32\x35\x36\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x75\x72\
\x72\x65\x6e\x74\x2d\x6c\x61\x79\x65\x72\x3d\x22\x6c\x61\x79\x65\
\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x72\
\x69\x64\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x2d\x62\x62\
\x6f\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\
\x74\x2d\x75\x6e\x69\x74\x73\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\
\x6f\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\x31\x32\x38\x30\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\
\x69\x6e\x64\x6f\x77\x2d\x68\x65\x69\x67\x68\x74\x3d\x22\x37\x37\
\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x78\x3d\x22\x2d\x38\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\
\x69\x6e\x64\x6f\x77\x2d\x79\x3d\x22\x2d\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x62\x6a\x65\
\x63\x74\x2d\x70\x61\x74\x68\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\
\x62\x6a\x65\x63\x74\x2d\x6e\x6f\x64\x65\x73\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x73\x6e\x61\x70\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x62\x62\x6f\x78\x2d\x70\x61\x74\x68\x73\x3d\x22\x74\x72\
\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x62\x62\x6f\x78\x2d\x6e\x6f\x64\x65\x73\x3d\x22\x74\
\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x67\x72\x69\x64\x74\
\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x6f\x62\x6a\x65\x63\x74\x74\x6f\x6c\x65\x72\x61\
\x6e\x63\x65\x3d\x22\x31\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x67\
\x75\x69\x64\x65\x74\x6f\x6c\x65\x72\x61\x6e\x63\x65\x3d\x22\x31\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\x6d\x69\x7a\
\x65\x64\x3d\x22\x31\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x74\x79\x70\x65\x3d\x22\x78\x79\x67\x72\x69\x64\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x72\
\x69\x64\x33\x32\x39\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x76\x69\x73\x69\x62\x6c\x65\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x65\x6e\x61\x62\x6c\x65\x64\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x65\x6d\
\x70\x73\x70\x61\x63\x69\x6e\x67\x3d\x22\x35\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x73\x6e\x61\x70\x76\x69\x73\x69\x62\x6c\x65\
\x67\x72\x69\x64\x6c\x69\x6e\x65\x73\x6f\x6e\x6c\x79\x3d\x22\x74\
\x72\x75\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x3e\
\x0d\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\
\x32\x34\x38\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\
\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\
\x3a\x57\x6f\x72\x6b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x72\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\x22\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\
\x74\x3e\x69\x6d\x61\x67\x65\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\
\x2f\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x79\x70\x65\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\
\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\
\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x64\x63\x6d\x69\x74\
\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\x61\x67\x65\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\
\x6f\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\
\x52\x44\x46\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\
\x74\x61\x3e\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\
\x3d\x22\x4c\x61\x79\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\
\x6f\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\
\x6e\x73\x6c\x61\x74\x65\x28\x30\x2c\x34\x39\x36\x29\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\
\x66\x66\x66\x66\x66\x66\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\
\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\
\x65\x63\x74\x33\x36\x30\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x77\x69\x64\x74\x68\x3d\x22\x34\x35\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x34\x39\x30\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x33\x31\x2e\
\x30\x33\x38\x38\x39\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x79\x3d\x22\x2d\x34\x38\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\
\x3d\x22\x2d\x34\x35\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x78\x3d\x22\x33\x31\x37\x2e\x34\x32\x38\x35\x39\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x32\x39\
\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x77\x69\x64\x74\x68\
\x3d\x22\x31\x32\x32\x2e\x35\x37\x31\x34\x33\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x65\x63\x74\x32\x38\x32\
\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x33\x64\x33\x64\x33\x64\x3b\x66\
\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\
\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\
\x28\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x33\x36\x33\x39\x29\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\
\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x65\
\x63\x74\x32\x38\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x77\x69\x64\x74\x68\x3d\x22\x31\x32\x38\x2e\x32\x32\x38\x35\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\
\x3d\x22\x34\x32\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\
\x3d\x22\x37\x35\x2e\x37\x31\x36\x32\x31\x37\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x34\x35\x33\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\
\x75\x72\x6c\x28\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x33\x36\x33\x37\x29\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\
\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\
\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x72\x65\x63\x74\x33\x36\x31\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x32\x32\x2e\x35\x37\
\x31\x34\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\
\x67\x68\x74\x3d\x22\x32\x39\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x78\x3d\x22\x33\x31\x37\x2e\x34\x32\x38\x35\x39\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x33\x32\x31\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\
\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x2d\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\
\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x72\x65\x63\x74\x32\x38\x32\x34\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x36\x30\x2e\x35\
\x33\x35\x32\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x68\
\x65\x69\x67\x68\x74\x3d\x22\x34\x32\x39\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x3d\x22\x32\x32\x39\x2e\x30\x30\x34\x37\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x2d\x34\x35\
\x33\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x3c\
\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x2d\x0d\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\
\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\x74\x73\
\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\
\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\
\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x72\
\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\
\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\x32\x32\
\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\x23\x22\
\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\
\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\
\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\
\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x78\x6c\x69\
\x6e\x6b\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\
\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x78\x6c\x69\x6e\x6b\
\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\x6f\x72\x67\
\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\x20\x78\x6d\
\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\x22\x68\x74\
\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\x63\x65\x73\
\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\x20\x77\
\x69\x64\x74\x68\x3d\x22\x34\x38\x70\x78\x22\x0d\x0a\x20\x20\x20\
\x68\x65\x69\x67\x68\x74\x3d\x22\x34\x38\x70\x78\x22\x0d\x0a\x20\
\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x31\x33\x30\x37\x22\x0d\x0a\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\x73\
\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\x3d\
\x22\x30\x2e\x34\x36\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\
\x6f\x64\x69\x3a\x64\x6f\x63\x62\x61\x73\x65\x3d\x22\x2f\x68\x6f\
\x6d\x65\x2f\x6a\x69\x6d\x6d\x61\x63\x2f\x73\x72\x63\x2f\x63\x76\
\x73\x2f\x74\x61\x6e\x67\x6f\x2d\x69\x63\x6f\x6e\x2d\x74\x68\x65\
\x6d\x65\x2f\x73\x63\x61\x6c\x61\x62\x6c\x65\x2f\x61\x63\x74\x69\
\x6f\x6e\x73\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x64\x6f\x63\x6e\x61\x6d\x65\x3d\x22\x6d\x65\x64\x69\x61\
\x2d\x70\x6c\x61\x79\x62\x61\x63\x6b\x2d\x73\x74\x61\x72\x74\x2e\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x65\x78\x70\x6f\x72\x74\x2d\x66\x69\x6c\x65\x6e\x61\x6d\
\x65\x3d\x22\x2f\x68\x6f\x6d\x65\x2f\x6c\x61\x70\x6f\x2f\x44\x65\
\x73\x6b\x74\x6f\x70\x2f\x47\x72\x61\x66\x69\x63\x61\x2f\x49\x63\
\x6f\x6e\x65\x2f\x6d\x65\x64\x69\x61\x2d\x61\x63\x74\x69\x6f\x6e\
\x73\x2d\x6f\x75\x74\x6c\x69\x6e\x65\x73\x2e\x70\x6e\x67\x22\x0d\
\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x65\x78\x70\
\x6f\x72\x74\x2d\x78\x64\x70\x69\x3d\x22\x39\x30\x22\x0d\x0a\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x65\x78\x70\x6f\x72\
\x74\x2d\x79\x64\x70\x69\x3d\x22\x39\x30\x22\x0d\x0a\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\x70\x75\x74\x5f\
\x65\x78\x74\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\x72\x67\x2e\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\x75\x74\x2e\x73\
\x76\x67\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x3e\x0d\x0a\x20\
\x20\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x64\x65\x66\x73\x31\x33\x30\x39\x22\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\
\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x32\x34\x20\x3a\x20\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\
\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x34\
\x38\x20\x3a\x20\x32\x34\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\
\x73\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x32\x34\x20\
\x3a\x20\x31\x36\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\
\x65\x34\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x38\x34\x22\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x32\x36\x38\
\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\
\x6c\x6f\x72\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\x73\x74\x6f\x70\
\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x32\
\x36\x38\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\
\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\
\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x73\x74\
\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x35\x38\x34\x22\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\
\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\
\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x73\x74\x6f\x70\x32\x35\x38\x36\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\
\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\x66\x66\x66\x66\
\x66\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\
\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x32\x35\x38\x38\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x35\x30\x37\x35\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\
\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x61\x64\x62\x30\x61\x38\
\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\
\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x35\x30\x37\x37\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x34\x36\x34\x37\
\x34\x34\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x35\x30\x37\x39\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x39\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\
\x70\x32\x36\x39\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\
\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\
\x6f\x70\x32\x36\x39\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\
\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x64\x33\x64\x37\x63\x66\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x33\x34\x30\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\x66\x66\x66\
\x66\x66\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\
\x66\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x33\x34\x32\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x66\x66\
\x66\x66\x66\x66\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\
\x79\x3a\x30\x2e\x36\x32\x38\x38\x36\x35\x39\x36\x3b\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\
\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x73\x74\x6f\x70\x33\x33\x34\x34\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\
\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\
\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x35\x30\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x32\x33\x30\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\
\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\
\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x37\x31\x2e\x32\x38\x38\x39\
\x35\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\
\x31\x32\x34\x2e\x31\x31\x36\x35\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x32\x3d\x22\x37\x30\x2e\x38\x32\x36\x39\x34\x32\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x39\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\
\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\
\x6e\x73\x6c\x61\x74\x65\x28\x2d\x34\x35\x2e\x30\x30\x30\x34\x32\
\x2c\x2d\x37\x31\x2e\x30\x39\x34\x32\x35\x29\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\
\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\
\x6c\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\
\x6c\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x39\x31\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\
\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x33\x31\x34\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\
\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\
\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\
\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x35\x2e\x33\x32\x34\x33\x34\
\x32\x65\x2d\x32\x2c\x2d\x30\x2e\x38\x33\x36\x32\x33\x38\x2c\x32\
\x2e\x30\x31\x39\x34\x37\x33\x2c\x30\x2e\x31\x32\x38\x35\x36\x38\
\x2c\x2d\x31\x35\x31\x2e\x39\x31\x39\x35\x2c\x31\x30\x38\x2e\x30\
\x37\x36\x38\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x78\
\x3d\x22\x31\x30\x37\x2e\x35\x38\x38\x34\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x63\x79\x3d\x22\x38\x33\x2e\x39\x39\x30\x38\x31\
\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x78\x3d\x22\x31\
\x30\x37\x2e\x35\x38\x38\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x66\x79\x3d\x22\x38\x33\x2e\x39\x39\x30\x38\x31\x34\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x72\x3d\x22\x31\x32\x2e\x35\x35\
\x31\x36\x34\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\
\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\
\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x32\x36\x38\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\
\x65\x6e\x74\x32\x36\x39\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\
\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\
\x78\x28\x31\x2e\x31\x32\x38\x31\x38\x31\x2c\x30\x2c\x30\x2c\x31\
\x2e\x31\x32\x38\x31\x38\x31\x2c\x2d\x35\x33\x2e\x39\x39\x33\x31\
\x34\x2c\x2d\x38\x33\x2e\x33\x36\x30\x30\x39\x29\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x37\x30\x2e\x39\x31\x33\
\x39\x35\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\
\x22\x31\x30\x31\x2e\x37\x34\x31\x35\x32\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x78\x32\x3d\x22\x37\x30\x2e\x39\x35\x31\x39\x34\
\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x38\
\x38\x2e\x39\x32\x33\x37\x32\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x3c\x2f\x64\x65\x66\x73\x3e\x0d\x0a\x20\x20\x3c\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x0d\x0a\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\x72\x3d\x22\
\x23\x66\x66\x66\x66\x66\x66\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\
\x6f\x72\x64\x65\x72\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\x36\x36\
\x36\x36\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\
\x72\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\x31\x39\x36\x30\
\x37\x38\x34\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\x79\
\x3d\x22\x30\x2e\x30\x30\x30\x30\x30\x30\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\
\x73\x68\x61\x64\x6f\x77\x3d\x22\x32\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x63\x78\x3d\x22\x2d\x31\x31\x37\x2e\x34\x32\x34\x34\x39\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x79\x3d\x22\x31\x32\x2e\x39\x38\x30\x32\x38\x38\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\
\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\x79\x65\x72\x3d\x22\x6c\x61\
\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\x77\
\x67\x72\x69\x64\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\
\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x64\x6f\x63\x75\
\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\x73\x3d\x22\x70\x78\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\
\x72\x69\x64\x2d\x70\x6f\x69\x6e\x74\x73\x3d\x22\x74\x72\x75\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x66\x69\x6c\x6c\x3d\x22\x23\x35\
\x35\x35\x37\x35\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\
\x77\x67\x75\x69\x64\x65\x73\x3d\x22\x66\x61\x6c\x73\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\
\x75\x69\x64\x65\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x67\x75\x69\x64\x65\x74\x6f\x6c\x65\
\x72\x61\x6e\x63\x65\x3d\x22\x31\x70\x78\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x73\x74\x72\x6f\x6b\x65\x3d\x22\x23\x35\x35\x35\x37\x35\
\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\
\x38\x37\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\x65\x69\x67\x68\
\x74\x3d\x22\x36\x38\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x78\x3d\
\x22\x33\x32\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\x3d\x22\x31\
\x36\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x62\x6f\
\x72\x64\x65\x72\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x73\x68\x6f\x77\x70\
\x61\x67\x65\x73\x68\x61\x64\x6f\x77\x3d\x22\x66\x61\x6c\x73\x65\
\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\
\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x33\x38\x2e\x39\x39\
\x36\x36\x34\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x67\x75\x69\x64\x65\x32\x31\x39\x34\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\
\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\
\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\
\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\
\x73\x69\x74\x69\x6f\x6e\x3d\x22\x39\x2e\x30\x31\x34\x30\x38\x34\
\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\
\x75\x69\x64\x65\x32\x31\x39\x36\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\
\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\
\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\x69\x63\x61\x6c\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\
\x6e\x3d\x22\x39\x2e\x30\x31\x34\x30\x38\x34\x35\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x32\
\x31\x39\x38\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\
\x3d\x22\x76\x65\x72\x74\x69\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x33\x38\
\x2e\x39\x37\x35\x31\x38\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x32\x32\x30\x30\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\
\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x32\x32\x2e\x39\x38\
\x38\x32\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x67\x75\x69\x64\x65\x32\x32\x30\x32\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\
\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\
\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\x69\x63\
\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\
\x74\x69\x6f\x6e\x3d\x22\x32\x33\x2e\x39\x30\x38\x37\x38\x36\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\
\x64\x65\x32\x32\x30\x34\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\
\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\x69\x63\x61\x6c\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\
\x22\x31\x35\x37\x2e\x39\x39\x34\x31\x37\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x34\x33\x33\
\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\
\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x2d\x33\
\x36\x2e\x30\x36\x32\x34\x34\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x34\x33\x33\x34\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\
\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x2d\x35\x38\x2e\
\x30\x32\x36\x39\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x67\x75\x69\x64\x65\x34\x33\x33\x36\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\
\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\
\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\x69\
\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\
\x69\x74\x69\x6f\x6e\x3d\x22\x31\x38\x30\x2e\x30\x30\x32\x38\x37\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\
\x69\x64\x65\x34\x33\x33\x38\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\
\x74\x69\x6f\x6e\x3d\x22\x76\x65\x72\x74\x69\x63\x61\x6c\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\
\x3d\x22\x31\x30\x37\x2e\x39\x32\x32\x31\x37\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x34\x34\
\x31\x37\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\
\x22\x76\x65\x72\x74\x69\x63\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x31\x32\x39\
\x2e\x39\x33\x30\x38\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x34\x34\x31\x39\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\
\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\
\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\
\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x31\x39\x2e\x39\x39\x36\
\x38\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x67\x75\x69\x64\x65\x35\x31\x30\x36\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\
\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\
\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\
\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\
\x69\x74\x69\x6f\x6e\x3d\x22\x36\x33\x2e\x30\x33\x39\x36\x37\x34\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\
\x69\x64\x65\x35\x31\x31\x39\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\
\x74\x69\x6f\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\
\x6f\x6e\x3d\x22\x34\x39\x2e\x30\x36\x36\x33\x30\x35\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\
\x35\x31\x32\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\
\x6e\x3d\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\
\x22\x2d\x38\x36\x2e\x30\x30\x37\x31\x36\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x35\x33\
\x30\x37\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\
\x22\x68\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x2d\
\x31\x30\x38\x2e\x30\x39\x30\x30\x39\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x35\x33\x30\x39\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x73\x6f\x64\x69\x70\
\x6f\x64\x69\x3a\x67\x75\x69\x64\x65\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x6f\x72\x69\x65\x6e\x74\x61\x74\x69\x6f\x6e\x3d\x22\x68\
\x6f\x72\x69\x7a\x6f\x6e\x74\x61\x6c\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x70\x6f\x73\x69\x74\x69\x6f\x6e\x3d\x22\x2d\x31\x30\
\x30\x2e\x31\x35\x34\x32\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x67\x75\x69\x64\x65\x33\x31\x31\x31\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x67\x72\x69\x64\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x47\x72\x69\x64\x46\x72\x6f\x6d\x50\x72\x65\x30\x34\
\x36\x53\x65\x74\x74\x69\x6e\x67\x73\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x74\x79\x70\x65\x3d\x22\x78\x79\x67\x72\x69\x64\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x69\x67\x69\x6e\x78\
\x3d\x22\x30\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\
\x72\x69\x67\x69\x6e\x79\x3d\x22\x30\x70\x78\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x73\x70\x61\x63\x69\x6e\x67\x78\x3d\x22\x30\
\x2e\x35\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x70\
\x61\x63\x69\x6e\x67\x79\x3d\x22\x30\x2e\x35\x70\x78\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x30\
\x30\x30\x30\x66\x66\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x65\
\x6d\x70\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x30\x30\x30\x30\x66\x66\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x6f\x70\x61\x63\x69\x74\
\x79\x3d\x22\x30\x2e\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x65\x6d\x70\x6f\x70\x61\x63\x69\x74\x79\x3d\x22\x30\x2e\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x65\x6d\x70\x73\x70\x61\x63\
\x69\x6e\x67\x3d\x22\x32\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\
\x65\x77\x3e\x0d\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\x61\x64\
\x61\x74\x61\x31\x33\x31\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x3c\x63\x63\x3a\x57\x6f\x72\x6b\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\x22\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x66\x6f\
\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\x65\x2f\x73\x76\x67\x2b\x78\
\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x79\x70\x65\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\
\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\
\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x64\x63\
\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\x61\x67\
\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\
\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x4d\x65\x64\x69\x61\x20\x50\
\x6c\x61\x79\x62\x61\x63\x6b\x20\x53\x74\x61\x72\x74\x3c\x2f\x64\
\x63\x3a\x74\x69\x74\x6c\x65\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x64\x63\x3a\x63\x72\x65\x61\x74\x6f\x72\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x41\x67\
\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x4c\x61\x70\x6f\
\x20\x43\x61\x6c\x61\x6d\x61\x6e\x64\x72\x65\x69\x3c\x2f\x64\x63\
\x3a\x74\x69\x74\x6c\x65\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x3c\x2f\x63\x63\x3a\x41\x67\x65\x6e\x74\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x2f\x64\x63\x3a\x63\x72\x65\
\x61\x74\x6f\x72\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\
\x63\x63\x3a\x6c\x69\x63\x65\x6e\x73\x65\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\
\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\
\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\
\x6c\x69\x63\x65\x6e\x73\x65\x73\x2f\x70\x75\x62\x6c\x69\x63\x64\
\x6f\x6d\x61\x69\x6e\x2f\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x3c\x64\x63\x3a\x73\x75\x62\x6a\x65\x63\x74\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x72\x64\x66\
\x3a\x42\x61\x67\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x3c\x72\x64\x66\x3a\x6c\x69\x3e\x70\x6c\x61\x79\x3c\
\x2f\x72\x64\x66\x3a\x6c\x69\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x6c\x69\x3e\x6d\x65\
\x64\x69\x61\x3c\x2f\x72\x64\x66\x3a\x6c\x69\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x6c\
\x69\x3e\x6d\x75\x73\x69\x63\x3c\x2f\x72\x64\x66\x3a\x6c\x69\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x72\
\x64\x66\x3a\x6c\x69\x3e\x76\x69\x64\x65\x6f\x3c\x2f\x72\x64\x66\
\x3a\x6c\x69\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x72\x64\x66\x3a\x6c\x69\x3e\x70\x6c\x61\x79\x65\x72\
\x3c\x2f\x72\x64\x66\x3a\x6c\x69\x3e\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x42\x61\x67\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x2f\x64\x63\x3a\x73\x75\
\x62\x6a\x65\x63\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x64\x63\x3a\x63\x6f\x6e\x74\x72\x69\x62\x75\x74\x6f\x72\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\
\x41\x67\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x3e\x4a\x61\
\x6b\x75\x62\x20\x53\x74\x65\x69\x6e\x65\x72\x3c\x2f\x64\x63\x3a\
\x74\x69\x74\x6c\x65\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x3c\x2f\x63\x63\x3a\x41\x67\x65\x6e\x74\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x3c\x2f\x64\x63\x3a\x63\x6f\x6e\x74\
\x72\x69\x62\x75\x74\x6f\x72\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x3c\x2f\x63\x63\x3a\x57\x6f\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x63\x63\x3a\x4c\x69\x63\x65\x6e\x73\x65\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\
\x74\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\
\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\x6c\x69\
\x63\x65\x6e\x73\x65\x73\x2f\x70\x75\x62\x6c\x69\x63\x64\x6f\x6d\
\x61\x69\x6e\x2f\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x63\x63\x3a\x70\x65\x72\x6d\x69\x74\x73\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\
\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\
\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\
\x2f\x6e\x73\x23\x52\x65\x70\x72\x6f\x64\x75\x63\x74\x69\x6f\x6e\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x63\
\x63\x3a\x70\x65\x72\x6d\x69\x74\x73\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\
\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\x74\
\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\x6e\
\x73\x23\x44\x69\x73\x74\x72\x69\x62\x75\x74\x69\x6f\x6e\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\
\x70\x65\x72\x6d\x69\x74\x73\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\
\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\x6e\x73\x23\
\x44\x65\x72\x69\x76\x61\x74\x69\x76\x65\x57\x6f\x72\x6b\x73\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\
\x4c\x69\x63\x65\x6e\x73\x65\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\
\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\
\x74\x61\x64\x61\x74\x61\x3e\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\
\x75\x70\x6d\x6f\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x61\x79\x65\x72\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x6c\x61\x62\x65\x6c\x3d\x22\x63\x6f\x6e\x74\x6f\x72\x6e\x6f\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x64\x69\
\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\x65\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\x22\x4c\
\x61\x79\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\x6f\x64\x65\
\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\
\x74\x79\x6c\x65\x3d\x22\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\
\x6c\x69\x6e\x65\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\
\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x6e\x6f\x64\x65\x74\x79\x70\x65\x73\x3d\x22\x63\x63\
\x63\x63\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x70\x61\x74\x68\x32\x36\x38\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x64\x3d\x22\x4d\x20\x31\x32\x2c\x33\x39\x2e\x35\x20\x4c\
\x20\x31\x32\x2c\x39\x20\x4c\x20\x33\x38\x2e\x30\x36\x39\x39\x38\
\x2c\x32\x33\x2e\x38\x31\x37\x30\x37\x39\x20\x4c\x20\x31\x32\x2c\
\x33\x39\x2e\x35\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x73\x74\x79\x6c\x65\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\x23\x30\
\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x3a\x6e\x6f\x6e\x65\x3b\
\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\
\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\
\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x75\x72\x6c\x28\x23\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x36\x39\x30\x29\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x31\x2e\
\x39\x39\x39\x39\x39\x38\x33\x33\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x6c\x69\x6e\x65\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\
\x6f\x75\x6e\x64\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\
\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\
\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\
\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\
\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\
\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\
\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x3b\x76\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\
\x69\x62\x6c\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\
\x69\x6e\x65\x3b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\
\x69\x62\x6c\x65\x3b\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x31\
\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x72\x5f\x63\x79\x3d\x22\x74\x72\x75\x65\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x79\
\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\
\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\
\x6c\x65\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\
\x30\x3b\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x72\x61\x64\x69\
\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x32\x33\x31\x34\x29\x3b\
\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\
\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\
\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x31\x2e\x30\x30\x30\x30\
\x30\x30\x33\x36\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\
\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\
\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\
\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\x6d\
\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\x6d\
\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\x69\x6d\x69\x74\
\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x61\x72\
\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x76\x69\
\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\x65\
\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\x65\x3b\
\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\x20\x31\
\x32\x2e\x34\x39\x39\x34\x36\x2c\x33\x37\x2e\x38\x31\x31\x34\x39\
\x20\x4c\x20\x31\x32\x2e\x34\x39\x39\x34\x36\x2c\x31\x30\x2e\x30\
\x30\x30\x30\x30\x35\x20\x4c\x20\x33\x36\x2e\x36\x30\x32\x37\x34\
\x37\x2c\x32\x33\x2e\x39\x30\x35\x37\x34\x38\x20\x4c\x20\x31\x32\
\x2e\x34\x39\x39\x34\x36\x2c\x33\x37\x2e\x38\x31\x31\x34\x39\x20\
\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x70\x61\x74\x68\x33\x33\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x6f\x64\x65\x74\
\x79\x70\x65\x73\x3d\x22\x63\x63\x63\x63\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x79\x3d\
\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\x72\
\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\
\x3b\x66\x69\x6c\x6c\x3a\x6e\x6f\x6e\x65\x3b\x66\x69\x6c\x6c\x2d\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x2d\x72\
\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\x73\x74\x72\x6f\
\x6b\x65\x3a\x75\x72\x6c\x28\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x32\x33\x30\x36\x29\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x31\x2e\x30\x30\x30\x30\x30\
\x30\x33\x36\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x63\
\x61\x70\x3a\x73\x71\x75\x61\x72\x65\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\x3b\
\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\
\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\
\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\
\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\x69\x6d\x69\x74\x3a\
\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x61\x72\x72\
\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\
\x61\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x76\x69\x73\
\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\x65\x3b\
\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\x65\x3b\x6f\
\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\x65\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\x20\x31\x32\
\x2e\x34\x39\x39\x34\x36\x2c\x33\x37\x2e\x38\x31\x31\x34\x39\x20\
\x4c\x20\x31\x32\x2e\x34\x39\x39\x34\x36\x2c\x31\x30\x2e\x30\x30\
\x30\x30\x30\x35\x20\x4c\x20\x33\x36\x2e\x36\x30\x32\x37\x34\x37\
\x2c\x32\x33\x2e\x39\x30\x35\x37\x34\x38\x20\x4c\x20\x31\x32\x2e\
\x34\x39\x39\x34\x36\x2c\x33\x37\x2e\x38\x31\x31\x34\x39\x20\x7a\
\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\
\x61\x74\x68\x32\x34\x37\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x6f\x64\x65\x74\x79\
\x70\x65\x73\x3d\x22\x63\x63\x63\x63\x22\x20\x2f\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x79\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x78\x3d\x22\x74\x72\x75\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\
\x66\x69\x6c\x6c\x3a\x23\x66\x66\x66\x66\x66\x66\x3b\x66\x69\x6c\
\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\
\x2d\x72\x75\x6c\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\x73\x74\
\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x77\x69\x64\x74\x68\x3a\x33\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x6c\x69\x6e\x65\x63\x61\x70\x3a\x73\x71\x75\x61\x72\x65\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x6d\
\x69\x74\x65\x72\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\
\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\
\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\
\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\
\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\
\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\
\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\
\x6f\x6b\x65\x2d\x64\x61\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x3b\x76\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\
\x69\x62\x6c\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\
\x69\x6e\x65\x3b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\
\x69\x62\x6c\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\
\x22\x4d\x20\x31\x32\x2e\x39\x39\x39\x34\x36\x2c\x31\x30\x2e\x38\
\x37\x34\x34\x39\x20\x4c\x20\x31\x32\x2e\x39\x39\x39\x34\x36\x2c\
\x33\x36\x2e\x39\x33\x36\x39\x39\x20\x4c\x20\x33\x35\x2e\x35\x39\
\x33\x32\x31\x2c\x32\x33\x2e\x39\x30\x35\x37\x34\x20\x4c\x20\x31\
\x32\x2e\x39\x39\x39\x34\x36\x2c\x31\x30\x2e\x38\x37\x34\x34\x39\
\x20\x7a\x20\x4d\x20\x31\x33\x2e\x39\x39\x39\x34\x36\x2c\x31\x32\
\x2e\x36\x32\x34\x34\x39\x20\x4c\x20\x33\x33\x2e\x35\x36\x31\x39\
\x36\x2c\x32\x33\x2e\x39\x30\x35\x37\x34\x20\x4c\x20\x31\x33\x2e\
\x39\x39\x39\x34\x36\x2c\x33\x35\x2e\x31\x38\x36\x39\x39\x20\x4c\
\x20\x31\x33\x2e\x39\x39\x39\x34\x36\x2c\x31\x32\x2e\x36\x32\x34\
\x34\x39\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x70\x61\x74\x68\x32\x34\x38\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x6f\
\x64\x65\x74\x79\x70\x65\x73\x3d\x22\x63\x63\x63\x63\x63\x63\x63\
\x63\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\x68\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x2e\x35\x3b\x63\x6f\x6c\x6f\
\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x3a\x23\
\x66\x66\x66\x66\x66\x66\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\
\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\
\x6e\x6f\x6e\x7a\x65\x72\x6f\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\
\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\
\x3a\x32\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x63\x61\
\x70\x3a\x72\x6f\x75\x6e\x64\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6c\
\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x72\x6f\x75\x6e\x64\x3b\x6d\x61\
\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\x65\x72\
\x2d\x73\x74\x61\x72\x74\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\
\x65\x72\x2d\x6d\x69\x64\x3a\x6e\x6f\x6e\x65\x3b\x6d\x61\x72\x6b\
\x65\x72\x2d\x65\x6e\x64\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\
\x6b\x65\x2d\x6d\x69\x74\x65\x72\x6c\x69\x6d\x69\x74\x3a\x31\x30\
\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x61\x72\x72\x61\
\x79\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\
\x73\x68\x6f\x66\x66\x73\x65\x74\x3a\x30\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x76\x69\x73\x69\
\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\x65\x3b\x64\
\x69\x73\x70\x6c\x61\x79\x3a\x62\x6c\x6f\x63\x6b\x3b\x6f\x76\x65\
\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\x20\x31\x33\x2e\x39\
\x33\x37\x35\x2c\x31\x32\x2e\x35\x36\x32\x35\x20\x4c\x20\x31\x33\
\x2e\x39\x33\x37\x35\x2c\x32\x34\x2e\x32\x35\x20\x43\x20\x31\x38\
\x2e\x32\x30\x36\x36\x39\x38\x2c\x32\x34\x2e\x32\x30\x35\x32\x31\
\x35\x20\x32\x33\x2e\x31\x30\x31\x36\x35\x36\x2c\x32\x33\x2e\x39\
\x30\x34\x34\x33\x36\x20\x33\x31\x2c\x32\x32\x2e\x33\x37\x35\x20\
\x4c\x20\x31\x33\x2e\x39\x33\x37\x35\x2c\x31\x32\x2e\x35\x36\x32\
\x35\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x70\x61\x74\x68\x32\x33\x33\x39\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\
\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x5f\x63\x79\x3d\x22\
\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x6e\x6f\x64\x65\x74\x79\x70\x65\x73\
\x3d\x22\x63\x63\x63\x63\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\
\x67\x3e\x0d\x0a\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x0c\x0e\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\
\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\
\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\
\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\
\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x36\x22\x0d\x0a\x20\x20\
\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x36\x22\x0d\x0a\x20\x20\
\x20\x69\x64\x3d\x22\x73\x76\x67\x33\x35\x39\x30\x22\x0d\x0a\x20\
\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x31\x22\x0d\
\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\
\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x34\x37\x20\x72\x32\x32\x35\x38\
\x33\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\
\x64\x6f\x63\x6e\x61\x6d\x65\x3d\x22\x64\x6f\x63\x6b\x2d\x64\x6f\
\x63\x6b\x2e\x73\x76\x67\x22\x3e\x0d\x0a\x20\x20\x3c\x64\x65\x66\
\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x64\x65\x66\x73\
\x33\x35\x39\x32\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\
\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\
\x3d\x22\x30\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\
\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\
\x31\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\
\x22\x37\x34\x34\x2e\x30\x39\x34\x34\x38\x20\x3a\x20\x35\x32\x36\
\x2e\x31\x38\x31\x30\x39\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\
\x73\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x33\x37\x32\
\x2e\x30\x34\x37\x32\x34\x20\x3a\x20\x33\x35\x30\x2e\x37\x38\x37\
\x33\x39\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x33\
\x35\x39\x38\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x64\x65\x66\
\x73\x3e\x0d\x0a\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\
\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x62\x61\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x70\x61\x67\x65\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x66\x66\x66\x66\
\x66\x66\x22\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\
\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\x36\x36\x36\x36\x36\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x6f\x70\x61\x63\
\x69\x74\x79\x3d\x22\x31\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\
\x63\x69\x74\x79\x3d\x22\x30\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\
\x61\x64\x6f\x77\x3d\x22\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x33\x33\
\x2e\x31\x38\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x63\x78\x3d\x22\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x79\x3d\x22\
\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\x73\
\x3d\x22\x70\x78\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\x79\
\x65\x72\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x73\x68\x6f\x77\x67\x72\x69\x64\x3d\x22\x66\x61\x6c\x73\
\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\
\x31\x32\x38\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\x65\x69\x67\
\x68\x74\x3d\x22\x37\x37\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x78\
\x3d\x22\x2d\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\x3d\x22\x2d\
\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\x6d\x69\x7a\
\x65\x64\x3d\x22\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x6d\x65\
\x74\x61\x64\x61\x74\x61\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x6d\x65\x74\x61\x64\x61\x74\x61\x33\x35\x39\x35\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\x62\x6f\
\x75\x74\x3d\x22\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\x65\
\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\x72\
\x6d\x61\x74\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\
\x63\x3a\x74\x79\x70\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\
\x2f\x64\x63\x2f\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\x69\
\x6c\x6c\x49\x6d\x61\x67\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\
\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\
\x44\x46\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\x74\
\x61\x3e\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\x22\x43\
\x61\x6c\x71\x75\x65\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\x6f\x64\
\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\
\x6e\x73\x6c\x61\x74\x65\x28\x30\x2c\x2d\x31\x30\x33\x36\x2e\x33\
\x36\x32\x32\x29\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x67\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x33\x35\x39\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x37\x30\
\x36\x34\x35\x36\x38\x33\x2c\x2d\x30\x2e\x36\x33\x37\x34\x39\x39\
\x30\x32\x2c\x2d\x30\x2e\x37\x30\x37\x37\x35\x36\x31\x33\x2c\x2d\
\x30\x2e\x36\x33\x36\x33\x32\x38\x37\x2c\x37\x34\x31\x2e\x38\x30\
\x30\x37\x35\x2c\x31\x37\x30\x34\x2e\x37\x34\x35\x29\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x31\x30\x33\x37\x2e\x35\
\x36\x37\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x78\
\x3d\x22\x30\x2e\x39\x30\x33\x39\x35\x34\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x38\
\x2e\x32\x38\x36\x32\x35\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x2e\x32\x33\x35\x34\
\x30\x34\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x72\x65\x63\x74\x32\x38\x32\x32\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\
\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x2d\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\
\x3a\x6e\x6f\x6e\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\
\x69\x78\x28\x30\x2c\x31\x2c\x2d\x31\x2c\x30\x2c\x30\x2c\x30\x29\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\
\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\
\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\
\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x65\x63\x74\x33\x35\
\x39\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x77\x69\
\x64\x74\x68\x3d\x22\x31\x2e\x32\x33\x35\x34\x30\x34\x38\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\
\x3d\x22\x38\x2e\x32\x38\x36\x32\x35\x32\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x31\x30\x33\x37\x2e\x35\x33\
\x37\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x79\x3d\
\x22\x2d\x39\x2e\x31\x39\x30\x32\x30\x37\x35\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x67\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\
\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x37\x30\
\x34\x32\x34\x35\x31\x36\x2c\x30\x2e\x36\x33\x39\x34\x38\x31\x33\
\x2c\x2d\x30\x2e\x37\x30\x39\x39\x35\x36\x38\x37\x2c\x30\x2e\x36\
\x33\x34\x33\x33\x36\x35\x38\x2c\x37\x34\x34\x2e\x30\x39\x36\x36\
\x39\x2c\x33\x38\x35\x2e\x38\x38\x33\x38\x31\x29\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x67\x33\x36\x30\x32\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\
\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\
\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x72\x65\x63\x74\x33\x36\x30\x34\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x77\x69\x64\x74\x68\
\x3d\x22\x31\x2e\x32\x33\x35\x34\x30\x34\x38\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x38\
\x2e\x32\x38\x36\x32\x35\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x78\x3d\x22\x30\x2e\x39\x30\x33\x39\x35\x34\x38\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x79\x3d\x22\x31\x30\
\x33\x37\x2e\x35\x36\x37\x35\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x72\x65\x63\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x79\x3d\x22\x2d\x39\x2e\x31\x39\x30\x32\x30\x37\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x31\
\x30\x33\x37\x2e\x35\x33\x37\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x38\x2e\x32\x38\
\x36\x32\x35\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x77\x69\x64\x74\x68\x3d\x22\x31\x2e\x32\x33\x35\x34\x30\x34\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x72\x65\x63\x74\x33\x36\x30\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\
\x23\x30\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\
\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\
\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x74\x72\
\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\
\x30\x2c\x31\x2c\x2d\x31\x2c\x30\x2c\x30\x2c\x30\x29\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x20\x20\x3c\
\x2f\x67\x3e\x0d\x0a\x3c\x2f\x73\x76\x67\x3e\x0d\x0a\
\x00\x00\x1c\x73\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\x74\
\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\x65\
\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\x0a\
\x0a\x3c\x73\x76\x67\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x64\
\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\
\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\x74\x73\x2f\x31\
\x2e\x31\x2f\x22\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x63\x63\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\x65\x61\x74\x69\x76\
\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\x67\x2f\x6e\x73\x23\
\x22\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x72\x64\x66\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\
\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\x32\x32\x2d\x72\x64\x66\
\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\x23\x22\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\x3d\x22\x68\x74\x74\x70\x3a\
\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\
\x30\x2f\x73\x76\x67\x22\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3d\
\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\x6f\
\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3a\x73\x6f\x64\x69\x70\x6f\x64\x69\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x73\x6f\x64\x69\x70\x6f\x64\x69\x2e\
\x73\x6f\x75\x72\x63\x65\x66\x6f\x72\x67\x65\x2e\x6e\x65\x74\x2f\
\x44\x54\x44\x2f\x73\x6f\x64\x69\x70\x6f\x64\x69\x2d\x30\x2e\x64\
\x74\x64\x22\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\
\x77\x2e\x69\x6e\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\
\x61\x6d\x65\x73\x70\x61\x63\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x22\x0a\x20\x20\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x36\
\x22\x0a\x20\x20\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x31\x36\x22\
\x0a\x20\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x33\x35\x39\x30\x22\
\x0a\x20\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x31\
\x22\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\
\x72\x73\x69\x6f\x6e\x3d\x22\x30\x2e\x34\x38\x2e\x31\x20\x22\x0a\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\x6f\x63\x6e\
\x61\x6d\x65\x3d\x22\x64\x6f\x63\x6b\x2d\x73\x65\x74\x74\x69\x6e\
\x67\x73\x2e\x73\x76\x67\x22\x3e\x0a\x20\x20\x3c\x64\x65\x66\x73\
\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x64\x65\x66\x73\x33\x35\
\x39\x32\x22\x3e\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x0a\x20\
\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\
\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\
\x72\x73\x70\x33\x64\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\
\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\x3a\x20\x31\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\
\x20\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x37\x34\x34\x2e\x30\x39\
\x34\x34\x38\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\
\x3a\x20\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\x69\
\x67\x69\x6e\x3d\x22\x33\x37\x32\x2e\x30\x34\x37\x32\x34\x20\x3a\
\x20\x33\x35\x30\x2e\x37\x38\x37\x33\x39\x20\x3a\x20\x31\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\
\x65\x63\x74\x69\x76\x65\x33\x35\x39\x38\x22\x20\x2f\x3e\x0a\x20\
\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\
\x73\x70\x65\x63\x74\x69\x76\x65\x0a\x20\x20\x20\x20\x20\x20\x20\
\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x36\x34\x20\x3a\x20\
\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\
\x30\x20\x3a\x20\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x32\x38\
\x20\x3a\x20\x36\x34\x20\x3a\x20\x31\x22\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\
\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x36\x34\x20\x3a\x20\
\x34\x32\x2e\x36\x36\x36\x36\x36\x37\x20\x3a\x20\x31\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\
\x63\x74\x69\x76\x65\x34\x36\x39\x39\x22\x20\x2f\x3e\x0a\x20\x20\
\x20\x20\x3c\x63\x6c\x69\x70\x50\x61\x74\x68\x0a\x20\x20\x20\x20\
\x20\x20\x20\x63\x6c\x69\x70\x50\x61\x74\x68\x55\x6e\x69\x74\x73\
\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\
\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x63\x6c\x69\
\x70\x6f\x75\x74\x6c\x69\x6e\x65\x32\x2d\x31\x22\x3e\x0a\x20\x20\
\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0a\x20\x20\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6f\x75\x74\x6c\x69\x6e\x65\x32\x2d\
\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\
\x20\x35\x35\x2e\x38\x2c\x31\x32\x20\x30\x2e\x37\x36\x2c\x30\x2e\
\x31\x36\x20\x63\x20\x38\x2e\x38\x34\x2c\x2d\x32\x2e\x39\x34\x20\
\x32\x38\x2e\x36\x38\x2c\x38\x2e\x36\x34\x20\x32\x34\x2e\x32\x36\
\x2c\x31\x38\x2e\x39\x36\x20\x2d\x31\x2e\x31\x32\x2c\x31\x2e\x36\
\x32\x20\x2d\x30\x2e\x39\x33\x2c\x34\x2e\x35\x20\x30\x2e\x34\x32\
\x2c\x36\x2e\x33\x31\x20\x4c\x20\x35\x36\x2e\x34\x33\x2c\x36\x32\
\x2e\x32\x35\x20\x63\x20\x2d\x31\x2e\x33\x39\x2c\x2d\x31\x2e\x33\
\x39\x20\x2d\x34\x2e\x34\x38\x2c\x2d\x31\x2e\x33\x36\x20\x2d\x35\
\x2e\x39\x2c\x30\x20\x4c\x20\x39\x2e\x35\x2c\x31\x30\x31\x2e\x36\
\x33\x20\x63\x20\x2d\x33\x2e\x37\x34\x2c\x33\x2e\x35\x39\x20\x2d\
\x30\x2e\x38\x2c\x36\x2e\x36\x34\x20\x30\x2e\x37\x38\x2c\x38\x2e\
\x32\x35\x20\x6c\x20\x37\x2e\x33\x36\x2c\x37\x2e\x33\x36\x20\x63\
\x20\x31\x2e\x36\x31\x2c\x31\x2e\x36\x20\x35\x2e\x38\x36\x2c\x33\
\x2e\x37\x36\x20\x38\x2e\x38\x38\x2c\x30\x2e\x35\x36\x20\x4c\x20\
\x36\x35\x2e\x32\x34\x2c\x37\x36\x2e\x39\x39\x20\x63\x20\x31\x2e\
\x33\x35\x2c\x2d\x31\x2e\x34\x32\x20\x31\x2e\x33\x36\x2c\x2d\x34\
\x2e\x34\x37\x20\x30\x2c\x2d\x35\x2e\x38\x37\x20\x30\x2c\x30\x20\
\x30\x2e\x30\x31\x2c\x2d\x30\x2e\x30\x32\x20\x30\x2c\x2d\x30\x2e\
\x30\x32\x20\x4c\x20\x39\x30\x2e\x31\x35\x2c\x34\x36\x2e\x32\x20\
\x63\x20\x32\x2e\x36\x33\x2c\x32\x2e\x33\x37\x20\x35\x2e\x31\x31\
\x33\x38\x32\x37\x2c\x32\x2e\x35\x37\x34\x38\x35\x34\x20\x37\x2e\
\x34\x37\x2c\x31\x2e\x39\x33\x20\x34\x2e\x35\x35\x30\x35\x37\x2c\
\x2d\x31\x2e\x32\x34\x35\x34\x33\x32\x20\x37\x2e\x30\x38\x37\x32\
\x35\x2c\x33\x2e\x32\x30\x36\x36\x34\x33\x20\x39\x2e\x38\x31\x2c\
\x36\x2e\x34\x36\x20\x6c\x20\x2d\x31\x2e\x32\x33\x2c\x31\x2e\x32\
\x31\x20\x63\x20\x2d\x31\x2e\x38\x32\x2c\x31\x2e\x38\x34\x20\x2d\
\x31\x2e\x36\x35\x2c\x34\x2e\x39\x34\x20\x30\x2e\x33\x39\x2c\x36\
\x2e\x39\x38\x20\x32\x2e\x30\x34\x2c\x32\x2e\x30\x34\x20\x35\x2e\
\x31\x35\x2c\x32\x2e\x32\x31\x20\x36\x2e\x39\x37\x2c\x30\x2e\x33\
\x39\x20\x6c\x20\x38\x2e\x31\x34\x2c\x2d\x38\x2e\x31\x33\x20\x63\
\x20\x31\x2e\x38\x32\x2c\x2d\x31\x2e\x38\x34\x20\x31\x2e\x36\x35\
\x2c\x2d\x34\x2e\x39\x34\x20\x2d\x30\x2e\x34\x2c\x2d\x36\x2e\x39\
\x37\x20\x2d\x31\x2e\x38\x34\x2c\x2d\x31\x2e\x38\x35\x20\x2d\x34\
\x2e\x35\x31\x2c\x2d\x32\x2e\x30\x39\x20\x2d\x36\x2e\x33\x37\x2c\
\x2d\x30\x2e\x37\x37\x20\x2d\x35\x2e\x35\x38\x2c\x2d\x36\x2e\x32\
\x36\x20\x2d\x32\x2e\x36\x35\x2c\x2d\x37\x2e\x32\x20\x2d\x31\x30\
\x2e\x30\x31\x2c\x2d\x31\x35\x2e\x33\x35\x20\x4c\x20\x39\x31\x2e\
\x31\x33\x2c\x31\x37\x2e\x38\x36\x20\x43\x20\x38\x31\x2e\x32\x2c\
\x38\x2e\x31\x32\x20\x36\x38\x2e\x33\x2c\x38\x2e\x31\x33\x20\x35\
\x35\x2e\x38\x2c\x31\x32\x20\x7a\x22\x20\x2f\x3e\x0a\x20\x20\x20\
\x20\x3c\x2f\x63\x6c\x69\x70\x50\x61\x74\x68\x3e\x0a\x20\x20\x20\
\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\
\x65\x63\x74\x69\x76\x65\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\
\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x36\x34\x20\x3a\x20\x31\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\
\x3a\x20\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x32\x38\x20\x3a\
\x20\x36\x34\x20\x3a\x20\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\
\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x36\x34\x20\x3a\x20\x34\x32\
\x2e\x36\x36\x36\x36\x36\x37\x20\x3a\x20\x31\x22\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\
\x69\x76\x65\x34\x34\x35\x32\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\
\x3c\x63\x6c\x69\x70\x50\x61\x74\x68\x0a\x20\x20\x20\x20\x20\x20\
\x20\x63\x6c\x69\x70\x50\x61\x74\x68\x55\x6e\x69\x74\x73\x3d\x22\
\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x63\x6c\x69\x70\x6f\
\x75\x74\x6c\x69\x6e\x65\x31\x22\x3e\x0a\x20\x20\x20\x20\x20\x20\
\x3c\x70\x61\x74\x68\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6f\x75\x74\x6c\x69\x6e\x65\x31\x22\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\x20\x32\x32\x2e\x34\x32\
\x2c\x31\x37\x2e\x32\x20\x31\x32\x2e\x39\x36\x2c\x31\x32\x2e\x39\
\x35\x20\x2d\x32\x2e\x35\x2c\x38\x2e\x37\x38\x20\x2d\x38\x2e\x37\
\x38\x2c\x32\x2e\x35\x20\x2d\x31\x32\x2e\x39\x36\x2c\x2d\x31\x32\
\x2e\x39\x36\x20\x2d\x35\x2e\x38\x36\x2c\x35\x2e\x38\x36\x20\x31\
\x34\x2e\x38\x39\x2c\x32\x31\x2e\x34\x36\x20\x31\x37\x2e\x35\x36\
\x2c\x2d\x33\x2e\x33\x34\x20\x36\x31\x2e\x36\x33\x2c\x36\x35\x2e\
\x36\x32\x20\x63\x20\x39\x2e\x34\x34\x2c\x39\x2e\x35\x31\x20\x32\
\x32\x2e\x31\x37\x2c\x2d\x34\x2e\x37\x35\x20\x31\x33\x2e\x33\x34\
\x2c\x2d\x31\x32\x2e\x38\x37\x20\x4c\x20\x34\x36\x2e\x38\x35\x2c\
\x34\x32\x2e\x39\x32\x20\x35\x30\x2e\x38\x36\x2c\x32\x35\x2e\x31\
\x36\x20\x32\x38\x2e\x37\x32\x2c\x31\x30\x2e\x38\x39\x20\x32\x32\
\x2e\x34\x32\x2c\x31\x37\x2e\x32\x20\x7a\x20\x6d\x20\x38\x31\x2e\
\x30\x36\x2c\x39\x31\x2e\x39\x37\x20\x63\x20\x31\x2e\x36\x38\x2c\
\x2d\x31\x2e\x36\x38\x20\x34\x2e\x34\x2c\x2d\x31\x2e\x36\x38\x20\
\x36\x2e\x30\x38\x2c\x30\x20\x31\x2e\x36\x38\x2c\x31\x2e\x36\x38\
\x20\x31\x2e\x36\x38\x2c\x34\x2e\x34\x20\x30\x2c\x36\x2e\x30\x38\
\x20\x2d\x31\x2e\x36\x38\x2c\x31\x2e\x36\x37\x20\x2d\x34\x2e\x34\
\x2c\x31\x2e\x36\x37\x20\x2d\x36\x2e\x30\x38\x2c\x30\x20\x2d\x31\
\x2e\x36\x38\x2c\x2d\x31\x2e\x36\x38\x20\x2d\x31\x2e\x36\x38\x2c\
\x2d\x34\x2e\x34\x20\x30\x2c\x2d\x36\x2e\x30\x38\x20\x7a\x22\x20\
\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x2f\x63\x6c\x69\x70\x50\x61\x74\
\x68\x3e\x0a\x20\x20\x20\x20\x3c\x63\x6c\x69\x70\x50\x61\x74\x68\
\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x6c\x69\x70\x50\x61\x74\x68\
\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\
\x4f\x6e\x55\x73\x65\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x63\x6c\x69\x70\x6f\x75\x74\x6c\x69\x6e\x65\x32\x22\x3e\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6f\x75\x74\x6c\x69\x6e\
\x65\x32\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\
\x6d\x20\x35\x35\x2e\x38\x2c\x31\x32\x20\x30\x2e\x37\x36\x2c\x30\
\x2e\x31\x36\x20\x63\x20\x38\x2e\x38\x34\x2c\x2d\x32\x2e\x39\x34\
\x20\x32\x38\x2e\x36\x38\x2c\x38\x2e\x36\x34\x20\x32\x34\x2e\x32\
\x36\x2c\x31\x38\x2e\x39\x36\x20\x2d\x31\x2e\x31\x32\x2c\x31\x2e\
\x36\x32\x20\x2d\x30\x2e\x39\x33\x2c\x34\x2e\x35\x20\x30\x2e\x34\
\x32\x2c\x36\x2e\x33\x31\x20\x4c\x20\x35\x36\x2e\x34\x33\x2c\x36\
\x32\x2e\x32\x35\x20\x63\x20\x2d\x31\x2e\x33\x39\x2c\x2d\x31\x2e\
\x33\x39\x20\x2d\x34\x2e\x34\x38\x2c\x2d\x31\x2e\x33\x36\x20\x2d\
\x35\x2e\x39\x2c\x30\x20\x4c\x20\x39\x2e\x35\x2c\x31\x30\x31\x2e\
\x36\x33\x20\x63\x20\x2d\x33\x2e\x37\x34\x2c\x33\x2e\x35\x39\x20\
\x2d\x30\x2e\x38\x2c\x36\x2e\x36\x34\x20\x30\x2e\x37\x38\x2c\x38\
\x2e\x32\x35\x20\x6c\x20\x37\x2e\x33\x36\x2c\x37\x2e\x33\x36\x20\
\x63\x20\x31\x2e\x36\x31\x2c\x31\x2e\x36\x20\x35\x2e\x38\x36\x2c\
\x33\x2e\x37\x36\x20\x38\x2e\x38\x38\x2c\x30\x2e\x35\x36\x20\x4c\
\x20\x36\x35\x2e\x32\x34\x2c\x37\x36\x2e\x39\x39\x20\x63\x20\x31\
\x2e\x33\x35\x2c\x2d\x31\x2e\x34\x32\x20\x31\x2e\x33\x36\x2c\x2d\
\x34\x2e\x34\x37\x20\x30\x2c\x2d\x35\x2e\x38\x37\x20\x30\x2c\x30\
\x20\x30\x2e\x30\x31\x2c\x2d\x30\x2e\x30\x32\x20\x30\x2c\x2d\x30\
\x2e\x30\x32\x20\x4c\x20\x39\x30\x2e\x31\x35\x2c\x34\x36\x2e\x32\
\x20\x63\x20\x32\x2e\x36\x33\x2c\x32\x2e\x33\x37\x20\x35\x2e\x31\
\x31\x33\x38\x32\x37\x2c\x32\x2e\x35\x37\x34\x38\x35\x34\x20\x37\
\x2e\x34\x37\x2c\x31\x2e\x39\x33\x20\x34\x2e\x35\x35\x30\x35\x37\
\x2c\x2d\x31\x2e\x32\x34\x35\x34\x33\x32\x20\x37\x2e\x30\x38\x37\
\x32\x35\x2c\x33\x2e\x32\x30\x36\x36\x34\x33\x20\x39\x2e\x38\x31\
\x2c\x36\x2e\x34\x36\x20\x6c\x20\x2d\x31\x2e\x32\x33\x2c\x31\x2e\
\x32\x31\x20\x63\x20\x2d\x31\x2e\x38\x32\x2c\x31\x2e\x38\x34\x20\
\x2d\x31\x2e\x36\x35\x2c\x34\x2e\x39\x34\x20\x30\x2e\x33\x39\x2c\
\x36\x2e\x39\x38\x20\x32\x2e\x30\x34\x2c\x32\x2e\x30\x34\x20\x35\
\x2e\x31\x35\x2c\x32\x2e\x32\x31\x20\x36\x2e\x39\x37\x2c\x30\x2e\
\x33\x39\x20\x6c\x20\x38\x2e\x31\x34\x2c\x2d\x38\x2e\x31\x33\x20\
\x63\x20\x31\x2e\x38\x32\x2c\x2d\x31\x2e\x38\x34\x20\x31\x2e\x36\
\x35\x2c\x2d\x34\x2e\x39\x34\x20\x2d\x30\x2e\x34\x2c\x2d\x36\x2e\
\x39\x37\x20\x2d\x31\x2e\x38\x34\x2c\x2d\x31\x2e\x38\x35\x20\x2d\
\x34\x2e\x35\x31\x2c\x2d\x32\x2e\x30\x39\x20\x2d\x36\x2e\x33\x37\
\x2c\x2d\x30\x2e\x37\x37\x20\x2d\x35\x2e\x35\x38\x2c\x2d\x36\x2e\
\x32\x36\x20\x2d\x32\x2e\x36\x35\x2c\x2d\x37\x2e\x32\x20\x2d\x31\
\x30\x2e\x30\x31\x2c\x2d\x31\x35\x2e\x33\x35\x20\x4c\x20\x39\x31\
\x2e\x31\x33\x2c\x31\x37\x2e\x38\x36\x20\x43\x20\x38\x31\x2e\x32\
\x2c\x38\x2e\x31\x32\x20\x36\x38\x2e\x33\x2c\x38\x2e\x31\x33\x20\
\x35\x35\x2e\x38\x2c\x31\x32\x20\x7a\x22\x20\x2f\x3e\x0a\x20\x20\
\x20\x20\x3c\x2f\x63\x6c\x69\x70\x50\x61\x74\x68\x3e\x0a\x20\x20\
\x20\x20\x3c\x66\x69\x6c\x74\x65\x72\x0a\x20\x20\x20\x20\x20\x20\
\x20\x63\x6f\x6c\x6f\x72\x2d\x69\x6e\x74\x65\x72\x70\x6f\x6c\x61\
\x74\x69\x6f\x6e\x2d\x66\x69\x6c\x74\x65\x72\x73\x3d\x22\x73\x52\
\x47\x42\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x53\
\x68\x61\x64\x6f\x77\x42\x6c\x75\x72\x22\x0a\x20\x20\x20\x20\x20\
\x20\x20\x66\x69\x6c\x74\x65\x72\x55\x6e\x69\x74\x73\x3d\x22\x75\
\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0a\x20\
\x20\x20\x20\x20\x20\x20\x78\x3d\x22\x30\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x79\x3d\x22\x30\x22\x3e\x0a\x20\x20\x20\x20\x20\x20\
\x3c\x66\x65\x47\x61\x75\x73\x73\x69\x61\x6e\x42\x6c\x75\x72\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x3d\x22\x53\x6f\x75\
\x72\x63\x65\x47\x72\x61\x70\x68\x69\x63\x22\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x73\x74\x64\x44\x65\x76\x69\x61\x74\x69\x6f\
\x6e\x3d\x22\x32\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x66\x65\x47\x61\x75\x73\x73\x69\x61\x6e\x42\x6c\x75\
\x72\x36\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x3c\x2f\x66\x69\x6c\
\x74\x65\x72\x3e\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\
\x63\x74\x69\x76\x65\x31\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\
\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x33\x37\x32\x2e\x30\x34\x37\
\x32\x34\x20\x3a\x20\x33\x35\x30\x2e\x37\x38\x37\x33\x39\x20\x3a\
\x20\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x37\x34\x34\x2e\x30\x39\
\x34\x34\x38\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\
\x3a\x20\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\
\x30\x30\x30\x20\x3a\x20\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\x22\x30\
\x20\x3a\x20\x35\x32\x36\x2e\x31\x38\x31\x30\x39\x20\x3a\x20\x31\
\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x20\x2f\x3e\x0a\x20\x20\x3c\
\x2f\x64\x65\x66\x73\x3e\x0a\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\
\x64\x69\x3a\x6e\x61\x6d\x65\x64\x76\x69\x65\x77\x0a\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x62\x61\x73\x65\x22\x0a\x20\x20\x20\x20\
\x20\x70\x61\x67\x65\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x66\x66\x66\
\x66\x66\x66\x22\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\
\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x36\x36\x36\x36\x36\x36\x22\x0a\
\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x6f\x70\x61\x63\x69\
\x74\x79\x3d\x22\x31\x2e\x30\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\
\x74\x79\x3d\x22\x30\x2e\x30\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\
\x77\x3d\x22\x32\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x31\x36\x2e\x35\x39\x33\
\x37\x35\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x63\x78\x3d\x22\x2d\x34\x2e\x32\x36\x35\x38\x30\x31\x36\
\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x63\x79\x3d\x22\x36\x2e\x35\x30\x35\x30\x32\x33\x38\x22\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x64\x6f\x63\
\x75\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\x73\x3d\x22\x70\x78\x22\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\
\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\x79\x65\x72\x3d\x22\x6c\x61\
\x79\x65\x72\x31\x22\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\
\x72\x69\x64\x3d\x22\x66\x61\x6c\x73\x65\x22\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\
\x2d\x77\x69\x64\x74\x68\x3d\x22\x31\x30\x32\x34\x22\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\
\x6f\x77\x2d\x68\x65\x69\x67\x68\x74\x3d\x22\x35\x37\x38\x22\x0a\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\
\x6e\x64\x6f\x77\x2d\x78\x3d\x22\x2d\x38\x22\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\
\x2d\x79\x3d\x22\x2d\x38\x22\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\
\x69\x6d\x69\x7a\x65\x64\x3d\x22\x31\x22\x20\x2f\x3e\x0a\x20\x20\
\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\x0a\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\x33\x35\x39\x35\x22\
\x3e\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\x52\x44\x46\x3e\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\x57\x6f\x72\x6b\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x61\x62\x6f\x75\
\x74\x3d\x22\x22\x3e\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\
\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x69\x6d\x61\x67\x65\x2f\x73\
\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\x64\x63\x3a\x66\x6f\x72\x6d\x61\
\x74\x3e\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\
\x79\x70\x65\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\
\x64\x66\x3a\x72\x65\x73\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\
\x70\x3a\x2f\x2f\x70\x75\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\
\x64\x63\x6d\x69\x74\x79\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\
\x61\x67\x65\x22\x20\x2f\x3e\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x3c\x64\x63\x3a\x74\x69\x74\x6c\x65\x20\x2f\x3e\x0a\x20\x20\x20\
\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\x72\x6b\x3e\x0a\x20\x20\
\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\x44\x46\x3e\x0a\x20\x20\x3c\
\x2f\x6d\x65\x74\x61\x64\x61\x74\x61\x3e\x0a\x20\x20\x3c\x67\x0a\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\
\x62\x65\x6c\x3d\x22\x43\x61\x6c\x71\x75\x65\x20\x31\x22\x0a\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\
\x75\x70\x6d\x6f\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x0a\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0a\
\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\
\x74\x72\x61\x6e\x73\x6c\x61\x74\x65\x28\x30\x2c\x2d\x31\x30\x33\
\x36\x2e\x33\x36\x32\x32\x29\x22\x3e\x0a\x20\x20\x20\x20\x3c\x70\
\x61\x74\x68\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x73\
\x74\x72\x6f\x6b\x65\x3a\x23\x30\x30\x30\x30\x38\x30\x3b\x73\x74\
\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\x30\x2e\x32\x32\x31\
\x31\x38\x30\x33\x35\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\
\x65\x72\x6c\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x64\x61\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x22\
\x0a\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\x20\x32\x2e\x35\
\x33\x35\x33\x35\x30\x35\x2c\x31\x30\x33\x37\x2e\x34\x39\x36\x34\
\x20\x63\x20\x30\x2e\x36\x30\x37\x37\x35\x33\x38\x2c\x30\x2e\x36\
\x30\x37\x32\x20\x31\x2e\x32\x31\x35\x35\x30\x37\x37\x2c\x31\x2e\
\x32\x31\x34\x35\x20\x31\x2e\x38\x32\x33\x32\x36\x31\x35\x2c\x31\
\x2e\x38\x32\x31\x37\x20\x2d\x30\x2e\x31\x31\x37\x32\x33\x36\x37\
\x2c\x30\x2e\x34\x31\x31\x38\x20\x2d\x30\x2e\x32\x33\x34\x34\x37\
\x33\x35\x2c\x30\x2e\x38\x32\x33\x36\x20\x2d\x30\x2e\x33\x35\x31\
\x37\x31\x30\x32\x2c\x31\x2e\x32\x33\x35\x33\x20\x2d\x30\x2e\x34\
\x31\x31\x37\x33\x34\x36\x2c\x30\x2e\x31\x31\x37\x33\x20\x2d\x30\
\x2e\x38\x32\x33\x34\x36\x39\x2c\x30\x2e\x32\x33\x34\x35\x20\x2d\
\x31\x2e\x32\x33\x35\x32\x30\x33\x35\x2c\x30\x2e\x33\x35\x31\x37\
\x20\x2d\x30\x2e\x36\x30\x37\x37\x35\x33\x33\x2c\x2d\x30\x2e\x36\
\x30\x37\x38\x20\x2d\x31\x2e\x32\x31\x35\x35\x30\x36\x35\x2c\x2d\
\x31\x2e\x32\x31\x35\x35\x20\x2d\x31\x2e\x38\x32\x33\x32\x35\x39\
\x37\x38\x2c\x2d\x31\x2e\x38\x32\x33\x33\x20\x2d\x30\x2e\x32\x37\
\x34\x38\x30\x32\x36\x33\x2c\x30\x2e\x32\x37\x34\x38\x20\x2d\x30\
\x2e\x35\x34\x39\x36\x30\x35\x32\x36\x2c\x30\x2e\x35\x34\x39\x37\
\x20\x2d\x30\x2e\x38\x32\x34\x34\x30\x37\x38\x39\x2c\x30\x2e\x38\
\x32\x34\x35\x20\x30\x2e\x36\x39\x38\x32\x36\x30\x30\x34\x2c\x31\
\x2e\x30\x30\x36\x33\x20\x31\x2e\x33\x39\x36\x35\x32\x30\x30\x37\
\x2c\x32\x2e\x30\x31\x32\x37\x20\x32\x2e\x30\x39\x34\x37\x38\x30\
\x31\x37\x2c\x33\x2e\x30\x31\x39\x31\x20\x30\x2e\x38\x32\x33\x34\
\x36\x39\x34\x2c\x2d\x30\x2e\x31\x35\x36\x36\x20\x31\x2e\x36\x34\
\x36\x39\x33\x38\x36\x2c\x2d\x30\x2e\x33\x31\x33\x33\x20\x32\x2e\
\x34\x37\x30\x34\x30\x38\x2c\x2d\x30\x2e\x34\x36\x39\x39\x20\x32\
\x2e\x38\x39\x30\x31\x31\x32\x38\x2c\x33\x2e\x30\x37\x37\x32\x20\
\x35\x2e\x37\x38\x30\x32\x32\x35\x32\x2c\x36\x2e\x31\x35\x34\x34\
\x20\x38\x2e\x36\x37\x30\x33\x33\x39\x32\x2c\x39\x2e\x32\x33\x31\
\x36\x20\x30\x2e\x35\x36\x38\x38\x34\x33\x2c\x30\x2e\x36\x39\x35\
\x32\x20\x31\x2e\x37\x33\x37\x36\x36\x32\x2c\x30\x2e\x35\x31\x37\
\x33\x20\x32\x2e\x31\x32\x33\x33\x33\x35\x2c\x2d\x30\x2e\x32\x37\
\x32\x37\x20\x30\x2e\x33\x37\x37\x30\x36\x38\x2c\x2d\x30\x2e\x35\
\x39\x31\x39\x20\x30\x2e\x30\x39\x32\x31\x39\x2c\x2d\x31\x2e\x33\
\x33\x38\x35\x20\x2d\x30\x2e\x34\x34\x30\x37\x37\x34\x2c\x2d\x31\
\x2e\x37\x32\x31\x36\x20\x2d\x33\x2e\x30\x32\x33\x32\x38\x38\x2c\
\x2d\x32\x2e\x38\x35\x39\x33\x20\x2d\x36\x2e\x30\x34\x36\x35\x37\
\x36\x39\x2c\x2d\x35\x2e\x37\x31\x38\x37\x20\x2d\x39\x2e\x30\x36\
\x39\x38\x36\x34\x37\x2c\x2d\x38\x2e\x35\x37\x38\x20\x30\x2e\x31\
\x38\x38\x30\x34\x37\x38\x2c\x2d\x30\x2e\x38\x33\x32\x39\x20\x30\
\x2e\x33\x37\x36\x30\x39\x35\x36\x2c\x2d\x31\x2e\x36\x36\x35\x37\
\x20\x30\x2e\x35\x36\x34\x31\x34\x33\x34\x2c\x2d\x32\x2e\x34\x39\
\x38\x36\x20\x2d\x31\x2e\x30\x33\x38\x32\x34\x36\x37\x2c\x2d\x30\
\x2e\x36\x36\x39\x31\x20\x2d\x32\x2e\x30\x37\x36\x34\x39\x33\x34\
\x2c\x2d\x31\x2e\x33\x33\x38\x33\x20\x2d\x33\x2e\x31\x31\x34\x37\
\x34\x2c\x2d\x32\x2e\x30\x30\x37\x35\x20\x2d\x30\x2e\x32\x39\x35\
\x34\x33\x35\x37\x2c\x30\x2e\x32\x39\x35\x39\x20\x2d\x30\x2e\x35\
\x39\x30\x38\x37\x31\x35\x2c\x30\x2e\x35\x39\x31\x38\x20\x2d\x30\
\x2e\x38\x38\x36\x33\x30\x37\x32\x2c\x30\x2e\x38\x38\x37\x37\x20\
\x7a\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x75\x73\
\x65\x34\x34\x31\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6e\x6e\x65\x63\x74\x6f\x72\
\x2d\x63\x75\x72\x76\x61\x74\x75\x72\x65\x3d\x22\x30\x22\x20\x2f\
\x3e\x0a\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\x6e\x6e\
\x65\x63\x74\x6f\x72\x2d\x63\x75\x72\x76\x61\x74\x75\x72\x65\x3d\
\x22\x30\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x75\
\x73\x65\x34\x36\x39\x31\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x64\
\x3d\x22\x6d\x20\x36\x2e\x39\x30\x33\x35\x35\x37\x33\x2c\x31\x30\
\x33\x37\x2e\x32\x37\x33\x39\x20\x30\x2e\x31\x30\x33\x35\x34\x36\
\x36\x2c\x30\x2e\x30\x32\x31\x20\x63\x20\x31\x2e\x32\x30\x34\x33\
\x37\x31\x38\x2c\x2d\x30\x2e\x33\x39\x39\x39\x20\x33\x2e\x39\x30\
\x37\x34\x30\x32\x31\x2c\x31\x2e\x31\x37\x35\x33\x20\x33\x2e\x33\
\x30\x35\x32\x31\x35\x31\x2c\x32\x2e\x35\x37\x39\x33\x20\x2d\x30\
\x2e\x31\x35\x32\x35\x39\x2c\x30\x2e\x32\x32\x30\x33\x20\x2d\x30\
\x2e\x31\x32\x36\x37\x30\x35\x2c\x30\x2e\x36\x31\x32\x20\x30\x2e\
\x30\x35\x37\x32\x32\x2c\x30\x2e\x38\x35\x38\x32\x20\x6c\x20\x2d\
\x33\x2e\x33\x38\x30\x31\x34\x38\x35\x2c\x33\x2e\x33\x37\x36\x33\
\x20\x63\x20\x2d\x30\x2e\x31\x38\x39\x33\x37\x35\x38\x2c\x2d\x30\
\x2e\x31\x38\x39\x31\x20\x2d\x30\x2e\x36\x31\x30\x33\x36\x31\x35\
\x2c\x2d\x30\x2e\x31\x38\x35\x20\x2d\x30\x2e\x38\x30\x33\x38\x32\
\x34\x32\x2c\x30\x20\x6c\x20\x2d\x35\x2e\x35\x38\x39\x39\x38\x36\
\x36\x34\x2c\x35\x2e\x33\x35\x36\x39\x20\x63\x20\x2d\x30\x2e\x35\
\x30\x39\x35\x34\x30\x30\x31\x2c\x30\x2e\x34\x38\x38\x32\x20\x2d\
\x30\x2e\x31\x30\x38\x39\x39\x30\x37\x39\x2c\x30\x2e\x39\x30\x33\
\x32\x20\x30\x2e\x31\x30\x36\x32\x36\x39\x38\x34\x2c\x31\x2e\x31\
\x32\x32\x32\x20\x6c\x20\x31\x2e\x30\x30\x32\x37\x33\x37\x2c\x31\
\x2e\x30\x30\x31\x33\x20\x63\x20\x30\x2e\x32\x31\x39\x33\x35\x31\
\x32\x2c\x30\x2e\x32\x31\x37\x35\x20\x30\x2e\x37\x39\x38\x33\x37\
\x35\x32\x2c\x30\x2e\x35\x31\x31\x33\x20\x31\x2e\x32\x30\x39\x38\
\x32\x33\x2c\x30\x2e\x30\x37\x37\x20\x6c\x20\x35\x2e\x32\x37\x35\
\x32\x36\x38\x37\x2c\x2d\x35\x2e\x35\x35\x31\x34\x20\x63\x20\x30\
\x2e\x31\x38\x33\x39\x32\x34\x31\x2c\x2d\x30\x2e\x31\x39\x33\x32\
\x20\x30\x2e\x31\x38\x35\x32\x38\x37\x2c\x2d\x30\x2e\x36\x30\x38\
\x20\x30\x2c\x2d\x30\x2e\x37\x39\x38\x35\x20\x30\x2c\x30\x20\x30\
\x2e\x30\x30\x31\x33\x31\x2c\x30\x20\x30\x2c\x30\x20\x6c\x20\x33\
\x2e\x33\x39\x33\x37\x37\x31\x38\x2c\x2d\x33\x2e\x33\x38\x37\x31\
\x20\x63\x20\x30\x2e\x33\x35\x38\x33\x31\x36\x2c\x30\x2e\x33\x32\
\x32\x34\x20\x30\x2e\x36\x39\x36\x37\x31\x35\x2c\x30\x2e\x33\x35\
\x30\x32\x20\x31\x2e\x30\x31\x37\x37\x32\x34\x2c\x30\x2e\x32\x36\
\x32\x35\x20\x30\x2e\x36\x31\x39\x39\x37\x35\x2c\x2d\x30\x2e\x31\
\x36\x39\x34\x20\x30\x2e\x39\x36\x35\x35\x37\x36\x2c\x30\x2e\x34\
\x33\x36\x32\x20\x31\x2e\x33\x33\x36\x35\x33\x2c\x30\x2e\x38\x37\
\x38\x37\x20\x6c\x20\x2d\x30\x2e\x31\x36\x37\x35\x37\x39\x2c\x30\
\x2e\x31\x36\x34\x37\x20\x63\x20\x2d\x30\x2e\x32\x34\x37\x39\x36\
\x2c\x30\x2e\x32\x35\x30\x32\x20\x2d\x30\x2e\x32\x32\x34\x37\x39\
\x36\x2c\x30\x2e\x36\x37\x31\x39\x20\x30\x2e\x30\x35\x33\x31\x33\
\x2c\x30\x2e\x39\x34\x39\x36\x20\x30\x2e\x32\x37\x37\x39\x33\x37\
\x2c\x30\x2e\x32\x37\x37\x34\x20\x30\x2e\x37\x30\x31\x36\x34\x34\
\x2c\x30\x2e\x33\x30\x30\x35\x20\x30\x2e\x39\x34\x39\x36\x30\x34\
\x2c\x30\x2e\x30\x35\x32\x20\x6c\x20\x31\x2e\x31\x30\x39\x30\x30\
\x35\x2c\x2d\x31\x2e\x31\x30\x35\x39\x20\x63\x20\x30\x2e\x32\x34\
\x37\x39\x36\x31\x2c\x2d\x30\x2e\x32\x35\x30\x32\x20\x30\x2e\x32\
\x32\x34\x37\x39\x37\x2c\x2d\x30\x2e\x36\x37\x31\x39\x20\x2d\x30\
\x2e\x30\x35\x34\x35\x2c\x2d\x30\x2e\x39\x34\x38\x31\x20\x2d\x30\
\x2e\x32\x35\x30\x36\x38\x35\x2c\x2d\x30\x2e\x32\x35\x31\x37\x20\
\x2d\x30\x2e\x36\x31\x34\x34\x34\x38\x2c\x2d\x30\x2e\x32\x38\x34\
\x34\x20\x2d\x30\x2e\x38\x36\x37\x38\x35\x37\x2c\x2d\x30\x2e\x31\
\x30\x34\x37\x20\x2d\x30\x2e\x37\x36\x30\x32\x32\x37\x2c\x2d\x30\
\x2e\x38\x35\x31\x35\x20\x2d\x30\x2e\x33\x36\x31\x30\x34\x31\x2c\
\x2d\x30\x2e\x39\x37\x39\x34\x20\x2d\x31\x2e\x33\x36\x33\x37\x37\
\x38\x2c\x2d\x32\x2e\x30\x38\x38\x20\x6c\x20\x2d\x31\x2e\x38\x37\
\x38\x37\x36\x39\x2c\x2d\x31\x2e\x39\x31\x36\x37\x20\x63\x20\x2d\
\x31\x2e\x33\x35\x32\x38\x37\x35\x2c\x2d\x31\x2e\x33\x32\x34\x38\
\x20\x2d\x33\x2e\x31\x31\x30\x33\x39\x30\x39\x2c\x2d\x31\x2e\x33\
\x32\x33\x36\x20\x2d\x34\x2e\x38\x31\x33\x34\x30\x38\x34\x2c\x2d\
\x30\x2e\x37\x39\x37\x31\x20\x7a\x22\x0a\x20\x20\x20\x20\x20\x20\
\x20\x73\x74\x79\x6c\x65\x3d\x22\x63\x6f\x6c\x6f\x72\x3a\x23\x30\
\x30\x30\x30\x30\x30\x3b\x66\x69\x6c\x6c\x3a\x23\x30\x30\x30\x30\
\x30\x30\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\x65\x3a\x6e\x6f\x6e\x7a\
\x65\x72\x6f\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x23\x30\x30\x30\x30\
\x38\x30\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x77\x69\x64\x74\x68\x3a\
\x30\x2e\x32\x32\x32\x37\x35\x35\x32\x34\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x6c\x69\x6e\x65\x63\x61\x70\x3a\x62\x75\x74\x74\x3b\x73\
\x74\x72\x6f\x6b\x65\x2d\x6c\x69\x6e\x65\x6a\x6f\x69\x6e\x3a\x6d\
\x69\x74\x65\x72\x3b\x73\x74\x72\x6f\x6b\x65\x2d\x6d\x69\x74\x65\
\x72\x6c\x69\x6d\x69\x74\x3a\x34\x3b\x73\x74\x72\x6f\x6b\x65\x2d\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\
\x2d\x64\x61\x73\x68\x61\x72\x72\x61\x79\x3a\x6e\x6f\x6e\x65\x3b\
\x73\x74\x72\x6f\x6b\x65\x2d\x64\x61\x73\x68\x6f\x66\x66\x73\x65\
\x74\x3a\x30\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\
\x76\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\
\x6c\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\
\x65\x3b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\
\x6c\x65\x3b\x65\x6e\x61\x62\x6c\x65\x2d\x62\x61\x63\x6b\x67\x72\
\x6f\x75\x6e\x64\x3a\x61\x63\x63\x75\x6d\x75\x6c\x61\x74\x65\x22\
\x20\x2f\x3e\x0a\x20\x20\x3c\x2f\x67\x3e\x0a\x3c\x2f\x73\x76\x67\
\x3e\x0a\
\x00\x00\x36\x68\
\x3c\
\x3f\x78\x6d\x6c\x20\x76\x65\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\
\x30\x22\x20\x65\x6e\x63\x6f\x64\x69\x6e\x67\x3d\x22\x55\x54\x46\
\x2d\x38\x22\x20\x73\x74\x61\x6e\x64\x61\x6c\x6f\x6e\x65\x3d\x22\
\x6e\x6f\x22\x3f\x3e\x0d\x0a\x3c\x21\x2d\x2d\x20\x43\x72\x65\x61\
\x74\x65\x64\x20\x77\x69\x74\x68\x20\x49\x6e\x6b\x73\x63\x61\x70\
\x65\x20\x28\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x2e\x6f\x72\x67\x2f\x29\x20\x2d\x2d\x3e\
\x0d\x0a\x0d\x0a\x3c\x73\x76\x67\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x64\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x65\x6c\x65\x6d\x65\x6e\
\x74\x73\x2f\x31\x2e\x31\x2f\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\
\x6e\x73\x3a\x63\x63\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x63\x72\
\x65\x61\x74\x69\x76\x65\x63\x6f\x6d\x6d\x6f\x6e\x73\x2e\x6f\x72\
\x67\x2f\x6e\x73\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\
\x3a\x72\x64\x66\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x30\x32\x2f\
\x32\x32\x2d\x72\x64\x66\x2d\x73\x79\x6e\x74\x61\x78\x2d\x6e\x73\
\x23\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x76\x67\
\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x77\x33\x2e\
\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\x73\x76\x67\x22\x0d\x0a\x20\
\x20\x20\x78\x6d\x6c\x6e\x73\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\
\x77\x77\x77\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x32\x30\x30\x30\x2f\
\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x78\
\x6c\x69\x6e\x6b\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\
\x2e\x77\x33\x2e\x6f\x72\x67\x2f\x31\x39\x39\x39\x2f\x78\x6c\x69\
\x6e\x6b\x22\x0d\x0a\x20\x20\x20\x78\x6d\x6c\x6e\x73\x3a\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x2e\x73\x6f\x75\x72\x63\x65\x66\x6f\
\x72\x67\x65\x2e\x6e\x65\x74\x2f\x44\x54\x44\x2f\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x2d\x30\x2e\x64\x74\x64\x22\x0d\x0a\x20\x20\x20\
\x78\x6d\x6c\x6e\x73\x3a\x69\x6e\x6b\x73\x63\x61\x70\x65\x3d\x22\
\x68\x74\x74\x70\x3a\x2f\x2f\x77\x77\x77\x2e\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x2e\x6f\x72\x67\x2f\x6e\x61\x6d\x65\x73\x70\x61\x63\
\x65\x73\x2f\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\
\x20\x77\x69\x64\x74\x68\x3d\x22\x35\x31\x32\x22\x0d\x0a\x20\x20\
\x20\x68\x65\x69\x67\x68\x74\x3d\x22\x35\x31\x32\x22\x0d\x0a\x20\
\x20\x20\x69\x64\x3d\x22\x73\x76\x67\x32\x33\x38\x33\x22\x0d\x0a\
\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x76\x65\x72\x73\
\x69\x6f\x6e\x3d\x22\x30\x2e\x33\x32\x22\x0d\x0a\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x65\x72\x73\x69\x6f\x6e\x3d\
\x22\x30\x2e\x34\x37\x70\x72\x65\x34\x20\x72\x32\x32\x34\x34\x36\
\x22\x0d\x0a\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x64\
\x6f\x63\x6e\x61\x6d\x65\x3d\x22\x77\x69\x6e\x64\x6f\x77\x2d\x69\
\x63\x6f\x6e\x2e\x73\x76\x67\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x6f\x75\x74\x70\x75\x74\x5f\x65\x78\x74\
\x65\x6e\x73\x69\x6f\x6e\x3d\x22\x6f\x72\x67\x2e\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x2e\x6f\x75\x74\x70\x75\x74\x2e\x73\x76\x67\x2e\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x22\x0d\x0a\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x65\x78\x70\x6f\x72\x74\x2d\x66\x69\
\x6c\x65\x6e\x61\x6d\x65\x3d\x22\x2f\x68\x6f\x6d\x65\x2f\x74\x69\
\x6d\x6f\x74\x68\x65\x65\x2f\x73\x72\x63\x2f\x66\x72\x69\x74\x75\
\x72\x65\x2f\x66\x72\x69\x74\x75\x72\x65\x2f\x73\x74\x61\x72\x74\
\x2e\x70\x6e\x67\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x65\x78\x70\x6f\x72\x74\x2d\x78\x64\x70\x69\x3d\x22\
\x31\x30\x30\x2e\x30\x31\x22\x0d\x0a\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x65\x78\x70\x6f\x72\x74\x2d\x79\x64\x70\x69\
\x3d\x22\x31\x30\x30\x2e\x30\x31\x22\x0d\x0a\x20\x20\x20\x76\x65\
\x72\x73\x69\x6f\x6e\x3d\x22\x31\x2e\x31\x22\x3e\x0d\x0a\x20\x20\
\x3c\x64\x65\x66\x73\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x64\x65\x66\x73\x32\x33\x38\x35\x22\x3e\x0d\x0a\x20\x20\x20\x20\
\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x36\x34\x22\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\
\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x65\x65\x65\x65\x65\
\x65\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\
\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x38\x36\x36\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\
\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x38\x39\x38\
\x39\x38\x39\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\
\x3a\x31\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\
\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x38\x36\x38\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\
\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x34\x32\x22\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\
\x70\x33\x38\x34\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\
\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x31\x35\x31\x35\x31\x35\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x62\x64\
\x63\x32\x63\x35\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\
\x79\x3a\x31\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x2e\x34\x32\x37\x30\x38\x33\
\x35\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x73\x74\x6f\x70\x33\x38\x34\x36\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\
\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x31\x35\x31\x35\x31\x35\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\
\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x38\x34\x38\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\
\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x33\x34\x22\x3e\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\
\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\x73\
\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\
\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x73\x74\x6f\x70\x33\x38\x33\x36\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\
\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\
\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x3b\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\
\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x38\x33\x38\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\
\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x31\x36\x22\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\
\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\x30\x3b\
\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\
\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x38\x31\x38\x22\x20\x2f\x3e\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\
\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x34\x61\x64\
\x39\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\
\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\
\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\x38\x32\x30\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\
\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x30\x36\x22\x3e\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x33\
\x38\x30\x38\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\
\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\
\x63\x6f\x6c\x6f\x72\x3a\x23\x31\x35\x31\x35\x31\x35\x3b\x73\x74\
\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x3b\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x64\x64\x65\x33\
\x65\x37\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x3b\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\
\x66\x73\x65\x74\x3d\x22\x30\x2e\x34\x31\x35\x38\x39\x38\x33\x38\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x73\x74\x6f\x70\x33\x38\x31\x30\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\
\x63\x6f\x6c\x6f\x72\x3a\x23\x31\x35\x31\x35\x31\x35\x3b\x73\x74\
\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x30\x3b\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\
\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\
\x3d\x22\x73\x74\x6f\x70\x33\x38\x31\x32\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x2f\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\
\x69\x65\x6e\x74\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\
\x22\x30\x20\x3a\x20\x38\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\
\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\x20\x30\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x36\x20\x3a\x20\x38\x20\x3a\
\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\x69\
\x67\x69\x6e\x3d\x22\x38\x20\x3a\x20\x35\x2e\x33\x33\x33\x33\x33\
\x33\x33\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x32\
\x33\x39\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x65\x63\x74\x69\
\x76\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\
\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x32\x38\x32\x38\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x70\x65\x72\x73\x70\x33\x64\x2d\x6f\x72\x69\x67\x69\x6e\x3d\
\x22\x30\x2e\x35\x20\x3a\x20\x30\x2e\x33\x33\x33\x33\x33\x33\x33\
\x33\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x7a\x3d\x22\x31\x20\
\x3a\x20\x30\x2e\x35\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x79\
\x3d\x22\x30\x20\x3a\x20\x31\x30\x30\x30\x20\x3a\x20\x30\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x76\x70\x5f\x78\x3d\x22\x30\x20\x3a\x20\x30\x2e\x35\x20\x3a\
\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x20\x20\x3c\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\
\x65\x72\x73\x70\x65\x63\x74\x69\x76\x65\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x70\x65\x72\x73\x70\x65\x63\x74\x69\
\x76\x65\x32\x39\x39\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\x70\x33\x64\
\x2d\x6f\x72\x69\x67\x69\x6e\x3d\x22\x30\x2e\x35\x20\x3a\x20\x30\
\x2e\x33\x33\x33\x33\x33\x33\x33\x33\x20\x3a\x20\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x76\x70\x5f\x7a\x3d\x22\x31\x20\x3a\x20\x30\x2e\x35\x20\x3a\x20\
\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x76\x70\x5f\x79\x3d\x22\x30\x20\x3a\x20\x31\x30\
\x30\x30\x20\x3a\x20\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x76\x70\x5f\x78\x3d\x22\x30\
\x20\x3a\x20\x30\x2e\x35\x20\x3a\x20\x31\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\
\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x70\x65\x72\x73\
\x70\x33\x64\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x63\x6f\
\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\x79\x73\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\x6b\x3a\x68\x72\x65\
\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x34\x30\x32\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x35\x31\x31\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\
\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x54\
\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\
\x28\x31\x2c\x30\x2c\x30\x2c\x2d\x31\x2c\x2d\x31\x38\x2c\x36\x37\
\x38\x2e\x30\x32\x36\x37\x38\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x73\x70\x72\x65\x61\x64\x4d\x65\x74\x68\x6f\x64\x3d\x22\
\x70\x61\x64\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\x3d\
\x22\x31\x35\x34\x2e\x36\x36\x39\x36\x35\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x79\x31\x3d\x22\x33\x37\x33\x2e\x30\x37\x35\x39\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\x31\x35\
\x35\x2e\x37\x31\x36\x38\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x79\x32\x3d\x22\x34\x31\x35\x2e\x30\x34\x35\x34\x34\x22\x20\
\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\
\x6e\x74\x34\x30\x32\x39\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\
\x72\x3a\x23\x31\x35\x31\x35\x31\x35\x3b\x73\x74\x6f\x70\x2d\x6f\
\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x30\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x73\x74\
\x6f\x70\x34\x30\x33\x31\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x73\x74\x6f\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x64\x3d\x22\x73\x74\x6f\x70\x34\x30\x33\x37\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\
\x3d\x22\x30\x2e\x34\x38\x36\x30\x35\x32\x33\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x73\x74\
\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x64\x64\x65\x33\x65\x37\
\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x73\x74\x6f\
\x70\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\
\x73\x74\x6f\x70\x34\x30\x34\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x6f\x66\x66\x73\x65\x74\x3d\x22\x31\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\
\x73\x74\x6f\x70\x2d\x63\x6f\x6c\x6f\x72\x3a\x23\x31\x35\x31\x35\
\x31\x35\x3b\x73\x74\x6f\x70\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x3b\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x6c\x69\
\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x3e\x0d\x0a\x20\
\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\x65\
\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\
\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\
\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\
\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x31\x36\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\x6c\
\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x32\x32\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x63\x78\x3d\x22\x33\x32\x39\x2e\x31\x38\
\x30\x32\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\x3d\
\x22\x33\x39\x31\x2e\x36\x37\x30\x35\x33\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x66\x78\x3d\x22\x33\x32\x39\x2e\x31\x38\x30\x32\
\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\x33\
\x39\x31\x2e\x36\x37\x30\x35\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x72\x3d\x22\x34\x38\x2e\x36\x36\x35\x33\x33\x37\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\
\x78\x28\x2d\x32\x30\x2e\x37\x38\x30\x36\x39\x38\x2c\x2d\x31\x34\
\x2e\x32\x39\x35\x38\x36\x37\x2c\x39\x35\x2e\x34\x39\x31\x37\x39\
\x2c\x2d\x31\x33\x38\x2e\x38\x30\x38\x33\x32\x2c\x2d\x32\x38\x31\
\x36\x34\x2e\x31\x31\x39\x2c\x35\x35\x38\x38\x36\x2e\x32\x39\x36\
\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\
\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\
\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\
\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\
\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x34\x32\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x34\x30\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x78\x31\x3d\x22\x32\x34\x38\x2e\x34\x30\x38\
\x36\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x31\x3d\x22\
\x33\x33\x39\x2e\x38\x34\x39\x33\x33\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x78\x32\x3d\x22\x33\x31\x38\x2e\x34\x35\x35\x39\x39\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x79\x32\x3d\x22\x33\x39\
\x33\x2e\x31\x34\x33\x31\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\
\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\x74\x73\x3d\x22\
\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\x73\x65\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\
\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\x73\
\x6c\x61\x74\x65\x28\x2d\x37\x2e\x36\x38\x34\x38\x38\x36\x38\x2c\
\x36\x2e\x32\x32\x31\x30\x39\x38\x39\x29\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\
\x65\x6e\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\
\x77\x61\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\
\x69\x6e\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\
\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x36\x34\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x72\x61\x64\x69\x61\
\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x35\x36\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x63\x78\x3d\x22\x31\x31\x2e\x34\x34\
\x33\x32\x39\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x63\x79\
\x3d\x22\x33\x2e\x30\x34\x31\x33\x30\x32\x37\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x66\x78\x3d\x22\x31\x31\x2e\x34\x34\x33\x32\
\x39\x36\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x66\x79\x3d\x22\
\x33\x2e\x30\x34\x31\x33\x30\x32\x37\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x72\x3d\x22\x33\x2e\x34\x31\x33\x35\x30\x38\x32\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\
\x74\x55\x6e\x69\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\
\x65\x4f\x6e\x55\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x67\x72\x61\x64\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\
\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x30\x2e\x37\x31\x38\x38\
\x39\x33\x31\x38\x2c\x30\x2c\x30\x2c\x30\x2e\x37\x33\x35\x34\x32\
\x33\x33\x31\x2c\x32\x2e\x39\x32\x37\x35\x34\x39\x37\x2c\x31\x2e\
\x31\x34\x33\x34\x34\x39\x37\x29\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x3c\x6c\x69\x6e\x65\x61\x72\x47\x72\x61\x64\x69\x65\x6e\
\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x63\x6f\x6c\x6c\x65\x63\x74\x3d\x22\x61\x6c\x77\x61\
\x79\x73\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x6c\x69\x6e\
\x6b\x3a\x68\x72\x65\x66\x3d\x22\x23\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x34\x32\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x6c\x69\x6e\x65\x61\x72\x47\
\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x37\x34\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x67\x72\x61\x64\x69\x65\x6e\x74\x55\x6e\x69\
\x74\x73\x3d\x22\x75\x73\x65\x72\x53\x70\x61\x63\x65\x4f\x6e\x55\
\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x67\x72\x61\x64\
\x69\x65\x6e\x74\x54\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\
\x61\x74\x72\x69\x78\x28\x33\x32\x2e\x30\x30\x34\x37\x38\x36\x2c\
\x30\x2c\x30\x2c\x33\x32\x2e\x30\x30\x34\x37\x38\x36\x2c\x2d\x35\
\x36\x30\x34\x2e\x33\x30\x36\x35\x2c\x2d\x31\x34\x37\x32\x33\x2e\
\x39\x32\x36\x29\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x31\
\x3d\x22\x32\x34\x38\x2e\x34\x30\x38\x36\x33\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x79\x31\x3d\x22\x33\x33\x39\x2e\x38\x34\x39\
\x33\x33\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x78\x32\x3d\x22\
\x33\x31\x38\x2e\x34\x35\x35\x39\x39\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x79\x32\x3d\x22\x33\x39\x33\x2e\x31\x34\x33\x31\x39\
\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x3c\x2f\x64\x65\x66\x73\x3e\x0d\
\x0a\x20\x20\x3c\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x61\x6d\
\x65\x64\x76\x69\x65\x77\x0d\x0a\x20\x20\x20\x20\x20\x69\x64\x3d\
\x22\x62\x61\x73\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x70\x61\x67\
\x65\x63\x6f\x6c\x6f\x72\x3d\x22\x23\x66\x66\x66\x66\x66\x66\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x63\x6f\x6c\
\x6f\x72\x3d\x22\x23\x36\x36\x36\x36\x36\x36\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x62\x6f\x72\x64\x65\x72\x6f\x70\x61\x63\x69\x74\x79\
\x3d\x22\x31\x2e\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x6f\x70\x61\x63\x69\x74\
\x79\x3d\x22\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x70\x61\x67\x65\x73\x68\x61\x64\x6f\x77\x3d\
\x22\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x7a\x6f\x6f\x6d\x3d\x22\x30\x2e\x38\x31\x36\x34\x30\
\x36\x32\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\
\x61\x70\x65\x3a\x63\x78\x3d\x22\x2d\x33\x2e\x30\x32\x37\x32\x30\
\x32\x32\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\
\x70\x65\x3a\x63\x79\x3d\x22\x32\x33\x39\x2e\x30\x33\x34\x30\x36\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x63\x75\x72\x72\x65\x6e\x74\x2d\x6c\x61\x79\x65\x72\x3d\x22\
\x67\x33\x34\x38\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\
\x77\x67\x72\x69\x64\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x69\x64\
\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x64\x6f\x63\x75\
\x6d\x65\x6e\x74\x2d\x75\x6e\x69\x74\x73\x3d\x22\x70\x78\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\
\x69\x6e\x64\x6f\x77\x2d\x77\x69\x64\x74\x68\x3d\x22\x31\x34\x34\
\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x68\x65\x69\x67\x68\x74\x3d\
\x22\x38\x34\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\
\x63\x61\x70\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x78\x3d\x22\x2d\
\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\
\x65\x3a\x77\x69\x6e\x64\x6f\x77\x2d\x79\x3d\x22\x2d\x33\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x77\
\x69\x6e\x64\x6f\x77\x2d\x6d\x61\x78\x69\x6d\x69\x7a\x65\x64\x3d\
\x22\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x73\x68\x6f\x77\x67\x75\
\x69\x64\x65\x73\x3d\x22\x74\x72\x75\x65\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x75\x69\x64\x65\
\x2d\x62\x62\x6f\x78\x3d\x22\x74\x72\x75\x65\x22\x20\x2f\x3e\x0d\
\x0a\x20\x20\x3c\x6d\x65\x74\x61\x64\x61\x74\x61\x0d\x0a\x20\x20\
\x20\x20\x20\x69\x64\x3d\x22\x6d\x65\x74\x61\x64\x61\x74\x61\x32\
\x33\x38\x38\x22\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x72\x64\x66\x3a\
\x52\x44\x46\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x63\x63\x3a\
\x57\x6f\x72\x6b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\
\x64\x66\x3a\x61\x62\x6f\x75\x74\x3d\x22\x22\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x3c\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\
\x3e\x69\x6d\x61\x67\x65\x2f\x73\x76\x67\x2b\x78\x6d\x6c\x3c\x2f\
\x64\x63\x3a\x66\x6f\x72\x6d\x61\x74\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x20\x20\x3c\x64\x63\x3a\x74\x79\x70\x65\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x64\x66\x3a\x72\x65\x73\
\x6f\x75\x72\x63\x65\x3d\x22\x68\x74\x74\x70\x3a\x2f\x2f\x70\x75\
\x72\x6c\x2e\x6f\x72\x67\x2f\x64\x63\x2f\x64\x63\x6d\x69\x74\x79\
\x70\x65\x2f\x53\x74\x69\x6c\x6c\x49\x6d\x61\x67\x65\x22\x20\x2f\
\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x2f\x63\x63\x3a\x57\x6f\
\x72\x6b\x3e\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x72\x64\x66\x3a\x52\
\x44\x46\x3e\x0d\x0a\x20\x20\x3c\x2f\x6d\x65\x74\x61\x64\x61\x74\
\x61\x3e\x0d\x0a\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x6c\x61\x79\x65\x72\x31\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6c\x61\x62\x65\x6c\x3d\
\x22\x4c\x61\x79\x65\x72\x20\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x67\x72\x6f\x75\x70\x6d\x6f\
\x64\x65\x3d\x22\x6c\x61\x79\x65\x72\x22\x0d\x0a\x20\x20\x20\x20\
\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x74\x72\x61\x6e\
\x73\x6c\x61\x74\x65\x28\x30\x2c\x34\x39\x36\x29\x22\x3e\x0d\x0a\
\x20\x20\x20\x20\x3c\x67\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x67\x33\x34\x38\x30\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\
\x72\x69\x78\x28\x30\x2e\x30\x37\x38\x37\x31\x34\x31\x32\x2c\x30\
\x2c\x30\x2c\x30\x2e\x30\x37\x38\x37\x31\x34\x31\x32\x2c\x2d\x31\
\x33\x2e\x36\x30\x33\x36\x34\x34\x2c\x2d\x32\x31\x2e\x38\x38\x36\
\x31\x39\x31\x29\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x70\
\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\
\x73\x63\x61\x70\x65\x3a\x6f\x66\x66\x73\x65\x74\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\
\x3a\x72\x61\x64\x69\x75\x73\x3d\x22\x33\x35\x2e\x35\x34\x32\x36\
\x34\x35\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x6e\
\x6b\x73\x63\x61\x70\x65\x3a\x6f\x72\x69\x67\x69\x6e\x61\x6c\x3d\
\x22\x4d\x20\x33\x30\x33\x2e\x32\x35\x20\x34\x32\x2e\x34\x33\x37\
\x35\x20\x43\x20\x32\x35\x31\x2e\x35\x32\x34\x37\x32\x20\x34\x32\
\x2e\x34\x33\x37\x35\x20\x32\x30\x36\x2e\x32\x38\x34\x38\x36\x20\
\x37\x30\x2e\x31\x34\x30\x35\x34\x33\x20\x31\x38\x31\x2e\x35\x20\
\x31\x31\x31\x2e\x35\x20\x43\x20\x31\x38\x31\x2e\x34\x38\x31\x37\
\x20\x31\x31\x31\x2e\x33\x36\x34\x31\x31\x20\x31\x38\x31\x2e\x34\
\x35\x35\x36\x20\x31\x31\x31\x2e\x32\x32\x39\x37\x20\x31\x38\x31\
\x2e\x34\x33\x37\x35\x20\x31\x31\x31\x2e\x30\x39\x33\x37\x35\x20\
\x4c\x20\x31\x37\x39\x2e\x38\x37\x35\x20\x31\x31\x34\x2e\x32\x35\
\x20\x43\x20\x31\x36\x38\x2e\x31\x31\x36\x33\x32\x20\x31\x33\x34\
\x2e\x39\x31\x36\x30\x32\x20\x31\x36\x31\x2e\x34\x30\x36\x32\x35\
\x20\x31\x35\x38\x2e\x38\x33\x35\x31\x35\x20\x31\x36\x31\x2e\x34\
\x30\x36\x32\x35\x20\x31\x38\x34\x2e\x33\x31\x32\x35\x20\x43\x20\
\x31\x36\x31\x2e\x34\x30\x36\x32\x35\x20\x31\x39\x39\x2e\x34\x35\
\x39\x36\x38\x20\x31\x36\x33\x2e\x37\x39\x31\x32\x32\x20\x32\x31\
\x34\x2e\x30\x33\x32\x33\x33\x20\x31\x36\x38\x2e\x31\x38\x37\x35\
\x20\x32\x32\x37\x2e\x37\x31\x38\x37\x35\x20\x4c\x20\x35\x32\x2e\
\x34\x33\x37\x35\x20\x34\x30\x33\x2e\x37\x38\x31\x32\x35\x20\x43\
\x20\x35\x32\x2e\x36\x32\x35\x35\x31\x33\x20\x34\x30\x35\x2e\x34\
\x37\x35\x33\x38\x20\x35\x32\x2e\x38\x33\x36\x31\x31\x36\x20\x34\
\x30\x37\x2e\x31\x33\x31\x31\x20\x35\x33\x2e\x30\x36\x32\x35\x20\
\x34\x30\x38\x2e\x37\x35\x20\x43\x20\x35\x39\x2e\x36\x36\x37\x31\
\x36\x34\x20\x34\x35\x36\x2e\x35\x34\x36\x39\x37\x20\x38\x32\x2e\
\x32\x39\x38\x31\x38\x35\x20\x34\x37\x31\x2e\x33\x33\x37\x33\x35\
\x20\x31\x32\x32\x2e\x33\x34\x33\x37\x35\x20\x34\x37\x30\x2e\x33\
\x31\x32\x35\x20\x43\x20\x31\x32\x33\x2e\x37\x31\x32\x38\x35\x20\
\x34\x37\x30\x2e\x32\x37\x39\x35\x20\x31\x32\x35\x2e\x31\x32\x31\
\x36\x32\x20\x34\x37\x30\x2e\x32\x32\x37\x34\x20\x31\x32\x36\x2e\
\x35\x33\x31\x32\x35\x20\x34\x37\x30\x2e\x31\x35\x36\x32\x35\x20\
\x43\x20\x31\x32\x37\x2e\x39\x35\x32\x36\x37\x20\x34\x37\x30\x2e\
\x30\x38\x34\x30\x35\x20\x31\x32\x39\x2e\x34\x31\x32\x30\x35\x20\
\x34\x36\x39\x2e\x39\x38\x32\x36\x31\x20\x31\x33\x30\x2e\x38\x37\
\x35\x20\x34\x36\x39\x2e\x38\x37\x35\x20\x4c\x20\x32\x39\x32\x2e\
\x34\x33\x37\x35\x20\x33\x32\x35\x2e\x37\x35\x20\x43\x20\x32\x39\
\x34\x2e\x30\x33\x32\x31\x20\x33\x32\x35\x2e\x38\x37\x30\x32\x39\
\x20\x32\x39\x35\x2e\x36\x34\x31\x31\x31\x20\x33\x32\x35\x2e\x39\
\x36\x34\x31\x32\x20\x32\x39\x37\x2e\x32\x35\x20\x33\x32\x36\x2e\
\x30\x33\x31\x32\x35\x20\x4c\x20\x32\x39\x37\x2e\x36\x35\x36\x32\
\x35\x20\x33\x32\x36\x2e\x33\x31\x32\x35\x20\x4c\x20\x32\x39\x37\
\x2e\x33\x31\x32\x35\x20\x33\x32\x36\x2e\x30\x33\x31\x32\x35\x20\
\x43\x20\x32\x39\x39\x2e\x32\x38\x36\x39\x33\x20\x33\x32\x36\x2e\
\x31\x31\x32\x37\x35\x20\x33\x30\x31\x2e\x32\x35\x35\x35\x34\x20\
\x33\x32\x36\x2e\x31\x35\x36\x32\x35\x20\x33\x30\x33\x2e\x32\x35\
\x20\x33\x32\x36\x2e\x31\x35\x36\x32\x35\x20\x43\x20\x33\x33\x30\
\x2e\x34\x30\x37\x34\x39\x20\x33\x32\x36\x2e\x31\x35\x36\x32\x35\
\x20\x33\x35\x35\x2e\x37\x37\x38\x35\x33\x20\x33\x31\x38\x2e\x35\
\x31\x36\x35\x32\x20\x33\x37\x37\x2e\x33\x34\x33\x37\x35\x20\x33\
\x30\x35\x2e\x32\x38\x31\x32\x35\x20\x43\x20\x33\x37\x37\x2e\x34\
\x31\x37\x33\x35\x20\x33\x30\x35\x2e\x32\x39\x30\x32\x35\x20\x33\
\x37\x37\x2e\x34\x38\x38\x39\x20\x33\x30\x35\x2e\x33\x30\x33\x32\
\x20\x33\x37\x37\x2e\x35\x36\x32\x35\x20\x33\x30\x35\x2e\x33\x31\
\x32\x35\x20\x4c\x20\x33\x37\x39\x2e\x32\x31\x38\x37\x35\x20\x33\
\x30\x34\x2e\x31\x32\x35\x20\x43\x20\x33\x38\x33\x2e\x36\x36\x33\
\x34\x37\x20\x33\x30\x31\x2e\x33\x30\x31\x33\x37\x20\x33\x38\x37\
\x2e\x39\x34\x30\x34\x31\x20\x32\x39\x38\x2e\x32\x32\x33\x38\x20\
\x33\x39\x32\x2e\x30\x33\x31\x32\x35\x20\x32\x39\x34\x2e\x39\x33\
\x37\x35\x20\x4c\x20\x33\x39\x33\x2e\x37\x38\x31\x32\x35\x20\x32\
\x39\x33\x2e\x36\x38\x37\x35\x20\x43\x20\x33\x39\x33\x2e\x37\x31\
\x38\x30\x35\x20\x32\x39\x33\x2e\x36\x38\x30\x35\x20\x33\x39\x33\
\x2e\x36\x35\x36\x39\x34\x20\x32\x39\x33\x2e\x36\x36\x32\x38\x35\
\x20\x33\x39\x33\x2e\x35\x39\x33\x37\x35\x20\x32\x39\x33\x2e\x36\
\x35\x36\x32\x35\x20\x43\x20\x34\x32\x35\x2e\x30\x36\x32\x34\x31\
\x20\x32\x36\x37\x2e\x36\x33\x36\x37\x36\x20\x34\x34\x35\x2e\x31\
\x32\x35\x20\x32\x32\x38\x2e\x33\x33\x34\x33\x35\x20\x34\x34\x35\
\x2e\x31\x32\x35\x20\x31\x38\x34\x2e\x33\x31\x32\x35\x20\x43\x20\
\x34\x34\x35\x2e\x31\x32\x35\x20\x31\x30\x35\x2e\x39\x36\x36\x37\
\x20\x33\x38\x31\x2e\x35\x39\x35\x38\x20\x34\x32\x2e\x34\x33\x37\
\x35\x20\x33\x30\x33\x2e\x32\x35\x20\x34\x32\x2e\x34\x33\x37\x35\
\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\
\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x66\x35\x37\x39\
\x30\x30\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\
\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\
\x68\x32\x38\x36\x39\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x64\x3d\x22\x6d\x20\x33\x30\x33\x2e\x32\x35\x2c\x36\x2e\x39\
\x30\x36\x32\x35\x20\x63\x20\x2d\x36\x32\x2e\x34\x32\x33\x30\x32\
\x2c\x30\x20\x2d\x31\x31\x37\x2e\x36\x35\x34\x37\x35\x2c\x33\x32\
\x2e\x35\x35\x31\x35\x36\x20\x2d\x31\x34\x39\x2e\x32\x31\x38\x37\
\x35\x2c\x38\x31\x2e\x36\x32\x35\x20\x61\x20\x33\x35\x2e\x35\x34\
\x36\x31\x39\x39\x2c\x33\x35\x2e\x35\x34\x36\x31\x39\x39\x20\x30\
\x20\x30\x20\x30\x20\x2d\x34\x2e\x34\x33\x37\x35\x2c\x36\x2e\x37\
\x38\x31\x32\x35\x20\x6c\x20\x2d\x31\x2e\x35\x2c\x33\x2e\x30\x33\
\x31\x32\x35\x20\x2d\x30\x2e\x30\x36\x32\x35\x2c\x30\x2e\x31\x32\
\x35\x20\x43\x20\x31\x33\x33\x2e\x39\x32\x37\x35\x2c\x31\x32\x33\
\x2e\x39\x33\x30\x31\x36\x20\x31\x32\x35\x2e\x38\x37\x35\x2c\x31\
\x35\x33\x2e\x33\x30\x39\x20\x31\x32\x35\x2e\x38\x37\x35\x2c\x31\
\x38\x34\x2e\x33\x31\x32\x35\x20\x63\x20\x30\x2c\x31\x32\x2e\x36\
\x38\x33\x34\x33\x20\x31\x2e\x34\x31\x36\x37\x2c\x32\x35\x2e\x30\
\x35\x38\x37\x37\x20\x33\x2e\x39\x36\x38\x37\x35\x2c\x33\x37\x2e\
\x30\x33\x31\x32\x35\x20\x4c\x20\x32\x32\x2e\x37\x35\x2c\x33\x38\
\x34\x2e\x32\x35\x20\x61\x20\x33\x35\x2e\x35\x34\x36\x31\x39\x39\
\x2c\x33\x35\x2e\x35\x34\x36\x31\x39\x39\x20\x30\x20\x30\x20\x30\
\x20\x2d\x35\x2e\x36\x32\x35\x2c\x32\x33\x2e\x34\x33\x37\x35\x20\
\x63\x20\x30\x2e\x32\x32\x36\x35\x38\x38\x2c\x32\x2e\x30\x34\x31\
\x37\x32\x20\x30\x2e\x34\x38\x35\x30\x34\x35\x2c\x34\x2e\x30\x33\
\x39\x31\x37\x20\x30\x2e\x37\x35\x2c\x35\x2e\x39\x33\x37\x35\x20\
\x6c\x20\x2d\x30\x2e\x30\x33\x31\x32\x35\x2c\x30\x20\x63\x20\x33\
\x2e\x39\x38\x37\x37\x35\x2c\x32\x38\x2e\x38\x35\x38\x37\x35\x20\
\x31\x34\x2e\x31\x31\x36\x37\x38\x37\x2c\x35\x34\x2e\x35\x35\x31\
\x39\x38\x20\x33\x34\x2e\x35\x39\x33\x37\x35\x2c\x37\x31\x2e\x35\
\x36\x32\x35\x20\x32\x30\x2e\x34\x35\x39\x36\x36\x38\x2c\x31\x36\
\x2e\x39\x39\x36\x31\x35\x20\x34\x36\x2e\x32\x30\x33\x33\x30\x39\
\x2c\x32\x31\x2e\x32\x37\x36\x31\x31\x20\x37\x30\x2e\x37\x35\x2c\
\x32\x30\x2e\x36\x35\x36\x32\x35\x20\x30\x2e\x30\x32\x30\x35\x2c\
\x2d\x34\x2e\x39\x65\x2d\x34\x20\x30\x2e\x30\x34\x32\x2c\x35\x65\
\x2d\x34\x20\x30\x2e\x30\x36\x32\x35\x2c\x30\x20\x31\x2e\x36\x36\
\x33\x30\x35\x2c\x2d\x30\x2e\x30\x34\x30\x36\x20\x33\x2e\x33\x35\
\x35\x36\x34\x2c\x2d\x30\x2e\x31\x30\x31\x33\x35\x20\x35\x2e\x30\
\x36\x32\x35\x2c\x2d\x30\x2e\x31\x38\x37\x35\x20\x61\x20\x33\x35\
\x2e\x35\x34\x36\x31\x39\x39\x2c\x33\x35\x2e\x35\x34\x36\x31\x39\
\x39\x20\x30\x20\x30\x20\x30\x20\x30\x2e\x30\x33\x31\x32\x2c\x30\
\x20\x63\x20\x31\x2e\x38\x37\x34\x39\x35\x2c\x2d\x30\x2e\x30\x39\
\x35\x32\x20\x33\x2e\x35\x36\x37\x31\x34\x2c\x2d\x30\x2e\x32\x32\
\x39\x31\x36\x20\x35\x2e\x31\x32\x35\x2c\x2d\x30\x2e\x33\x34\x33\
\x37\x35\x20\x61\x20\x33\x35\x2e\x35\x34\x36\x31\x39\x39\x2c\x33\
\x35\x2e\x35\x34\x36\x31\x39\x39\x20\x30\x20\x30\x20\x30\x20\x32\
\x31\x2e\x30\x36\x32\x35\x2c\x2d\x38\x2e\x39\x30\x36\x32\x35\x20\
\x6c\x20\x31\x35\x31\x2e\x31\x32\x35\x2c\x2d\x31\x33\x34\x2e\x38\
\x31\x32\x35\x20\x63\x20\x33\x31\x2e\x34\x37\x30\x35\x31\x2c\x2d\
\x30\x2e\x34\x32\x35\x35\x37\x20\x36\x31\x2e\x31\x37\x32\x30\x33\
\x2c\x2d\x39\x2e\x31\x32\x36\x36\x32\x20\x38\x36\x2e\x37\x31\x38\
\x37\x35\x2c\x2d\x32\x34\x20\x61\x20\x33\x35\x2e\x35\x34\x36\x31\
\x39\x39\x2c\x33\x35\x2e\x35\x34\x36\x31\x39\x39\x20\x30\x20\x30\
\x20\x30\x20\x35\x2e\x39\x30\x36\x32\x35\x2c\x2d\x33\x2e\x34\x30\
\x36\x32\x35\x20\x6c\x20\x31\x2e\x35\x2c\x2d\x31\x2e\x30\x39\x33\
\x37\x35\x20\x4c\x20\x33\x39\x39\x2e\x39\x33\x37\x35\x2c\x33\x33\
\x33\x20\x63\x20\x34\x2e\x34\x31\x38\x32\x39\x2c\x2d\x32\x2e\x38\
\x37\x39\x36\x20\x38\x2e\x36\x36\x35\x37\x32\x2c\x2d\x35\x2e\x39\
\x31\x36\x36\x36\x20\x31\x32\x2e\x37\x35\x2c\x2d\x39\x2e\x31\x32\
\x35\x20\x6c\x20\x31\x2e\x37\x35\x2c\x2d\x31\x2e\x32\x35\x20\x61\
\x20\x33\x35\x2e\x35\x34\x36\x31\x39\x39\x2c\x33\x35\x2e\x35\x34\
\x36\x31\x39\x39\x20\x30\x20\x30\x20\x30\x20\x35\x2e\x30\x36\x32\
\x35\x2c\x2d\x34\x2e\x34\x30\x36\x32\x35\x20\x33\x35\x2e\x35\x34\
\x36\x31\x39\x39\x2c\x33\x35\x2e\x35\x34\x36\x31\x39\x39\x20\x30\
\x20\x30\x20\x30\x20\x30\x2e\x32\x38\x31\x32\x35\x2c\x2d\x30\x2e\
\x32\x38\x31\x32\x35\x20\x63\x20\x33\x37\x2e\x32\x33\x30\x34\x31\
\x2c\x2d\x33\x32\x2e\x34\x39\x31\x39\x33\x20\x36\x30\x2e\x38\x37\
\x35\x2c\x2d\x38\x30\x2e\x34\x39\x33\x32\x35\x20\x36\x30\x2e\x38\
\x37\x35\x2c\x2d\x31\x33\x33\x2e\x36\x32\x35\x20\x43\x20\x34\x38\
\x30\x2e\x36\x35\x36\x32\x35\x2c\x38\x36\x2e\x37\x35\x32\x37\x37\
\x33\x20\x34\x30\x30\x2e\x38\x30\x39\x37\x33\x2c\x36\x2e\x39\x30\
\x36\x32\x35\x20\x33\x30\x33\x2e\x32\x35\x2c\x36\x2e\x39\x30\x36\
\x32\x35\x20\x7a\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\
\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\
\x78\x28\x31\x32\x2e\x37\x30\x34\x32\x30\x31\x2c\x30\x2c\x30\x2c\
\x31\x32\x2e\x37\x30\x34\x32\x30\x31\x2c\x31\x37\x32\x2e\x38\x32\
\x33\x34\x33\x2c\x2d\x36\x30\x32\x33\x2e\x32\x33\x37\x31\x29\x22\
\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x3c\x70\x61\x74\x68\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\
\x66\x6f\x72\x6d\x3d\x22\x6d\x61\x74\x72\x69\x78\x28\x31\x32\x2e\
\x37\x30\x34\x32\x30\x31\x2c\x30\x2c\x30\x2c\x31\x32\x2e\x37\x30\
\x34\x32\x30\x31\x2c\x31\x37\x32\x2e\x38\x32\x33\x34\x33\x2c\x2d\
\x36\x30\x32\x33\x2e\x32\x33\x37\x31\x29\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\x20\x33\x30\x33\x2e\x32\
\x35\x2c\x32\x36\x2e\x33\x34\x33\x37\x35\x20\x63\x20\x2d\x35\x36\
\x2e\x31\x35\x33\x39\x37\x2c\x30\x20\x2d\x31\x30\x35\x2e\x35\x38\
\x32\x34\x38\x2c\x32\x39\x2e\x34\x37\x38\x36\x33\x32\x20\x2d\x31\
\x33\x33\x2e\x35\x36\x32\x35\x2c\x37\x33\x2e\x37\x38\x31\x32\x35\
\x20\x41\x20\x31\x36\x2e\x30\x39\x37\x31\x36\x2c\x31\x36\x2e\x30\
\x39\x37\x31\x36\x20\x30\x20\x30\x20\x30\x20\x31\x36\x37\x2c\x31\
\x30\x33\x2e\x39\x33\x37\x35\x20\x6c\x20\x2d\x31\x2e\x35\x36\x32\
\x35\x2c\x33\x2e\x31\x35\x36\x32\x35\x20\x63\x20\x2d\x31\x32\x2e\
\x38\x31\x36\x32\x37\x2c\x32\x32\x2e\x38\x33\x35\x35\x34\x20\x2d\
\x32\x30\x2e\x31\x32\x35\x2c\x34\x39\x2e\x32\x34\x33\x33\x32\x20\
\x2d\x32\x30\x2e\x31\x32\x35\x2c\x37\x37\x2e\x32\x31\x38\x37\x35\
\x20\x30\x2c\x31\x34\x2e\x30\x36\x33\x30\x35\x20\x31\x2e\x39\x34\
\x32\x38\x34\x2c\x32\x37\x2e\x36\x38\x39\x33\x32\x20\x35\x2e\x34\
\x30\x36\x32\x35\x2c\x34\x30\x2e\x36\x38\x37\x35\x20\x4c\x20\x33\
\x39\x2c\x33\x39\x34\x2e\x39\x33\x37\x35\x20\x61\x20\x31\x36\x2e\
\x30\x39\x37\x31\x36\x2c\x31\x36\x2e\x30\x39\x37\x31\x36\x20\x30\
\x20\x30\x20\x30\x20\x2d\x32\x2e\x35\x36\x32\x35\x2c\x31\x30\x2e\
\x36\x32\x35\x20\x63\x20\x30\x2e\x32\x30\x36\x35\x34\x35\x2c\x31\
\x2e\x38\x36\x31\x31\x32\x20\x30\x2e\x34\x34\x32\x32\x37\x32\x2c\
\x33\x2e\x36\x35\x32\x36\x20\x30\x2e\x36\x38\x37\x35\x2c\x35\x2e\
\x34\x30\x36\x32\x35\x20\x33\x2e\x36\x31\x32\x37\x32\x35\x2c\x32\
\x36\x2e\x31\x34\x34\x37\x35\x20\x31\x32\x2e\x31\x39\x30\x37\x36\
\x36\x2c\x34\x36\x2e\x33\x32\x34\x37\x32\x20\x32\x37\x2e\x37\x35\
\x2c\x35\x39\x2e\x32\x35\x20\x31\x35\x2e\x35\x35\x31\x37\x31\x36\
\x2c\x31\x32\x2e\x39\x31\x39\x30\x34\x20\x33\x35\x2e\x37\x37\x36\
\x32\x37\x2c\x31\x36\x2e\x37\x34\x38\x30\x36\x20\x35\x37\x2e\x38\
\x34\x33\x37\x35\x2c\x31\x36\x2e\x31\x38\x37\x35\x20\x30\x2e\x30\
\x31\x30\x32\x2c\x2d\x32\x2e\x35\x65\x2d\x34\x20\x30\x2e\x30\x32\
\x31\x31\x2c\x32\x2e\x35\x65\x2d\x34\x20\x30\x2e\x30\x33\x31\x32\
\x2c\x30\x20\x31\x2e\x35\x30\x31\x34\x35\x2c\x2d\x30\x2e\x30\x33\
\x36\x35\x20\x33\x2e\x30\x35\x30\x34\x37\x2c\x2d\x30\x2e\x31\x30\
\x39\x36\x20\x34\x2e\x35\x39\x33\x37\x35\x2c\x2d\x30\x2e\x31\x38\
\x37\x35\x20\x31\x2e\x36\x32\x36\x38\x2c\x2d\x30\x2e\x30\x38\x32\
\x36\x20\x33\x2e\x32\x31\x32\x38\x32\x2c\x2d\x30\x2e\x31\x37\x30\
\x34\x38\x20\x34\x2e\x37\x31\x38\x37\x35\x2c\x2d\x30\x2e\x32\x38\
\x31\x32\x35\x20\x61\x20\x31\x36\x2e\x30\x39\x37\x31\x36\x2c\x31\
\x36\x2e\x30\x39\x37\x31\x36\x20\x30\x20\x30\x20\x30\x20\x39\x2e\
\x35\x33\x31\x32\x35\x2c\x2d\x34\x2e\x30\x36\x32\x35\x20\x4c\x20\
\x32\x39\x38\x2c\x33\x34\x32\x2e\x33\x34\x33\x37\x35\x20\x61\x20\
\x31\x36\x2e\x30\x39\x37\x31\x36\x2c\x31\x36\x2e\x30\x39\x37\x31\
\x36\x20\x30\x20\x30\x20\x30\x20\x31\x2e\x39\x36\x38\x37\x35\x2c\
\x2d\x30\x2e\x31\x35\x36\x32\x35\x20\x63\x20\x31\x2e\x30\x39\x34\
\x32\x33\x2c\x30\x2e\x30\x32\x33\x32\x20\x32\x2e\x31\x37\x32\x32\
\x38\x2c\x30\x2e\x30\x36\x32\x35\x20\x33\x2e\x32\x38\x31\x32\x35\
\x2c\x30\x2e\x30\x36\x32\x35\x20\x32\x39\x2e\x33\x34\x31\x36\x39\
\x2c\x30\x20\x35\x36\x2e\x38\x39\x33\x37\x2c\x2d\x38\x2e\x31\x30\
\x32\x34\x33\x20\x38\x30\x2e\x34\x36\x38\x37\x35\x2c\x2d\x32\x32\
\x2e\x30\x39\x33\x37\x35\x20\x61\x20\x31\x36\x2e\x30\x39\x37\x31\
\x36\x2c\x31\x36\x2e\x30\x39\x37\x31\x36\x20\x30\x20\x30\x20\x30\
\x20\x33\x2e\x32\x31\x38\x37\x35\x2c\x2d\x31\x2e\x37\x35\x20\x6c\
\x20\x31\x2e\x36\x35\x36\x32\x35\x2c\x2d\x31\x2e\x31\x38\x37\x35\
\x20\x2d\x30\x2e\x30\x33\x31\x32\x2c\x2d\x30\x2e\x30\x33\x31\x32\
\x20\x63\x20\x34\x2e\x34\x33\x36\x30\x37\x2c\x2d\x32\x2e\x38\x35\
\x34\x37\x39\x20\x38\x2e\x37\x32\x33\x39\x2c\x2d\x35\x2e\x39\x30\
\x39\x31\x31\x20\x31\x32\x2e\x38\x31\x32\x35\x2c\x2d\x39\x2e\x31\
\x35\x36\x32\x35\x20\x6c\x20\x30\x2e\x37\x35\x2c\x2d\x30\x2e\x35\
\x33\x31\x32\x35\x20\x31\x2c\x2d\x30\x2e\x37\x31\x38\x37\x35\x20\
\x61\x20\x31\x36\x2e\x30\x39\x37\x31\x36\x2c\x31\x36\x2e\x30\x39\
\x37\x31\x36\x20\x30\x20\x30\x20\x30\x20\x33\x2e\x30\x39\x33\x37\
\x35\x2c\x2d\x32\x2e\x39\x30\x36\x32\x35\x20\x63\x20\x33\x33\x2e\
\x35\x39\x32\x39\x36\x2c\x2d\x32\x38\x2e\x39\x35\x30\x33\x38\x20\
\x35\x35\x2c\x2d\x37\x31\x2e\x38\x30\x39\x36\x33\x20\x35\x35\x2c\
\x2d\x31\x31\x39\x2e\x35\x36\x32\x35\x20\x30\x2c\x2d\x38\x37\x2e\
\x30\x34\x36\x38\x36\x32\x20\x2d\x37\x30\x2e\x39\x32\x31\x38\x39\
\x2c\x2d\x31\x35\x37\x2e\x39\x36\x38\x37\x35\x20\x2d\x31\x35\x37\
\x2e\x39\x36\x38\x37\x35\x2c\x2d\x31\x35\x37\x2e\x39\x36\x38\x37\
\x35\x20\x7a\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\
\x64\x3d\x22\x70\x61\x74\x68\x33\x36\x35\x31\x22\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\
\x6c\x6c\x3a\x23\x64\x33\x64\x37\x63\x66\x3b\x66\x69\x6c\x6c\x2d\
\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\
\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x6f\x72\x69\x67\x69\x6e\
\x61\x6c\x3d\x22\x4d\x20\x33\x30\x33\x2e\x32\x35\x20\x34\x32\x2e\
\x34\x33\x37\x35\x20\x43\x20\x32\x35\x31\x2e\x35\x32\x34\x37\x32\
\x20\x34\x32\x2e\x34\x33\x37\x35\x20\x32\x30\x36\x2e\x32\x38\x34\
\x38\x36\x20\x37\x30\x2e\x31\x34\x30\x35\x34\x33\x20\x31\x38\x31\
\x2e\x35\x20\x31\x31\x31\x2e\x35\x20\x43\x20\x31\x38\x31\x2e\x34\
\x38\x31\x37\x20\x31\x31\x31\x2e\x33\x36\x34\x31\x31\x20\x31\x38\
\x31\x2e\x34\x35\x35\x36\x20\x31\x31\x31\x2e\x32\x32\x39\x37\x20\
\x31\x38\x31\x2e\x34\x33\x37\x35\x20\x31\x31\x31\x2e\x30\x39\x33\
\x37\x35\x20\x4c\x20\x31\x37\x39\x2e\x38\x37\x35\x20\x31\x31\x34\
\x2e\x32\x35\x20\x43\x20\x31\x36\x38\x2e\x31\x31\x36\x33\x32\x20\
\x31\x33\x34\x2e\x39\x31\x36\x30\x32\x20\x31\x36\x31\x2e\x34\x30\
\x36\x32\x35\x20\x31\x35\x38\x2e\x38\x33\x35\x31\x35\x20\x31\x36\
\x31\x2e\x34\x30\x36\x32\x35\x20\x31\x38\x34\x2e\x33\x31\x32\x35\
\x20\x43\x20\x31\x36\x31\x2e\x34\x30\x36\x32\x35\x20\x31\x39\x39\
\x2e\x34\x35\x39\x36\x38\x20\x31\x36\x33\x2e\x37\x39\x31\x32\x32\
\x20\x32\x31\x34\x2e\x30\x33\x32\x33\x33\x20\x31\x36\x38\x2e\x31\
\x38\x37\x35\x20\x32\x32\x37\x2e\x37\x31\x38\x37\x35\x20\x4c\x20\
\x35\x32\x2e\x34\x33\x37\x35\x20\x34\x30\x33\x2e\x37\x38\x31\x32\
\x35\x20\x43\x20\x35\x32\x2e\x36\x32\x35\x35\x31\x33\x20\x34\x30\
\x35\x2e\x34\x37\x35\x33\x38\x20\x35\x32\x2e\x38\x33\x36\x31\x31\
\x36\x20\x34\x30\x37\x2e\x31\x33\x31\x31\x20\x35\x33\x2e\x30\x36\
\x32\x35\x20\x34\x30\x38\x2e\x37\x35\x20\x43\x20\x35\x39\x2e\x36\
\x36\x37\x31\x36\x34\x20\x34\x35\x36\x2e\x35\x34\x36\x39\x37\x20\
\x38\x32\x2e\x32\x39\x38\x31\x38\x35\x20\x34\x37\x31\x2e\x33\x33\
\x37\x33\x35\x20\x31\x32\x32\x2e\x33\x34\x33\x37\x35\x20\x34\x37\
\x30\x2e\x33\x31\x32\x35\x20\x43\x20\x31\x32\x33\x2e\x37\x31\x32\
\x38\x35\x20\x34\x37\x30\x2e\x32\x37\x39\x35\x20\x31\x32\x35\x2e\
\x31\x32\x31\x36\x32\x20\x34\x37\x30\x2e\x32\x32\x37\x34\x20\x31\
\x32\x36\x2e\x35\x33\x31\x32\x35\x20\x34\x37\x30\x2e\x31\x35\x36\
\x32\x35\x20\x43\x20\x31\x32\x37\x2e\x39\x35\x32\x36\x37\x20\x34\
\x37\x30\x2e\x30\x38\x34\x30\x35\x20\x31\x32\x39\x2e\x34\x31\x32\
\x30\x35\x20\x34\x36\x39\x2e\x39\x38\x32\x36\x31\x20\x31\x33\x30\
\x2e\x38\x37\x35\x20\x34\x36\x39\x2e\x38\x37\x35\x20\x4c\x20\x32\
\x39\x32\x2e\x34\x33\x37\x35\x20\x33\x32\x35\x2e\x37\x35\x20\x43\
\x20\x32\x39\x34\x2e\x30\x33\x32\x31\x20\x33\x32\x35\x2e\x38\x37\
\x30\x32\x39\x20\x32\x39\x35\x2e\x36\x34\x31\x31\x31\x20\x33\x32\
\x35\x2e\x39\x36\x34\x31\x32\x20\x32\x39\x37\x2e\x32\x35\x20\x33\
\x32\x36\x2e\x30\x33\x31\x32\x35\x20\x4c\x20\x32\x39\x37\x2e\x36\
\x35\x36\x32\x35\x20\x33\x32\x36\x2e\x33\x31\x32\x35\x20\x4c\x20\
\x32\x39\x37\x2e\x33\x31\x32\x35\x20\x33\x32\x36\x2e\x30\x33\x31\
\x32\x35\x20\x43\x20\x32\x39\x39\x2e\x32\x38\x36\x39\x33\x20\x33\
\x32\x36\x2e\x31\x31\x32\x37\x35\x20\x33\x30\x31\x2e\x32\x35\x35\
\x35\x34\x20\x33\x32\x36\x2e\x31\x35\x36\x32\x35\x20\x33\x30\x33\
\x2e\x32\x35\x20\x33\x32\x36\x2e\x31\x35\x36\x32\x35\x20\x43\x20\
\x33\x33\x30\x2e\x34\x30\x37\x34\x39\x20\x33\x32\x36\x2e\x31\x35\
\x36\x32\x35\x20\x33\x35\x35\x2e\x37\x37\x38\x35\x33\x20\x33\x31\
\x38\x2e\x35\x31\x36\x35\x32\x20\x33\x37\x37\x2e\x33\x34\x33\x37\
\x35\x20\x33\x30\x35\x2e\x32\x38\x31\x32\x35\x20\x43\x20\x33\x37\
\x37\x2e\x34\x31\x37\x33\x35\x20\x33\x30\x35\x2e\x32\x39\x30\x32\
\x35\x20\x33\x37\x37\x2e\x34\x38\x38\x39\x20\x33\x30\x35\x2e\x33\
\x30\x33\x32\x20\x33\x37\x37\x2e\x35\x36\x32\x35\x20\x33\x30\x35\
\x2e\x33\x31\x32\x35\x20\x4c\x20\x33\x37\x39\x2e\x32\x31\x38\x37\
\x35\x20\x33\x30\x34\x2e\x31\x32\x35\x20\x43\x20\x33\x38\x33\x2e\
\x36\x36\x33\x34\x37\x20\x33\x30\x31\x2e\x33\x30\x31\x33\x37\x20\
\x33\x38\x37\x2e\x39\x34\x30\x34\x31\x20\x32\x39\x38\x2e\x32\x32\
\x33\x38\x20\x33\x39\x32\x2e\x30\x33\x31\x32\x35\x20\x32\x39\x34\
\x2e\x39\x33\x37\x35\x20\x4c\x20\x33\x39\x33\x2e\x37\x38\x31\x32\
\x35\x20\x32\x39\x33\x2e\x36\x38\x37\x35\x20\x43\x20\x33\x39\x33\
\x2e\x37\x31\x38\x30\x35\x20\x32\x39\x33\x2e\x36\x38\x30\x35\x20\
\x33\x39\x33\x2e\x36\x35\x36\x39\x34\x20\x32\x39\x33\x2e\x36\x36\
\x32\x38\x35\x20\x33\x39\x33\x2e\x35\x39\x33\x37\x35\x20\x32\x39\
\x33\x2e\x36\x35\x36\x32\x35\x20\x43\x20\x34\x32\x35\x2e\x30\x36\
\x32\x34\x31\x20\x32\x36\x37\x2e\x36\x33\x36\x37\x36\x20\x34\x34\
\x35\x2e\x31\x32\x35\x20\x32\x32\x38\x2e\x33\x33\x34\x33\x35\x20\
\x34\x34\x35\x2e\x31\x32\x35\x20\x31\x38\x34\x2e\x33\x31\x32\x35\
\x20\x43\x20\x34\x34\x35\x2e\x31\x32\x35\x20\x31\x30\x35\x2e\x39\
\x36\x36\x37\x20\x33\x38\x31\x2e\x35\x39\x35\x38\x20\x34\x32\x2e\
\x34\x33\x37\x35\x20\x33\x30\x33\x2e\x32\x35\x20\x34\x32\x2e\x34\
\x33\x37\x35\x20\x7a\x20\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\x72\x61\x64\x69\x75\
\x73\x3d\x22\x31\x36\x2e\x30\x39\x35\x35\x35\x31\x22\x0d\x0a\x20\
\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\
\x3a\x74\x79\x70\x65\x3d\x22\x69\x6e\x6b\x73\x63\x61\x70\x65\x3a\
\x6f\x66\x66\x73\x65\x74\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\x23\x33\
\x34\x36\x35\x61\x34\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\
\x74\x79\x3a\x31\x3b\x73\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x4d\
\x20\x32\x33\x34\x36\x2e\x33\x33\x39\x2c\x2d\x33\x31\x38\x36\x2e\
\x37\x35\x30\x31\x20\x38\x33\x39\x2e\x30\x38\x33\x38\x35\x2c\x2d\
\x38\x39\x33\x2e\x33\x34\x35\x34\x35\x20\x63\x20\x37\x36\x2e\x34\
\x33\x33\x38\x32\x2c\x36\x38\x38\x2e\x37\x32\x32\x38\x34\x20\x34\
\x30\x32\x2e\x31\x35\x31\x33\x35\x2c\x38\x38\x34\x2e\x31\x34\x38\
\x38\x33\x35\x32\x20\x39\x39\x36\x2e\x33\x37\x31\x33\x35\x2c\x38\
\x33\x39\x2e\x36\x34\x39\x33\x38\x32\x20\x6c\x20\x32\x30\x37\x37\
\x2e\x38\x35\x38\x33\x2c\x2d\x31\x38\x35\x33\x2e\x38\x31\x33\x38\
\x33\x32\x20\x34\x30\x2e\x38\x31\x37\x37\x2c\x32\x39\x2e\x38\x34\
\x32\x39\x20\x2d\x31\x36\x30\x37\x2e\x37\x39\x32\x32\x2c\x2d\x31\
\x33\x30\x39\x2e\x30\x38\x33\x31\x20\x7a\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\x68\x32\x38\
\x35\x37\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\
\x64\x69\x70\x6f\x64\x69\x3a\x6e\x6f\x64\x65\x74\x79\x70\x65\x73\
\x3d\x22\x63\x63\x63\x63\x63\x63\x22\x20\x2f\x3e\x0d\x0a\x20\x20\
\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x6e\x6f\x64\
\x65\x74\x79\x70\x65\x73\x3d\x22\x63\x63\x63\x63\x63\x63\x22\x0d\
\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\
\x74\x68\x33\x38\x31\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x64\x3d\x22\x4d\x20\x32\x33\x34\x36\x2e\x33\x33\x39\x2c\
\x2d\x33\x31\x38\x36\x2e\x37\x35\x30\x31\x20\x38\x33\x39\x2e\x30\
\x38\x33\x38\x35\x2c\x2d\x38\x39\x33\x2e\x33\x34\x35\x34\x35\x20\
\x63\x20\x37\x37\x2e\x33\x35\x35\x35\x37\x2c\x37\x30\x31\x2e\x31\
\x38\x35\x38\x20\x34\x30\x31\x2e\x36\x33\x32\x35\x35\x2c\x38\x38\
\x33\x2e\x33\x39\x36\x34\x32\x39\x36\x20\x39\x39\x36\x2e\x33\x37\
\x31\x33\x35\x2c\x38\x33\x39\x2e\x36\x34\x39\x33\x38\x32\x20\x6c\
\x20\x32\x30\x37\x37\x2e\x38\x35\x38\x33\x2c\x2d\x31\x38\x35\x33\
\x2e\x38\x31\x33\x38\x33\x32\x20\x34\x30\x2e\x38\x31\x37\x37\x2c\
\x32\x39\x2e\x38\x34\x32\x39\x20\x2d\x31\x36\x30\x37\x2e\x37\x39\
\x32\x32\x2c\x2d\x31\x33\x30\x39\x2e\x30\x38\x33\x31\x20\x7a\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x74\x79\x6c\x65\
\x3d\x22\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x72\x61\x64\x69\
\x61\x6c\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x32\x32\x29\x3b\
\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\
\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x22\x20\x2f\x3e\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\x69\x3a\x74\
\x79\x70\x65\x3d\x22\x61\x72\x63\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x69\x6c\x6c\x3a\
\x75\x72\x6c\x28\x23\x72\x61\x64\x69\x61\x6c\x47\x72\x61\x64\x69\
\x65\x6e\x74\x33\x38\x35\x36\x29\x3b\x66\x69\x6c\x6c\x2d\x6f\x70\
\x61\x63\x69\x74\x79\x3a\x31\x3b\x66\x69\x6c\x6c\x2d\x72\x75\x6c\
\x65\x3a\x65\x76\x65\x6e\x6f\x64\x64\x3b\x73\x74\x72\x6f\x6b\x65\
\x3a\x6e\x6f\x6e\x65\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x69\x64\x3d\x22\x70\x61\x74\x68\x32\x38\x35\x39\x22\x0d\x0a\
\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\x6f\x64\
\x69\x3a\x63\x78\x3d\x22\x31\x30\x2e\x30\x38\x39\x31\x34\x36\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\x70\
\x6f\x64\x69\x3a\x63\x79\x3d\x22\x34\x2e\x38\x34\x34\x33\x34\x38\
\x34\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\
\x69\x70\x6f\x64\x69\x3a\x72\x78\x3d\x22\x33\x2e\x32\x36\x33\x35\
\x30\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\
\x6f\x64\x69\x70\x6f\x64\x69\x3a\x72\x79\x3d\x22\x33\x2e\x32\x36\
\x33\x35\x30\x38\x31\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\
\x20\x64\x3d\x22\x6d\x20\x31\x33\x2e\x33\x35\x32\x36\x35\x34\x2c\
\x34\x2e\x38\x34\x34\x33\x34\x38\x34\x20\x61\x20\x33\x2e\x32\x36\
\x33\x35\x30\x38\x31\x2c\x33\x2e\x32\x36\x33\x35\x30\x38\x31\x20\
\x30\x20\x31\x20\x31\x20\x2d\x36\x2e\x35\x32\x37\x30\x31\x36\x34\
\x2c\x30\x20\x33\x2e\x32\x36\x33\x35\x30\x38\x31\x2c\x33\x2e\x32\
\x36\x33\x35\x30\x38\x31\x20\x30\x20\x31\x20\x31\x20\x36\x2e\x35\
\x32\x37\x30\x31\x36\x34\x2c\x30\x20\x7a\x22\x0d\x0a\x20\x20\x20\
\x20\x20\x20\x20\x20\x20\x74\x72\x61\x6e\x73\x66\x6f\x72\x6d\x3d\
\x22\x6d\x61\x74\x72\x69\x78\x28\x35\x35\x32\x2e\x32\x32\x34\x30\
\x37\x2c\x30\x2c\x30\x2c\x35\x35\x32\x2e\x32\x32\x34\x30\x37\x2c\
\x2d\x31\x35\x34\x35\x2e\x39\x31\x37\x36\x2c\x2d\x36\x33\x35\x37\
\x2e\x30\x32\x39\x38\x29\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\x20\
\x20\x20\x3c\x70\x61\x74\x68\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\
\x20\x20\x73\x74\x79\x6c\x65\x3d\x22\x66\x6f\x6e\x74\x2d\x73\x69\
\x7a\x65\x3a\x6d\x65\x64\x69\x75\x6d\x3b\x66\x6f\x6e\x74\x2d\x73\
\x74\x79\x6c\x65\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x66\x6f\x6e\x74\
\x2d\x76\x61\x72\x69\x61\x6e\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\
\x66\x6f\x6e\x74\x2d\x77\x65\x69\x67\x68\x74\x3a\x6e\x6f\x72\x6d\
\x61\x6c\x3b\x66\x6f\x6e\x74\x2d\x73\x74\x72\x65\x74\x63\x68\x3a\
\x6e\x6f\x72\x6d\x61\x6c\x3b\x74\x65\x78\x74\x2d\x69\x6e\x64\x65\
\x6e\x74\x3a\x30\x3b\x74\x65\x78\x74\x2d\x61\x6c\x69\x67\x6e\x3a\
\x73\x74\x61\x72\x74\x3b\x74\x65\x78\x74\x2d\x64\x65\x63\x6f\x72\
\x61\x74\x69\x6f\x6e\x3a\x6e\x6f\x6e\x65\x3b\x6c\x69\x6e\x65\x2d\
\x68\x65\x69\x67\x68\x74\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x6c\x65\
\x74\x74\x65\x72\x2d\x73\x70\x61\x63\x69\x6e\x67\x3a\x6e\x6f\x72\
\x6d\x61\x6c\x3b\x77\x6f\x72\x64\x2d\x73\x70\x61\x63\x69\x6e\x67\
\x3a\x6e\x6f\x72\x6d\x61\x6c\x3b\x74\x65\x78\x74\x2d\x74\x72\x61\
\x6e\x73\x66\x6f\x72\x6d\x3a\x6e\x6f\x6e\x65\x3b\x64\x69\x72\x65\
\x63\x74\x69\x6f\x6e\x3a\x6c\x74\x72\x3b\x62\x6c\x6f\x63\x6b\x2d\
\x70\x72\x6f\x67\x72\x65\x73\x73\x69\x6f\x6e\x3a\x74\x62\x3b\x77\
\x72\x69\x74\x69\x6e\x67\x2d\x6d\x6f\x64\x65\x3a\x6c\x72\x2d\x74\
\x62\x3b\x74\x65\x78\x74\x2d\x61\x6e\x63\x68\x6f\x72\x3a\x73\x74\
\x61\x72\x74\x3b\x63\x6f\x6c\x6f\x72\x3a\x23\x30\x30\x30\x30\x30\
\x30\x3b\x66\x69\x6c\x6c\x3a\x75\x72\x6c\x28\x23\x6c\x69\x6e\x65\
\x61\x72\x47\x72\x61\x64\x69\x65\x6e\x74\x33\x38\x37\x34\x29\x3b\
\x66\x69\x6c\x6c\x2d\x6f\x70\x61\x63\x69\x74\x79\x3a\x31\x3b\x73\
\x74\x72\x6f\x6b\x65\x3a\x6e\x6f\x6e\x65\x3b\x73\x74\x72\x6f\x6b\
\x65\x2d\x77\x69\x64\x74\x68\x3a\x35\x2e\x31\x37\x36\x33\x32\x36\
\x37\x35\x3b\x6d\x61\x72\x6b\x65\x72\x3a\x6e\x6f\x6e\x65\x3b\x76\
\x69\x73\x69\x62\x69\x6c\x69\x74\x79\x3a\x76\x69\x73\x69\x62\x6c\
\x65\x3b\x64\x69\x73\x70\x6c\x61\x79\x3a\x69\x6e\x6c\x69\x6e\x65\
\x3b\x6f\x76\x65\x72\x66\x6c\x6f\x77\x3a\x76\x69\x73\x69\x62\x6c\
\x65\x3b\x65\x6e\x61\x62\x6c\x65\x2d\x62\x61\x63\x6b\x67\x72\x6f\
\x75\x6e\x64\x3a\x61\x63\x63\x75\x6d\x75\x6c\x61\x74\x65\x3b\x66\
\x6f\x6e\x74\x2d\x66\x61\x6d\x69\x6c\x79\x3a\x42\x69\x74\x73\x74\
\x72\x65\x61\x6d\x20\x56\x65\x72\x61\x20\x53\x61\x6e\x73\x3b\x2d\
\x69\x6e\x6b\x73\x63\x61\x70\x65\x2d\x66\x6f\x6e\x74\x2d\x73\x70\
\x65\x63\x69\x66\x69\x63\x61\x74\x69\x6f\x6e\x3a\x42\x69\x74\x73\
\x74\x72\x65\x61\x6d\x20\x56\x65\x72\x61\x20\x53\x61\x6e\x73\x22\
\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x3d\x22\x6d\x20\
\x32\x34\x37\x37\x2e\x39\x32\x37\x36\x2c\x2d\x34\x36\x31\x31\x2e\
\x39\x39\x38\x20\x2d\x38\x38\x2e\x32\x34\x38\x37\x2c\x31\x37\x38\
\x2e\x33\x34\x35\x39\x20\x63\x20\x38\x38\x2e\x39\x36\x34\x37\x2c\
\x36\x36\x37\x2e\x30\x35\x36\x32\x20\x33\x30\x38\x2e\x31\x31\x30\
\x31\x2c\x31\x31\x33\x36\x2e\x36\x32\x34\x20\x37\x36\x33\x2e\x32\
\x34\x30\x34\x2c\x31\x35\x34\x36\x2e\x34\x32\x31\x33\x20\x34\x33\
\x32\x2e\x35\x35\x37\x32\x2c\x33\x38\x39\x2e\x34\x37\x32\x33\x20\
\x31\x30\x33\x34\x2e\x38\x38\x33\x31\x2c\x36\x34\x33\x2e\x32\x30\
\x35\x33\x20\x31\x38\x31\x36\x2e\x34\x36\x32\x36\x2c\x37\x34\x32\
\x2e\x37\x38\x35\x33\x20\x6c\x20\x32\x30\x36\x2e\x31\x35\x30\x32\
\x2c\x2d\x31\x34\x37\x2e\x36\x33\x33\x39\x20\x63\x20\x2d\x38\x31\
\x37\x2e\x33\x33\x35\x33\x2c\x2d\x38\x35\x2e\x32\x31\x35\x36\x20\
\x2d\x31\x34\x38\x38\x2e\x33\x31\x32\x34\x2c\x2d\x33\x33\x37\x2e\
\x30\x34\x37\x32\x20\x2d\x31\x39\x31\x31\x2e\x35\x39\x36\x31\x2c\
\x2d\x37\x31\x38\x2e\x31\x36\x39\x38\x20\x2d\x34\x32\x33\x2e\x32\
\x38\x33\x37\x2c\x2d\x33\x38\x31\x2e\x31\x32\x32\x36\x20\x2d\x37\
\x30\x31\x2e\x30\x34\x36\x32\x2c\x2d\x39\x36\x34\x2e\x37\x30\x32\
\x33\x20\x2d\x37\x38\x36\x2e\x30\x30\x38\x34\x2c\x2d\x31\x36\x30\
\x31\x2e\x37\x34\x38\x38\x20\x7a\x22\x0d\x0a\x20\x20\x20\x20\x20\
\x20\x20\x20\x20\x69\x64\x3d\x22\x70\x61\x74\x68\x33\x36\x33\x35\
\x22\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6f\x64\x69\
\x70\x6f\x64\x69\x3a\x6e\x6f\x64\x65\x74\x79\x70\x65\x73\x3d\x22\
\x63\x63\x73\x63\x63\x73\x63\x22\x20\x2f\x3e\x0d\x0a\x20\x20\x20\
\x20\x3c\x2f\x67\x3e\x0d\x0a\x20\x20\x3c\x2f\x67\x3e\x0d\x0a\x3c\
\x2f\x73\x76\x67\x3e\x0d\x0a\
"

qt_resource_name = "\
\x00\x0a\
\x0d\xcc\x4c\x63\
\x00\x69\
\x00\x6d\x00\x61\x00\x67\x00\x65\x00\x73\x00\x2d\x00\x73\x00\x72\x00\x63\
\x00\x06\
\x07\x03\x7d\xc3\
\x00\x69\
\x00\x6d\x00\x61\x00\x67\x00\x65\x00\x73\
\x00\x0a\
\x08\x94\x19\x07\
\x00\x73\
\x00\x70\x00\x6c\x00\x61\x00\x73\x00\x68\x00\x2e\x00\x70\x00\x6e\x00\x67\
\x00\x0e\
\x0d\xac\x34\x67\
\x00\x64\
\x00\x6f\x00\x63\x00\x6b\x00\x2d\x00\x63\x00\x6c\x00\x6f\x00\x73\x00\x65\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x07\
\x03\x5a\x5a\x27\
\x00\x6c\
\x00\x6f\x00\x67\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x09\
\x06\x36\xac\x07\
\x00\x74\
\x00\x6f\x00\x6f\x00\x6c\x00\x73\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x0e\
\x0a\xb4\x51\x27\
\x00\x73\
\x00\x74\x00\x61\x00\x74\x00\x69\x00\x73\x00\x74\x00\x69\x00\x63\x00\x73\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x0c\
\x06\xf5\x2f\xa7\
\x00\x73\
\x00\x70\x00\x65\x00\x63\x00\x74\x00\x72\x00\x75\x00\x6d\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x09\
\x06\x68\xa9\x87\
\x00\x73\
\x00\x63\x00\x6f\x00\x70\x00\x65\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x09\
\x06\xc7\x95\xe7\
\x00\x61\
\x00\x62\x00\x6f\x00\x75\x00\x74\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x08\
\x0b\x63\x55\x87\
\x00\x73\
\x00\x74\x00\x6f\x00\x70\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x0c\
\x0b\x07\x1d\xa7\
\x00\x6e\
\x00\x65\x00\x77\x00\x2d\x00\x64\x00\x6f\x00\x63\x00\x6b\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x0f\
\x06\x57\x7e\xc7\
\x00\x64\
\x00\x6f\x00\x63\x00\x6b\x00\x2d\x00\x75\x00\x6e\x00\x64\x00\x6f\x00\x63\x00\x6b\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x0a\
\x0c\x3c\x03\x47\
\x00\x6c\
\x00\x65\x00\x76\x00\x65\x00\x6c\x00\x73\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x09\
\x08\x97\xaf\x87\
\x00\x73\
\x00\x74\x00\x61\x00\x72\x00\x74\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x0d\
\x03\x31\x9c\x07\
\x00\x64\
\x00\x6f\x00\x63\x00\x6b\x00\x2d\x00\x64\x00\x6f\x00\x63\x00\x6b\x00\x2e\x00\x73\x00\x76\x00\x67\
\x00\x11\
\x0c\x72\x48\x47\
\x00\x64\
\x00\x6f\x00\x63\x00\x6b\x00\x2d\x00\x73\x00\x65\x00\x74\x00\x74\x00\x69\x00\x6e\x00\x67\x00\x73\x00\x2e\x00\x73\x00\x76\x00\x67\
\
\x00\x0f\
\x03\x4c\x65\x27\
\x00\x77\
\x00\x69\x00\x6e\x00\x64\x00\x6f\x00\x77\x00\x2d\x00\x69\x00\x63\x00\x6f\x00\x6e\x00\x2e\x00\x73\x00\x76\x00\x67\
"

qt_resource_struct = "\
\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x01\
\x00\x00\x00\x1a\x00\x02\x00\x00\x00\x01\x00\x00\x00\x12\
\x00\x00\x00\x00\x00\x02\x00\x00\x00\x0f\x00\x00\x00\x03\
\x00\x00\x01\x8e\x00\x00\x00\x00\x00\x01\x00\x03\xbd\x0d\
\x00\x00\x01\xd6\x00\x00\x00\x00\x00\x01\x00\x03\xe5\x96\
\x00\x00\x00\x68\x00\x00\x00\x00\x00\x01\x00\x02\x4a\xc6\
\x00\x00\x00\x7c\x00\x00\x00\x00\x00\x01\x00\x02\x5c\x55\
\x00\x00\x01\x38\x00\x00\x00\x00\x00\x01\x00\x03\x70\x5a\
\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x01\x00\x02\xd1\x0f\
\x00\x00\x00\xec\x00\x00\x00\x00\x00\x01\x00\x02\xdb\x7c\
\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x01\x00\x02\xad\x5f\
\x00\x00\x01\x76\x00\x00\x00\x00\x00\x01\x00\x03\x8f\xfc\
\x00\x00\x00\x94\x00\x00\x00\x00\x00\x01\x00\x02\x7e\x82\
\x00\x00\x01\x1a\x00\x00\x00\x00\x00\x01\x00\x03\x4b\xab\
\x00\x00\x01\x04\x00\x00\x00\x00\x00\x01\x00\x02\xf5\x4a\
\x00\x00\x01\x5c\x00\x00\x00\x00\x00\x01\x00\x03\x7c\x70\
\x00\x00\x01\xae\x00\x00\x00\x00\x00\x01\x00\x03\xc9\x1f\
\x00\x00\x00\x46\x00\x00\x00\x00\x00\x01\x00\x02\x3f\xcc\
\x00\x00\x00\x2c\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\
"

def qInitResources():
    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

def qCleanupResources():
    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

qInitResources()

########NEW FILE########
__FILENAME__ = generated_filters
# Filters parameters generated from filter_design.py
from numpy import array
params = {'24': [[array([ 0.003709844668755797603144, -0.00110149026482388710281 ,
        0.004974974185499438789071, -0.001101490264823887753332,
        0.003709844668755797603144]), array([ 0.003744276019477226630228, -0.000568489973438458893323,
        0.004822622363645970473833, -0.000568489973438459327004,
        0.003744276019477226630228]), array([  3.780786760163349757152274e-03,  -1.975579840443601566178471e-05,
         4.711881905678829904338123e-03,  -1.975579840443643579012654e-05,
         3.780786760163349757152274e-03]), array([ 0.003819498300633505667029,  0.000544036844248669691944,
        0.004646792750729076409977,  0.000544036844248670017204,
        0.003819498300633505667029]), array([ 0.003860538925204148701098,  0.001122026314851065718209,
        0.004631236897388351508864,  0.001122026314851065067688,
        0.003860538925204148701098]), array([ 0.003904044167049895361354,  0.001713143912983498351812,
        0.00466882638688211580591 ,  0.001713143912983498351812,
        0.003904044167049895361354]), array([ 0.003950157201734608332366,  0.002316091866375187893756,
        0.004762772833885399285936,  0.002316091866375187460075,
        0.003950157201734608332366]), array([ 0.003999029260787492594253,  0.002929320265508835417767,
        0.004915737899204597818881,  0.002929320265508835417767,
        0.003999029260787492594253]), array([ 0.004050820066229779588263,  0.003551003116045747722701,
        0.005129664680647554736437,  0.003551003116045747722701,
        0.004050820066229779588263]), array([ 0.004105698286987898362743,  0.004179013743824127810611,
        0.005405590781255812694861,  0.004179013743824127810611,
        0.004105698286987898362743]), array([ 0.004163842018158834742958,  0.004810899861293467527634,
        0.005743444830006582020598,  0.004810899861293467527634,
        0.004163842018158834742958]), array([ 0.004225439284124323131853,  0.005443858691077341389886,
        0.006141829509722506949543,  0.005443858691077340522524,
        0.004225439284124323131853]), array([ 0.004290688566539665842192,  0.006074712643113588765587,
        0.006597795716078641743707,  0.006074712643113589632948,
        0.004290688566539665842192]), array([ 0.004359799358252857207074,  0.006699886157605846291607,
        0.007106614347059716715882,  0.006699886157605846291607,
        0.004359799358252857207074]), array([ 0.004432992744238064587725,  0.007315384457733252639156,
        0.007661554406226104944888,  0.007315384457733251771794,
        0.004432992744238064587725]), array([ 0.004510502010656038118785,  0.007916775104293904269381,
        0.008253678576296658367384,  0.007916775104293904269381,
        0.004510502010656038118785]), array([ 0.004592573283179652438024,  0.008499173409327390182888,
        0.008871670132195429853139,  0.008499173409327390182888,
        0.004592573283179652438024]), array([ 0.004679466195750023142785,  0.009057232946749737764747,
        0.009501707924663762086515,  0.009057232946749737764747,
        0.004679466195750023142785]), array([ 0.004771454590950989158027,  0.009585142593745779593384,
        0.010127409034568051957037,  0.009585142593745781328107,
        0.004771454590950989158027]), array([ 0.004868827253212922034908,  0.010076631744552122169067,
        0.010729861367324882576169,  0.010076631744552123903791,
        0.004868827253212922034908]), array([ 0.004971888676076133273263,  0.010524985554303716364655,
        0.011287770642718164201823,  0.010524985554303718099378,
        0.004971888676076133273263]), array([ 0.005080959864762276019523,  0.010923072288918613675923,
        0.011777747566357417430272,  0.010923072288918613675923,
        0.005080959864762276019523]), array([ 0.0051963791753155139444  ,  0.011263385069363770693562,
        0.012174760978921124465746,  0.011263385069363770693562,
        0.0051963791753155139444  ]), array([ 0.005318503191588212775098,  0.011538100494075732502242,
        0.012452780906908917854525,  0.011538100494075732502242,
        0.005318503191588212775098])], [array([ 1.                        , -0.352794059496801537534338,
        1.969387527260339609824769, -0.342214824516880011806563,
        0.940951736714137454420381]), array([ 1.                        , -0.182160509795089048390437,
        1.944723716560285531329555, -0.176540419872775466991754,
        0.939275922699878140775809]), array([ 1.                        , -0.00633318744445201045612 ,
        1.934545646619322711856626, -0.006132156862573138501882,
        0.93755419440088660909538 ]), array([ 1.                        ,  0.174484988043222877251992,
        1.940205626486934953334185,  0.168786715809781856512117,
        0.935785391973493085870928]), array([ 1.                        ,  0.360031603086572338234816,
        1.963010498175575602175513,  0.347934941713806455965141,
        0.933968332238554688196075]), array([ 1.                        ,  0.549977913029654819077052,
        2.004186533248753399050202,  0.530966946077075840904058,
        0.932101808595996006445716]), array([ 1.                        ,  0.743921594231402805164066,
        2.064838520019810275130112,  0.717466195319285682252541,
        0.930184590969223901169016]), array([ 1.                        ,  0.941379119322419355420095,
        2.145902850797161143248104,  0.906938268190277785407716,
        0.928215425781932501614335]), array([ 1.                        ,  1.141777806339264511592546,
        2.248094602274733233571169,  1.098803696400258100851488,
        0.926193035969948397223561]), array([ 1.                        ,  1.344447612451296514279875,
        2.371848849163839201281689,  1.292390652149637997325726,
        0.924116121030916892742368]), array([ 1.                        ,  1.548612766798669104773012,
        2.51725677169392980658813 ,  1.486927582923572188633443,
        0.92198335711480194909484 ]), array([ 1.                        ,  1.753383365002900262652474,
        2.68399752133416225063911 ,  1.681535920660306437923737,
        0.919793397158310765959754]), array([ 1.                        ,  1.957747080628188696138636,
        2.871267304150812549323746,  1.87522302326030287922265 ,
        0.917544871066549583282779]), array([ 1.                        ,  2.160561186671763778122113,
        3.077707732916177274518077,  2.066875541659972004282508,
        0.915236385945371044847718]), array([ 1.                        ,  2.360545123398933409220035,
        3.301336188124875281602044,  2.25525344556356044378731 ,
        0.912866526388071419795267]), array([ 1.                        ,  2.556273897777094461503111,
        3.539481708334622389600099,  2.438984985516196690724655,
        0.910433854820268506635728]), array([ 1.                        ,  2.746172654528099776882755,
        3.78873078606335678131245 ,  2.616562918264121240241593,
        0.907936911907011201527951]), array([ 1.                        ,  2.928512819336992034635614,
        4.044888348397370769760073,  2.786342376027754585976481,
        0.905374217026339245251165]), array([ 1.                        ,  3.10141028068263047146047 ,
        4.302960106616496638309854,  2.946540817874176099167016,
        0.902744268813743588886211]), array([ 1.                        ,  3.26282614738398857312518 ,
        4.557163301280205303100956,  3.09524056191892338318894 ,
        0.90004554578218542992829 ]), array([ 1.                        ,  3.410570693104299166975579,
        4.800973558835781140885501,  3.23039445925344859134043 ,
        0.897276507022542246794217]), array([ 1.                        ,  3.542311174942070817195372,
        5.027215995724362507246497,  3.349835332349929029049918,
        0.894435592989574312916545]), array([ 1.                        ,  3.655584288329738029688087,
        5.228208709090528039098444,  3.451289859601552212353681,
        0.891521226378749642726973]), array([ 1.                        ,  3.747814091301002292766498,
        5.395966202487304741453045,  3.532397640127616700311819,
        0.888531813099461276195257])], array([ 11313.70849898476080852560699 ,  11645.225462737498673959635198,
        11986.456615013450573314912617,  12337.686603263526194496080279,
        12699.20841574559563014190644 ,  13071.32362592879690055269748 ,
        13454.34264405943213205318898 ,  13848.584976098287370405159891,
        14254.379490245426495675928891,  14672.064691274739743676036596,
        15101.98900290709389082621783 ,  15544.511058457690523937344551,
        16000.                        ,  16468.835786295865545980632305,
        16951.409509748722484800964594,  17448.123722644122608471661806,
        17959.392772949962818529456854,  18485.643149956362321972846985,
        19027.31384004353822092525661 ,  19584.856692874473083065822721,
        20158.736798317968350602313876,  20749.432874416153936181217432,
        21357.437666720543347764760256,  21983.258359329422091832384467]), array([ 11151.506107591994805261492729,  11478.270178488000965444371104,
        11814.609167515993249253369868,  12160.80364119291880342643708 ,
        12517.142387262192642083391547,  12883.922655594033130910247564,
        13261.450406144698717980645597,  13650.040564181483205175027251,
        14050.017282986393183819018304,  14461.714214257615822134539485,
        14885.474786434342604479752481,  15321.652491177175761549733579,
        15770.611178243001631926745176,  16232.7253590003710996825248  ,
        16708.380518838621355826035142,  17197.973438731143687618896365,
        17701.912526221327425446361303,  18220.618156107062532100826502,
        18754.523021108023385750129819,  19304.072492808340030023828149,
        19869.724993175743293249979615,  20451.952376966888550668954849,
        21051.240325338196271331980824,  21668.08875099027864052914083 ]), array([ 11478.27017848800278443377465 ,  11814.609167515995068242773414,
        12160.80364119291880342643708 ,  12517.142387262194461072795093,
        12883.92265559403494989965111 ,  13261.450406144698717980645597,
        13650.040564181485024164430797,  14050.017282986396821797825396,
        14461.714214257615822134539485,  14885.474786434346242458559573,
        15321.652491177177580539137125,  15770.61117824299981293734163 ,
        16232.72535900038019462954253 ,  16708.38051883861771784722805 ,
        17197.973438731143687618896365,  17701.912526221334701403975487,
        18220.618156107062532100826502,  18754.523021108019747771322727,
        19304.072492808350943960249424,  19869.724993175736017292365432,
        20451.952376966888550668954849,  21051.240325338203547289595008,
        21668.08875099027864052914083 ,  22303.012215183985972544178367])], '12': [[array([ 0.005448187370533613509138, -0.001062997418291803091578,
        0.001117984244738362206717, -0.001062997418291803091578,
        0.005448187370533613509138]), array([  5.729498989997459414136305e-03,  -1.329496702441557596185116e-05,
         4.162729059300016715150505e-04,  -1.329496702441639080754642e-05,
         5.729498989997459414136305e-03]), array([ 0.006044169365567742154   ,  0.001090523107981086455356,
       -0.00015937080034294582101 ,  0.001090523107981087105878,
        0.006044169365567742154   ]), array([ 0.006395997270004578211244,  0.002240265116746416318438,
       -0.000586975840595826449386,  0.002240265116746416318438,
        0.006395997270004578211244]), array([ 0.006789190468843780273955,  0.003424200553528219427568,
       -0.000851864100113884224925,  0.003424200553528219427568,
        0.006789190468843780273955]), array([ 0.00722840574447800206237 ,  0.00462638490482295862416 ,
       -0.000951575004289547526914,  0.00462638490482295862416 ,
        0.00722840574447800206237 ]), array([ 0.007718792126215135059042,  0.005825966154058298367147,
       -0.000901798036478396788235,  0.005825966154058297499785,
        0.007718792126215135059042]), array([ 0.008266037453436732990175,  0.006996520958213288225724,
       -0.000742959665151348347054,  0.006996520958213287358363,
        0.008266037453436732990175]), array([ 0.008876418377870730000434,  0.008105492884109319340347,
       -0.000546724711858066151488,  0.008105492884109317605623,
        0.008876418377870730000434]), array([ 0.00955685388350559911208 ,  0.009113836080170691425484,
       -0.000421155157309479179304,  0.00911383608017068969076 ,
        0.00955685388350559911208 ]), array([ 0.010314962367991144936985,  0.009976005268419617724729,
       -0.000512657849816859265656,  0.009976005268419619459452,
        0.010314962367991144936985]), array([ 0.011159122286706943394385,  0.010640475627171698189133,
       -0.001002255124777683917975,  0.010640475627171698189133,
        0.011159122286706943394385])], [array([ 1.                        , -0.345575769875024918498241,
        1.904904081779799307483358, -0.325145227840314354761375,
        0.885454533963185852485367]), array([ 1.                        , -0.004329742412908138375627,
        1.867392969853333362095782, -0.004059001899884351512171,
        0.87908533747262596058647 ]), array([ 1.                        ,  0.355809493563517764691539,
        1.891029121890656083948556,  0.332279427849008435202904,
        0.87238983594311392266718 ]), array([ 1.                        ,  0.732380156322173347938076,
        1.985154310232883689835148,  0.681163120824855305990297,
        0.865354721275269356262072]), array([ 1.                        ,  1.12176036078094942816108 ,
        2.157067665102811115929171,  1.038812348163674847967286,
        0.857966578562340376201689]), array([ 1.                        ,  1.51893229504831439591328 ,
        2.410497215174818741445506,  1.400184389321872835409977,
        0.850211951896038709008963]), array([ 1.                        ,  1.917234752614459525332791,
        2.743755463487930867927389,  1.758783424160738517727509,
        0.842077420757038841436781]), array([ 1.                        ,  2.308118740748636987802911,
        3.147690598023400898597401,  2.106486070963989654103443,
        0.833549688048131343087732]), array([ 1.                        ,  2.6809291154259438094698  ,
        3.603666852216270921616115,  2.433405294661966866698322,
        0.824615680877989865038558]), array([ 1.                        ,  3.022745867637248284864881,
        4.081970630190662419067849,  2.727824287584054374633524,
        0.815262665245214623865877]), array([ 1.                        ,  3.318331925085023836885512,
        4.541231919541632855441549,  2.976242352997658269231351,
        0.805478375802962998086798]), array([ 1.                        ,  3.550249863168939423729853,
        4.9296389762400414369381  ,  3.163586225248754324468337,
        0.795251161900547565153374])], array([ 11313.70849898476080852560699 ,  11986.456615013450573314912617,
        12699.20841574559563014190644 ,  13454.34264405943213205318898 ,
        14254.379490245426495675928891,  15101.98900290709389082621783 ,
        16000.                        ,  16951.409509748722484800964594,
        17959.392772949962818529456854,  19027.31384004353822092525661 ,
        20158.736798317968350602313876,  21357.437666720543347764760256]), array([ 10991.629179664712864905595779,  11645.225462737496854970231652,
        12337.686603263526194496080279,  13071.323625928798719542101026,
        13848.584976098285551415756345,  14672.06469127473792468663305 ,
        15544.511058457694161916151643,  16468.835786295869183959439397,
        17448.123722644118970492854714,  18485.643149956369597930461168,
        19584.856692874480359023436904,  20749.432874416146660223603249]), array([ 11645.225462737500492949038744,  12337.686603263526194496080279,
        13071.323625928798719542101026,  13848.584976098289189394563437,
        14672.06469127473792468663305 ,  15544.511058457692342926748097,
        16468.835786295872821938246489,  17448.123722644122608471661806,
        18485.643149956362321972846985,  19584.856692874487634981051087,
        20749.432874416153936181217432,  21983.258359329418453853577375])], '1': [[array([ 0.336310896585741314623874,  0.00291523078414208849235 ,
       -0.666676953546392558891398,  0.00291523078414208849235 ,
        0.336310896585741314623874])], [array([ 1.                        ,  1.517904577989995562603553,
        0.604505566601391430836543,  0.321522749361713822136011,
        0.271006403599694467576597])], array([ 16000.]), array([ 11313.70849898476080852560699]), array([ 22627.41699796952161705121398])], '3': [[array([ 0.043140032193149421835265,  0.000991301770694891139918,
       -0.076679396145886619118315,  0.000991301770694891139918,
        0.043140032193149421835265]), array([ 0.062875969778738161064524,  0.004628656856401848831983,
       -0.114535629093038215930989,  0.004628656856401848831983,
        0.062875969778738161064524]), array([ 0.091080724456768319408084,  0.007350607974861321329552,
       -0.167418623349576467518318,  0.007350607974861321329552,
        0.091080724456768319408084])], [array([ 1.                        ,  0.35611308377890232845786 ,
        1.44439604817214117815638 ,  0.269370008876113897766658,
        0.584477620820897048048437]), array([ 1.                        ,  1.717326028215069966265105,
        2.025885182723390798287255,  1.203224192684499982419766,
        0.512700525924006722533477]), array([ 1.                        ,  2.839504388982600158186642,
        3.212304944135885076406112,  1.798519212839470471365644,
        0.438845896518431699551144])], array([ 12699.20841574559563014190644 ,  16000.                        ,
        20158.736798317968350602313876]), array([ 11313.70849898476080852560699 ,  14254.379490245430133654735982,
        17959.392772949966456508263946]), array([ 14254.379490245428314665332437,  17959.392772949970094487071037,
        22627.416997969517979072406888])], '6': [[array([ 0.012105688508488572294186, -0.000979741560536653236652,
       -0.012937935296941703230966, -0.000979741560536653236652,
        0.012105688508488572294186]), array([ 0.014313301761881166290769,  0.001041798905284291353393,
       -0.017514986004332232238934,  0.001041798905284291353393,
        0.014313301761881166290769]), array([ 0.017036388510423224051937,  0.003197414648683651484246,
       -0.022308506772127971451436,  0.003197414648683651484246,
        0.017036388510423224051937]), array([ 0.020385588043752834314093,  0.005373759246137554436429,
       -0.027443373824552731721216,  0.005373759246137554436429,
        0.020385588043752834314093]), array([ 0.024491896152489877475089,  0.00738880592349493593024 ,
       -0.0333503708374143156834  ,  0.00738880592349493593024 ,
        0.024491896152489877475089]), array([ 0.029509247788868309819721,  0.008980557013039323216441,
       -0.040932092208741284455886,  0.008980557013039323216441,
        0.029509247788868309819721])], [array([ 1.                        , -0.327967321407280798517547,
        1.77211843631523247033499 , -0.290221608949969622770482,
        0.784491367262032390783588]), array([ 1.                        ,  0.351212903018681632527631,
        1.743833931666782133262927,  0.306132438698049069714102,
        0.761722648536280910747109]), array([ 1.                        ,  1.086451720045322755225925,
        1.974423115578416876303436,  0.931025562939041484433744,
        0.737036076530035999532231]), array([ 1.                        ,  1.842096697379517866721699,
        2.494337184755340608433016,  1.548591841491415932452469,
        0.710394020295732175895864]), array([ 1.                        ,  2.557844723710860357357433,
        3.250327074552913142468924,  2.104280692261791152475325,
        0.681794050106052096360543]), array([ 1.                        ,  3.143129686852197401947251,
        4.05472253246494318545956 ,  2.523345185217270358890573,
        0.651279337336662544899468])], array([ 11313.70849898476080852560699 ,  12699.20841574559563014190644 ,
        14254.379490245426495675928891,  16000.                        ,
        17959.392772949962818529456854,  20158.736798317968350602313876]), array([ 10678.71883336027531186118722 ,  11986.456615013452392304316163,
        13454.342644059430313063785434,  15101.989002907095709815621376,
        16951.409509748718846822157502,  19027.313840043534582946449518]), array([ 11986.456615013452392304316163,  13454.342644059433951042592525,
        15101.98900290709389082621783 ,  16951.409509748726122779771686,
        19027.313840043530944967642426,  21357.437666720546985743567348])], 'dec': [array([ 0.011536697475707478888207,  0.038632394099877565007972,
        0.10808835129075518299846 ,  0.206115767541724753675325,
        0.329636596194005759841161,  0.425179326054980322169286,
        0.466169396595761453827578,  0.425179326054981321370008,
        0.32963659619400481615159 ,  0.20611576754172497571993 ,
        0.108088351290755266265187,  0.038632394099877558069078,
        0.011536697475707478888207]), array([  1.                        ,  -2.217799581317486001807993,
         6.050876867187717778051592,  -8.921323656714186256522225,
        13.006330216820746414896348, -13.587257711570371654374867,
        12.993390170458196664071693,  -9.673218888416462490908998,
         6.243626997073838502672061,  -3.143941234724292765889686,
         1.264069598846472519682038,  -0.354679616755419535589766,
         0.060088025064203742786617])]}

########NEW FILE########
__FILENAME__ = generator
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
import numpy as np
import pyaudio
from numpy.random import standard_normal
from friture.audiobackend import SAMPLING_RATE
from friture.logger import PrintLogger

SMOOTH_DISPLAY_TIMER_PERIOD_MS = 25

FRAMES_PER_BUFFER = 2*1024

DEFAULT_GENERATOR_KIND_INDEX = 0
DEFAULT_SINE_FREQUENCY = 440.
DEFAULT_SWEEP_STARTFREQUENCY = 20.
DEFAULT_SWEEP_STOPFREQUENCY = 22000.
DEFAULT_BURST_PERIOD_S = 1.
DEFAULT_SWEEP_PERIOD_S = 1.

PINK_FIDELITY = 100.

RAMP_LENGTH = 10e-3 # 10 ms

(stopped, starting, playing, stopping) = range(0, 4)

def pinknoise(n, rvs=standard_normal):
    if n==0:
        return np.zeros((0,))
    
    #k = int(min(np.floor(np.log(n)/np.log(2)), PINK_FIDELITY))
    k = 13 # dynamic k adds audible "clicks"
    pink = np.zeros((n,), np.float)

    for m in 2**np.arange(k):
        p = int(np.ceil(float(n) / m))
        pink += np.repeat(rvs(size=p), m, axis=0)[:n]

    return pink/k

class Generator_Widget(QtGui.QWidget):
    def __init__(self, parent, audiobackend, logger = PrintLogger()):
        QtGui.QWidget.__init__(self, parent)

        self.logger = logger
        self.audiobuffer = None

        self.setObjectName("Generator_Widget")
        self.gridLayout = QtGui.QGridLayout(self)
        self.gridLayout.setObjectName("gridLayout")

        self.comboBox_generator_kind = QtGui.QComboBox(self)
        self.comboBox_generator_kind.setObjectName("comboBox_generator_kind")
        self.comboBox_generator_kind.addItem("Sine")
        self.comboBox_generator_kind.addItem("White noise")
        self.comboBox_generator_kind.addItem("Pink noise")
        self.comboBox_generator_kind.addItem("Sweep")
        self.comboBox_generator_kind.addItem("Burst")
        self.comboBox_generator_kind.setCurrentIndex(DEFAULT_GENERATOR_KIND_INDEX)

        sinePageWidget = QtGui.QWidget(self)
        whitePageWidget = QtGui.QWidget(self)
        pinkPageWidget = QtGui.QWidget(self)
        sweepPageWidget = QtGui.QWidget(self)
        burstPageWidget = QtGui.QWidget(self)

        self.stackedLayout = QtGui.QStackedLayout()
        self.stackedLayout.addWidget(sinePageWidget)
        self.stackedLayout.addWidget(whitePageWidget)
        self.stackedLayout.addWidget(pinkPageWidget)
        self.stackedLayout.addWidget(sweepPageWidget)
        self.stackedLayout.addWidget(burstPageWidget)

        self.spinBox_sine_frequency = QtGui.QSpinBox(sinePageWidget)
        self.spinBox_sine_frequency.setKeyboardTracking(False)
        self.spinBox_sine_frequency.setMinimum(20)
        self.spinBox_sine_frequency.setMaximum(22000)
        self.spinBox_sine_frequency.setProperty("value", DEFAULT_SINE_FREQUENCY)
        self.spinBox_sine_frequency.setObjectName("spinBox_sine_frequency")
        self.spinBox_sine_frequency.setSuffix(" Hz")

        self.sineLayout = QtGui.QFormLayout(sinePageWidget)
        self.sineLayout.addRow("Frequency:", self.spinBox_sine_frequency)

        self.spinBox_sweep_startfrequency = QtGui.QSpinBox(sweepPageWidget)
        self.spinBox_sweep_startfrequency.setKeyboardTracking(False)
        self.spinBox_sweep_startfrequency.setMinimum(20)
        self.spinBox_sweep_startfrequency.setMaximum(22000)
        self.spinBox_sweep_startfrequency.setProperty("value", DEFAULT_SWEEP_STARTFREQUENCY)
        self.spinBox_sweep_startfrequency.setObjectName("spinBox_sweep_startfrequency")
        self.spinBox_sweep_startfrequency.setSuffix(" Hz")

        self.spinBox_sweep_stopfrequency = QtGui.QSpinBox(sweepPageWidget)
        self.spinBox_sweep_stopfrequency.setKeyboardTracking(False)
        self.spinBox_sweep_stopfrequency.setMinimum(20)
        self.spinBox_sweep_stopfrequency.setMaximum(22000)
        self.spinBox_sweep_stopfrequency.setProperty("value", DEFAULT_SWEEP_STOPFREQUENCY)
        self.spinBox_sweep_stopfrequency.setObjectName("spinBox_sweep_stopfrequency")
        self.spinBox_sweep_stopfrequency.setSuffix(" Hz")

        self.spinBox_sweep_period = QtGui.QDoubleSpinBox(sweepPageWidget)
        self.spinBox_sweep_period.setKeyboardTracking(False)
        self.spinBox_sweep_period.setDecimals(2)
        self.spinBox_sweep_period.setSingleStep(1)
        self.spinBox_sweep_period.setMinimum(0.01)
        self.spinBox_sweep_period.setMaximum(60)
        self.spinBox_sweep_period.setProperty("value", DEFAULT_SWEEP_PERIOD_S)
        self.spinBox_sweep_period.setObjectName("spinBox_sweep_period")
        self.spinBox_sweep_period.setSuffix(" s")

        self.sweepLayout = QtGui.QFormLayout(sweepPageWidget)
        self.sweepLayout.addRow("Start frequency:", self.spinBox_sweep_startfrequency)
        self.sweepLayout.addRow("Stop frequency:", self.spinBox_sweep_stopfrequency)
        self.sweepLayout.addRow("Period:", self.spinBox_sweep_period)

        self.spinBox_burst_period = QtGui.QDoubleSpinBox(burstPageWidget)
        self.spinBox_burst_period.setKeyboardTracking(False)
        self.spinBox_burst_period.setDecimals(2)
        self.spinBox_burst_period.setSingleStep(1)
        self.spinBox_burst_period.setMinimum(0.01)
        self.spinBox_burst_period.setMaximum(60)
        self.spinBox_burst_period.setProperty("value", DEFAULT_BURST_PERIOD_S)
        self.spinBox_burst_period.setObjectName("spinBox_burst_period")
        self.spinBox_burst_period.setSuffix(" s")

        self.burstLayout = QtGui.QFormLayout(burstPageWidget)
        self.burstLayout.addRow("Period:", self.spinBox_burst_period)

        self.t = 0.
        self.t_start = 0.
        self.t_stop = RAMP_LENGTH
        self.state = stopped

        self.audiobackend = audiobackend

        self.p = pyaudio.PyAudio()

        self.device = None
        self.stream = None

        # we will try to open all the input devices until one
        # works, starting by the default input device
        for device in self.audiobackend.output_devices:
            self.logger.push("Opening the stream")
            self.stream = self.open_output_stream(device)
            self.device = device

            self.logger.push("Trying to write to output device %d" %device)
            if self.test_output_stream(self.stream):
                self.logger.push("Success")
                break
            else:
                self.logger.push("Fail")

        #stream.close()
        #self.p.terminate()

        self.startStopButton = QtGui.QPushButton(self)

        startStopIcon = QtGui.QIcon()
        startStopIcon.addPixmap(QtGui.QPixmap(":/images-src/start.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        startStopIcon.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        startStopIcon.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Active, QtGui.QIcon.On)
        startStopIcon.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        startStopIcon.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Disabled, QtGui.QIcon.On)
        self.startStopButton.setIcon(startStopIcon)

        self.startStopButton.setObjectName("generatorStartStop")
        self.startStopButton.setText("Start")
        self.startStopButton.setToolTip("Start/Stop generator")
        self.startStopButton.setCheckable(True)
        self.startStopButton.setChecked(False)

        self.gridLayout.addWidget(self.startStopButton, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.comboBox_generator_kind, 1, 0, 1, 1)
        self.gridLayout.addLayout(self.stackedLayout, 2, 0, 1, 1)

        self.connect(self.comboBox_generator_kind, QtCore.SIGNAL('activated(int)'), self.stackedLayout.setCurrentIndex)
        self.connect(self.startStopButton, QtCore.SIGNAL('toggled(bool)'), self.startStopButton_toggle)

        #self.setStyleSheet(STYLESHEET)

        #self.response_time = DEFAULT_RESPONSE_TIME
        
        # initialize the settings dialog
        self.settings_dialog = Generator_Settings_Dialog(self, self.logger)

        devices = self.audiobackend.get_readable_output_devices_list()
        for device in devices:
            self.settings_dialog.comboBox_outputDevice.addItem(device)

        if self.device <> None:
            self.settings_dialog.comboBox_outputDevice.setCurrentIndex(self.audiobackend.output_devices.index(self.device))

        self.connect(self.settings_dialog.comboBox_outputDevice, QtCore.SIGNAL('currentIndexChanged(int)'), self.device_changed)

        self.sweepGenerator = SweepGenerator()
        self.connect(self.spinBox_sweep_startfrequency, QtCore.SIGNAL('valueChanged(int)'), self.sweepGenerator.setf1)
        self.connect(self.spinBox_sweep_stopfrequency, QtCore.SIGNAL('valueChanged(int)'), self.sweepGenerator.setf2)
        self.connect(self.spinBox_sweep_period, QtCore.SIGNAL('valueChanged(double)'), self.sweepGenerator.setT)
        
#        channels = self.audiobackend.get_readable_current_output_channels()
#        for channel in channels:
#            self.settings_dialog.comboBox_firstChannel.addItem(channel)
#            self.settings_dialog.comboBox_secondChannel.addItem(channel)

#        current_device = self.audiobackend.get_readable_current_output_device()
#        self.settings_dialog.comboBox_outputDevice.setCurrentIndex(current_device)

#        first_channel = self.audiobackend.get_current_first_channel()
#        self.settings_dialog.comboBox_firstChannel.setCurrentIndex(first_channel)
#        second_channel = self.audiobackend.get_current_second_channel()
#        self.settings_dialog.comboBox_secondChannel.setCurrentIndex(second_channel)

    def test_output_stream(self, stream):
        n_try = 0
        while stream.get_write_available() == 0 and n_try < 1000000:
            n_try +=1

        if n_try == 1000000:
            return False
        else:
            lat_ms = 1000*stream.get_output_latency()
            self.logger.push("Device claims %d ms latency" %(lat_ms))
            return True

    # method
    def open_output_stream(self, device):
        # by default we open the device stream with all the channels
        # (interleaved in the data buffer)
        maxOutputChannels = self.p.get_device_info_by_index(device)['maxOutputChannels']
        stream = self.p.open(format=pyaudio.paInt16, channels=maxOutputChannels, rate=SAMPLING_RATE, output=True,
                frames_per_buffer=FRAMES_PER_BUFFER, output_device_index=device)
        return stream

    def device_changed(self, device):
        # save current stream in case we need to restore it
        previous_stream = self.stream
        previous_device = self.device

        self.device = self.audiobackend.output_devices[device]
        self.stream = self.open_output_stream(self.device)

        self.logger.push("Trying to write to output device #%d" % (device))
        
        if self.test_output_stream(self.stream):
            self.logger.push("Success")
            previous_stream.close()
            success = True   
        else:
            self.logger.push("Fail")
            self.stream.close()
            self.stream = previous_stream
            self.device = previous_device
            success = False
        
        self.settings_dialog.comboBox_outputDevice.setCurrentIndex(device)
        
        if not success:
            # Note: the error message is a child of the settings dialog, so that
            # that dialog remains on top when the error message is closed
            error_message = QtGui.QErrorMessage(self.settings_dialog)
            error_message.setWindowTitle("Output device error")
            error_message.showMessage("Impossible to use the selected output device, reverting to the previous one")

    def settings_called(self, checked):
        self.settings_dialog.show()

    # method
    def set_buffer(self, buffer):
        self.audiobuffer = buffer

    # slot
    def startStopButton_toggle(self, checked):
        if checked:
            self.startStopButton.setText("Stop")
            if self.state == stopped or self.state == stopping:
                self.state = starting
                self.t_start = 0.
        else:
            self.startStopButton.setText("Start")
            if self.state == playing or self.state == starting:
                self.state = stopping
                self.t_stop = RAMP_LENGTH

    # method
    def update(self):
        if self.state == stopped:
            return

        if self.stream == None:
            return

        # play

        # maximum number of frames that can be written without waiting
        N = self.stream.get_write_available()
        
        # if we cannot write any sample, return now
        if N==0:
            return

        #t = self.t + np.arange(0, 5*SMOOTH_DISPLAY_TIMER_PERIOD_MS*1e-3, 1./float(SAMPLING_RATE))
        t = self.t + np.arange(0, N/float(SAMPLING_RATE), 1./float(SAMPLING_RATE))
        n = len(t)

        kind = self.comboBox_generator_kind.currentIndex()

        if kind == 0:
            # sinusoid
            f = float(self.spinBox_sine_frequency.value())
            floatdata = np.sin(2.*np.pi*t*f)                
        elif kind == 1:
            # white noise
            floatdata = standard_normal(n)
        elif kind == 2:
            #pink noise
            floatdata = pinknoise(n)
        elif kind == 3:
            #sweep
            floatdata = self.sweepGenerator.sweepSignal(t)
        elif kind == 4:
            #burst
            floatdata = np.zeros(t.shape)
            T = self.spinBox_burst_period.value() # period
            i = (t*SAMPLING_RATE)%(T*SAMPLING_RATE)
            n = 1
            ind_plus = np.where(i < n)
            #ind_minus = np.where((i >= n)*(i < 2*n))
            floatdata[ind_plus] = 1.
            #floatdata[ind_minus] = -1.
        else:
            print "generator error : index of signal type not found"
            return

        # add smooth ramps at start/stop to avoid undesirable bursts
        if self.state == starting:
            # add a ramp at the start
            t_ramp = self.t_start + np.arange(0, N/float(SAMPLING_RATE), 1./float(SAMPLING_RATE))
            t_ramp = np.clip(t_ramp, 0., RAMP_LENGTH)
            floatdata *= t_ramp/RAMP_LENGTH
            self.t_start += N/float(SAMPLING_RATE)
            if self.t_start > RAMP_LENGTH:
                self.state = playing
        
        if self.state == stopping:
            # add a ramp at the end
            t_ramp = self.t_stop - np.arange(0, N/float(SAMPLING_RATE), 1./float(SAMPLING_RATE))
            t_ramp = np.clip(t_ramp, 0., RAMP_LENGTH)
            floatdata *= t_ramp/RAMP_LENGTH
            self.t_stop -= N/float(SAMPLING_RATE)
            if self.t_stop < 0.:
                self.state = stopped

        # output channels are interleaved
        # we output to all channels simultaneously with the same data
        maxOutputChannels = self.p.get_device_info_by_index(self.device)['maxOutputChannels']
        floatdata = floatdata.repeat(maxOutputChannels)

        int16info = np.iinfo(np.int16)
        norm_coeff = min(abs(int16info.min), int16info.max)
        intdata = (np.clip(floatdata, int16info.min, int16info.max)*norm_coeff).astype(np.int16)
        chardata = intdata.tostring()
        self.stream.write(chardata)

        # update the time counter
        self.t += N/float(SAMPLING_RATE)

    def saveState(self, settings):
        settings.setValue("generator kind", self.comboBox_generator_kind.currentIndex())
        settings.setValue("sine frequency", self.spinBox_sine_frequency.value())
        settings.setValue("sweep start frequency", self.spinBox_sweep_startfrequency.value())
        settings.setValue("sweep stop frequency", self.spinBox_sweep_stopfrequency.value())
        settings.setValue("sweep period", self.spinBox_sweep_period.value())
        settings.setValue("burst period", self.spinBox_burst_period.value())
        
        self.settings_dialog.saveState(settings)

    def restoreState(self, settings):
        (generator_kind, ok) = settings.value("generator kind", DEFAULT_GENERATOR_KIND_INDEX).toInt()
        self.comboBox_generator_kind.setCurrentIndex(generator_kind)
        self.stackedLayout.setCurrentIndex(generator_kind)
        (sine_freq, ok) = settings.value("sine frequency", DEFAULT_SINE_FREQUENCY).toDouble()
        self.spinBox_sine_frequency.setValue(sine_freq)
        (sweep_start_frequency, ok) = settings.value("sweep start frequency", DEFAULT_SWEEP_STARTFREQUENCY).toDouble()
        self.spinBox_sweep_startfrequency.setValue(sweep_start_frequency)
        (sweep_stop_frequency, ok) = settings.value("sweep stop frequency", DEFAULT_SWEEP_STOPFREQUENCY).toDouble()
        self.spinBox_sweep_stopfrequency.setValue(sweep_stop_frequency)
        (sweep_period, ok) = settings.value("sweep period", DEFAULT_BURST_PERIOD_S).toDouble()
        self.spinBox_sweep_period.setValue(sweep_period)
        (burst_period, ok) = settings.value("burst period", DEFAULT_SWEEP_PERIOD_S).toDouble()
        self.spinBox_burst_period.setValue(burst_period)
        
        self.settings_dialog.restoreState(settings)

class Generator_Settings_Dialog(QtGui.QDialog):
    def __init__(self, parent, logger):
        QtGui.QDialog.__init__(self, parent)

        self.logger = logger

        self.setWindowTitle("Spectrum settings")

        self.formLayout = QtGui.QFormLayout(self)

        self.comboBox_outputDevice = QtGui.QComboBox(self)
        self.comboBox_outputDevice.setObjectName("comboBox_outputDevice")

        self.formLayout.addRow("Select the output device:", self.comboBox_outputDevice)

        self.setLayout(self.formLayout)

    def saveState(self, settings):
        # for the output device, we search by name instead of index, since
        # we do not know if the device order stays the same between sessions
        settings.setValue("deviceName", self.comboBox_outputDevice.currentText())

    def restoreState(self, settings):
        device_name = settings.value("deviceName", "").toString()
        id = self.comboBox_outputDevice.findText(device_name)
        # change the device only if it exists in the device list
        if id >= 0:
            self.comboBox_outputDevice.setCurrentIndex(id)

class SweepGenerator:
    def __init__(self):
        self.f1 = 20.
        self.f2 = 22000.
        self.T = 1.
        self.L, self.K = self.computeKL(self.f1, self.f2, self.T)
    
    def computeKL(self, f1, f2, T):
        w1 = 2*np.pi*f1
        w2 = 2*np.pi*f2
        K = w1*T/np.log(w2/w1)
        L = T/np.log(w2/w1)
        return L, K

    def setf1(self, f1):
        self.f1 = f1
        self.L, self.K = self.computeKL(self.f1, self.f2, self.T)
        
    def setf2(self, f2):
        self.f2 = f2
        self.L, self.K = self.computeKL(self.f1, self.f2, self.T)        

    def setT(self, T):
        self.T = T
        self.L, self.K = self.computeKL(self.f1, self.f2, self.T)
    
    def sweepSignal(self, t):
        # https://ccrma.stanford.edu/realsimple/imp_meas/Sine_Sweep_Measurement_Theory.html

        #f = (self.f2 - self.f1)*(1. + np.sin(2*np.pi*t/self.T))/2. + self.f1
        #return np.sin(2*np.pi*t*f)
        return np.sin(self.K*(np.exp(t%self.T/self.L) - 1.))

########NEW FILE########
__FILENAME__ = histplot
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth￩e Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

import PyQt4.Qwt5 as Qwt
from PyQt4 import QtCore, Qt, QtGui
from numpy import zeros, ones, log10, linspace, logspace, log2, array
#from log2_scale_engine import QwtLog10ScaleEngine
#import log2scale

# The peak decay rates (magic goes here :).
PEAK_DECAY_RATE = 1.0 - 3E-6
# Number of cycles the peak stays on hold before fall-off.
PEAK_FALLOFF_COUNT = 32 # default : 16

class FreqScaleDraw(Qwt.QwtScaleDraw):
	def __init__(self, *args):
		Qwt.QwtScaleDraw.__init__(self, *args)

	def label(self, value):
		#if value >= 1e3:
		#	label = "%gk" %(value/1e3)
		#else:
		label = "%d" %(value)
		return Qwt.QwtText(label)

class picker(Qwt.QwtPlotPicker):
	def __init__(self, *args):
		Qwt.QwtPlotPicker.__init__(self, *args)
		
	def trackerText(self, pos):
		pos2 = self.invTransform(pos)
		return Qwt.QwtText("%d Hz, %.1f dB" %(pos2.x(), pos2.y()))

	def drawTracker(self, painter):
		textRect = self.trackerRect(painter.font())
		if not textRect.isEmpty():
		  	   label = self.trackerText(self.trackerPosition())
		  	   if not label.isEmpty():
		  	   	   painter.save()
		  	   	   painter.setPen(Qt.Qt.NoPen)
		  	   	   painter.setBrush(Qt.Qt.white)
		  	   	   painter.drawRect(textRect)
		  	   	   painter.setPen(Qt.Qt.black)
		  	   	   #painter->setRenderHint(QPainter::TextAntialiasing, false);
		  	   	   label.draw(painter, textRect)
		  	   	   painter.restore()

class HistogramItem(Qwt.QwtPlotItem):

	Auto = 0
	Xfy = 1
	
	def __init__(self, *args):
		Qwt.QwtPlotItem.__init__(self, *args)
		self.__attributes = HistogramItem.Auto
		self.__data = Qwt.QwtIntervalData()
		self.__color = Qt.QColor()
		self.__reference = 0.0
		self.setItemAttribute(Qwt.QwtPlotItem.AutoScale, True)
		self.setItemAttribute(Qwt.QwtPlotItem.Legend, True)
		self.setZ(20.0)
		
		self.cached_bar_width = 1
		self.canvas_height = 2
		self.canvas_width = 2
		self.need_transform = False
		self.fl = [0.]
		self.fh = [0.]
		self.fc = ["0"] # center frequencies
		self.y = array([0.])
		self.y0 = 0.
		self.i = [0]
  		self.transform_slope = 1.
		self.transform_origin = 0.
		
		self.pixmaps = [QtGui.QPixmap()]
		self.maxLabelPixHWidth = 0
		self.maxLabelPixVWidth = 0
		self.pixHWidths = 0
		self.pixVWidths = 0
		self.pixHHeights = 0
		self.pixVHeights = 0
		self.Hpixmaps = [[QtGui.QPixmap(), QtGui.QPixmap()]]
		self.Vpixmaps = [[QtGui.QPixmap(), QtGui.QPixmap()]]
  
		self.yMap = Qwt.QwtScaleMap()

	def setData(self, fl, fh, fc, y):
		if len(self.y) <> len(y):
			self.fl = fl
			self.fh = fh
			self.fc = fc
			self.need_transform = True
			self.update_labels_pixmap(self.fc)
		
		self.y = array(y)
		
		self.itemChanged()

	def data(self):
		return self.__data

	def setColor(self, color):
		if self.__color != color:
			self.__color = color
			self.itemChanged()

	def color(self):
		return self.__color

	def boundingRect(self):
		result = self.__data.boundingRect()
		if not result.isvalid():
			return result
		if self.testHistogramAttribute(HistogramItem.Xfy):
			result = Qwt.QwtDoubleRect(result.y(), result.x(), result.height(), result.width())
			if result.left() > self.baseline():
				result.setLeft(self.baseline())
			elif result.right() < self.baseline():
				result.setRight(self.baseline())
		else:
			if result.bottom() < self.baseline():
				result.setBottom(self.baseline())
			elif result.top() > self.baseline():
				result.setTop(self.baseline())
		return result

	def rtti(self):
		return Qwt.QwtPlotItem.PlotHistogram

	def draw(self, painter, xMap, yMap, rect):
		# update the cache according to possibly new canvas dimensions
		h = rect.height()
		if h <> self.canvas_height:
			self.canvas_height = h
			self.need_transform = True
		w = rect.width()
		if w < self.canvas_width - 1 or w > self.canvas_width + 1:
			self.canvas_width = w
			self.need_transform = True

		# the transform parameters change when the scale changes
		if (   self.yMap.p1() <> yMap.p1()
			or self.yMap.p2() <> yMap.p2()
			or self.yMap.s1() <> yMap.s1()
			or self.yMap.s2() <> yMap.s2()):
			self.yMap = yMap
			self.need_transform = True

		# update the cached pixmaps and coordinates if necessary
		if self.need_transform:
			self.x1 = array([xMap.transform(flow) for flow in self.fl])
			self.x2 = array([xMap.transform(fhigh)-1 for fhigh in self.fh])
			self.y0 = yMap.transform(self.baseline())
			
			self.update_pixmap(self.x2[0] - self.x1[0], self.canvas_height)
			self.i = list(array(self.x2) - array(self.x1) - (self.cached_bar_width - 2))   

			# [p1,p2] = [bottom pixel index, top pixel index]
			# [s1,s2] = [bottom value, top value]
   			if yMap.s2() - yMap.s1() <> 0.:
                                      self.transform_slope = (yMap.p1() - yMap.p2())/(yMap.s1() - yMap.s2())
                                      self.transform_origin = - yMap.s2() * (yMap.p1() - yMap.p2())/(yMap.s1() - yMap.s2()) + yMap.p2()                                      

			self.need_transform = False

		y = self.transform_slope * self.y + self.transform_origin
  
		for x1, x2, y2, i in zip(self.x1, self.x2, y, self.i):
			self.drawBar(painter, x1, y2, i)

		w = self.x2[0] - self.x1[0]

		if self.maxLabelPixHWidth <= w: # try to draw the frequency labels horizontally
			self.drawLabels(painter, y, self.pixHWidths, self.pixHHeights, self.Hpixmaps)
		elif self.maxLabelPixVWidth <= w: # try to draw the frequency labels vertically
			self.drawLabels(painter, y, self.pixVWidths, self.pixVHeights, self.Vpixmaps)


	def drawLabels(self, painter, y, pixWidths, pixHeights, pixmaps):
		x = (self.x1 + self.x2)/2 - pixWidths/2 # center

		Dy = 6
		y += Dy # some margin between top of the bar and text

		hBound = 3
		y = (y>=hBound)*y + (y<hBound)*hBound

		mask = y + pixHeights >= self.canvas_height-1
		y = mask*(self.canvas_height-hBound-pixHeights) + (-mask)*y
		ps = mask*1 + (-mask)*0

		for x1, y2, p, pixmap in zip(x,	y, ps, pixmaps):
			painter.drawPixmap(x1, y2, pixmap[p])


	def drawBar(self, painter, left, top, i):
		painter.drawPixmap(left, top, self.pixmaps[i])

	def setBaseline(self, reference):
		if self.baseline() != reference:
			self.__reference = reference
			self.itemChanged()
	
	def baseline(self,):
		return self.__reference

	def setHistogramAttribute(self, attribute, on = True):
		if self.testHistogramAttribute(attribute):
			return

		if on:
			self.__attributes |= attribute
		else:
			self.__attributes &= ~attribute

		self.itemChanged()

	def testHistogramAttribute(self, attribute):
		return bool(self.__attributes & attribute) 

	# For a dramatic speedup, the bars are cached instead of drawn from scratch each time
	def update_pixmap(self, width, height):
		self.cached_bar_width = width
		
		color = QtGui.QColor(self.color())
		
		self.pixmaps = []
		for w in range(width-2, width+3):
			pixmap = QtGui.QPixmap(w+1, height+1)
			pixmap.fill(color)
			painter = QtGui.QPainter(pixmap)
			if width > 3:
				self.drawBarDecoration(painter, w, height)
			self.pixmaps += [pixmap]
		
	def drawBarDecoration(self, painter, width, height):
		color = QtGui.QColor(self.color())
		factor = 125
		light = color.lighter(factor)
		dark = color.darker(factor)
		
		painter.setBrush(Qt.Qt.NoBrush)

		top = 0
		bottom = height
		left = 0
		right = width - 1

		#horizontal line
		painter.setPen(Qt.QPen(light, 2))
		painter.drawLine(1, top+2, right+1, top+2)

		#horizontal line
		painter.setPen(Qt.QPen(dark, 2))
		painter.drawLine(1, bottom, right+1, bottom)

		#vertical line
		painter.setPen(Qt.QPen(light, 1))
		painter.drawLine(0, top + 1, 0, bottom)
		painter.drawLine(1, top + 2, 1, bottom-1)
		
		#vertical line
		painter.setPen(Qt.QPen(dark, 1))
		painter.drawLine(right+1, top+1, right+1, bottom)
		painter.drawLine(right, top+2, right, bottom-1)

	# For a dramatic speedup, the frequency labels are cached
	# instead of drawn from scratch each time
	def update_labels_pixmap(self, fList):
		labels_pixmaps_H_black = []
		labels_pixmaps_H_white = []
		labels_pixmaps_V_black = []
		labels_pixmaps_V_white = []

		w = h = 1
		test_pixmap = QtGui.QPixmap(w, h)
		test_pixmap.fill()
		test_painter = QtGui.QPainter(test_pixmap)
		fRect = QtCore.QRectF(0, 0, w, h)

		transparentColor = QtGui.QColor(0,0,0,0)

		for f in fList:
			# first, find the right pixmap size
			bRect = test_painter.boundingRect(fRect, Qt.Qt.AlignLeft, f)

			# second, create the pixmap with the right size
			pixmap = QtGui.QPixmap(bRect.width(), bRect.height())
			pixmap.fill(transparentColor) # transparent background
			painter = QtGui.QPainter(pixmap)
			painter.setPen(QtCore.Qt.black)
			painter.drawText(bRect, Qt.Qt.AlignLeft, f)
			labels_pixmaps_H_black += [pixmap]

			pixmap = QtGui.QPixmap(bRect.width(), bRect.height())
			pixmap.fill(transparentColor) # transparent background
			painter = QtGui.QPainter(pixmap)
			painter.setPen(QtCore.Qt.white)
			painter.drawText(bRect, Qt.Qt.AlignLeft, f)
			labels_pixmaps_H_white += [pixmap]

		angle = -90
		for pix in labels_pixmaps_H_black:
			pixmap = QtGui.QPixmap(pix.height(), pix.width())
			pixmap.fill(transparentColor) # transparent background
			painter = QtGui.QPainter(pixmap)
			painter.rotate(angle)
			painter.drawPixmap(-pix.width(), 0, pix)
			labels_pixmaps_V_black += [pixmap]

		for pix in labels_pixmaps_H_white:
			pixmap = QtGui.QPixmap(pix.height(), pix.width())
			pixmap.fill(transparentColor) # transparent background
			painter = QtGui.QPainter(pixmap)
			painter.rotate(angle)
			painter.drawPixmap(-pix.width(), 0, pix)
			labels_pixmaps_V_white += [pixmap]

		test_painter.end() # manually ends painting to satisfy Qt

		self.pixHWidths = array([pix.width() for pix in labels_pixmaps_H_white])
		self.maxLabelPixHWidth = max(self.pixHWidths)
		self.pixHHeights = array([pix.height() for pix in labels_pixmaps_H_white])

		self.pixVWidths = array([pix.width() for pix in labels_pixmaps_V_white])
		self.maxLabelPixVWidth = max(self.pixVWidths)
		self.pixVHeights = array([pix.height() for pix in labels_pixmaps_V_white])

		self.Hpixmaps = [[pix_white, pix_black] for pix_white, pix_black in zip(labels_pixmaps_H_white,
																				labels_pixmaps_H_black)]

		self.Vpixmaps = [[pix_white, pix_black] for pix_white, pix_black in zip(labels_pixmaps_V_white,
																				labels_pixmaps_V_black)]


class HistogramPeakBarItem(Qwt.QwtPlotItem):
	def __init__(self, *args):
		Qwt.QwtPlotItem.__init__(self, *args)
		self.fl = [0.]
		self.fh = [0.]
		self.peaks = array([0.])
		self.palette_index = [0]
		self.y = array([0.])
		#self.canvas_height = 2
		self.canvas_width = 2
		self.need_transform = False
		self.transform_slope = 1.
		self.transform_origin = 0.
		self.yMap = None
		
		self.palette = [Qt.QColor(255, gb, gb) for gb in range(0,256)]

	def setData(self, fl, fh, peaks, peaks_int, y):
		if len(self.peaks) <> len(peaks):
			self.fl = fl
			self.fh = fh
			self.need_transform = True
		
		self.peaks = peaks
		self.palette_index = (255*(1.-peaks_int)).astype(int)
		self.y = array(y)

	def draw(self, painter, xMap, yMap, rect):
		# update the cache according to possibly new canvas dimensions
		h = rect.height()
		w = rect.width()
		if w <> self.canvas_width:
			self.canvas_width = w
			self.need_transform = True

		# the transform parameters change when the scale changes
		if self.yMap <> yMap:
			self.yMap = yMap
			self.need_transform = True
		
		if self.need_transform:
			self.x1 = [xMap.transform(flow)+1 for flow in self.fl]
			self.x2 = [xMap.transform(fhigh)-1 for fhigh in self.fh]
   
			# [p1,p2] = [bottom pixel index, top pixel index]
			# [s1,s2] = [bottom value, top value]
   			if yMap.s2() - yMap.s1() <> 0.:
                                      self.transform_slope = (yMap.p1() - yMap.p2())/(yMap.s1() - yMap.s2())
                                      self.transform_origin = - yMap.s2() * (yMap.p1() - yMap.p2())/(yMap.s1() - yMap.s2()) + yMap.p2()                                      
			
			self.need_transform = False

		peaks = self.transform_slope * self.peaks + self.transform_origin
		ys = self.transform_slope * self.y + self.transform_origin
  
		for x1, x2, peak, index, y in zip(self.x1, self.x2, peaks, self.palette_index, ys):
			painter.fillRect(x1-1, peak, x2-x1+2, y-peak+1, self.palette[index])


class HistPlot(Qwt.QwtPlot):
	def __init__(self, parent, logger):
		Qwt.QwtPlot.__init__(self)

		# store the logger instance
		self.logger = logger

		# we do not need caching
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintCached, False)
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintPacked, False)

		self.setAxisScale(Qwt.QwtPlot.yLeft, -140., 0.)
		xtitle = Qwt.QwtText('Frequency (Hz)')
		xtitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.xBottom, xtitle)
		# self.setAxisTitle(Qwt.QwtPlot.xBottom, 'Frequency (Hz)')
		ytitle = Qwt.QwtText('PSD (dB A)')
		ytitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yLeft, ytitle)
		# self.setAxisTitle(Qwt.QwtPlot.yLeft, 'PSD (dB)')

		# attach a grid
		grid = Qwt.QwtPlotGrid()
		grid.enableXMin(True)
		grid.setMajPen(Qt.QPen(Qt.QPen(Qt.Qt.gray)))
		grid.setMinPen(Qt.QPen(Qt.QPen(Qt.Qt.lightGray)))
		grid.attach(self)

		self.needfullreplot = False

		self.setAxisScale(Qwt.QwtPlot.xBottom, 44., 22000.)
		#self.setAxisScaleEngine(Qwt.QwtPlot.xBottom, )
		
		self.setAxisScaleEngine(Qwt.QwtPlot.xBottom, Qwt.QwtLog10ScaleEngine())
		
		#try:
		#	s = Qwt.QwtLog10ScaleEngine()
		#	s.autoScale(1,1.,1.)
		#except:
		#	print "The loaded PyQwt library has buggy QwtScaleEngine (and friends) SIP declarations"
		#	print "... use a log10 scale engine instead of a log2 scale engine"
		#	self.setAxisScaleEngine(Qwt.QwtPlot.xBottom, Qwt.QwtLog10ScaleEngine())
		#else:
		#	self.setAxisScaleEngine(Qwt.QwtPlot.xBottom, log2scale.CustomScaleEngine())
		
		self.setAxisScaleDraw(Qwt.QwtPlot.xBottom, FreqScaleDraw())
		
		self.paint_time = 0.

		# picker used to display coordinates when clicking on the canvas
		self.picker = picker(Qwt.QwtPlot.xBottom,
							   Qwt.QwtPlot.yLeft,
							   Qwt.QwtPicker.PointSelection,
							   Qwt.QwtPlotPicker.CrossRubberBand,
							   Qwt.QwtPicker.ActiveOnly,
							   self.canvas())
		
		# insert an additional plot item for the peak bar
		self.bar_peak = HistogramPeakBarItem()
		self.bar_peak.attach(self)
		self.peak = zeros((1,))
		self.peak_int = 0
		self.peak_decay = PEAK_DECAY_RATE
		
		self.histogram = HistogramItem()
		self.histogram.setColor(Qt.Qt.darkGreen)
		self.histogram.setBaseline(-200.)
		
		pos = [0.1, 1., 10.]
		self.histogram.setData(pos[:-1], pos[1:], [str(p) for p in pos[:-1]], pos[:-1])
		self.histogram.attach(self)
		
		self.cached_canvas = self.canvas()
		
		# set the size policy to "Preferred" to allow the widget to be shrinked under the default size, which is quite big
		self.setSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
		
		#need to replot here for the size Hints to be computed correctly (depending on axis scales...)
		self.replot()

	def setdata(self, fl, fh, fc, y):
		self.histogram.setData(fl, fh, fc, y)
		
		self.compute_peaks(y)
		self.bar_peak.setData(fl, fh, self.peak, self.peak_int, y)
		
		if self.needfullreplot:
			self.needfullreplot = False
			self.replot()
		else:
			# self.replot() would call updateAxes() which is dead slow (probably because it
			# computes label sizes); instead, let's just ask Qt to repaint the canvas next time
			# This works because we disable the cache
			self.cached_canvas.update()

	def compute_peaks(self, y):
		if len(self.peak) <> len(y):
			y_ones = ones(y.shape)
			self.peak = y_ones*(-500.)
			self.peak_int = zeros(y.shape)
			self.peak_decay = y_ones * 20. * log10(PEAK_DECAY_RATE) * 5000

		mask1 = (self.peak < y)
		mask2 = (-mask1)
		mask2_a = mask2 * (self.peak_int < 0.2)
		mask2_b = mask2 * (self.peak_int >= 0.2)

		self.peak[mask1] = y[mask1]
		self.peak[mask2_a] = self.peak[mask2_a] + self.peak_decay[mask2_a]
		
		self.peak_decay[mask1] = 20. * log10(PEAK_DECAY_RATE) * 5000
		self.peak_decay[mask2_a] += 20. * log10(PEAK_DECAY_RATE) * 5000
		
		self.peak_int[mask1] = 1.
		self.peak_int[mask2_b] *= 0.975
	
	def setspecrange(self, min, max):
		self.setAxisScale(Qwt.QwtPlot.yLeft, min, max)
		self.needfullreplot = True
	
	def setweighting(self, weighting):
		if weighting is 0:
			title = "PSD (dB)"
		elif weighting is 1:
			title = "PSD (dB A)"
		elif weighting is 2:
			title = "PSD (dB B)"
		else:
			title = "PSD (dB C)"
		
		ytitle = Qwt.QwtText(title)
		ytitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yLeft, ytitle)
	
	def drawCanvas(self, painter):
		t = QtCore.QTime()
		t.start()
		Qwt.QwtPlot.drawCanvas(self, painter)
		self.paint_time = (95.*self.paint_time + 5.*t.elapsed())/100.

########NEW FILE########
__FILENAME__ = imageplot
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

import PyQt4.Qwt5 as Qwt
from PyQt4 import QtCore, QtGui, Qt
from friture.spectrogram_image import CanvasScaledSpectrogram
from online_linear_2D_resampler import Online_Linear_2D_resampler
from fractions import Fraction
from frequency_resampler import Frequency_Resampler
import numpy as np

class FreqScaleDraw(Qwt.QwtScaleDraw):
	def __init__(self, *args):
		Qwt.QwtScaleDraw.__init__(self, *args)

	def label(self, value):
		if value >= 1e3:
			label = "%gk" %(value/1e3)
		else:
			label = "%d" %(value)
		return Qwt.QwtText(label)

class picker(Qwt.QwtPlotPicker):
	def __init__(self, *args):
		Qwt.QwtPlotPicker.__init__(self, *args)
		
	def trackerText(self, pos):
		pos2 = self.invTransform(pos)
		return Qwt.QwtText("%.2f s, %d Hz" %(pos2.x(), pos2.y()))
			
	def drawTracker(self, painter):
		textRect = self.trackerRect(painter.font())
		if not textRect.isEmpty():
		  	   label = self.trackerText(self.trackerPosition())
		  	   if not label.isEmpty():
		  	   	   painter.save()
		  	   	   painter.setPen(Qt.Qt.NoPen)
		  	   	   painter.setBrush(Qt.Qt.white)
		  	   	   painter.drawRect(textRect)
		  	   	   painter.setPen(Qt.Qt.black)
		  	   	   #painter->setRenderHint(QPainter::TextAntialiasing, false);
		  	   	   label.draw(painter, textRect)
		  	   	   painter.restore()

class PlotImage(Qwt.QwtPlotItem):
	def __init__(self, logger, audiobackend):
		Qwt.QwtPlotItem.__init__(self)
		self.canvasscaledspectrogram = CanvasScaledSpectrogram(logger)
		self.T = 0.
		self.dT = 1.
		self.audiobackend = audiobackend
		#self.previous_time = self.audiobackend.get_stream_time()
		self.offset = 0 #self.audiobackend.get_stream_time()/self.dT
		
		self.jitter_s = 0.

		self.isPlaying = True

		self.sfft_rate_frac = Fraction(1, 1)
		self.frequency_resampler = Frequency_Resampler()
		self.resampler = Online_Linear_2D_resampler()

		self.timer = QtCore.QElapsedTimer()
		self.timer.start()

	def addData(self, freq, xyzs, logfreqscale):
		self.frequency_resampler.setlogfreqscale(logfreqscale)

		# Note: both the frequency and the time resampler work
		# only on 1D arrays, so we loop on the columns of data.
		# However, we reassemble the 2D output before drawing
		# on the widget's pixmap, because the drawing operation
		# seems to have a costly warmup phase, so it is better
		# to invoke it the fewer number of times possible.

		n = self.resampler.processable(xyzs.shape[1])
		resampled_data = np.zeros((self.frequency_resampler.nsamples, n))

		i = 0
		for j in range(xyzs.shape[1]):
			freq_resampled_data = self.frequency_resampler.process(freq, xyzs[:, j])
			data = self.resampler.process(freq_resampled_data)
			resampled_data[:,i:i+data.shape[1]] = data
			i += data.shape[1]

		self.canvasscaledspectrogram.addData(resampled_data)

	def pause(self):
		self.isPlaying = False

	def restart(self):
		self.isPlaying = True
		self.timer.restart()

	def draw(self, painter, xMap, yMap, rect):
		# update the spectrogram according to possibly new canvas dimensions
		self.frequency_resampler.setnsamples(rect.height())
		self.resampler.set_height(rect.height())
		self.canvasscaledspectrogram.setcanvas_height(rect.height())
		#print self.jitter_s, self.T, rect.width(), rect.width()*(1 + self.jitter_s/self.T)
		jitter_pix = rect.width()*self.jitter_s/self.T
		self.canvasscaledspectrogram.setcanvas_width(rect.width() + jitter_pix)

		screen_rate_frac = Fraction(rect.width(), int(self.T*1000))
		self.resampler.set_ratio(self.sfft_rate_frac, screen_rate_frac)

		# time advance
		# FIXME ideally this function should be called at paintevent time, for better time sync
		# but I'm not sure it is... maybe qwt does some sort of double-buffering
		# and repaints its items outside of paintevents
		# solution: look at PaintEvent

		# FIXME there is a small bands of columns with jitter (on both sides of the spectrogram)
		# solution: grow the rolling-canvas by a couple of columns,
		# and slightly delay the spectrogram by the same number of columns

		if self.isPlaying:
			delta_t = self.timer.nsecsElapsed()*1e-9
			self.timer.restart()
			pixel_advance = delta_t/(self.T + self.jitter_s)*rect.width()
			self.canvasscaledspectrogram.addPixelAdvance(pixel_advance)

		pixmap = self.canvasscaledspectrogram.getpixmap()
		offset = self.canvasscaledspectrogram.getpixmapoffset(delay=jitter_pix/2)
		
		rolling = True
		if rolling:
			# draw the whole canvas with a selected portion of the pixmap

			hints = painter.renderHints()
			# enable bilinear pixmap transformation
			painter.setRenderHints(hints|QtGui.QPainter.SmoothPixmapTransform)
			#FIXME instead of a generic bilinear transformation, I need a specialized one
			# since no transformation is needed in y, and the sampling rate is already known to be ok in x
			sw = rect.width()
			sh = rect.height()

			source_rect = QtCore.QRectF(offset, 0, sw, sh)
			# QRectF since the offset and width may be non-integer
			painter.drawPixmap(QtCore.QRectF(rect), pixmap, source_rect)
		else:
			sw = rect.width()
			sh = rect.height()
			source_rect = QtCore.QRectF(0, 0, sw, sh)
			painter.drawPixmap(QtCore.QRectF(rect), pixmap, source_rect)

	def settimerange(self, timerange_seconds, dT):
		self.T = timerange_seconds
		self.dT = dT

	def setfreqrange(self, minfreq, maxfreq):
		self.frequency_resampler.setfreqrange(minfreq, maxfreq)

	def set_sfft_rate(self, rate_frac):
		self.sfft_rate_frac = rate_frac

	def setlogfreqscale(self, logfreqscale):
		self.frequency_resampler.setlogfreqscale(logfreqscale)

	def erase(self):
		self.canvasscaledspectrogram.erase()

	def set_jitter(self, jitter_s):
		self.jitter_s = jitter_s
		#print jitter_s

class ImagePlot(Qwt.QwtPlot):

	def __init__(self, parent, logger, audiobackend):
		Qwt.QwtPlot.__init__(self, parent)

		# we do not need caching
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintCached, False)
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintPacked, False)
		# we do not need to have the background erased on each repaint
		self.canvas().setAttribute(Qt.Qt.WA_NoSystemBackground)

		# set plot layout
		self.plotLayout().setMargin(0)
		self.plotLayout().setCanvasMargin(0)
		self.plotLayout().setAlignCanvasToScales(True)
		# use custom labelling for frequencies
		self.setAxisScaleDraw(Qwt.QwtPlot.yLeft, FreqScaleDraw())
		# set axis titles
		xtitle = Qwt.QwtText('Time (s)')
		xtitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.xBottom, xtitle)
		# self.setAxisTitle(Qwt.QwtPlot.xBottom, 'Time (s)')
		ytitle = Qwt.QwtText('Frequency (Hz)')
		ytitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yLeft, ytitle)
		# self.setAxisTitle(Qwt.QwtPlot.yLeft, 'Frequency (Hz)')
		
		# attach a plot image
		self.plotImage = PlotImage(logger, audiobackend)
		self.plotImage.attach(self)
		self.setlinfreqscale()
		self.setfreqrange(20., 20000.)
		
		self.rightAxis = self.axisWidget(Qwt.QwtPlot.yRight)
		ctitle = Qwt.QwtText("PSD (dB A)")
		ctitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yRight, ctitle)
		self.rightAxis.setColorBarEnabled(True)
		self.enableAxis(Qwt.QwtPlot.yRight)
		self.setspecrange(-140., 0.)

		self.setAxisScale(Qwt.QwtPlot.xBottom, 0., 10.)
		
		self.paint_time = 0.
		
		# picker used to display coordinates when clicking on the canvas
		self.picker = picker(Qwt.QwtPlot.xBottom,
                               Qwt.QwtPlot.yLeft,
                               Qwt.QwtPicker.PointSelection,
                               Qwt.QwtPlotPicker.CrossRubberBand,
                               Qwt.QwtPicker.ActiveOnly,
                               self.canvas())
		
		self.cached_canvas = self.canvas()
		
		# set the size policy to "Preferred" to allow the widget to be shrinked under the default size, which is quite big
		self.setSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
		
		#need to replot here for the size Hints to be computed correctly (depending on axis scales...)
		self.replot()

	def addData(self, freq, xyzs):
		self.plotImage.addData(freq, xyzs, self.logfreqscale)

	def updatePlot(self):
		# self.replot() would call updateAxes() which is dead slow (probably because it
		# computes label sizes); instead, let's ask Qt to repaint the canvas only next time
		# This works because we disable the cache
		# TODO what happens when the cache is enabled ?
		# Could that solve the perceived "unsmoothness" ?
		
		self.cached_canvas.update()
		
		#print self.canvas().testPaintAttribute(Qwt.QwtPlotCanvas.PaintCached)
		#print self.canvas().paintCache()

	def pause(self):
		self.plotImage.pause()

	def restart(self):
		self.plotImage.restart()

	def setlinfreqscale(self):
		self.plotImage.erase()
		self.logfreqscale = 0
		self.plotImage.setlogfreqscale(False)
		self.setAxisScaleEngine(Qwt.QwtPlot.yLeft, Qwt.QwtLinearScaleEngine())
		self.replot()

	def setlog10freqscale(self):
		self.plotImage.erase()
		self.logfreqscale = 1
		self.plotImage.setlogfreqscale(True)
		self.setAxisScaleEngine(Qwt.QwtPlot.yLeft, Qwt.QwtLog10ScaleEngine())
		self.replot()
		
	#def setlog2freqscale(self):
	#	self.plotImage.erase()
	#	self.logfreqscale = 2
	#	print "Warning: Frequency scales are not implemented in the spectrogram"
	#	self.setAxisScaleEngine(Qwt.QwtPlot.yLeft, Qwt.QwtLog10ScaleEngine())
	#	self.replot()

	def settimerange(self, timerange_seconds, dT_seconds):   
		self.plotImage.settimerange(timerange_seconds, dT_seconds)
		self.setAxisScale(Qwt.QwtPlot.xBottom, 0., timerange_seconds)
		self.replot()

	def set_sfft_rate(self, rate_frac):
		self.plotImage.set_sfft_rate(rate_frac)

	def setfreqrange(self, minfreq, maxfreq):
		self.plotImage.setfreqrange(minfreq, maxfreq)
		self.setAxisScale(Qwt.QwtPlot.yLeft, minfreq, maxfreq)
		self.replot()
	
	def setspecrange(self, spec_min, spec_max):
		self.rightAxis.setColorMap(Qwt.QwtDoubleInterval(spec_min, spec_max), self.plotImage.canvasscaledspectrogram.colorMap)
		self.setAxisScale(Qwt.QwtPlot.yRight, spec_min, spec_max)
		self.replot()
		
	def setweighting(self, weighting):
		if weighting is 0:
			title = "PSD (dB)"
		elif weighting is 1:
			title = "PSD (dB A)"
		elif weighting is 2:
			title = "PSD (dB B)"
		else:
			title = "PSD (dB C)"
		
		ctitle = Qwt.QwtText(title)
		ctitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yRight, ctitle)
	
	def drawCanvas(self, painter):
		t = QtCore.QTime()
		t.start()
		Qwt.QwtPlot.drawCanvas(self, painter)
		self.paint_time = (95.*self.paint_time + 5.*t.elapsed())/100.

########NEW FILE########
__FILENAME__ = levels
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtCore, QtGui
from numpy import log10, abs, arange
from friture.levels_settings import Levels_Settings_Dialog # settings dialog
from friture.qsynthmeter import qsynthMeter
from friture.audioproc import audioproc
from friture.logger import PrintLogger

from friture.exp_smoothing_conv import pyx_exp_smoothed_value

from friture.audiobackend import SAMPLING_RATE

STYLESHEET = """
qsynthMeter {
#border: 1px solid gray;
#border-radius: 2px;
padding: 1px;
}
"""

SMOOTH_DISPLAY_TIMER_PERIOD_MS = 25
LEVEL_TEXT_LABEL_PERIOD_MS = 250

LEVEL_TEXT_LABEL_STEPS = LEVEL_TEXT_LABEL_PERIOD_MS/SMOOTH_DISPLAY_TIMER_PERIOD_MS

class Levels_Widget(QtGui.QWidget):
	def __init__(self, parent = None, logger = PrintLogger()):
		QtGui.QWidget.__init__(self, parent)
		self.setObjectName("Levels_Widget")
		
		self.gridLayout = QtGui.QGridLayout(self)
		self.gridLayout.setObjectName("gridLayout")

		font = QtGui.QFont()
		font.setPointSize(14)
		font.setWeight(75)
		font.setBold(True)

		self.label_peak = QtGui.QLabel(self)
		self.label_peak.setFont(font)
		#QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft
		self.label_peak.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight)
		self.label_peak.setObjectName("label_peak")

		self.label_peak_legend = QtGui.QLabel(self)
		self.label_peak_legend.setAlignment(QtCore.Qt.AlignTop|QtCore.Qt.AlignRight)
		self.label_peak_legend.setObjectName("label_peak_legend")

		self.label_rms = QtGui.QLabel(self)
		self.label_rms.setFont(font)
		self.label_rms.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight)
		self.label_rms.setObjectName("label_rms")

		self.label_rms_legend = QtGui.QLabel(self)
		self.label_rms_legend.setAlignment(QtCore.Qt.AlignTop|QtCore.Qt.AlignRight)
		self.label_rms_legend.setObjectName("label_rms_legend")

		self.meter = qsynthMeter(self)
		self.meter.setStyleSheet(STYLESHEET)
		self.meter.setObjectName("meter")

		self.gridLayout.addWidget(self.label_peak, 0, 0, 1, 1)
		self.gridLayout.addWidget(self.label_peak_legend, 1, 0, 1, 1)
		self.gridLayout.addWidget(self.label_rms, 2, 0, 1, 1)
		self.gridLayout.addWidget(self.label_rms_legend, 3, 0, 1, 1)

		self.gridLayout.addWidget(self.meter, 0, 1, 4, 1)

		self.label_rms.setText("-100.0")
		self.label_peak.setText("-100.0")
		self.label_rms_legend.setText("dB FS\n RMS")
		self.label_peak_legend.setText("dB FS\n Peak")
		self.label_rms.setTextFormat(QtCore.Qt.PlainText)
		self.label_peak.setTextFormat(QtCore.Qt.PlainText)
		#self.label_rms.setSizePolicy(QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding))
		#self.label_rms_legend.setSizePolicy(QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding))
		#self.label_peak.setSizePolicy(QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding))
		#self.label_peak_legend.setSizePolicy(QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding))
		
		self.logger = logger
		self.audiobuffer = None
		
		# initialize the settings dialog
		self.settings_dialog = Levels_Settings_Dialog(self, self.logger)
		
		# initialize the class instance that will do the fft
		self.proc = audioproc(self.logger)
		
		#time = SMOOTH_DISPLAY_TIMER_PERIOD_MS/1000. #DISPLAY
		#time = 0.025 #IMPULSE setting for a sound level meter
		#time = 0.125 #FAST setting for a sound level meter
		#time = 1. #SLOW setting for a sound level meter
		self.response_time = 0.300 #300ms is a common value for VU meters
		# an exponential smoothing filter is a simple IIR filter
		# s_i = alpha*x_i + (1-alpha)*s_{i-1}
		#we compute alpha so that the n most recent samples represent 100*w percent of the output
		w = 0.65
		n = self.response_time*SAMPLING_RATE
		N = 4096
		self.alpha = 1. - (1.-w)**(1./(n+1))
		self.kernel = (1. - self.alpha)**(arange(0, N)[::-1])
		# first channel
		self.old_rms = 1e-30
		self.old_max = 1e-30
		# second channel
		self.old_rms_2 = 1e-30
		self.old_max_2 = 1e-30
		
		response_time_peaks = 0.025 # 25ms for instantaneous peaks
		n2 = response_time_peaks/(SMOOTH_DISPLAY_TIMER_PERIOD_MS/1000.)
		self.alpha2 = 1. - (1.-w)**(1./(n2+1))
  
		self.two_channels = False

		self.i = 0

	# method
	def set_buffer(self, buffer):
		self.audiobuffer = buffer

	# method
	def update(self):
		if not self.isVisible():
			return

		self.i += 1		

		# get the fresh data
		floatdata = self.audiobuffer.newdata()

		if floatdata.shape[0] > 1 and self.two_channels == False:
			self.meter.setPortCount(2)
			self.two_channels = True
		elif floatdata.shape[0] == 1 and self.two_channels == True:
			self.meter.setPortCount(1)
			self.two_channels = False

		# first channel
		y1 = floatdata[0,:]
		
		# exponential smoothing for max
		if len(y1) > 0:
			value_max = abs(y1).max()
			if value_max > self.old_max*(1.-self.alpha2):
				self.old_max = value_max
			else:
				# exponential decrease
				self.old_max *= (1.-self.alpha2)
		
		# exponential smoothing for RMS
		value_rms = pyx_exp_smoothed_value(self.kernel, self.alpha, y1**2, self.old_rms)
		self.old_rms = value_rms
		
		level_rms = 10.*log10(value_rms + 0.*1e-80)
		level_max = 20.*log10(self.old_max + 0.*1e-80)
  
		if self.i == LEVEL_TEXT_LABEL_STEPS:
	    		if level_rms > -150.:
	    			string_rms = "%+05.01f" % level_rms
	    		else:
	    			string_rms = "-Inf"
	    		if level_max > -150.:
	    			string_peak = "%+05.01f" % level_max
	    		else:
	    			string_peak = "-Inf"

		if not self.two_channels:
			self.meter.setValue(0, level_rms, level_max)
			if self.i == LEVEL_TEXT_LABEL_STEPS:
				self.label_rms.setText(string_rms)
				self.label_peak.setText(string_peak)
		else:
			# second channel
			y2 = floatdata[1,:]
		
			# exponential smoothing for max
			if len(y2) > 0:
				value_max = abs(y2).max()
				if value_max > self.old_max_2*(1.-self.alpha2):
					self.old_max_2 = value_max
				else:
					# exponential decrease
					self.old_max_2 *= (1.-self.alpha2)
			
			# exponential smoothing for RMS
			value_rms = pyx_exp_smoothed_value(self.kernel, self.alpha, y2**2, self.old_rms_2)
			self.old_rms_2 = value_rms
			
			level_rms_2 = 10.*log10(value_rms + 0.*1e-80)
			level_max_2 = 20.*log10(self.old_max_2 + 0.*1e-80)

			#self.meter.m_iPortCount = 3
			self.meter.setValue(0, level_rms, level_max)
			self.meter.setValue(1, level_rms_2, level_max_2)

			if self.i == LEVEL_TEXT_LABEL_STEPS:
				if level_rms_2 > -150.:
					string_rms_2 = "%+05.01f" % level_rms_2
				else:
					string_rms_2 = "-Inf"
				if level_max > -150.:
					string_peak_2 = "%+05.01f" % level_max_2
				else:
					string_peak_2 = "-Inf"

				self.label_rms.setText("1: %s\n2: %s" %(string_rms, string_rms_2))
				self.label_peak.setText("1: %s\n2: %s" %(string_peak, string_peak_2))

		if self.i == LEVEL_TEXT_LABEL_STEPS:
			self.i = 0

		if 0:
			fft_size = time*SAMPLING_RATE #1024
			maxfreq = SAMPLING_RATE/2
			sp, freq, A, B, C = self.proc.analyzelive(floatdata, fft_size, maxfreq)
			print level_rms, 10*log10((sp**2).sum()*2.), freq.max()

	# slot
	def settings_called(self, checked):
		self.settings_dialog.show()

	# method
	def saveState(self, settings):
		self.settings_dialog.saveState(settings)
	
	# method
	def restoreState(self, settings):
		self.settings_dialog.restoreState(settings)

########NEW FILE########
__FILENAME__ = levels_settings
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore

class Levels_Settings_Dialog(QtGui.QDialog):
	def __init__(self, parent, logger):
		QtGui.QDialog.__init__(self, parent)
		
		self.logger = logger
		
		self.setWindowTitle("Levels settings")
		
		self.formLayout = QtGui.QFormLayout(self)
		
		#self.doubleSpinBox_timerange = QtGui.QDoubleSpinBox(self)
		#self.doubleSpinBox_timerange.setDecimals(1)
		#self.doubleSpinBox_timerange.setMinimum(0.1)
		#self.doubleSpinBox_timerange.setMaximum(1000.0)
		#self.doubleSpinBox_timerange.setProperty("value", DEFAULT_TIMERANGE)
		#self.doubleSpinBox_timerange.setObjectName("doubleSpinBox_timerange")
		#self.doubleSpinBox_timerange.setSuffix(" s")

		#self.formLayout.addRow("Time range:", self.doubleSpinBox_timerange)
		self.formLayout.addRow("No settings for the levels.", None)
		
		self.setLayout(self.formLayout)

		#self.connect(self.doubleSpinBox_timerange, QtCore.SIGNAL('valueChanged(double)'), self.parent().timerangechanged)

	# method
	def saveState(self, settings):
		#settings.setValue("timeRange", self.doubleSpinBox_timerange.value())
		return

	# method
	def restoreState(self, settings):
		#(timeRange, ok) = settings.value("timeRange", DEFAULT_TIMERANGE).toDouble()
		#self.doubleSpinBox_timerange.setValue(timeRange)
		return

########NEW FILE########
__FILENAME__ = logger
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtCore

class Logger(QtCore.QObject):
	
	logChanged = QtCore.pyqtSignal()

	def __init__(self):
		QtCore.QObject.__init__(self)
		
		self.count = 0
		self.log = ""

	# push some text to the log
	def push(self, text):
		if len(self.log)==0:
			self.log = "[0] %s" %text
		else:
			self.log = "%s\n[%d] %s" %(self.log, self.count, text)
		self.count += 1
		self.logChanged.emit()

	# return the current log
	def text(self):
		return self.log


# simple logger that prints to the console
class PrintLogger:
	# push some text to the log
	def push(self, text):
		print text

	# return the current log
	def text(self):
		return ""

########NEW FILE########
__FILENAME__ = logwidget
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2013 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtCore, QtGui

class LogWidget(QtGui.QWidget):
	def __init__(self, parent, logger):
		QtGui.QWidget.__init__(self, parent)

		self.logger = logger

		self.setObjectName("tab_log")

		self.log_scrollarea = QtGui.QScrollArea(self)
		self.log_scrollarea.setWidgetResizable(True)
		self.log_scrollarea.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
		self.log_scrollarea.setObjectName("log_scrollArea")

		self.log_scrollAreaWidgetContents = QtGui.QWidget(self.log_scrollarea)
		self.log_scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 87, 220))
		self.log_scrollAreaWidgetContents.setStyleSheet("""QWidget { background: white }""")
		self.log_scrollAreaWidgetContents.setObjectName("log_scrollAreaWidgetContents")
		self.log_scrollarea.setWidget(self.log_scrollAreaWidgetContents)

		self.LabelLog = QtGui.QLabel(self.log_scrollAreaWidgetContents)
		self.LabelLog.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
		self.LabelLog.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
		self.LabelLog.setObjectName("LabelLog")

		self.log_layout = QtGui.QVBoxLayout(self.log_scrollAreaWidgetContents)
		self.log_layout.setObjectName("log_layout")
		self.log_layout.addWidget(self.LabelLog)

		self.tab_log_layout = QtGui.QGridLayout(self)
		self.tab_log_layout.addWidget(self.log_scrollarea)

		self.logger.logChanged.connect(self.log_changed)
		self.log_scrollarea.verticalScrollBar().rangeChanged.connect(self.log_scroll_range_changed)


	# slot
	# update the log widget with the new log content
	def log_changed(self):
		self.LabelLog.setText(self.logger.text())
	
	# slot
	# scroll the log widget so that the last line is visible
	def log_scroll_range_changed(self, min, max):
		scrollbar = self.log_scrollarea.verticalScrollBar()
		scrollbar.setValue(max)

########NEW FILE########
__FILENAME__ = octavespectrum
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui
from numpy import log10, array, arange, where
from friture.logger import PrintLogger
from friture.histplot import HistPlot
from friture.octavespectrum_settings import (OctaveSpectrum_Settings_Dialog, # settings dialog
                                             DEFAULT_SPEC_MIN,
                                             DEFAULT_SPEC_MAX,
                                             DEFAULT_WEIGHTING,
                                             DEFAULT_BANDSPEROCTAVE,
                                             DEFAULT_BANDSPEROCTAVE_INDEX,
                                             DEFAULT_RESPONSE_TIME,
                                             DEFAULT_RESPONSE_TIME_INDEX)

from friture.filter import (octave_filter_bank_decimation, octave_frequencies,
                            octave_filter_bank_decimation_filtic, NOCTAVE)

from friture.exp_smoothing_conv import pyx_exp_smoothed_value

from friture import generated_filters

from friture.audiobackend import SAMPLING_RATE

import friture.renard as renard

SMOOTH_DISPLAY_TIMER_PERIOD_MS = 25

STYLESHEET = """
QwtPlotCanvas {
	border: 1px solid gray;
	border-radius: 2px;
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
	stop: 0 #E0E0E0, stop: 0.5 #FFFFFF);
}
"""

class OctaveSpectrum_Widget(QtGui.QWidget):
	def __init__(self, parent, logger = PrintLogger()):
		QtGui.QWidget.__init__(self, parent)

		self.logger = logger
		self.audiobuffer = None

		self.setObjectName("Spectrum_Widget")
		self.gridLayout = QtGui.QGridLayout(self)
		self.gridLayout.setObjectName("gridLayout")
		self.PlotZoneSpect = HistPlot(self, self.logger)
		self.PlotZoneSpect.setObjectName("PlotZoneSpect")
		self.gridLayout.addWidget(self.PlotZoneSpect, 0, 0, 1, 1)

		self.setStyleSheet(STYLESHEET)
				
		self.spec_min = DEFAULT_SPEC_MIN
		self.spec_max = DEFAULT_SPEC_MAX
		self.weighting = DEFAULT_WEIGHTING
		self.response_time = DEFAULT_RESPONSE_TIME
		
		self.PlotZoneSpect.setspecrange(self.spec_min, self.spec_max)
		self.PlotZoneSpect.setweighting(self.weighting)
		
		self.filters = octave_filters(DEFAULT_BANDSPEROCTAVE)
		#self.bankbuffers = [RingBuffer() for band in range(0, DEFAULT_BANDSPEROCTAVE*NOCTAVE)]
		self.dispbuffers = [0]*DEFAULT_BANDSPEROCTAVE*NOCTAVE
		
		# set kernel and parameters for the smoothing filter
		self.setresponsetime(self.response_time)

		# initialize the settings dialog
		self.settings_dialog = OctaveSpectrum_Settings_Dialog(self, self.logger)

	# method
	def set_buffer(self, buffer):
		self.audiobuffer = buffer

	def compute_kernels(self, alphas, Ns):
		kernels = []
		for alpha, N in zip(alphas, Ns):
			kernels += [(1.-alpha)**arange(N-1, -1, -1)]
		return kernels

	def get_kernel(self, kernel, N):
		return 

	def get_conv(self, kernel, data):
		return kernel*data

	def exp_smoothed_value(self, kernel, alpha, data, previous):
		N = len(data)
		if N == 0:
			return previous
		else:
			value = alpha * (kernel[-N:]*data).sum() + previous*(1.-alpha)**N
			return value
	
	# method
	def update(self):
		if not self.isVisible():
		    return
		
		#get the fresh data
		floatdata = self.audiobuffer.newdata()

		#the behaviour of the filters functions is sometimes
		#unexpected when they are called on empty arrays
		if floatdata.shape[1] == 0:
			return

		# for now, take the first channel only
		floatdata = floatdata[0,:]

		#compute the filters' output
		y, decs_unused = self.filters.filter(floatdata)
		
		#push to the ring buffer
		#for bankbuffer, bankdata in zip(self.bankbuffers, y):
		#	bankbuffer.push(bankdata**2)
		
		#for bankbuffer, bankdata, dec in zip(self.bankbuffers, y, decs):
			#bankbuffer.push(bankdata**2)
			
			##an exponential smoothing filter is a simple IIR filter
			##s_i = alpha*x_i + (1-alpha)*s_{i-1}
			##we compute alpha so that the N most recent samples represent 100*w percent of the output
			#w = 0.65
			#N = time*SAMPLING_RATE/dec
			#alpha = 1. - (1.-w)**(1./(N+1))
			##filter coefficient
			#forward = [alpha]
			#feedback = [1., -(1. - alpha)]
			#filt, zf = lfilter(forward, feedback, bankdata**2, zi=bankbuffer.data(1))
			#bankbuffer.push(filt)
			#sp += [bankbuffer.data(1)[0]]
			
			#bankbuffer.push(bankdata**2)
			#sp += [self.exp_smoothed_value(time, dec, bankbuffer)]

		#compute the widget data
		#sp = [self.exp_smoothed_value(kernel, alpha, bankdata**2, old) for bankdata, kernel, alpha, old in zip(y, self.kernels, self.alphas, self.dispbuffers)]
		sp = [pyx_exp_smoothed_value(kernel, alpha, bankdata**2, old) for bankdata, kernel, alpha, old in zip(y, self.kernels, self.alphas, self.dispbuffers)] 
		#store result for next computation
		self.dispbuffers = sp

		#un-weighted moving average
		#sp = [bankbuffer.data(time*SAMPLING_RATE/dec).mean() for bankbuffer, dec in zip(self.bankbuffers, decs)]
		
		sp = array(sp)
		
		# Note: the following is largely suboptimal since the filter outputs
		# are computed several times on the same signal...
		#floatdata = self.audiobuffer.data(time*SAMPLING_RATE)
		#y, dec = self.filters.filter(floatdata)
		#sp = [(bank**2).mean() for bank in y]
		#sp = array(sp)[::-1]

		#brute force without decimation
		#y_nodec = octave_filter_bank(self.b, self.a, floatdata)
		#sp_nodec = (y_nodec**2).mean(axis=1)
		
		if self.weighting is 0:
			w = 0.
		elif self.weighting is 1:
			w = self.filters.A
		elif self.weighting is 2:
			w = self.filters.B
		else:
			w = self.filters.C
		
		epsilon = 1e-30
		db_spectrogram = 10*log10(sp + epsilon) + w
		self.PlotZoneSpect.setdata(self.filters.flow, self.filters.fhigh, self.filters.f_nominal, db_spectrogram)

	def setmin(self, value):
		self.spec_min = value
		self.PlotZoneSpect.setspecrange(self.spec_min, self.spec_max)
	
	def setmax(self, value):
		self.spec_max = value
		self.PlotZoneSpect.setspecrange(self.spec_min, self.spec_max)

	def setweighting(self, weighting):
		self.weighting = weighting
		self.PlotZoneSpect.setweighting(weighting)

	def setresponsetime(self, response_time):
		#time = SMOOTH_DISPLAY_TIMER_PERIOD_MS/1000. #DISPLAY
		#time = 0.025 #IMPULSE setting for a sound level meter
		#time = 0.125 #FAST setting for a sound level meter
		#time = 1. #SLOW setting for a sound level meter
		self.response_time = response_time
		
		# an exponential smoothing filter is a simple IIR filter
		# s_i = alpha*x_i + (1-alpha)*s_{i-1}
		#we compute alpha so that the N most recent samples represent 100*w percent of the output
		w = 0.65
		decs = self.filters.get_decs()
		ns = [self.response_time*SAMPLING_RATE/dec for dec in decs]
		Ns = [2*4096/dec for dec in decs]
		self.alphas = [1. - (1.-w)**(1./(n+1)) for n in ns]
		#print ns, Ns
		self.kernels = self.compute_kernels(self.alphas, Ns)

	def setbandsperoctave(self, bandsperoctave):
		self.filters.setbandsperoctave(bandsperoctave)
		#recreate the ring buffers
		#self.bankbuffers = [RingBuffer() for band in range(0, bandsperoctave*NOCTAVE)]
		self.dispbuffers = [0]*bandsperoctave*NOCTAVE
		# reset kernel and parameters for the smoothing filter
		self.setresponsetime(self.response_time)

	def settings_called(self, checked):
		self.settings_dialog.show()
	
	def saveState(self, settings):
		self.settings_dialog.saveState(settings)

	def restoreState(self, settings):
		self.settings_dialog.restoreState(settings)

class octave_filters():
	def __init__(self, bandsperoctave):
		[self.bdec, self.adec] = generated_filters.params['dec']
		
		self.setbandsperoctave(bandsperoctave)

	def filter(self, floatdata):
		#y, dec, zfs = octave_filter_bank_decimation(self.bdec, self.adec, self.boct, self.aoct, floatdata)
		y, dec, zfs = octave_filter_bank_decimation(self.bdec, self.adec,
                                                                   self.boct, self.aoct,
                                                                   floatdata, zis=self.zfs)
		#y, zfs = octave_filter_bank(self.b_nodec, self.a_nodec, floatdata); dec = [1.]*len(y)
		#y, zfs = octave_filter_bank(self.b_nodec, self.a_nodec, floatdata, zis=self.zfs); dec = [1.]*len(y)
		
		self.zfs = zfs
		
		return y, dec
	
	def get_decs(self):
		#decs = [1.]*self.nbands
		decs = [2**j for j in range(0, NOCTAVE)[::-1] for i in range(0, self.bandsperoctave)]
		
		return decs
	
	def setbandsperoctave(self, bandsperoctave):
		self.bandsperoctave = bandsperoctave
		self.nbands = NOCTAVE*self.bandsperoctave
		self.fi, self.flow, self.fhigh = octave_frequencies(self.nbands, self.bandsperoctave)
		[self.boct, self.aoct, fi, flow, fhigh] = generated_filters.params['%d' %bandsperoctave]

		#z, p, k = tf2zpk(self.bdec, self.adec)
		#print "poles", p, abs(p)**2
		#print "zeros", z, abs(z)**2
		#for b, a in zip(self.boct, self.aoct):
			#z, p, k = tf2zpk(b, a)
			#print "poles", p, abs(p)**2
			#print "zeros", z, abs(z)**2
			
		#[self.b_nodec, self.a_nodec, fi, fl, fh] = octave_filters(self.nbands, self.bandsperoctave)
		
		f = self.fi
		Rc = 12200.**2*f**2 / ((f**2 + 20.6**2)*(f**2 + 12200.**2))
		Rb = 12200.**2*f**3 / ((f**2 + 20.6**2)*(f**2 + 12200.**2)*((f**2 + 158.5**2)**0.5))
		Ra = 12200.**2*f**4 / ((f**2 + 20.6**2)*(f**2 + 12200.**2)*((f**2 + 107.7**2)**0.5) * ((f**2 + 737.9**2)**0.5))         
		self.C = 0.06 + 20.*log10(Rc)
		self.B = 0.17 + 20.*log10(Rb)
		self.A = 2.0  + 20.*log10(Ra)
		#self.zfs = None
		self.zfs = octave_filter_bank_decimation_filtic(self.bdec, self.adec, self.boct, self.aoct)

		if bandsperoctave == 1:
			basis = renard.R5
		elif bandsperoctave == 3:
			basis = renard.R10
		elif bandsperoctave == 6:
			basis = renard.R20
		elif bandsperoctave == 12:
			basis = renard.R40
		elif bandsperoctave == 24:
			basis = renard.R80
		else:
			raise Exception("Unknown bandsperoctave: %d" %(bandsperoctave))

		# search the index of 1 kHz, the reference
		i = where(self.fi == 1000.)[0][0]

		# build the frequency scale
		self.f_nominal = []

		k = 0
		while len(self.f_nominal) < len(self.fi) - i:
			self.f_nominal += ["{0:.{width}f}k".format(10**k*f, width=2-k) for f in basis]
			k += 1
		self.f_nominal = self.f_nominal[:len(self.fi) - i]

		k = 0
		while len(self.f_nominal) < len(self.fi):
			self.f_nominal = ["%d" %(10**(2-k)*f) for f in basis] + self.f_nominal
			k += 1
		self.f_nominal = self.f_nominal[-len(self.fi):]

		
########NEW FILE########
__FILENAME__ = octavespectrum_settings
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore

# shared with octavespectrum.py
DEFAULT_SPEC_MIN = -80
DEFAULT_SPEC_MAX = -20
DEFAULT_WEIGHTING = 0 #None
DEFAULT_BANDSPEROCTAVE = 3
DEFAULT_BANDSPEROCTAVE_INDEX = 1
DEFAULT_RESPONSE_TIME = 1.
DEFAULT_RESPONSE_TIME_INDEX = 3

class OctaveSpectrum_Settings_Dialog(QtGui.QDialog):
	def __init__(self, parent, logger):
		QtGui.QDialog.__init__(self, parent)
		
		self.logger = logger
		
		self.setWindowTitle("Octave Spectrum settings")
		
		self.formLayout = QtGui.QFormLayout(self)

		self.comboBox_bandsperoctave = QtGui.QComboBox(self)
		self.comboBox_bandsperoctave.setObjectName("comboBox_bandsperoctave")
		self.comboBox_bandsperoctave.addItem("1")
		self.comboBox_bandsperoctave.addItem("3")
		self.comboBox_bandsperoctave.addItem("6")
		self.comboBox_bandsperoctave.addItem("12")
		self.comboBox_bandsperoctave.addItem("24")
		self.comboBox_bandsperoctave.setCurrentIndex(DEFAULT_BANDSPEROCTAVE_INDEX)

		self.spinBox_specmin = QtGui.QSpinBox(self)
		self.spinBox_specmin.setKeyboardTracking(False)
		self.spinBox_specmin.setMinimum(-200)
		self.spinBox_specmin.setMaximum(200)
		self.spinBox_specmin.setProperty("value", DEFAULT_SPEC_MIN)
		self.spinBox_specmin.setObjectName("spinBox_specmin")
		self.spinBox_specmin.setSuffix(" dB")

		self.spinBox_specmax = QtGui.QSpinBox(self)
		self.spinBox_specmax.setKeyboardTracking(False)
		self.spinBox_specmax.setMinimum(-200)
		self.spinBox_specmax.setMaximum(200)
		self.spinBox_specmax.setProperty("value", DEFAULT_SPEC_MAX)
		self.spinBox_specmax.setObjectName("spinBox_specmax")
		self.spinBox_specmax.setSuffix(" dB")
		
		self.comboBox_weighting = QtGui.QComboBox(self)
		self.comboBox_weighting.setObjectName("weighting")
		self.comboBox_weighting.addItem("None")
		self.comboBox_weighting.addItem("A")
		self.comboBox_weighting.addItem("B")
		self.comboBox_weighting.addItem("C")
		self.comboBox_weighting.setCurrentIndex(DEFAULT_WEIGHTING)
		
		self.comboBox_response_time = QtGui.QComboBox(self)
		self.comboBox_response_time.setObjectName("response_time")
		self.comboBox_response_time.addItem("25 ms (Impulse)")
		self.comboBox_response_time.addItem("125 ms (Fast)")
		self.comboBox_response_time.addItem("300 ms")
		self.comboBox_response_time.addItem("1s (Slow)")
		self.comboBox_response_time.setCurrentIndex(DEFAULT_RESPONSE_TIME_INDEX)

		self.formLayout.addRow("Bands per octave:", self.comboBox_bandsperoctave)
		self.formLayout.addRow("Min:", self.spinBox_specmin)
		self.formLayout.addRow("Max:", self.spinBox_specmax)
		self.formLayout.addRow("Middle-ear weighting:", self.comboBox_weighting)
		self.formLayout.addRow("Response time:", self.comboBox_response_time)
		
		self.setLayout(self.formLayout)

		self.connect(self.comboBox_bandsperoctave, QtCore.SIGNAL('currentIndexChanged(int)'), self.bandsperoctavechanged)
		self.connect(self.spinBox_specmin, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmin)
		self.connect(self.spinBox_specmax, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmax)
		self.connect(self.comboBox_weighting, QtCore.SIGNAL('currentIndexChanged(int)'), self.parent().setweighting)
		self.connect(self.comboBox_response_time, QtCore.SIGNAL('currentIndexChanged(int)'), self.responsetimechanged)

	# slot
	def bandsperoctavechanged(self, index):
		bandsperoctave = 3*2**(index-1) if index >= 1 else 1
		self.logger.push("bandsperoctavechanged slot %d %d" %(index, bandsperoctave))
		self.parent().setbandsperoctave(bandsperoctave)

	# slot
	def responsetimechanged(self, index):
		if index == 0:
			response_time = 0.025
		elif index == 1:
			response_time = 0.125
		elif index == 2:
			response_time = 0.3
		elif index == 3:
			response_time = 1.
		self.logger.push("responsetimechanged slot %d %d" %(index, response_time))
		self.parent().setresponsetime(response_time)

	# method
	def saveState(self, settings):
		settings.setValue("bandsPerOctave", self.comboBox_bandsperoctave.currentIndex())
		settings.setValue("Min", self.spinBox_specmin.value())
		settings.setValue("Max", self.spinBox_specmax.value())
		settings.setValue("weighting", self.comboBox_weighting.currentIndex())
		settings.setValue("response_time", self.comboBox_response_time.currentIndex())

	# method
	def restoreState(self, settings):
		(bandsPerOctave, ok) = settings.value("bandsPerOctave", DEFAULT_BANDSPEROCTAVE_INDEX).toInt()
		self.comboBox_bandsperoctave.setCurrentIndex(bandsPerOctave)
		(colorMin, ok) = settings.value("Min", DEFAULT_SPEC_MIN).toInt()
		self.spinBox_specmin.setValue(colorMin)
		(colorMax, ok) = settings.value("Max", DEFAULT_SPEC_MAX).toInt()
		self.spinBox_specmax.setValue(colorMax)
		(weighting, ok) = settings.value("weighting", DEFAULT_WEIGHTING).toInt()
		self.comboBox_weighting.setCurrentIndex(weighting)
		(response_time_index, ok) = settings.value("response_time", DEFAULT_RESPONSE_TIME_INDEX).toInt()
		self.comboBox_response_time.setCurrentIndex(response_time_index)

########NEW FILE########
__FILENAME__ = online_linear_2D_resampler
# -*- coding: utf-8 -*-
"""
Created on Sat Apr 21 16:12:12 2012

@author: timothee
"""

import numpy as np
from friture.linear_interp import pyx_linear_interp_2D

class Online_Linear_2D_resampler:
    def __init__(self, interp_factor_L=1, decim_factor_M=1, height=1):
        self.interp_factor_L = interp_factor_L
        self.decim_factor_M  = decim_factor_M
        self.resampling_ratio = float(interp_factor_L)/decim_factor_M
        
        self.height = height        
        
        self.orig_index = 0.
        self.resampled_index = 0.
                
        self.old_data = np.zeros((self.height))
        
        self.resampled_data = np.zeros((self.height, 1))
    
    def set_ratio(self, interp_factor_L, decim_factor_M):
        if self.interp_factor_L <> interp_factor_L or self.decim_factor_M <> decim_factor_M:
            self.interp_factor_L = interp_factor_L
            self.decim_factor_M  = decim_factor_M
            self.resampling_ratio = float(interp_factor_L)/decim_factor_M
            
            self.orig_index = 0.
            self.resampled_index = 0.

    def set_height(self, height):
        if self.height <> height:
            self.height = height        
            
            self.orig_index = 0.
            self.resampled_index = 0.
                    
            self.old_data = np.zeros((self.height))
            self.resampled_data = np.zeros((self.height, self.resampled_data.shape[1]))
    
    def processable(self, m):
        return int(np.ceil((self.orig_index + m - (self.resampled_index + self.resampling_ratio))/self.resampling_ratio))
    
    # will return as much resampled data as possible
    def process(self, data):        
        self.orig_index += 1.
        n = int(np.ceil((self.orig_index - (self.resampled_index + self.resampling_ratio))/self.resampling_ratio))
        
        if self.resampled_data.shape[1] < n:
            self.resampled_data = np.zeros((self.height, n))
        
        self.resampled_index = pyx_linear_interp_2D(self.resampled_data, data, self.old_data, self.orig_index, self.resampled_index, self.resampling_ratio, n)
        
        # shift
        self.old_data = data
        
        return self.resampled_data[:, :n]

########NEW FILE########
__FILENAME__ = qsynthmeter
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2004-2007, rncbc aka Rui Nuno Capela.
# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http:#www.gnu.org/licenses/>.

from PyQt4 import QtCore, QtGui
from numpy import log10

# Meter level limits (in dB).
MAXDB = +3.
MINDB = -70.

PEAK_DECAY_RATE = 1.0 - 3E-6

# Number of cycles the peak stays on hold before fall-off.
PEAK_FALLOFF = 32 # default : 16


#----------------------------------------------------------------------------
# MeterScale -- Meter bridge scale widget.

class MeterScale(QtGui.QWidget):
	SEGMENTS_LEFT = 0
	SEGMENTS_BOTH  = 1

	def __init__(self, meter, segmentsConf = SEGMENTS_LEFT):
		QtGui.QWidget.__init__(self, meter)
		self.meter = meter
		self.lastY = 0
	
		self.segmentsConf = segmentsConf

		self.setMinimumWidth(16)
		#self.setBackgroundRole(QPalette.Mid)

		self.setFont(QtGui.QFont(self.font().family(), 6))

	# Draw IEC scale line and label
	# assumes labels drawed from top to bottom
	def drawLineLabel(self, painter, y, label):
		currentY = self.height() - y
		scaleWidth = self.width()

		fontmetrics = painter.fontMetrics()
		labelMidHeight = fontmetrics.height()/2

		# only draw the dB label if we are not too close to the top,
		# or too close to the previous label
		if currentY < labelMidHeight or currentY > self.lastY + labelMidHeight:
			# if the text label is small enough, draw horizontal segments on the side
			if fontmetrics.width(label) < scaleWidth - 5:
				self.drawSegments(painter, currentY, scaleWidth)

			# draw the text label (## dB)
			painter.drawText(0, currentY - labelMidHeight, scaleWidth-1, fontmetrics.height(),
				QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter, label)

			self.lastY = currentY + 1

	# draw the horizontal segments next to the label
	def drawSegments(self, painter, y, scaleWidth):
		if self.segmentsConf in [self.SEGMENTS_LEFT, self.SEGMENTS_BOTH]:
			painter.drawLine(0, y, 2, y)

		if self.segmentsConf == self.SEGMENTS_BOTH:
			# if there are several meters, the scale is in-between
			# so the segments need to be drawn on both sides
			if self.meter.getPortCount() > 1:
				painter.drawLine(scaleWidth - 3, y, scaleWidth - 1, y)

	def setSegments(self, conf):
		self.segmentsConf = conf 

	def paintEvent (self, event):
		painter = QtGui.QPainter(self)

		self.lastY = 0

		painter.setPen(self.palette().mid().color().dark(200))

		for dB in [0, -3, -6, -10, -20, -30, -40, -50, -60]:
			self.drawLineLabel(painter, self.meter.iec_scale(dB), str(abs(dB)))


#----------------------------------------------------------------------------
# BallisticPeak -- Peak with a value and a color, that holds then decays

class BallisticPeak:
	def __init__(self, meter):
		self.meter = meter # used to reach IEC colors and levels
		self.peakValue = 0 # in pixels
		self.peakHoldCounter = 0
		self.peakDecayFactor = PEAK_DECAY_RATE
		self.peakColor       = self.meter.Color6dB

	def value(self):
		return self.peakValue

	def color(self):
		return self.peakColor

	def reset(self):
		self.peakValue = 0		

	def refresh(self, value):
		# peak-hold-then-decay mechanism
		peakValue = self.peakValue
		if peakValue < value:
			# the value is higher than the peak, the peak must follow the value
			peakValue = value
			self.peakHoldCounter = 0 # reset the hold 
			self.peakDecayFactor = PEAK_DECAY_RATE
			self.peakColor = self.meter.Color10dB #iLevel
			while self.peakColor > self.meter.ColorOver and peakValue >= self.meter.iec_level(self.peakColor):
				self.peakColor -= 1
		elif self.peakHoldCounter + 1 > self.meter.peakFalloff():
			peakValue = self.peakDecayFactor * float(peakValue)
			if self.peakValue < value:
				peakValue = value
			else:
				#if peakValue < self.meter.iec_level(self.meter.Color10dB):
					#self.peakColor = self.meter.Color6dB
				self.peakDecayFactor *= self.peakDecayFactor
		self.peakHoldCounter += 1

		self.peakValue  = peakValue

		return peakValue

#----------------------------------------------------------------------------
# MeterValue -- Meter bridge value widget.
class MeterValue(QtGui.QFrame):
	
	def __init__(self, meter):
		QtGui.QFrame.__init__(self, meter)
		
		self.meter      = meter
		self.dBValue    = 0.0
		self.pixelValue = 0
		self.peak = BallisticPeak(self.meter)

		# a second indicator used when displaying both RMS and peak info
		# on the same meter
		self.dBValue2 = None
		self.pixelValue2 = 0

		self.paint_time = 0.

		self.setMinimumWidth(12)
		self.setBackgroundRole(QtGui.QPalette.NoRole)

	# Reset peak holder.
	def peakReset(self):
		self.peak.reset()

	def setValue(self, value, secondaryValue = None):
		self.dBValue = value
		self.dBValue = max(self.dBValue, MINDB)
		self.dBValue = min(self.dBValue, MAXDB)

		self.dBValue2 = secondaryValue
		if self.dBValue2 <> None:
			self.dBValue2 = max(self.dBValue2, MINDB)
			self.dBValue2 = min(self.dBValue2, MAXDB)

		self.refresh()

	def refresh(self):
		self.pixelValue = self.meter.iec_scale(self.dBValue)
		if self.dBValue2 <> None:
			self.pixelValue2 = self.meter.iec_scale(self.dBValue2)
			self.peak.refresh(max(self.pixelValue, self.pixelValue2))
		else:
			self.peak.refresh(self.pixelValue)
		self.update()

	def paintEvent(self, event):
		t = QtCore.QTime()
		t.start()
		
		painter = QtGui.QPainter(self)

		w = self.width()
		h = self.height()

		if self.isEnabled():
			painter.fillRect(0, 0, w, h,
				self.meter.color(self.meter.ColorBack))
			y = self.meter.iec_level(self.meter.Color0dB)
			painter.setPen(self.meter.color(self.meter.ColorFore))
			painter.drawLine(0, h - y, w, h - y)
		else:
			painter.fillRect(0, 0, w, h, self.palette().dark().color())

		if self.pixelValue2 <> None:
			painter.drawPixmap(0, h - self.pixelValue2,
				self.meter.darkPixmap(), 0, h - self.pixelValue2, w, self.pixelValue2 + 1)

		painter.drawPixmap(0, h - self.pixelValue,
			self.meter.pixmap(), 0, h - self.pixelValue, w, self.pixelValue + 1)

		# draw the peak line
		painter.setPen(self.meter.color(self.peak.color()))
		painter.drawLine(0, h - self.peak.value(), w, h - self.peak.value())
		
		self.paint_time = (95.*self.paint_time + 5.*t.elapsed())/100.

	def resizeEvent(self, resizeEvent):
		self.peak.reset()

		QtGui.QWidget.resizeEvent(self, resizeEvent)
		#QtGui.QWidget.repaint(True)


#----------------------------------------------------------------------------
# qsynthMeter -- Meter bridge slot widget.

class qsynthMeter(QtGui.QFrame):
	
	def __init__(self, parent):
		QtGui.QFrame.__init__(self, parent)
		
		self.portCount  = 1

		self.IECScale = IECScale()

		self.levelPixmap = QtGui.QPixmap()
		self.darkLevelPixmap = QtGui.QPixmap()

		# Peak falloff mode setting (0=no peak falloff).
		self.peakFalloffCycleCount = PEAK_FALLOFF
			
		self.ColorOver	= 0
		self.Color0dB	= 1
		self.Color3dB	= 2
		self.Color6dB	= 3
		self.Color10dB	= 4
		self.LevelCount	= 5
		self.ColorBack	= 5
		self.ColorFore	= 6
		self.ColorCount	= 7
		
		self.iecLevels = [0]*self.LevelCount

		self.colors = [QtGui.QColor(0, 0, 0)]*self.ColorCount
		self.colors[self.ColorOver] = QtGui.QColor(240,   0, 20)
		self.colors[self.Color0dB]  = QtGui.QColor(240, 160, 20)
		self.colors[self.Color3dB]  = QtGui.QColor(220, 220, 20)
		self.colors[self.Color6dB]  = QtGui.QColor(160, 220, 20)
		self.colors[self.Color10dB] = QtGui.QColor( 40, 160, 40)
		self.colors[self.ColorBack] = QtGui.QColor( 20,  40, 20)
		self.colors[self.ColorFore] = QtGui.QColor( 80,  80, 80)

		self.setBackgroundRole(QtGui.QPalette.NoRole)

		self.HBoxLayout = QtGui.QHBoxLayout()
		self.HBoxLayout.setMargin(0)
		self.HBoxLayout.setSpacing(0)
		self.setLayout(self.HBoxLayout)

		self.build()

		self.setSizePolicy(
			QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding))

	# build the widget layout depending on the port count.
	def build(self):
		# delete all elements of the current layout
		while self.HBoxLayout.count() > 0:
			item = self.HBoxLayout.takeAt(0)
			if not item:
				continue

			w = item.widget()
			if w:
				w.deleteLater()

		if self.portCount > 0:
			self.singleMeters = []
			self.singleScales = []

			if self.portCount == 1:
				self.singleMeters += [MeterValue(self)]
				self.HBoxLayout.addWidget(self.singleMeters[0])
				self.singleScales += [MeterScale(self, MeterScale.SEGMENTS_LEFT)]
				self.HBoxLayout.addWidget(self.singleScales[0])
			elif self.portCount < 4:
				for portIndex in range(0, self.portCount):
					self.singleMeters += [MeterValue(self)]
					self.HBoxLayout.addWidget(self.singleMeters[portIndex])
					if portIndex < self.portCount - 1:
						self.singleScales += [MeterScale(self, MeterScale.SEGMENTS_BOTH)]
						self.HBoxLayout.addWidget(self.singleScales[portIndex])
			else:
				for portIndex in range(0, self.portCount):
					self.singleMeters += [MeterValue(self)]
					self.HBoxLayout.addWidget(self.singleMeters[portIndex])

					# insert one scale only
					if portIndex == 1:
						self.singleScales += [MeterScale(self, MeterScale.SEGMENTS_BOTH)]
						self.HBoxLayout.addWidget(self.singleScales[-1])
					else:
						# insert a spacer
						self.HBoxLayout.addSpacing(1)

			self.setMinimumSize(16 * self.portCount + 16 * len(self.singleScales), 120)
			self.setMaximumWidth(16 * self.portCount + 16 * len(self.singleScales))
		else: # zero meters
			self.setMinimumSize(2, 120)
			self.setMaximumWidth(4)

	# used by child widgets
	def iec_scale (self, dB ):
		return self.IECScale.iec_scale(dB)

	def iec_level (self, index):
		return self.iecLevels[index]

	def getPortCount (self):
		return self.portCount

	def setPortCount (self, count):
		self.portCount = count
		self.build()

	def setPeakFalloff ( self, peakFalloffCount ):
		self.peakFalloffCycleCount = peakFalloffCount

	def peakFalloff ( self ):
		return self.peakFalloffCycleCount

	# Reset peak holder.
	def peakReset (self):
		for port in range (0, self.portCount):
			self.singleMeters[port].peakReset()

	def pixmap (self):
	  	return self.levelPixmap

	def darkPixmap (self):
		return self.darkLevelPixmap

	def updatePixmap (self):
		w = self.width()
		h = self.height()

		grad = QtGui.QLinearGradient(0, 0, 0, h)
		grad.setColorAt(0.2, self.color(self.ColorOver))
		grad.setColorAt(0.3, self.color(self.Color0dB))
		grad.setColorAt(0.4, self.color(self.Color3dB))
		grad.setColorAt(0.6, self.color(self.Color6dB))
		grad.setColorAt(0.8, self.color(self.Color10dB))
		grad = QtGui.QLinearGradient(0, 0, 0, h)
		grad.setColorAt(0.0, QtGui.QColor(230,230,255))
		grad.setColorAt(0.7, QtGui.QColor(0,0,255))
		grad.setColorAt(1.0, QtGui.QColor(0,0,150))

		self.levelPixmap = QtGui.QPixmap(w, h)
		QtGui.QPainter(self.levelPixmap).fillRect(0, 0, w, h, grad);

		factor = 0#150
		darkGrad = QtGui.QLinearGradient(0, 0, 0, h)
		darkGrad.setColorAt(0.2, self.color(self.ColorOver).darker(factor))
		darkGrad.setColorAt(0.3, self.color(self.Color0dB).darker(factor))
		darkGrad.setColorAt(0.4, self.color(self.Color3dB).darker(factor))
		darkGrad.setColorAt(0.6, self.color(self.Color6dB).darker(factor))
		darkGrad.setColorAt(0.8, self.color(self.Color10dB).darker(factor))

		self.darkLevelPixmap = QtGui.QPixmap(w, h)
		QtGui.QPainter(self.darkLevelPixmap).fillRect(0, 0, w, h, darkGrad);


	def refresh (self):
		for iPort in range (0, self.portCount):
			self.singleMeters[iPort].refresh()

	def resizeEvent ( self, event ):
		self.IECScale.setHeight(0.95 * float(self.height()))

		self.iecLevels[self.Color0dB]  = self.iec_scale(  0.0)
		self.iecLevels[self.Color3dB]  = self.iec_scale( -3.0)
		self.iecLevels[self.Color6dB]  = self.iec_scale( -6.0)
		self.iecLevels[self.Color10dB] = self.iec_scale(-10.0)

		self.updatePixmap()

	def setValue ( self, port, value, secondaryValue = None):
		self.singleMeters[port].setValue(value, secondaryValue)
	
	def color ( self, index ):
		return self.colors[index]


# class to translate from dB to pixels with an IEC scaling
class IECScale:
	def __init__(self):
		self.height = 1.

	def setHeight(self, height):
		self.height = height

	def iec_scale (self, dB ):
		fDef = 1.

		if (dB < -70.0):
			fDef = 0.0
		elif (dB < -60.0):
			fDef = (dB + 70.0) * 0.0025
		elif (dB < -50.0):
			fDef = (dB + 60.0) * 0.005 + 0.025
		elif (dB < -40.0):
			fDef = (dB + 50.0) * 0.0075 + 0.075
		elif (dB < -30.0):
			fDef = (dB + 40.0) * 0.015 + 0.15
		elif (dB < -20.0):
			fDef = (dB + 30.0) * 0.02 + 0.3
		else: # if (dB < 0.0)
			fDef = (dB + 20.0) * 0.025 + 0.5

		return fDef * self.height

########NEW FILE########
__FILENAME__ = qwtopenglplot
#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""PyQt4 port of the opengl/hellogl example from Qt v4.x"""

import sys

from PyQt4 import QtCore, QtGui, QtOpenGL, Qt
import PyQt4.Qwt5 as Qwt
from friture.audiobackend import SAMPLING_RATE

try:
    from OpenGL import GL
except ImportError:
    app = QtGui.QApplication(sys.argv)
    QtGui.QMessageBox.critical(None, "OpenGL hellogl",
            "PyOpenGL must be installed to run this example.")
    sys.exit(1)

from numpy import zeros, ones, log10, hstack, array, floor, mean, where, rint, inf
import numpy as np

# The peak decay rates (magic goes here :).
PEAK_DECAY_RATE = 1.0 - 3E-6
# Number of cycles the peak stays on hold before fall-off.
PEAK_FALLOFF_COUNT = 32 # default : 16

class GLPlotWidget(QtGui.QWidget):
    def __init__(self, parent, sharedGLWidget, logger=None):
        super(GLPlotWidget, self).__init__()

        self.glWidget = GLWidget(self, sharedGLWidget)
        
        self.xmin = 0.1
        self.xmax = 1.
        self.ymin = 0.1
        self.ymax = 1.
        
        self.peaks_enabled = True
        self.peak = zeros((3,))
        self.peak_int = zeros((3,))
        self.peak_decay = ones((3,))*PEAK_DECAY_RATE
        
        self.x1 = array([0.1, 0.5, 1.])
        self.x2 = array([0.5, 1., 2.])
        self.y = array([0., 0., 0.])

        self.fmax = 1e3
        
        self.transformed_x1 = self.x1
        self.transformed_x2 = self.x2
        
        self.baseline_transformed = False
        self.baseline = 0.
        
        self.topDist = 0
        self.bottomDist = 0
        self.leftDist = 0
        self.rightDist = 0
        
        self.needtransform = False

        self.verticalScaleEngine = Qwt.QwtLinearScaleEngine()

        self.verticalScale = Qwt.QwtScaleWidget(self)
        vtitle = Qwt.QwtText("PSD (dB)")
        vtitle.setFont(QtGui.QFont(8))
        self.verticalScale.setTitle(vtitle)
        self.verticalScale.setScaleDiv(self.verticalScaleEngine.transformation(),
                                  self.verticalScaleEngine.divideScale(self.ymin, self.ymax, 8, 5))
        self.verticalScale.setMargin(2)

        self.logx = False
        self.horizontalScaleEngine = Qwt.QwtLinearScaleEngine()

        self.horizontalScale = Qwt.QwtScaleWidget(self)
        htitle = Qwt.QwtText("Frequency (Hz)")
        htitle.setFont(QtGui.QFont(8))
        self.horizontalScale.setTitle(htitle)
        self.horizontalScale.setScaleDiv(self.horizontalScaleEngine.transformation(),
                                  self.horizontalScaleEngine.divideScale(self.xmin, self.xmax, 8, 5))
        self.horizontalScale.setAlignment(Qwt.QwtScaleDraw.BottomScale)
        self.horizontalScale.setMargin(2)
        self.horizontalScale.setSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)

        plotLayout = QtGui.QGridLayout()
        plotLayout.setSpacing(0)
        plotLayout.setContentsMargins(0, 0, 0, 0)
        plotLayout.addWidget(self.verticalScale, 0, 0)
        plotLayout.addWidget(self.glWidget, 0, 1)
        plotLayout.addWidget(self.horizontalScale, 1, 1)
        
        self.setLayout(plotLayout)

    def setlinfreqscale(self):
        self.logx = False
        self.horizontalScaleEngine = Qwt.QwtLinearScaleEngine()
        self.horizontalScale.setScaleDiv(self.horizontalScaleEngine.transformation(),
                                         self.horizontalScaleEngine.divideScale(self.xmin, self.xmax, 8, 5))
        self.needtransform = True
        self.draw()

    def setlogfreqscale(self):
        self.logx = True
        self.horizontalScaleEngine = Qwt.QwtLog10ScaleEngine()
        self.horizontalScale.setScaleDiv(self.horizontalScaleEngine.transformation(),
                                         self.horizontalScaleEngine.divideScale(self.xmin, self.xmax, 8, 5))
        self.needtransform = True
        self.draw() 

    def setfreqrange(self, minfreq, maxfreq):
        self.xmin = minfreq
        self.xmax = maxfreq
        self.horizontalScale.setScaleDiv(self.horizontalScaleEngine.transformation(),
                                  self.horizontalScaleEngine.divideScale(self.xmin, self.xmax, 8, 5))
        self.needtransform = True
        self.draw()

    def setspecrange(self, spec_min, spec_max):
        self.ymin = spec_min
        self.ymax = spec_max
        self.verticalScale.setScaleDiv(self.verticalScaleEngine.transformation(),
                                  self.verticalScaleEngine.divideScale(self.ymin, self.ymax, 8, 5))
        self.needtransform = True        
        self.draw()
    
    def setweighting(self, weighting):
        if weighting is 0:
            title = "PSD (dB)"
        elif weighting is 1:
            title = "PSD (dB A)"
        elif weighting is 2:
            title = "PSD (dB B)"
        else:
            title = "PSD (dB C)"
        
        ytitle = Qwt.QwtText(title)
        ytitle.setFont(QtGui.QFont(8))
        self.verticalScale.setTitle(ytitle)
        self.needtransform = True
        self.draw()
    
    def setShowFreqLabel(self, showFreqLabel):
        self.glWidget.setShowFreqLabel(showFreqLabel)

    def set_peaks_enabled(self, enabled):
        self.peaks_enabled = enabled
    
    def set_baseline_displayUnits(self, baseline):
        self.baseline_transformed = False
        self.baseline = baseline

    def set_baseline_dataUnits(self, baseline):
        self.baseline_transformed = True
        self.baseline = baseline
    
    def xtransform(self, x):
        verticalDists = self.verticalScale.getBorderDistHint()
        horizontalDists = self.horizontalScale.getBorderDistHint()
        self.topDist = verticalDists[0]
        self.bottomDist = verticalDists[1]
        self.leftDist = horizontalDists[0]
        self.rightDist = horizontalDists[1]
        
        if self.logx:
            return (log10(x/self.xmin))*(self.glWidget.width() - self.leftDist - self.rightDist)/log10(self.xmax/self.xmin) + self.leftDist
        else:
            return (x - self.xmin)*(self.glWidget.width() - self.leftDist - self.rightDist)/(self.xmax - self.xmin) + self.leftDist

    def inverseXTransform(self, x):
        if self.logx:
            return 10**((x - self.leftDist)*log10(self.xmax/self.xmin)/(self.glWidget.width() - self.leftDist - self.rightDist))*self.xmin
        else:
            return (x - self.leftDist)*(self.xmax - self.xmin)/(self.glWidget.width() - self.leftDist - self.rightDist) + self.xmin

    def ytransform(self, y):
        return (y - self.ymin)*(self.glWidget.height() - self.topDist - self.bottomDist)/(self.ymax - self.ymin) + self.bottomDist - 1
    
    def inverseYTransform(self, y):
        return (y + 1. - self.bottomDist)*(self.ymax - self.ymin)/(self.glWidget.height() - self.topDist - self.bottomDist) + self.ymin
    
    def setdata(self, x, y, fmax):        
        x1 = zeros(x.shape)
        x2 = zeros(x.shape)
        x1[0] = 1e-10
        x1[1:] = (x[1:] + x[:-1])/2.
        x2[:-1] = x1[1:]
        x2[-1] = float(SAMPLING_RATE/2)
        
        if len(x1) <> len(self.x1):
            self.needtransform = True
            # save data for resizing
            self.x1 = x1
            self.x2 = x2
        
        # save data for resizing
        self.y = y
        self.fmax = fmax
        
        self.draw()
        
        # TODO :
        # - Fix peaks loss when resizing
        # - optimize if further needed

    def pre_tree_rebin(self, x1, x2):
        if len(x2) == 0:
            # enf of recursion !
            return x1, x2, 0
        
        n0 = max(where(x2 - x1 >= 0.5)[0])
        
        # leave untouched the frequency bins that span more than half a pixel
        # and first make sure that what will be left can be decimated by two
        rest = len(x2) - n0 - ((len(x2) - n0)//2)*2
        
        n0 += rest
        
        x1_0 = x1[:n0]
        x2_0 = x2[:n0]
        
        # decimate the rest
        x1_2 = x1[n0::2]
        x2_2 = x2[n0 + 1::2]
        
        # recursive !!
        x1_2, x2_2, n2 = self.pre_tree_rebin(x1_2, x2_2)
        
        if n2 == 0.:
            n = [n0]
        else:
            n = [n0] + [i*2 + n0 for i in n2]
            
        x1 = hstack((x1_0, x1_2))
        x2 = hstack((x2_0, x2_2))
        
        return x1, x2, n

    def tree_rebin(self, y, ns, N):
        y2 = zeros(N)

        n = 0
        for i in range(len(ns)-1):
            y3 = y[ns[i]:ns[i+1]]
            d = 2**i
            l = len(y3)/d
            y3.shape = (l, d)

            # Note: the FFT spectrum is mostly used to identify frequency content
            # ans _peaks_ are particularly interesting (e.g. feedback frequencies)
            # so we display the _max_ instead of the mean of each bin 
            #y3 = mean(y3, axis=1)
            #y3 = (y3[::2] + y3[1::2])*0.5
            
            y3 = np.max(y3, axis=1)

            y2[n:n+len(y3)] = y3
            n += l
        
        return y2

    def draw(self):
        if self.needtransform:
            # transform the coordinates only when needed
            x1 = self.xtransform(self.x1)
            x2 = self.xtransform(self.x2)
            
            if self.logx:
                self.transformed_x1, self.transformed_x2, n = self.pre_tree_rebin(x1, x2)
                self.n = [0] + n
                self.N = 0
                for i in range(len(self.n)-1):
                    self.N += (self.n[i+1] - self.n[i])/2**i

            else:
                self.transformed_x1 = x1
                self.transformed_x2 = x2
            
            xMajorTick = self.horizontalScaleEngine.divideScale(self.xmin, self.xmax, 8, 5).ticks(2)
            xMinorTick = self.horizontalScaleEngine.divideScale(self.xmin, self.xmax, 8, 5).ticks(0)
            yMajorTick = self.verticalScaleEngine.divideScale(self.ymin, self.ymax, 8, 5).ticks(2)
            yMinorTick = self.verticalScaleEngine.divideScale(self.ymin, self.ymax, 8, 5).ticks(0)                
            self.glWidget.setGrid(self.xtransform(array(xMajorTick)),
                                  self.xtransform(array(xMinorTick)),
                                  self.ytransform(array(yMajorTick)),
                                  self.ytransform(array(yMinorTick))
                                  )

            self.needtransform = False
        
        # for easier reading
        x1 = self.transformed_x1
        x2 = self.transformed_x2
        
        if self.logx:
            y = self.tree_rebin(self.y, self.n, self.N)
        else:
            n = floor(1./(x2[2] - x1[1]))
            if n>0:
                new_len = len(self.y)//n
                rest = len(self.y) - new_len*n
                
                new_y = self.y[:-rest]
                new_y.shape = (new_len, n)
                y = mean(new_y, axis = 1)
                
                x1 = x1[:-rest:n]
                x2 = x2[n::n]
            else:
                y = self.y

        if self.peaks_enabled:
            self.compute_peaks(y)
        
        transformed_y = self.ytransform(y)
        
        Ones = ones(x1.shape)
        Ones_shaded = Ones #.copy()
        # FIXME : the following would give a satisfying result if the
        # bins were one pixel wide at minimum => Need to to a rounding
        # to pixels
        #w = x2 - x1
        #i = where(w<1.)[0]
        #if len(i)>0:
        #    Ones_shaded[:i[0]:2] = 1.2            
        
        if self.peaks_enabled:
            transformed_peak = self.ytransform(self.peak)        
        
            n = x1.size

            # FIXME should be done conditionally to need_transform
            x1_with_peaks = zeros((2*n))
            x2_with_peaks = zeros((2*n))
            y_with_peaks = zeros((2*n))
            r_with_peaks = zeros((2*n))
            g_with_peaks = zeros((2*n))
            b_with_peaks = zeros((2*n))

            x1_with_peaks[:n] = x1
            x1_with_peaks[n:] = x1

            x2_with_peaks[:n] = x2
            x2_with_peaks[n:] = x2

            y_with_peaks[:n] = transformed_peak
            y_with_peaks[n:] = transformed_y

            r_with_peaks[:n] = 1.*Ones
            r_with_peaks[n:] = 0.*Ones

            g_with_peaks[:n] = 1. - self.peak_int
            g_with_peaks[n:] = 0.5*Ones_shaded

            b_with_peaks[:n] = 1. - self.peak_int
            b_with_peaks[n:] = 0.*Ones
        else:
            x1_with_peaks = x1
            x2_with_peaks = x2
            y_with_peaks = transformed_y
            r_with_peaks = 0.*Ones
            g_with_peaks = 0.5*Ones_shaded
            b_with_peaks = 0.*Ones
        
        if self.baseline_transformed:
            # used for dual channel response measurement
            baseline = self.ytransform(self.baseline)
        else:
            # used for single channel analysis
            baseline = self.baseline

        xmax = self.xtransform(self.fmax)
        self.glWidget.setfmax(xmax, self.fmax)

        self.setQuadData(x1_with_peaks, y_with_peaks, x2_with_peaks - x1_with_peaks, baseline, r_with_peaks, g_with_peaks, b_with_peaks)


    # redraw when the widget is resized to update coordinates transformations
    def resizeEvent(self, event):
        self.needtransform = True
        self.draw()
        
    def compute_peaks(self, y):
        if len(self.peak) <> len(y):
            y_ones = ones(y.shape)
            self.peak = y_ones*(-500.)
            self.peak_int = zeros(y.shape)
            self.peak_decay = y_ones * 20. * log10(PEAK_DECAY_RATE) * 5000

        mask1 = (self.peak < y)
        mask2 = (-mask1)
        mask2_a = mask2 * (self.peak_int < 0.2)
        mask2_b = mask2 * (self.peak_int >= 0.2)

        self.peak[mask1] = y[mask1]
        self.peak[mask2_a] = self.peak[mask2_a] + self.peak_decay[mask2_a]
		
        self.peak_decay[mask1] = 20. * log10(PEAK_DECAY_RATE) * 5000
        self.peak_decay[mask2_a] += 20. * log10(PEAK_DECAY_RATE) * 5000

        self.peak_int[mask1] = 1.
        self.peak_int[mask2_b] *= 0.975
  
    def setQuadData(self, x, y, w, baseline, r, g, b):
        h = y - baseline
        y = baseline
        
        n = x.shape[0]
    
        vertex = zeros((n,4,2))
        vertex[:,0,0] = x
        vertex[:,0,1] = y + h
        vertex[:,1,0] = x + w
        vertex[:,1,1] = y + h
        vertex[:,2,0] = x + w
        vertex[:,2,1] = y
        vertex[:,3,0] = x
        vertex[:,3,1] = y

        color = zeros((n,4,3))
        color[:,0,0] = r
        color[:,1,0] = r
        color[:,2,0] = r
        color[:,3,0] = r
        color[:,0,1] = g
        color[:,1,1] = g
        color[:,2,1] = g
        color[:,3,1] = g
        color[:,0,2] = b
        color[:,1,2] = b
        color[:,2,2] = b
        color[:,3,2] = b
        
        self.glWidget.setQuadData(vertex, color)


class GLWidget(QtOpenGL.QGLWidget):
    def __init__(self, parent, sharedGLWidget):
        super(GLWidget, self).__init__(parent, shareWidget=sharedGLWidget)

        self.lastPos = QtCore.QPoint()
        
        self.vertices = array([])
        self.colors = array([])
        
        self.xMajorTick = array([])
        self.xMinorTick = array([])
        self.yMajorTick = array([])
        self.yMinorTick = array([])

        self.ruler = False
        self.mousex = 0
        self.mousey = 0

        self.showFreqLabel = True
        self.xmax = 0
        self.fmax = 0.
        
        # use a cross cursor to easily select a point on the graph
        self.setCursor(Qt.Qt.CrossCursor)
        
        # instruct OpenGL not to paint a background for the widget
        # when QPainter.begin() is called.
        self.setAutoFillBackground(False)

        self.gridList = None

    def minimumSizeHint(self):
        return QtCore.QSize(50, 50)

    def sizeHint(self):
        return QtCore.QSize(400, 400)

    def initializeGL(self):
        return

    def setfmax(self, xmax, fmax):
        if xmax==inf or xmax==-inf:
            self.xmax = 0
        else:
            self.xmax = int(xmax)
        self.fmax = fmax

    def setShowFreqLabel(self, showFreqLabel):
        self.showFreqLabel = showFreqLabel
        # ask for update so the the label is actually erased or painted
        self.update()

    def setQuadData(self, vertices, colors):
        self.vertices = vertices
        self.colors = colors 

        self.update()

    def setGrid(self, xMajorTick, xMinorTick, yMajorTick, yMinorTick):
        self.xMajorTick = xMajorTick
        self.xMinorTick = xMinorTick
        self.yMajorTick = yMajorTick
        self.yMinorTick = yMinorTick

        self.updateGrid()

    def updateGrid(self):
        if self.gridList == None or self.gridList == 0:
            return

        w = self.width()
        h = self.height()
        
        GL.glNewList(self.gridList, GL.GL_COMPILE)

        self.qglColor(QtGui.QColor(Qt.Qt.gray))
        for x in self.xMajorTick:        
            GL.glBegin(GL.GL_LINES)
            GL.glVertex2f(x, 0)
            GL.glVertex2f(x, h)
            GL.glEnd()
        
        self.qglColor(QtGui.QColor(Qt.Qt.lightGray))
        for x in self.xMinorTick:        
            GL.glBegin(GL.GL_LINES)
            GL.glVertex2f(x, 0)
            GL.glVertex2f(x, h)
            GL.glEnd()
            
        self.qglColor(QtGui.QColor(Qt.Qt.gray))
        for y in self.yMajorTick:        
            GL.glBegin(GL.GL_LINES)
            GL.glVertex2f(0, y)
            GL.glVertex2f(w, y)
            GL.glEnd()
        
        #GL.glColor3f(0.5, 0.5, 0.5)
        #for y in self.yMinorTick:        
        #    GL.glBegin(GL.GL_LINES)
        #    GL.glVertex2f(0, y)
        #    GL.glVertex2f(w, y)
        #    GL.glEnd() 

        GL.glEndList()

    #def paintGL(self):
    def paintEvent(self, event):
        self.makeCurrent()
        
        GL.glMatrixMode(GL.GL_PROJECTION)
        GL.glPushMatrix()        
        
        GL.glShadeModel(GL.GL_SMOOTH) # for gradient rendering
        #GL.glDepthFunc(GL.GL_LESS) # The Type Of Depth Test To Do
        GL.glDisable(GL.GL_DEPTH_TEST) # we do 2D, we need no depth test !
        GL.glMatrixMode(GL.GL_PROJECTION)
        #GL.glEnable(GL.GL_CULL_FACE)
        
        # Clear The Screen And The Depth Buffer
        GL.glClearColor(1, 1, 1, 0)
        GL.glClear(GL.GL_COLOR_BUFFER_BIT) # | GL.GL_DEPTH_BUFFER_BIT)

        # Reset The View        
        self.setupViewport(self.width(), self.height())
        
        self.drawBackground()       
        self.drawGrid()        
        self.drawDataQuads()        
        self.drawRuler()                
        self.drawBorder()

        # revert our changes for cooperation with QPainter
        GL.glShadeModel(GL.GL_FLAT)
        GL.glEnable(GL.GL_DEPTH_TEST)
        
        GL.glMatrixMode(GL.GL_PROJECTION)
        GL.glPopMatrix()

        painter = QtGui.QPainter(self)
        self.drawTrackerText(painter)
        self.drawFreqMaxText(painter)

        painter.end()

    def drawDataQuads(self):
        # TODO: instead of Arrays, VBOs should be used here, as a large part of
        # the data does not have to be modified on every call (x coordinates,
        # green colored quads)
        
        # TODO: If the arrays could be drawn as SHORTs istead of FLOATs, it
        # could also be dramatically faster

        GL.glVertexPointerd(self.vertices)
        GL.glColorPointerd(self.colors)
        GL.glEnableClientState(GL.GL_VERTEX_ARRAY)
        GL.glEnableClientState(GL.GL_COLOR_ARRAY)
        
        #GL.glDisable(GL.GL_LIGHTING)
        GL.glDrawArrays(GL.GL_QUADS, 0, 4*self.vertices.shape[0])
        #GL.glEnable(GL.GL_LIGHTING)
        
        GL.glDisableClientState(GL.GL_COLOR_ARRAY)
        GL.glDisableClientState(GL.GL_VERTEX_ARRAY)

    def drawFreqMaxText(self, painter):
        if not self.showFreqLabel:
            return

        painter.setRenderHint(QtGui.QPainter.Antialiasing)
        if self.fmax < 2e2:
            text = "%.1f Hz" %(self.fmax)
        else:
            text = "%d Hz" %(rint(self.fmax))
        
        # compute tracker bounding rect
        painter.setPen(Qt.Qt.black)
        rect = painter.boundingRect(QtCore.QRect(self.xmax, 0, 0, 0), Qt.Qt.AlignHCenter, text)
        
        # avoid crossing the left and top borders
        dx = - min(rect.x()-2, 0)
        dy = - min(rect.y()-1, 0)
        rect.translate(dx, dy)

        # avoid crossing the right and bottom borders
        dx = - max(rect.right() - self.width() + 2, 0)
        dy = - max(rect.bottom() - self.height() + 1, 0)
        rect.translate(dx, dy)
        
        Hmiddle = (rect.left()+rect.right())/2
        triangleSize = 4

        # draw a white background
        painter.setPen(Qt.Qt.NoPen)
        painter.setBrush(Qt.Qt.white)
        painter.drawRect(rect)

        # draw a little downward-pointing triangle to indicate the frequency
        # triangle fill
        polygon = QtGui.QPolygon()
        polygon << QtCore.QPoint(Hmiddle-triangleSize, rect.bottom()+1)
        polygon << QtCore.QPoint(Hmiddle, rect.bottom()+1+triangleSize)
        polygon << QtCore.QPoint(Hmiddle+triangleSize, rect.bottom()+1)
        painter.drawPolygon(polygon)

        # triangle outline
        painter.setPen(Qt.Qt.black)
        painter.drawLine(rect.left(), rect.bottom()+1, Hmiddle-triangleSize, rect.bottom()+1)
        painter.drawLine(Hmiddle-triangleSize, rect.bottom()+1, Hmiddle, rect.bottom()+1+triangleSize)
        painter.drawLine(Hmiddle, rect.bottom()+1+triangleSize, Hmiddle+triangleSize, rect.bottom()+1)
        painter.drawLine(Hmiddle+triangleSize, rect.bottom()+1, rect.right(), rect.bottom()+1)
        
        # frequency label
        painter.setPen(Qt.Qt.black)
        painter.drawText(rect, Qt.Qt.AlignLeft, text)

    def drawTrackerText(self, painter): 
        if self.ruler:
            painter.setRenderHint(QtGui.QPainter.Antialiasing)
            
            x = self.parent().inverseXTransform(self.mousex)
            y = self.parent().inverseYTransform(self.height() - self.mousey)
            text = "%d Hz, %.1f dB" %(x, y)
            
            # compute tracker bounding rect
            painter.setPen(Qt.Qt.black)
            rect = painter.boundingRect(QtCore.QRect(self.mousex, self.mousey, 0, 0), Qt.Qt.AlignLeft, text)
            
            # small offset so that it does not touch the rulers
            rect.translate(4, -( rect.height() + 4))
            
            # avoid crossing the top and right borders
            dx = - max(rect.x() + rect.width() - self.width(), 0)
            dy = - min(rect.y(), 0)
            rect.translate(dx, dy)
            
            # avoid crossing the left and bottom borders
            dx = - min(rect.x(), 0)
            dy = - max(rect.y() + rect.height() - self.height(), 0)
            rect.translate(dx, dy)
            
            # draw a white background
            painter.setPen(Qt.Qt.NoPen)
            painter.setBrush(Qt.Qt.white)
            painter.drawRect(rect)
            
            painter.setPen(Qt.Qt.black)
            painter.drawText(rect, Qt.Qt.AlignLeft, text)

    def resizeGL(self, width, height):
        self.setupViewport(self.width(), self.height())
        self.updateGrid()

    def setupViewport(self, width, height):
        GL.glViewport(0, 0, width, height)
        GL.glMatrixMode(GL.GL_PROJECTION)
        GL.glLoadIdentity()
        GL.glOrtho(0, width, 0, height, 0, 1)
        # Displacement trick for exact pixelization
        GL.glTranslatef(0.375, 0.375, 0)

    def drawBackground(self):
        w = self.width()
        h = self.height()
        GL.glBegin(GL.GL_QUADS)
        GL.glColor3f(0.85, 0.85, 0.85)
        GL.glVertex2d(0, h)
        GL.glVertex2d(w, h)
        GL.glColor3f(1, 1, 1)
        GL.glVertex2d(w, h/2)
        GL.glVertex2d(0, h/2)
        GL.glEnd()

    def drawGrid(self):
        if self.gridList == None:
            # display list used for the grid
            self.gridList = GL.glGenLists(1)

            if self.gridList == 0 or self.gridList == None:
                raise RuntimeError( """Unable to generate a new display-list, context may not support display lists""")

            self.updateGrid()

        GL.glCallList(self.gridList)

    def drawBorder(self):
        w = self.width()
        h = self.height()
        self.qglColor(QtGui.QColor(Qt.Qt.gray))
        GL.glBegin(GL.GL_LINE_LOOP)
        GL.glVertex2f(0, 0)
        GL.glVertex2f(0, h-1)
        GL.glVertex2f(w-1, h-1)
        GL.glVertex2f(w-1, 0)
        GL.glEnd()

    def drawRuler(self):
        if self.ruler:
            w = self.width()
            h = self.height()
            self.qglColor(QtGui.QColor(Qt.Qt.black))
            GL.glBegin(GL.GL_LINES)
            GL.glVertex2f(self.mousex, 0)
            GL.glVertex2f(self.mousex, h)
            GL.glVertex2f(0, h - self.mousey)
            GL.glVertex2f(w, h - self.mousey)
            GL.glEnd()

    def mousePressEvent(self, event):
        self.lastPos = event.pos()
        self.mousex = event.x()
        self.mousey = event.y()
        self.ruler = True
        # ask for update so the the ruler is actually painted
        self.update()

    def mouseReleaseEvent(self, event):
        self.ruler = False
        # ask for update so the the ruler is actually erased
        self.update()

    def mouseMoveEvent(self, event):
        if event.buttons() & QtCore.Qt.LeftButton:
            self.mousex = event.x()
            self.mousey = event.y()
            self.update()


########NEW FILE########
__FILENAME__ = renard
# Renard's numbers, or preferred numbers
# used for frequency display
# R5 for octave analyzer
# R10 for 1/3 octave analyzer
# R20 for 1/6 octave analyzer
# R40 for 1/12 octave analyzer
# R80 for 1/24 octave analyzer
# see http://en.wikipedia.org/wiki/Preferred_number

R5 = [1.00, 1.60, 2.50, 4.00, 6.30]

R10a = [1.25, 2.00, 3.15, 5.00, 8.00]

R10 = R5 + R10a
R10.sort()

R20a = [1.12, 1.40, 1.80, 2.24, 2.80, 3.55, 4.50, 5.60, 7.10, 9.00]
R20 = R10 + R20a
R20.sort()

R40a =   ([1.06, 1.32, 1.70, 2.12, 2.65, 3.35, 4.25, 5.30, 6.70, 8.50] 
		+ [1.18, 1.50, 1.90, 2.36, 3.00, 3.75, 4.75, 6.00, 7.50, 9.50])
R40 = R20 + R40a
R40.sort()

R80a =   ([1.03, 1.28, 1.65, 2.06, 2.58, 3.25, 4.12, 5.15, 6.50, 8.25]
		+ [1.09, 1.36, 1.75, 2.18, 2.72, 3.45, 4.37, 5.45, 6.90, 8.75]
		+ [1.15, 1.45, 1.85, 2.30, 2.90, 3.65, 4.62, 5.80, 7.30, 9.25]
		+ [1.22, 1.55, 1.95, 2.43, 3.07, 3.87, 4.87, 6.15, 7.75, 9.75])
R80 = R40 + R80a
R80.sort()

if __name__ == "__main__":
	print "R5", R5
	print
	print "R10", R10
	print
	print "R20", R20
	print
	print "R40", R40
	print
	print "R80", R80
	
########NEW FILE########
__FILENAME__ = ringbuffer
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

# FIXME problem when self.offset overflows the MAXINT limit !
# FIXME grow the buffer by increment of power of 2
# FIXME the growing code could be factorized

from numpy import zeros

class RingBuffer():
	def __init__(self, logger):
		# buffer length is dynamic based on the needs
		self.buffer_length = 10000
		self.buffer = zeros((1, 2*self.buffer_length))
		self.offset = 0
		self.logger = logger

	def push(self, floatdata):
		# update the circular buffer
		
		dim = floatdata.shape[0]
		l = floatdata.shape[1]

		if dim <> self.buffer.shape[0]:
			# switched from single to dual channels or vice versa  
			self.buffer = zeros((dim, 2*self.buffer_length))

		self.grow_if_needed(l)
		
		# first copy, always complete
		offset = self.offset % self.buffer_length
		self.buffer[:, offset : offset + l] = floatdata[:,:]
		# second copy, can be folded
		direct = min(l, self.buffer_length - offset)
		folded = l - direct
		self.buffer[:, offset + self.buffer_length: offset + self.buffer_length + direct] = floatdata[:, 0 : direct]
		self.buffer[:, :folded] = floatdata[:,direct:]
		
		self.offset += l

	def data(self, length):
		self.grow_if_needed(length)

		stop = self.offset%self.buffer_length + self.buffer_length
		start = stop - length
  
		while stop > 2*self.buffer_length:
			self.grow_if_needed(stop)
			stop = self.offset%self.buffer_length + self.buffer_length
			start = stop - length
  
		if start > 2*self.buffer_length or start < 0:
			raise ArithmeticError("Start index is wrong %d %d" %(start, self.buffer_length))
		if stop > 2*self.buffer_length:
			raise ArithmeticError("Stop index is larger than buffer size: %d > %d" %(stop, 2*self.buffer_length))
		return self.buffer[:, start : stop]

	def data_older(self, length, delay_samples):     
		self.grow_if_needed(length + delay_samples)
		
		start = (self.offset - length - delay_samples) % self.buffer_length + self.buffer_length 
		stop = start + length
		return self.buffer[:, start : stop]

	def data_indexed(self, start, length):
		delay = self.offset - start
		self.grow_if_needed(length + delay)
		
		#start0 = start % self.buffer_length + self.buffer_length
		#stop0 = start0 + length
		stop0 = start % self.buffer_length + self.buffer_length
		start0 = stop0 - length

		if start0 > 2*self.buffer_length or start0 < 0:
			raise ArithmeticError("Start index is wrong %d %d" %(start0, self.buffer_length))
		if stop0 > 2*self.buffer_length:
			raise ArithmeticError("Stop index is larger than buffer size: %d > %d" %(stop0, 2*self.buffer_length))

		return self.buffer[:, start0 : stop0]

	def grow_if_needed(self, length):
		if length > self.buffer_length:
			# let the buffer grow according to our needs
			old_length = self.buffer_length
			new_length = int(1.5*length)

			message = "Ringbuffer: growing buffer for length %d" %(new_length)
			if self.logger <> None:
				self.logger.push(message)
			else:
				print message
			
			#create new buffer
			newbuffer = zeros((self.buffer.shape[0], 2*new_length))
			#copy existing data so that self.offset does not have to be changed
			old_offset_mod = self.offset%old_length
			new_offset_mod = self.offset%new_length
			shift = new_offset_mod - old_offset_mod
			# first copy, always complete
			newbuffer[:, shift:shift + old_length] = self.buffer[:, :old_length]
			# second copy, can be folded
			direct = min(old_length, new_length - shift)
			folded = old_length - direct
			newbuffer[:, new_length + shift:new_length + shift + direct] = self.buffer[:, :direct]
			newbuffer[:, :folded] = self.buffer[:, direct:direct+folded]
			#assign self.butter to the new larger buffer
			self.buffer = newbuffer
			self.buffer_length = new_length
  
########NEW FILE########
__FILENAME__ = scope
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
from numpy import log10, where, linspace, sign, arange
from friture.timeplot import TimePlot
from friture.audiobackend import SAMPLING_RATE
from friture.logger import PrintLogger

SMOOTH_DISPLAY_TIMER_PERIOD_MS = 25
DEFAULT_TIMERANGE = 2*SMOOTH_DISPLAY_TIMER_PERIOD_MS

STYLESHEET = """
QwtPlotCanvas {
    border: 1px solid gray;
    border-radius: 2px;
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
    stop: 0 #E0E0E0, stop: 0.5 #FFFFFF);
}
"""

class Scope_Widget(QtGui.QWidget):
    def __init__(self, parent = None, logger = PrintLogger()):
        QtGui.QWidget.__init__(self, parent)

        self.audiobuffer = None
        self.logger = logger
        
        self.setObjectName("Scope_Widget")
        self.gridLayout = QtGui.QGridLayout(self)
        self.gridLayout.setObjectName("gridLayout")
        self.PlotZoneUp = TimePlot(self, self.logger)
        self.PlotZoneUp.setObjectName("PlotZoneUp")
        self.gridLayout.addWidget(self.PlotZoneUp, 0, 0, 1, 1)
        
        self.setStyleSheet(STYLESHEET)

        self.settings_dialog = Scope_Settings_Dialog(self, self.logger)

        self.timerange = DEFAULT_TIMERANGE

    # method
    def set_buffer(self, buffer):
        self.audiobuffer = buffer

    # method
    def update(self):
        if not self.isVisible():
            return

        time = self.timerange*1e-3
        width = int(time*SAMPLING_RATE)
        #basic trigger capability on leading edge
        floatdata = self.audiobuffer.data(2*width)

        #number of data points received at the last audio buffer update
        #newpoints = self.audiobuffer.newpoints
        #print newpoints

        # because of the buffering, sometimes we have not got any data
        #if newpoints==0:
        #    return
        
        #floatdata = self.audiobuffer.data(newpoints + width)

        twoChannels = False
        if floatdata.shape[0] > 1:
            twoChannels = True

        # trigger on the first channel only
        triggerdata = floatdata[0,:]
        # trigger on half of the waveform
        trig_search_start = width/2
        trig_search_stop = -width/2
        triggerdata = triggerdata[trig_search_start : trig_search_stop]

        max = floatdata.max()
        trigger_level = max*2./3.
        #trigger_level = 0.6
        trigger_pos = where((triggerdata[:-1] < trigger_level)*(triggerdata[1:] >= trigger_level))[0]

        if len(trigger_pos)==0:
            return
        
        if len(trigger_pos) > 0:
            shift = trigger_pos[0]
        else:
            #return
            shift = 0
        shift += trig_search_start
        datarange = width
        floatdata = floatdata[:, shift -  datarange/2: shift +  datarange/2]
 
        y = floatdata[0,:] #- floatdata.mean()
        if twoChannels:
            y2 = floatdata[1,:] #- floatdata.mean()
        
        dBscope = False
        if dBscope:
            dBmin = -50.
            y = sign(y)*(20*log10(abs(y))).clip(dBmin, 0.)/(-dBmin) + sign(y)*1.
            if twoChannels:
                y2 = sign(y2)*(20*log10(abs(y2))).clip(dBmin, 0.)/(-dBmin) + sign(y2)*1.
    
        time = (arange(len(y)) - datarange/2)/float(SAMPLING_RATE)
        
        if twoChannels:
            self.PlotZoneUp.setdataTwoChannels(time, y, y2)
        else:
            self.PlotZoneUp.setdata(time, y)

    # slot
    def set_timerange(self, timerange):
        self.timerange = timerange

    # slot
    def settings_called(self, checked):
        self.settings_dialog.show()

    # method
    def saveState(self, settings):
        self.settings_dialog.saveState(settings)
    
    # method
    def restoreState(self, settings):
        self.settings_dialog.restoreState(settings)


class Scope_Settings_Dialog(QtGui.QDialog):
    def __init__(self, parent, logger):
        QtGui.QDialog.__init__(self, parent)
        
        self.logger = logger
        
        self.setWindowTitle("Scope settings")
        
        self.formLayout = QtGui.QFormLayout(self)
        
        self.doubleSpinBox_timerange = QtGui.QDoubleSpinBox(self)
        self.doubleSpinBox_timerange.setDecimals(1)
        self.doubleSpinBox_timerange.setMinimum(0.1)
        self.doubleSpinBox_timerange.setMaximum(1000.0)
        self.doubleSpinBox_timerange.setProperty("value", DEFAULT_TIMERANGE)
        self.doubleSpinBox_timerange.setObjectName("doubleSpinBox_timerange")
        self.doubleSpinBox_timerange.setSuffix(" ms")

        self.formLayout.addRow("Time range:", self.doubleSpinBox_timerange)
        
        self.setLayout(self.formLayout)

        self.connect(self.doubleSpinBox_timerange, QtCore.SIGNAL('valueChanged(double)'), self.parent().set_timerange)

    # method
    def saveState(self, settings):
        settings.setValue("timeRange", self.doubleSpinBox_timerange.value())

    # method
    def restoreState(self, settings):
        (timeRange, ok) = settings.value("timeRange", DEFAULT_TIMERANGE).toDouble()
        self.doubleSpinBox_timerange.setValue(timeRange)

########NEW FILE########
__FILENAME__ = settings
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
from friture.ui_settings import Ui_Settings_Dialog

no_input_device_title = "No audio input device found"

no_input_device_message = """No audio input device has been found.

Please check your audio configuration.

Friture will now exit.
"""

class Settings_Dialog(QtGui.QDialog, Ui_Settings_Dialog):
	def __init__(self, parent, logger, audiobackend):
		QtGui.QDialog.__init__(self, parent)
		Ui_Settings_Dialog.__init__(self)
		
		# Setup the user interface
		self.setupUi(self)

		self.audiobackend = audiobackend
		self.logger = logger

		devices = self.audiobackend.get_readable_devices_list()

		if devices == []:
			# no audio input device: display a message and exit
			QtGui.QMessageBox.critical(self, no_input_device_title, no_input_device_message)
			QtCore.QTimer.singleShot(0, self.exitOnInit)
			return

		for device in devices:
			self.comboBox_inputDevice.addItem(device)

		channels = self.audiobackend.get_readable_current_channels()
		for channel in channels:
			self.comboBox_firstChannel.addItem(channel)
			self.comboBox_secondChannel.addItem(channel)

		current_device = self.audiobackend.get_readable_current_device()
		self.comboBox_inputDevice.setCurrentIndex(current_device)

		first_channel = self.audiobackend.get_current_first_channel()
		self.comboBox_firstChannel.setCurrentIndex(first_channel)
		second_channel = self.audiobackend.get_current_second_channel()
		self.comboBox_secondChannel.setCurrentIndex(second_channel)

		# signals
		self.comboBox_inputDevice.currentIndexChanged.connect(self.input_device_changed)
		self.comboBox_firstChannel.currentIndexChanged.connect(self.first_channel_changed)
		self.comboBox_secondChannel.currentIndexChanged.connect(self.second_channel_changed)
		self.radioButton_single.toggled.connect(self.single_input_type_selected)
		self.radioButton_duo.toggled.connect(self.duo_input_type_selected)

	# slot
	# used when no audio input device has been found, to exit immediately
	def exitOnInit(self):
		QtGui.QApplication.instance().quit()

	# slot
	def input_device_changed(self, index):
		self.parent().ui.actionStart.setChecked(False)
		
		success, index = self.audiobackend.select_input_device(index)
		
		self.comboBox_inputDevice.setCurrentIndex(index)
		
		if not success:
			# Note: the error message is a child of the settings dialog, so that
			# that dialog remains on top when the error message is closed
			error_message = QErrorMessage(self)
			error_message.setWindowTitle("Input device error")
			error_message.showMessage("Impossible to use the selected input device, reverting to the previous one")
		
		# reset the channels
		first_channel = self.audiobackend.get_current_first_channel()
		self.comboBox_firstChannel.setCurrentIndex(first_channel)
		second_channel = self.audiobackend.get_current_second_channel()
		self.comboBox_secondChannel.setCurrentIndex(second_channel)  
  
		self.parent().ui.actionStart.setChecked(True)

	# slot
	def first_channel_changed(self, index):
		self.parent().ui.actionStart.setChecked(False)
		
		success, index = self.audiobackend.select_first_channel(index)
		
		self.comboBox_firstChannel.setCurrentIndex(index)
		
		if not success:
			# Note: the error message is a child of the settings dialog, so that
			# that dialog remains on top when the error message is closed
			error_message = QErrorMessage(self)
			error_message.setWindowTitle("Input device error")
			error_message.showMessage("Impossible to use the selected channel as the first channel, reverting to the previous one")
		
		self.parent().ui.actionStart.setChecked(True)

	# slot
	def second_channel_changed(self, index):
		self.parent().ui.actionStart.setChecked(False)
		
		success, index = self.audiobackend.select_second_channel(index)
		
		self.comboBox_secondChannel.setCurrentIndex(index)
		
		if not success:
			# Note: the error message is a child of the settings dialog, so that
			# that dialog remains on top when the error message is closed
			error_message = QErrorMessage(self)
			error_message.setWindowTitle("Input device error")
			error_message.showMessage("Impossible to use the selected channel as the second channel, reverting to the previous one")
		
		self.parent().ui.actionStart.setChecked(True)

	# slot
	def single_input_type_selected(self, checked):
		if checked:
			self.groupBox_second.setEnabled(False)
			self.audiobackend.set_single_input()
			self.logger.push("Switching to single input")

	# slot
	def duo_input_type_selected(self, checked):
		if checked:
			self.groupBox_second.setEnabled(True)
			self.audiobackend.set_duo_input()
			self.logger.push("Switching to difference between two inputs")

	# method
	def saveState(self, settings):
		# for the input device, we search by name instead of index, since
		# we do not know if the device order stays the same between sessions
  		settings.setValue("deviceName", self.comboBox_inputDevice.currentText())
		settings.setValue("firstChannel", self.comboBox_firstChannel.currentIndex())
		settings.setValue("secondChannel", self.comboBox_secondChannel.currentIndex())
		settings.setValue("duoInput", self.inputTypeButtonGroup.checkedId())

	# method
	def restoreState(self, settings):
		device_name = settings.value("deviceName", "").toString()
		id = self.comboBox_inputDevice.findText(device_name)
  		# change the device only if it exists in the device list
		if id >= 0:
			self.comboBox_inputDevice.setCurrentIndex(id)
			(channel, ok) = settings.value("firstChannel", 0).toInt()
			self.comboBox_firstChannel.setCurrentIndex(channel)
			(channel, ok) = settings.value("secondChannel", 0).toInt()
			self.comboBox_secondChannel.setCurrentIndex(channel)
			(duo_input_id, ok) = settings.value("duoInput", 0).toInt()
			self.inputTypeButtonGroup.button(duo_input_id).setChecked(True)

########NEW FILE########
__FILENAME__ = spectplot
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from friture.classplot import ClassPlot
import PyQt4.Qwt5 as Qwt
from PyQt4 import QtCore, Qt, QtGui
from numpy import zeros, ones, log10, linspace, logspace, interp, log2, histogram
#from log2_scale_engine import QwtLog10ScaleEngine

# The peak decay rates (magic goes here :).
PEAK_DECAY_RATE = 1.0 - 3E-6
# Number of cycles the peak stays on hold before fall-off.
PEAK_FALLOFF_COUNT = 32 # default : 16

class FreqScaleDraw(Qwt.QwtScaleDraw):
	def __init__(self, *args):
		Qwt.QwtScaleDraw.__init__(self, *args)

	def label(self, value):
		if value >= 1e3:
			label = "%gk" %(value/1e3)
		else:
			label = "%d" %(value)
		return Qwt.QwtText(label)

class picker(Qwt.QwtPlotPicker):
	def __init__(self, *args):
		Qwt.QwtPlotPicker.__init__(self, *args)
		
	def trackerText(self, pos):
		pos2 = self.invTransform(pos)
		return Qwt.QwtText("%d Hz, %.1f dB" %(pos2.x(), pos2.y()))

	def drawTracker(self, painter):
		textRect = self.trackerRect(painter.font())
		if not textRect.isEmpty():
		  	   label = self.trackerText(self.trackerPosition())
		  	   if not label.isEmpty():
		  	   	   painter.save()
		  	   	   painter.setPen(Qt.Qt.NoPen)
		  	   	   painter.setBrush(Qt.Qt.white)
		  	   	   painter.drawRect(textRect)
		  	   	   painter.setPen(Qt.Qt.black)
		  	   	   #painter->setRenderHint(QPainter::TextAntialiasing, false);
		  	   	   label.draw(painter, textRect)
		  	   	   painter.restore()

class SpectPlot(ClassPlot):
	def __init__(self, parent, logger):
		ClassPlot.__init__(self)

		# store the logger instance
		self.logger = logger

		# we do not need caching
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintCached, False)
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintPacked, False)

		self.ymin = -140.
		self.setAxisScale(Qwt.QwtPlot.yLeft, self.ymin, 0.)
		self.baseline_transformed = False
		self.baseline = 0.
		self.curve.setBaseline(self.ymin)
		xtitle = Qwt.QwtText('Frequency (Hz)')
		xtitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.xBottom, xtitle)
		# self.setAxisTitle(Qwt.QwtPlot.xBottom, 'Frequency (Hz)')
		ytitle = Qwt.QwtText('PSD (dB A)')
		ytitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yLeft, ytitle)
		# self.setAxisTitle(Qwt.QwtPlot.yLeft, 'PSD (dB)')

		# attach a grid
		grid = Qwt.QwtPlotGrid()
		grid.enableXMin(True)
		grid.setMajPen(Qt.QPen(Qt.QPen(Qt.Qt.gray)))
		grid.setMinPen(Qt.QPen(Qt.QPen(Qt.Qt.lightGray)))
		grid.setZ(1000.)
		grid.attach(self)

		self.xmax = 0
		self.needfullreplot = False

		self.canvas_width = 0
		self.logfreqscale = False
		self.setfreqrange(20., 20000.)
		self.setlinfreqscale()
		
		self.setAxisScaleDraw(Qwt.QwtPlot.xBottom, FreqScaleDraw())
		
		self.paint_time = 0.

		# picker used to display coordinates when clicking on the canvas
		self.picker = picker(Qwt.QwtPlot.xBottom,
                               Qwt.QwtPlot.yLeft,
                               Qwt.QwtPicker.PointSelection,
                               Qwt.QwtPlotPicker.CrossRubberBand,
                               Qwt.QwtPicker.ActiveOnly,
                               self.canvas())
		
		# insert an additional curve for the peak
		self.curve_peak = Qwt.QwtPlotCurve()
		#self.curve_peak.setPen(QtGui.QPen(Qt.Qt.blue))
		self.curve_peak.setPen(Qt.QColor("#FF9000")) #dark orange
		#self.curve_peak.setRenderHint(Qwt.QwtPlotItem.RenderAntialiased)
		#self.curve_peak.setPen(QtGui.QPen(Qt.Qt.NoPen))
		#self.curve_peak.setBrush(Qt.Qt.blue)
		self.curve_peak.attach(self)
		self.peak = zeros((1,))
		self.peakHold = 0
		self.peakDecay = PEAK_DECAY_RATE
		self.peaks_enabled = True
		
		# fill under the curve
		#self.curve.setBrush(Qt.QColor(255,0,190))
		#self.curve.setBrush(Qt.Qt.red)
		self.curve.setBrush(Qt.QColor("#057D9F")) #some sort of blue
		#self.curve.setPen(Qt.QColor(255,0,0,0))
		#self.curve.setPen(QtGui.QPen(Qt.Qt.red))
		self.curve.setPen(QtGui.QPen(Qt.Qt.NoPen))
		#self.curve.setRenderHint(Qwt.QwtPlotItem.RenderAntialiased)
		
		self.cached_canvas = self.canvas()
		
		#need to replot here for the size Hints to be computed correctly (depending on axis scales...)
		self.replot()

	def setdata(self, x, y):
		if self.canvas_width <> self.cached_canvas.width():
			self.logger.push("spectplot : changed canvas width")
			self.canvas_width = self.cached_canvas.width()
			self.update_xscale()
		
		if self.xmax <> x[-1]:
			self.logger.push("spectplot : changing x scale")
			self.xmax = x[-1]
			self.update_xscale()
			self.needfullreplot = True
		
		y_interp = interp(self.xscaled, x, y)
                
		#upsampling = 10.
		#upsampled_freq = linspace(x.min(), x.max(), len(x)*upsampling)
		#upsampled_xyzs = y.repeat(upsampling)
		#y_interp = histogram(upsampled_freq, bins=self.xscaled, normed=False, weights=upsampled_xyzs, new=None)[0]
		#y_interp /= upsampling
                
		ClassPlot.setdata(self, self.xscaled, y_interp)

		if self.peaks_enabled:
			self.compute_peaks(y_interp)
			self.curve_peak.setData(self.xscaled, self.peak)
		
		if self.needfullreplot:
			self.needfullreplot = False
			self.replot()
		else:
			# self.replot() would call updateAxes() which is dead slow (probably because it
			# computes label sizes); instead, let's just ask Qt to repaint the canvas next time
			# This works because we disable the cache
			self.cached_canvas.update()

        def compute_peaks(self, y):
                if len(self.peak) <> len(y):
			y_ones = ones(y.shape)
			self.peak = y_ones*(-500.)
			self.peakHold = zeros(y.shape)
			self.dBdecay = y_ones * 20. * log10(PEAK_DECAY_RATE)

		mask1 = (self.peak < y)
		mask2 = (-mask1) * (self.peakHold > (PEAK_FALLOFF_COUNT - 1.))
		mask2_a = mask2 * (self.peak + self.dBdecay < y)
		mask2_b = mask2 * (self.peak + self.dBdecay >= y)

		self.peak[mask1] = y[mask1]
		self.peak[mask2_a] = y[mask2_a]
		self.peak[mask2_b] = self.peak[mask2_b] + self.dBdecay[mask2_b]
		
		self.dBdecay[mask1] = 20. * log10(PEAK_DECAY_RATE)
		self.dBdecay[mask2_b] = 2 * self.dBdecay[mask2_b]
		
		self.peakHold[mask1] = 0
		self.peakHold += 1

	def update_xscale(self):
		#if self.logfreqscale == 2:
			#self.xscaled = logspace(log2(self.minfreq), log2(self.maxfreq), self.canvas_width, base=2.0)
		if self.logfreqscale:
			self.xscaled = logspace(log10(self.minfreq), log10(self.maxfreq), self.canvas_width)
		else:
			self.xscaled = linspace(self.minfreq, self.maxfreq, self.canvas_width)

	def setlinfreqscale(self):
		self.logfreqscale = False
		self.setAxisScaleEngine(Qwt.QwtPlot.xBottom, Qwt.QwtLinearScaleEngine())
		self.update_xscale()
		self.needfullreplot = True

	def setlogfreqscale(self):
		self.logfreqscale = True
		self.setAxisScaleEngine(Qwt.QwtPlot.xBottom, Qwt.QwtLog10ScaleEngine())
		self.update_xscale()
		self.needfullreplot = True

	def setfreqrange(self, minfreq, maxfreq):
		self.minfreq = minfreq
		self.maxfreq = maxfreq
		self.setAxisScale(Qwt.QwtPlot.xBottom, self.minfreq, self.maxfreq)
		self.update_xscale()
		self.needfullreplot = True
	
	def setspecrange(self, min, max):
		self.ymin = min
		self.setAxisScale(Qwt.QwtPlot.yLeft, min, max)
		if self.baseline_transformed:
			self.curve.setBaseline(self.baseline)
		else:
			# FIXME
			self.curve.setBaseline(min)
		self.needfullreplot = True
	
	def setweighting(self, weighting):
		if weighting is 0:
			title = "PSD (dB)"
		elif weighting is 1:
			title = "PSD (dB A)"
		elif weighting is 2:
			title = "PSD (dB B)"
		else:
			title = "PSD (dB C)"
		
		ytitle = Qwt.QwtText(title)
		ytitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yLeft, ytitle)

	def set_peaks_enabled(self, enabled):
		self.peaks_enabled = enabled

	def set_baseline_displayUnits(self, baseline):
		# FIXME
		self.baseline_transformed = False
		self.curve.setBaseline(self.ymin)

	def set_baseline_dataUnits(self, baseline):
		self.baseline_transformed = True
		self.curve.setBaseline(baseline)

	def drawCanvas(self, painter):
		t = QtCore.QTime()
		t.start()
		Qwt.QwtPlot.drawCanvas(self, painter)
		self.paint_time = (95.*self.paint_time + 5.*t.elapsed())/100.

########NEW FILE########
__FILENAME__ = spectrogram
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui
from numpy import log10, floor, zeros, float64, tile, array
from friture.imageplot import ImagePlot
from friture.audioproc import audioproc # audio processing class
from friture.spectrogram_settings import (Spectrogram_Settings_Dialog, # settings dialog
                                          DEFAULT_FFT_SIZE,
                                          DEFAULT_FREQ_SCALE,
                                          DEFAULT_MAXFREQ,
                                          DEFAULT_MINFREQ,
                                          DEFAULT_SPEC_MIN,
                                          DEFAULT_SPEC_MAX,
                                          DEFAULT_TIMERANGE,
                                          DEFAULT_WEIGHTING)

from friture.audiobackend import SAMPLING_RATE, FRAMES_PER_BUFFER
from friture.logger import PrintLogger
#from glrollingcanvaswidget import GLRollingCanvasWidget
from fractions import Fraction

class Spectrogram_Widget(QtGui.QWidget):
    def __init__(self, parent, audiobackend, logger = PrintLogger()):
        QtGui.QWidget.__init__(self, parent)

        self.logger = logger

        self.setObjectName("Spectrogram_Widget")
        self.gridLayout = QtGui.QGridLayout(self)
        self.gridLayout.setObjectName("gridLayout")
        self.PlotZoneImage = ImagePlot(self, self.logger, audiobackend)
        #self.PlotZoneImage = GLRollingCanvasWidget(self, self.logger)
        self.PlotZoneImage.setObjectName("PlotZoneImage")
        self.gridLayout.addWidget(self.PlotZoneImage, 0, 1, 1, 1)

        self.audiobuffer = None
        self.audiobackend = audiobackend
        
        # initialize the class instance that will do the fft
        self.proc = audioproc(self.logger)

        self.maxfreq = DEFAULT_MAXFREQ
        self.proc.set_maxfreq(self.maxfreq)
        self.minfreq = DEFAULT_MINFREQ
        self.fft_size = 2**DEFAULT_FFT_SIZE*32
        self.proc.set_fftsize(self.fft_size)
        self.spec_min = DEFAULT_SPEC_MIN
        self.spec_max = DEFAULT_SPEC_MAX
        self.weighting = DEFAULT_WEIGHTING
        
        self.update_weighting()
        self.freq = self.proc.get_freq_scale()
              
        self.timerange_s = DEFAULT_TIMERANGE
        self.canvas_width = 100.
        
        self.old_index = 0        
        self.overlap = 3./4.
        self.overlap_frac = Fraction(3, 4)
        self.dT_s = self.fft_size*(1. - self.overlap)/float(SAMPLING_RATE)
        
        self.PlotZoneImage.setlog10freqscale() #DEFAULT_FREQ_SCALE = 1 #log10
        self.PlotZoneImage.setfreqrange(self.minfreq, self.maxfreq)
        self.PlotZoneImage.setspecrange(self.spec_min, self.spec_max)
        self.PlotZoneImage.setweighting(self.weighting)
        self.PlotZoneImage.settimerange(self.timerange_s, self.dT_s)
        self.update_jitter()

        sfft_rate_frac = Fraction(SAMPLING_RATE, self.fft_size)/(Fraction(1) - self.overlap_frac)/1000
        self.PlotZoneImage.set_sfft_rate(sfft_rate_frac)
        
        # initialize the settings dialog
        self.settings_dialog = Spectrogram_Settings_Dialog(self, self.logger)

        self.audiobackend.underflow.connect(self.PlotZoneImage.plotImage.canvasscaledspectrogram.syncOffsets)

    # method
    def set_buffer(self, buffer):
        self.audiobuffer = buffer
        self.old_index = self.audiobuffer.ringbuffer.offset

    def log_spectrogram(self, sp):
        # Note: implementing the log10 of the array in Cython did not bring
        # any speedup.
        # Idea: Instead of computing the log of the data, I could pre-compute
        # a list of values associated with the colormap, and then do a search...
        epsilon = 1e-30
        return 10.*log10(sp + epsilon)

    # scale the db spectrum from [- spec_range db ... 0 db] > [0..1]    
    def scale_spectrogram(self, sp):
        return (sp.clip(min = self.spec_min, max = self.spec_max) - self.spec_min)/(self.spec_max - self.spec_min)

    # method
    def update(self):
        if not self.isVisible():
            return        
        
        # we need to maintain an index of where we are in the buffer
        index = self.audiobuffer.ringbuffer.offset

        available = index - self.old_index

        if available < 0:
            #ringbuffer must have grown or something...
            available = 0
            self.old_index = index
    
        # if we have enough data to add a frequency column in the time-frequency plane, compute it
        needed = self.fft_size*(1. - self.overlap)        
        realizable = int(floor(available/needed))

        if realizable > 0:
            spn = zeros((len(self.freq), realizable), dtype=float64)
        
            for i in range(realizable):
                floatdata = self.audiobuffer.data_indexed(self.old_index, self.fft_size)
    
                # for now, take the first channel only
                floatdata = floatdata[0,:]
    
                # FIXME We should allow here for more intelligent transforms, especially when the log freq scale is selected
                spn[:, i] = self.proc.analyzelive(floatdata)
    
                self.old_index += int(needed)
                    
            w = tile(self.w, (1, realizable))
            norm_spectrogram = self.scale_spectrogram(self.log_spectrogram(spn) + w)            
            self.PlotZoneImage.addData(self.freq, norm_spectrogram)
        self.PlotZoneImage.updatePlot()
            
        # thickness of a frequency column depends on FFT size and window overlap
        # hamming window with 75% overlap provides good quality (Perfect reconstruction,
        # aliasing from side lobes only, 42 dB channel isolation)
        
        # number of frequency columns that we keep depends on the time history that the user has chosen
        
        # actual displayed spectrogram is a scaled version of the time-frequency plane

    def update_jitter(self):
        audio_jitter = 2*float(FRAMES_PER_BUFFER)/SAMPLING_RATE
        analysis_jitter = self.fft_size*(1. - self.overlap)/SAMPLING_RATE
        canvas_jitter = audio_jitter + analysis_jitter
        #print audio_jitter, analysis_jitter, canvas_jitter
        self.PlotZoneImage.plotImage.set_jitter(canvas_jitter)

    def pause(self):
        self.PlotZoneImage.pause()        

    def restart(self):
        self.PlotZoneImage.restart()
        
    def setminfreq(self, freq):
        self.minfreq = freq
        self.PlotZoneImage.setfreqrange(self.minfreq, self.maxfreq)

    def setmaxfreq(self, freq):
        self.maxfreq = freq
        self.PlotZoneImage.setfreqrange(self.minfreq, self.maxfreq)
        self.proc.set_maxfreq(freq)
        self.update_weighting()
        self.freq = self.proc.get_freq_scale()
    
    def setfftsize(self, fft_size):
        self.fft_size = fft_size
        
        self.proc.set_fftsize(fft_size)
        self.update_weighting()
        self.freq = self.proc.get_freq_scale()
                    
        self.dT_s = self.fft_size*(1. - self.overlap)/float(SAMPLING_RATE)
        self.PlotZoneImage.settimerange(self.timerange_s, self.dT_s)

        sfft_rate_frac = Fraction(SAMPLING_RATE, self.fft_size)/(Fraction(1) - self.overlap_frac)/1000
        self.PlotZoneImage.set_sfft_rate(sfft_rate_frac)

        self.update_jitter()

    def setmin(self, value):
        self.spec_min = value
        self.PlotZoneImage.setspecrange(self.spec_min, self.spec_max)
    
    def setmax(self, value):
        self.spec_max = value
        self.PlotZoneImage.setspecrange(self.spec_min, self.spec_max)
    
    def setweighting(self, weighting):
        self.weighting = weighting
        self.PlotZoneImage.setweighting(weighting)
        self.update_weighting()
    
    def update_weighting(self):    
        A, B, C = self.proc.get_freq_weighting()
        if self.weighting is 0:
            self.w = array([0.])
        elif self.weighting is 1:
            self.w = A
        elif self.weighting is 2:
            self.w = B
        else:
            self.w = C
        self.w.shape = (len(self.w), 1)

    def settings_called(self, checked):
        self.settings_dialog.show()
    
    def saveState(self, settings):
        self.settings_dialog.saveState(settings)

    def restoreState(self, settings):
        self.settings_dialog.restoreState(settings)

    # slot
    def timerangechanged(self, value):
        self.timerange_s = value
        self.PlotZoneImage.settimerange(self.timerange_s, self.dT_s)

    # slot
    def canvasWidthChanged(self, width):
        self.canvas_width = width

########NEW FILE########
__FILENAME__ = spectrogram_image
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

import numpy
from PyQt4 import Qt, QtCore, QtGui
import PyQt4.Qwt5 as Qwt
from friture.audiobackend import SAMPLING_RATE

from friture.lookup_table import pyx_color_from_float_2D

class CanvasScaledSpectrogram(QtCore.QObject):
	def __init__(self, logger, canvas_height = 2,  canvas_width = 2):
		QtCore.QObject.__init__(self)

		# store the logger instance
		self.logger = logger

		self.canvas_height = canvas_height
		self.canvas_width = canvas_width

		#self.fullspectrogram = numpy.zeros((self.canvas_height, self.time_bin_number(), 4), dtype = numpy.uint8)
		self.pixmap = QtGui.QPixmap(2*self.canvas_width,  self.canvas_height)
		#print "pixmap info : hasAlpha =", self.pixmap.hasAlpha(), ", depth =", self.pixmap.depth(), ", default depth =", self.pixmap.defaultDepth()
		self.pixmap.fill(QtGui.QColor("black"))
		self.painter = QtGui.QPainter()
		self.offset = 0
		self.time_offset = 0
		# prepare a custom colormap black->blue->green->yellow->red->white
		self.colorMap = Qwt.QwtLinearColorMap(Qt.Qt.black, Qt.Qt.white)
		self.colorMap.addColorStop(0.2, Qt.Qt.blue)
		self.colorMap.addColorStop(0.4, Qt.Qt.green)
		self.colorMap.addColorStop(0.6, Qt.Qt.yellow)
		self.colorMap.addColorStop(0.8, Qt.Qt.red)
		self.prepare_palette()
		# performance timer
		self.time = QtCore.QTime()
		self.time.start()
		#self.logfile = open("latency_log.txt",'w')

		self.resetBound = 20

	def erase(self):
		#self.fullspectrogram = numpy.zeros((self.canvas_height, self.time_bin_number(), 4), dtype = numpy.uint8)
		self.pixmap = QtGui.QPixmap(2*self.canvas_width,  self.canvas_height)
		self.pixmap.fill(QtGui.QColor("black"))
		self.offset = 0
		self.time_offset = 0

	def setcanvas_height(self, canvas_height):
		if self.canvas_height <> canvas_height:
			self.canvas_height = canvas_height
			self.erase()
			self.logger.push("Spectrogram image: canvas_height changed, now: %d" %(canvas_height))

	def setcanvas_width(self, canvas_width):
		if self.canvas_width <> canvas_width:
			self.canvas_width = canvas_width
			self.erase()
			self.emit(QtCore.SIGNAL("canvasWidthChanged"), canvas_width)
			self.logger.push("Spectrogram image: canvas_width changed, now: %d" %(canvas_width))

	def addPixelAdvance(self, pixel_advance):
		self.time_offset += pixel_advance

		# avoid long-run drift between self.offset and self.time_offset
		alpha = 0.98
		self.time_offset = alpha*self.time_offset + (1.-alpha)*self.offset

	def addData(self, xyzs):
		# revert the frequency axis so that the larger frequencies
		# are at the top of the widget
		xyzs = xyzs[::-1, :]

		width = xyzs.shape[1]
  
		# convert the data to colors, and then to a data string 
		# that QImage can understand
		byteString = self.floats_to_bytes(xyzs)

		myimage = self.prepare_image(byteString, width, xyzs.shape[0])

		# Now, draw the image onto the widget pixmap, which has
		# the structure of a 2D ringbuffer

		offset = self.offset % self.canvas_width

		# first copy, always complete
		source1 = QtCore.QRectF(0, 0, width, xyzs.shape[0])
		target1 = QtCore.QRectF(offset, 0, width, xyzs.shape[0])
		# second copy, can be folded
		direct = min(width, self.canvas_width - offset)
		folded = width - direct
		source2a = QtCore.QRectF(0, 0, direct, xyzs.shape[0])
		target2a = QtCore.QRectF(offset + self.canvas_width, 0, direct, xyzs.shape[0])
		source2b = QtCore.QRectF(direct, 0, folded, xyzs.shape[0])
		target2b = QtCore.QRectF(0, 0, folded, xyzs.shape[0])

		self.painter.begin(self.pixmap)
		self.painter.drawImage(target1, myimage, source1)
		self.painter.drawImage(target2a, myimage, source2a)
		self.painter.drawImage(target2b, myimage, source2b)
		self.painter.end()

		#updating the offset
		self.offset += width

	def floats_to_bytes(self, data):
		#dat1 = (255. * data).astype(numpy.uint8)
		#dat4 = dat1.repeat(4)
		dat4 = self.color_from_float(data)
		return dat4.tostring()

	# defined as a separate function so that it appears in the profiler
	# NOTE: QImage with a colormap is slower (by a factor of 2) than the custom
	# colormap code here.
	def prepare_image(self, byteString, width, height):
		myimage = QtGui.QImage(byteString, width, height, QtGui.QImage.Format_RGB32)
		return myimage

	def prepare_palette(self):
		self.colors = numpy.zeros((256), dtype=numpy.uint32)
		for i in range(256):
			self.colors[i] = self.colorMap.rgb(Qwt.QwtDoubleInterval(0,255), i)

	def color_from_float(self, v):
		return pyx_color_from_float_2D(self.colors, v)
		#d = (v*255).astype(numpy.uint8)
		#return self.colors[d]

	#def interpolate_colors(colors, flat=False, num_colors=256):
		#colors =
		#""" given a list of colors, create a larger list of colors interpolating
		#the first one. If flatten is True a list of numers will be returned. If
		#False, a list of (r,g,b) tuples. num_colors is the number of colors wanted
		#in the final list """

		#palette = []

		#for i in range(num_colors):
			#index = (i * (len(colors) - 1))/(num_colors - 1.0)
			#index_int = int(index)
			#alpha = index - float(index_int)

			#if alpha > 0:
			#r = (1.0 - alpha) * colors[index_int][0] + alpha * colors[index_int + 1][0]
			#g = (1.0 - alpha) * colors[index_int][1] + alpha * colors[index_int + 1][1]
			#b = (1.0 - alpha) * colors[index_int][2] + alpha * colors[index_int + 1][2]
			#else:
			#r = (1.0 - alpha) * colors[index_int][0]
			#g = (1.0 - alpha) * colors[index_int][1]
			#b = (1.0 - alpha) * colors[index_int][2]

			#if flat:
			#palette.extend((int(r), int(g), int(b)))
			#else:
			#palette.append((int(r), int(g), int(b)))

		#return palette

	def getpixmap(self):
		return self.pixmap

	def getpixmapoffset(self, delay=0):
		#return self.offset % self.canvas_width
		# FIXME this should be always negative, but it is not !! Why ?? Because of the filter ?
		#print self.offset - self.time_offset

		#if abs(self.time_offset - self.offset) > self.resetBound:
		#	print "resetting"
		#	self.syncOffsets()

		return (self.time_offset + delay) % self.canvas_width

	# this is used when there is an underflow in the audio input
	def syncOffsets(self):
		self.time_offset = self.offset

# plan :
# 1. quickly convert each piece of data to a pixmap, with the right pixel size
# as QImage to QPixmap conversion is slow, and scaling is slow too
# 2. use a cache of size M=2*N
# 3. write in the cache at the position j and j+N
# 4. the data part that is to be drawn can be read contiguously from j+1 to j+1+N

########NEW FILE########
__FILENAME__ = spectrogram_settings
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
from friture.audiobackend import SAMPLING_RATE

# shared with spectrogram.py
DEFAULT_FFT_SIZE = 7 #4096 points
DEFAULT_FREQ_SCALE = 1 #log10
DEFAULT_MAXFREQ = SAMPLING_RATE/2
DEFAULT_MINFREQ = 20
DEFAULT_SPEC_MIN = -140
DEFAULT_SPEC_MAX = 0
DEFAULT_TIMERANGE = 10.
DEFAULT_WEIGHTING = 0 #None

class Spectrogram_Settings_Dialog(QtGui.QDialog):
	def __init__(self, parent, logger):
		QtGui.QDialog.__init__(self, parent)
		
		self.logger = logger
		
		self.setWindowTitle("Spectrogram settings")
		
		self.formLayout = QtGui.QFormLayout(self)
		
		self.doubleSpinBox_timerange = QtGui.QDoubleSpinBox(self)
		self.doubleSpinBox_timerange.setDecimals(1)
		self.doubleSpinBox_timerange.setMinimum(0.1)
		self.doubleSpinBox_timerange.setMaximum(1000.0)
		self.doubleSpinBox_timerange.setProperty("value", DEFAULT_TIMERANGE)
		self.doubleSpinBox_timerange.setObjectName("doubleSpinBox_timerange")
		self.doubleSpinBox_timerange.setSuffix(" s")
		
		self.comboBox_fftsize = QtGui.QComboBox(self)
		self.comboBox_fftsize.setObjectName("comboBox_fftsize")
		self.comboBox_fftsize.addItem("32 points")
		self.comboBox_fftsize.addItem("64 points")
		self.comboBox_fftsize.addItem("128 points")
		self.comboBox_fftsize.addItem("256 points")
		self.comboBox_fftsize.addItem("512 points")
		self.comboBox_fftsize.addItem("1024 points")
		self.comboBox_fftsize.addItem("2048 points")
		self.comboBox_fftsize.addItem("4096 points")
		self.comboBox_fftsize.addItem("8192 points")
		self.comboBox_fftsize.addItem("16384 points")
		self.comboBox_fftsize.setCurrentIndex(DEFAULT_FFT_SIZE)

		self.comboBox_freqscale = QtGui.QComboBox(self)
		self.comboBox_freqscale.setObjectName("comboBox_freqscale")
		self.comboBox_freqscale.addItem("Linear")
		self.comboBox_freqscale.addItem("Logarithmic")
		self.comboBox_freqscale.setCurrentIndex(DEFAULT_FREQ_SCALE)

		self.spinBox_minfreq = QtGui.QSpinBox(self)
		self.spinBox_minfreq.setMinimum(20)
		self.spinBox_minfreq.setMaximum(SAMPLING_RATE/2)
		self.spinBox_minfreq.setSingleStep(10)
		self.spinBox_minfreq.setValue(DEFAULT_MINFREQ)
		self.spinBox_minfreq.setObjectName("spinBox_minfreq")
		self.spinBox_minfreq.setSuffix(" Hz")
		
		self.spinBox_maxfreq = QtGui.QSpinBox(self)
		self.spinBox_maxfreq.setMinimum(20)
		self.spinBox_maxfreq.setMaximum(SAMPLING_RATE/2)
		self.spinBox_maxfreq.setSingleStep(1000)
		self.spinBox_maxfreq.setProperty("value", DEFAULT_MAXFREQ)
		self.spinBox_maxfreq.setObjectName("spinBox_maxfreq")
		self.spinBox_maxfreq.setSuffix(" Hz")

		self.spinBox_specmin = QtGui.QSpinBox(self)
		self.spinBox_specmin.setKeyboardTracking(False)
		self.spinBox_specmin.setMinimum(-200)
		self.spinBox_specmin.setMaximum(200)
		self.spinBox_specmin.setProperty("value", DEFAULT_SPEC_MIN)
		self.spinBox_specmin.setObjectName("spinBox_specmin")
		self.spinBox_specmin.setSuffix(" dB")

		self.spinBox_specmax = QtGui.QSpinBox(self)
		self.spinBox_specmax.setKeyboardTracking(False)
		self.spinBox_specmax.setMinimum(-200)
		self.spinBox_specmax.setMaximum(200)
		self.spinBox_specmax.setProperty("value", DEFAULT_SPEC_MAX)
		self.spinBox_specmax.setObjectName("spinBox_specmax")
		self.spinBox_specmax.setSuffix(" dB")
		
		self.comboBox_weighting = QtGui.QComboBox(self)
		self.comboBox_weighting.setObjectName("weighting")
		self.comboBox_weighting.addItem("None")
		self.comboBox_weighting.addItem("A")
		self.comboBox_weighting.addItem("B")
		self.comboBox_weighting.addItem("C")
		self.comboBox_weighting.setCurrentIndex(DEFAULT_WEIGHTING)

		self.formLayout.addRow("Time range:", self.doubleSpinBox_timerange)
		self.formLayout.addRow("FFT Size:", self.comboBox_fftsize)
		self.formLayout.addRow("Frequency scale:", self.comboBox_freqscale)
		self.formLayout.addRow("Min frequency:", self.spinBox_minfreq)
		self.formLayout.addRow("Max frequency:", self.spinBox_maxfreq)
		self.formLayout.addRow("Min color:", self.spinBox_specmin)
		self.formLayout.addRow("Max color:", self.spinBox_specmax)
		self.formLayout.addRow("Middle-ear weighting:", self.comboBox_weighting)
		
		self.setLayout(self.formLayout)

		self.connect(self.comboBox_fftsize, QtCore.SIGNAL('currentIndexChanged(int)'), self.fftsizechanged)
		self.connect(self.comboBox_freqscale, QtCore.SIGNAL('currentIndexChanged(int)'), self.freqscalechanged)
		self.connect(self.spinBox_minfreq, QtCore.SIGNAL('valueChanged(int)'), self.parent().setminfreq)
		self.connect(self.spinBox_maxfreq, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmaxfreq)
		self.connect(self.spinBox_specmin, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmin)
		self.connect(self.spinBox_specmax, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmax)
		self.connect(self.doubleSpinBox_timerange, QtCore.SIGNAL('valueChanged(double)'), self.parent().timerangechanged)
		self.connect(self.comboBox_weighting, QtCore.SIGNAL('currentIndexChanged(int)'), self.parent().setweighting)

	# slot
	def fftsizechanged(self, index):
		self.logger.push("fft_size_changed slot %d %d %f" %(index, 2**index*32, 150000/2**index*32))
		fft_size = 2**index*32
		self.parent().setfftsize(fft_size)
	
	# slot
	def freqscalechanged(self, index):
		self.logger.push("freq_scale slot %d" %index)
		if index == 1:
			self.parent().PlotZoneImage.setlog10freqscale()
		else:
			self.parent().PlotZoneImage.setlinfreqscale()

	# method
	def saveState(self, settings):
		settings.setValue("timeRange", self.doubleSpinBox_timerange.value())
		settings.setValue("fftSize", self.comboBox_fftsize.currentIndex())
		settings.setValue("freqScale", self.comboBox_freqscale.currentIndex())
		settings.setValue("freqMin", self.spinBox_minfreq.value())
		settings.setValue("freqMax", self.spinBox_maxfreq.value())
		settings.setValue("colorMin", self.spinBox_specmin.value())
		settings.setValue("colorMax", self.spinBox_specmax.value())
		settings.setValue("weighting", self.comboBox_weighting.currentIndex())

	# method
	def restoreState(self, settings):
		(timeRange, ok) = settings.value("timeRange", DEFAULT_TIMERANGE).toDouble()
		self.doubleSpinBox_timerange.setValue(timeRange)
		(fft_size, ok) = settings.value("fftSize", DEFAULT_FFT_SIZE).toInt() # 7th index is 1024 points
		self.comboBox_fftsize.setCurrentIndex(fft_size)
		(freqscale, ok) = settings.value("freqScale", DEFAULT_FREQ_SCALE).toInt()
		self.comboBox_freqscale.setCurrentIndex(freqscale)
		(freqMin, ok) = settings.value("freqMin", DEFAULT_MINFREQ).toInt()
		self.spinBox_minfreq.setValue(freqMin)
		(freqMax, ok) = settings.value("freqMax", DEFAULT_MAXFREQ).toInt()
		self.spinBox_maxfreq.setValue(freqMax)
		(colorMin, ok) = settings.value("colorMin", DEFAULT_SPEC_MIN).toInt()
		self.spinBox_specmin.setValue(colorMin)
		(colorMax, ok) = settings.value("colorMax", DEFAULT_SPEC_MAX).toInt()
		self.spinBox_specmax.setValue(colorMax)
		(weighting, ok) = settings.value("weighting", DEFAULT_WEIGHTING).toInt()
		self.comboBox_weighting.setCurrentIndex(weighting)

########NEW FILE########
__FILENAME__ = spectrum
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui
from numpy import log10, argmax, max, array, zeros, arange, floor, float64
from friture.spectplot import SpectPlot
from friture.audioproc import audioproc # audio processing class
from friture.spectrum_settings import (Spectrum_Settings_Dialog, # settings dialog
									   DEFAULT_FFT_SIZE,
									   DEFAULT_FREQ_SCALE,
									   DEFAULT_MAXFREQ,
									   DEFAULT_MINFREQ,
									   DEFAULT_SPEC_MIN,
									   DEFAULT_SPEC_MAX,
									   DEFAULT_WEIGHTING,
									   DEFAULT_RESPONSE_TIME,
									   DEFAULT_SHOW_FREQ_LABELS)

from friture.logger import PrintLogger
from friture.audiobackend import SAMPLING_RATE
from friture.qwtopenglplot import GLPlotWidget
from friture.exp_smoothing_conv import pyx_exp_smoothed_value_numpy

STYLESHEET = """
QwtPlotCanvas {
	border: 1px solid gray;
	border-radius: 2px;
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
	stop: 0 #E0E0E0, stop: 0.5 #FFFFFF);
}
"""

class Spectrum_Widget(QtGui.QWidget):
	def __init__(self, parent, sharedGLWidget, logger = PrintLogger()):
		QtGui.QWidget.__init__(self, parent)

		self.logger = logger
		self.audiobuffer = None

		self.setObjectName("Spectrum_Widget")
		self.gridLayout = QtGui.QGridLayout(self)
		self.gridLayout.setObjectName("gridLayout")
		#self.PlotZoneSpect = SpectPlot(self, self.logger)
		self.PlotZoneSpect = GLPlotWidget(self, sharedGLWidget, self.logger)
		self.PlotZoneSpect.setObjectName("PlotZoneSpect")
		self.gridLayout.addWidget(self.PlotZoneSpect, 0, 0, 1, 1)

		self.setStyleSheet(STYLESHEET)
		
		# initialize the class instance that will do the fft
		self.proc = audioproc(self.logger)
		
		self.maxfreq = DEFAULT_MAXFREQ
		self.proc.set_maxfreq(self.maxfreq)
		self.minfreq = DEFAULT_MINFREQ
		self.fft_size = 2**DEFAULT_FFT_SIZE*32
		self.proc.set_fftsize(self.fft_size)
		self.spec_min = DEFAULT_SPEC_MIN
		self.spec_max = DEFAULT_SPEC_MAX
		self.weighting = DEFAULT_WEIGHTING
		self.dual_channels = False
		self.response_time = DEFAULT_RESPONSE_TIME

		self.update_weighting()
		self.freq = self.proc.get_freq_scale()

		self.old_index = 0        
		self.overlap = 3./4.

		self.update_display_buffers()

		# set kernel and parameters for the smoothing filter
		self.setresponsetime(self.response_time)

		self.PlotZoneSpect.setlogfreqscale() #DEFAULT_FREQ_SCALE = 1 #log10
		self.PlotZoneSpect.setfreqrange(self.minfreq, self.maxfreq)
		self.PlotZoneSpect.setspecrange(self.spec_min, self.spec_max)
		self.PlotZoneSpect.setweighting(self.weighting)
		self.PlotZoneSpect.set_peaks_enabled(True)
		self.PlotZoneSpect.set_baseline_displayUnits(0.)
		self.PlotZoneSpect.setShowFreqLabel(DEFAULT_SHOW_FREQ_LABELS)
		
		# initialize the settings dialog
		self.settings_dialog = Spectrum_Settings_Dialog(self, self.logger)

	# method
	def set_buffer(self, buffer):
		self.audiobuffer = buffer
		self.old_index = self.audiobuffer.ringbuffer.offset

	def log_spectrogram(self, sp):
		# Note: implementing the log10 of the array in Cython did not bring
		# any speedup.
		# Idea: Instead of computing the log of the data, I could pre-compute
		# a list of values associated with the colormap, and then do a search...
		epsilon = 1e-30
		return 10.*log10(sp + epsilon)

	# method
	def update(self):
		if not self.isVisible():
			return

		# we need to maintain an index of where we are in the buffer
		index = self.audiobuffer.ringbuffer.offset

		available = index - self.old_index

		if available < 0:
			#ringbuffer must have grown or something...
			available = 0
			self.old_index = index
	
		# if we have enough data to add a frequency column in the time-frequency plane, compute it
		needed = self.fft_size*(1. - self.overlap)        
		realizable = int(floor(available/needed))

		if realizable > 0:
			sp1n = zeros((len(self.freq), realizable), dtype=float64)
			sp2n = zeros((len(self.freq), realizable), dtype=float64)
		
			for i in range(realizable):
				floatdata = self.audiobuffer.data_indexed(self.old_index, self.fft_size)

				# first channel    
				# FIXME We should allow here for more intelligent transforms, especially when the log freq scale is selected
				sp1n[:,i] = self.proc.analyzelive(floatdata[0,:])

				if self.dual_channels and floatdata.shape[0] > 1:
					# second channel for comparison
					sp2n[:,i] = self.proc.analyzelive(floatdata[1,:])

				self.old_index += int(needed)

			#compute the widget data
			#FIXME magnitude square ?
			sp1 = pyx_exp_smoothed_value_numpy(self.kernel, self.alpha, sp1n, self.dispbuffers1)
			sp2 = pyx_exp_smoothed_value_numpy(self.kernel, self.alpha, sp2n, self.dispbuffers2)
			#store result for next computation
			self.dispbuffers1 = sp1
			self.dispbuffers2 = sp2

			sp1.shape = self.freq.shape
			sp2.shape = self.freq.shape
			self.w.shape = self.freq.shape

			if self.dual_channels and floatdata.shape[0] > 1:
				dB_spectrogram = self.log_spectrogram(sp2) - self.log_spectrogram(sp1)
			else:
				dB_spectrogram = self.log_spectrogram(sp1) + self.w

			# the log operation and the weighting could be deffered
			# to the post-weedening !

			i = argmax(dB_spectrogram)
			fmax = self.freq[i]
			self.PlotZoneSpect.setdata(self.freq, dB_spectrogram, fmax)

	def setresponsetime(self, response_time):
		#time = SMOOTH_DISPLAY_TIMER_PERIOD_MS/1000. #DISPLAY
		#time = 0.025 #IMPULSE setting for a sound level meter
		#time = 0.125 #FAST setting for a sound level meter
		#time = 1. #SLOW setting for a sound level meter
		self.response_time = response_time
		
		# an exponential smoothing filter is a simple IIR filter
		# s_i = alpha*x_i + (1-alpha)*s_{i-1}
		#we compute alpha so that the N most recent samples represent 100*w percent of the output
		w = 0.65
		delta_n = self.fft_size*(1. - self.overlap)
		n = self.response_time*SAMPLING_RATE/delta_n
		N = 2*4096
		self.alpha = 1. - (1.-w)**(1./(n+1))
		self.kernel = self.compute_kernel(self.alpha, N)

	def compute_kernel(self, alpha, N):
		kernel = (1.-alpha)**arange(N-1, -1, -1)
		return kernel

	def update_display_buffers(self):
		self.dispbuffers1 = zeros(len(self.freq))
		self.dispbuffers2 = zeros(len(self.freq))

	def setminfreq(self, freq):
		self.minfreq = freq
		self.PlotZoneSpect.setfreqrange(self.minfreq, self.maxfreq)

	def setmaxfreq(self, freq):
		self.maxfreq = freq
		self.proc.set_maxfreq(self.maxfreq)
		self.freq = self.proc.get_freq_scale()
		self.update_display_buffers()
		self.update_weighting()
		# reset kernel and parameters for the smoothing filter
		self.setresponsetime(self.response_time)
		self.PlotZoneSpect.setfreqrange(self.minfreq, self.maxfreq)

	def setfftsize(self, fft_size):
		self.fft_size = fft_size
		self.proc.set_fftsize(self.fft_size)
		self.freq = self.proc.get_freq_scale()
		self.update_display_buffers()
		self.update_weighting()
		# reset kernel and parameters for the smoothing filter
		self.setresponsetime(self.response_time)

	def setmin(self, value):
		self.spec_min = value
		self.PlotZoneSpect.setspecrange(self.spec_min, self.spec_max)
	
	def setmax(self, value):
		self.spec_max = value
		self.PlotZoneSpect.setspecrange(self.spec_min, self.spec_max)

	def setweighting(self, weighting):
		self.weighting = weighting
		self.PlotZoneSpect.setweighting(weighting)
		self.update_weighting()
	
	def update_weighting(self):    
		A, B, C = self.proc.get_freq_weighting()
		if self.weighting is 0:
			self.w = zeros(A.shape)
		elif self.weighting is 1:
			self.w = A
		elif self.weighting is 2:
			self.w = B
		else:
			self.w = C
		self.w.shape = (1, len(self.w))

	def setdualchannels(self, dual_enabled):
		self.dual_channels = dual_enabled
		if dual_enabled:
			self.PlotZoneSpect.set_peaks_enabled(False)
			self.PlotZoneSpect.set_baseline_dataUnits(0.)
		else:
			self.PlotZoneSpect.set_peaks_enabled(True)
			self.PlotZoneSpect.set_baseline_displayUnits(0.)

	def setShowFreqLabel(self, showFreqLabel):
		self.PlotZoneSpect.setShowFreqLabel(showFreqLabel)

	def settings_called(self, checked):
		self.settings_dialog.show()
	
	def saveState(self, settings):
		self.settings_dialog.saveState(settings)

	def restoreState(self, settings):
		self.settings_dialog.restoreState(settings)

########NEW FILE########
__FILENAME__ = spectrum_settings
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timoth?Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
from friture.audiobackend import SAMPLING_RATE

# shared with spectrum_settings.py
DEFAULT_FFT_SIZE = 8 #8192 points
DEFAULT_FREQ_SCALE = 1 #log10
DEFAULT_MAXFREQ = 20000
DEFAULT_MINFREQ = 20
DEFAULT_SPEC_MIN = -100
DEFAULT_SPEC_MAX = -20
DEFAULT_WEIGHTING = 1 #A
DEFAULT_SHOW_FREQ_LABELS = True
DEFAULT_RESPONSE_TIME = 0.025
DEFAULT_RESPONSE_TIME_INDEX = 0

class Spectrum_Settings_Dialog(QtGui.QDialog):
	def __init__(self, parent, logger):
		QtGui.QDialog.__init__(self, parent)
		
		self.logger = logger
		
		self.setWindowTitle("Spectrum settings")
		
		self.formLayout = QtGui.QFormLayout(self)

		self.comboBox_dual_channel = QtGui.QComboBox(self)
		self.comboBox_dual_channel.setObjectName("dual")
		self.comboBox_dual_channel.addItem("Single-channel")
		self.comboBox_dual_channel.addItem("Dual-channel")
		self.comboBox_dual_channel.setCurrentIndex(0)
		
		self.comboBox_fftsize = QtGui.QComboBox(self)
		self.comboBox_fftsize.setObjectName("comboBox_fftsize")
		self.comboBox_fftsize.addItem("32 points")
		self.comboBox_fftsize.addItem("64 points")
		self.comboBox_fftsize.addItem("128 points")
		self.comboBox_fftsize.addItem("256 points")
		self.comboBox_fftsize.addItem("512 points")
		self.comboBox_fftsize.addItem("1024 points")
		self.comboBox_fftsize.addItem("2048 points")
		self.comboBox_fftsize.addItem("4096 points")
		self.comboBox_fftsize.addItem("8192 points")
		self.comboBox_fftsize.addItem("16384 points")
		self.comboBox_fftsize.setCurrentIndex(DEFAULT_FFT_SIZE)

		self.comboBox_freqscale = QtGui.QComboBox(self)
		self.comboBox_freqscale.setObjectName("comboBox_freqscale")
		self.comboBox_freqscale.addItem("Linear")
		self.comboBox_freqscale.addItem("Logarithmic")
		self.comboBox_freqscale.setCurrentIndex(DEFAULT_FREQ_SCALE)

		self.spinBox_minfreq = QtGui.QSpinBox(self)
		self.spinBox_minfreq.setMinimum(20)
		self.spinBox_minfreq.setMaximum(SAMPLING_RATE/2)
		self.spinBox_minfreq.setSingleStep(10)
		self.spinBox_minfreq.setValue(DEFAULT_MINFREQ)
		self.spinBox_minfreq.setObjectName("spinBox_minfreq")
		self.spinBox_minfreq.setSuffix(" Hz")
		
		self.spinBox_maxfreq = QtGui.QSpinBox(self)
		self.spinBox_maxfreq.setMinimum(20)
		self.spinBox_maxfreq.setMaximum(SAMPLING_RATE/2)
		self.spinBox_maxfreq.setSingleStep(1000)
		self.spinBox_maxfreq.setProperty("value", DEFAULT_MAXFREQ)
		self.spinBox_maxfreq.setObjectName("spinBox_maxfreq")
		self.spinBox_maxfreq.setSuffix(" Hz")

		self.spinBox_specmin = QtGui.QSpinBox(self)
		self.spinBox_specmin.setKeyboardTracking(False)
		self.spinBox_specmin.setMinimum(-200)
		self.spinBox_specmin.setMaximum(200)
		self.spinBox_specmin.setProperty("value", DEFAULT_SPEC_MIN)
		self.spinBox_specmin.setObjectName("spinBox_specmin")
		self.spinBox_specmin.setSuffix(" dB")

		self.spinBox_specmax = QtGui.QSpinBox(self)
		self.spinBox_specmax.setKeyboardTracking(False)
		self.spinBox_specmax.setMinimum(-200)
		self.spinBox_specmax.setMaximum(200)
		self.spinBox_specmax.setProperty("value", DEFAULT_SPEC_MAX)
		self.spinBox_specmax.setObjectName("spinBox_specmax")
		self.spinBox_specmax.setSuffix(" dB")
		
		self.comboBox_weighting = QtGui.QComboBox(self)
		self.comboBox_weighting.setObjectName("weighting")
		self.comboBox_weighting.addItem("None")
		self.comboBox_weighting.addItem("A")
		self.comboBox_weighting.addItem("B")
		self.comboBox_weighting.addItem("C")
		self.comboBox_weighting.setCurrentIndex(DEFAULT_WEIGHTING)

		self.comboBox_response_time = QtGui.QComboBox(self)
		self.comboBox_response_time.setObjectName("response_time")
		self.comboBox_response_time.addItem("25 ms (Impulse)")
		self.comboBox_response_time.addItem("125 ms (Fast)")
		self.comboBox_response_time.addItem("300 ms")
		self.comboBox_response_time.addItem("1s (Slow)")
		self.comboBox_response_time.setCurrentIndex(DEFAULT_RESPONSE_TIME_INDEX)

		self.checkBox_showFreqLabels = QtGui.QCheckBox(self)
		self.checkBox_showFreqLabels.setObjectName("showFreqLabels")
		self.checkBox_showFreqLabels.setChecked(DEFAULT_SHOW_FREQ_LABELS)

		self.formLayout.addRow("Measurement type:", self.comboBox_dual_channel)
		self.formLayout.addRow("FFT Size:", self.comboBox_fftsize)
		self.formLayout.addRow("Frequency scale:", self.comboBox_freqscale)
		self.formLayout.addRow("Min frequency:", self.spinBox_minfreq)
		self.formLayout.addRow("Max frequency:", self.spinBox_maxfreq)
		self.formLayout.addRow("Min:", self.spinBox_specmin)
		self.formLayout.addRow("Max:", self.spinBox_specmax)
		self.formLayout.addRow("Middle-ear weighting:", self.comboBox_weighting)
		self.formLayout.addRow("Response time:", self.comboBox_response_time)
		self.formLayout.addRow("Display max-frequency label:", self.checkBox_showFreqLabels)
		
		self.setLayout(self.formLayout)

		self.connect(self.comboBox_dual_channel, QtCore.SIGNAL('currentIndexChanged(int)'), self.dualchannelchanged)
		self.connect(self.comboBox_fftsize, QtCore.SIGNAL('currentIndexChanged(int)'), self.fftsizechanged)
		self.connect(self.comboBox_freqscale, QtCore.SIGNAL('currentIndexChanged(int)'), self.freqscalechanged)
		self.connect(self.spinBox_minfreq, QtCore.SIGNAL('valueChanged(int)'), self.parent().setminfreq)
		self.connect(self.spinBox_maxfreq, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmaxfreq)
		self.connect(self.spinBox_specmin, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmin)
		self.connect(self.spinBox_specmax, QtCore.SIGNAL('valueChanged(int)'), self.parent().setmax)
		self.connect(self.comboBox_weighting, QtCore.SIGNAL('currentIndexChanged(int)'), self.parent().setweighting)
		self.connect(self.comboBox_response_time, QtCore.SIGNAL('currentIndexChanged(int)'), self.responsetimechanged)
		self.connect(self.checkBox_showFreqLabels, QtCore.SIGNAL('toggled(bool)'), self.parent().setShowFreqLabel)

	# slot
	def dualchannelchanged(self, index):
		if index == 0:
			self.parent().setdualchannels(False)
		else:
			self.parent().setdualchannels(True)

	# slot
	def fftsizechanged(self, index):
		# FIXME
		if self.logger is not None:
			self.logger.push("fft_size_changed slot %d %d %f" %(index, 2**index*32, 150000/2**index*32))
		fft_size = 2**index*32
		self.parent().setfftsize(fft_size)
	
	# slot
	def freqscalechanged(self, index):
		# FIXME
		if self.logger is not None:
			self.logger.push("freq_scale slot %d" %index)
		if index == 1:
			self.parent().PlotZoneSpect.setlogfreqscale()
		else:
			self.parent().PlotZoneSpect.setlinfreqscale()

	# slot
	def responsetimechanged(self, index):
		if index == 0:
			response_time = 0.025
		elif index == 1:
			response_time = 0.125
		elif index == 2:
			response_time = 0.3
		elif index == 3:
			response_time = 1.
		self.logger.push("responsetimechanged slot %d %d" %(index, response_time))
		self.parent().setresponsetime(response_time)

	# method
	def saveState(self, settings):
		settings.setValue("fftSize", self.comboBox_fftsize.currentIndex())
		settings.setValue("freqScale", self.comboBox_freqscale.currentIndex())
		settings.setValue("freqMin", self.spinBox_minfreq.value())
		settings.setValue("freqMax", self.spinBox_maxfreq.value())
		settings.setValue("Min", self.spinBox_specmin.value())
		settings.setValue("Max", self.spinBox_specmax.value())
		settings.setValue("weighting", self.comboBox_weighting.currentIndex())
		settings.setValue("responseTime", self.comboBox_response_time.currentIndex())
		settings.setValue("showFreqLabels", self.checkBox_showFreqLabels.isChecked())

	# method
	def restoreState(self, settings):
		(fft_size, ok) = settings.value("fftSize", DEFAULT_FFT_SIZE).toInt() # 7th index is 1024 points
		self.comboBox_fftsize.setCurrentIndex(fft_size)
		(freqscale, ok) = settings.value("freqScale", DEFAULT_FREQ_SCALE).toInt()
		self.comboBox_freqscale.setCurrentIndex(freqscale)
		(freqMin, ok) = settings.value("freqMin", DEFAULT_MINFREQ).toInt()
		self.spinBox_minfreq.setValue(freqMin)
		(freqMax, ok) = settings.value("freqMax", DEFAULT_MAXFREQ).toInt()
		self.spinBox_maxfreq.setValue(freqMax)
		(colorMin, ok) = settings.value("Min", DEFAULT_SPEC_MIN).toInt()
		self.spinBox_specmin.setValue(colorMin)
		(colorMax, ok) = settings.value("Max", DEFAULT_SPEC_MAX).toInt()
		self.spinBox_specmax.setValue(colorMax)
		(weighting, ok) = settings.value("weighting", DEFAULT_WEIGHTING).toInt()
		self.comboBox_weighting.setCurrentIndex(weighting)
		(responseTime, ok) = settings.value("responseTime", DEFAULT_RESPONSE_TIME_INDEX).toInt()
		self.comboBox_response_time.setCurrentIndex(responseTime)
		showFreqLabels = settings.value("showFreqLabels", DEFAULT_SHOW_FREQ_LABELS).toBool()
		self.checkBox_showFreqLabels.setChecked(showFreqLabels)

########NEW FILE########
__FILENAME__ = statisticswidget
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2013 Timoth�e Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from PyQt4 import QtGui, QtCore
import psutil # for CPU usage monitoring

class StatisticsWidget(QtGui.QWidget):
	def __init__(self, parent, logger, timer, audiobackend):
		QtGui.QWidget.__init__(self, parent)

		self.audiobackend = audiobackend

		self.setObjectName("tab_stats")

		self.stats_scrollarea = QtGui.QScrollArea(self)
		self.stats_scrollarea.setWidgetResizable(True)
		self.stats_scrollarea.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
		self.stats_scrollarea.setObjectName("stats_scrollArea")

		self.scrollAreaWidgetContents = QtGui.QWidget(self.stats_scrollarea)
		self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 87, 220))
		self.scrollAreaWidgetContents.setStyleSheet("""QWidget { background: white }""")
		self.scrollAreaWidgetContents.setObjectName("stats_scrollAreaWidgetContents")

		self.LabelStats = QtGui.QLabel(self.scrollAreaWidgetContents)
		self.LabelStats.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
		self.LabelStats.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
		self.LabelStats.setObjectName("LabelStats")

		self.stats_layout = QtGui.QVBoxLayout(self.scrollAreaWidgetContents)
		self.stats_layout.setObjectName("stats_layout")
		self.stats_layout.addWidget(self.LabelStats)
		self.stats_scrollarea.setWidget(self.scrollAreaWidgetContents)

		self.tab_stats_layout = QtGui.QGridLayout(self)
		self.tab_stats_layout.addWidget(self.stats_scrollarea)

		timer.timeout.connect(self.update)


	# method
	def update(self):
		if not self.LabelStats.isVisible():
		    return
		
		cpu_percent = psutil.cpu_percent(0)

		label = "Chunk #%d\n"\
		"Audio buffer retrieval: %.02f ms\n"\
		"Global CPU usage: %d %%\n"\
		"Number of overflowed inputs (XRUNs): %d"\
		% (self.audiobackend.chunk_number,
			self.audiobackend.buffer_timer_time,
			cpu_percent,
			self.audiobackend.xruns)
		
		self.LabelStats.setText(label)

########NEW FILE########
__FILENAME__ = test_IECScale
import numpy as np
import matplotlib.pyplot as plt

import sys
sys.path.insert(0, '.')

import friture.qsynthmeter as meter

scale = meter.IECScale()

x = np.linspace(-100, 10, 1000)
y = [scale.iec_scale(x0) for x0 in x]

plt.figure()
plt.plot(x, y)

plt.show()

########NEW FILE########
__FILENAME__ = timeplot
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from friture.classplot import ClassPlot
import PyQt4.Qwt5 as Qwt
from PyQt4 import QtCore, Qt, QtGui
from numpy import log10, interp, linspace

class picker(Qwt.QwtPlotPicker):
	def __init__(self, *args):
		Qwt.QwtPlotPicker.__init__(self, *args)
		
	def trackerText(self, pos):
		pos2 = self.invTransform(pos)
		return Qwt.QwtText("%.3g ms, %.3g" %(pos2.x(), pos2.y()))

	def drawTracker(self, painter):
		textRect = self.trackerRect(painter.font())
		if not textRect.isEmpty():
		  	   label = self.trackerText(self.trackerPosition())
		  	   if not label.isEmpty():
		  	   	   painter.save()
		  	   	   painter.setPen(Qt.Qt.NoPen)
		  	   	   painter.setBrush(Qt.Qt.white)
		  	   	   painter.drawRect(textRect)
		  	   	   painter.setPen(Qt.Qt.black)
		  	   	   #painter->setRenderHint(QPainter::TextAntialiasing, false);
		  	   	   label.draw(painter, textRect)
		  	   	   painter.restore()

class TimePlot(ClassPlot):
	def __init__(self, parent, logger):
		ClassPlot.__init__(self)

		# store the logger instance
		self.logger = logger

		# we do not need caching
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintCached, False)
		self.canvas().setPaintAttribute(Qwt.QwtPlotCanvas.PaintPacked, False)

		# attach a grid
		grid = Qwt.QwtPlotGrid()
		grid.setMajPen(Qt.QPen(Qt.Qt.lightGray))
		grid.attach(self)

		xtitle = Qwt.QwtText('Time (ms)')
		xtitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.xBottom, xtitle)
		self.setAxisScale(Qwt.QwtPlot.yLeft, -1., 1.)
		# self.setAxisTitle(Qwt.QwtPlot.xBottom, 'Time (ms)')
		self.xmin = 0.
		self.xmax = 1.

		ytitle = Qwt.QwtText('Signal')
		ytitle.setFont(QtGui.QFont(8))
		self.setAxisTitle(Qwt.QwtPlot.yLeft, ytitle)
		# self.setAxisTitle(Qwt.QwtPlot.yLeft, 'Signal')
		self.setAxisScale(Qwt.QwtPlot.yLeft, -1., 1.)
		self.setAxisScaleEngine(Qwt.QwtPlot.xBottom, Qwt.QwtLinearScaleEngine())
		
		self.paint_time = 0.
		
		self.canvas_width = 0
  
		self.dual_channel = False
  
  		# insert an additional curve for the second channel
  		# (ClassPlot already has one by default)
		self.curve2 = Qwt.QwtPlotCurve("Ch2")
		self.curve2.setPen(QtGui.QPen(Qt.Qt.blue))
		#self.curve.setRenderHint(Qwt.QwtPlotItem.RenderAntialiased)
		#self.curve2.attach(self)

  		# gives an appropriate title to the first curve
  		# (for the legend)
		self.curve.setTitle("Ch1")
		
		# picker used to display coordinates when clicking on the canvas
		self.picker = picker(Qwt.QwtPlot.xBottom,
                               Qwt.QwtPlot.yLeft,
                               Qwt.QwtPicker.PointSelection,
                               Qwt.QwtPlotPicker.CrossRubberBand,
                               Qwt.QwtPicker.ActiveOnly,
                               self.canvas())
		
		self.cached_canvas = self.canvas()
		
		#need to replot here for the size Hints to be computed correctly (depending on axis scales...)
		self.replot()

	def setdata(self, x, y):
		if self.canvas_width <> self.cached_canvas.width():
			self.logger.push("timeplot : changed canvas width")
			self.canvas_width = self.cached_canvas.width()
			self.update_xscale()

		if self.dual_channel:
			self.dual_channel = False
			self.curve2.detach()
  			# disable the legend
  			# (useless when one channel is active)
			self.insertLegend(None, Qwt.QwtPlot.RightLegend)

		x_ms =  1e3*x
		needfullreplot = False
		if self.xmax <> x_ms[-1]:
			self.logger.push("timeplot : changing x max")
			self.xmax = x_ms[-1]
			self.setAxisScale(Qwt.QwtPlot.xBottom, self.xmin, self.xmax)
			self.update_xscale()
			needfullreplot = True
		if self.xmin <> x_ms[0]:
			self.logger.push("timeplot : changing x min")
			self.xmin = x_ms[0]
			self.setAxisScale(Qwt.QwtPlot.xBottom, self.xmin, self.xmax)
			self.update_xscale()
			needfullreplot = True

		y_interp = interp(self.xscaled, x_ms, y)
		ClassPlot.setdata(self, self.xscaled, y_interp)

		if needfullreplot:
			self.replot()
		else:
			# self.replot() would call updateAxes() which is dead slow (probably because it
			# computes label sizes); instead, let's just ask Qt to repaint the canvas next time
			# This works because we disable the cache
			self.cached_canvas.update()

	def setdataTwoChannels(self, x, y, y2):
		if self.canvas_width <> self.cached_canvas.width():
			self.logger.push("timeplot : changed canvas width")
			self.canvas_width = self.cached_canvas.width()
			self.update_xscale()

		if not self.dual_channel:
			self.dual_channel = True
			self.curve2.attach(self)
  			# enable the legend
  			# (to discrimate between the two channels)
			self.insertLegend(Qwt.QwtLegend(), Qwt.QwtPlot.RightLegend)
		
		x_ms =  1e3*x
		needfullreplot = False
		if self.xmax <> x_ms[-1]:
			self.logger.push("timeplot : changing x max")
			self.xmax = x_ms[-1]
			self.setAxisScale(Qwt.QwtPlot.xBottom, self.xmin, self.xmax)
			self.update_xscale()
			needfullreplot = True
		if self.xmin <> x_ms[0]:
			self.logger.push("timeplot : changing x min")
			self.xmin = x_ms[0]
			self.setAxisScale(Qwt.QwtPlot.xBottom, self.xmin, self.xmax)
			self.update_xscale()
			needfullreplot = True

		#y_interp = interp(self.xscaled, x_ms, y)
  		#y_interp2 = interp(self.xscaled, x_ms, y2)
		#ClassPlot.setdata(self, self.xscaled, y_interp)
		#self.curve2.setData(self.xscaled, y_interp2)
		ClassPlot.setdata(self, x_ms, y)
		self.curve2.setData(x_ms, y2)

		if needfullreplot:
			self.replot()
		else:
			# self.replot() would call updateAxes() which is dead slow (probably because it
			# computes label sizes); instead, let's just ask Qt to repaint the canvas next time
			# This works because we disable the cache
			self.cached_canvas.update()

	def update_xscale(self):
		self.xscaled = linspace(self.xmin, self.xmax, self.canvas_width)

	def drawCanvas(self, painter):
		t = QtCore.QTime()
		t.start()
		Qwt.QwtPlot.drawCanvas(self, painter)
		self.paint_time = (95.*self.paint_time + 5.*t.elapsed())/100.

########NEW FILE########
__FILENAME__ = ui_friture
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/friture.ui'
#
# Created: Wed Jan 26 10:01:38 2011
#      by: PyQt4 UI code generator 4.7.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(869, 573)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images-src/window-icon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("None")
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.ToolBarArea(QtCore.Qt.TopToolBarArea), self.toolBar)
        self.actionStart = QtGui.QAction(MainWindow)
        self.actionStart.setCheckable(True)
        self.actionStart.setChecked(True)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/images-src/start.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon1.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Active, QtGui.QIcon.On)
        icon1.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        icon1.addPixmap(QtGui.QPixmap(":/images-src/stop.svg"), QtGui.QIcon.Disabled, QtGui.QIcon.On)
        self.actionStart.setIcon(icon1)
        self.actionStart.setObjectName("actionStart")
        self.actionSettings = QtGui.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/images-src/tools.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSettings.setIcon(icon2)
        self.actionSettings.setObjectName("actionSettings")
        self.actionAbout = QtGui.QAction(MainWindow)
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName("actionAbout")
        self.actionNew_dock = QtGui.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/images-src/new-dock.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew_dock.setIcon(icon3)
        self.actionNew_dock.setObjectName("actionNew_dock")
        self.toolBar.addAction(self.actionStart)
        self.toolBar.addAction(self.actionNew_dock)
        self.toolBar.addAction(self.actionSettings)
        self.toolBar.addAction(self.actionAbout)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QtGui.QApplication.translate("MainWindow", "Friture", None, QtGui.QApplication.UnicodeUTF8))
        self.toolBar.setWindowTitle(QtGui.QApplication.translate("MainWindow", "toolBar", None, QtGui.QApplication.UnicodeUTF8))
        self.actionStart.setText(QtGui.QApplication.translate("MainWindow", "Stop", None, QtGui.QApplication.UnicodeUTF8))
        self.actionStart.setToolTip(QtGui.QApplication.translate("MainWindow", "Start/Stop", None, QtGui.QApplication.UnicodeUTF8))
        self.actionStart.setShortcut(QtGui.QApplication.translate("MainWindow", "Space", None, QtGui.QApplication.UnicodeUTF8))
        self.actionSettings.setText(QtGui.QApplication.translate("MainWindow", "Settings", None, QtGui.QApplication.UnicodeUTF8))
        self.actionSettings.setToolTip(QtGui.QApplication.translate("MainWindow", "Display settings dialog", None, QtGui.QApplication.UnicodeUTF8))
        self.actionAbout.setText(QtGui.QApplication.translate("MainWindow", "About Friture", None, QtGui.QApplication.UnicodeUTF8))
        self.actionNew_dock.setText(QtGui.QApplication.translate("MainWindow", "New dock", None, QtGui.QApplication.UnicodeUTF8))
        self.actionNew_dock.setToolTip(QtGui.QApplication.translate("MainWindow", "Add a new dock to Friture window", None, QtGui.QApplication.UnicodeUTF8))

import friture.friture_rc

########NEW FILE########
__FILENAME__ = ui_settings
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/settings.ui'
#
# Created: Thu May 09 18:01:20 2013
#      by: PyQt4 UI code generator 4.8.5
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

class Ui_Settings_Dialog(object):
    def setupUi(self, Settings_Dialog):
        Settings_Dialog.setObjectName(_fromUtf8("Settings_Dialog"))
        Settings_Dialog.resize(483, 275)
        Settings_Dialog.setWindowTitle(QtGui.QApplication.translate("Settings_Dialog", "Settings", None, QtGui.QApplication.UnicodeUTF8))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/images-src/tools.svg")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Settings_Dialog.setWindowIcon(icon)
        self.verticalLayout_5 = QtGui.QVBoxLayout(Settings_Dialog)
        self.verticalLayout_5.setObjectName(_fromUtf8("verticalLayout_5"))
        self.label_inputType_2 = QtGui.QLabel(Settings_Dialog)
        self.label_inputType_2.setText(QtGui.QApplication.translate("Settings_Dialog", "Select the input device :", None, QtGui.QApplication.UnicodeUTF8))
        self.label_inputType_2.setObjectName(_fromUtf8("label_inputType_2"))
        self.verticalLayout_5.addWidget(self.label_inputType_2)
        self.comboBox_inputDevice = QtGui.QComboBox(Settings_Dialog)
        self.comboBox_inputDevice.setObjectName(_fromUtf8("comboBox_inputDevice"))
        self.verticalLayout_5.addWidget(self.comboBox_inputDevice)
        spacerItem = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem)
        self.horizontalLayout = QtGui.QHBoxLayout()
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.verticalLayout_3 = QtGui.QVBoxLayout()
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        spacerItem1 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem1)
        self.label_inputType = QtGui.QLabel(Settings_Dialog)
        self.label_inputType.setText(QtGui.QApplication.translate("Settings_Dialog", "Select the type of input :", None, QtGui.QApplication.UnicodeUTF8))
        self.label_inputType.setObjectName(_fromUtf8("label_inputType"))
        self.verticalLayout_3.addWidget(self.label_inputType)
        self.radioButton_single = QtGui.QRadioButton(Settings_Dialog)
        self.radioButton_single.setText(QtGui.QApplication.translate("Settings_Dialog", "Single channel", None, QtGui.QApplication.UnicodeUTF8))
        self.radioButton_single.setChecked(True)
        self.radioButton_single.setObjectName(_fromUtf8("radioButton_single"))
        self.inputTypeButtonGroup = QtGui.QButtonGroup(Settings_Dialog)
        self.inputTypeButtonGroup.setObjectName(_fromUtf8("inputTypeButtonGroup"))
        self.inputTypeButtonGroup.addButton(self.radioButton_single)
        self.verticalLayout_3.addWidget(self.radioButton_single)
        self.radioButton_duo = QtGui.QRadioButton(Settings_Dialog)
        self.radioButton_duo.setText(QtGui.QApplication.translate("Settings_Dialog", "Two channels", None, QtGui.QApplication.UnicodeUTF8))
        self.radioButton_duo.setObjectName(_fromUtf8("radioButton_duo"))
        self.inputTypeButtonGroup.addButton(self.radioButton_duo)
        self.verticalLayout_3.addWidget(self.radioButton_duo)
        spacerItem2 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem2)
        self.horizontalLayout.addLayout(self.verticalLayout_3)
        self.verticalLayout_4 = QtGui.QVBoxLayout()
        self.verticalLayout_4.setObjectName(_fromUtf8("verticalLayout_4"))
        self.groupBox_first = QtGui.QGroupBox(Settings_Dialog)
        self.groupBox_first.setTitle(QtGui.QApplication.translate("Settings_Dialog", "First channel", None, QtGui.QApplication.UnicodeUTF8))
        self.groupBox_first.setObjectName(_fromUtf8("groupBox_first"))
        self.verticalLayout = QtGui.QVBoxLayout(self.groupBox_first)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.comboBox_firstChannel = QtGui.QComboBox(self.groupBox_first)
        self.comboBox_firstChannel.setObjectName(_fromUtf8("comboBox_firstChannel"))
        self.verticalLayout.addWidget(self.comboBox_firstChannel)
        self.verticalLayout_4.addWidget(self.groupBox_first)
        self.groupBox_second = QtGui.QGroupBox(Settings_Dialog)
        self.groupBox_second.setEnabled(False)
        self.groupBox_second.setTitle(QtGui.QApplication.translate("Settings_Dialog", "Second channel", None, QtGui.QApplication.UnicodeUTF8))
        self.groupBox_second.setObjectName(_fromUtf8("groupBox_second"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.groupBox_second)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.comboBox_secondChannel = QtGui.QComboBox(self.groupBox_second)
        self.comboBox_secondChannel.setObjectName(_fromUtf8("comboBox_secondChannel"))
        self.verticalLayout_2.addWidget(self.comboBox_secondChannel)
        self.verticalLayout_4.addWidget(self.groupBox_second)
        self.horizontalLayout.addLayout(self.verticalLayout_4)
        self.verticalLayout_5.addLayout(self.horizontalLayout)

        self.retranslateUi(Settings_Dialog)
        QtCore.QMetaObject.connectSlotsByName(Settings_Dialog)

    def retranslateUi(self, Settings_Dialog):
        pass

import friture_rc

########NEW FILE########
__FILENAME__ = friture
#!/usr/bin/env python
import sys

# allow this script to be executed as a child of another script (lsprofcalltree, for example)
sys.path.insert(0, '.')

from friture.analyzer import main

main()
########NEW FILE########
__FILENAME__ = 2dpainting
#!/usr/bin/env python
# -*- coding: utf-8 -*-

############################################################################
##
## Copyright (C) 2006-2006 Trolltech ASA. All rights reserved.
##
## This file is part of the example classes of the Qt Toolkit.
##
## This file may be used under the terms of the GNU General Public
## License version 2.0 as published by the Free Software Foundation
## and appearing in the file LICENSE.GPL included in the packaging of
## this file.  Please review the following information to ensure GNU
## General Public Licensing requirements will be met:
## http://www.trolltech.com/products/qt/opensource.html
##
## If you are unsure which license is appropriate for your use, please
## review the following information:
## http://www.trolltech.com/products/qt/licensing.html or contact the
## sales department at sales@trolltech.com.
##
## This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
## WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
##
############################################################################

import sys
import math

from PyQt4 import QtCore, QtGui, QtOpenGL

try:
    from OpenGL import GL
except ImportError:
    app = QtGui.QApplication(sys.argv)
    QtGui.QMessageBox.critical(None, "OpenGL 2dpainting",
            "PyOpenGL must be installed to run this example.")
    sys.exit(1)

class GLWidget(QtOpenGL.QGLWidget):
    def __init__(self, parent):
	fmt = QtOpenGL.QGLFormat()
	fmt.setSampleBuffers(True) # antialiasing
        QtOpenGL.QGLWidget.__init__(self, fmt, parent)

        self.setFixedSize(300, 300)
        self.setAutoFillBackground(False)
	self.textPen = QtGui.QPen(QtCore.Qt.white)
        self.textFont = QtGui.QFont()
        self.textFont.setPixelSize(50)

    def paintEvent(self, event):
        painter = QtGui.QPainter(self)
        painter.setRenderHint(QtGui.QPainter.Antialiasing)
        painter.translate(150, 150)
        painter.setPen(self.textPen)
        painter.setFont(self.textFont)
        painter.drawText(QtCore.QRect(-50, -50, 100, 100), QtCore.Qt.AlignCenter, "Qt")


class Window(QtGui.QWidget):
    def __init__(self):
        super(Window, self).__init__()

        openGL = GLWidget(self)

        layout = QtGui.QGridLayout()
        layout.addWidget(openGL, 0, 1)
        self.setLayout(layout)

if __name__ == '__main__':

    app = QtGui.QApplication(sys.argv)
    window = Window()
    window.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = delay
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2009 Timothée Lecomte

# This file is part of Friture.
#
# Friture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# Friture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Friture.  If not, see <http://www.gnu.org/licenses/>.

from numpy import argmax
import numpy
import numpy as np
from numpy.fft import rfft, irfft, fft, ifft
from friture.filter import decimate
from friture import generated_filters
from friture.ringbuffer import RingBuffer
from friture.delay_estimator import subsampler, subsampler_filtic, DEFAULT_DELAYRANGE
from scipy.io import wavfile
import matplotlib.pyplot as plt

def generalized_cross_correlation(d0, d1):
    # substract the means
    # (in order to get a normalized cross-correlation at the end)
    d0 -= d0.mean()
    d1 -= d1.mean()

    # Hann window to mitigate non-periodicity effects
    window = numpy.hanning(len(d0))

    #d0_padded = np.zeros((len(d0)*2), dtype=d0.dtype)
    #d0_padded[:len(d0)] = d0
    #d1_padded = np.zeros((len(d1)*2), dtype=d1.dtype)
    #d1_padded[len(d1):] = d1

    # compute the cross-correlation
    D0 = rfft(d0*window)
    D1 = rfft(d1*window)
    #D0 = rfft(d0_padded)
    #D1 = rfft(d1_padded)
    D0r = D0.conjugate()
    G = D0r*D1
    #G = (G==0.)*1e-30 + (G<>0.)*G
    #W = 1. # frequency unweighted
    #W = 1./numpy.abs(G) # "PHAT"
    absG = numpy.abs(G)
    m = max(absG)
    W = 1./(1e-6*m + absG)
    #D1r = D1.conjugate(); G0 = D0r*D0; G1 = D1r*D1; W = numpy.abs(G)/(G0*G1) # HB weighted
    Xcorr = irfft(W*G)
    #Xcorr_unweighted = irfft(G)
    #numpy.save("d0.npy", d0)
    #numpy.save("d1.npy", d1)
    #numpy.save("Xcorr.npy", Xcorr)

    return Xcorr

def main():
    Ns = 44100*400 #44100*60*3 #3000000

    print "Loading data"

    # load data
    #fname = 'sandbox/test_cpea_20120602_part3.wav' # delay = 45.2 ms = 1993 samples (from Friture cross-correlation measurements)
    fname = 'sandbox/gary_moore_separate_chambre.wav'
    #fname = 'sandbox/gary_moore_loner_chambre.wav'
    #fname = 'sandbox/test_cpea_20120602.wav'
    #data, fs, enc = wavread(fname)
    SAMPLING_RATE, data = wavfile.read(fname)

    print data.shape, data.dtype
    data = data.astype(np.float64) # convert from integer to floats for computations

    ht = None

    #data = data[:Ns,:]
    data /= 2**16
    #data = data[::-1,:]

    # original signal
    x = data[:Ns,0]
    
    # measured signal
    m = data[:Ns,1]

    print "Data loaded"

    # We will decimate several times
    # no decimation => 1/fs = 23 µs resolution
    # 1 ms resolution => fs = 1000 Hz is enough => can divide the sampling rate by 44 !
    # if I decimate 2 times (2**2 = 4 => 0.092 ms (3 cm) resolution)!
    # if I decimate 3 times (2**3 = 8 => 0.184 ms (6 cm) resolution)!
    # if I decimate 4 times (2**4 = 16 => 0.368 ms (12 cm) resolution)!
    # if I decimate 5 times (2**5 = 32 => 0.7 ms (24 cm) resolution)!
    # (actually, I could fit a gaussian on the cross-correlation peak to get
    # higher resolution even at low sample rates)
    Ndec = 2
    subsampled_sampling_rate = SAMPLING_RATE/2**(Ndec)
    [bdec, adec] = generated_filters.params['dec']
    zfs0 = subsampler_filtic(Ndec, bdec, adec)
    zfs1 = subsampler_filtic(Ndec, bdec, adec)
    
    delayrange_s = DEFAULT_DELAYRANGE # confidence range

    # separate the channels
    x0 = x
    x1 = m
    #subsample them
    print "subsampling x0"
    x0_dec, zfs0 = subsampler(Ndec, bdec, adec, x0, zfs0)
    print "subsampling x1"
    x1_dec, zfs1 = subsampler(Ndec, bdec, adec, x1, zfs1)

    time = 2*delayrange_s
    length = time*subsampled_sampling_rate
    Ns_dec = Ns/2**(Ndec)
    overlap = 0.5
    Nb = int((1./overlap)*(Ns_dec/length - 1))

    old_Xcorr = np.zeros((length), np.complex128)

    print "time =", time
    print "length =", length
    print "Ns_dec = ", Ns_dec
    print "Nb =", Nb

    # Hann window to mitigate non-periodicity effects
    window = numpy.hanning(length)

    #l2 = length/2 + 1
    # Hann window to mitigate non-periodicity effects
    #window2 = numpy.hanning(l2)

    #f1 = plt.figure()
    #plt1 = f1.add_subplot(1,1,1)
    #f2 = plt.figure()
    #plt2 = f2.add_subplot(1,1,1)

    for i in range(Nb):
        print i
        # retrieve last one-second of data

        d0 = x0_dec[i*length*overlap:i*length*overlap + length]
        d1 = x1_dec[i*length*overlap:i*length*overlap + length]

        std0 = numpy.std(d0)
        std1 = numpy.std(d1)
        if std0>0. and std1>0.:
            Xcorr = generalized_cross_correlation(d0, d1)

            #plt1.plot(Xcorr)
            #plt.figure()
            #plt.plot(Xcorr)
            #plt.draw()

            if old_Xcorr != None and old_Xcorr.shape == Xcorr.shape:
                # smoothing
                alpha = 0.3
                smoothed_Xcorr = alpha*Xcorr + (1. - alpha)*old_Xcorr
            else:
                smoothed_Xcorr = Xcorr
            
            #plt2.plot(Xcorr)
            #plt.draw()

            absXcorr = numpy.abs(smoothed_Xcorr)
            ind = argmax(absXcorr)

            #h2_ = fft(absXcorr**2)
            #N = len(h2_)
            #h2_[N/50:-N/50] = 0.
            #h2 = ifft(h2_)
            #ind = argmax(h2)

            #plt.figure()
            #plt.plot(Xcorr)
            #plt.plot(absXcorr)
            #plt.draw()

            # normalize
            #Xcorr_max_norm = Xcorr_unweighted[ind]/(d0.size*std0*std1)
            Xcorr_extremum = smoothed_Xcorr[ind]
            Xcorr_max_norm = abs(smoothed_Xcorr[ind])/(3*numpy.std(smoothed_Xcorr))
            delay_ms = 1e3*float(ind)/subsampled_sampling_rate
        
            # delays larger than the half of the window most likely are actually negative
            if delay_ms > 1e3*time/2.:
                delay_ms -= 1e3*time

            # store for smoothing
            old_Xcorr = smoothed_Xcorr
        else:
            delay_ms = 0.
            Xcorr_max_norm = 0.
            Xcorr_extremum = 0.

        # debug wrong phase detection
        #if Xcorr_extremum < 0.:
        #    numpy.save("Xcorr.npy", Xcorr)
        #    numpy.save("smoothed_Xcorr.npy", smoothed_Xcorr)

        c = 340. # speed of sound, in meters per second (approximate)
        distance_m = delay_ms*1e-3*c

        # home-made measure of the significance
        slope = 0.12
        p = 3
        x = (Xcorr_max_norm>1.)*(Xcorr_max_norm-1.)
        x = (slope*x)**p
        correlation = int((x/(1. + x))*100)
        
        delay_message = "%.1f ms = %.2f m" %(delay_ms, distance_m)

        correlation_message = "%d%%" %(correlation)

        if Xcorr_extremum >= 0:
            polarity_message = "In-phase"
        else:
            polarity_message = "Reversed phase"

        print ind, delay_message, correlation_message, polarity_message

    plt.show()

if False:
    import cProfile
    import pstats

    cProfile.runctx('main()', globals(), locals(), filename="delay.cprof")

    stats = pstats.Stats("delay.cprof")
    stats.strip_dirs().sort_stats('time').print_stats(20)
    #stats.strip_dirs().sort_stats('cumulative').print_stats(20)  
else:
    main()

########NEW FILE########
__FILENAME__ = fft_benchmark
import pyfftw
import numpy as np
import scipy.fftpack as scifft
import time
import anfft
import fftw3

# initial data
N = 256
a0 = np.random.rand(N)

Ntest = 1000

# Create 3 16-byte aligned arays using the aligned array creation functions
# They are cleared during the object creation, so there is no point filling them.
a = pyfftw.n_byte_align_empty(a0.shape, 16, dtype=np.complex128)
b = pyfftw.n_byte_align_empty(a.shape, 16, dtype=a.dtype)
c = pyfftw.n_byte_align_empty(a.shape, 16, dtype=a.dtype)

# Create the DFT and inverse DFT objects
fft = pyfftw.FFTW(a, b)
ifft = pyfftw.FFTW(b, c, direction='FFTW_BACKWARD')

# Fill a with data
a[:] = a0
#print a

t0 = time.time()

for i in range(Ntest):
	# perform the fft
	#fft.execute()
	fft()
	#print b

	# perform the inverse fft
	#ifft.execute()
	ifft() #calling the class instance will normalize
	#print c/a.size
	#c[:] /= a.size

t0b = time.time()

print np.sum(c)

t1 = time.time()

for i in range(Ntest):
	b2 = scifft.fft(a0)
	a1 = scifft.ifft(b2)

t1b = time.time()

print np.sum(a1)

t2 = time.time()

for i in range(Ntest):
	b3 = anfft.fft(a0)
	a2 = anfft.ifft(b3)

t2b = time.time()

print np.sum(a2)

t3 = time.time()

# create a forward and backward fft plan
a = fftw3.create_aligned_array(a0.shape, np.complex128, 16)
b = fftw3.create_aligned_array(a0.shape, np.complex128, 16)
c = fftw3.create_aligned_array(a0.shape, np.complex128, 16)
a[:] = a0
ft3fft = fftw3.Plan(a, b, direction='forward', flags=['measure'])
ft3ifft = fftw3.Plan(b, c, direction='backward', flags=['measure'])

t4 = time.time()

for i in range(Ntest):
	#perform a forward transformation
	ft3fft() # alternatively fft.execute() or fftw.execute(fft)

	#perform a backward transformation
	ft3ifft() 

t4b = time.time()

print np.sum(c)

t5 = time.time()

for i in range(Ntest):
	b2 = np.fft.fft(a0)
	a1 = np.fft.ifft(b2)

t5b = time.time()

print np.sum(a1)

t_pyfftw = t0b - t0
t_scipy = t1b - t1
t_anfft = t2b - t2
t_pyfftw3 = t4b - t4
t_numfft = t5b - t5

print "pyfftw:", t_pyfftw
print "scipy fftpack:", t_scipy
print "anfft", t_anfft
print "pyfftw3:", t_pyfftw3
print "numpy fft:", t_numfft

########NEW FILE########
__FILENAME__ = filter_compare_fir_iir
from matplotlib import pylab as plt
import numpy as np
from scipy.signal.filter_design import iirdesign
from scipy.signal.fir_filter_design import remez
from scipy.signal.signaltools import lfilter
from numpy.fft import fft, fftshift, fftfreq

N = 2**13
fs = 44100.
x = np.arange(0,N)/fs
f = 1800.
#signal
y = np.sin(2*np.pi*x*f)

#window
window = np.hanning(N)

# windowed signal
y *= window

(b_iir, a_iir) = iirdesign(0.49, 0.51, 0.05, 70, analog=0, ftype='ellip', output='ba')
print "IIR coeff created", len(b_iir), len(a_iir)

Ntaps = 512
b_fir = remez(numtaps=Ntaps, bands=[0., 0.49/2., 0.51/2., 1./2.], desired=[1.,0.])#, maxiter=250, grid_density=64)
a_fir = [1.]
print "FIR coeff created", len(b_fir), len(a_fir)

import time
t0 = time.time()
yf_fir, zf = lfilter(b_fir, a_fir, y, zi=np.zeros(max(len(a_fir),len(b_fir))-1))
t1 = time.time()
yf_iir, zf = lfilter(b_iir, a_iir, y, zi=np.zeros(max(len(a_iir),len(b_iir))-1))
t2 = time.time()
tfir = t1 - t0
tiir = t2 - t1
print "fir", tfir, "iir", tiir, "fir/iir", tfir/tiir

impulse = np.zeros(N); impulse[N/2] = 1.
yf_imp_fir, zf = lfilter(b_fir, a_fir, impulse, zi=np.zeros(max(len(a_fir),len(b_fir))-1))
yf_imp_iir, zf = lfilter(b_iir, a_iir, impulse, zi=np.zeros(max(len(a_iir),len(b_iir))-1))

plt.figure()

plt.subplot(411)
plt.title("original and filtered signals")
plt.plot(x, y)
plt.plot(x, yf_fir)
plt.plot(x, yf_iir)

plt.subplot(412)
plt.title("original and filtered frequency distributions")
freqScale = fftshift(fftfreq(N,1./fs))[N/2:]
plt.semilogx(freqScale, fftshift(20. * np.log10(abs(fft(y*window))))[N/2:])
plt.semilogx(freqScale, fftshift(20. * np.log10(abs(fft(yf_fir*window))))[N/2:])
plt.semilogx(freqScale, fftshift(20. * np.log10(abs(fft(yf_iir*window))))[N/2:])

plt.subplot(413)
plt.title("filter impulse magnitude response")
plt.semilogx(freqScale, fftshift(20. * np.log10(abs(fft(impulse*window))))[N/2:], label="signal")
plt.semilogx(freqScale, fftshift(20. * np.log10(abs(fft(yf_imp_fir*window))))[N/2:], label="FIR filt.")
plt.semilogx(freqScale, fftshift(20. * np.log10(abs(fft(yf_imp_iir*window))))[N/2:], label="IIR filt.")
plt.legend(loc='lower left')

plt.subplot(414)
plt.title("filter impulse phase response")
plt.semilogx(freqScale, fftshift(np.angle(fft(impulse*window)))[N/2:], label="signal")
plt.semilogx(freqScale, fftshift(np.angle(fft(yf_imp_fir*window)))[N/2:], label="FIR filt.")
plt.semilogx(freqScale, fftshift(np.angle(fft(yf_imp_iir*window)))[N/2:], label="IIR filt.")
plt.legend(loc='lower left')

plt.show()

########NEW FILE########
__FILENAME__ = filter_design_fir
# -*- coding: utf-8 -*-
from numpy import pi, exp, arange, cos, sin, sqrt, zeros, ones, log, arange
# the three following lines are a workaround for a bug with scipy and py2exe
# together. See http://www.pyinstaller.org/ticket/83 for reference.
from scipy.misc import factorial
import scipy
scipy.factorial = factorial

#importing from scipy.signal.signaltools and scipy.signal.filter_design instead of scipy.signal
#decreases dramatically the number of modules imported
from scipy.signal.signaltools import lfilter
from scipy.signal import remez
from scipy.signal.filter_design import ellip, butter, firwin, cheby1, iirdesign, freqz

from filter import octave_frequencies, octave_filter_bank, octave_filter_bank_decimation

# bank of filters for any other kind of frequency scale
# http://cobweb.ecn.purdue.edu/~malcolm/apple/tr35/PattersonsEar.pdf
# bandwidth of a cochlear channel as a function of center frequency

# Change the following parameters if you wish to use a different
# ERB scale.
EarQ = 9.26449 # Glasberg and Moore Parameters
minBW = 24.7
order = 1.

NOCTAVE = 8

def frequencies(fs, numChannels, lowFreq):
	channels = arange(0, numChannels)
	cf = -(EarQ*minBW) + exp(channels*(-log(fs/2 + EarQ*minBW) + \
		log(lowFreq + EarQ*minBW))/numChannels) \
		*(fs/2 + EarQ*minBW)
	return cf

def MakeERBFilters(fs, numChannels, lowFreq):
	# [forward, feedback] = MakeERBFilters(fs, numChannels) computes the
	# filter coefficients for a bank of Gammatone filters. These
	# filters were defined by Patterson and Holdworth for simulating
	# the cochlea. The results are returned as arrays of filter
	# coefficients. Each row of the filter arrays (forward and feedback)
	# can be passed to the MatLab "filter" function, or you can do all
	# the filtering at once with the ERBFilterBank() function.
	#
	# The filter bank contains "numChannels" channels that extend from
	# half the sampling rate (fs) to "lowFreq".
	T = 1./fs
	# All of the following expressions are derived in Apple TR #35, "An
	# Efficient Implementation of the Patterson-Holdsworth Cochlear
	# Filter Bank."
	cf = frequencies(fs, numChannels, lowFreq)
	ERB = ((cf/EarQ)**order + minBW**order)**(1./order)
	B = 1.019*2*pi*ERB
	gain = abs((-2*exp(4*1j*cf*pi*T)*T + \
		   2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) - sqrt(3. - 2.**(3./2.))* \
		   sin(2*cf*pi*T))) * \
		   (-2*exp(4*1j*cf*pi*T)*T + \
		   2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) + sqrt(3. - 2.**(3./2.)) * \
		   sin(2*cf*pi*T)))* \
		   (-2*exp(4*1j*cf*pi*T)*T + \
		   2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) - \
		   sqrt(3. + 2.**(3./2.))*sin(2*cf*pi*T))) * \
		   (-2*exp(4*1j*cf*pi*T)*T + 2*exp(-(B*T) + 2*1j*cf*pi*T)*T* \
		   (cos(2*cf*pi*T) + sqrt(3. + 2.**(3./2.))*sin(2*cf*pi*T))) / \
		   (-2 / exp(2*B*T) - 2*exp(4*1j*cf*pi*T) + \
		   2*(1 + exp(4*1j*cf*pi*T))/exp(B*T))**4)
	
	feedback = zeros((len(cf), 9))
	forward = zeros((len(cf), 5))
	forward[:,0] = T**4 / gain
	forward[:,1] = -4*T**4*cos(2*cf*pi*T)/exp(B*T)/gain
	forward[:,2] = 6*T**4*cos(4*cf*pi*T)/exp(2*B*T)/gain
	forward[:,3] = -4*T**4*cos(6*cf*pi*T)/exp(3*B*T)/gain
	forward[:,4] = T**4*cos(8*cf*pi*T)/exp(4*B*T)/gain
	feedback[:,0] = ones(len(cf))
	feedback[:,1] = -8*cos(2*cf*pi*T)/exp(B*T)
	feedback[:,2] = 4*(4 + 3*cos(4*cf*pi*T))/exp(2*B*T)
	feedback[:,3] = -8*(6*cos(2*cf*pi*T) + cos(6*cf*pi*T))/exp(3*B*T)
	feedback[:,4] = 2*(18 + 16*cos(4*cf*pi*T) + cos(8*cf*pi*T))/exp(4*B*T)
	feedback[:,5] = -8*(6*cos(2*cf*pi*T) + cos(6*cf*pi*T))/exp(5*B*T)
	feedback[:,6] = 4*(4 + 3*cos(4*cf*pi*T))/exp(6*B*T)
	feedback[:,7] = -8*cos(2*cf*pi*T)/exp(7*B*T)
	feedback[:,8] = exp(-8*B*T)

	return [forward, feedback]

def octave_filters(Nbands, BandsPerOctave):
	# Bandpass Filter Generation
	pbrip = .5	# Pass band ripple
	sbrip = 50	# Stop band rejection
	#Filter order
	order = 2

	fi, f_low, f_high = octave_frequencies(Nbands, BandsPerOctave)

	fs = 44100 # sampling rate
	wi = fi/(fs/2.) # normalized frequencies
	w_low = f_low/(fs/2.)
	w_high = f_high/(fs/2.)

	B = []
	A = []
	
	# For each band
	for w, wl, wh in zip(wi, w_low, w_high):
		# normalized frequency vector
		freq = [wl, wh]
	
		# could be another IIR filter
		[b, a] = ellip(order, pbrip, sbrip, freq, btype='bandpass')
		
		B += [b]
		A += [a]
		
	return [B, A, fi, f_low, f_high]

# Note : A way to make the filtering more efficient is to do it with IIR + decimation
# instead of IIR only
# More precisely, we design as much filters as bands per octave (instead of total number
# of bands), and apply it several times on repeatedly decimated signal to go from one octave
# to its lower neighbor
def octave_filters_oneoctave(Nbands, BandsPerOctave):
	# Bandpass Filter Generation
	pbrip = .5	# Pass band ripple
	sbrip = 50	# Stop band rejection
	#Filter order
	order = 2

	fi, f_low, f_high = octave_frequencies(Nbands, BandsPerOctave)

	fi     = fi[-BandsPerOctave:]
	f_low  = f_low[-BandsPerOctave:]
	f_high = f_high[-BandsPerOctave:]

	fs = 44100 # sampling rate
	wi = fi/(fs/2.) # normalized frequencies
	w_low = f_low/(fs/2.)
	w_high = f_high/(fs/2.)

	B = []
	A = []
	
	# For each band
	for w, wl, wh, f, fl, fh in zip(wi, w_low, w_high, fi, f_low, f_high):
		# normalized frequency vector
		freq = [wl, wh]
	
		# could be another IIR filter
		#[b, a] = ellip(order, pbrip, sbrip, freq, btype='bandpass')
		a = (fh - fl)/f*0.3
		bands = [0.,fl/fs*(1-a),fl/fs*(1+a),fh/fs*(1-a),fh/fs*(1+a),0.5]
		b = remez(numtaps=BandsPerOctave/24.*1000, bands=bands, desired=[0.,1.,0.]); a = [1.]
		
		B += [b]
		A += [a]
		
	return [B, A, fi, f_low, f_high]

def generate_filters_params():
	import pickle
	
	params = {}
	
	# generate the low-pass filter for decimation
	Ndec = 3
	fc = 0.5
	# other possibilities
	#(bdec, adec) = ellip(Ndec, 0.05, 30, fc)
	#print bdec
	#(bdec, adec) = cheby1(Ndec, 0.05, fc)
	#(bdec, adec) = butter(Ndec, fc)
	(bdec, adec) = iirdesign(0.48, 0.50, 0.05, 70, analog=0, ftype='ellip', output='ba')
	#bdec = firwin(30, fc)
	#adec = [1.]
	
	params['dec'] = [bdec, adec]
	
	#generate the octave filters
	for BandsPerOctave in [1,3,6,12,24]:#,48,96]:
		Nbands = NOCTAVE*BandsPerOctave
		[boct, aoct, fi, flow, fhigh] = octave_filters_oneoctave(Nbands, BandsPerOctave)
		params['%d' %BandsPerOctave] = [boct, aoct, fi, flow, fhigh]
	
	#generate the filters for non-decimating filters
	for BandsPerOctave in [1,3,6,12,24,48,96]:
		Nbands = NOCTAVE*BandsPerOctave
		octave_filters(Nbands, BandsPerOctave)
		[b, a, fi, flow, fhigh] = octave_filters(Nbands, BandsPerOctave)
		params['nodec %d' %BandsPerOctave] = [b, a, fi, flow, fhigh]
	
	output = open('generated_filters.pkl', 'wb')
	# Pickle dictionary using protocol 0.
	pickle.dump(params, output)
	# Pickle the list using the highest protocol available.
	#pickle.dump(selfref_list, output, -1)
	output.close()

# main() is a test function
def main():
	from matplotlib.pyplot import semilogx, plot, show, xlim, ylim, figure, legend, subplot, bar
	from numpy.fft import fft, fftfreq, fftshift, ifft
	from numpy import log10, linspace, interp, angle, array, concatenate, hamming

	N = 2**12
	fs = 44100.
	Nchannels = 20
	low_freq = 20.

	#impulse = zeros(N)
	#impulse[N/2] = 1
	f = 70.
	impulse = sin(2*pi*f*arange(0, N/fs, 1./fs))*hamming(N)

	#[ERBforward, ERBfeedback] = MakeERBFilters(fs, Nchannels, low_freq)
	#y = ERBFilterBank(ERBforward, ERBfeedback, impulse)

	BandsPerOctave = 24
	Nbands = NOCTAVE*BandsPerOctave
	
	[B, A, fi, fl, fh] = octave_filters(Nbands, BandsPerOctave)
	y, zfs = octave_filter_bank(B, A, impulse)
	print "Filter lengths without decimation"
	for b, a in zip(B, A):
		print len(b), len(a)
	
	
	response = 20.*log10(abs(fft(y)))
	freqScale = fftfreq(N, 1./fs)
	
	figure()
	subplot(211)
	
	for i in range(0, response.shape[0]):
		semilogx(freqScale[0:N/2],response[i, 0:N/2])
		
	xlim(fs/2000, fs)
	ylim(-70, 10)
	
	subplot(212)
	m = 0
	for f in fi:
		p = 10.*log10((y[m]**2).mean())
		m += 1
		semilogx(f, p, 'ko')
	
	Ndec = 3
	fc = 0.5
	# other possibilities
	#(bdec, adec) = ellip(Ndec, 0.05, 30, fc)
	#print bdec
	#(bdec, adec) = cheby1(Ndec, 0.05, fc)
	#(bdec, adec) = butter(Ndec, fc)
	(bdec, adec) = iirdesign(0.48, 0.50, 0.05, 70, analog=0, ftype='ellip', output='ba')
	#bdec = firwin(30, fc)
	#adec = [1.]
	
	figure()
	subplot(211)
	
	response = 20.*log10(abs(fft(impulse)))
	plot(fftshift(freqScale), fftshift(response), label="impulse")
	
	y = lfilter(bdec, adec, impulse)
	response = 20.*log10(abs(fft(y)))
	plot(fftshift(freqScale), fftshift(response), label="lowpass")
	
	ydec = y[::2].repeat(2)
	response = 20.*log10(abs(fft(ydec)))
	plot(fftshift(freqScale), fftshift(response), label="lowpass + dec2 + repeat2")
	
	ydec2 = interp(range(0, len(y)), range(0, len(y), 2), y[::2])
	response = 20.*log10(abs(fft(ydec2)))
	plot(fftshift(freqScale), fftshift(response), label="lowpass + dec2 + interp2")
	
	ydec3 = y[::2]
	response = 20.*log10(abs(fft(ydec3)))
	freqScale2 = fftfreq(N/2, 2./fs)
	plot(fftshift(freqScale2),fftshift(response), label="lowpass + dec2")
	
	legend(loc="lower left")
	
	subplot(212)
	plot(range(0, len(impulse)), impulse, label="impulse")
	plot(range(0, len(impulse)), y, label="lowpass")
	plot(range(0, len(impulse)), ydec, label="lowpass + dec2 + repeat2")
	plot(range(0, len(impulse)), ydec2, label="lowpass + dec2 + interp2")
	plot(range(0, len(impulse), 2), ydec3, label="lowpass + dec2")
	legend()
	
	[boct, aoct, fi, flow, fhigh] = octave_filters_oneoctave(Nbands, BandsPerOctave)
	y, dec, zfs = octave_filter_bank_decimation(bdec, adec, boct, aoct, impulse)
	print "Filter lengths with decimation"
	print len(bdec), len(adec)
	for b, a in zip(boct, aoct):
		print len(b), len(a)

	figure()
	subplot(211)
	
	for yone, d in zip(y, dec):
		response = 20.*log10(abs(fft(yone))*d)
		freqScale = fftfreq(N/d, 1./(fs/d))
		semilogx(freqScale[0:N/(2*d)],response[0:N/(2*d)])
	
	xlim(fs/2000, fs)
	ylim(-70, 10)
	
	subplot(212)
	m = 0
	for i in range(0, NOCTAVE):
		for f in fi:
			p = 10.*log10((y[m]**2).mean())
			semilogx(f/dec[m], p, 'ko')
			m += 1

	[B, A, fi, fl, fh] = octave_filters(Nbands, BandsPerOctave)
	y1, zfs = octave_filter_bank(B, A, impulse[0:N/2])
	y2, zfs = octave_filter_bank(B, A, impulse[N/2:], zis=zfs)
	#[boct, aoct, fi, flow, fhigh] = octave_filters_oneoctave(Nbands, BandsPerOctave)
	#y1, dec, zfs = octave_filter_bank(bdec, adec, boct, aoct, impulse[0:N/2])
	#y2, dec, zfs = octave_filter_bank(bdec, adec, boct, aoct, impulse)	
	
	y = []
	for y1one, y2one in zip(y1,y2):
		y += [concatenate((y1one,y2one))]
		
	figure()
	plot(impulse[0:N/2])
	#for y0 in y1:
		#plot(y0)
	plot(y1[-1])

	figure()
	subplot(211)
	
	for yone in y:
		response = 20.*log10(abs(fft(yone)))
		freqScale = fftfreq(N, 1./fs)
		semilogx(freqScale[0:N/2],response[0:N/2])
	
	xlim(fs/2000, fs)
	ylim(-70, 10)
	
	subplot(212)
	m = 0
	for f in fi:
		p = 10.*log10((y[m]**2).mean())
		semilogx(f, p, 'ko')
		m += 1
	
	generate_filters_params()

	show()
	
if __name__ == "__main__":
	main()

########NEW FILE########
__FILENAME__ = filter_opt_test
# -*- coding: utf-8 -*-
from numpy import pi, exp, arange, cos, sin, sqrt, zeros, ones, log, arange, log10, linspace, interp, angle, array, concatenate
# the three following lines are a workaround for a bug with scipy and py2exe
# together. See http://www.pyinstaller.org/ticket/83 for reference.
from scipy.misc import factorial
import scipy
scipy.factorial = factorial

#importing from scipy.signal.signaltools and scipy.signal.filter_design instead of scipy.signal
#decreases dramatically the number of modules imported
from scipy.signal.signaltools import lfilter
from scipy.signal.filter_design import ellip, butter, firwin, cheby1, iirdesign, freqz

from filter import octave_frequencies

from filter_opt import pyx_double_filt

NOCTAVE = 8

def octave_filters(Nbands, BandsPerOctave):
	# Bandpass Filter Generation
	pbrip = .5	# Pass band ripple
	sbrip = 50	# Stop band rejection
	#Filter order
	order = 2

	fi, f_low, f_high = octave_frequencies(Nbands, BandsPerOctave)

	fs = 44100 # sampling rate
	wi = fi/(fs/2.) # normalized frequencies
	w_low = f_low/(fs/2.)
	w_high = f_high/(fs/2.)

	B = []
	A = []
	
	# For each band
	for w, wl, wh in zip(wi, w_low, w_high):
		# normalized frequency vector
		freq = [wl, wh]
	
		# could be another IIR filter
		[b, a] = ellip(order, pbrip, sbrip, freq, btype='bandpass')
		
		B += [b]
		A += [a]
		
	return [B, A, fi, f_low, f_high]

# Note : A way to make the filtering more efficient is to do it with IIR + decimation
# instead of IIR only
# More precisely, we design as much filters as bands per octave (instead of total number
# of bands), and apply it several times on repeatedly decimated signal to go from one octave
# to its lower neighbor
def octave_filters_oneoctave(Nbands, BandsPerOctave):
	# Bandpass Filter Generation
	pbrip = .5	# Pass band ripple
	sbrip = 50	# Stop band rejection
	#Filter order
	order = 2

	fi, f_low, f_high = octave_frequencies(Nbands, BandsPerOctave)

	fi     = fi[-BandsPerOctave:]
	f_low  = f_low[-BandsPerOctave:]
	f_high = f_high[-BandsPerOctave:]

	fs = 44100 # sampling rate
	wi = fi/(fs/2.) # normalized frequencies
	w_low = f_low/(fs/2.)
	w_high = f_high/(fs/2.)

	B = []
	A = []
	
	# For each band
	for w, wl, wh in zip(wi, w_low, w_high):
		# normalized frequency vector
		freq = [wl, wh]
	
		# could be another IIR filter
		[b, a] = ellip(order, pbrip, sbrip, freq, btype='bandpass')
		
		B += [b]
		A += [a]
		
	return [B, A, fi, f_low, f_high]

def octave_filter_bank(forward, feedback, x, zis, filter_func):
	# This function filters the waveform x with the array of filters
	# specified by the forward and feedback parameters. Each row
	# of the forward and feedback parameters are the parameters
	# to the Matlab builtin function "filter".
	Nbank = len(forward)
	y = zeros((Nbank, len(x)))
	
	zfs = []
	y = []
	
	if zis == None:
		zis = []
		for i in range(0, Nbank):
			zis += [zeros(max(len(forward[i]), len(feedback[i]))-1)] 
	
	for i in range(0, Nbank):
		#filt, zf = lfilter(forward[i], feedback[i], x, zi=zis[i])
		filt, zf = filter_func(forward[i], feedback[i], x, zis[i])
		# zf can be reused to restart the filter
		zfs += [zf]
		y += [filt]
		
	return y, zfs

# Note: we may have one filter in excess here : the low-pass filter for decimation
# does approximately the same thing as the low-pass component of the highest band-pass
# filter for the octave
def octave_filter_bank_decimation(blow, alow, forward, feedback, x, zis, filter_func):
	# This function filters the waveform x with the array of filters
	# specified by the forward and feedback parameters. Each row
	# of the forward and feedback parameters are the parameters
	# to the Matlab builtin function "filter".
	BandsPerOctave = len(forward)
	Nbank = NOCTAVE*BandsPerOctave
	
	y = [0.]*Nbank
	dec = [0.]*Nbank
	
	x_dec = x
	
	zfs = []
	
	if zis == None:
		m = 0
		k = Nbank - 1
	
		for j in range(0, NOCTAVE):
			for i in range(0, BandsPerOctave)[::-1]:
				#filt = lfilter(forward[i], feedback[i], x_dec)
				filt, z_unused = filter_func(forward[i], feedback[i], x_dec, zeros(max(len(forward[i]),len(feedback[i]))))
				m += 1
				y[k] = filt
				dec[k] = 2**j
				k -= 1
			#x_dec = lfilter(blow, alow, x_dec)
			x_dec, z_unused = filter_func(blow, alow, x_dec, zeros(max(len(blow),len(alow))))
			m += 1
			x_dec = x_dec[::2]
		
		return y, dec, None
	else:
		m = 0
		k = Nbank - 1
		
		for j in range(0, NOCTAVE):
			for i in range(0, BandsPerOctave)[::-1]:
				#filt, zf = lfilter(forward[i], feedback[i], x_dec, zi=zis[m])
				filt, zf = filter_func(forward[i], feedback[i], x, zis[m])
				print forward[i], feedback[i]
				#filt = lfilter(forward[i], feedback[i], x_dec)
				m += 1
				# zf can be reused to restart the filter
				zfs += [zf]
				#zfs += [0.]
				y[k] = filt
				dec[k] = 2**j
				k -= 1
			#x_dec, zf = lfilter(blow, alow, x_dec, zi=zis[m])
			x_dec, zf = filter_func(blow, alow, x_dec, zis[m])
			print blow, alow
			#x_dec = lfilter(blow, alow, x_dec)
			m += 1
			# zf can be reused to restart the filter
			zfs += [zf]
			#zfs += [0.]
			x_dec = x_dec[::2]
		
		return y, dec, zfs

def prepare_coefficients(b, a):
	# b and a must have the same length
	if len(a) > len(b):
		b = append((b, zeros(len(a) - len(b))))
	elif len(a) < len(b):
		a = append((a, zeros(len(b) - len(a))))
	
	# Normalize by a[0]
	b = b/a[0]
	a[1:] = a[1:]/a[0]
	a [0] = 1.
	
	return b, a

def default_filt(b, a, x, Z):
	return lfilter(b, a, x, zi=Z)

# Note: b and a must have the same length !!
# Note : a[0] must be equal to 1 !!
def double_filt(b, a, x, Z):
	#The filter function is implemented as a direct II transposed structure.
	#This means that the filter implements:

	#a[0]*y[n] = b[0]*x[n] + b[1]*x[n-1] + ... + b[nb]*x[n-nb]
			#- a[1]*y[n-1] - ... - a[na]*y[n-na]

	#using the following difference equations::

	#y[m] = b[0]*x[m] + z[0,m-1]
	#z[0,m] = b[1]*x[m] + z[1,m-1] - a[1]*y[m]
	#...
	#z[n-3,m] = b[n-2]*x[m] + z[n-2,m-1] - a[n-2]*y[m]
	#z[n-2,m] = b[n-1]*x[m] - a[n-1]*y[m]
	
	lb = len(b)
        
        if lb == 0:
		y = b*x
	else:
		#define y
		y = zeros(x.shape)
		
		for k in range(0, len(x)):
			xn = x[k]
			# Calculate first delay (output)
			y[k] = Z[0] + b[0]*xn
			# Fill in middle delays
			Z[0:lb - 2] = Z[1:lb - 1] + xn*b[1:lb - 1] - y[k]*a[1:lb - 1]
			# Calculate last delay
			Z[lb - 2] = xn*b[lb - 1] - y[k]*a[lb - 1]

	return y, Z

# main() is a test function
def main():
	N = 2048*2*2*2*2*2
	fs = 44100.
	Nchannels = 20
	low_freq = 20.

	impulse = zeros(N)
	impulse[N/2] = 1
	f = 1000.
	#impulse = sin(2*pi*f*arange(0, N/fs, 1./fs))

	#[ERBforward, ERBfeedback] = MakeERBFilters(fs, Nchannels, low_freq)
	#y = ERBFilterBank(ERBforward, ERBfeedback, impulse)

	BandsPerOctave = 6
	Nbands = NOCTAVE*BandsPerOctave
	
	[B, A, fi, fl, fh] = octave_filters(Nbands, BandsPerOctave)
	
	y2, zfs2 = octave_filter_bank(B, A, impulse, None, default_filt)
	#octave_filter_bank_decimation(blow, alow, forward, feedback, x, zis, filter_func)
	
	(bdec, adec) = iirdesign(0.48, 0.50, 0.05, 70, analog=0, ftype='ellip', output='ba')
	print len(bdec), len(adec)
	
	for i in range(0, len(B)):
		B[i], A[i] = prepare_coefficients(B[i], A[i])
	
	#y, zfs = octave_filter_bank(B, A, impulse, None, double_filt)
	y, zfs = octave_filter_bank(B, A, impulse, None, pyx_double_filt)
	
	if False:
		from matplotlib.pyplot import semilogx, plot, show, xlim, ylim, figure, legend, subplot, bar
		figure()
		for i in range(0, len(y)):
			plot(y[i])
			plot(y2[i])

		show()
	
if __name__ == "__main__":
	main()

########NEW FILE########
__FILENAME__ = filter_overlap
from pylab import *
from scipy.signal.filter_design import ellip
from scipy.signal.signaltools import lfilter

figure()
N = 2**13
fs = 44100.
x = arange(0,N)/fs
f = 63.4

Nw = 2**13
window = zeros(N)
window[:Nw] = hamming(Nw)
y = window*sin(2*pi*x*f)
pbrip = .5
sbrip = 50
order = 2
fi = 63.41
flow = 62.5
fhigh = 64.33
wi = fi/(fs/2.)
wlow = flow/(fs/2.)
whigh = fhigh/(fs/2.)
w = [wlow, whigh]
[b, a] = ellip(order, pbrip, sbrip, w, btype='bandpass')

yf, zf = lfilter(b, a, y, zi=zeros(max(len(a),len(b))-1))
yf2, zf = lfilter(b, a, 0.*y, zi=zf)
yf3, zf = lfilter(b, a, 0.*y, zi=zf)

print x[-1]+x, yf2

clf()
subplot(211); plot(x,y); plot(x, yf); plot(x[-1]+x, yf2); plot(2*x[-1]+x, yf3)
subplot(212); loglog(fftshift(fftfreq(N,1./fs))[N/2:],fftshift(abs((fft(y)))**2)[N/2:]); loglog(fftshift(fftfreq(N,1./fs))[N/2:],fftshift(abs((fft(yf)))**2)[N/2:]); ylim(ymin=1e-6)
show()
########NEW FILE########
__FILENAME__ = filter_overlap_add
from pylab import *
from scipy.signal.filter_design import ellip, freqz, iirdesign
from scipy.signal.fir_filter_design import remez
from scipy.signal.signaltools import lfilter

figure()

N = 2**13
fs = 44100.
x = arange(0,N)/fs
f1 = 18000.
f2 = 2000.
#signal
y = sin(2*pi*x*f1) + sin(2*pi*x*f2)

#window
Nw = 2**13
window = zeros(N)
window[:Nw] = hamming(Nw)

# windowed signal
y *= window

Ntaps = 512
b_fir = remez(numtaps=Ntaps, bands=[0., 0.49/2., 0.51/2., 1./2.], desired=[1.,0.])#, maxiter=250, grid_density=64)
a_fir = [1.]
print "FIR coeff created", len(b_fir), len(a_fir)

def fft_overlap_add_lfilter(b, x, zi):  
    # Evaluate the best value of N and L
    M = len(b) # length o f the filters
    L = 5*M # length of the segments
    N = L + M - 1 # length of the convolutions, should be power of two, must be larger than L + M - 1
    Nx = len(x) # total length of the signal
    
    y = np.zeros((len(x)))
    
    bf = rfft(b, n=N) # zero-padded FFT

    i = 0
    while i<Nx:
        il = min(i+L, Nx)
        yt = irfft(rfft(x[i:il], n=N)*bf, n=N) # compute the convolution on the segment
        k = min(i+N, Nx)
        y[i:k] += yt[:k-i] # add the overlapped output blocks
        i += L
    
    #check if we have enough samples available
    #and compute number of fft to be done
    
    zf = 0.
    
    return y, zf


import time
t0 = time.time()
yf_fir, zf = lfilter(b_fir, a_fir, y, zi=zeros(max(len(a_fir),len(b_fir))-1))
t1 = time.time()
yf_fir_oa, zf = fft_overlap_add_lfilter(b_fir, y, zi=zeros(max(len(a_fir),len(b_fir))-1))
t2 = time.time()
tlin = t1 - t0
toa = t2 - t1
print "lin", tlin, "o-a", toa, "lin/o-a", tlin/toa

impulse = zeros(N); impulse[0] = 1.
yf_imp_fir, zf = lfilter(b_fir, a_fir, impulse, zi=zeros(max(len(a_fir),len(b_fir))-1))
yf_imp_fir_oa, zf = fft_overlap_add_lfilter(b_fir, impulse, zi=zeros(max(len(a_fir),len(b_fir))-1))
#yf_imp_iir, zf = lfilter(b_iir, a_iir, impulse, zi=zeros(max(len(a_iir),len(b_iir))-1))

clf()

subplot(311)
title("original and filtered signals")
plot(x, y)
plot(x, yf_fir)
plot(x, yf_fir_oa)

subplot(312)
title("original and filtered frequency distributions")
semilogx(fftshift(fftfreq(N,1./fs))[N/2:], fftshift(20.*log(abs(fft(y))))[N/2:])
semilogx(fftshift(fftfreq(N,1./fs))[N/2:], fftshift(20.*log(abs(fft(yf_fir))))[N/2:])
semilogx(fftshift(fftfreq(N,1./fs))[N/2:], fftshift(20.*log(abs(fft(yf_fir_oa))))[N/2:])
ylim(ymin=1e-6)

subplot(313)
title("filter impulse response")
semilogx(fftshift(fftfreq(N,1./fs))[N/2:], fftshift(20.*log(abs(fft(yf_imp_fir))))[N/2:])
semilogx(fftshift(fftfreq(N,1./fs))[N/2:], fftshift(20.*log(abs(fft(yf_imp_fir_oa))))[N/2:])
#semilogx(fftshift(fftfreq(N,1./fs))[N/2:], fftshift(20.*log(abs(fft(yf_imp_iir))))[N/2:])
show()
########NEW FILE########
__FILENAME__ = filter_session
from pylab import *
from scipy.signal.filter_design import ellip
from scipy.signal.signaltools import lfilter

figure()
N = 2**15
fs = 44100.
x = arange(0,N)/fs
f = 63.4

Nw = 2**13
window = zeros(N)
window[:Nw] = hamming(Nw)
y = window*sin(2*pi*x*f)
pbrip = .5
sbrip = 50
order = 2
fi = 63.41
flow = 62.5
fhigh = 64.33
wi = fi/(fs/2.)
wlow = flow/(fs/2.)
whigh = fhigh/(fs/2.)
w = [wlow, whigh]
[b, a] = ellip(order, pbrip, sbrip, w, btype='bandpass')
#cheb1ord(wp, ws, 1., sbrip)
#cheby1(N, rp, Wn, btype='low', analog=0, output='ba')

yf = lfilter(b, a, y)
yf2 = lfilter(b, a, yf)

clf()
subplot(211); plot(x,y); plot(x, yf); plot(x, yf2)
subplot(212); loglog(fftshift(fftfreq(N,1./fs))[N/2:],fftshift(abs((fft(y)))**2)[N/2:]); loglog(fftshift(fftfreq(N,1./fs))[N/2:],fftshift(abs((fft(yf)))**2)[N/2:]); ylim(ymin=1e-6); loglog(fftshift(fftfreq(N,1./fs))[N/2:],fftshift(abs((fft(yf2)))**2)[N/2:])

show()
########NEW FILE########
__FILENAME__ = hellogl
#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""PyQt4 port of the opengl/hellogl example from Qt v4.x"""

import sys
import math

from PyQt4 import QtCore, QtGui, QtOpenGL

try:
    from OpenGL import GL
except ImportError:
    app = QtGui.QApplication(sys.argv)
    QtGui.QMessageBox.critical(None, "OpenGL hellogl",
            "PyOpenGL must be installed to run this example.")
    sys.exit(1)


class Window(QtGui.QWidget):
    def __init__(self):
        super(Window, self).__init__()

        self.glWidget = GLWidget()

        self.xSlider = self.createSlider()
        self.ySlider = self.createSlider()
        self.zSlider = self.createSlider()

        self.xSlider.valueChanged.connect(self.glWidget.setXRotation)
        self.glWidget.xRotationChanged.connect(self.xSlider.setValue)
        self.ySlider.valueChanged.connect(self.glWidget.setYRotation)
        self.glWidget.yRotationChanged.connect(self.ySlider.setValue)
        self.zSlider.valueChanged.connect(self.glWidget.setZRotation)
        self.glWidget.zRotationChanged.connect(self.zSlider.setValue)

        mainLayout = QtGui.QHBoxLayout()
        mainLayout.addWidget(self.glWidget)
        mainLayout.addWidget(self.xSlider)
        mainLayout.addWidget(self.ySlider)
        mainLayout.addWidget(self.zSlider)
        self.setLayout(mainLayout)

        self.xSlider.setValue(15 * 16)
        self.ySlider.setValue(345 * 16)
        self.zSlider.setValue(0 * 16)

        self.setWindowTitle("Hello GL")

    def createSlider(self):
        slider = QtGui.QSlider(QtCore.Qt.Vertical)

        slider.setRange(0, 360 * 16)
        slider.setSingleStep(16)
        slider.setPageStep(15 * 16)
        slider.setTickInterval(15 * 16)
        slider.setTickPosition(QtGui.QSlider.TicksRight)

        return slider


class GLWidget(QtOpenGL.QGLWidget):
    xRotationChanged = QtCore.pyqtSignal(int)
    yRotationChanged = QtCore.pyqtSignal(int)
    zRotationChanged = QtCore.pyqtSignal(int)

    def __init__(self, parent=None):
        super(GLWidget, self).__init__(parent)

        self.object = 0
        self.xRot = 0
        self.yRot = 0
        self.zRot = 0

        self.lastPos = QtCore.QPoint()

        self.trolltechGreen = QtGui.QColor.fromCmykF(0.40, 0.0, 1.0, 0.0)
        self.trolltechPurple = QtGui.QColor.fromCmykF(0.39, 0.39, 0.0, 0.0)

    def minimumSizeHint(self):
        return QtCore.QSize(50, 50)

    def sizeHint(self):
        return QtCore.QSize(400, 400)

    def setXRotation(self, angle):
        angle = self.normalizeAngle(angle)
        if angle != self.xRot:
            self.xRot = angle
            self.xRotationChanged.emit(angle)
            self.updateGL()

    def setYRotation(self, angle):
        angle = self.normalizeAngle(angle)
        if angle != self.yRot:
            self.yRot = angle
            self.yRotationChanged.emit(angle)
            self.updateGL()

    def setZRotation(self, angle):
        angle = self.normalizeAngle(angle)
        if angle != self.zRot:
            self.zRot = angle
            self.zRotationChanged.emit(angle)
            self.updateGL()

    def initializeGL(self):
        #self.qglClearColor(self.trolltechPurple.dark())
	#self.qglClearColor(QtCore.Qt.blue)
        self.object = self.makeObject()
        GL.glShadeModel(GL.GL_FLAT)
        GL.glEnable(GL.GL_DEPTH_TEST)
        #GL.glEnable(GL.GL_CULL_FACE)

    def paintGL(self):
        # Clear The Screen And The Depth Buffer
        GL.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT)
        # Reset The View
        GL.glLoadIdentity()
        # Move Into The Screen 10.0 Units
        GL.glTranslated(0.0, 0.0, -10.0)
        #GL.glRotated(self.xRot / 16.0, 1.0, 0.0, 0.0)
        #GL.glRotated(self.yRot / 16.0, 0.0, 1.0, 0.0)
        #GL.glRotated(self.zRot / 16.0, 0.0, 0.0, 1.0)
        #GL.glCallList(self.object)
	self.qglColor( QtCore.Qt.white )
        GL.glBegin(GL.GL_TRIANGLES) # Drawing Using Triangles
        GL.glVertex3f( 0.0, 1.0, 0.0) # Top
        GL.glVertex3f(-1.0,-1.0, 0.0) # Bottom Left
        GL.glVertex3f( 1.0,-1.0, 0.0) # Bottom Right
        GL.glEnd() # Finished Drawing The Triangle

	pbuffer = QtOpenGL.QGLPixelBuffer(QtCore.QSize(512, 512), self.format())


    def resizeGL(self, width, height):
        side = min(width, height)
        if side < 0:
            return

        GL.glViewport((width - side) / 2, (height - side) / 2, side, side)

        GL.glMatrixMode(GL.GL_PROJECTION)
        GL.glLoadIdentity()
        GL.glOrtho(-0.5, +0.5, +0.5, -0.5, 4.0, 15.0)
        GL.glMatrixMode(GL.GL_MODELVIEW)

    def mousePressEvent(self, event):
        self.lastPos = event.pos()

    def mouseMoveEvent(self, event):
        dx = event.x() - self.lastPos.x()
        dy = event.y() - self.lastPos.y()

        if event.buttons() & QtCore.Qt.LeftButton:
            self.setXRotation(self.xRot + 8 * dy)
            self.setYRotation(self.yRot + 8 * dx)
        elif event.buttons() & QtCore.Qt.RightButton:
            self.setXRotation(self.xRot + 8 * dy)
            self.setZRotation(self.zRot + 8 * dx)

        self.lastPos = event.pos()

    def makeObject(self):
        genList = GL.glGenLists(1)
        GL.glNewList(genList, GL.GL_COMPILE)

        GL.glBegin(GL.GL_QUADS)

        x1 = +0.06
        y1 = -0.14
        x2 = +0.14
        y2 = -0.06
        x3 = +0.08
        y3 = +0.00
        x4 = +0.30
        y4 = +0.22

        self.quad(x1, y1, x2, y2, y2, x2, y1, x1)
        self.quad(x3, y3, x4, y4, y4, x4, y3, x3)

        self.extrude(x1, y1, x2, y2)
        self.extrude(x2, y2, y2, x2)
        self.extrude(y2, x2, y1, x1)
        self.extrude(y1, x1, x1, y1)
        self.extrude(x3, y3, x4, y4)
        self.extrude(x4, y4, y4, x4)
        self.extrude(y4, x4, y3, x3)

        NumSectors = 200

        for i in range(NumSectors):
            angle1 = (i * 2 * math.pi) / NumSectors
            x5 = 0.30 * math.sin(angle1)
            y5 = 0.30 * math.cos(angle1)
            x6 = 0.20 * math.sin(angle1)
            y6 = 0.20 * math.cos(angle1)

            angle2 = ((i + 1) * 2 * math.pi) / NumSectors
            x7 = 0.20 * math.sin(angle2)
            y7 = 0.20 * math.cos(angle2)
            x8 = 0.30 * math.sin(angle2)
            y8 = 0.30 * math.cos(angle2)

            self.quad(x5, y5, x6, y6, x7, y7, x8, y8)

            self.extrude(x6, y6, x7, y7)
            self.extrude(x8, y8, x5, y5)

        GL.glEnd()
        GL.glEndList()

        return genList

    def quad(self, x1, y1, x2, y2, x3, y3, x4, y4):
        self.qglColor(self.trolltechGreen)

        GL.glVertex3d(x1, y1, -0.05)
        GL.glVertex3d(x2, y2, -0.05)
        GL.glVertex3d(x3, y3, -0.05)
        GL.glVertex3d(x4, y4, -0.05)

        GL.glVertex3d(x4, y4, +0.05)
        GL.glVertex3d(x3, y3, +0.05)
        GL.glVertex3d(x2, y2, +0.05)
        GL.glVertex3d(x1, y1, +0.05)

    def extrude(self, x1, y1, x2, y2):
        self.qglColor(self.trolltechGreen.dark(250 + int(100 * x1)))

        GL.glVertex3d(x1, y1, +0.05)
        GL.glVertex3d(x2, y2, +0.05)
        GL.glVertex3d(x2, y2, -0.05)
        GL.glVertex3d(x1, y1, -0.05)

    def normalizeAngle(self, angle):
        while angle < 0:
            angle += 360 * 16
        while angle > 360 * 16:
            angle -= 360 * 16
        return angle


if __name__ == '__main__':

    app = QtGui.QApplication(sys.argv)
    window = Window()
    window.show()
    sys.exit(app.exec_())

########NEW FILE########
__FILENAME__ = latency_hist
# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import numpy as np

filename = "latency_log.txt"

data = np.loadtxt(filename)

plt.figure(1)
plt.hist(data, bins = 200)
plt.figure(2)
plt.plot(data)

plt.show()
########NEW FILE########
__FILENAME__ = lesson4
#!

# This is statement is required by the build system to query build info
if __name__ == '__build__':
    raise Exception

import string
__version__ = string.split('$Revision: 1.1.1.1 $')[1]
__date__ = string.join(string.split('$Date: 2007/02/15 19:25:21 $')[1:3], ' ')
__author__ = 'Tarn Weisner Burton <twburton@users.sourceforge.net>'

#
# Ported to PyOpenGL 2.0 by Tarn Weisner Burton 10May2001
#
# This code was created by Richard Campbell '99 (ported to Python/PyOpenGL by John Ferguson 2000)
#
# The port was based on the PyOpenGL tutorial module: dots.py  
#
# If you've found this code useful, please let me know (email John Ferguson at hakuin@voicenet.com).
#
# See original source and C based tutorial at http://nehe.gamedev.net
#
# Note:
# -----
# This code is not a good example of Python and using OO techniques.  It is a simple and direct
# exposition of how to use the Open GL API in Python via the PyOpenGL package.  It also uses GLUT,
# which in my opinion is a high quality library in that it makes my work simpler.  Due to using
# these APIs, this code is more like a C program using function based programming (which Python
# is in fact based upon, note the use of closures and lambda) than a "good" OO program.
#
# To run this code get and install OpenGL, GLUT, PyOpenGL (see http://www.python.org), and NumPy.
# Installing PyNumeric means having a C compiler that is configured properly, or so I found.  For 
# Win32 this assumes VC++, I poked through the setup.py for Numeric, and chased through disutils code
# and noticed what seemed to be hard coded preferences for VC++ in the case of a Win32 OS.  However,
# I am new to Python and know little about disutils, so I may just be not using it right.
#
# NumPy is not a hard requirement, as I am led to believe (based on skimming PyOpenGL sources) that
# PyOpenGL could run without it. However preformance may be impacted since NumPy provides an efficient
# multi-dimensional array type and a linear algebra library.
#
# BTW, since this is Python make sure you use tabs or spaces to indent, I had numerous problems since I 
# was using editors that were not sensitive to Python.
#
from OpenGL.GL import *
from OpenGL.GLUT import *
from OpenGL.GLU import *
import sys
from numpy import *
from numpy.random import *

# Some api in the chain is translating the keystrokes to this octal string
# so instead of saying: ESCAPE = 27, we use the following.
ESCAPE = '\033'

# Number of the glut window.
window = 0

# Rotation angle for the triangle. 
rtri = 0.0

# Rotation angle for the quadrilateral.
rquad = 0.0

n=50

# A general OpenGL initialization function.  Sets all of the initial parameters. 
def InitGL(Width, Height):                # We call this right after our OpenGL window is created.
    glClearColor(0.0, 0.0, 0.0, 0.0)    # This Will Clear The Background Color To Black
    glClearDepth(1.0)                    # Enables Clearing Of The Depth Buffer
    glDepthFunc(GL_LESS)                # The Type Of Depth Test To Do
    glEnable(GL_DEPTH_TEST)                # Enables Depth Testing
    glShadeModel(GL_SMOOTH)                # Enables Smooth Color Shading
    
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()                    # Reset The Projection Matrix
                                        # Calculate The Aspect Ratio Of The Window
    #gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)

    #glMatrixMode(GL_MODELVIEW)
    return

# The function called when our window is resized (which shouldn't happen if you enable fullscreen, below)
def ReSizeGLScene(Width, Height):
    if Height == 0:                        # Prevent A Divide By Zero If The Window Is Too Small 
        Height = 1

    glViewport(0, 0, Width, Height)        # Reset The Current Viewport And Perspective Transformation
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    #gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
    #glMatrixMode(GL_MODELVIEW)
    return

# The main drawing function. 
def DrawGLScene():
    global rtri, rquad
    
    # Clear The Screen And The Depth Buffer
    #glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
   # glLoadIdentity()                    # Reset The View 

#    # Move Left 1.5 units and into the screen 6.0 units.
#    glTranslatef(-1.5, 0.0, -6.0)
#
#    # We have smooth color mode on, this will blend across the vertices.
#    # Draw a triangle rotated on the Y axis. 
#    glRotatef(rtri, 0.0, 1.0, 0.0)      # Rotate
#    glBegin(GL_POLYGON)                 # Start drawing a polygon
#    glColor3f(1.0, 0.0, 0.0)            # Red
#    glVertex3f(0.0, 1.0, 0.0)           # Top
#    glColor3f(0.0, 1.0, 0.0)            # Green
#    glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
#    glColor3f(0.0, 0.0, 1.0)            # Blue
#    glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
#    glEnd()                             # We are done with the polygon
 
#    # Somewhere before the drawing code
#    circle = [[radius*math.sin(math.radians(deg)), radius*math.cos(math.radians(deg)), 0.0] for deg in xrange(360)]
#           
#    # Generate Buffers (inside Init method)
#    circle = array(circle, dtype=float32)
#    vertex_vbo = GL.GLuint(0)
#    glGenBuffers(1, vertex_vbo)
#    glBindBuffer(GL_ARRAY_BUFFER, circle)
#    glBufferData(GL_ARRAY_BUFFER, ADT.arrayByteCount(circle), ADT.voidDataPointer(circle), GL_STATIC_DRAW_ARB)
#            
#    # Draw buffers (inside Render method)
#    glBindBuffer(GL_ARRAY_BUFFER, vertex_vbo)
#    glVertexPointer(3, GL_FLOAT, 0, None)
#    glDrawArrays(GL_LINE_STRIP, 0, circle.shape[0])
           
    # We are "undoing" the rotation so that we may rotate the quad on its own axis.
    # We also "undo" the prior translate.  This could also have been done using the
    # matrix stack.
    #glLoadIdentity()
    
    # Move Right 1.5 units and into the screen 6.0 units.
#    glTranslatef(1.5, 0.0, -6.0)

#    # Draw a square (quadrilateral) rotated on the X axis.
#    glRotatef(rquad, 1.0, 0.0, 0.0)        # Rotate 
#    glColor3f(0.3, 0.5, 1.0)            # Bluish shade
#    glBegin(GL_QUADS)                   # Start drawing a 4 sided polygon
#    glVertex3f(-1.0, 1.0, 0.0)          # Top Left
#    glVertex3f(1.0, 1.0, 0.0)           # Top Right
#    glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
#    glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
#    glEnd()                             # We are done with the polygon

    # What values to use?  Well, if you have a FAST machine and a FAST 3D Card, then
    # large values make an unpleasant display with flickering and tearing.  I found that
    # smaller values work better, but this was based on my experience.
    #rtri  = rtri + 1.0                  # Increase The Rotation Variable For The Triangle
    #rquad = rquad - 1.0                 # Decrease The Rotation Variable For The Quad
    
    n = 1000
    
    w = 0.002
    h = 1.
    x = -1. + arange(n)*w
    y = (random(n)-0.5)*0.3 - 0.5
    
    vertex = zeros((n,4,2))
    vertex[:,0,0] = x
    vertex[:,0,1] = y + h
    vertex[:,1,0] = x + w
    vertex[:,1,1] = y + h
    vertex[:,2,0] = x + w
    vertex[:,2,1] = y
    vertex[:,3,0] = x
    vertex[:,3,1] = y
        
    c = random(n)
    
    color = ones((n,4,3))
    color[:,0,1] = c
    color[:,1,1] = c
    color[:,2,1] = c
    color[:,3,1] = c
    color[:,0,2] = c
    color[:,1,2] = c
    color[:,2,2] = c
    color[:,3,2] = c
    #color = array([[1,c[0],c[0]],[1,c[1],c[1]]]).repeat(4,axis=0)
    #color.shape = (4*n, 3)
    
    glVertexPointerd(vertex)
    glColorPointerd(color)
    glEnableClientState(GL_VERTEX_ARRAY)
    glEnableClientState(GL_COLOR_ARRAY)
    
    glClearColor(1, 1, 1, 0)
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    #glOrtho(-1, 1, -1, 1, -1, 1)
    #glDisable(GL_LIGHTING)
    glDrawArrays(GL_QUADS, 0, 4*n)
    #glEnable(GL_LIGHTING)

    #  since this is double buffered, swap the buffers to display what just got drawn. 
    glutSwapBuffers()

# The function called whenever a key is pressed. Note the use of Python tuples to pass in: (key, x, y)  
def keyPressed(*args):
    # If escape is pressed, kill everything.
    if args[0] == ESCAPE:
        sys.exit()

def main():
    global window
    glutInit(sys.argv)

    # Select type of Display mode:   
    #  Double buffer 
    #  RGBA color
    # Alpha components supported 
    # Depth buffer
    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
    
    # get a 640 x 480 window 
    glutInitWindowSize(640, 480)
    
    # the window starts at the upper left corner of the screen 
    glutInitWindowPosition(0, 0)
    
    # Okay, like the C version we retain the window id to use when closing, but for those of you new
    # to Python (like myself), remember this assignment would make the variable local and not global
    # if it weren't for the global declaration at the start of main.
    window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")

       # Register the drawing function with glut, BUT in Python land, at least using PyOpenGL, we need to
    # set the function pointer and invoke a function to actually register the callback, otherwise it
    # would be very much like the C version of the code.    
    glutDisplayFunc(DrawGLScene)
    
    # Uncomment this line to get full screen.
    # glutFullScreen()

    # When we are doing nothing, redraw the scene.
    glutIdleFunc(DrawGLScene)
    
    # Register the function called when our window is resized.
    glutReshapeFunc(ReSizeGLScene)
    
    # Register the function called when the keyboard is pressed.  
    glutKeyboardFunc(keyPressed)

    # Initialize our window. 
    InitGL(640, 480)

    # Start Event Processing Engine    
    glutMainLoop()

# Print message to console, and kick off the main to get it rolling.
print "Hit ESC key to quit."
main()
        

########NEW FILE########
__FILENAME__ = lesson6_2d
#!/usr/bin/env python
# -*- coding: utf-8 -*-

#
# This code was created by Richard Campbell '99 (ported to Python/PyOpenGL by John Ferguson 2000)
#
# The port was based on the lesson5 tutorial module by Tony Colston (tonetheman@hotmail.com).  
#
# If you've found this code useful, please let me know (email John Ferguson at hakuin@voicenet.com).
#
# See original source and C based tutorial at http:#nehe.gamedev.net
#
# Note:
# -----
# Now, I assume you've read the prior tutorial notes and know the deal here.  The one major, new requirement
# is to have a working version of PIL (Python Image Library) on your machine.
#
# General Users:
# --------------
# I think to use textures at all you need Nunmeric Python, I tried without it and BAM Python didn't "like" the texture API.
#
# Win32 Users:
# ------------
# Well, here's the install I used to get it working:
# [1] py152.exe - include the TCL install!
# [2] PyOpenGL.EXE - probably the latest, the Vaults notes should give you a clue.
# [3] Distutils-0.9.win32.exe for step #4
# [4] Numerical-15.3.tgz - run the setup.py (need VC++ on your machine, otherwise, have fun with #3, it looks fixable to use gCC).
#
# Win98 users (yes Win98, I have Mandrake on the other partition okay?), you need to the Tcl bin directory in your PATH, not PYTHONPATH,
# just the DOS PATH.
#
# BTW, since this is Python make sure you use tabs or spaces to indent, I had numerous problems since I 
# was using editors that were not sensitive to Python.
#
from OpenGL.GL import *
from OpenGL.GLUT import *
from OpenGL.GLU import *
import Image
import numpy as np

# Some api in the chain is translating the keystrokes to this octal string
# so instead of saying: ESCAPE = 27, we use the following.
ESCAPE = '\033'

# Number of the glut window.
window = 0

# Rotations for cube. 
yrot = 0.0

texture = 0

def LoadTextures():
    #global texture
    array_red = (np.random.rand(640,480)*255).astype(np.uint8)
    array_blue = (np.random.rand(640,480)*255).astype(np.uint8)
    array_green =  (np.random.rand(640,480)*255).astype(np.uint8)
    array_alpha = np.ones((640,480),dtype=np.uint8)*255
    array = np.dstack((array_red, array_blue, array_green, array_alpha))
    
    image = array.tostring()
    ix = array_red.shape[0]
    iy = array_red.shape[1]
	
    # Create Texture
    glGenTextures(1, texture) # generate one texture name
    glBindTexture(GL_TEXTURE_2D, texture) # bind a 2d texture to the generated name
    glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
    glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
    glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)

# A general OpenGL initialization function.  Sets all of the initial parameters. 
def InitGL(Width, Height): # We call this right after our OpenGL window is created.
    LoadTextures()
    glEnable(GL_TEXTURE_2D)
    glClearColor(0.0, 0.0, 0.0, 0.0) # This Will Clear The Background Color To Black
    #glClearDepth(1.0) # Enables Clearing Of The Depth Buffer
    #glDepthFunc(GL_LESS) # The Type Of Depth Test To Do
    glDisable(GL_DEPTH_TEST) # 2D means no depth !
    glShadeModel(GL_SMOOTH) # Enables Smooth Color Shading
	
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity() # Reset The Projection Matrix

    glOrtho (0, Width, Height, 0, 0, 1) # use this to have coordinates in window pixels

    glMatrixMode(GL_MODELVIEW)

# The function called when our window is resized (which shouldn't happen if you enable fullscreen, below)
def ReSizeGLScene(Width, Height):
    if Height == 0: # Prevent A Divide By Zero If The Window Is Too Small 
	    Height = 1

    glViewport(0, 0, Width, Height) # Reset The Current Viewport And Perspective Transformation
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    glOrtho (0, Width, Height, 0, 0, 1) # use this to have coordinates in window pixels
    glMatrixMode(GL_MODELVIEW)

# The main drawing function. 
def DrawGLScene():
	global texture, yrot

	#array = np.random.rand(1, 480)
	#image = array.tostring()
	array_red = (np.random.rand(1,480)*255).astype(np.uint8)
	array_blue = (np.random.rand(1,480)*255).astype(np.uint8)
	array_green =  (np.random.rand(1,480)*255).astype(np.uint8)
	array_alpha = np.ones((1,480),dtype=np.uint8)*255
	array = np.dstack((array_red, array_blue, array_green, array_alpha))
	image = array.tostring()
	
	glTexSubImage2D(GL_TEXTURE_2D, 0, yrot, 0, 1, 480, GL_RGBA, GL_UNSIGNED_BYTE, image)

	glLoadIdentity() # Reset The View

	glBegin(GL_QUADS) # Start Drawing The Cube
	
	# note that the texture's corners have to match the quad's corners
	glTexCoord2f(0.0, 0.0); glVertex2f(0, 0) # Bottom Left Of The Texture and Quad
	glTexCoord2f(1.0, 0.0); glVertex2f(640, 0) # Bottom Right Of The Texture and Quad
	glTexCoord2f(1.0, 1.0); glVertex2f(640,  480) # Top Right Of The Texture and Quad
	glTexCoord2f(0.0, 1.0); glVertex2f(0,  480) # Top Left Of The Texture and Quad

	glEnd() # Done Drawing The Rectangle
	
	yrot = (yrot + 1)%640

	# since this is double buffered, swap the buffers to display what just got drawn. 
	glutSwapBuffers()

# The function called whenever a key is pressed. Note the use of Python tuples to pass in: (key, x, y)  
def keyPressed(*args):
	# If escape is pressed, kill everything.
    if args[0] == ESCAPE:
	    glutDestroyWindow(window)
	    sys.exit(0)

def main():
	global window
	# For now we just pass glutInit one empty argument. I wasn't sure what should or could be passed in (tuple, list, ...)
	# Once I find out the right stuff based on reading the PyOpenGL source, I'll address this.
	glutInit("")

	# Select type of Display mode:   
	#  Double buffer 
	#  RGBA color
	# Alpha components supported 
	# Depth buffer
	glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_ALPHA | GLUT_DEPTH)
	
	# get a 640 x 480 window 
	glutInitWindowSize(640, 480)
	
	# the window starts at the upper left corner of the screen 
	glutInitWindowPosition(0, 0)
	
	# Okay, like the C version we retain the window id to use when closing, but for those of you new
	# to Python (like myself), remember this assignment would make the variable local and not global
	# if it weren't for the global declaration at the start of main.
	window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")

   	# Register the drawing function with glut, BUT in Python land, at least using PyOpenGL, we need to
	# set the function pointer and invoke a function to actually register the callback, otherwise it
	# would be very much like the C version of the code.	
	glutDisplayFunc(DrawGLScene)
	
	# Uncomment this line to get full screen.
	#glutFullScreen()

	# When we are doing nothing, redraw the scene.
	#glutIdleFunc(DrawGLScene)
	glutIdleFunc(DrawGLScene)
	
	# Register the function called when our window is resized.
	glutReshapeFunc(ReSizeGLScene)
	
	# Register the function called when the keyboard is pressed.  
	glutKeyboardFunc(keyPressed)

	# Initialize our window. 
	InitGL(640, 480)

	# Start Event Processing Engine	
	glutMainLoop()

# Print message to console, and kick off the main to get it rolling.
print "Hit ESC key to quit."
main()
    	

########NEW FILE########
__FILENAME__ = log2scale
#!/usr/bin/python
# -*- coding: utf-8 -*-

from PyQt4.QtGui import *
from PyQt4.QtCore import *

import PyQt4.Qwt5 as Qwt
import math

import sys
import sip

LOG2_MIN = 2.**(-20) # Mininum value for logarithmic scales.
LOG2_MAX = 2.**20 # Maximum value for logarithmic scales. 

class CustomScaleEngine(Qwt.QwtScaleEngine):
	def __init__(self):
		Qwt.QwtScaleEngine.__init__(self)

	def transformation(self):
		return CustomScaleTransformation()
        
	def autoScale(self, maxNumSteps, x1, x2):
		if x1 > x2:
			qswap(x1, x2)
		
		base = 2.
		interval = Qwt.QwtDoubleInterval(x1 / pow(base, self.lowerMargin()), x2 * pow(base, self.upperMargin()) )

		logRef = 1.
		if self.reference() > LOG2_MIN / 2:
			logRef = min(self.reference(), LOG2_MAX / 2)
		
		if self.testAttribute(Qwt.QwtScaleEngine.Symmetric):
			delta = max(interval.maxValue() / logRef, logRef / interval.minValue())
			interval.setInterval(logRef / delta, logRef * delta)
		
		if self.testAttribute(Qwt.QwtScaleEngine.IncludeReference):
			interval = interval.extend(logRef)
		
		interval = interval.limited(LOG2_MIN, LOG2_MAX)
		
		if interval.width() == 0.:
			interval = self.buildInterval(interval.minValue())
		
		stepSize = self.divideInterval(self.log2(interval).width(), max(maxNumSteps, 1))
		if stepSize < 1.:
			stepSize = 1.
		
		if not self.testAttribute(Qwt.QwtScaleEngine.Floating):
			interval = self.align(interval, stepSize)
		
		x1 = interval.minValue()
		x2 = interval.maxValue()
		
		if self.testAttribute(Qwt.QwtScaleEngine.Inverted):
			qSwap(x1, x2)
			stepSize = -stepSize
		
		return (x1, x2, stepSize)

	def divideScale(self, x1, x2, maxMajSteps, maxMinSteps, stepSize):
		interval = Qwt.QwtDoubleInterval(x1, x2).normalized()
		interval = interval.limited(LOG2_MIN, LOG2_MAX)
		
		if interval.width() <= 0:
			return Qwt.QwtScaleDiv()
		
		base = 2.
		if interval.maxValue() / interval.minValue() < base:
			# scale width is less than one octave -> build linear scale
			
			linearScaler = Qwt.QwtLinearScaleEngine()
			linearScaler.setAttributes(self.attributes())
			linearScaler.setReference(self.reference())
			linearScaler.setMargins(self.lowerMargin(), self.upperMargin())

			return linearScaler.divideScale(x1, x2, maxMajSteps, maxMinSteps, stepSize)

		stepSize = abs(stepSize)
		
		if stepSize == 0.:
			if maxMajSteps < 1:
				maxMajSteps = 1
			
			stepSize = self.divideInterval(self.log2(interval).width(), maxMajSteps)
			
			if stepSize < 1.:
				stepSize = 1. # major step must be >= 1 decade
		
		scaleDiv = Qwt.QwtScaleDiv()
		
		if stepSize <> 0.:
			ticks = self.buildTicks(interval, stepSize, maxMinSteps)
			scaleDiv = Qwt.QwtScaleDiv(interval, ticks[0], ticks[1], ticks[2])
		
		if x1 > x2:
			 scaleDiv.invert()
		
		return scaleDiv

	def buildTicks(self, interval, stepSize, maxMinSteps):
		boundingInterval = self.align(interval, stepSize)
		
		ticks = [[]]*Qwt.QwtScaleDiv.NTickTypes
		
		ticks[Qwt.QwtScaleDiv.MajorTick] = self.buildMajorTicks(boundingInterval, stepSize)
		
		if maxMinSteps > 0:
			ticks[Qwt.QwtScaleDiv.MinorTick] = self.buildMinorTicks(ticks[Qwt.QwtScaleDiv.MajorTick], maxMinSteps, stepSize)
		
		for i in range(0, Qwt.QwtScaleDiv.NTickTypes):
			ticks[i] = self.strip(ticks[i], interval)

		return ticks

	def buildMajorTicks(self, interval, stepSize):
		width = self.log2(interval).width()
		
		numTicks = int(round(width/stepSize)) + 1
		
		if numTicks > 10000:
			numTicks = 10000
		
		base = 2.
		lxmin = math.log(interval.minValue(), base)
		lxmax = math.log(interval.maxValue(), base)
		lstep = (lxmax - lxmin) / float(numTicks - 1)
		
		ticks = []
		
		ticks += [interval.minValue()]
		
		for i in range(1, numTicks-1):
			ticks += [math.pow(base, lxmin + float(i) * lstep)]
		
		ticks += [interval.maxValue()]
		
		return ticks

	def buildMinorTicks(self, majorTicks, maxMinSteps, stepSize):
		if stepSize < 1.1: # major step < one octave
			if (maxMinSteps < 1):
				return []
			
			if maxMinSteps >= 8:
				k0 = 2
				kmax = 9
				kstep = 1
			elif maxMinSteps >= 4:
				k0 = 2
				kmax = 8
				kstep = 2
			elif maxMinSteps >= 2:
				k0 = 2
				kmax = 5
				kstep = 3
			else:
				k0 = 5
				kmax = 5
				kstep = 1

			minorTicks = []

			for i in range(0, len(majorTicks)):
				v = majorTicks[i]
				
				for k in range (k0, kmax, kstep):
					minorTicks += [v * float(k)]

			return minorTicks
		
		else: # major step > one octave
			minStep = self.divideInterval(stepSize, maxMinSteps)
			
			if minStep == 0.:
				return []
			
			if minStep < 1.:
				minStep = 1.
			
			# number of subticks per interval
			nMin = int(round(stepSize / minStep)) - 1
			
			# Do the minor steps fit into the interval?
			if Qwt.QwtScaleArithmetic.compareEps((nMin +  1) * minStep, abs(stepSize), stepSize) > 0:
				nMin = 0
			
			if nMin < 1:
				return [] # no subticks
			
			# substep factor = 2^substeps
			base = 2.
			minFactor = max(pow(base, minStep), base)
			
			minorTicks = []
			for i in range(0, len(majorTicks)):
				val = majorTicks[i]
				
				for k in range(0, nMin):
					val *= minFactor
					minorTicks += [val]
			
			return minorTicks

	def align(self, interval, stepSize):
		intv = self.log2(interval)
		
		x1 = Qwt.QwtScaleArithmetic.floorEps(intv.minValue(), stepSize)
		x2 = Qwt.QwtScaleArithmetic.ceilEps(intv.maxValue(), stepSize)
		
		return self.pow2(Qwt.QwtDoubleInterval(x1, x2))

	def log2(self, interval):
		base = 2.
		return Qwt.QwtDoubleInterval(math.log(interval.minValue(), base), math.log(interval.maxValue(), base))
	
	def pow2(self, interval):
		base = 2.
		return Qwt.QwtDoubleInterval(math.pow(base, interval.minValue()), pow(base, interval.maxValue()))


class CustomScaleTransformation(Qwt.QwtScaleTransformation):
	def __init__(self):
		Qwt.QwtScaleTransformation.__init__(self, Qwt.QwtScaleTransformation.Other)
		self.base = 2.
	
	def copy(self):
		return CustomScaleTransformation()

	def xForm(self, s, s1, s2, p1, p2):
		s = max(s, LOG2_MIN)
		return p1 + (p2 - p1) / math.log(s2 / s1, self.base) * math.log(s / s1, self.base)

	def invXForm(self, p, p1, p2, s1, s2):
		return math.pow(self.base, (p - p1) / (p2 - p1) * math.log(s2 / s1, self.base)) * s1

#just some code to display window...
class window(QMainWindow):
    def __init__(self):
        QMainWindow.__init__(self)
        
        self.widget = QWidget()
        self.layout = QVBoxLayout()
        self.widget.setLayout(self.layout)
        self.setCentralWidget(self.widget)
        
        self.plot = Qwt.QwtPlot()
        self.layout.addWidget(self.plot)
        
        import numpy
        x = numpy.logspace(math.log(20., 2), math.log(20e3, 2), 100., base = 2.)
        y = numpy.random.rand(len(x)) + 1.
        curve = Qwt.QwtPlotCurve()
        curve.attach(self.plot)
        curve.setData(x,y)
        self.plot.setAxisScaleEngine(Qwt.QwtPlot.xBottom, CustomScaleEngine())
        #self.plot.setAxisScaleEngine(Qwt.QwtPlot.xBottom, Qwt.QwtLinearScaleEngine())
        self.plot.replot()

if __name__ == '__main__':
    #sip.settracemask(0x0007)
    app = QApplication(sys.argv)
    form = window()
    form.resize(800,600)
    form.show()
    app.exec_()

########NEW FILE########
__FILENAME__ = log2_scale_engine
# -*- coding: utf-8 -*-

# A scale engine for logarithmic (base 10) scales
#
# The step size is measured in *decades*
# and the major step size will be adjusted to fit the pattern
# \f$\left\{ 1,2,3,5\right\} \cdot 10^{n}\f$, where n is a natural number
# including zero.
#
# \warning the step size as well as the margins are measured in *decades*.

import numpy as np
from PyQt4.Qwt5 import QwtScaleEngine, QwtScaleTransformation, QwtDoubleInterval, QwtScaleDiv, QwtScaleArithmetic

# Extrema values for logarithmic scales
LOG_MIN = 1.0e-100
LOG_MAX = 1.0e100

class QwtLog10ScaleEngine(QwtScaleEngine):
	def __init__(self, *args):
		QwtScaleEngine.__init__(self, *args)
		self.transf = QwtScaleTransformation(QwtScaleTransformation.Log10)
	
	# Align and divide an interval
	#\param maxNumSteps Max. number of steps
	#\param x1 First limit of the interval (In/Out)
	#\param x2 Second limit of the interval (In/Out)
	#\param stepSize Step size (Out)
	def autoScale(self, maxSteps, x1, x2):#, stepSize):
		print "plouf autoScale"
		if ( x1 > x2 ):
			y = x2.copy()
			x2 = x1
			x1 = y
		
		interval = QwtDoubleInterval(x1 / pow(10.0, lowerMargin()), x2 * pow(10.0, upperMargin()) )
		
		logRef = 1.0
		if reference() > LOG_MIN / 2:
			logRef = min(reference(), LOG_MAX/2)
		
		if testAttribute(QwtScaleEngine.Symmetric):
			delta = max(interval.maxValue() / logRef, logRef / interval.minValue())
			interval.setInterval(logRef / delta, logRef * delta)
		
		if testAttribute(QwtScaleEngine.IncludeReference):
			interval = interval.extend(logRef)
		
		interval = interval.limited(LOG_MIN, LOG_MAX)
		
		if interval.width() == 0.0:
			interval = self.buildInterval(interval.minValue())
		
		stepSize = self.divideInterval(self.log10(interval).width(), max(maxNumSteps, 1))
		stepSize = max(stepSize, 1.0)
		
		if not testAttribute(QwtScaleEngine.Floating):
			interval = self.align(interval, stepSize)
		
		x1 = interval.minValue()
		x2 = interval.maxValue()
		
		if testAttribute(QwtScaleEngine.Inverted):
			y = x2.copy()
			x2 = x1
			x1 = y
			stepSize = -stepSize
		
		return (x1, x2, stepSize)
	
	#Calculate a scale division
	#\param x1 First interval limit 
	#\param x2 Second interval limit 
	#\param maxMajSteps Maximum for the number of major steps
	#\param maxMinSteps Maximum number of minor steps
	#\param stepSize Step size. If stepSize == 0, the scaleEngine calculates one.
	def divideScale(self, x1, x2, maxMajSteps, maxMinSteps, stepSize = 0.0):
		print "plouf divideScale", x1, x2, maxMajSteps, maxMinSteps, stepSize
		#return QwtScaleDiv(0.,1.,[1,2,3],[],[])
		
		interval = QwtDoubleInterval(x1, x2).normalized().limited(LOG_MIN, LOG_MAX)
		
		if interval.width() <= 0 :
			return QwtScaleDiv()
		
		if interval.maxValue() / interval.minValue() < 10.0:
			# scale width is less than one decade -> build linear scale
			linearScaler = QwtLinearScaleEngine()
			linearScaler.setAttributes(self.attributes())
			linearScaler.setReference(self.reference())
			linearScaler.setMargins(self.lowerMargin(), self.upperMargin())
			return linearScaler.divideScale(x1, x2, maxMajSteps, maxMinSteps, stepSize)
		
		stepSize = abs(stepSize)
		if stepSize == 0.:
			maxMajSteps = max(maxMajSteps, 1)

			stepSize = self.divideInterval(self.log10(interval).width(), maxMajSteps)
			stepSize = max(stepSize, 1.) # major step must be >= 1 decade
		
		scaleDiv = QwtScaleDiv()
		if stepSize <> 0.:
			ticks = self.buildTicks(interval, stepSize, maxMinSteps)
			scaleDiv = QwtScaleDiv(interval, ticks[QwtScaleDiv.MajorTick], ticks[QwtScaleDiv.MediumTick], ticks[QwtScaleDiv.MinorTick])
		
		if x1 > x2:
			scaleDiv.invert()
		
		print scaleDiv.ticks(QwtScaleDiv.MajorTick)
		print scaleDiv.ticks(QwtScaleDiv.MediumTick)
		print scaleDiv.ticks(QwtScaleDiv.MinorTick)
		print "plouf finished divideScale"
		
		return scaleDiv
	
	# Return a transformation, for logarithmic (base 10) scales
	def transformation(self):
		import sip
		sip.dump(self.transf)
		print "plouf transformation"
		return self.transf
	
	# Return the interval [log10(interval.minValue(), log10(interval.maxValue]
	def log10(self, interval):
		return QwtDoubleInterval(np.log10(interval.minValue()), np.log10(interval.maxValue()))
	
	# Return the interval [pow10(interval.minValue(), pow10(interval.maxValue]
	def pow10(self, interval):
		return QwtDoubleInterval(pow(10.0, interval.minValue()), pow(10.0, interval.maxValue()))
	
	#Align an interval to a step size
	#The limits of an interval are aligned that both are integer
	#multiples of the step size.
	def align(self, interval, stepSize):
		print "plouf align"
		intv = self.log10(interval)

		x1 = QwtScaleArithmetic.floorEps(intv.minValue(), stepSize)
		x2 = QwtScaleArithmetic.ceilEps(intv.maxValue(), stepSize)

		return self.pow10(QwtDoubleInterval(x1, x2))
	
	def buildTicks(self, interval, stepSize, maxMinSteps):
		boundingInterval = self.align(interval, stepSize)

		ticks = [[]]*QwtScaleDiv.NTickTypes

		ticks[QwtScaleDiv.MajorTick] = self.buildMajorTicks(boundingInterval, stepSize)

		if maxMinSteps > 0:
			ticks[QwtScaleDiv.MinorTick] = self.buildMinorTicks(ticks[QwtScaleDiv.MajorTick], maxMinSteps, stepSize)

		for  i in range(0, QwtScaleDiv.NTickTypes):
			ticks[i] = self.strip(ticks[i], interval)

		print "buildTicks"

		return ticks

	# Remove ticks from a list, that are not inside an interval
	def strip(self, ticks, interval):
		print "strip"
		if (not interval.isValid()) or (len(ticks) == 0) :
			return []

		if self.contains(interval, ticks[0]) and self.contains(interval, ticks[-1]):
			return ticks

		strippedTicks = []
		for i in range(0, len(ticks)):
			if self.contains(interval, ticks[i]):
				strippedTicks += [ticks[i]]
		
		return strippedTicks

	def buildMinorTicks(self, majorTicks, maxMinSteps, stepSize):
		if stepSize < 1.1: # major step width is one decade
			if maxMinSteps < 1:
				return QwtValueList()

			if maxMinSteps >= 8:
				k0 = 2
				kmax = 9
				kstep = 1
			elif maxMinSteps >= 4:
				k0 = 2
				kmax = 8
				kstep = 2
			elif maxMinSteps >= 2:
				k0 = 2
				kmax = 5
				kstep = 3
			else:
				k0 = 5
				kmax = 5
				kstep = 1

			minorTicks = []

			for i in range(0, len(majorTicks)):
				v = majorTicks[i]
				for k in range(k0, kmax, kstep):
					minorTicks += [v * float(k)]

			return minorTicks

		else: # major step > one decade
			minStep = self.divideInterval(stepSize, maxMinSteps)
			if minStep == 0.:
				return QwtValueList()

			minStep = max(minStep, 1.)

			# subticks per interval
			nMin = round(stepSize / minStep) - 1

			# Do the minor steps fit into the interval?
			if QwtScaleArithmetic.compareEps((nMin +  1) * minStep, qwtAbs(stepSize), stepSize) > 0:
				nMin = 0

			if nMin < 1:
				return QwtValueList() # no subticks

			# substep factor = 10^substeps
			minFactor = qwtMax(pow(10.0, minStep), 10.0)

			minorTicks = []
			for i in range(0, majorTicks.count()):
				val = majorTicks[i]
				for k in range(0, nMin):
					val *= minFactor
					minorTicks += [val]

			return minorTicks

	def buildMajorTicks(self, interval, stepSize):
		width = self.log10(interval).width()

		numTicks = int(round(width / stepSize) + 1)
		numTicks = min(10000, numTicks)

		lxmin = np.log(interval.minValue())
		lxmax = np.log(interval.maxValue())
		lstep = (lxmax - lxmin) / float(numTicks - 1.)

		ticks = []

		ticks += [interval.minValue()]

		for i in range(1, numTicks):
			ticks += [np.exp(lxmin + float(i) * lstep)]

		ticks += [interval.maxValue()]

		return ticks
	def copy(self):
		print "plouf copy"
		return self
########NEW FILE########
__FILENAME__ = output
# -*- coding: utf-8 -*-
"""
Created on Sat Jun 11 23:59:48 2011

@author: timothee
"""

import pyaudio
import numpy as np
from scipy import stats

SAMPLING_RATE = 44100
FRAMES_PER_BUFFER = 1024

time_s = 10.
t = np.arange(0, time_s, 1./float(SAMPLING_RATE))

def pinknoise(n, rvs=stats.norm.rvs):
    k = min(int(np.floor(np.log(n)/np.log(2))), 12)
    pink = np.zeros((n,), np.float)

    for m in 2**np.arange(k):
        p = int(np.ceil(float(n) / m))
        pink += np.repeat(rvs(size=p), m, axis=0)[:n]

    return pink/k

p = pyaudio.PyAudio()

# open stream
stream = p.open(format = pyaudio.paInt16,
                channels = 1,
                rate = SAMPLING_RATE,
                output = True)

# play
i = 0
imax = int(np.floor(t.max()*SAMPLING_RATE/FRAMES_PER_BUFFER))

for i in range(0, imax):
    # white noise
    floatdata = np.random.standard_normal(FRAMES_PER_BUFFER)
    # sinusoid
    ti = t[i*FRAMES_PER_BUFFER: (i+1)*FRAMES_PER_BUFFER]
    f = 440.
    floatdata = np.sin(2*np.pi*ti*f)
    #pink noise
    floatdata = pinknoise(FRAMES_PER_BUFFER)
    
    intdata = (floatdata*(2.**(16-1))).astype(np.int16)
    chardata = intdata.tostring()
    stream.write(chardata)

stream.close()
p.terminate()

########NEW FILE########
__FILENAME__ = pink
# -*- coding: utf-8 -*-
"""
Created on Sun Aug 14 14:43:13 2011

@author: timothee
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import mlab

def one_over_f(f, knee, alpha):
    desc = np.ones_like(f)
    desc[f<KNEE] = np.abs((f[f<KNEE]/KNEE)**(-alpha))
    desc[0] = 1
    return desc

white_noise_sigma = 3 #mK * sqrt(s)

SFREQ = 2 #Hz
KNEE = 5 / 1e3 #Hz
ALPHA = .7
N = SFREQ * 3600 * 2 # 4 hours

#generate white noise in time domain
wn=np.random.normal(0.,white_noise_sigma*np.sqrt(SFREQ),N)

#shaping in freq domain
s = np.fft.rfft(wn)
f = np.fft.fftfreq(N, d=1./SFREQ)[:len(s)]
f[-1]=np.abs(f[-1])
fft_sim = s * one_over_f(f, KNEE, ALPHA)
T_sim = np.fft.irfft(fft_sim)

#PSD - 1 hour window
NFFT = int(SFREQ*60*60*1)
s_sim, f_sim = mlab.psd(T_sim, NFFT=NFFT, Fs=SFREQ, scale_by_freq=True)


plt.figure()

plt.plot(f_sim, np.sqrt(s_sim), label='sim')
plt.loglog(f_sim, one_over_f(f_sim, KNEE, ALPHA) * white_noise_sigma*1e3*np.sqrt(2), 'r',label='noise model')
plt.vlines(KNEE,*plt.ylim())
plt.grid(); plt.xlabel('Freq'); plt.title('Amplitude spectrum'); plt.legend()

plt.show()

########NEW FILE########
__FILENAME__ = pink2
# -*- coding: utf-8 -*-
"""
Created on Sun Aug 14 14:45:48 2011

@author: timothee
"""

# -*- coding: utf-8 -*-
"""
Created on Sun Aug 14 14:43:13 2011

@author: timothee
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import mlab

from scipy import stats

def pink1d(n, rvs=stats.norm.rvs):
    k = min(int(np.floor(np.log(n)/np.log(2))), 12)
    pink = np.zeros((n,), np.float)
    m = 1
    for i in range(k):
        p = int(np.ceil(float(n) / m))
        pink += np.repeat(rvs(size=p), m,axis=0)[:n]
        m <<= 1

    return pink/k

T_sim = pink1d(2**18*4)

#PSD - 1 hour window
NFFT = int(1024*16*2)
s_sim, f_sim = mlab.psd(T_sim, NFFT=NFFT, Fs=44100., scale_by_freq=True)


plt.figure()

plt.loglog(f_sim, np.sqrt(s_sim), label='sim')
plt.grid(); plt.xlabel('Freq'); plt.title('Amplitude spectrum'); plt.legend()

plt.show()

########NEW FILE########
__FILENAME__ = resample
import numpy as np

def resample(interp_factor_L, #int
             decim_factor_M, #int
             num_taps_per_phase, #int
             current_phase, #int
             H, #array of doubles
             Z, #array of doubles
             inp): #array of doubles
    phase_num = current_phase

    num_inp = len(inp)
    
    out = np.zeros(num_inp*interp_factor_L/decim_factor_M)
    
    if Z is None:
        Z = np.zeros(num_taps_per_phase)

    p_inp = 0
    num_out = 0
    while (num_inp > 0):
        # shift input samples into Z delay line
        while (phase_num >= interp_factor_L):
            # decrease phase number by interpolation factor L
            phase_num -= interp_factor_L

            # shift Z delay line up to make room for next sample
            
            for tap in range(1, num_taps_per_phase)[::-1]:
                Z[tap] = Z[tap - 1]

            # copy next sample from input buffer to bottom of Z delay line
            Z[0] = inp[p_inp]
            p_inp += 1

            num_inp -= -1
            if (num_inp == 0):
                break

        # calculate outputs
        while (phase_num < interp_factor_L):
            # point to the current polyphase filter
            coeff = phase_num

            # calculate FIR sum
            sum = 0.
            for tap in range(num_taps_per_phase):
                sum += H[coeff] * Z[tap]
                coeff += interp_factor_L  # point to next coefficient

            out[num_out] = sum # store sum and point to next output
            num_out += 1

            # increase phase number by decimation factor M
            phase_num += decim_factor_M

    # pass phase number and number of outputs back to caller
    current_phase = phase_num
    
    return current_phase, Z, num_out

t = np.linspace(0,1.,44100)
f = 440
a = np.sin(2*np.pi*f*t)
interp_L = 10000
decim_M = 4000
current_phase = 0
ntaps = interp_L*1000
num_taps_per_phase = ntaps/interp_L
H =  # filter coeff
Z = None
b = resample(interp_L, #int
             decim_M, #int
             num_taps_per_phase, #int
             current_phase, #int
             H, #array of doubles
             Z, #array of doubles
             a)

plt.figure()
plt.plot(a)
plt.plot(b)             
plt.show()

########NEW FILE########
__FILENAME__ = test_ringbuffer
import numpy as np
from friture.ringbuffer import RingBuffer
import matplotlib.pyplot as plt

Ns = int(1e4)

x = np.arange(Ns)
x.shape = (1,Ns)

l = 1024
Nb = int(Ns/l)
print "Nb =", Nb

rb = RingBuffer()
rb.data(Ns) # grow the buffer as needed

# split in two to test zero-length insertions
Nb0 = Nb/2

print "Nb0 =", Nb0, "Nb1 =", Nb - Nb0

print "pushing first parts"
for i in range(Nb0):
	rb.push(x[:,i*l:(i+1)*l])

print "pushing an empty array", x[:,0:0].shape
rb.push(x[:,0:0])

print "pushing second parts"
for i in range(Nb0,Nb):
	rb.push(x[:,i*l:(i+1)*l])

print "pushing leftovers"
rb.push(x[:,Nb*l:])

print "retrieving"
y = rb.data(Ns)

print x.shape, y.shape

print "correct values in the ringbuffer ? =", np.all(x == y)

print "plotting"
plt.figure()
plt.subplot(2,1,1)
plt.plot(x[0,:])
plt.subplot(2,1,2)
plt.plot(y[0,:])

print "finished"
plt.show()

########NEW FILE########
__FILENAME__ = test_subsampler
import numpy as np
import matplotlib.pyplot as plt

from friture import generated_filters
from friture.audiobackend import SAMPLING_RATE
from friture.delay_estimator import subsampler, subsampler_filtic

Ns = int(1e4)
#y = np.random.rand(Ns)

f = 2e1
t = np.linspace(0, float(Ns)/SAMPLING_RATE, Ns)
y = np.cos(2.*np.pi*f*t)

Ndec = 2
subsampled_sampling_rate = SAMPLING_RATE/2**(Ndec)
[bdec, adec] = generated_filters.params['dec']
zfs0 = subsampler_filtic(Ndec, bdec, adec)

Nb = 10
l = int(Ns/Nb)

Nb0 = Nb/2
print "Nb0 =", Nb0, "Nb1 =", Nb - Nb0

print "subsample first parts"
for i in range(Nb0):
    ydec, zfs0 = subsampler(Ndec, bdec, adec, y[i*l:(i+1)*l], zfs0)
    if i == 0:
        y_dec = ydec
    else:
        y_dec = np.append(y_dec, ydec)

print "push an empty array to the subsampler", y[i*l:i*l].shape, y[i*l:i*l].size
ydec, zfs0 = subsampler(Ndec, bdec, adec, y[i*l:i*l], zfs0)
y_dec = np.append(y_dec, ydec)

print "subsample last parts"
for i in range(Nb0, Nb):
    ydec, zfs0 = subsampler(Ndec, bdec, adec, y[i*l:(i+1)*l], zfs0)
    y_dec = np.append(y_dec, ydec)

print "plot"
plt.figure()
plt.subplot(2,1,1)
plt.plot(y)
plt.subplot(2,1,2)
plt.plot(y_dec)

plt.show()

########NEW FILE########
__FILENAME__ = gprof2dot
#!/usr/bin/env python
#
# Copyright 2008-2009 Jose Fonseca
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

"""Generate a dot graph from the output of several profilers."""

__author__ = "Jose Fonseca"

__version__ = "1.0"


import sys
import math
import os.path
import re
import textwrap
import optparse
import xml.parsers.expat


try:
    # Debugging helper module
    import debug
except ImportError:
    pass


def percentage(p):
    return "%.02f%%" % (p*100.0,)

def add(a, b):
    return a + b

def equal(a, b):
    if a == b:
        return a
    else:
        return None

def fail(a, b):
    assert False


tol = 2 ** -23

def ratio(numerator, denominator):
    try:
        ratio = float(numerator)/float(denominator)
    except ZeroDivisionError:
        # 0/0 is undefined, but 1.0 yields more useful results
        return 1.0
    if ratio < 0.0:
        if ratio < -tol:
            sys.stderr.write('warning: negative ratio (%s/%s)\n' % (numerator, denominator))
        return 0.0
    if ratio > 1.0:
        if ratio > 1.0 + tol:
            sys.stderr.write('warning: ratio greater than one (%s/%s)\n' % (numerator, denominator))
        return 1.0
    return ratio


class UndefinedEvent(Exception):
    """Raised when attempting to get an event which is undefined."""
    
    def __init__(self, event):
        Exception.__init__(self)
        self.event = event

    def __str__(self):
        return 'unspecified event %s' % self.event.name


class Event(object):
    """Describe a kind of event, and its basic operations."""

    def __init__(self, name, null, aggregator, formatter = str):
        self.name = name
        self._null = null
        self._aggregator = aggregator
        self._formatter = formatter

    def __eq__(self, other):
        return self is other

    def __hash__(self):
        return id(self)

    def null(self):
        return self._null

    def aggregate(self, val1, val2):
        """Aggregate two event values."""
        assert val1 is not None
        assert val2 is not None
        return self._aggregator(val1, val2)
    
    def format(self, val):
        """Format an event value."""
        assert val is not None
        return self._formatter(val)


MODULE = Event("Module", None, equal)
PROCESS = Event("Process", None, equal)

CALLS = Event("Calls", 0, add)
SAMPLES = Event("Samples", 0, add)
SAMPLES2 = Event("Samples", 0, add)

TIME = Event("Time", 0.0, add, lambda x: '(' + str(x) + ')')
TIME_RATIO = Event("Time ratio", 0.0, add, lambda x: '(' + percentage(x) + ')')
TOTAL_TIME = Event("Total time", 0.0, fail)
TOTAL_TIME_RATIO = Event("Total time ratio", 0.0, fail, percentage)

CALL_RATIO = Event("Call ratio", 0.0, add, percentage)

PRUNE_RATIO = Event("Prune ratio", 0.0, add, percentage)


class Object(object):
    """Base class for all objects in profile which can store events."""

    def __init__(self, events=None):
        if events is None:
            self.events = {}
        else:
            self.events = events

    def __hash__(self):
        return id(self)

    def __eq__(self, other):
        return self is other

    def __contains__(self, event):
        return event in self.events
    
    def __getitem__(self, event):
        try:
            return self.events[event]
        except KeyError:
            raise UndefinedEvent(event)
    
    def __setitem__(self, event, value):
        if value is None:
            if event in self.events:
                del self.events[event]
        else:
            self.events[event] = value


class Call(Object):
    """A call between functions.
    
    There should be at most one call object for every pair of functions.
    """

    def __init__(self, callee_id):
        Object.__init__(self)
        self.callee_id = callee_id    


class Function(Object):
    """A function."""

    def __init__(self, id, name):
        Object.__init__(self)
        self.id = id
        self.name = name
        self.calls = {}
        self.cycle = None
    
    def add_call(self, call):
        if call.callee_id in self.calls:
            sys.stderr.write('warning: overwriting call from function %s to %s\n' % (str(self.id), str(call.callee_id)))
        self.calls[call.callee_id] = call

    # TODO: write utility functions

    def __repr__(self):
        return self.name


class Cycle(Object):
    """A cycle made from recursive function calls."""

    def __init__(self):
        Object.__init__(self)
        # XXX: Do cycles need an id?
        self.functions = set()

    def add_function(self, function):
        assert function not in self.functions
        self.functions.add(function)
        # XXX: Aggregate events?
        if function.cycle is not None:
            for other in function.cycle.functions:
                if function not in self.functions:
                    self.add_function(other)
        function.cycle = self


class Profile(Object):
    """The whole profile."""

    def __init__(self):
        Object.__init__(self)
        self.functions = {}
        self.cycles = []

    def add_function(self, function):
        if function.id in self.functions:
            sys.stderr.write('warning: overwriting function %s (id %s)\n' % (function.name, str(function.id)))
        self.functions[function.id] = function

    def add_cycle(self, cycle):
        self.cycles.append(cycle)

    def validate(self):
        """Validate the edges."""

        for function in self.functions.itervalues():
            for callee_id in function.calls.keys():
                assert function.calls[callee_id].callee_id == callee_id
                if callee_id not in self.functions:
                    sys.stderr.write('warning: call to undefined function %s from function %s\n' % (str(callee_id), function.name))
                    del function.calls[callee_id]

    def find_cycles(self):
        """Find cycles using Tarjan's strongly connected components algorithm."""

        # Apply the Tarjan's algorithm successively until all functions are visited
        visited = set()
        for function in self.functions.itervalues():
            if function not in visited:
                self._tarjan(function, 0, [], {}, {}, visited)
        cycles = []
        for function in self.functions.itervalues():
            if function.cycle is not None and function.cycle not in cycles:
                cycles.append(function.cycle)
        self.cycles = cycles
        if 0:
            for cycle in cycles:
                sys.stderr.write("Cycle:\n")
                for member in cycle.functions:
                    sys.stderr.write("\t%s\n" % member.name)
    
    def _tarjan(self, function, order, stack, orders, lowlinks, visited):
        """Tarjan's strongly connected components algorithm.

        See also:
        - http://en.wikipedia.org/wiki/Tarjan's_strongly_connected_components_algorithm
        """

        visited.add(function)
        orders[function] = order
        lowlinks[function] = order
        order += 1
        pos = len(stack)
        stack.append(function)
        for call in function.calls.itervalues():
            callee = self.functions[call.callee_id]
            # TODO: use a set to optimize lookup
            if callee not in orders:
                order = self._tarjan(callee, order, stack, orders, lowlinks, visited)
                lowlinks[function] = min(lowlinks[function], lowlinks[callee])
            elif callee in stack:
                lowlinks[function] = min(lowlinks[function], orders[callee])
        if lowlinks[function] == orders[function]:
            # Strongly connected component found
            members = stack[pos:]
            del stack[pos:]
            if len(members) > 1:
                cycle = Cycle()
                for member in members:
                    cycle.add_function(member)
        return order

    def call_ratios(self, event):
        # Aggregate for incoming calls
        cycle_totals = {}
        for cycle in self.cycles:
            cycle_totals[cycle] = 0.0
        function_totals = {}
        for function in self.functions.itervalues():
            function_totals[function] = 0.0
        for function in self.functions.itervalues():
            for call in function.calls.itervalues():
                if call.callee_id != function.id:
                    callee = self.functions[call.callee_id]
                    function_totals[callee] += call[event]
                    if callee.cycle is not None and callee.cycle is not function.cycle:
                        cycle_totals[callee.cycle] += call[event]

        # Compute the ratios
        for function in self.functions.itervalues():
            for call in function.calls.itervalues():
                assert CALL_RATIO not in call
                if call.callee_id != function.id:
                    callee = self.functions[call.callee_id]
                    if callee.cycle is not None and callee.cycle is not function.cycle:
                        total = cycle_totals[callee.cycle]
                    else:
                        total = function_totals[callee]
                    call[CALL_RATIO] = ratio(call[event], total)

    def integrate(self, outevent, inevent):
        """Propagate function time ratio allong the function calls.

        Must be called after finding the cycles.

        See also:
        - http://citeseer.ist.psu.edu/graham82gprof.html
        """

        # Sanity checking
        assert outevent not in self
        for function in self.functions.itervalues():
            assert outevent not in function
            assert inevent in function
            for call in function.calls.itervalues():
                assert outevent not in call
                if call.callee_id != function.id:
                    assert CALL_RATIO in call

        # Aggregate the input for each cycle 
        for cycle in self.cycles:
            total = inevent.null()
            for function in self.functions.itervalues():
                total = inevent.aggregate(total, function[inevent])
            self[inevent] = total

        # Integrate along the edges
        total = inevent.null()
        for function in self.functions.itervalues():
            total = inevent.aggregate(total, function[inevent])
            self._integrate_function(function, outevent, inevent)
        self[outevent] = total

    def _integrate_function(self, function, outevent, inevent):
        if function.cycle is not None:
            return self._integrate_cycle(function.cycle, outevent, inevent)
        else:
            if outevent not in function:
                total = function[inevent]
                for call in function.calls.itervalues():
                    if call.callee_id != function.id:
                        total += self._integrate_call(call, outevent, inevent)
                function[outevent] = total
            return function[outevent]
    
    def _integrate_call(self, call, outevent, inevent):
        assert outevent not in call
        assert CALL_RATIO in call
        callee = self.functions[call.callee_id]
        subtotal = call[CALL_RATIO]*self._integrate_function(callee, outevent, inevent)
        call[outevent] = subtotal
        return subtotal

    def _integrate_cycle(self, cycle, outevent, inevent):
        if outevent not in cycle:

            total = inevent.null()
            for member in cycle.functions:
                subtotal = member[inevent]
                for call in member.calls.itervalues():
                    callee = self.functions[call.callee_id]
                    if callee.cycle is not cycle:
                        subtotal += self._integrate_call(call, outevent, inevent)
                total += subtotal
            cycle[outevent] = total
            
            callees = {}
            for function in self.functions.itervalues():
                if function.cycle is not cycle:
                    for call in function.calls.itervalues():
                        callee = self.functions[call.callee_id]
                        if callee.cycle is cycle:
                            try:
                                callees[callee] += call[CALL_RATIO]
                            except KeyError:
                                callees[callee] = call[CALL_RATIO]

            for callee, call_ratio in callees.iteritems():
                ranks = {}
                call_ratios = {}
                partials = {}
                self._rank_cycle_function(cycle, callee, 0, ranks)
                self._call_ratios_cycle(cycle, callee, ranks, call_ratios, set())
                partial = self._integrate_cycle_function(cycle, callee, call_ratio, partials, ranks, call_ratios, outevent, inevent)
                assert partial == max(partials.values())
                assert not total or abs(1.0 - partial/(call_ratio*total)) <= 0.001
            
        return cycle[outevent]

    def _rank_cycle_function(self, cycle, function, rank, ranks):
        if function not in ranks or ranks[function] > rank:
            ranks[function] = rank
            for call in function.calls.itervalues():
                if call.callee_id != function.id:
                    callee = self.functions[call.callee_id]
                    if callee.cycle is cycle:
                        self._rank_cycle_function(cycle, callee, rank + 1, ranks)

    def _call_ratios_cycle(self, cycle, function, ranks, call_ratios, visited):
        if function not in visited:
            visited.add(function)
            for call in function.calls.itervalues():
                if call.callee_id != function.id:
                    callee = self.functions[call.callee_id]
                    if callee.cycle is cycle:
                        if ranks[callee] > ranks[function]:
                            call_ratios[callee] = call_ratios.get(callee, 0.0) + call[CALL_RATIO]
                            self._call_ratios_cycle(cycle, callee, ranks, call_ratios, visited)

    def _integrate_cycle_function(self, cycle, function, partial_ratio, partials, ranks, call_ratios, outevent, inevent):
        if function not in partials:
            partial = partial_ratio*function[inevent]
            for call in function.calls.itervalues():
                if call.callee_id != function.id:
                    callee = self.functions[call.callee_id]
                    if callee.cycle is not cycle:
                        assert outevent in call
                        partial += partial_ratio*call[outevent]
                    else:
                        if ranks[callee] > ranks[function]:
                            callee_partial = self._integrate_cycle_function(cycle, callee, partial_ratio, partials, ranks, call_ratios, outevent, inevent)
                            call_ratio = ratio(call[CALL_RATIO], call_ratios[callee])
                            call_partial = call_ratio*callee_partial
                            try:
                                call[outevent] += call_partial
                            except UndefinedEvent:
                                call[outevent] = call_partial
                            partial += call_partial
            partials[function] = partial
            try:
                function[outevent] += partial
            except UndefinedEvent:
                function[outevent] = partial
        return partials[function]

    def aggregate(self, event):
        """Aggregate an event for the whole profile."""

        total = event.null()
        for function in self.functions.itervalues():
            try:
                total = event.aggregate(total, function[event])
            except UndefinedEvent:
                return
        self[event] = total

    def ratio(self, outevent, inevent):
        assert outevent not in self
        assert inevent in self
        for function in self.functions.itervalues():
            assert outevent not in function
            assert inevent in function
            function[outevent] = ratio(function[inevent], self[inevent])
            for call in function.calls.itervalues():
                assert outevent not in call
                if inevent in call:
                    call[outevent] = ratio(call[inevent], self[inevent])
        self[outevent] = 1.0

    def prune(self, node_thres, edge_thres):
        """Prune the profile"""

        # compute the prune ratios
        for function in self.functions.itervalues():
            try:
                function[PRUNE_RATIO] = function[TOTAL_TIME_RATIO]
            except UndefinedEvent:
                pass

            for call in function.calls.itervalues():
                callee = self.functions[call.callee_id]

                if TOTAL_TIME_RATIO in call:
                    # handle exact cases first
                    call[PRUNE_RATIO] = call[TOTAL_TIME_RATIO] 
                else:
                    try:
                        # make a safe estimate
                        call[PRUNE_RATIO] = min(function[TOTAL_TIME_RATIO], callee[TOTAL_TIME_RATIO]) 
                    except UndefinedEvent:
                        pass

        # prune the nodes
        for function_id in self.functions.keys():
            function = self.functions[function_id]
            try:
                if function[PRUNE_RATIO] < node_thres:
                    del self.functions[function_id]
            except UndefinedEvent:
                pass

        # prune the egdes
        for function in self.functions.itervalues():
            for callee_id in function.calls.keys():
                call = function.calls[callee_id]
                try:
                    if callee_id not in self.functions or call[PRUNE_RATIO] < edge_thres:
                        del function.calls[callee_id]
                except UndefinedEvent:
                    pass
    
    def dump(self):
        for function in self.functions.itervalues():
            sys.stderr.write('Function %s:\n' % (function.name,))
            self._dump_events(function.events)
            for call in function.calls.itervalues():
                callee = self.functions[call.callee_id]
                sys.stderr.write('  Call %s:\n' % (callee.name,))
                self._dump_events(call.events)

    def _dump_events(self, events):
        for event, value in events.iteritems():
            sys.stderr.write('    %s: %s\n' % (event.name, event.format(value)))


class Struct:
    """Masquerade a dictionary with a structure-like behavior."""

    def __init__(self, attrs = None):
        if attrs is None:
            attrs = {}
        self.__dict__['_attrs'] = attrs
    
    def __getattr__(self, name):
        try:
            return self._attrs[name]
        except KeyError:
            raise AttributeError(name)

    def __setattr__(self, name, value):
        self._attrs[name] = value

    def __str__(self):
        return str(self._attrs)

    def __repr__(self):
        return repr(self._attrs)
    

class ParseError(Exception):
    """Raised when parsing to signal mismatches."""

    def __init__(self, msg, line):
        self.msg = msg
        # TODO: store more source line information
        self.line = line

    def __str__(self):
        return '%s: %r' % (self.msg, self.line)


class Parser:
    """Parser interface."""

    def __init__(self):
        pass

    def parse(self):
        raise NotImplementedError

    
class LineParser(Parser):
    """Base class for parsers that read line-based formats."""

    def __init__(self, file):
        Parser.__init__(self)
        self._file = file
        self.__line = None
        self.__eof = False

    def readline(self):
        line = self._file.readline()
        if not line:
            self.__line = ''
            self.__eof = True
        self.__line = line.rstrip('\r\n')

    def lookahead(self):
        assert self.__line is not None
        return self.__line

    def consume(self):
        assert self.__line is not None
        line = self.__line
        self.readline()
        return line

    def eof(self):
        assert self.__line is not None
        return self.__eof


XML_ELEMENT_START, XML_ELEMENT_END, XML_CHARACTER_DATA, XML_EOF = range(4)


class XmlToken:

    def __init__(self, type, name_or_data, attrs = None, line = None, column = None):
        assert type in (XML_ELEMENT_START, XML_ELEMENT_END, XML_CHARACTER_DATA, XML_EOF)
        self.type = type
        self.name_or_data = name_or_data
        self.attrs = attrs
        self.line = line
        self.column = column

    def __str__(self):
        if self.type == XML_ELEMENT_START:
            return '<' + self.name_or_data + ' ...>'
        if self.type == XML_ELEMENT_END:
            return '</' + self.name_or_data + '>'
        if self.type == XML_CHARACTER_DATA:
            return self.name_or_data
        if self.type == XML_EOF:
            return 'end of file'
        assert 0


class XmlTokenizer:
    """Expat based XML tokenizer."""

    def __init__(self, fp, skip_ws = True):
        self.fp = fp
        self.tokens = []
        self.index = 0
        self.final = False
        self.skip_ws = skip_ws
        
        self.character_pos = 0, 0
        self.character_data = ''
        
        self.parser = xml.parsers.expat.ParserCreate()
        self.parser.StartElementHandler  = self.handle_element_start
        self.parser.EndElementHandler    = self.handle_element_end
        self.parser.CharacterDataHandler = self.handle_character_data
    
    def handle_element_start(self, name, attributes):
        self.finish_character_data()
        line, column = self.pos()
        token = XmlToken(XML_ELEMENT_START, name, attributes, line, column)
        self.tokens.append(token)
    
    def handle_element_end(self, name):
        self.finish_character_data()
        line, column = self.pos()
        token = XmlToken(XML_ELEMENT_END, name, None, line, column)
        self.tokens.append(token)

    def handle_character_data(self, data):
        if not self.character_data:
            self.character_pos = self.pos()
        self.character_data += data
    
    def finish_character_data(self):
        if self.character_data:
            if not self.skip_ws or not self.character_data.isspace(): 
                line, column = self.character_pos
                token = XmlToken(XML_CHARACTER_DATA, self.character_data, None, line, column)
                self.tokens.append(token)
            self.character_data = ''
    
    def next(self):
        size = 16*1024
        while self.index >= len(self.tokens) and not self.final:
            self.tokens = []
            self.index = 0
            data = self.fp.read(size)
            self.final = len(data) < size
            try:
                self.parser.Parse(data, self.final)
            except xml.parsers.expat.ExpatError, e:
                #if e.code == xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS:
                if e.code == 3:
                    pass
                else:
                    raise e
        if self.index >= len(self.tokens):
            line, column = self.pos()
            token = XmlToken(XML_EOF, None, None, line, column)
        else:
            token = self.tokens[self.index]
            self.index += 1
        return token

    def pos(self):
        return self.parser.CurrentLineNumber, self.parser.CurrentColumnNumber


class XmlTokenMismatch(Exception):

    def __init__(self, expected, found):
        self.expected = expected
        self.found = found

    def __str__(self):
        return '%u:%u: %s expected, %s found' % (self.found.line, self.found.column, str(self.expected), str(self.found))


class XmlParser(Parser):
    """Base XML document parser."""

    def __init__(self, fp):
        Parser.__init__(self)
        self.tokenizer = XmlTokenizer(fp)
        self.consume()
    
    def consume(self):
        self.token = self.tokenizer.next()

    def match_element_start(self, name):
        return self.token.type == XML_ELEMENT_START and self.token.name_or_data == name
    
    def match_element_end(self, name):
        return self.token.type == XML_ELEMENT_END and self.token.name_or_data == name

    def element_start(self, name):
        while self.token.type == XML_CHARACTER_DATA:
            self.consume()
        if self.token.type != XML_ELEMENT_START:
            raise XmlTokenMismatch(XmlToken(XML_ELEMENT_START, name), self.token)
        if self.token.name_or_data != name:
            raise XmlTokenMismatch(XmlToken(XML_ELEMENT_START, name), self.token)
        attrs = self.token.attrs
        self.consume()
        return attrs
    
    def element_end(self, name):
        while self.token.type == XML_CHARACTER_DATA:
            self.consume()
        if self.token.type != XML_ELEMENT_END:
            raise XmlTokenMismatch(XmlToken(XML_ELEMENT_END, name), self.token)
        if self.token.name_or_data != name:
            raise XmlTokenMismatch(XmlToken(XML_ELEMENT_END, name), self.token)
        self.consume()

    def character_data(self, strip = True):
        data = ''
        while self.token.type == XML_CHARACTER_DATA:
            data += self.token.name_or_data
            self.consume()
        if strip:
            data = data.strip()
        return data


class GprofParser(Parser):
    """Parser for GNU gprof output.

    See also:
    - Chapter "Interpreting gprof's Output" from the GNU gprof manual
      http://sourceware.org/binutils/docs-2.18/gprof/Call-Graph.html#Call-Graph
    - File "cg_print.c" from the GNU gprof source code
      http://sourceware.org/cgi-bin/cvsweb.cgi/~checkout~/src/gprof/cg_print.c?rev=1.12&cvsroot=src
    """

    def __init__(self, fp):
        Parser.__init__(self)
        self.fp = fp
        self.functions = {}
        self.cycles = {}

    def readline(self):
        line = self.fp.readline()
        if not line:
            sys.stderr.write('error: unexpected end of file\n')
            sys.exit(1)
        line = line.rstrip('\r\n')
        return line

    _int_re = re.compile(r'^\d+$')
    _float_re = re.compile(r'^\d+\.\d+$')

    def translate(self, mo):
        """Extract a structure from a match object, while translating the types in the process."""
        attrs = {}
        groupdict = mo.groupdict()
        for name, value in groupdict.iteritems():
            if value is None:
                value = None
            elif self._int_re.match(value):
                value = int(value)
            elif self._float_re.match(value):
                value = float(value)
            attrs[name] = (value)
        return Struct(attrs)

    _cg_header_re = re.compile(
        # original gprof header
        r'^\s+called/total\s+parents\s*$|' +
        r'^index\s+%time\s+self\s+descendents\s+called\+self\s+name\s+index\s*$|' +
        r'^\s+called/total\s+children\s*$|' +
        # GNU gprof header
        r'^index\s+%\s+time\s+self\s+children\s+called\s+name\s*$'
    )

    _cg_ignore_re = re.compile(
        # spontaneous
        r'^\s+<spontaneous>\s*$|'
        # internal calls (such as "mcount")
        r'^.*\((\d+)\)$'
    )

    _cg_primary_re = re.compile(
        r'^\[(?P<index>\d+)\]?' + 
        r'\s+(?P<percentage_time>\d+\.\d+)' + 
        r'\s+(?P<self>\d+\.\d+)' + 
        r'\s+(?P<descendants>\d+\.\d+)' + 
        r'\s+(?:(?P<called>\d+)(?:\+(?P<called_self>\d+))?)?' + 
        r'\s+(?P<name>\S.*?)' +
        r'(?:\s+<cycle\s(?P<cycle>\d+)>)?' +
        r'\s\[(\d+)\]$'
    )

    _cg_parent_re = re.compile(
        r'^\s+(?P<self>\d+\.\d+)?' + 
        r'\s+(?P<descendants>\d+\.\d+)?' + 
        r'\s+(?P<called>\d+)(?:/(?P<called_total>\d+))?' + 
        r'\s+(?P<name>\S.*?)' +
        r'(?:\s+<cycle\s(?P<cycle>\d+)>)?' +
        r'\s\[(?P<index>\d+)\]$'
    )

    _cg_child_re = _cg_parent_re

    _cg_cycle_header_re = re.compile(
        r'^\[(?P<index>\d+)\]?' + 
        r'\s+(?P<percentage_time>\d+\.\d+)' + 
        r'\s+(?P<self>\d+\.\d+)' + 
        r'\s+(?P<descendants>\d+\.\d+)' + 
        r'\s+(?:(?P<called>\d+)(?:\+(?P<called_self>\d+))?)?' + 
        r'\s+<cycle\s(?P<cycle>\d+)\sas\sa\swhole>' +
        r'\s\[(\d+)\]$'
    )

    _cg_cycle_member_re = re.compile(
        r'^\s+(?P<self>\d+\.\d+)?' + 
        r'\s+(?P<descendants>\d+\.\d+)?' + 
        r'\s+(?P<called>\d+)(?:\+(?P<called_self>\d+))?' + 
        r'\s+(?P<name>\S.*?)' +
        r'(?:\s+<cycle\s(?P<cycle>\d+)>)?' +
        r'\s\[(?P<index>\d+)\]$'
    )

    _cg_sep_re = re.compile(r'^--+$')

    def parse_function_entry(self, lines):
        parents = []
        children = []

        while True:
            if not lines:
                sys.stderr.write('warning: unexpected end of entry\n')
            line = lines.pop(0)
            if line.startswith('['):
                break
        
            # read function parent line
            mo = self._cg_parent_re.match(line)
            if not mo:
                if self._cg_ignore_re.match(line):
                    continue
                sys.stderr.write('warning: unrecognized call graph entry: %r\n' % line)
            else:
                parent = self.translate(mo)
                parents.append(parent)

        # read primary line
        mo = self._cg_primary_re.match(line)
        if not mo:
            sys.stderr.write('warning: unrecognized call graph entry: %r\n' % line)
            return
        else:
            function = self.translate(mo)

        while lines:
            line = lines.pop(0)
            
            # read function subroutine line
            mo = self._cg_child_re.match(line)
            if not mo:
                if self._cg_ignore_re.match(line):
                    continue
                sys.stderr.write('warning: unrecognized call graph entry: %r\n' % line)
            else:
                child = self.translate(mo)
                children.append(child)
        
        function.parents = parents
        function.children = children

        self.functions[function.index] = function

    def parse_cycle_entry(self, lines):

        # read cycle header line
        line = lines[0]
        mo = self._cg_cycle_header_re.match(line)
        if not mo:
            sys.stderr.write('warning: unrecognized call graph entry: %r\n' % line)
            return
        cycle = self.translate(mo)

        # read cycle member lines
        cycle.functions = []
        for line in lines[1:]:
            mo = self._cg_cycle_member_re.match(line)
            if not mo:
                sys.stderr.write('warning: unrecognized call graph entry: %r\n' % line)
                continue
            call = self.translate(mo)
            cycle.functions.append(call)
        
        self.cycles[cycle.cycle] = cycle

    def parse_cg_entry(self, lines):
        if lines[0].startswith("["):
            self.parse_cycle_entry(lines)
        else:
            self.parse_function_entry(lines)

    def parse_cg(self):
        """Parse the call graph."""

        # skip call graph header
        while not self._cg_header_re.match(self.readline()):
            pass
        line = self.readline()
        while self._cg_header_re.match(line):
            line = self.readline()

        # process call graph entries
        entry_lines = []
        while line != '\014': # form feed
            if line and not line.isspace():
                if self._cg_sep_re.match(line):
                    self.parse_cg_entry(entry_lines)
                    entry_lines = []
                else:
                    entry_lines.append(line)            
            line = self.readline()
    
    def parse(self):
        self.parse_cg()
        self.fp.close()

        profile = Profile()
        profile[TIME] = 0.0
        
        cycles = {}
        for index in self.cycles.iterkeys():
            cycles[index] = Cycle()

        for entry in self.functions.itervalues():
            # populate the function
            function = Function(entry.index, entry.name)
            function[TIME] = entry.self
            if entry.called is not None:
                function[CALLS] = entry.called
            if entry.called_self is not None:
                call = Call(entry.index)
                call[CALLS] = entry.called_self
                function[CALLS] += entry.called_self
            
            # populate the function calls
            for child in entry.children:
                call = Call(child.index)
                
                assert child.called is not None
                call[CALLS] = child.called

                if child.index not in self.functions:
                    # NOTE: functions that were never called but were discovered by gprof's 
                    # static call graph analysis dont have a call graph entry so we need
                    # to add them here
                    missing = Function(child.index, child.name)
                    function[TIME] = 0.0
                    function[CALLS] = 0
                    profile.add_function(missing)

                function.add_call(call)

            profile.add_function(function)

            if entry.cycle is not None:
                cycles[entry.cycle].add_function(function)

            profile[TIME] = profile[TIME] + function[TIME]

        for cycle in cycles.itervalues():
            profile.add_cycle(cycle)

        # Compute derived events
        profile.validate()
        profile.ratio(TIME_RATIO, TIME)
        profile.call_ratios(CALLS)
        profile.integrate(TOTAL_TIME, TIME)
        profile.ratio(TOTAL_TIME_RATIO, TOTAL_TIME)

        return profile


class OprofileParser(LineParser):
    """Parser for oprofile callgraph output.
    
    See also:
    - http://oprofile.sourceforge.net/doc/opreport.html#opreport-callgraph
    """

    _fields_re = {
        'samples': r'(?P<samples>\d+)',
        '%': r'(?P<percentage>\S+)',
        'linenr info': r'(?P<source>\(no location information\)|\S+:\d+)',
        'image name': r'(?P<image>\S+(?:\s\(tgid:[^)]*\))?)',
        'app name': r'(?P<application>\S+)',
        'symbol name': r'(?P<symbol>\(no symbols\)|.+?)',
    }

    def __init__(self, infile):
        LineParser.__init__(self, infile)
        self.entries = {}
        self.entry_re = None

    def add_entry(self, callers, function, callees):
        try:
            entry = self.entries[function.id]
        except KeyError:
            self.entries[function.id] = (callers, function, callees)
        else:
            callers_total, function_total, callees_total = entry
            self.update_subentries_dict(callers_total, callers)
            function_total.samples += function.samples
            self.update_subentries_dict(callees_total, callees)
    
    def update_subentries_dict(self, totals, partials):
        for partial in partials.itervalues():
            try:
                total = totals[partial.id]
            except KeyError:
                totals[partial.id] = partial
            else:
                total.samples += partial.samples
        
    def parse(self):
        # read lookahead
        self.readline()

        self.parse_header()
        while self.lookahead():
            self.parse_entry()

        profile = Profile()

        reverse_call_samples = {}
        
        # populate the profile
        profile[SAMPLES] = 0
        for _callers, _function, _callees in self.entries.itervalues():
            function = Function(_function.id, _function.name)
            function[SAMPLES] = _function.samples
            profile.add_function(function)
            profile[SAMPLES] += _function.samples

            if _function.application:
                function[PROCESS] = os.path.basename(_function.application)
            if _function.image:
                function[MODULE] = os.path.basename(_function.image)

            total_callee_samples = 0
            for _callee in _callees.itervalues():
                total_callee_samples += _callee.samples

            for _callee in _callees.itervalues():
                if not _callee.self:
                    call = Call(_callee.id)
                    call[SAMPLES2] = _callee.samples
                    function.add_call(call)
                
        # compute derived data
        profile.validate()
        profile.find_cycles()
        profile.ratio(TIME_RATIO, SAMPLES)
        profile.call_ratios(SAMPLES2)
        profile.integrate(TOTAL_TIME_RATIO, TIME_RATIO)

        return profile

    def parse_header(self):
        while not self.match_header():
            self.consume()
        line = self.lookahead()
        fields = re.split(r'\s\s+', line)
        entry_re = r'^\s*' + r'\s+'.join([self._fields_re[field] for field in fields]) + r'(?P<self>\s+\[self\])?$'
        self.entry_re = re.compile(entry_re)
        self.skip_separator()

    def parse_entry(self):
        callers = self.parse_subentries()
        if self.match_primary():
            function = self.parse_subentry()
            if function is not None:
                callees = self.parse_subentries()
                self.add_entry(callers, function, callees)
        self.skip_separator()

    def parse_subentries(self):
        subentries = {}
        while self.match_secondary():
            subentry = self.parse_subentry()
            subentries[subentry.id] = subentry
        return subentries

    def parse_subentry(self):
        entry = Struct()
        line = self.consume()
        mo = self.entry_re.match(line)
        if not mo:
            raise ParseError('failed to parse', line)
        fields = mo.groupdict()
        entry.samples = int(fields.get('samples', 0))
        entry.percentage = float(fields.get('percentage', 0.0))
        if 'source' in fields and fields['source'] != '(no location information)':
            source = fields['source']
            filename, lineno = source.split(':')
            entry.filename = filename
            entry.lineno = int(lineno)
        else:
            source = ''
            entry.filename = None
            entry.lineno = None
        entry.image = fields.get('image', '')
        entry.application = fields.get('application', '')
        if 'symbol' in fields and fields['symbol'] != '(no symbols)':
            entry.symbol = fields['symbol']
        else:
            entry.symbol = ''
        if entry.symbol.startswith('"') and entry.symbol.endswith('"'):
            entry.symbol = entry.symbol[1:-1]
        entry.id = ':'.join((entry.application, entry.image, source, entry.symbol))
        entry.self = fields.get('self', None) != None
        if entry.self:
            entry.id += ':self'
        if entry.symbol:
            entry.name = entry.symbol
        else:
            entry.name = entry.image
        return entry

    def skip_separator(self):
        while not self.match_separator():
            self.consume()
        self.consume()

    def match_header(self):
        line = self.lookahead()
        return line.startswith('samples')

    def match_separator(self):
        line = self.lookahead()
        return line == '-'*len(line)

    def match_primary(self):
        line = self.lookahead()
        return not line[:1].isspace()
    
    def match_secondary(self):
        line = self.lookahead()
        return line[:1].isspace()


class SysprofParser(XmlParser):

    def __init__(self, stream):
        XmlParser.__init__(self, stream)

    def parse(self):
        objects = {}
        nodes = {}

        self.element_start('profile')
        while self.token.type == XML_ELEMENT_START:
            if self.token.name_or_data == 'objects':
                assert not objects
                objects = self.parse_items('objects')
            elif self.token.name_or_data == 'nodes':
                assert not nodes
                nodes = self.parse_items('nodes')
            else:
                self.parse_value(self.token.name_or_data)
        self.element_end('profile')

        return self.build_profile(objects, nodes)

    def parse_items(self, name):
        assert name[-1] == 's'
        items = {}
        self.element_start(name)
        while self.token.type == XML_ELEMENT_START:
            id, values = self.parse_item(name[:-1])
            assert id not in items
            items[id] = values
        self.element_end(name)
        return items

    def parse_item(self, name):
        attrs = self.element_start(name)
        id = int(attrs['id'])
        values = self.parse_values()
        self.element_end(name)
        return id, values

    def parse_values(self):
        values = {}
        while self.token.type == XML_ELEMENT_START:
            name = self.token.name_or_data
            value = self.parse_value(name)
            assert name not in values
            values[name] = value
        return values

    def parse_value(self, tag):
        self.element_start(tag)
        value = self.character_data()
        self.element_end(tag)
        if value.isdigit():
            return int(value)
        if value.startswith('"') and value.endswith('"'):
            return value[1:-1]
        return value

    def build_profile(self, objects, nodes):
        profile = Profile()
        
        profile[SAMPLES] = 0
        for id, object in objects.iteritems():
            # Ignore fake objects (process names, modules, "Everything", "kernel", etc.)
            if object['self'] == 0:
                continue

            function = Function(id, object['name'])
            function[SAMPLES] = object['self']
            profile.add_function(function)
            profile[SAMPLES] += function[SAMPLES]

        for id, node in nodes.iteritems():
            # Ignore fake calls
            if node['self'] == 0:
                continue

            # Find a non-ignored parent
            parent_id = node['parent']
            while parent_id != 0:
                parent = nodes[parent_id]
                caller_id = parent['object']
                if objects[caller_id]['self'] != 0:
                    break
                parent_id = parent['parent']
            if parent_id == 0:
                continue

            callee_id = node['object']

            assert objects[caller_id]['self']
            assert objects[callee_id]['self']

            function = profile.functions[caller_id]

            samples = node['self']
            try:
                call = function.calls[callee_id]
            except KeyError:
                call = Call(callee_id)
                call[SAMPLES2] = samples
                function.add_call(call)
            else:
                call[SAMPLES2] += samples

        # Compute derived events
        profile.validate()
        profile.find_cycles()
        profile.ratio(TIME_RATIO, SAMPLES)
        profile.call_ratios(SAMPLES2)
        profile.integrate(TOTAL_TIME_RATIO, TIME_RATIO)

        return profile


class SharkParser(LineParser):
    """Parser for MacOSX Shark output.

    Author: tom@dbservice.com
    """

    def __init__(self, infile):
        LineParser.__init__(self, infile)
        self.stack = []
        self.entries = {}

    def add_entry(self, function):
        try:
            entry = self.entries[function.id]
        except KeyError:
            self.entries[function.id] = (function, { })
        else:
            function_total, callees_total = entry
            function_total.samples += function.samples
    
    def add_callee(self, function, callee):
        func, callees = self.entries[function.id]
        try:
            entry = callees[callee.id]
        except KeyError:
            callees[callee.id] = callee
        else:
            entry.samples += callee.samples
        
    def parse(self):
        self.readline()
        self.readline()
        self.readline()
        self.readline()

        match = re.compile(r'(?P<prefix>[|+ ]*)(?P<samples>\d+), (?P<symbol>[^,]+), (?P<image>.*)')

        while self.lookahead():
            line = self.consume()
            mo = match.match(line)
            if not mo:
                raise ParseError('failed to parse', line)

            fields = mo.groupdict()
            prefix = len(fields.get('prefix', 0)) / 2 - 1

            symbol = str(fields.get('symbol', 0))
            image = str(fields.get('image', 0))

            entry = Struct()
            entry.id = ':'.join([symbol, image])
            entry.samples = int(fields.get('samples', 0))

            entry.name = symbol
            entry.image = image

            # adjust the callstack
            if prefix < len(self.stack):
                del self.stack[prefix:]

            if prefix == len(self.stack):
                self.stack.append(entry)

            # if the callstack has had an entry, it's this functions caller
            if prefix > 0:
                self.add_callee(self.stack[prefix - 1], entry)
                
            self.add_entry(entry)
                
        profile = Profile()
        profile[SAMPLES] = 0
        for _function, _callees in self.entries.itervalues():
            function = Function(_function.id, _function.name)
            function[SAMPLES] = _function.samples
            profile.add_function(function)
            profile[SAMPLES] += _function.samples

            if _function.image:
                function[MODULE] = os.path.basename(_function.image)

            for _callee in _callees.itervalues():
                call = Call(_callee.id)
                call[SAMPLES] = _callee.samples
                function.add_call(call)
                
        # compute derived data
        profile.validate()
        profile.find_cycles()
        profile.ratio(TIME_RATIO, SAMPLES)
        profile.call_ratios(SAMPLES)
        profile.integrate(TOTAL_TIME_RATIO, TIME_RATIO)

        return profile


class SleepyParser(Parser):
    """Parser for GNU gprof output.

    See also:
    - http://www.codersnotes.com/sleepy/
    - http://sleepygraph.sourceforge.net/
    """

    def __init__(self, filename):
        Parser.__init__(self)

        from zipfile import ZipFile

        self.database = ZipFile(filename)

        self.symbols = {}
        self.calls = {}

        self.profile = Profile()
    
    _symbol_re = re.compile(
        r'^(?P<id>\w+)' + 
        r'\s+"(?P<module>[^"]*)"' + 
        r'\s+"(?P<procname>[^"]*)"' + 
        r'\s+"(?P<sourcefile>[^"]*)"' + 
        r'\s+(?P<sourceline>\d+)$'
    )

    def parse_symbols(self):
        lines = self.database.read('symbols.txt').splitlines()
        for line in lines:
            mo = self._symbol_re.match(line)
            if mo:
                symbol_id, module, procname, sourcefile, sourceline = mo.groups()
    
                function_id = ':'.join([module, procname])

                try:
                    function = self.profile.functions[function_id]
                except KeyError:
                    function = Function(function_id, procname)
                    function[SAMPLES] = 0
                    self.profile.add_function(function)

                self.symbols[symbol_id] = function

    def parse_callstacks(self):
        lines = self.database.read("callstacks.txt").splitlines()
        for line in lines:
            fields = line.split()
            samples = int(fields[0])
            callstack = fields[1:]

            callstack = [self.symbols[symbol_id] for symbol_id in callstack]

            callee = callstack[0]

            callee[SAMPLES] += samples
            self.profile[SAMPLES] += samples
            
            for caller in callstack[1:]:
                try:
                    call = caller.calls[callee.id]
                except KeyError:
                    call = Call(callee.id)
                    call[SAMPLES2] = samples
                    caller.add_call(call)
                else:
                    call[SAMPLES2] += samples

                callee = caller

    def parse(self):
        profile = self.profile
        profile[SAMPLES] = 0

        self.parse_symbols()
        self.parse_callstacks()

        # Compute derived events
        profile.validate()
        profile.find_cycles()
        profile.ratio(TIME_RATIO, SAMPLES)
        profile.call_ratios(SAMPLES2)
        profile.integrate(TOTAL_TIME_RATIO, TIME_RATIO)

        return profile


class AQtimeTable:

    def __init__(self, name, fields):
        self.name = name

        self.fields = fields
        self.field_column = {}
        for column in range(len(fields)):
            self.field_column[fields[column]] = column
        self.rows = []

    def __len__(self):
        return len(self.rows)

    def __iter__(self):
        for values, children in self.rows:
            fields = {}
            for name, value in zip(self.fields, values):
                fields[name] = value
            children = dict([(child.name, child) for child in children])
            yield fields, children
        raise StopIteration

    def add_row(self, values, children=()):
        self.rows.append((values, children))


class AQtimeParser(XmlParser):

    def __init__(self, stream):
        XmlParser.__init__(self, stream)
        self.tables = {}

    def parse(self):
        self.element_start('AQtime_Results')
        self.parse_headers()
        results = self.parse_results()
        self.element_end('AQtime_Results')
        return self.build_profile(results) 

    def parse_headers(self):
        self.element_start('HEADERS')
        while self.token.type == XML_ELEMENT_START:
            self.parse_table_header()
        self.element_end('HEADERS')

    def parse_table_header(self):
        attrs = self.element_start('TABLE_HEADER')
        name = attrs['NAME']
        id = int(attrs['ID'])
        field_types = []
        field_names = []
        while self.token.type == XML_ELEMENT_START:
            field_type, field_name = self.parse_table_field()
            field_types.append(field_type)
            field_names.append(field_name)
        self.element_end('TABLE_HEADER')
        self.tables[id] = name, field_types, field_names

    def parse_table_field(self):
        attrs = self.element_start('TABLE_FIELD')
        type = attrs['TYPE']
        name = self.character_data()
        self.element_end('TABLE_FIELD')
        return type, name

    def parse_results(self):
        self.element_start('RESULTS')
        table = self.parse_data()
        self.element_end('RESULTS')
        return table

    def parse_data(self):
        rows = []
        attrs = self.element_start('DATA')
        table_id = int(attrs['TABLE_ID'])
        table_name, field_types, field_names = self.tables[table_id]
        table = AQtimeTable(table_name, field_names)
        while self.token.type == XML_ELEMENT_START:
            row, children = self.parse_row(field_types)
            table.add_row(row, children)
        self.element_end('DATA')
        return table

    def parse_row(self, field_types):
        row = [None]*len(field_types)
        children = []
        self.element_start('ROW')
        while self.token.type == XML_ELEMENT_START:
            if self.token.name_or_data == 'FIELD':
                field_id, field_value = self.parse_field(field_types)
                row[field_id] = field_value
            elif self.token.name_or_data == 'CHILDREN':
                children = self.parse_children()
            else:
                raise XmlTokenMismatch("<FIELD ...> or <CHILDREN ...>", self.token)
        self.element_end('ROW')
        return row, children

    def parse_field(self, field_types):
        attrs = self.element_start('FIELD')
        id = int(attrs['ID'])
        type = field_types[id]
        value = self.character_data()
        if type == 'Integer':
            value = int(value)
        elif type == 'Float':
            value = float(value)
        elif type == 'Address':
            value = int(value)
        elif type == 'String':
            pass
        else:
            assert False
        self.element_end('FIELD')
        return id, value

    def parse_children(self):
        children = []
        self.element_start('CHILDREN')
        while self.token.type == XML_ELEMENT_START:
            table = self.parse_data()
            assert table.name not in children
            children.append(table)
        self.element_end('CHILDREN')
        return children

    def build_profile(self, results):
        assert results.name == 'Routines'
        profile = Profile()
        profile[TIME] = 0.0
        for fields, tables in results:
            function = self.build_function(fields)
            children = tables['Children']
            for fields, _ in children:
                call = self.build_call(fields)
                function.add_call(call)
            profile.add_function(function)
            profile[TIME] = profile[TIME] + function[TIME]
        profile[TOTAL_TIME] = profile[TIME]
        profile.ratio(TOTAL_TIME_RATIO, TOTAL_TIME)
        return profile
    
    def build_function(self, fields):
        function = Function(self.build_id(fields), self.build_name(fields))
        function[TIME] = fields['Time']
        function[TOTAL_TIME] = fields['Time with Children']
        #function[TIME_RATIO] = fields['% Time']/100.0
        #function[TOTAL_TIME_RATIO] = fields['% with Children']/100.0
        return function

    def build_call(self, fields):
        call = Call(self.build_id(fields))
        call[TIME] = fields['Time']
        call[TOTAL_TIME] = fields['Time with Children']
        #call[TIME_RATIO] = fields['% Time']/100.0
        #call[TOTAL_TIME_RATIO] = fields['% with Children']/100.0
        return call

    def build_id(self, fields):
        return ':'.join([fields['Module Name'], fields['Unit Name'], fields['Routine Name']])

    def build_name(self, fields):
        # TODO: use more fields
        return fields['Routine Name']


class PstatsParser:
    """Parser python profiling statistics saved with te pstats module."""

    def __init__(self, *filename):
        import pstats
        try:
            self.stats = pstats.Stats(*filename)
        except ValueError:
            import hotshot.stats
            self.stats = hotshot.stats.load(filename[0])
        self.profile = Profile()
        self.function_ids = {}

    def get_function_name(self, (filename, line, name)):
        module = os.path.splitext(filename)[0]
        module = os.path.basename(module)
        return "%s:%d:%s" % (module, line, name)

    def get_function(self, key):
        try:
            id = self.function_ids[key]
        except KeyError:
            id = len(self.function_ids)
            name = self.get_function_name(key)
            function = Function(id, name)
            self.profile.functions[id] = function
            self.function_ids[key] = id
        else:
            function = self.profile.functions[id]
        return function

    def parse(self):
        self.profile[TIME] = 0.0
        self.profile[TOTAL_TIME] = self.stats.total_tt
        for fn, (cc, nc, tt, ct, callers) in self.stats.stats.iteritems():
            callee = self.get_function(fn)
            callee[CALLS] = nc
            callee[TOTAL_TIME] = ct
            callee[TIME] = tt
            self.profile[TIME] += tt
            self.profile[TOTAL_TIME] = max(self.profile[TOTAL_TIME], ct)
            for fn, value in callers.iteritems():
                caller = self.get_function(fn)
                call = Call(callee.id)
                if isinstance(value, tuple):
                    for i in xrange(0, len(value), 4):
                        nc, cc, tt, ct = value[i:i+4]
                        if CALLS in call:
                            call[CALLS] += cc
                        else:
                            call[CALLS] = cc

                        if TOTAL_TIME in call:
                            call[TOTAL_TIME] += ct
                        else:
                            call[TOTAL_TIME] = ct

                else:
                    call[CALLS] = value
                    call[TOTAL_TIME] = ratio(value, nc)*ct

                caller.add_call(call)
        #self.stats.print_stats()
        #self.stats.print_callees()

        # Compute derived events
        self.profile.validate()
        self.profile.ratio(TIME_RATIO, TIME)
        self.profile.ratio(TOTAL_TIME_RATIO, TOTAL_TIME)

        return self.profile


class Theme:

    def __init__(self, 
            bgcolor = (0.0, 0.0, 1.0),
            mincolor = (0.0, 0.0, 0.0),
            maxcolor = (0.0, 0.0, 1.0),
            fontname = "Arial",
            minfontsize = 10.0,
            maxfontsize = 10.0,
            minpenwidth = 0.5,
            maxpenwidth = 4.0,
            gamma = 2.2):
        self.bgcolor = bgcolor
        self.mincolor = mincolor
        self.maxcolor = maxcolor
        self.fontname = fontname
        self.minfontsize = minfontsize
        self.maxfontsize = maxfontsize
        self.minpenwidth = minpenwidth
        self.maxpenwidth = maxpenwidth
        self.gamma = gamma

    def graph_bgcolor(self):
        return self.hsl_to_rgb(*self.bgcolor)

    def graph_fontname(self):
        return self.fontname

    def graph_fontsize(self):
        return self.minfontsize

    def node_bgcolor(self, weight):
        return self.color(weight)

    def node_fgcolor(self, weight):
        return self.graph_bgcolor()

    def node_fontsize(self, weight):
        return self.fontsize(weight)

    def edge_color(self, weight):
        return self.color(weight)

    def edge_fontsize(self, weight):
        return self.fontsize(weight)

    def edge_penwidth(self, weight):
        return max(weight*self.maxpenwidth, self.minpenwidth)

    def edge_arrowsize(self, weight):
        return 0.5 * math.sqrt(self.edge_penwidth(weight))

    def fontsize(self, weight):
        return max(weight**2 * self.maxfontsize, self.minfontsize)

    def color(self, weight):
        weight = min(max(weight, 0.0), 1.0)
    
        hmin, smin, lmin = self.mincolor
        hmax, smax, lmax = self.maxcolor

        h = hmin + weight*(hmax - hmin)
        s = smin + weight*(smax - smin)
        l = lmin + weight*(lmax - lmin)

        return self.hsl_to_rgb(h, s, l)

    def hsl_to_rgb(self, h, s, l):
        """Convert a color from HSL color-model to RGB.

        See also:
        - http://www.w3.org/TR/css3-color/#hsl-color
        """

        h = h % 1.0
        s = min(max(s, 0.0), 1.0)
        l = min(max(l, 0.0), 1.0)

        if l <= 0.5:
            m2 = l*(s + 1.0)
        else:
            m2 = l + s - l*s
        m1 = l*2.0 - m2
        r = self._hue_to_rgb(m1, m2, h + 1.0/3.0)
        g = self._hue_to_rgb(m1, m2, h)
        b = self._hue_to_rgb(m1, m2, h - 1.0/3.0)

        # Apply gamma correction
        r **= self.gamma
        g **= self.gamma
        b **= self.gamma

        return (r, g, b)

    def _hue_to_rgb(self, m1, m2, h):
        if h < 0.0:
            h += 1.0
        elif h > 1.0:
            h -= 1.0
        if h*6 < 1.0:
            return m1 + (m2 - m1)*h*6.0
        elif h*2 < 1.0:
            return m2
        elif h*3 < 2.0:
            return m1 + (m2 - m1)*(2.0/3.0 - h)*6.0
        else:
            return m1


TEMPERATURE_COLORMAP = Theme(
    mincolor = (2.0/3.0, 0.80, 0.25), # dark blue
    maxcolor = (0.0, 1.0, 0.5), # satured red
    gamma = 1.0
)

PINK_COLORMAP = Theme(
    mincolor = (0.0, 1.0, 0.90), # pink
    maxcolor = (0.0, 1.0, 0.5), # satured red
)

GRAY_COLORMAP = Theme(
    mincolor = (0.0, 0.0, 0.85), # light gray
    maxcolor = (0.0, 0.0, 0.0), # black
)

BW_COLORMAP = Theme(
    minfontsize = 8.0,
    maxfontsize = 24.0,
    mincolor = (0.0, 0.0, 0.0), # black
    maxcolor = (0.0, 0.0, 0.0), # black
    minpenwidth = 0.1,
    maxpenwidth = 8.0,
)


class DotWriter:
    """Writer for the DOT language.

    See also:
    - "The DOT Language" specification
      http://www.graphviz.org/doc/info/lang.html
    """

    def __init__(self, fp):
        self.fp = fp

    def graph(self, profile, theme):
        self.begin_graph()

        fontname = theme.graph_fontname()

        self.attr('graph', fontname=fontname, ranksep=0.25, nodesep=0.125)
        self.attr('node', fontname=fontname, shape="box", style="filled", fontcolor="white", width=0, height=0)
        self.attr('edge', fontname=fontname)

        for function in profile.functions.itervalues():
            labels = []
            for event in PROCESS, MODULE:
                if event in function.events:
                    label = event.format(function[event])
                    labels.append(label)
            labels.append(function.name)
            for event in TOTAL_TIME_RATIO, TIME_RATIO, CALLS:
                if event in function.events:
                    label = event.format(function[event])
                    labels.append(label)

            try:
                weight = function[PRUNE_RATIO]
            except UndefinedEvent:
                weight = 0.0

            label = '\n'.join(labels)
            self.node(function.id, 
                label = label, 
                color = self.color(theme.node_bgcolor(weight)), 
                fontcolor = self.color(theme.node_fgcolor(weight)), 
                fontsize = "%.2f" % theme.node_fontsize(weight),
            )

            for call in function.calls.itervalues():
                callee = profile.functions[call.callee_id]

                labels = []
                for event in TOTAL_TIME_RATIO, CALLS:
                    if event in call.events:
                        label = event.format(call[event])
                        labels.append(label)

                try:
                    weight = call[PRUNE_RATIO]
                except UndefinedEvent:
                    try:
                        weight = callee[PRUNE_RATIO]
                    except UndefinedEvent:
                        weight = 0.0

                label = '\n'.join(labels)

                self.edge(function.id, call.callee_id, 
                    label = label, 
                    color = self.color(theme.edge_color(weight)), 
                    fontcolor = self.color(theme.edge_color(weight)),
                    fontsize = "%.2f" % theme.edge_fontsize(weight), 
                    penwidth = "%.2f" % theme.edge_penwidth(weight), 
                    labeldistance = "%.2f" % theme.edge_penwidth(weight), 
                    arrowsize = "%.2f" % theme.edge_arrowsize(weight),
                )

        self.end_graph()

    def begin_graph(self):
        self.write('digraph {\n')

    def end_graph(self):
        self.write('}\n')

    def attr(self, what, **attrs):
        self.write("\t")
        self.write(what)
        self.attr_list(attrs)
        self.write(";\n")

    def node(self, node, **attrs):
        self.write("\t")
        self.id(node)
        self.attr_list(attrs)
        self.write(";\n")

    def edge(self, src, dst, **attrs):
        self.write("\t")
        self.id(src)
        self.write(" -> ")
        self.id(dst)
        self.attr_list(attrs)
        self.write(";\n")

    def attr_list(self, attrs):
        if not attrs:
            return
        self.write(' [')
        first = True
        for name, value in attrs.iteritems():
            if first:
                first = False
            else:
                self.write(", ")
            self.id(name)
            self.write('=')
            self.id(value)
        self.write(']')

    def id(self, id):
        if isinstance(id, (int, float)):
            s = str(id)
        elif isinstance(id, basestring):
            if id.isalnum():
                s = id
            else:
                s = self.escape(id)
        else:
            raise TypeError
        self.write(s)

    def color(self, (r, g, b)):

        def float2int(f):
            if f <= 0.0:
                return 0
            if f >= 1.0:
                return 255
            return int(255.0*f + 0.5)

        return "#" + "".join(["%02x" % float2int(c) for c in (r, g, b)])

    def escape(self, s):
        s = s.encode('utf-8')
        s = s.replace('\\', r'\\')
        s = s.replace('\n', r'\n')
        s = s.replace('\t', r'\t')
        s = s.replace('"', r'\"')
        return '"' + s + '"'

    def write(self, s):
        self.fp.write(s)


class Main:
    """Main program."""

    themes = {
            "color": TEMPERATURE_COLORMAP,
            "pink": PINK_COLORMAP,
            "gray": GRAY_COLORMAP,
            "bw": BW_COLORMAP,
    }

    def main(self):
        """Main program."""

        parser = optparse.OptionParser(
            usage="\n\t%prog [options] [file] ...",
            version="%%prog %s" % __version__)
        parser.add_option(
            '-o', '--output', metavar='FILE',
            type="string", dest="output",
            help="output filename [stdout]")
        parser.add_option(
            '-n', '--node-thres', metavar='PERCENTAGE',
            type="float", dest="node_thres", default=0.5,
            help="eliminate nodes below this threshold [default: %default]")
        parser.add_option(
            '-e', '--edge-thres', metavar='PERCENTAGE',
            type="float", dest="edge_thres", default=0.1,
            help="eliminate edges below this threshold [default: %default]")
        parser.add_option(
            '-f', '--format',
            type="choice", choices=('prof', 'oprofile', 'sysprof', 'pstats', 'shark', 'sleepy', 'aqtime'),
            dest="format", default="prof",
            help="profile format: prof, oprofile, sysprof, shark, sleepy, aqtime, or pstats [default: %default]")
        parser.add_option(
            '-c', '--colormap',
            type="choice", choices=('color', 'pink', 'gray', 'bw'),
            dest="theme", default="color",
            help="color map: color, pink, gray, or bw [default: %default]")
        parser.add_option(
            '-s', '--strip',
            action="store_true",
            dest="strip", default=False,
            help="strip function parameters, template parameters, and const modifiers from demangled C++ function names")
        parser.add_option(
            '-w', '--wrap',
            action="store_true",
            dest="wrap", default=False,
            help="wrap function names")
        (self.options, self.args) = parser.parse_args(sys.argv[1:])

        if len(self.args) > 1 and self.options.format != 'pstats':
            parser.error('incorrect number of arguments')

        try:
            self.theme = self.themes[self.options.theme]
        except KeyError:
            parser.error('invalid colormap \'%s\'' % self.options.theme)

        if self.options.format == 'prof':
            if not self.args:
                fp = sys.stdin
            else:
                fp = open(self.args[0], 'rt')
            parser = GprofParser(fp)
        elif self.options.format == 'oprofile':
            if not self.args:
                fp = sys.stdin
            else:
                fp = open(self.args[0], 'rt')
            parser = OprofileParser(fp)
        elif self.options.format == 'sysprof':
            if not self.args:
                fp = sys.stdin
            else:
                fp = open(self.args[0], 'rt')
            parser = SysprofParser(fp)
        elif self.options.format == 'pstats':
            if not self.args:
                parser.error('at least a file must be specified for pstats input')
            parser = PstatsParser(*self.args)
        elif self.options.format == 'shark':
            if not self.args:
                fp = sys.stdin
            else:
                fp = open(self.args[0], 'rt')
            parser = SharkParser(fp)
        elif self.options.format == 'sleepy':
            if len(self.args) != 1:
                parser.error('exactly one file must be specified for sleepy input')
            parser = SleepyParser(self.args[0])
        elif self.options.format == 'aqtime':
            if not self.args:
                fp = sys.stdin
            else:
                fp = open(self.args[0], 'rt')
            parser = AQtimeParser(fp)
        else:
            parser.error('invalid format \'%s\'' % self.options.format)

        self.profile = parser.parse()
        
        if self.options.output is None:
            self.output = sys.stdout
        else:
            self.output = open(self.options.output, 'wt')

        self.write_graph()

    _parenthesis_re = re.compile(r'\([^()]*\)')
    _angles_re = re.compile(r'<[^<>]*>')
    _const_re = re.compile(r'\s+const$')

    def strip_function_name(self, name):
        """Remove extraneous information from C++ demangled function names."""

        # Strip function parameters from name by recursively removing paired parenthesis
        while True:
            name, n = self._parenthesis_re.subn('', name)
            if not n:
                break

        # Strip const qualifier
        name = self._const_re.sub('', name)

        # Strip template parameters from name by recursively removing paired angles
        while True:
            name, n = self._angles_re.subn('', name)
            if not n:
                break

        return name

    def wrap_function_name(self, name):
        """Split the function name on multiple lines."""

        if len(name) > 32:
            ratio = 2.0/3.0
            height = max(int(len(name)/(1.0 - ratio) + 0.5), 1)
            width = max(len(name)/height, 32)
            # TODO: break lines in symbols
            name = textwrap.fill(name, width, break_long_words=False)

        # Take away spaces
        name = name.replace(", ", ",")
        name = name.replace("> >", ">>")
        name = name.replace("> >", ">>") # catch consecutive

        return name

    def compress_function_name(self, name):
        """Compress function name according to the user preferences."""

        if self.options.strip:
            name = self.strip_function_name(name)

        if self.options.wrap:
            name = self.wrap_function_name(name)

        # TODO: merge functions with same resulting name

        return name

    def write_graph(self):
        dot = DotWriter(self.output)
        profile = self.profile
        profile.prune(self.options.node_thres/100.0, self.options.edge_thres/100.0)

        for function in profile.functions.itervalues():
            function.name = self.compress_function_name(function.name)

        dot.graph(profile, self.theme)


if __name__ == '__main__':
    Main().main()

########NEW FILE########
__FILENAME__ = lsprofcalltree
# lsprofcalltree.py: lsprof output which is readable by kcachegrind
# David Allouche
# Jp Calderone & Itamar Shtull-Trauring
# Johan Dahlin

import optparse
import os
import sys

try:
    import cProfile
except ImportError:
    raise SystemExit("This script requires cProfile from Python 2.5")

def label(code):
    if isinstance(code, str):
        return ('~', 0, code)    # built-in functions ('~' sorts at the end)
    else:
        return '%s%s %s:%d' % (code.co_name,
                             str(code.co_varnames).translate(None,"\'"),
                             code.co_filename.rsplit("/",1)[-1],
                             code.co_firstlineno)

class KCacheGrind(object):
    def __init__(self, profiler):
        self.data = profiler.getstats()
        self.out_file = None

    def output(self, out_file):
        self.out_file = out_file
        print >> out_file, 'events: Ticks'
        self._print_summary()
        for entry in self.data:
            self._entry(entry)

    def _print_summary(self):
        max_cost = 0
        for entry in self.data:
            totaltime = int(entry.totaltime * 1000)
            max_cost = max(max_cost, totaltime)
        print >> self.out_file, 'summary: %d' % (max_cost,)

    def _entry(self, entry):
        out_file = self.out_file

	#print "Entry:", entry
	##print dir(entry)
	#print "Code:", entry.code
	##print dir(entry.code)
	#print "InlineTime:", entry.inlinetime
	#print "callcount:", entry.callcount
	#print "calls:", entry.calls
	#print "n_fields:", entry.n_fields
	#print "n_sequence_fields:", entry.n_sequence_fields
	#print "n_unnamed_fields:", entry.n_unnamed_fields
	#print "reccallcount:", entry.reccallcount
	#print "totaltime:", entry.totaltime
	#if not isinstance(entry.code, str):
		#print "FileName:", entry.code.co_filename
		#print "FirstLine:", entry.code.co_firstlineno
		#print "argcount:", entry.code.co_argcount
		#print "cellvars:", entry.code.co_cellvars
		#print "code:", entry.code.co_code
		#print "consts:", entry.code.co_consts
		#print "flags:", entry.code.co_flags
		#print "freevars:", entry.code.co_freevars
		#print "lnotab:", entry.code.co_lnotab
		#print "name:", entry.code.co_name
		#print "names:", entry.code.co_names
		#print "nlocals:", entry.code.co_nlocals
		#print "stacksize:", entry.code.co_stacksize
		#print "varnames:", entry.code.co_varnames

        code = entry.code
        #print >> out_file, 'ob=%s' % (code.co_filename,)
        if isinstance(code, str):
            print >> out_file, 'fi=~'
        else:
            print >> out_file, 'fi=%s' % (code.co_filename,)
        print >> out_file, 'fn=%s' % (label(code),)

        inlinetime = int(entry.inlinetime * 1000)
        if isinstance(code, str):
            print >> out_file, '0 ', inlinetime
        else:
            print >> out_file, '%d %d' % (code.co_firstlineno, inlinetime)

        # recursive calls are counted in entry.calls
        if entry.calls:
            calls = entry.calls
        else:
            calls = []

        if isinstance(code, str):
            lineno = 0
        else:
            lineno = code.co_firstlineno

        for subentry in calls:
            self._subentry(lineno, subentry)
        print >> out_file

    def _subentry(self, lineno, subentry):
        out_file = self.out_file
        code = subentry.code
        #print >> out_file, 'cob=%s' % (code.co_filename,)
        if isinstance(code, str):
            print >> out_file, 'cfi=~'
            print >> out_file, 'cfn=%s' % (label(code),)
            print >> out_file, 'calls=%d 0' % (subentry.callcount,)
        else:
            print >> out_file, 'cfi=%s' % (code.co_filename,)
            print >> out_file, 'cfn=%s' % (label(code),)
            print >> out_file, 'calls=%d %d' % (
                subentry.callcount, code.co_firstlineno)

        totaltime = int(subentry.totaltime * 1000)
        print >> out_file, '%d %d' % (lineno, totaltime)

def main(args):
    usage = "%s [-o output_file_path] scriptfile [arg] ..."
    parser = optparse.OptionParser(usage=usage % sys.argv[0])
    parser.allow_interspersed_args = False
    parser.add_option('-o', '--outfile', dest="outfile",
                      help="Save stats to <outfile>", default=None)

    if not sys.argv[1:]:
        parser.print_usage()
        sys.exit(2)

    options, args = parser.parse_args()

    if not options.outfile:
        options.outfile = '%s.log' % os.path.basename(args[0])

    sys.argv[:] = args

    prof = cProfile.Profile()
    try:
        try:
            prof = prof.run('execfile(%r)' % (sys.argv[0],))
        except SystemExit:
            pass
    finally:
        kg = KCacheGrind(prof)
        kg.output(file(options.outfile, 'w'))

if __name__ == '__main__':
    sys.exit(main(sys.argv))

########NEW FILE########
