
Fabric deployment files
=======================

This directory contains sample files that can be used for deploying Pootle
servers in combination with the *fabfile* (``fabfile.py``) present at the
top-level directory of the Pootle repository

The *fabfile* will setup a Pootle server using a Python virtualenv,
running in an Apache server with *mod_wsgi*.

Please read the following for more information:
http://docs.translatehouse.org/projects/pootle/en/latest/server/fabric_deployment.html

The deployment is separated in two different environments:

- Staging environment (*/deploy/staging/* directory)
- Production environment (*/deploy/production/* directory)

This way server administrators can separate their testing and real-world
Pootle servers.


Configuration
-------------

For deploying a Pootle server in any of the desired environments, it is
necessary to put some configuration files in place.

*/deploy/environment/fabric.py*
  Module with settings that will be used in Fabric.

*/deploy/environment/settings.conf*
  Pootle-specific settings for the server (it will override the defaults).

*/deploy/environment/virtualhost.conf*
  Apache VirtualHost configuration file.

All the settings defined in the ``fabric.py`` module will populate the Fabric
``env`` dictionary, making the configuration keys available in the
*settings.conf* and *virtualhost.conf* files. You can use basic Python string
formatting to access the configuration values.

Sample configuration files are provided for reference in this *deploy*
directory. Adapt them to your needs and put them in the right location
(*production* and *staging* subdirectories) before running any Fabric commands.


Other scripts
-------------

Once you have your Fabric configuration set up and have created production and
staging servers, you may be interested in automatically copying data from
production to staging, for testing with live data.  The *update_staging* shell
script is an example of how you can do this (you will probably want to comment
out or delete many parts of the script that aren't relevant to your
deployment).

====================
Django user profiles
====================

This is a fairly simple user-profile management application for
Django_, designed to make the management of site-specific user
profiles as painless as possible. It requires a functional
installation of Django 1.0 or newer and provides a useful complement
to `django-registration`_, but has no other dependencies.

For installation instructions, see the file "INSTALL.txt" in this
directory; for instructions on how to use this application, and on
what it provides, see the file "overview.txt" in the "docs/"
directory.


.. _Django: http://www.djangoproject.com/
.. _django-registration: http://www.bitbucket.org/ubernostrum/django-registration/wiki/

This directory (dbs) contains the file:

* pootle.db - The default SQLite database containing information about users,
              languages, projects, etc. used by the Pootle server. If you use
              a different database from SQLite, this won't be used.

The Khmer Glossaries are from:
http://sourceforge.net/projects/khmer/files/English-Khmer%20Glossary/English-Khmer%20Glossary%20of%20Computer%20Terms%20Version%203.2/

These are created by the KhmerOS project

There is no explicit license in the document but since they are hosted on
Sourceforge, which requires a FOSS license, we assume we may redistribute
them.

We have not included the:
* Mathematics
* Accounting
* Statistics, and
* Language
dictionaries due to size issues.

To prepare those do the following in OpenOffice.org
1) Delete the first 3 rows
2) Delete column B and D
3) Save as .csv
4) Run csv2po over the file

This directory should contain the checkouts/clones (or symlinks to them) that
correspond to the files in the po directory.

This directory should never contain uncommitted changes. Pootle will bring in
changes from the upstream VCS and rely on it succeeding without conflicts.

More information:
http://docs.translatehouse.org/projects/pootle/en/latest/features/version_control.html


/*****************************************************************************/

  This README is an attempt to keep the house clean under the 'js' directory.

/*****************************************************************************/

Directory contents
-------------------
+ js/

  - admin.js :
    Code for tasks performed in the administration area.

    Also sorts select elements (both normal and multiple) where language names are
    involved. This is done in JavaScript because currently it's not possible
    to sort them within Django.
    To sort a new select element, add the end of the element id to the 'ids'
    array.

  - captcha.js :
    Code for interacting with the site-wide captcha.

  - common.js :
    Common code that is included in every page.

  - contact.js :
    Contact form code.

  - editor.js :
    Code that sets up the editor and handles all the actions involved there.
    This includes unit navigation, submission, suggestions' handling, copying
    functions, fuzzy/unfuzzy, and several other helper stuff.

  - stats.js :
    Statistics/overview browser page code.

  - search.js :
    Search functionality, shared across pages.

  - utils.js :
    Common utilities.

  - zoom.js :
    Functions that control the page zoom.

  + lookup/

    - wikipedia.js :
      Wikipedia lookup backend.

  + mt/

    - apertium.js :
      Script to load translation suggestions using the Apertium service.

    - google-translate.js :
      Script to load translation suggestions using the Google Translate service.

  + vendor/

    - backbone.js :
      Library for providing structure to web applications.

      Version 1.0.0

      http://backbonejs.org

    - backbone-relational.js :
      Relationships for Backbone models.

      Version 0.8.5

      http://backbonerelational.org

    - diff_match_patch.js :
      Google's Diff, Match, and Patch libraries for plain text.
      It's used for suggestion's diff highlighting.

      Version 20120106.

      https://code.google.com/p/google-diff-match-patch/

    - iso8601.js :
      Date.parse with progressive enhancement for ISO 8601.

      https://github.com/csnover/js-iso8601

    - shortcut.js :
      Small library to ease adding keyboard shortcuts.

      http://www.openjs.com/scripts/events/keyboard_shortcuts/

    - sorttable.js :
      Sorts tables according to its values. Used in the homepage as well as on the
      languages and projects listings. It has some customisations to support
      zebra stripes once the sort is done (using jQuery). The icons used on the
      table headings are custom code too. We also customized it to handle our tag
      rows.

      http://www.kryogenix.org/code/browser/sorttable/

    - spin.js :
      A spinning activity indicator.

      Version 1.3.2

      http://fgnass.github.io/spin.js/

    - underscore.js :
      Utility library providing functional programming support.

      Version 1.4.4

      http://underscorejs.org/

    + bootstrap/

      - bootstrap-alert.js :
        Dismiss functionality for all alert messages.

        Version 2.1.1

        https://github.com/twitter/bootstrap/blob/master/js/bootstrap-alert.js

      - bootstrap-transition.js :
        Transition support for bootstrap scripts.

        Version 2.1.1

        https://github.com/twitter/bootstrap/blob/master/js/bootstrap-transition.js

    + jquery/

      - jquery.js :
        The jQuery library, version 2.0.3.

        https://github.com/jquery/jquery

      - jquery.bidi.js :
        jQuery plugin used to automatically set line direction of news
        item based on their content.

        http://plugins.jquery.com/project/bidi

      - jquery.caret.js :
        jQuery plugin to write text on top of the selected text or just after
        the caret position.

        Using patched version to remove `$.browser` calls.

        http://www.jquery-plugin.buss.hk/my-plugins/jquery-caret-plugin

      - jquery.easing.js :
        jQuery plugin that provides dfferent easing (animation) formulas.

        http://gsgd.co.uk/sandbox/jquery/easing/

      - jquery.highlighRegex.js :
        Plugin to highlight text on selected elements using regular expressions.

        https://github.com/jbr/jQuery.highlightRegex

      - jquery.history.js :
        Plugin to handle AJAX history using hashes.

        Using patched version to remove `$.browser` calls.

        http://github.com/tkyk/jquery-history-plugin/

      - jquery.jsonp.js :
        Alternative solution to jQuery's JSONP support.

        jQuery's JSONP support has some limitations (the abort method doesn't
        really abort), and this plugin tries to address those issues.

        These features may be implemented in jQuery core at some stage.

        Using version 2.4.0.

        https://github.com/jaubourg/jquery-jsonp

      - jquery.magnific-popup.js :
        Lightbox overlay popups to display all sorts of content: images,
        HTML, AJAX data, ...

        Using v0.9.8.

        http://dimsemenov.com/plugins/magnific-popup/

      - jquery.select2.js :
        jQuery-based replacement for select boxes.

        Using version 3.4.5.

        https://github.com/ivaynberg/select2/

      - jquery.serializeObject.js :
        A method for serializing forms directly into objects.

        Whereas jQueryâ€™s built-in .serializeArray() method serializes a form
        into an array, .serializeObject() serializes a form into an
        (arguably more useful) object.

        http://benalman.com/projects/jquery-misc-plugins/#serializeobject

      - jquery.textarea-expander.js :
        jQuery plugin used in the translate page textareas.

        Using patched version to remove `$.browser` calls.

        http://blogs.sitepointstatic.com/examples/tech/textarea-expander/jquery.textarea-expander.js

      - jquery.textcomplete.js
        Autocomplete for Textarea.

        Using version 0.1.3.

        Introduces autocompleting power to textareas, like a GitHub comment
        form has.

        https://github.com/yuku-t/jquery-textcomplete

      - jquery.tipsy.js :
        Facebook-style tooltips for jQuery.

        Using revision 718b348872 from branch bugfix/remnant-tips @ julen/tipsy fork.

        https://github.com/julen/tipsy

      - jquery.utils.js :
        Custom utilities that extend jQuery's capabilities.

Here you can provide custom templates to be used by Pootle. For any styling
changes, rather add custom style sheets and images in static/local/.

You must completely duplicate a template here, and the template shipped with
Pootle will be completely ignored.

More information on Django templates:
https://docs.djangoproject.com/en/dev/ref/templates/

Pootle
======
.. image:: https://api.travis-ci.org/translate/pootle.png
    :target: https://travis-ci.org/translate/pootle

`Pootle <http://pootle.translatehouse.org/>`_ is an online translation and
localization tool.  It works to lower the barrier of entry, providing tools to
enable teams to work towards higher quality while welcoming newcomers.


Pootle is a Server
------------------

Pootle is written in Python using the Django framework and therefore can be
installed on any web server that supports serving WSGI applications.

A number of translation projects for a number of languages can be hosted on
Pootle.  Teams can manage their files, permissions, projects, and translate
on-line.  Files can be downloaded for offline translation.

Installation can be done via pip::

  pip install Pootle

But don't forget to read the `installation guide
<http://docs.translatehouse.org/projects/pootle/en/latest/server/installation.html>`_
for the important details.


Resources
---------

- `Pootle Website <http://pootle.translatehouse.org/>`_
- `Documentation <http://docs.translatehouse.org/projects/pootle/>`_
- `Translations <http://pootle.locamotion.org/projects/pootle/>`_
- `Bug Tracker <http://bugs.locamotion.org/>`_
- `Mailing List
  <https://lists.sourceforge.net/lists/listinfo/translate-pootle>`_
- IRC: `#pootle on irc.freenode.org <irc://irc.freenode.net/#pootle>`_

Copying
-------

Pootle is released under the General Public License, version 2 or later. See
the file LICENSE for details.

