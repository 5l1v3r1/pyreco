This directory contains various simple programs intended to exercise various
features of Twisted Conch as a way to learn about and track their
performance characteristics.  As there is currently no record of past
benchmark results, the tracking aspect of this is currently somewhat
fantastic.  However, the intent is for this to change at some future point.

All (one) of the programs in this directory are currently intended to be
invoked directly and to report some timing information on standard out.

The following benchmarks are currently available:

buffering_mixin.py:

    This deals with twisted.conch.mixin.BufferingMixin which provides
    Nagle-like write coalescing for Protocol classes.

Requires PyObjC 1.3.1 (svn r1589 or later)

To run the demo:

python setup.py py2app
open dist/Twistzilla.app

The examples in this directory import a private module from the
twisted.internet package.  The _threadedselect module provides an object
which is similar to a Twisted reactor in many ways, but which is not
actually intended to be used in the same way as a Twisted reactor (it has a
method named interleave which is intended to be the main entrypoint).  This
functionality should be considered highly experimental and the API subject
to change at any time.

Possibly the best way to make use of this functionality is to use it to
implement an object which actually presents the Twisted reactor interface
(specifically, an object with a run method).  That object can then be used
by application-code in the usual way.

Another course of action is to avoid _threadedselect entirely until the
issues surrounding it have been resolved.

The Twisted quote files are intended to convey a little of the culture of
Twisted's IRC channel, where many of the development discussions occur. Over
the years this culture has changed, and the quotes are therefore split up by
release.

Unfortunately, some of the older files (from releases before 2007) might be
upsetting to readers due to the sometimes sexist and homophobic quotes. While
we presently strive for a welcoming culture that is open to everyone, in the
past that was not always the case, for which we apologize.

If you have any questions or concerns, please contact itamar@itamarst.org.

--Itamar Turner-Trauring, Core Twisted Developer
--Jean-Paul Calderone, Core Twisted Developer
--Glyph Lefkowitz, Project Founder and Core Twisted Developer

Twisted 14.0.0

Quote of the Release:


  <exarkun> no food is sustainable.  once you eat it it is gone.


For information on what's new in Twisted 14.0.0, see the NEWS file that comes
with the distribution.

What is this?
=============

  Twisted is an event-based framework for internet applications.  It includes
  modules for many different purposes, including the following:

  - twisted.application
    A "Service" system that allows you to organize your application in
    hierarchies with well-defined startup and dependency semantics,
  - twisted.cred
    A general credentials and authentication system that facilitates
    pluggable authentication backends,
  - twisted.enterprise
    Asynchronous database access, compatible with any Python DBAPI2.0
    modules,
  - twisted.internet
    Low-level asynchronous networking APIs that allow you to define
    your own protocols that run over certain transports,
  - twisted.manhole
    A tool for remote debugging of your services which gives you a
    Python interactive interpreter,
  - twisted.protocols
    Basic protocol implementations and helpers for your own protocol
    implementations,
  - twisted.python
    A large set of utilities for Python tricks, reflection, text
    processing, and anything else,
  - twisted.spread
    A secure, fast remote object system,
  - twisted.trial
    A unit testing framework that integrates well with Twisted-based code.

  Twisted supports integration of the Win32, Tk, GTK+ and GTK+ 2 event loops
  with its main event loop.  There is experimental support for Mac OS X and
  wxPython event loop integration, which you use at your peril.

  For more information, visit http://www.twistedmatrix.com, or join the list
  at http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

  There are many official Twisted subprojects, including clients and
  servers for web, mail, DNS, and more. You can find out more about
  these projects at http://twistedmatrix.com/trac/wiki/TwistedProjects


Installing
==========

  Instructions for installing this software are in INSTALL.

Unit Tests
==========


  See our unit tests run proving that the software is BugFree(TM):

   % trial twisted

  Some of these tests may fail if you
   * don't have the dependancies required for a particular subsystem installed,
   * have a firewall blocking some ports (or things like Multicast, which Linux
     NAT has shown itself to do), or
   * run them as root.


Documentation and Support
=========================

  Examples on how to use Twisted APIs are located in doc/core/examples; this
  might ease the learning curve a little bit, since all these files are kept
  as short as possible.  The file doc/core/howto/index.xhtml contains an index
  of all the core HOWTOs: this should be your starting point when looking for
  documentation.

  Help is available on the Twisted mailing list:

    http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

  There is also a very lively IRC channel, #twisted, on
  chat.freenode.net.


Copyright
=========

  All of the code in this distribution is Copyright (c) 2001-2014
  Twisted Matrix Laboratories.

  Twisted is made available under the MIT license. The included
  LICENSE file describes this in detail.


Warranty
========

  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
  EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
  TO THE USE OF THIS SOFTWARE IS WITH YOU.

  IN NO EVENT WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
  AND/OR REDISTRIBUTE THE LIBRARY, BE LIABLE TO YOU FOR ANY DAMAGES, EVEN IF
  SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
  DAMAGES.

  Again, see the included LICENSE file for specific legal details.

Twisted Conch 14.0.0

Twisted Conch depends on Twisted Core and on Python Crypto extensions
(<http://www.pycrypto.org>).

The pyasn1 module (<http://pyasn1.sourceforge.net/>) is also required.

gmpy (<http://code.google.com/p/gmpy/>) is strongly recommended to improve
performance.

Twisted Conch includes a couple simple GUI applications which depend on Tkinter.

Twisted Lore 14.0.0

Twisted Lore depends on Twisted and Twisted Web.

Twisted Mail 14.0.0

Twisted Mail depends on Twisted Core and (sometimes) Twisted Names.  For TLS
support, pyOpenSSL (<http://launchpad.net/pyopenssl>) is also required.  Aside
from protocol implementations, much of Twisted Mail also only runs on POSIX
platforms.

Twisted Names 14.0.0

Twisted Names depends on Twisted Core.

Twisted News 14.0.0

News depends on Twisted, and, if you want to use the moderation
features, Twisted Mail.

Twisted Pair 14.0.0: Very low-level networking functionality

Twisted Pair includes parsers for several datagram formats, including ethernet,
IP, and UDP.  It also offers low-level networking integration on Linux via tun
and tap devices.

Twisted Pair depends on Twisted Core.

To be able to run the Twisted Pair test suite as an unprivileged user, you need
to create a tunnel device owned by that user.  Likewise, to use Twisted Pair's
tuntap support as an unprivileged user, you must do the same.  See the
configuration howto for details.

THIS DIRECTORY AND ALL FILES INCLUDED ARE DEPRECATED.

These are the old zsh completion functions for Twisted commands... they used
to contain full completion functions, but now they've simply been replaced
by the current "stub" code that delegates completion control to Twisted.

This directory and included files need to remain for several years in order
to provide backwards-compatibility with an old version of the Twisted
stub function that was shipped with Zsh.

Twisted Runner 14.0.0

Twisted Runner depends on Twisted.

Twisted Core 14.0.0
===================

Twisted Core makes up the core parts of Twisted, including:

 * Networking support (twisted.internet)
 * Trial, the unit testing framework (twisted.trial)
 * AMP, the Asynchronous Messaging Protocol (twisted.protocols.amp)
 * Twisted Spread, a remote object system (twisted.spread)
 * Utility code (twisted.python)
 * Basic abstractions that multiple subprojects use
   (twisted.cred, twisted.application, twisted.plugin)
 * Database connectivity support (twisted.enterprise)
 * A few basic protocols and protocol abstractions (twisted.protocols)

Twisted Web 14.0.0

Twisted Web depends on Twisted Core.  pyOpenSSL
(<http://launchpad.net/pyopenssl>) is also required for HTTPS.  SOAPpy
(<http://pywebsvcs.sourceforge.net/>) is required for SOAP support.  For Quixote
resource templates, Quixote (<http://www.quixote.ca/>) is required.

Twisted Words 14.0.0

Twisted Words depends on Twisted Core and Twisted Web.  The Twisted Web
dependency is only necessary for MSN support.  MSN support also requires HTTPS,
and therefore pyOpenSSL (<http://launchpad.net/pyopenssl>).

